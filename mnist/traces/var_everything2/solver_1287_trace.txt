I0428 20:17:07.686386   804 caffe.cpp:218] Using GPUs 0
I0428 20:17:07.728240   804 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:08.244822   804 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1287.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:08.244989   804 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1287.prototxt
I0428 20:17:08.245328   804 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:08.245348   804 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:08.245437   804 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:17:08.245527   804 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:08.245659   804 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:08.245692   804 net.cpp:86] Creating Layer mnist
I0428 20:17:08.245704   804 net.cpp:382] mnist -> data
I0428 20:17:08.245734   804 net.cpp:382] mnist -> label
I0428 20:17:08.246937   804 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:08.249424   804 net.cpp:124] Setting up mnist
I0428 20:17:08.249445   804 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:08.249455   804 net.cpp:131] Top shape: 64 (64)
I0428 20:17:08.249462   804 net.cpp:139] Memory required for data: 200960
I0428 20:17:08.249474   804 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:08.249496   804 net.cpp:86] Creating Layer conv0
I0428 20:17:08.249506   804 net.cpp:408] conv0 <- data
I0428 20:17:08.249524   804 net.cpp:382] conv0 -> conv0
I0428 20:17:08.538205   804 net.cpp:124] Setting up conv0
I0428 20:17:08.538235   804 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:08.538242   804 net.cpp:139] Memory required for data: 7573760
I0428 20:17:08.538264   804 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:08.538282   804 net.cpp:86] Creating Layer pool0
I0428 20:17:08.538298   804 net.cpp:408] pool0 <- conv0
I0428 20:17:08.538310   804 net.cpp:382] pool0 -> pool0
I0428 20:17:08.538372   804 net.cpp:124] Setting up pool0
I0428 20:17:08.538383   804 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:08.538408   804 net.cpp:139] Memory required for data: 9416960
I0428 20:17:08.538414   804 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:08.538432   804 net.cpp:86] Creating Layer conv1
I0428 20:17:08.538440   804 net.cpp:408] conv1 <- pool0
I0428 20:17:08.538450   804 net.cpp:382] conv1 -> conv1
I0428 20:17:08.541419   804 net.cpp:124] Setting up conv1
I0428 20:17:08.541436   804 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:08.541443   804 net.cpp:139] Memory required for data: 9580800
I0428 20:17:08.541457   804 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:08.541470   804 net.cpp:86] Creating Layer pool1
I0428 20:17:08.541476   804 net.cpp:408] pool1 <- conv1
I0428 20:17:08.541486   804 net.cpp:382] pool1 -> pool1
I0428 20:17:08.541534   804 net.cpp:124] Setting up pool1
I0428 20:17:08.541544   804 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:08.541549   804 net.cpp:139] Memory required for data: 9621760
I0428 20:17:08.541555   804 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:08.541566   804 net.cpp:86] Creating Layer ip1
I0428 20:17:08.541573   804 net.cpp:408] ip1 <- pool1
I0428 20:17:08.541582   804 net.cpp:382] ip1 -> ip1
I0428 20:17:08.541705   804 net.cpp:124] Setting up ip1
I0428 20:17:08.541715   804 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:08.541720   804 net.cpp:139] Memory required for data: 9624320
I0428 20:17:08.541733   804 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:08.541746   804 net.cpp:86] Creating Layer relu1
I0428 20:17:08.541755   804 net.cpp:408] relu1 <- ip1
I0428 20:17:08.541764   804 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:08.541941   804 net.cpp:124] Setting up relu1
I0428 20:17:08.541952   804 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:08.541957   804 net.cpp:139] Memory required for data: 9626880
I0428 20:17:08.541963   804 layer_factory.hpp:77] Creating layer loss
I0428 20:17:08.541972   804 net.cpp:86] Creating Layer loss
I0428 20:17:08.541978   804 net.cpp:408] loss <- ip1
I0428 20:17:08.541985   804 net.cpp:408] loss <- label
I0428 20:17:08.541995   804 net.cpp:382] loss -> loss
I0428 20:17:08.542018   804 layer_factory.hpp:77] Creating layer loss
I0428 20:17:08.542858   804 net.cpp:124] Setting up loss
I0428 20:17:08.542873   804 net.cpp:131] Top shape: (1)
I0428 20:17:08.542879   804 net.cpp:134]     with loss weight 1
I0428 20:17:08.542901   804 net.cpp:139] Memory required for data: 9626884
I0428 20:17:08.542907   804 net.cpp:200] loss needs backward computation.
I0428 20:17:08.542914   804 net.cpp:200] relu1 needs backward computation.
I0428 20:17:08.542920   804 net.cpp:200] ip1 needs backward computation.
I0428 20:17:08.542927   804 net.cpp:200] pool1 needs backward computation.
I0428 20:17:08.542932   804 net.cpp:200] conv1 needs backward computation.
I0428 20:17:08.542937   804 net.cpp:200] pool0 needs backward computation.
I0428 20:17:08.542943   804 net.cpp:200] conv0 needs backward computation.
I0428 20:17:08.542949   804 net.cpp:202] mnist does not need backward computation.
I0428 20:17:08.542954   804 net.cpp:244] This network produces output loss
I0428 20:17:08.542968   804 net.cpp:257] Network initialization done.
I0428 20:17:08.543246   804 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1287.prototxt
I0428 20:17:08.543278   804 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:08.543362   804 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:17:08.543485   804 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:08.543546   804 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:08.543568   804 net.cpp:86] Creating Layer mnist
I0428 20:17:08.543577   804 net.cpp:382] mnist -> data
I0428 20:17:08.543591   804 net.cpp:382] mnist -> label
I0428 20:17:08.543715   804 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:08.545771   804 net.cpp:124] Setting up mnist
I0428 20:17:08.545789   804 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:08.545797   804 net.cpp:131] Top shape: 100 (100)
I0428 20:17:08.545819   804 net.cpp:139] Memory required for data: 314000
I0428 20:17:08.545825   804 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:08.545840   804 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:08.545846   804 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:08.545855   804 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:08.545868   804 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:08.545922   804 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:08.545933   804 net.cpp:131] Top shape: 100 (100)
I0428 20:17:08.545939   804 net.cpp:131] Top shape: 100 (100)
I0428 20:17:08.545945   804 net.cpp:139] Memory required for data: 314800
I0428 20:17:08.545964   804 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:08.545979   804 net.cpp:86] Creating Layer conv0
I0428 20:17:08.545986   804 net.cpp:408] conv0 <- data
I0428 20:17:08.545995   804 net.cpp:382] conv0 -> conv0
I0428 20:17:08.546756   804 net.cpp:124] Setting up conv0
I0428 20:17:08.546771   804 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:08.546777   804 net.cpp:139] Memory required for data: 11834800
I0428 20:17:08.546792   804 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:08.546802   804 net.cpp:86] Creating Layer pool0
I0428 20:17:08.546808   804 net.cpp:408] pool0 <- conv0
I0428 20:17:08.546816   804 net.cpp:382] pool0 -> pool0
I0428 20:17:08.546860   804 net.cpp:124] Setting up pool0
I0428 20:17:08.546869   804 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:08.546875   804 net.cpp:139] Memory required for data: 14714800
I0428 20:17:08.546880   804 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:08.546892   804 net.cpp:86] Creating Layer conv1
I0428 20:17:08.546900   804 net.cpp:408] conv1 <- pool0
I0428 20:17:08.546910   804 net.cpp:382] conv1 -> conv1
I0428 20:17:08.548558   804 net.cpp:124] Setting up conv1
I0428 20:17:08.548574   804 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:08.548581   804 net.cpp:139] Memory required for data: 14970800
I0428 20:17:08.548595   804 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:08.548605   804 net.cpp:86] Creating Layer pool1
I0428 20:17:08.548624   804 net.cpp:408] pool1 <- conv1
I0428 20:17:08.548633   804 net.cpp:382] pool1 -> pool1
I0428 20:17:08.548681   804 net.cpp:124] Setting up pool1
I0428 20:17:08.548691   804 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:08.548696   804 net.cpp:139] Memory required for data: 15034800
I0428 20:17:08.548702   804 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:08.548712   804 net.cpp:86] Creating Layer ip1
I0428 20:17:08.548717   804 net.cpp:408] ip1 <- pool1
I0428 20:17:08.548725   804 net.cpp:382] ip1 -> ip1
I0428 20:17:08.548848   804 net.cpp:124] Setting up ip1
I0428 20:17:08.548859   804 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:08.548866   804 net.cpp:139] Memory required for data: 15038800
I0428 20:17:08.548879   804 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:08.548888   804 net.cpp:86] Creating Layer relu1
I0428 20:17:08.548895   804 net.cpp:408] relu1 <- ip1
I0428 20:17:08.548903   804 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:08.549738   804 net.cpp:124] Setting up relu1
I0428 20:17:08.549752   804 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:08.549758   804 net.cpp:139] Memory required for data: 15042800
I0428 20:17:08.549764   804 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:17:08.549775   804 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:17:08.549782   804 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:17:08.549790   804 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:17:08.549801   804 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:17:08.549845   804 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:17:08.549859   804 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:08.549865   804 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:08.549870   804 net.cpp:139] Memory required for data: 15050800
I0428 20:17:08.549876   804 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:08.549886   804 net.cpp:86] Creating Layer accuracy
I0428 20:17:08.549896   804 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:17:08.549903   804 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:08.549911   804 net.cpp:382] accuracy -> accuracy
I0428 20:17:08.549924   804 net.cpp:124] Setting up accuracy
I0428 20:17:08.549932   804 net.cpp:131] Top shape: (1)
I0428 20:17:08.549942   804 net.cpp:139] Memory required for data: 15050804
I0428 20:17:08.549947   804 layer_factory.hpp:77] Creating layer loss
I0428 20:17:08.549955   804 net.cpp:86] Creating Layer loss
I0428 20:17:08.549962   804 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:17:08.549968   804 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:08.549976   804 net.cpp:382] loss -> loss
I0428 20:17:08.549988   804 layer_factory.hpp:77] Creating layer loss
I0428 20:17:08.550232   804 net.cpp:124] Setting up loss
I0428 20:17:08.550245   804 net.cpp:131] Top shape: (1)
I0428 20:17:08.550251   804 net.cpp:134]     with loss weight 1
I0428 20:17:08.550261   804 net.cpp:139] Memory required for data: 15050808
I0428 20:17:08.550266   804 net.cpp:200] loss needs backward computation.
I0428 20:17:08.550273   804 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:08.550281   804 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:17:08.550285   804 net.cpp:200] relu1 needs backward computation.
I0428 20:17:08.550292   804 net.cpp:200] ip1 needs backward computation.
I0428 20:17:08.550297   804 net.cpp:200] pool1 needs backward computation.
I0428 20:17:08.550303   804 net.cpp:200] conv1 needs backward computation.
I0428 20:17:08.550309   804 net.cpp:200] pool0 needs backward computation.
I0428 20:17:08.550317   804 net.cpp:200] conv0 needs backward computation.
I0428 20:17:08.550323   804 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:08.550329   804 net.cpp:202] mnist does not need backward computation.
I0428 20:17:08.550334   804 net.cpp:244] This network produces output accuracy
I0428 20:17:08.550341   804 net.cpp:244] This network produces output loss
I0428 20:17:08.550371   804 net.cpp:257] Network initialization done.
I0428 20:17:08.550413   804 solver.cpp:56] Solver scaffolding done.
I0428 20:17:08.550648   804 caffe.cpp:248] Starting Optimization
I0428 20:17:08.550655   804 solver.cpp:273] Solving LeNet
I0428 20:17:08.550660   804 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:08.550812   804 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:08.557420   804 blocking_queue.cpp:49] Waiting for data
I0428 20:17:08.612933   811 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:08.613819   804 solver.cpp:398]     Test net output #0: accuracy = 0.0932
I0428 20:17:08.613839   804 solver.cpp:398]     Test net output #1: loss = 2.32511 (* 1 = 2.32511 loss)
I0428 20:17:08.618075   804 solver.cpp:219] Iteration 0 (0 iter/s, 0.0673812s/100 iters), loss = 2.31257
I0428 20:17:08.618101   804 solver.cpp:238]     Train net output #0: loss = 2.31257 (* 1 = 2.31257 loss)
I0428 20:17:08.618134   804 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:08.730398   804 solver.cpp:219] Iteration 100 (890.603 iter/s, 0.112283s/100 iters), loss = 0.291698
I0428 20:17:08.730458   804 solver.cpp:238]     Train net output #0: loss = 0.291698 (* 1 = 0.291698 loss)
I0428 20:17:08.730469   804 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:08.850162   804 solver.cpp:219] Iteration 200 (835.468 iter/s, 0.119693s/100 iters), loss = 0.189432
I0428 20:17:08.850214   804 solver.cpp:238]     Train net output #0: loss = 0.189432 (* 1 = 0.189432 loss)
I0428 20:17:08.850225   804 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:08.963991   804 solver.cpp:219] Iteration 300 (878.964 iter/s, 0.11377s/100 iters), loss = 0.174647
I0428 20:17:08.964035   804 solver.cpp:238]     Train net output #0: loss = 0.174647 (* 1 = 0.174647 loss)
I0428 20:17:08.964042   804 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:09.076200   804 solver.cpp:219] Iteration 400 (891.545 iter/s, 0.112165s/100 iters), loss = 0.143202
I0428 20:17:09.076244   804 solver.cpp:238]     Train net output #0: loss = 0.143202 (* 1 = 0.143202 loss)
I0428 20:17:09.076253   804 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:09.189362   804 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:09.264489   811 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:09.265175   804 solver.cpp:398]     Test net output #0: accuracy = 0.9621
I0428 20:17:09.265202   804 solver.cpp:398]     Test net output #1: loss = 0.125607 (* 1 = 0.125607 loss)
I0428 20:17:09.266335   804 solver.cpp:219] Iteration 500 (526.08 iter/s, 0.190085s/100 iters), loss = 0.239054
I0428 20:17:09.266386   804 solver.cpp:238]     Train net output #0: loss = 0.239054 (* 1 = 0.239054 loss)
I0428 20:17:09.266394   804 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:09.377545   804 solver.cpp:219] Iteration 600 (899.668 iter/s, 0.111152s/100 iters), loss = 0.0720475
I0428 20:17:09.377578   804 solver.cpp:238]     Train net output #0: loss = 0.0720476 (* 1 = 0.0720476 loss)
I0428 20:17:09.377586   804 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:09.488584   804 solver.cpp:219] Iteration 700 (900.947 iter/s, 0.110994s/100 iters), loss = 0.25328
I0428 20:17:09.488629   804 solver.cpp:238]     Train net output #0: loss = 0.25328 (* 1 = 0.25328 loss)
I0428 20:17:09.488637   804 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:09.600975   804 solver.cpp:219] Iteration 800 (890.204 iter/s, 0.112334s/100 iters), loss = 0.303318
I0428 20:17:09.601022   804 solver.cpp:238]     Train net output #0: loss = 0.303319 (* 1 = 0.303319 loss)
I0428 20:17:09.601030   804 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:09.714772   804 solver.cpp:219] Iteration 900 (879.112 iter/s, 0.113751s/100 iters), loss = 0.203778
I0428 20:17:09.714815   804 solver.cpp:238]     Train net output #0: loss = 0.203778 (* 1 = 0.203778 loss)
I0428 20:17:09.714823   804 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:09.752343   810 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:09.827873   804 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:09.828920   804 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:09.829706   804 solver.cpp:311] Iteration 1000, loss = 0.145215
I0428 20:17:09.829725   804 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:09.891764   811 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:09.893965   804 solver.cpp:398]     Test net output #0: accuracy = 0.9713
I0428 20:17:09.893986   804 solver.cpp:398]     Test net output #1: loss = 0.0907989 (* 1 = 0.0907989 loss)
I0428 20:17:09.894001   804 solver.cpp:316] Optimization Done.
I0428 20:17:09.894004   804 caffe.cpp:259] Optimization Done.
