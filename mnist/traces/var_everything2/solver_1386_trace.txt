I0428 20:21:32.100353  1778 caffe.cpp:218] Using GPUs 0
I0428 20:21:32.131844  1778 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:32.651195  1778 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1386.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:32.651330  1778 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1386.prototxt
I0428 20:21:32.651743  1778 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:32.651762  1778 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:32.651865  1778 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:32.651942  1778 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:32.652037  1778 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:32.652060  1778 net.cpp:86] Creating Layer mnist
I0428 20:21:32.652066  1778 net.cpp:382] mnist -> data
I0428 20:21:32.652087  1778 net.cpp:382] mnist -> label
I0428 20:21:32.653183  1778 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:32.655627  1778 net.cpp:124] Setting up mnist
I0428 20:21:32.655643  1778 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:32.655649  1778 net.cpp:131] Top shape: 64 (64)
I0428 20:21:32.655652  1778 net.cpp:139] Memory required for data: 200960
I0428 20:21:32.655659  1778 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:32.655699  1778 net.cpp:86] Creating Layer conv0
I0428 20:21:32.655720  1778 net.cpp:408] conv0 <- data
I0428 20:21:32.655732  1778 net.cpp:382] conv0 -> conv0
I0428 20:21:32.946959  1778 net.cpp:124] Setting up conv0
I0428 20:21:32.946990  1778 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:32.946995  1778 net.cpp:139] Memory required for data: 7573760
I0428 20:21:32.947012  1778 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:32.947028  1778 net.cpp:86] Creating Layer pool0
I0428 20:21:32.947032  1778 net.cpp:408] pool0 <- conv0
I0428 20:21:32.947038  1778 net.cpp:382] pool0 -> pool0
I0428 20:21:32.947094  1778 net.cpp:124] Setting up pool0
I0428 20:21:32.947101  1778 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:32.947104  1778 net.cpp:139] Memory required for data: 9416960
I0428 20:21:32.947108  1778 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:32.947121  1778 net.cpp:86] Creating Layer conv1
I0428 20:21:32.947125  1778 net.cpp:408] conv1 <- pool0
I0428 20:21:32.947131  1778 net.cpp:382] conv1 -> conv1
I0428 20:21:32.949724  1778 net.cpp:124] Setting up conv1
I0428 20:21:32.949743  1778 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:32.949746  1778 net.cpp:139] Memory required for data: 10236160
I0428 20:21:32.949757  1778 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:32.949766  1778 net.cpp:86] Creating Layer pool1
I0428 20:21:32.949771  1778 net.cpp:408] pool1 <- conv1
I0428 20:21:32.949779  1778 net.cpp:382] pool1 -> pool1
I0428 20:21:32.949821  1778 net.cpp:124] Setting up pool1
I0428 20:21:32.949828  1778 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:32.949831  1778 net.cpp:139] Memory required for data: 10440960
I0428 20:21:32.949836  1778 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:32.949844  1778 net.cpp:86] Creating Layer ip1
I0428 20:21:32.949847  1778 net.cpp:408] ip1 <- pool1
I0428 20:21:32.949853  1778 net.cpp:382] ip1 -> ip1
I0428 20:21:32.950105  1778 net.cpp:124] Setting up ip1
I0428 20:21:32.950115  1778 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:32.950119  1778 net.cpp:139] Memory required for data: 10447360
I0428 20:21:32.950127  1778 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:32.950134  1778 net.cpp:86] Creating Layer relu1
I0428 20:21:32.950139  1778 net.cpp:408] relu1 <- ip1
I0428 20:21:32.950143  1778 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:32.950347  1778 net.cpp:124] Setting up relu1
I0428 20:21:32.950357  1778 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:32.950361  1778 net.cpp:139] Memory required for data: 10453760
I0428 20:21:32.950366  1778 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:32.950373  1778 net.cpp:86] Creating Layer ip2
I0428 20:21:32.950377  1778 net.cpp:408] ip2 <- ip1
I0428 20:21:32.950382  1778 net.cpp:382] ip2 -> ip2
I0428 20:21:32.950500  1778 net.cpp:124] Setting up ip2
I0428 20:21:32.950510  1778 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:32.950512  1778 net.cpp:139] Memory required for data: 10456320
I0428 20:21:32.950520  1778 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:32.950526  1778 net.cpp:86] Creating Layer relu2
I0428 20:21:32.950529  1778 net.cpp:408] relu2 <- ip2
I0428 20:21:32.950534  1778 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:32.951395  1778 net.cpp:124] Setting up relu2
I0428 20:21:32.951411  1778 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:32.951414  1778 net.cpp:139] Memory required for data: 10458880
I0428 20:21:32.951418  1778 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:32.951428  1778 net.cpp:86] Creating Layer ip3
I0428 20:21:32.951432  1778 net.cpp:408] ip3 <- ip2
I0428 20:21:32.951439  1778 net.cpp:382] ip3 -> ip3
I0428 20:21:32.951565  1778 net.cpp:124] Setting up ip3
I0428 20:21:32.951573  1778 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:32.951577  1778 net.cpp:139] Memory required for data: 10461440
I0428 20:21:32.951586  1778 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:32.951593  1778 net.cpp:86] Creating Layer relu3
I0428 20:21:32.951596  1778 net.cpp:408] relu3 <- ip3
I0428 20:21:32.951601  1778 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:32.951809  1778 net.cpp:124] Setting up relu3
I0428 20:21:32.951819  1778 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:32.951823  1778 net.cpp:139] Memory required for data: 10464000
I0428 20:21:32.951828  1778 layer_factory.hpp:77] Creating layer loss
I0428 20:21:32.951835  1778 net.cpp:86] Creating Layer loss
I0428 20:21:32.951838  1778 net.cpp:408] loss <- ip3
I0428 20:21:32.951843  1778 net.cpp:408] loss <- label
I0428 20:21:32.951851  1778 net.cpp:382] loss -> loss
I0428 20:21:32.951870  1778 layer_factory.hpp:77] Creating layer loss
I0428 20:21:32.952145  1778 net.cpp:124] Setting up loss
I0428 20:21:32.952155  1778 net.cpp:131] Top shape: (1)
I0428 20:21:32.952158  1778 net.cpp:134]     with loss weight 1
I0428 20:21:32.952174  1778 net.cpp:139] Memory required for data: 10464004
I0428 20:21:32.952178  1778 net.cpp:200] loss needs backward computation.
I0428 20:21:32.952183  1778 net.cpp:200] relu3 needs backward computation.
I0428 20:21:32.952185  1778 net.cpp:200] ip3 needs backward computation.
I0428 20:21:32.952189  1778 net.cpp:200] relu2 needs backward computation.
I0428 20:21:32.952193  1778 net.cpp:200] ip2 needs backward computation.
I0428 20:21:32.952195  1778 net.cpp:200] relu1 needs backward computation.
I0428 20:21:32.952199  1778 net.cpp:200] ip1 needs backward computation.
I0428 20:21:32.952203  1778 net.cpp:200] pool1 needs backward computation.
I0428 20:21:32.952206  1778 net.cpp:200] conv1 needs backward computation.
I0428 20:21:32.952210  1778 net.cpp:200] pool0 needs backward computation.
I0428 20:21:32.952214  1778 net.cpp:200] conv0 needs backward computation.
I0428 20:21:32.952217  1778 net.cpp:202] mnist does not need backward computation.
I0428 20:21:32.952221  1778 net.cpp:244] This network produces output loss
I0428 20:21:32.952235  1778 net.cpp:257] Network initialization done.
I0428 20:21:32.952620  1778 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1386.prototxt
I0428 20:21:32.952652  1778 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:32.952762  1778 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:32.952872  1778 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:32.952926  1778 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:32.952940  1778 net.cpp:86] Creating Layer mnist
I0428 20:21:32.952950  1778 net.cpp:382] mnist -> data
I0428 20:21:32.952958  1778 net.cpp:382] mnist -> label
I0428 20:21:32.953063  1778 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:32.955497  1778 net.cpp:124] Setting up mnist
I0428 20:21:32.955513  1778 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:32.955538  1778 net.cpp:131] Top shape: 100 (100)
I0428 20:21:32.955541  1778 net.cpp:139] Memory required for data: 314000
I0428 20:21:32.955546  1778 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:32.955559  1778 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:32.955562  1778 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:32.955569  1778 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:32.955575  1778 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:32.955683  1778 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:32.955693  1778 net.cpp:131] Top shape: 100 (100)
I0428 20:21:32.955698  1778 net.cpp:131] Top shape: 100 (100)
I0428 20:21:32.955700  1778 net.cpp:139] Memory required for data: 314800
I0428 20:21:32.955704  1778 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:32.955715  1778 net.cpp:86] Creating Layer conv0
I0428 20:21:32.955719  1778 net.cpp:408] conv0 <- data
I0428 20:21:32.955727  1778 net.cpp:382] conv0 -> conv0
I0428 20:21:32.957672  1778 net.cpp:124] Setting up conv0
I0428 20:21:32.957690  1778 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:32.957693  1778 net.cpp:139] Memory required for data: 11834800
I0428 20:21:32.957705  1778 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:32.957715  1778 net.cpp:86] Creating Layer pool0
I0428 20:21:32.957718  1778 net.cpp:408] pool0 <- conv0
I0428 20:21:32.957725  1778 net.cpp:382] pool0 -> pool0
I0428 20:21:32.957768  1778 net.cpp:124] Setting up pool0
I0428 20:21:32.957774  1778 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:32.957778  1778 net.cpp:139] Memory required for data: 14714800
I0428 20:21:32.957782  1778 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:32.957792  1778 net.cpp:86] Creating Layer conv1
I0428 20:21:32.957797  1778 net.cpp:408] conv1 <- pool0
I0428 20:21:32.957803  1778 net.cpp:382] conv1 -> conv1
I0428 20:21:32.960011  1778 net.cpp:124] Setting up conv1
I0428 20:21:32.960028  1778 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:32.960032  1778 net.cpp:139] Memory required for data: 15994800
I0428 20:21:32.960043  1778 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:32.960050  1778 net.cpp:86] Creating Layer pool1
I0428 20:21:32.960054  1778 net.cpp:408] pool1 <- conv1
I0428 20:21:32.960062  1778 net.cpp:382] pool1 -> pool1
I0428 20:21:32.960106  1778 net.cpp:124] Setting up pool1
I0428 20:21:32.960113  1778 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:32.960116  1778 net.cpp:139] Memory required for data: 16314800
I0428 20:21:32.960120  1778 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:32.960129  1778 net.cpp:86] Creating Layer ip1
I0428 20:21:32.960132  1778 net.cpp:408] ip1 <- pool1
I0428 20:21:32.960139  1778 net.cpp:382] ip1 -> ip1
I0428 20:21:32.960394  1778 net.cpp:124] Setting up ip1
I0428 20:21:32.960403  1778 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:32.960420  1778 net.cpp:139] Memory required for data: 16324800
I0428 20:21:32.960430  1778 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:32.960438  1778 net.cpp:86] Creating Layer relu1
I0428 20:21:32.960443  1778 net.cpp:408] relu1 <- ip1
I0428 20:21:32.960448  1778 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:32.960646  1778 net.cpp:124] Setting up relu1
I0428 20:21:32.960659  1778 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:32.960662  1778 net.cpp:139] Memory required for data: 16334800
I0428 20:21:32.960665  1778 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:32.960674  1778 net.cpp:86] Creating Layer ip2
I0428 20:21:32.960677  1778 net.cpp:408] ip2 <- ip1
I0428 20:21:32.960687  1778 net.cpp:382] ip2 -> ip2
I0428 20:21:32.960805  1778 net.cpp:124] Setting up ip2
I0428 20:21:32.960831  1778 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:32.960835  1778 net.cpp:139] Memory required for data: 16338800
I0428 20:21:32.960842  1778 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:32.960856  1778 net.cpp:86] Creating Layer relu2
I0428 20:21:32.960860  1778 net.cpp:408] relu2 <- ip2
I0428 20:21:32.960871  1778 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:32.961057  1778 net.cpp:124] Setting up relu2
I0428 20:21:32.961067  1778 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:32.961071  1778 net.cpp:139] Memory required for data: 16342800
I0428 20:21:32.961074  1778 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:32.961082  1778 net.cpp:86] Creating Layer ip3
I0428 20:21:32.961086  1778 net.cpp:408] ip3 <- ip2
I0428 20:21:32.961093  1778 net.cpp:382] ip3 -> ip3
I0428 20:21:32.961220  1778 net.cpp:124] Setting up ip3
I0428 20:21:32.961227  1778 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:32.961231  1778 net.cpp:139] Memory required for data: 16346800
I0428 20:21:32.961246  1778 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:32.961252  1778 net.cpp:86] Creating Layer relu3
I0428 20:21:32.961256  1778 net.cpp:408] relu3 <- ip3
I0428 20:21:32.961262  1778 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:32.962205  1778 net.cpp:124] Setting up relu3
I0428 20:21:32.962219  1778 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:32.962224  1778 net.cpp:139] Memory required for data: 16350800
I0428 20:21:32.962229  1778 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:32.962234  1778 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:32.962239  1778 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:32.962245  1778 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:32.962260  1778 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:32.962343  1778 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:32.962353  1778 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:32.962358  1778 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:32.962362  1778 net.cpp:139] Memory required for data: 16358800
I0428 20:21:32.962364  1778 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:32.962371  1778 net.cpp:86] Creating Layer accuracy
I0428 20:21:32.962374  1778 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:32.962380  1778 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:32.962391  1778 net.cpp:382] accuracy -> accuracy
I0428 20:21:32.962399  1778 net.cpp:124] Setting up accuracy
I0428 20:21:32.962404  1778 net.cpp:131] Top shape: (1)
I0428 20:21:32.962407  1778 net.cpp:139] Memory required for data: 16358804
I0428 20:21:32.962410  1778 layer_factory.hpp:77] Creating layer loss
I0428 20:21:32.962417  1778 net.cpp:86] Creating Layer loss
I0428 20:21:32.962421  1778 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:32.962425  1778 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:32.962430  1778 net.cpp:382] loss -> loss
I0428 20:21:32.962436  1778 layer_factory.hpp:77] Creating layer loss
I0428 20:21:32.962736  1778 net.cpp:124] Setting up loss
I0428 20:21:32.962748  1778 net.cpp:131] Top shape: (1)
I0428 20:21:32.962750  1778 net.cpp:134]     with loss weight 1
I0428 20:21:32.962769  1778 net.cpp:139] Memory required for data: 16358808
I0428 20:21:32.962774  1778 net.cpp:200] loss needs backward computation.
I0428 20:21:32.962779  1778 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:32.962787  1778 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:32.962791  1778 net.cpp:200] relu3 needs backward computation.
I0428 20:21:32.962795  1778 net.cpp:200] ip3 needs backward computation.
I0428 20:21:32.962798  1778 net.cpp:200] relu2 needs backward computation.
I0428 20:21:32.962801  1778 net.cpp:200] ip2 needs backward computation.
I0428 20:21:32.962805  1778 net.cpp:200] relu1 needs backward computation.
I0428 20:21:32.962808  1778 net.cpp:200] ip1 needs backward computation.
I0428 20:21:32.962812  1778 net.cpp:200] pool1 needs backward computation.
I0428 20:21:32.962822  1778 net.cpp:200] conv1 needs backward computation.
I0428 20:21:32.962827  1778 net.cpp:200] pool0 needs backward computation.
I0428 20:21:32.962831  1778 net.cpp:200] conv0 needs backward computation.
I0428 20:21:32.962842  1778 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:32.962846  1778 net.cpp:202] mnist does not need backward computation.
I0428 20:21:32.962849  1778 net.cpp:244] This network produces output accuracy
I0428 20:21:32.962854  1778 net.cpp:244] This network produces output loss
I0428 20:21:32.962868  1778 net.cpp:257] Network initialization done.
I0428 20:21:32.962918  1778 solver.cpp:56] Solver scaffolding done.
I0428 20:21:32.963304  1778 caffe.cpp:248] Starting Optimization
I0428 20:21:32.963311  1778 solver.cpp:273] Solving LeNet
I0428 20:21:32.963315  1778 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:32.963533  1778 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:32.971689  1778 blocking_queue.cpp:49] Waiting for data
I0428 20:21:33.045577  1785 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:33.046721  1778 solver.cpp:398]     Test net output #0: accuracy = 0.0849
I0428 20:21:33.046746  1778 solver.cpp:398]     Test net output #1: loss = 2.35074 (* 1 = 2.35074 loss)
I0428 20:21:33.051748  1778 solver.cpp:219] Iteration 0 (0 iter/s, 0.0883989s/100 iters), loss = 2.34105
I0428 20:21:33.051776  1778 solver.cpp:238]     Train net output #0: loss = 2.34105 (* 1 = 2.34105 loss)
I0428 20:21:33.051790  1778 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:33.216512  1778 solver.cpp:219] Iteration 100 (607.1 iter/s, 0.164718s/100 iters), loss = 0.445044
I0428 20:21:33.216547  1778 solver.cpp:238]     Train net output #0: loss = 0.445044 (* 1 = 0.445044 loss)
I0428 20:21:33.216554  1778 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:33.382046  1778 solver.cpp:219] Iteration 200 (604.294 iter/s, 0.165482s/100 iters), loss = 0.202032
I0428 20:21:33.382083  1778 solver.cpp:238]     Train net output #0: loss = 0.202032 (* 1 = 0.202032 loss)
I0428 20:21:33.382091  1778 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:33.549262  1778 solver.cpp:219] Iteration 300 (598.223 iter/s, 0.167162s/100 iters), loss = 0.248599
I0428 20:21:33.549302  1778 solver.cpp:238]     Train net output #0: loss = 0.248599 (* 1 = 0.248599 loss)
I0428 20:21:33.549310  1778 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:33.712231  1778 solver.cpp:219] Iteration 400 (613.812 iter/s, 0.162916s/100 iters), loss = 0.126533
I0428 20:21:33.712266  1778 solver.cpp:238]     Train net output #0: loss = 0.126533 (* 1 = 0.126533 loss)
I0428 20:21:33.712275  1778 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:33.874768  1778 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:33.955521  1785 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:33.956554  1778 solver.cpp:398]     Test net output #0: accuracy = 0.962
I0428 20:21:33.956579  1778 solver.cpp:398]     Test net output #1: loss = 0.122405 (* 1 = 0.122405 loss)
I0428 20:21:33.958200  1778 solver.cpp:219] Iteration 500 (406.638 iter/s, 0.245919s/100 iters), loss = 0.0312786
I0428 20:21:33.958247  1778 solver.cpp:238]     Train net output #0: loss = 0.0312786 (* 1 = 0.0312786 loss)
I0428 20:21:33.958256  1778 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:34.122001  1778 solver.cpp:219] Iteration 600 (610.733 iter/s, 0.163738s/100 iters), loss = 0.121867
I0428 20:21:34.122035  1778 solver.cpp:238]     Train net output #0: loss = 0.121867 (* 1 = 0.121867 loss)
I0428 20:21:34.122042  1778 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:34.284123  1778 solver.cpp:219] Iteration 700 (617 iter/s, 0.162075s/100 iters), loss = 0.0886625
I0428 20:21:34.284162  1778 solver.cpp:238]     Train net output #0: loss = 0.0886625 (* 1 = 0.0886625 loss)
I0428 20:21:34.284169  1778 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:34.444862  1778 solver.cpp:219] Iteration 800 (622.328 iter/s, 0.160687s/100 iters), loss = 0.22548
I0428 20:21:34.444895  1778 solver.cpp:238]     Train net output #0: loss = 0.22548 (* 1 = 0.22548 loss)
I0428 20:21:34.444902  1778 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:34.604701  1778 solver.cpp:219] Iteration 900 (625.809 iter/s, 0.159793s/100 iters), loss = 0.138474
I0428 20:21:34.604733  1778 solver.cpp:238]     Train net output #0: loss = 0.138474 (* 1 = 0.138474 loss)
I0428 20:21:34.604742  1778 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:34.658699  1784 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:34.765753  1778 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:34.768103  1778 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:34.769431  1778 solver.cpp:311] Iteration 1000, loss = 0.0774466
I0428 20:21:34.769449  1778 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:34.848392  1785 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:34.849355  1778 solver.cpp:398]     Test net output #0: accuracy = 0.9786
I0428 20:21:34.849375  1778 solver.cpp:398]     Test net output #1: loss = 0.0713499 (* 1 = 0.0713499 loss)
I0428 20:21:34.849385  1778 solver.cpp:316] Optimization Done.
I0428 20:21:34.849392  1778 caffe.cpp:259] Optimization Done.
