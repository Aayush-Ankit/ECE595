I0428 20:31:36.747772  3980 caffe.cpp:218] Using GPUs 0
I0428 20:31:36.781920  3980 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:37.258846  3980 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1558.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:37.258973  3980 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1558.prototxt
I0428 20:31:37.259302  3980 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:37.259317  3980 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:37.259390  3980 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:37.259449  3980 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:37.259529  3980 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:37.259548  3980 net.cpp:86] Creating Layer mnist
I0428 20:31:37.259553  3980 net.cpp:382] mnist -> data
I0428 20:31:37.259572  3980 net.cpp:382] mnist -> label
I0428 20:31:37.260571  3980 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:37.262961  3980 net.cpp:124] Setting up mnist
I0428 20:31:37.262994  3980 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:37.262998  3980 net.cpp:131] Top shape: 64 (64)
I0428 20:31:37.263001  3980 net.cpp:139] Memory required for data: 200960
I0428 20:31:37.263008  3980 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:37.263021  3980 net.cpp:86] Creating Layer conv0
I0428 20:31:37.263053  3980 net.cpp:408] conv0 <- data
I0428 20:31:37.263080  3980 net.cpp:382] conv0 -> conv0
I0428 20:31:37.494324  3980 net.cpp:124] Setting up conv0
I0428 20:31:37.494352  3980 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:37.494355  3980 net.cpp:139] Memory required for data: 14946560
I0428 20:31:37.494370  3980 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:37.494382  3980 net.cpp:86] Creating Layer pool0
I0428 20:31:37.494386  3980 net.cpp:408] pool0 <- conv0
I0428 20:31:37.494391  3980 net.cpp:382] pool0 -> pool0
I0428 20:31:37.494449  3980 net.cpp:124] Setting up pool0
I0428 20:31:37.494454  3980 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:37.494457  3980 net.cpp:139] Memory required for data: 18632960
I0428 20:31:37.494460  3980 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:37.494470  3980 net.cpp:86] Creating Layer conv1
I0428 20:31:37.494473  3980 net.cpp:408] conv1 <- pool0
I0428 20:31:37.494478  3980 net.cpp:382] conv1 -> conv1
I0428 20:31:37.496469  3980 net.cpp:124] Setting up conv1
I0428 20:31:37.496498  3980 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:37.496502  3980 net.cpp:139] Memory required for data: 18796800
I0428 20:31:37.496511  3980 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:37.496520  3980 net.cpp:86] Creating Layer pool1
I0428 20:31:37.496525  3980 net.cpp:408] pool1 <- conv1
I0428 20:31:37.496529  3980 net.cpp:382] pool1 -> pool1
I0428 20:31:37.496577  3980 net.cpp:124] Setting up pool1
I0428 20:31:37.496582  3980 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:37.496585  3980 net.cpp:139] Memory required for data: 18837760
I0428 20:31:37.496587  3980 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:37.496606  3980 net.cpp:86] Creating Layer ip1
I0428 20:31:37.496609  3980 net.cpp:408] ip1 <- pool1
I0428 20:31:37.496613  3980 net.cpp:382] ip1 -> ip1
I0428 20:31:37.497675  3980 net.cpp:124] Setting up ip1
I0428 20:31:37.497702  3980 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:37.497721  3980 net.cpp:139] Memory required for data: 18850560
I0428 20:31:37.497730  3980 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:37.497736  3980 net.cpp:86] Creating Layer relu1
I0428 20:31:37.497740  3980 net.cpp:408] relu1 <- ip1
I0428 20:31:37.497745  3980 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:37.497915  3980 net.cpp:124] Setting up relu1
I0428 20:31:37.497925  3980 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:37.497927  3980 net.cpp:139] Memory required for data: 18863360
I0428 20:31:37.497931  3980 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:37.497937  3980 net.cpp:86] Creating Layer ip2
I0428 20:31:37.497941  3980 net.cpp:408] ip2 <- ip1
I0428 20:31:37.497961  3980 net.cpp:382] ip2 -> ip2
I0428 20:31:37.498080  3980 net.cpp:124] Setting up ip2
I0428 20:31:37.498085  3980 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:37.498088  3980 net.cpp:139] Memory required for data: 18876160
I0428 20:31:37.498095  3980 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:37.498100  3980 net.cpp:86] Creating Layer relu2
I0428 20:31:37.498103  3980 net.cpp:408] relu2 <- ip2
I0428 20:31:37.498107  3980 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:37.498903  3980 net.cpp:124] Setting up relu2
I0428 20:31:37.498915  3980 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:37.498934  3980 net.cpp:139] Memory required for data: 18888960
I0428 20:31:37.498939  3980 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:37.498944  3980 net.cpp:86] Creating Layer ip3
I0428 20:31:37.498949  3980 net.cpp:408] ip3 <- ip2
I0428 20:31:37.498967  3980 net.cpp:382] ip3 -> ip3
I0428 20:31:37.499079  3980 net.cpp:124] Setting up ip3
I0428 20:31:37.499086  3980 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:37.499089  3980 net.cpp:139] Memory required for data: 18891520
I0428 20:31:37.499097  3980 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:37.499102  3980 net.cpp:86] Creating Layer relu3
I0428 20:31:37.499104  3980 net.cpp:408] relu3 <- ip3
I0428 20:31:37.499109  3980 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:37.499289  3980 net.cpp:124] Setting up relu3
I0428 20:31:37.499296  3980 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:37.499300  3980 net.cpp:139] Memory required for data: 18894080
I0428 20:31:37.499303  3980 layer_factory.hpp:77] Creating layer loss
I0428 20:31:37.499313  3980 net.cpp:86] Creating Layer loss
I0428 20:31:37.499317  3980 net.cpp:408] loss <- ip3
I0428 20:31:37.499321  3980 net.cpp:408] loss <- label
I0428 20:31:37.499326  3980 net.cpp:382] loss -> loss
I0428 20:31:37.499339  3980 layer_factory.hpp:77] Creating layer loss
I0428 20:31:37.499588  3980 net.cpp:124] Setting up loss
I0428 20:31:37.499596  3980 net.cpp:131] Top shape: (1)
I0428 20:31:37.499600  3980 net.cpp:134]     with loss weight 1
I0428 20:31:37.499614  3980 net.cpp:139] Memory required for data: 18894084
I0428 20:31:37.499616  3980 net.cpp:200] loss needs backward computation.
I0428 20:31:37.499620  3980 net.cpp:200] relu3 needs backward computation.
I0428 20:31:37.499622  3980 net.cpp:200] ip3 needs backward computation.
I0428 20:31:37.499625  3980 net.cpp:200] relu2 needs backward computation.
I0428 20:31:37.499629  3980 net.cpp:200] ip2 needs backward computation.
I0428 20:31:37.499631  3980 net.cpp:200] relu1 needs backward computation.
I0428 20:31:37.499634  3980 net.cpp:200] ip1 needs backward computation.
I0428 20:31:37.499652  3980 net.cpp:200] pool1 needs backward computation.
I0428 20:31:37.499655  3980 net.cpp:200] conv1 needs backward computation.
I0428 20:31:37.499658  3980 net.cpp:200] pool0 needs backward computation.
I0428 20:31:37.499661  3980 net.cpp:200] conv0 needs backward computation.
I0428 20:31:37.499665  3980 net.cpp:202] mnist does not need backward computation.
I0428 20:31:37.499667  3980 net.cpp:244] This network produces output loss
I0428 20:31:37.499676  3980 net.cpp:257] Network initialization done.
I0428 20:31:37.500092  3980 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1558.prototxt
I0428 20:31:37.500134  3980 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:37.500223  3980 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:37.500314  3980 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:37.500370  3980 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:37.500382  3980 net.cpp:86] Creating Layer mnist
I0428 20:31:37.500386  3980 net.cpp:382] mnist -> data
I0428 20:31:37.500394  3980 net.cpp:382] mnist -> label
I0428 20:31:37.500475  3980 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:37.502502  3980 net.cpp:124] Setting up mnist
I0428 20:31:37.502532  3980 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:37.502552  3980 net.cpp:131] Top shape: 100 (100)
I0428 20:31:37.502555  3980 net.cpp:139] Memory required for data: 314000
I0428 20:31:37.502559  3980 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:37.502566  3980 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:37.502584  3980 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:37.502588  3980 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:37.502595  3980 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:37.502651  3980 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:37.502656  3980 net.cpp:131] Top shape: 100 (100)
I0428 20:31:37.502660  3980 net.cpp:131] Top shape: 100 (100)
I0428 20:31:37.502662  3980 net.cpp:139] Memory required for data: 314800
I0428 20:31:37.502665  3980 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:37.502673  3980 net.cpp:86] Creating Layer conv0
I0428 20:31:37.502677  3980 net.cpp:408] conv0 <- data
I0428 20:31:37.502682  3980 net.cpp:382] conv0 -> conv0
I0428 20:31:37.504408  3980 net.cpp:124] Setting up conv0
I0428 20:31:37.504436  3980 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:37.504441  3980 net.cpp:139] Memory required for data: 23354800
I0428 20:31:37.504449  3980 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:37.504456  3980 net.cpp:86] Creating Layer pool0
I0428 20:31:37.504458  3980 net.cpp:408] pool0 <- conv0
I0428 20:31:37.504462  3980 net.cpp:382] pool0 -> pool0
I0428 20:31:37.504497  3980 net.cpp:124] Setting up pool0
I0428 20:31:37.504501  3980 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:37.504504  3980 net.cpp:139] Memory required for data: 29114800
I0428 20:31:37.504506  3980 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:37.504514  3980 net.cpp:86] Creating Layer conv1
I0428 20:31:37.504518  3980 net.cpp:408] conv1 <- pool0
I0428 20:31:37.504523  3980 net.cpp:382] conv1 -> conv1
I0428 20:31:37.506342  3980 net.cpp:124] Setting up conv1
I0428 20:31:37.506372  3980 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:37.506376  3980 net.cpp:139] Memory required for data: 29370800
I0428 20:31:37.506386  3980 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:37.506393  3980 net.cpp:86] Creating Layer pool1
I0428 20:31:37.506398  3980 net.cpp:408] pool1 <- conv1
I0428 20:31:37.506404  3980 net.cpp:382] pool1 -> pool1
I0428 20:31:37.506441  3980 net.cpp:124] Setting up pool1
I0428 20:31:37.506448  3980 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:37.506450  3980 net.cpp:139] Memory required for data: 29434800
I0428 20:31:37.506453  3980 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:37.506459  3980 net.cpp:86] Creating Layer ip1
I0428 20:31:37.506464  3980 net.cpp:408] ip1 <- pool1
I0428 20:31:37.506469  3980 net.cpp:382] ip1 -> ip1
I0428 20:31:37.506642  3980 net.cpp:124] Setting up ip1
I0428 20:31:37.506660  3980 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:37.506664  3980 net.cpp:139] Memory required for data: 29454800
I0428 20:31:37.506671  3980 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:37.506677  3980 net.cpp:86] Creating Layer relu1
I0428 20:31:37.506680  3980 net.cpp:408] relu1 <- ip1
I0428 20:31:37.506685  3980 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:37.506855  3980 net.cpp:124] Setting up relu1
I0428 20:31:37.506863  3980 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:37.506866  3980 net.cpp:139] Memory required for data: 29474800
I0428 20:31:37.506870  3980 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:37.506877  3980 net.cpp:86] Creating Layer ip2
I0428 20:31:37.506880  3980 net.cpp:408] ip2 <- ip1
I0428 20:31:37.506886  3980 net.cpp:382] ip2 -> ip2
I0428 20:31:37.507000  3980 net.cpp:124] Setting up ip2
I0428 20:31:37.507007  3980 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:37.507025  3980 net.cpp:139] Memory required for data: 29494800
I0428 20:31:37.507030  3980 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:37.507035  3980 net.cpp:86] Creating Layer relu2
I0428 20:31:37.507038  3980 net.cpp:408] relu2 <- ip2
I0428 20:31:37.507042  3980 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:37.507303  3980 net.cpp:124] Setting up relu2
I0428 20:31:37.507313  3980 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:37.507316  3980 net.cpp:139] Memory required for data: 29514800
I0428 20:31:37.507334  3980 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:37.507340  3980 net.cpp:86] Creating Layer ip3
I0428 20:31:37.507344  3980 net.cpp:408] ip3 <- ip2
I0428 20:31:37.507349  3980 net.cpp:382] ip3 -> ip3
I0428 20:31:37.507475  3980 net.cpp:124] Setting up ip3
I0428 20:31:37.507484  3980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:37.507488  3980 net.cpp:139] Memory required for data: 29518800
I0428 20:31:37.507496  3980 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:37.507503  3980 net.cpp:86] Creating Layer relu3
I0428 20:31:37.507505  3980 net.cpp:408] relu3 <- ip3
I0428 20:31:37.507509  3980 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:37.508389  3980 net.cpp:124] Setting up relu3
I0428 20:31:37.508400  3980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:37.508419  3980 net.cpp:139] Memory required for data: 29522800
I0428 20:31:37.508422  3980 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:37.508427  3980 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:37.508430  3980 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:37.508436  3980 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:37.508441  3980 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:37.508479  3980 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:37.508484  3980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:37.508487  3980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:37.508491  3980 net.cpp:139] Memory required for data: 29530800
I0428 20:31:37.508493  3980 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:37.508498  3980 net.cpp:86] Creating Layer accuracy
I0428 20:31:37.508502  3980 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:37.508505  3980 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:37.508510  3980 net.cpp:382] accuracy -> accuracy
I0428 20:31:37.508517  3980 net.cpp:124] Setting up accuracy
I0428 20:31:37.508520  3980 net.cpp:131] Top shape: (1)
I0428 20:31:37.508523  3980 net.cpp:139] Memory required for data: 29530804
I0428 20:31:37.508527  3980 layer_factory.hpp:77] Creating layer loss
I0428 20:31:37.508530  3980 net.cpp:86] Creating Layer loss
I0428 20:31:37.508533  3980 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:37.508538  3980 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:37.508541  3980 net.cpp:382] loss -> loss
I0428 20:31:37.508548  3980 layer_factory.hpp:77] Creating layer loss
I0428 20:31:37.508848  3980 net.cpp:124] Setting up loss
I0428 20:31:37.508859  3980 net.cpp:131] Top shape: (1)
I0428 20:31:37.508863  3980 net.cpp:134]     with loss weight 1
I0428 20:31:37.508880  3980 net.cpp:139] Memory required for data: 29530808
I0428 20:31:37.508884  3980 net.cpp:200] loss needs backward computation.
I0428 20:31:37.508888  3980 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:37.508893  3980 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:37.508896  3980 net.cpp:200] relu3 needs backward computation.
I0428 20:31:37.508899  3980 net.cpp:200] ip3 needs backward computation.
I0428 20:31:37.508903  3980 net.cpp:200] relu2 needs backward computation.
I0428 20:31:37.508913  3980 net.cpp:200] ip2 needs backward computation.
I0428 20:31:37.508916  3980 net.cpp:200] relu1 needs backward computation.
I0428 20:31:37.508919  3980 net.cpp:200] ip1 needs backward computation.
I0428 20:31:37.508924  3980 net.cpp:200] pool1 needs backward computation.
I0428 20:31:37.508926  3980 net.cpp:200] conv1 needs backward computation.
I0428 20:31:37.508930  3980 net.cpp:200] pool0 needs backward computation.
I0428 20:31:37.508934  3980 net.cpp:200] conv0 needs backward computation.
I0428 20:31:37.508939  3980 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:37.508942  3980 net.cpp:202] mnist does not need backward computation.
I0428 20:31:37.508946  3980 net.cpp:244] This network produces output accuracy
I0428 20:31:37.508949  3980 net.cpp:244] This network produces output loss
I0428 20:31:37.508961  3980 net.cpp:257] Network initialization done.
I0428 20:31:37.509006  3980 solver.cpp:56] Solver scaffolding done.
I0428 20:31:37.509402  3980 caffe.cpp:248] Starting Optimization
I0428 20:31:37.509407  3980 solver.cpp:273] Solving LeNet
I0428 20:31:37.509410  3980 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:37.510298  3980 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:37.605669  3987 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:37.608127  3980 solver.cpp:398]     Test net output #0: accuracy = 0.1036
I0428 20:31:37.608161  3980 solver.cpp:398]     Test net output #1: loss = 2.30755 (* 1 = 2.30755 loss)
I0428 20:31:37.612537  3980 solver.cpp:219] Iteration 0 (-1.2217e-30 iter/s, 0.103082s/100 iters), loss = 2.30559
I0428 20:31:37.612576  3980 solver.cpp:238]     Train net output #0: loss = 2.30559 (* 1 = 2.30559 loss)
I0428 20:31:37.612587  3980 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:37.826920  3980 solver.cpp:219] Iteration 100 (466.552 iter/s, 0.214339s/100 iters), loss = 0.400973
I0428 20:31:37.826964  3980 solver.cpp:238]     Train net output #0: loss = 0.400973 (* 1 = 0.400973 loss)
I0428 20:31:37.826977  3980 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:38.047900  3980 solver.cpp:219] Iteration 200 (452.653 iter/s, 0.22092s/100 iters), loss = 0.189404
I0428 20:31:38.047946  3980 solver.cpp:238]     Train net output #0: loss = 0.189404 (* 1 = 0.189404 loss)
I0428 20:31:38.047958  3980 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:38.273668  3980 solver.cpp:219] Iteration 300 (443.059 iter/s, 0.225704s/100 iters), loss = 0.252014
I0428 20:31:38.273716  3980 solver.cpp:238]     Train net output #0: loss = 0.252014 (* 1 = 0.252014 loss)
I0428 20:31:38.273730  3980 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:38.499037  3980 solver.cpp:219] Iteration 400 (443.848 iter/s, 0.225303s/100 iters), loss = 0.125072
I0428 20:31:38.499085  3980 solver.cpp:238]     Train net output #0: loss = 0.125072 (* 1 = 0.125072 loss)
I0428 20:31:38.499097  3980 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:38.722147  3980 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:38.823511  3987 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:38.826107  3980 solver.cpp:398]     Test net output #0: accuracy = 0.9632
I0428 20:31:38.826135  3980 solver.cpp:398]     Test net output #1: loss = 0.1184 (* 1 = 0.1184 loss)
I0428 20:31:38.828099  3980 solver.cpp:219] Iteration 500 (303.954 iter/s, 0.328997s/100 iters), loss = 0.0705834
I0428 20:31:38.828127  3980 solver.cpp:238]     Train net output #0: loss = 0.0705832 (* 1 = 0.0705832 loss)
I0428 20:31:38.828153  3980 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:39.047543  3980 solver.cpp:219] Iteration 600 (455.797 iter/s, 0.219396s/100 iters), loss = 0.0933383
I0428 20:31:39.047586  3980 solver.cpp:238]     Train net output #0: loss = 0.0933381 (* 1 = 0.0933381 loss)
I0428 20:31:39.047597  3980 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:39.262249  3980 solver.cpp:219] Iteration 700 (465.884 iter/s, 0.214646s/100 iters), loss = 0.169405
I0428 20:31:39.262295  3980 solver.cpp:238]     Train net output #0: loss = 0.169405 (* 1 = 0.169405 loss)
I0428 20:31:39.262305  3980 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:39.487253  3980 solver.cpp:219] Iteration 800 (444.563 iter/s, 0.22494s/100 iters), loss = 0.280837
I0428 20:31:39.487308  3980 solver.cpp:238]     Train net output #0: loss = 0.280837 (* 1 = 0.280837 loss)
I0428 20:31:39.487323  3980 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:39.705096  3980 solver.cpp:219] Iteration 900 (459.207 iter/s, 0.217767s/100 iters), loss = 0.213367
I0428 20:31:39.705157  3980 solver.cpp:238]     Train net output #0: loss = 0.213367 (* 1 = 0.213367 loss)
I0428 20:31:39.705171  3980 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:39.782325  3986 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:39.939126  3980 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:39.941699  3980 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:39.943359  3980 solver.cpp:311] Iteration 1000, loss = 0.0909752
I0428 20:31:39.943393  3980 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:39.963541  3980 blocking_queue.cpp:49] Waiting for data
I0428 20:31:40.062551  3987 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:40.064268  3980 solver.cpp:398]     Test net output #0: accuracy = 0.976
I0428 20:31:40.064297  3980 solver.cpp:398]     Test net output #1: loss = 0.0764141 (* 1 = 0.0764141 loss)
I0428 20:31:40.064306  3980 solver.cpp:316] Optimization Done.
I0428 20:31:40.064311  3980 caffe.cpp:259] Optimization Done.
