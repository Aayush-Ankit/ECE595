I0428 19:58:33.300127 29003 caffe.cpp:218] Using GPUs 0
I0428 19:58:33.330096 29003 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:33.775789 29003 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test822.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:33.775936 29003 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test822.prototxt
I0428 19:58:33.776268 29003 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:33.776298 29003 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:33.776402 29003 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:33.776466 29003 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:33.776551 29003 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:33.776569 29003 net.cpp:86] Creating Layer mnist
I0428 19:58:33.776576 29003 net.cpp:382] mnist -> data
I0428 19:58:33.776595 29003 net.cpp:382] mnist -> label
I0428 19:58:33.777655 29003 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:33.779836 29003 net.cpp:124] Setting up mnist
I0428 19:58:33.779850 29003 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:33.779855 29003 net.cpp:131] Top shape: 64 (64)
I0428 19:58:33.779858 29003 net.cpp:139] Memory required for data: 200960
I0428 19:58:33.779863 29003 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:33.779877 29003 net.cpp:86] Creating Layer conv0
I0428 19:58:33.779881 29003 net.cpp:408] conv0 <- data
I0428 19:58:33.779892 29003 net.cpp:382] conv0 -> conv0
I0428 19:58:34.015987 29003 net.cpp:124] Setting up conv0
I0428 19:58:34.016031 29003 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:34.016034 29003 net.cpp:139] Memory required for data: 1675520
I0428 19:58:34.016067 29003 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:34.016094 29003 net.cpp:86] Creating Layer pool0
I0428 19:58:34.016098 29003 net.cpp:408] pool0 <- conv0
I0428 19:58:34.016103 29003 net.cpp:382] pool0 -> pool0
I0428 19:58:34.016149 29003 net.cpp:124] Setting up pool0
I0428 19:58:34.016158 29003 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:34.016161 29003 net.cpp:139] Memory required for data: 2044160
I0428 19:58:34.016165 29003 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:34.016175 29003 net.cpp:86] Creating Layer conv1
I0428 19:58:34.016177 29003 net.cpp:408] conv1 <- pool0
I0428 19:58:34.016182 29003 net.cpp:382] conv1 -> conv1
I0428 19:58:34.018935 29003 net.cpp:124] Setting up conv1
I0428 19:58:34.018965 29003 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:34.018967 29003 net.cpp:139] Memory required for data: 2208000
I0428 19:58:34.018975 29003 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:34.018983 29003 net.cpp:86] Creating Layer pool1
I0428 19:58:34.018986 29003 net.cpp:408] pool1 <- conv1
I0428 19:58:34.018991 29003 net.cpp:382] pool1 -> pool1
I0428 19:58:34.019042 29003 net.cpp:124] Setting up pool1
I0428 19:58:34.019047 29003 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:34.019049 29003 net.cpp:139] Memory required for data: 2248960
I0428 19:58:34.019052 29003 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:34.019058 29003 net.cpp:86] Creating Layer ip1
I0428 19:58:34.019062 29003 net.cpp:408] ip1 <- pool1
I0428 19:58:34.019067 29003 net.cpp:382] ip1 -> ip1
I0428 19:58:34.019179 29003 net.cpp:124] Setting up ip1
I0428 19:58:34.019187 29003 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:34.019191 29003 net.cpp:139] Memory required for data: 2251520
I0428 19:58:34.019198 29003 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:34.019204 29003 net.cpp:86] Creating Layer relu1
I0428 19:58:34.019207 29003 net.cpp:408] relu1 <- ip1
I0428 19:58:34.019212 29003 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:34.019371 29003 net.cpp:124] Setting up relu1
I0428 19:58:34.019379 29003 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:34.019382 29003 net.cpp:139] Memory required for data: 2254080
I0428 19:58:34.019385 29003 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:34.019392 29003 net.cpp:86] Creating Layer ip2
I0428 19:58:34.019395 29003 net.cpp:408] ip2 <- ip1
I0428 19:58:34.019399 29003 net.cpp:382] ip2 -> ip2
I0428 19:58:34.019505 29003 net.cpp:124] Setting up ip2
I0428 19:58:34.019512 29003 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:34.019515 29003 net.cpp:139] Memory required for data: 2256640
I0428 19:58:34.019520 29003 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:34.019527 29003 net.cpp:86] Creating Layer relu2
I0428 19:58:34.019531 29003 net.cpp:408] relu2 <- ip2
I0428 19:58:34.019534 29003 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:34.020319 29003 net.cpp:124] Setting up relu2
I0428 19:58:34.020349 29003 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:34.020354 29003 net.cpp:139] Memory required for data: 2259200
I0428 19:58:34.020371 29003 layer_factory.hpp:77] Creating layer loss
I0428 19:58:34.020377 29003 net.cpp:86] Creating Layer loss
I0428 19:58:34.020381 29003 net.cpp:408] loss <- ip2
I0428 19:58:34.020385 29003 net.cpp:408] loss <- label
I0428 19:58:34.020390 29003 net.cpp:382] loss -> loss
I0428 19:58:34.020423 29003 layer_factory.hpp:77] Creating layer loss
I0428 19:58:34.020647 29003 net.cpp:124] Setting up loss
I0428 19:58:34.020655 29003 net.cpp:131] Top shape: (1)
I0428 19:58:34.020658 29003 net.cpp:134]     with loss weight 1
I0428 19:58:34.020671 29003 net.cpp:139] Memory required for data: 2259204
I0428 19:58:34.020674 29003 net.cpp:200] loss needs backward computation.
I0428 19:58:34.020678 29003 net.cpp:200] relu2 needs backward computation.
I0428 19:58:34.020680 29003 net.cpp:200] ip2 needs backward computation.
I0428 19:58:34.020684 29003 net.cpp:200] relu1 needs backward computation.
I0428 19:58:34.020686 29003 net.cpp:200] ip1 needs backward computation.
I0428 19:58:34.020699 29003 net.cpp:200] pool1 needs backward computation.
I0428 19:58:34.020701 29003 net.cpp:200] conv1 needs backward computation.
I0428 19:58:34.020704 29003 net.cpp:200] pool0 needs backward computation.
I0428 19:58:34.020707 29003 net.cpp:200] conv0 needs backward computation.
I0428 19:58:34.020710 29003 net.cpp:202] mnist does not need backward computation.
I0428 19:58:34.020714 29003 net.cpp:244] This network produces output loss
I0428 19:58:34.020738 29003 net.cpp:257] Network initialization done.
I0428 19:58:34.021091 29003 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test822.prototxt
I0428 19:58:34.021144 29003 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:34.021255 29003 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:34.021330 29003 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:34.021389 29003 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:34.021404 29003 net.cpp:86] Creating Layer mnist
I0428 19:58:34.021409 29003 net.cpp:382] mnist -> data
I0428 19:58:34.021417 29003 net.cpp:382] mnist -> label
I0428 19:58:34.021507 29003 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:34.023382 29003 net.cpp:124] Setting up mnist
I0428 19:58:34.023425 29003 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:34.023430 29003 net.cpp:131] Top shape: 100 (100)
I0428 19:58:34.023433 29003 net.cpp:139] Memory required for data: 314000
I0428 19:58:34.023437 29003 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:34.023493 29003 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:34.023512 29003 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:34.023519 29003 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:34.023525 29003 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:34.023598 29003 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:34.023617 29003 net.cpp:131] Top shape: 100 (100)
I0428 19:58:34.023622 29003 net.cpp:131] Top shape: 100 (100)
I0428 19:58:34.023624 29003 net.cpp:139] Memory required for data: 314800
I0428 19:58:34.023627 29003 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:34.023636 29003 net.cpp:86] Creating Layer conv0
I0428 19:58:34.023640 29003 net.cpp:408] conv0 <- data
I0428 19:58:34.023648 29003 net.cpp:382] conv0 -> conv0
I0428 19:58:34.025432 29003 net.cpp:124] Setting up conv0
I0428 19:58:34.025447 29003 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:34.025450 29003 net.cpp:139] Memory required for data: 2618800
I0428 19:58:34.025460 29003 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:34.025465 29003 net.cpp:86] Creating Layer pool0
I0428 19:58:34.025483 29003 net.cpp:408] pool0 <- conv0
I0428 19:58:34.025490 29003 net.cpp:382] pool0 -> pool0
I0428 19:58:34.025524 29003 net.cpp:124] Setting up pool0
I0428 19:58:34.025529 29003 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:34.025532 29003 net.cpp:139] Memory required for data: 3194800
I0428 19:58:34.025534 29003 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:34.025545 29003 net.cpp:86] Creating Layer conv1
I0428 19:58:34.025548 29003 net.cpp:408] conv1 <- pool0
I0428 19:58:34.025553 29003 net.cpp:382] conv1 -> conv1
I0428 19:58:34.027668 29003 net.cpp:124] Setting up conv1
I0428 19:58:34.027683 29003 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:34.027693 29003 net.cpp:139] Memory required for data: 3450800
I0428 19:58:34.027717 29003 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:34.027724 29003 net.cpp:86] Creating Layer pool1
I0428 19:58:34.027732 29003 net.cpp:408] pool1 <- conv1
I0428 19:58:34.027739 29003 net.cpp:382] pool1 -> pool1
I0428 19:58:34.027777 29003 net.cpp:124] Setting up pool1
I0428 19:58:34.027791 29003 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:34.027794 29003 net.cpp:139] Memory required for data: 3514800
I0428 19:58:34.027796 29003 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:34.027804 29003 net.cpp:86] Creating Layer ip1
I0428 19:58:34.027807 29003 net.cpp:408] ip1 <- pool1
I0428 19:58:34.027813 29003 net.cpp:382] ip1 -> ip1
I0428 19:58:34.027962 29003 net.cpp:124] Setting up ip1
I0428 19:58:34.027971 29003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:34.027973 29003 net.cpp:139] Memory required for data: 3518800
I0428 19:58:34.027981 29003 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:34.028000 29003 net.cpp:86] Creating Layer relu1
I0428 19:58:34.028003 29003 net.cpp:408] relu1 <- ip1
I0428 19:58:34.028007 29003 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:34.028259 29003 net.cpp:124] Setting up relu1
I0428 19:58:34.028266 29003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:34.028270 29003 net.cpp:139] Memory required for data: 3522800
I0428 19:58:34.028273 29003 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:34.028280 29003 net.cpp:86] Creating Layer ip2
I0428 19:58:34.028288 29003 net.cpp:408] ip2 <- ip1
I0428 19:58:34.028295 29003 net.cpp:382] ip2 -> ip2
I0428 19:58:34.028389 29003 net.cpp:124] Setting up ip2
I0428 19:58:34.028396 29003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:34.028399 29003 net.cpp:139] Memory required for data: 3526800
I0428 19:58:34.028404 29003 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:34.028409 29003 net.cpp:86] Creating Layer relu2
I0428 19:58:34.028411 29003 net.cpp:408] relu2 <- ip2
I0428 19:58:34.028416 29003 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:34.028578 29003 net.cpp:124] Setting up relu2
I0428 19:58:34.028586 29003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:34.028589 29003 net.cpp:139] Memory required for data: 3530800
I0428 19:58:34.028592 29003 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:58:34.028596 29003 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:58:34.028607 29003 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:58:34.028611 29003 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:58:34.028627 29003 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:58:34.028681 29003 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:58:34.028686 29003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:34.028689 29003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:34.028692 29003 net.cpp:139] Memory required for data: 3538800
I0428 19:58:34.028694 29003 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:34.028699 29003 net.cpp:86] Creating Layer accuracy
I0428 19:58:34.028714 29003 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:58:34.028717 29003 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:34.028723 29003 net.cpp:382] accuracy -> accuracy
I0428 19:58:34.028729 29003 net.cpp:124] Setting up accuracy
I0428 19:58:34.028733 29003 net.cpp:131] Top shape: (1)
I0428 19:58:34.028753 29003 net.cpp:139] Memory required for data: 3538804
I0428 19:58:34.028756 29003 layer_factory.hpp:77] Creating layer loss
I0428 19:58:34.028767 29003 net.cpp:86] Creating Layer loss
I0428 19:58:34.028770 29003 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:58:34.028774 29003 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:34.028779 29003 net.cpp:382] loss -> loss
I0428 19:58:34.028784 29003 layer_factory.hpp:77] Creating layer loss
I0428 19:58:34.029110 29003 net.cpp:124] Setting up loss
I0428 19:58:34.029119 29003 net.cpp:131] Top shape: (1)
I0428 19:58:34.029122 29003 net.cpp:134]     with loss weight 1
I0428 19:58:34.029129 29003 net.cpp:139] Memory required for data: 3538808
I0428 19:58:34.029132 29003 net.cpp:200] loss needs backward computation.
I0428 19:58:34.029136 29003 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:34.029140 29003 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:58:34.029144 29003 net.cpp:200] relu2 needs backward computation.
I0428 19:58:34.029146 29003 net.cpp:200] ip2 needs backward computation.
I0428 19:58:34.029150 29003 net.cpp:200] relu1 needs backward computation.
I0428 19:58:34.029152 29003 net.cpp:200] ip1 needs backward computation.
I0428 19:58:34.029198 29003 net.cpp:200] pool1 needs backward computation.
I0428 19:58:34.029201 29003 net.cpp:200] conv1 needs backward computation.
I0428 19:58:34.029206 29003 net.cpp:200] pool0 needs backward computation.
I0428 19:58:34.029207 29003 net.cpp:200] conv0 needs backward computation.
I0428 19:58:34.029211 29003 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:34.029214 29003 net.cpp:202] mnist does not need backward computation.
I0428 19:58:34.029217 29003 net.cpp:244] This network produces output accuracy
I0428 19:58:34.029220 29003 net.cpp:244] This network produces output loss
I0428 19:58:34.029230 29003 net.cpp:257] Network initialization done.
I0428 19:58:34.029264 29003 solver.cpp:56] Solver scaffolding done.
I0428 19:58:34.029561 29003 caffe.cpp:248] Starting Optimization
I0428 19:58:34.029567 29003 solver.cpp:273] Solving LeNet
I0428 19:58:34.029570 29003 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:34.029765 29003 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:34.033913 29003 blocking_queue.cpp:49] Waiting for data
I0428 19:58:34.106492 29010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:34.106981 29003 solver.cpp:398]     Test net output #0: accuracy = 0.1736
I0428 19:58:34.107000 29003 solver.cpp:398]     Test net output #1: loss = 2.28851 (* 1 = 2.28851 loss)
I0428 19:58:34.109392 29003 solver.cpp:219] Iteration 0 (0 iter/s, 0.0797933s/100 iters), loss = 2.30777
I0428 19:58:34.109416 29003 solver.cpp:238]     Train net output #0: loss = 2.30777 (* 1 = 2.30777 loss)
I0428 19:58:34.109443 29003 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:34.192951 29003 solver.cpp:219] Iteration 100 (1197.33 iter/s, 0.0835195s/100 iters), loss = 0.845274
I0428 19:58:34.192975 29003 solver.cpp:238]     Train net output #0: loss = 0.845274 (* 1 = 0.845274 loss)
I0428 19:58:34.192981 29003 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:34.266299 29003 solver.cpp:219] Iteration 200 (1363.99 iter/s, 0.0733141s/100 iters), loss = 0.405172
I0428 19:58:34.266335 29003 solver.cpp:238]     Train net output #0: loss = 0.405172 (* 1 = 0.405172 loss)
I0428 19:58:34.266358 29003 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:34.338686 29003 solver.cpp:219] Iteration 300 (1382.53 iter/s, 0.0723313s/100 iters), loss = 0.191058
I0428 19:58:34.338711 29003 solver.cpp:238]     Train net output #0: loss = 0.191058 (* 1 = 0.191058 loss)
I0428 19:58:34.338718 29003 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:34.411437 29003 solver.cpp:219] Iteration 400 (1375.21 iter/s, 0.0727163s/100 iters), loss = 0.165202
I0428 19:58:34.411459 29003 solver.cpp:238]     Train net output #0: loss = 0.165202 (* 1 = 0.165202 loss)
I0428 19:58:34.411466 29003 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:34.484668 29003 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:34.559643 29010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:34.560128 29003 solver.cpp:398]     Test net output #0: accuracy = 0.9477
I0428 19:58:34.560148 29003 solver.cpp:398]     Test net output #1: loss = 0.167615 (* 1 = 0.167615 loss)
I0428 19:58:34.560889 29003 solver.cpp:219] Iteration 500 (669.268 iter/s, 0.149417s/100 iters), loss = 0.12314
I0428 19:58:34.560933 29003 solver.cpp:238]     Train net output #0: loss = 0.12314 (* 1 = 0.12314 loss)
I0428 19:58:34.560953 29003 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:34.641649 29003 solver.cpp:219] Iteration 600 (1239.07 iter/s, 0.0807055s/100 iters), loss = 0.184749
I0428 19:58:34.641672 29003 solver.cpp:238]     Train net output #0: loss = 0.184749 (* 1 = 0.184749 loss)
I0428 19:58:34.641695 29003 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:34.715273 29003 solver.cpp:219] Iteration 700 (1359.11 iter/s, 0.0735774s/100 iters), loss = 0.238594
I0428 19:58:34.715297 29003 solver.cpp:238]     Train net output #0: loss = 0.238594 (* 1 = 0.238594 loss)
I0428 19:58:34.715322 29003 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:34.787717 29003 solver.cpp:219] Iteration 800 (1381.02 iter/s, 0.0724101s/100 iters), loss = 0.269395
I0428 19:58:34.787740 29003 solver.cpp:238]     Train net output #0: loss = 0.269395 (* 1 = 0.269395 loss)
I0428 19:58:34.787763 29003 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:34.860241 29003 solver.cpp:219] Iteration 900 (1379.46 iter/s, 0.072492s/100 iters), loss = 0.222274
I0428 19:58:34.860265 29003 solver.cpp:238]     Train net output #0: loss = 0.222274 (* 1 = 0.222274 loss)
I0428 19:58:34.860291 29003 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:34.884191 29009 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:34.930794 29003 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:34.931464 29003 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:34.931882 29003 solver.cpp:311] Iteration 1000, loss = 0.115275
I0428 19:58:34.931898 29003 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:35.006175 29010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:35.006670 29003 solver.cpp:398]     Test net output #0: accuracy = 0.9654
I0428 19:58:35.006688 29003 solver.cpp:398]     Test net output #1: loss = 0.107605 (* 1 = 0.107605 loss)
I0428 19:58:35.006693 29003 solver.cpp:316] Optimization Done.
I0428 19:58:35.006696 29003 caffe.cpp:259] Optimization Done.
