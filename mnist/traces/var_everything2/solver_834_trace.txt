I0428 19:58:58.079701 29127 caffe.cpp:218] Using GPUs 0
I0428 19:58:58.117624 29127 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:58.624392 29127 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test834.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:58.624536 29127 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test834.prototxt
I0428 19:58:58.624969 29127 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:58.624987 29127 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:58.625089 29127 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:58.625170 29127 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:58.625268 29127 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:58.625293 29127 net.cpp:86] Creating Layer mnist
I0428 19:58:58.625301 29127 net.cpp:382] mnist -> data
I0428 19:58:58.625324 29127 net.cpp:382] mnist -> label
I0428 19:58:58.626421 29127 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:58.628885 29127 net.cpp:124] Setting up mnist
I0428 19:58:58.628902 29127 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:58.628908 29127 net.cpp:131] Top shape: 64 (64)
I0428 19:58:58.628911 29127 net.cpp:139] Memory required for data: 200960
I0428 19:58:58.628918 29127 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:58.628960 29127 net.cpp:86] Creating Layer conv0
I0428 19:58:58.628981 29127 net.cpp:408] conv0 <- data
I0428 19:58:58.628994 29127 net.cpp:382] conv0 -> conv0
I0428 19:58:58.920346 29127 net.cpp:124] Setting up conv0
I0428 19:58:58.920377 29127 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:58.920382 29127 net.cpp:139] Memory required for data: 1675520
I0428 19:58:58.920399 29127 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:58.920413 29127 net.cpp:86] Creating Layer pool0
I0428 19:58:58.920418 29127 net.cpp:408] pool0 <- conv0
I0428 19:58:58.920423 29127 net.cpp:382] pool0 -> pool0
I0428 19:58:58.920478 29127 net.cpp:124] Setting up pool0
I0428 19:58:58.920487 29127 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:58.920491 29127 net.cpp:139] Memory required for data: 2044160
I0428 19:58:58.920495 29127 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:58.920506 29127 net.cpp:86] Creating Layer conv1
I0428 19:58:58.920511 29127 net.cpp:408] conv1 <- pool0
I0428 19:58:58.920516 29127 net.cpp:382] conv1 -> conv1
I0428 19:58:58.923651 29127 net.cpp:124] Setting up conv1
I0428 19:58:58.923669 29127 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:58.923674 29127 net.cpp:139] Memory required for data: 2208000
I0428 19:58:58.923684 29127 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:58.923693 29127 net.cpp:86] Creating Layer pool1
I0428 19:58:58.923697 29127 net.cpp:408] pool1 <- conv1
I0428 19:58:58.923703 29127 net.cpp:382] pool1 -> pool1
I0428 19:58:58.923748 29127 net.cpp:124] Setting up pool1
I0428 19:58:58.923756 29127 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:58.923760 29127 net.cpp:139] Memory required for data: 2248960
I0428 19:58:58.923763 29127 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:58.923771 29127 net.cpp:86] Creating Layer ip1
I0428 19:58:58.923775 29127 net.cpp:408] ip1 <- pool1
I0428 19:58:58.923780 29127 net.cpp:382] ip1 -> ip1
I0428 19:58:58.923905 29127 net.cpp:124] Setting up ip1
I0428 19:58:58.923914 29127 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:58.923918 29127 net.cpp:139] Memory required for data: 2251520
I0428 19:58:58.923925 29127 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:58.923933 29127 net.cpp:86] Creating Layer relu1
I0428 19:58:58.923936 29127 net.cpp:408] relu1 <- ip1
I0428 19:58:58.923941 29127 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:58.924139 29127 net.cpp:124] Setting up relu1
I0428 19:58:58.924149 29127 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:58.924152 29127 net.cpp:139] Memory required for data: 2254080
I0428 19:58:58.924156 29127 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:58.924165 29127 net.cpp:86] Creating Layer ip2
I0428 19:58:58.924167 29127 net.cpp:408] ip2 <- ip1
I0428 19:58:58.924173 29127 net.cpp:382] ip2 -> ip2
I0428 19:58:58.924286 29127 net.cpp:124] Setting up ip2
I0428 19:58:58.924294 29127 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:58:58.924299 29127 net.cpp:139] Memory required for data: 2260480
I0428 19:58:58.924304 29127 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:58.924311 29127 net.cpp:86] Creating Layer relu2
I0428 19:58:58.924314 29127 net.cpp:408] relu2 <- ip2
I0428 19:58:58.924319 29127 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:58.925173 29127 net.cpp:124] Setting up relu2
I0428 19:58:58.925189 29127 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:58:58.925192 29127 net.cpp:139] Memory required for data: 2266880
I0428 19:58:58.925196 29127 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:58.925205 29127 net.cpp:86] Creating Layer ip3
I0428 19:58:58.925209 29127 net.cpp:408] ip3 <- ip2
I0428 19:58:58.925215 29127 net.cpp:382] ip3 -> ip3
I0428 19:58:58.925340 29127 net.cpp:124] Setting up ip3
I0428 19:58:58.925349 29127 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:58.925354 29127 net.cpp:139] Memory required for data: 2269440
I0428 19:58:58.925362 29127 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:58.925369 29127 net.cpp:86] Creating Layer relu3
I0428 19:58:58.925372 29127 net.cpp:408] relu3 <- ip3
I0428 19:58:58.925379 29127 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:58.925581 29127 net.cpp:124] Setting up relu3
I0428 19:58:58.925593 29127 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:58.925596 29127 net.cpp:139] Memory required for data: 2272000
I0428 19:58:58.925601 29127 layer_factory.hpp:77] Creating layer loss
I0428 19:58:58.925607 29127 net.cpp:86] Creating Layer loss
I0428 19:58:58.925611 29127 net.cpp:408] loss <- ip3
I0428 19:58:58.925614 29127 net.cpp:408] loss <- label
I0428 19:58:58.925623 29127 net.cpp:382] loss -> loss
I0428 19:58:58.925642 29127 layer_factory.hpp:77] Creating layer loss
I0428 19:58:58.925928 29127 net.cpp:124] Setting up loss
I0428 19:58:58.925940 29127 net.cpp:131] Top shape: (1)
I0428 19:58:58.925943 29127 net.cpp:134]     with loss weight 1
I0428 19:58:58.925959 29127 net.cpp:139] Memory required for data: 2272004
I0428 19:58:58.925963 29127 net.cpp:200] loss needs backward computation.
I0428 19:58:58.925967 29127 net.cpp:200] relu3 needs backward computation.
I0428 19:58:58.925971 29127 net.cpp:200] ip3 needs backward computation.
I0428 19:58:58.925974 29127 net.cpp:200] relu2 needs backward computation.
I0428 19:58:58.925977 29127 net.cpp:200] ip2 needs backward computation.
I0428 19:58:58.925981 29127 net.cpp:200] relu1 needs backward computation.
I0428 19:58:58.925984 29127 net.cpp:200] ip1 needs backward computation.
I0428 19:58:58.925988 29127 net.cpp:200] pool1 needs backward computation.
I0428 19:58:58.925992 29127 net.cpp:200] conv1 needs backward computation.
I0428 19:58:58.925994 29127 net.cpp:200] pool0 needs backward computation.
I0428 19:58:58.925998 29127 net.cpp:200] conv0 needs backward computation.
I0428 19:58:58.926002 29127 net.cpp:202] mnist does not need backward computation.
I0428 19:58:58.926005 29127 net.cpp:244] This network produces output loss
I0428 19:58:58.926023 29127 net.cpp:257] Network initialization done.
I0428 19:58:58.926411 29127 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test834.prototxt
I0428 19:58:58.926443 29127 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:58.926555 29127 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:58.926653 29127 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:58.926703 29127 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:58.926717 29127 net.cpp:86] Creating Layer mnist
I0428 19:58:58.926723 29127 net.cpp:382] mnist -> data
I0428 19:58:58.926733 29127 net.cpp:382] mnist -> label
I0428 19:58:58.926841 29127 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:58.929267 29127 net.cpp:124] Setting up mnist
I0428 19:58:58.929286 29127 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:58.929292 29127 net.cpp:131] Top shape: 100 (100)
I0428 19:58:58.929296 29127 net.cpp:139] Memory required for data: 314000
I0428 19:58:58.929301 29127 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:58.929308 29127 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:58.929312 29127 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:58.929317 29127 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:58.929325 29127 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:58.929385 29127 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:58.929394 29127 net.cpp:131] Top shape: 100 (100)
I0428 19:58:58.929399 29127 net.cpp:131] Top shape: 100 (100)
I0428 19:58:58.929401 29127 net.cpp:139] Memory required for data: 314800
I0428 19:58:58.929405 29127 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:58.929416 29127 net.cpp:86] Creating Layer conv0
I0428 19:58:58.929420 29127 net.cpp:408] conv0 <- data
I0428 19:58:58.929427 29127 net.cpp:382] conv0 -> conv0
I0428 19:58:58.931203 29127 net.cpp:124] Setting up conv0
I0428 19:58:58.931221 29127 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:58.931226 29127 net.cpp:139] Memory required for data: 2618800
I0428 19:58:58.931237 29127 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:58.931246 29127 net.cpp:86] Creating Layer pool0
I0428 19:58:58.931251 29127 net.cpp:408] pool0 <- conv0
I0428 19:58:58.931257 29127 net.cpp:382] pool0 -> pool0
I0428 19:58:58.931303 29127 net.cpp:124] Setting up pool0
I0428 19:58:58.931311 29127 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:58.931314 29127 net.cpp:139] Memory required for data: 3194800
I0428 19:58:58.931318 29127 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:58.931329 29127 net.cpp:86] Creating Layer conv1
I0428 19:58:58.931334 29127 net.cpp:408] conv1 <- pool0
I0428 19:58:58.931340 29127 net.cpp:382] conv1 -> conv1
I0428 19:58:58.933699 29127 net.cpp:124] Setting up conv1
I0428 19:58:58.933717 29127 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:58.933722 29127 net.cpp:139] Memory required for data: 3450800
I0428 19:58:58.933734 29127 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:58.933743 29127 net.cpp:86] Creating Layer pool1
I0428 19:58:58.933746 29127 net.cpp:408] pool1 <- conv1
I0428 19:58:58.933753 29127 net.cpp:382] pool1 -> pool1
I0428 19:58:58.933807 29127 net.cpp:124] Setting up pool1
I0428 19:58:58.933818 29127 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:58.933821 29127 net.cpp:139] Memory required for data: 3514800
I0428 19:58:58.933825 29127 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:58.933832 29127 net.cpp:86] Creating Layer ip1
I0428 19:58:58.933835 29127 net.cpp:408] ip1 <- pool1
I0428 19:58:58.933842 29127 net.cpp:382] ip1 -> ip1
I0428 19:58:58.933993 29127 net.cpp:124] Setting up ip1
I0428 19:58:58.934003 29127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:58.934020 29127 net.cpp:139] Memory required for data: 3518800
I0428 19:58:58.934028 29127 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:58.934036 29127 net.cpp:86] Creating Layer relu1
I0428 19:58:58.934041 29127 net.cpp:408] relu1 <- ip1
I0428 19:58:58.934046 29127 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:58.934252 29127 net.cpp:124] Setting up relu1
I0428 19:58:58.934264 29127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:58.934267 29127 net.cpp:139] Memory required for data: 3522800
I0428 19:58:58.934272 29127 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:58.934281 29127 net.cpp:86] Creating Layer ip2
I0428 19:58:58.934286 29127 net.cpp:408] ip2 <- ip1
I0428 19:58:58.934293 29127 net.cpp:382] ip2 -> ip2
I0428 19:58:58.934418 29127 net.cpp:124] Setting up ip2
I0428 19:58:58.934427 29127 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:58:58.934432 29127 net.cpp:139] Memory required for data: 3532800
I0428 19:58:58.934437 29127 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:58.934442 29127 net.cpp:86] Creating Layer relu2
I0428 19:58:58.934447 29127 net.cpp:408] relu2 <- ip2
I0428 19:58:58.934451 29127 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:58.934638 29127 net.cpp:124] Setting up relu2
I0428 19:58:58.934650 29127 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:58:58.934654 29127 net.cpp:139] Memory required for data: 3542800
I0428 19:58:58.934659 29127 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:58.934665 29127 net.cpp:86] Creating Layer ip3
I0428 19:58:58.934669 29127 net.cpp:408] ip3 <- ip2
I0428 19:58:58.934675 29127 net.cpp:382] ip3 -> ip3
I0428 19:58:58.934816 29127 net.cpp:124] Setting up ip3
I0428 19:58:58.934825 29127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:58.934828 29127 net.cpp:139] Memory required for data: 3546800
I0428 19:58:58.934839 29127 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:58.934845 29127 net.cpp:86] Creating Layer relu3
I0428 19:58:58.934849 29127 net.cpp:408] relu3 <- ip3
I0428 19:58:58.934854 29127 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:58.935802 29127 net.cpp:124] Setting up relu3
I0428 19:58:58.935817 29127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:58.935822 29127 net.cpp:139] Memory required for data: 3550800
I0428 19:58:58.935827 29127 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:58:58.935834 29127 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:58:58.935839 29127 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:58:58.935845 29127 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:58:58.935853 29127 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:58:58.935900 29127 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:58:58.935909 29127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:58.935914 29127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:58.935917 29127 net.cpp:139] Memory required for data: 3558800
I0428 19:58:58.935921 29127 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:58.935926 29127 net.cpp:86] Creating Layer accuracy
I0428 19:58:58.935930 29127 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:58:58.935935 29127 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:58.935941 29127 net.cpp:382] accuracy -> accuracy
I0428 19:58:58.935956 29127 net.cpp:124] Setting up accuracy
I0428 19:58:58.935961 29127 net.cpp:131] Top shape: (1)
I0428 19:58:58.935966 29127 net.cpp:139] Memory required for data: 3558804
I0428 19:58:58.935968 29127 layer_factory.hpp:77] Creating layer loss
I0428 19:58:58.935974 29127 net.cpp:86] Creating Layer loss
I0428 19:58:58.935978 29127 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:58:58.935982 29127 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:58.935987 29127 net.cpp:382] loss -> loss
I0428 19:58:58.935997 29127 layer_factory.hpp:77] Creating layer loss
I0428 19:58:58.936290 29127 net.cpp:124] Setting up loss
I0428 19:58:58.936300 29127 net.cpp:131] Top shape: (1)
I0428 19:58:58.936305 29127 net.cpp:134]     with loss weight 1
I0428 19:58:58.936324 29127 net.cpp:139] Memory required for data: 3558808
I0428 19:58:58.936328 29127 net.cpp:200] loss needs backward computation.
I0428 19:58:58.936333 29127 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:58.936338 29127 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:58:58.936342 29127 net.cpp:200] relu3 needs backward computation.
I0428 19:58:58.936347 29127 net.cpp:200] ip3 needs backward computation.
I0428 19:58:58.936349 29127 net.cpp:200] relu2 needs backward computation.
I0428 19:58:58.936352 29127 net.cpp:200] ip2 needs backward computation.
I0428 19:58:58.936355 29127 net.cpp:200] relu1 needs backward computation.
I0428 19:58:58.936358 29127 net.cpp:200] ip1 needs backward computation.
I0428 19:58:58.936362 29127 net.cpp:200] pool1 needs backward computation.
I0428 19:58:58.936365 29127 net.cpp:200] conv1 needs backward computation.
I0428 19:58:58.936369 29127 net.cpp:200] pool0 needs backward computation.
I0428 19:58:58.936373 29127 net.cpp:200] conv0 needs backward computation.
I0428 19:58:58.936378 29127 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:58.936383 29127 net.cpp:202] mnist does not need backward computation.
I0428 19:58:58.936385 29127 net.cpp:244] This network produces output accuracy
I0428 19:58:58.936389 29127 net.cpp:244] This network produces output loss
I0428 19:58:58.936403 29127 net.cpp:257] Network initialization done.
I0428 19:58:58.936453 29127 solver.cpp:56] Solver scaffolding done.
I0428 19:58:58.936915 29127 caffe.cpp:248] Starting Optimization
I0428 19:58:58.936923 29127 solver.cpp:273] Solving LeNet
I0428 19:58:58.936928 29127 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:58.937221 29127 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:58.941838 29127 blocking_queue.cpp:49] Waiting for data
I0428 19:58:59.012591 29134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:59.013156 29127 solver.cpp:398]     Test net output #0: accuracy = 0.0983
I0428 19:58:59.013181 29127 solver.cpp:398]     Test net output #1: loss = 2.32354 (* 1 = 2.32354 loss)
I0428 19:58:59.015960 29127 solver.cpp:219] Iteration 0 (0 iter/s, 0.0789995s/100 iters), loss = 2.31193
I0428 19:58:59.015990 29127 solver.cpp:238]     Train net output #0: loss = 2.31193 (* 1 = 2.31193 loss)
I0428 19:58:59.016005 29127 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:59.097534 29127 solver.cpp:219] Iteration 100 (1226.51 iter/s, 0.0815319s/100 iters), loss = 1.42232
I0428 19:58:59.097561 29127 solver.cpp:238]     Train net output #0: loss = 1.42232 (* 1 = 1.42232 loss)
I0428 19:58:59.097568 29127 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:59.177618 29127 solver.cpp:219] Iteration 200 (1249.25 iter/s, 0.0800481s/100 iters), loss = 0.980537
I0428 19:58:59.177659 29127 solver.cpp:238]     Train net output #0: loss = 0.980537 (* 1 = 0.980537 loss)
I0428 19:58:59.177664 29127 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:59.257436 29127 solver.cpp:219] Iteration 300 (1253.64 iter/s, 0.0797677s/100 iters), loss = 0.708012
I0428 19:58:59.257475 29127 solver.cpp:238]     Train net output #0: loss = 0.708012 (* 1 = 0.708012 loss)
I0428 19:58:59.257483 29127 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:59.336624 29127 solver.cpp:219] Iteration 400 (1263.57 iter/s, 0.0791409s/100 iters), loss = 0.679005
I0428 19:58:59.336664 29127 solver.cpp:238]     Train net output #0: loss = 0.679005 (* 1 = 0.679005 loss)
I0428 19:58:59.336671 29127 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:59.414757 29127 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:59.468097 29134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:59.468621 29127 solver.cpp:398]     Test net output #0: accuracy = 0.7559
I0428 19:58:59.468657 29127 solver.cpp:398]     Test net output #1: loss = 0.660409 (* 1 = 0.660409 loss)
I0428 19:58:59.469538 29127 solver.cpp:219] Iteration 500 (752.684 iter/s, 0.132858s/100 iters), loss = 0.52301
I0428 19:58:59.469579 29127 solver.cpp:238]     Train net output #0: loss = 0.52301 (* 1 = 0.52301 loss)
I0428 19:58:59.469616 29127 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:59.563114 29127 solver.cpp:219] Iteration 600 (1069.22 iter/s, 0.093526s/100 iters), loss = 0.569679
I0428 19:58:59.563141 29127 solver.cpp:238]     Train net output #0: loss = 0.569679 (* 1 = 0.569679 loss)
I0428 19:58:59.563148 29127 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:59.645020 29127 solver.cpp:219] Iteration 700 (1221.47 iter/s, 0.0818688s/100 iters), loss = 0.723768
I0428 19:58:59.645061 29127 solver.cpp:238]     Train net output #0: loss = 0.723768 (* 1 = 0.723768 loss)
I0428 19:58:59.645081 29127 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:59.724331 29127 solver.cpp:219] Iteration 800 (1261.64 iter/s, 0.0792617s/100 iters), loss = 0.701684
I0428 19:58:59.724370 29127 solver.cpp:238]     Train net output #0: loss = 0.701684 (* 1 = 0.701684 loss)
I0428 19:58:59.724376 29127 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:59.810720 29127 solver.cpp:219] Iteration 900 (1157.98 iter/s, 0.086357s/100 iters), loss = 0.579393
I0428 19:58:59.810775 29127 solver.cpp:238]     Train net output #0: loss = 0.579393 (* 1 = 0.579393 loss)
I0428 19:58:59.810781 29127 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:59.838166 29133 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:59.892231 29127 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:59.893149 29127 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:59.893687 29127 solver.cpp:311] Iteration 1000, loss = 0.632526
I0428 19:58:59.893702 29127 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:59.969091 29134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:59.969650 29127 solver.cpp:398]     Test net output #0: accuracy = 0.7737
I0428 19:58:59.969686 29127 solver.cpp:398]     Test net output #1: loss = 0.580533 (* 1 = 0.580533 loss)
I0428 19:58:59.969691 29127 solver.cpp:316] Optimization Done.
I0428 19:58:59.969694 29127 caffe.cpp:259] Optimization Done.
