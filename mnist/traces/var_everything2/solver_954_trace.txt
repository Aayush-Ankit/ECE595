I0428 20:03:34.146486 30206 caffe.cpp:218] Using GPUs 0
I0428 20:03:34.175920 30206 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:34.622764 30206 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test954.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:34.622920 30206 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test954.prototxt
I0428 20:03:34.623273 30206 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:34.623303 30206 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:34.623383 30206 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:34.623443 30206 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:34.623528 30206 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:34.623546 30206 net.cpp:86] Creating Layer mnist
I0428 20:03:34.623553 30206 net.cpp:382] mnist -> data
I0428 20:03:34.623571 30206 net.cpp:382] mnist -> label
I0428 20:03:34.624606 30206 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:34.626858 30206 net.cpp:124] Setting up mnist
I0428 20:03:34.626890 30206 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:34.626895 30206 net.cpp:131] Top shape: 64 (64)
I0428 20:03:34.626899 30206 net.cpp:139] Memory required for data: 200960
I0428 20:03:34.626904 30206 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:34.626917 30206 net.cpp:86] Creating Layer conv0
I0428 20:03:34.626934 30206 net.cpp:408] conv0 <- data
I0428 20:03:34.626943 30206 net.cpp:382] conv0 -> conv0
I0428 20:03:34.856681 30206 net.cpp:124] Setting up conv0
I0428 20:03:34.856724 30206 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:34.856727 30206 net.cpp:139] Memory required for data: 1675520
I0428 20:03:34.856744 30206 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:34.856772 30206 net.cpp:86] Creating Layer pool0
I0428 20:03:34.856776 30206 net.cpp:408] pool0 <- conv0
I0428 20:03:34.856782 30206 net.cpp:382] pool0 -> pool0
I0428 20:03:34.856838 30206 net.cpp:124] Setting up pool0
I0428 20:03:34.856847 30206 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:34.856849 30206 net.cpp:139] Memory required for data: 2044160
I0428 20:03:34.856853 30206 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:34.856864 30206 net.cpp:86] Creating Layer conv1
I0428 20:03:34.856868 30206 net.cpp:408] conv1 <- pool0
I0428 20:03:34.856874 30206 net.cpp:382] conv1 -> conv1
I0428 20:03:34.858880 30206 net.cpp:124] Setting up conv1
I0428 20:03:34.858909 30206 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:34.858913 30206 net.cpp:139] Memory required for data: 3682560
I0428 20:03:34.858922 30206 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:34.858929 30206 net.cpp:86] Creating Layer pool1
I0428 20:03:34.858932 30206 net.cpp:408] pool1 <- conv1
I0428 20:03:34.858937 30206 net.cpp:382] pool1 -> pool1
I0428 20:03:34.859002 30206 net.cpp:124] Setting up pool1
I0428 20:03:34.859009 30206 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:34.859011 30206 net.cpp:139] Memory required for data: 4092160
I0428 20:03:34.859014 30206 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:34.859025 30206 net.cpp:86] Creating Layer ip1
I0428 20:03:34.859028 30206 net.cpp:408] ip1 <- pool1
I0428 20:03:34.859033 30206 net.cpp:382] ip1 -> ip1
I0428 20:03:34.860131 30206 net.cpp:124] Setting up ip1
I0428 20:03:34.860157 30206 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:34.860177 30206 net.cpp:139] Memory required for data: 4094720
I0428 20:03:34.860184 30206 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:34.860190 30206 net.cpp:86] Creating Layer relu1
I0428 20:03:34.860194 30206 net.cpp:408] relu1 <- ip1
I0428 20:03:34.860198 30206 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:34.860378 30206 net.cpp:124] Setting up relu1
I0428 20:03:34.860388 30206 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:34.860390 30206 net.cpp:139] Memory required for data: 4097280
I0428 20:03:34.860394 30206 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:34.860400 30206 net.cpp:86] Creating Layer ip2
I0428 20:03:34.860404 30206 net.cpp:408] ip2 <- ip1
I0428 20:03:34.860409 30206 net.cpp:382] ip2 -> ip2
I0428 20:03:34.860519 30206 net.cpp:124] Setting up ip2
I0428 20:03:34.860527 30206 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:34.860530 30206 net.cpp:139] Memory required for data: 4110080
I0428 20:03:34.860535 30206 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:34.860541 30206 net.cpp:86] Creating Layer relu2
I0428 20:03:34.860544 30206 net.cpp:408] relu2 <- ip2
I0428 20:03:34.860548 30206 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:34.861340 30206 net.cpp:124] Setting up relu2
I0428 20:03:34.861369 30206 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:34.861372 30206 net.cpp:139] Memory required for data: 4122880
I0428 20:03:34.861377 30206 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:34.861383 30206 net.cpp:86] Creating Layer ip3
I0428 20:03:34.861387 30206 net.cpp:408] ip3 <- ip2
I0428 20:03:34.861393 30206 net.cpp:382] ip3 -> ip3
I0428 20:03:34.861497 30206 net.cpp:124] Setting up ip3
I0428 20:03:34.861505 30206 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:34.861508 30206 net.cpp:139] Memory required for data: 4125440
I0428 20:03:34.861516 30206 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:34.861521 30206 net.cpp:86] Creating Layer relu3
I0428 20:03:34.861524 30206 net.cpp:408] relu3 <- ip3
I0428 20:03:34.861528 30206 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:34.861711 30206 net.cpp:124] Setting up relu3
I0428 20:03:34.861721 30206 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:34.861723 30206 net.cpp:139] Memory required for data: 4128000
I0428 20:03:34.861727 30206 layer_factory.hpp:77] Creating layer loss
I0428 20:03:34.861733 30206 net.cpp:86] Creating Layer loss
I0428 20:03:34.861737 30206 net.cpp:408] loss <- ip3
I0428 20:03:34.861740 30206 net.cpp:408] loss <- label
I0428 20:03:34.861745 30206 net.cpp:382] loss -> loss
I0428 20:03:34.861763 30206 layer_factory.hpp:77] Creating layer loss
I0428 20:03:34.862010 30206 net.cpp:124] Setting up loss
I0428 20:03:34.862017 30206 net.cpp:131] Top shape: (1)
I0428 20:03:34.862021 30206 net.cpp:134]     with loss weight 1
I0428 20:03:34.862035 30206 net.cpp:139] Memory required for data: 4128004
I0428 20:03:34.862038 30206 net.cpp:200] loss needs backward computation.
I0428 20:03:34.862041 30206 net.cpp:200] relu3 needs backward computation.
I0428 20:03:34.862045 30206 net.cpp:200] ip3 needs backward computation.
I0428 20:03:34.862047 30206 net.cpp:200] relu2 needs backward computation.
I0428 20:03:34.862049 30206 net.cpp:200] ip2 needs backward computation.
I0428 20:03:34.862052 30206 net.cpp:200] relu1 needs backward computation.
I0428 20:03:34.862054 30206 net.cpp:200] ip1 needs backward computation.
I0428 20:03:34.862057 30206 net.cpp:200] pool1 needs backward computation.
I0428 20:03:34.862061 30206 net.cpp:200] conv1 needs backward computation.
I0428 20:03:34.862063 30206 net.cpp:200] pool0 needs backward computation.
I0428 20:03:34.862066 30206 net.cpp:200] conv0 needs backward computation.
I0428 20:03:34.862069 30206 net.cpp:202] mnist does not need backward computation.
I0428 20:03:34.862071 30206 net.cpp:244] This network produces output loss
I0428 20:03:34.862081 30206 net.cpp:257] Network initialization done.
I0428 20:03:34.862428 30206 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test954.prototxt
I0428 20:03:34.862471 30206 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:34.862560 30206 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:34.862635 30206 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:34.862696 30206 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:34.862710 30206 net.cpp:86] Creating Layer mnist
I0428 20:03:34.862715 30206 net.cpp:382] mnist -> data
I0428 20:03:34.862722 30206 net.cpp:382] mnist -> label
I0428 20:03:34.862809 30206 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:34.865089 30206 net.cpp:124] Setting up mnist
I0428 20:03:34.865103 30206 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:34.865108 30206 net.cpp:131] Top shape: 100 (100)
I0428 20:03:34.865111 30206 net.cpp:139] Memory required for data: 314000
I0428 20:03:34.865115 30206 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:34.865140 30206 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:34.865144 30206 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:34.865149 30206 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:34.865156 30206 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:34.865233 30206 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:34.865239 30206 net.cpp:131] Top shape: 100 (100)
I0428 20:03:34.865242 30206 net.cpp:131] Top shape: 100 (100)
I0428 20:03:34.865245 30206 net.cpp:139] Memory required for data: 314800
I0428 20:03:34.865248 30206 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:34.865257 30206 net.cpp:86] Creating Layer conv0
I0428 20:03:34.865259 30206 net.cpp:408] conv0 <- data
I0428 20:03:34.865264 30206 net.cpp:382] conv0 -> conv0
I0428 20:03:34.866870 30206 net.cpp:124] Setting up conv0
I0428 20:03:34.866883 30206 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:34.866888 30206 net.cpp:139] Memory required for data: 2618800
I0428 20:03:34.866895 30206 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:34.866901 30206 net.cpp:86] Creating Layer pool0
I0428 20:03:34.866904 30206 net.cpp:408] pool0 <- conv0
I0428 20:03:34.866909 30206 net.cpp:382] pool0 -> pool0
I0428 20:03:34.866943 30206 net.cpp:124] Setting up pool0
I0428 20:03:34.866948 30206 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:34.866951 30206 net.cpp:139] Memory required for data: 3194800
I0428 20:03:34.866955 30206 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:34.866961 30206 net.cpp:86] Creating Layer conv1
I0428 20:03:34.866964 30206 net.cpp:408] conv1 <- pool0
I0428 20:03:34.866969 30206 net.cpp:382] conv1 -> conv1
I0428 20:03:34.868618 30206 net.cpp:124] Setting up conv1
I0428 20:03:34.868631 30206 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:34.868636 30206 net.cpp:139] Memory required for data: 5754800
I0428 20:03:34.868644 30206 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:34.868657 30206 net.cpp:86] Creating Layer pool1
I0428 20:03:34.868662 30206 net.cpp:408] pool1 <- conv1
I0428 20:03:34.868669 30206 net.cpp:382] pool1 -> pool1
I0428 20:03:34.868706 30206 net.cpp:124] Setting up pool1
I0428 20:03:34.868711 30206 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:34.868715 30206 net.cpp:139] Memory required for data: 6394800
I0428 20:03:34.868737 30206 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:34.868748 30206 net.cpp:86] Creating Layer ip1
I0428 20:03:34.868752 30206 net.cpp:408] ip1 <- pool1
I0428 20:03:34.868757 30206 net.cpp:382] ip1 -> ip1
I0428 20:03:34.868958 30206 net.cpp:124] Setting up ip1
I0428 20:03:34.868968 30206 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:34.868983 30206 net.cpp:139] Memory required for data: 6398800
I0428 20:03:34.868990 30206 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:34.868995 30206 net.cpp:86] Creating Layer relu1
I0428 20:03:34.868999 30206 net.cpp:408] relu1 <- ip1
I0428 20:03:34.869015 30206 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:34.869204 30206 net.cpp:124] Setting up relu1
I0428 20:03:34.869212 30206 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:34.869215 30206 net.cpp:139] Memory required for data: 6402800
I0428 20:03:34.869218 30206 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:34.869225 30206 net.cpp:86] Creating Layer ip2
I0428 20:03:34.869228 30206 net.cpp:408] ip2 <- ip1
I0428 20:03:34.869249 30206 net.cpp:382] ip2 -> ip2
I0428 20:03:34.869346 30206 net.cpp:124] Setting up ip2
I0428 20:03:34.869354 30206 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:34.869356 30206 net.cpp:139] Memory required for data: 6422800
I0428 20:03:34.869361 30206 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:34.869365 30206 net.cpp:86] Creating Layer relu2
I0428 20:03:34.869369 30206 net.cpp:408] relu2 <- ip2
I0428 20:03:34.869372 30206 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:34.869539 30206 net.cpp:124] Setting up relu2
I0428 20:03:34.869549 30206 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:34.869551 30206 net.cpp:139] Memory required for data: 6442800
I0428 20:03:34.869570 30206 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:34.869575 30206 net.cpp:86] Creating Layer ip3
I0428 20:03:34.869585 30206 net.cpp:408] ip3 <- ip2
I0428 20:03:34.869590 30206 net.cpp:382] ip3 -> ip3
I0428 20:03:34.869694 30206 net.cpp:124] Setting up ip3
I0428 20:03:34.869701 30206 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:34.869704 30206 net.cpp:139] Memory required for data: 6446800
I0428 20:03:34.869712 30206 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:34.869716 30206 net.cpp:86] Creating Layer relu3
I0428 20:03:34.869720 30206 net.cpp:408] relu3 <- ip3
I0428 20:03:34.869724 30206 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:34.870586 30206 net.cpp:124] Setting up relu3
I0428 20:03:34.870599 30206 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:34.870602 30206 net.cpp:139] Memory required for data: 6450800
I0428 20:03:34.870605 30206 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:34.870610 30206 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:34.870613 30206 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:34.870620 30206 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:34.870626 30206 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:34.870676 30206 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:34.870682 30206 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:34.870685 30206 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:34.870688 30206 net.cpp:139] Memory required for data: 6458800
I0428 20:03:34.870692 30206 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:34.870695 30206 net.cpp:86] Creating Layer accuracy
I0428 20:03:34.870709 30206 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:34.870713 30206 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:34.870718 30206 net.cpp:382] accuracy -> accuracy
I0428 20:03:34.870725 30206 net.cpp:124] Setting up accuracy
I0428 20:03:34.870729 30206 net.cpp:131] Top shape: (1)
I0428 20:03:34.870733 30206 net.cpp:139] Memory required for data: 6458804
I0428 20:03:34.870740 30206 layer_factory.hpp:77] Creating layer loss
I0428 20:03:34.870744 30206 net.cpp:86] Creating Layer loss
I0428 20:03:34.870748 30206 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:34.870751 30206 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:34.870754 30206 net.cpp:382] loss -> loss
I0428 20:03:34.870760 30206 layer_factory.hpp:77] Creating layer loss
I0428 20:03:34.871002 30206 net.cpp:124] Setting up loss
I0428 20:03:34.871012 30206 net.cpp:131] Top shape: (1)
I0428 20:03:34.871016 30206 net.cpp:134]     with loss weight 1
I0428 20:03:34.871031 30206 net.cpp:139] Memory required for data: 6458808
I0428 20:03:34.871035 30206 net.cpp:200] loss needs backward computation.
I0428 20:03:34.871040 30206 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:34.871043 30206 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:34.871047 30206 net.cpp:200] relu3 needs backward computation.
I0428 20:03:34.871050 30206 net.cpp:200] ip3 needs backward computation.
I0428 20:03:34.871060 30206 net.cpp:200] relu2 needs backward computation.
I0428 20:03:34.871063 30206 net.cpp:200] ip2 needs backward computation.
I0428 20:03:34.871067 30206 net.cpp:200] relu1 needs backward computation.
I0428 20:03:34.871069 30206 net.cpp:200] ip1 needs backward computation.
I0428 20:03:34.871073 30206 net.cpp:200] pool1 needs backward computation.
I0428 20:03:34.871075 30206 net.cpp:200] conv1 needs backward computation.
I0428 20:03:34.871078 30206 net.cpp:200] pool0 needs backward computation.
I0428 20:03:34.871086 30206 net.cpp:200] conv0 needs backward computation.
I0428 20:03:34.871090 30206 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:34.871093 30206 net.cpp:202] mnist does not need backward computation.
I0428 20:03:34.871096 30206 net.cpp:244] This network produces output accuracy
I0428 20:03:34.871100 30206 net.cpp:244] This network produces output loss
I0428 20:03:34.871110 30206 net.cpp:257] Network initialization done.
I0428 20:03:34.871151 30206 solver.cpp:56] Solver scaffolding done.
I0428 20:03:34.871495 30206 caffe.cpp:248] Starting Optimization
I0428 20:03:34.871500 30206 solver.cpp:273] Solving LeNet
I0428 20:03:34.871505 30206 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:34.872318 30206 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:34.877948 30206 blocking_queue.cpp:49] Waiting for data
I0428 20:03:34.945215 30213 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:34.945847 30206 solver.cpp:398]     Test net output #0: accuracy = 0.0996
I0428 20:03:34.945866 30206 solver.cpp:398]     Test net output #1: loss = 2.30118 (* 1 = 2.30118 loss)
I0428 20:03:34.949606 30206 solver.cpp:219] Iteration 0 (-2.09991e-31 iter/s, 0.0780769s/100 iters), loss = 2.30012
I0428 20:03:34.949630 30206 solver.cpp:238]     Train net output #0: loss = 2.30012 (* 1 = 2.30012 loss)
I0428 20:03:34.949656 30206 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:35.100486 30206 solver.cpp:219] Iteration 100 (662.939 iter/s, 0.150843s/100 iters), loss = 0.404804
I0428 20:03:35.100513 30206 solver.cpp:238]     Train net output #0: loss = 0.404804 (* 1 = 0.404804 loss)
I0428 20:03:35.100535 30206 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:35.251705 30206 solver.cpp:219] Iteration 200 (661.471 iter/s, 0.151178s/100 iters), loss = 0.441842
I0428 20:03:35.251734 30206 solver.cpp:238]     Train net output #0: loss = 0.441842 (* 1 = 0.441842 loss)
I0428 20:03:35.251740 30206 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:35.406054 30206 solver.cpp:219] Iteration 300 (648.056 iter/s, 0.154308s/100 iters), loss = 0.519024
I0428 20:03:35.406085 30206 solver.cpp:238]     Train net output #0: loss = 0.519024 (* 1 = 0.519024 loss)
I0428 20:03:35.406095 30206 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:35.568091 30206 solver.cpp:219] Iteration 400 (617.312 iter/s, 0.161993s/100 iters), loss = 0.277674
I0428 20:03:35.568125 30206 solver.cpp:238]     Train net output #0: loss = 0.277674 (* 1 = 0.277674 loss)
I0428 20:03:35.568135 30206 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:35.730451 30206 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:35.801986 30213 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:35.802861 30206 solver.cpp:398]     Test net output #0: accuracy = 0.8624
I0428 20:03:35.802893 30206 solver.cpp:398]     Test net output #1: loss = 0.371708 (* 1 = 0.371708 loss)
I0428 20:03:35.804545 30206 solver.cpp:219] Iteration 500 (423.007 iter/s, 0.236402s/100 iters), loss = 0.171279
I0428 20:03:35.804603 30206 solver.cpp:238]     Train net output #0: loss = 0.171279 (* 1 = 0.171279 loss)
I0428 20:03:35.804613 30206 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:35.967375 30206 solver.cpp:219] Iteration 600 (614.402 iter/s, 0.16276s/100 iters), loss = 0.239864
I0428 20:03:35.967408 30206 solver.cpp:238]     Train net output #0: loss = 0.239864 (* 1 = 0.239864 loss)
I0428 20:03:35.967417 30206 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:36.144089 30206 solver.cpp:219] Iteration 700 (566.048 iter/s, 0.176664s/100 iters), loss = 0.523713
I0428 20:03:36.144139 30206 solver.cpp:238]     Train net output #0: loss = 0.523713 (* 1 = 0.523713 loss)
I0428 20:03:36.144150 30206 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:36.326969 30206 solver.cpp:219] Iteration 800 (546.998 iter/s, 0.182816s/100 iters), loss = 0.450927
I0428 20:03:36.327018 30206 solver.cpp:238]     Train net output #0: loss = 0.450927 (* 1 = 0.450927 loss)
I0428 20:03:36.327031 30206 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:36.509758 30206 solver.cpp:219] Iteration 900 (547.287 iter/s, 0.182719s/100 iters), loss = 0.446631
I0428 20:03:36.509815 30206 solver.cpp:238]     Train net output #0: loss = 0.446631 (* 1 = 0.446631 loss)
I0428 20:03:36.509827 30206 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:36.571135 30212 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:36.691130 30206 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:36.693450 30206 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:36.694679 30206 solver.cpp:311] Iteration 1000, loss = 0.482011
I0428 20:03:36.694706 30206 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:36.768880 30213 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:36.769855 30206 solver.cpp:398]     Test net output #0: accuracy = 0.8727
I0428 20:03:36.769896 30206 solver.cpp:398]     Test net output #1: loss = 0.326852 (* 1 = 0.326852 loss)
I0428 20:03:36.769906 30206 solver.cpp:316] Optimization Done.
I0428 20:03:36.769914 30206 caffe.cpp:259] Optimization Done.
