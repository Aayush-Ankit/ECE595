I0428 20:04:50.740694 30475 caffe.cpp:218] Using GPUs 0
I0428 20:04:50.778636 30475 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:51.231680 30475 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test983.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:51.231809 30475 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test983.prototxt
I0428 20:04:51.232123 30475 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:51.232137 30475 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:51.232210 30475 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:51.232270 30475 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:51.232352 30475 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:51.232385 30475 net.cpp:86] Creating Layer mnist
I0428 20:04:51.232393 30475 net.cpp:382] mnist -> data
I0428 20:04:51.232410 30475 net.cpp:382] mnist -> label
I0428 20:04:51.233456 30475 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:51.235895 30475 net.cpp:124] Setting up mnist
I0428 20:04:51.235909 30475 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:51.235914 30475 net.cpp:131] Top shape: 64 (64)
I0428 20:04:51.235918 30475 net.cpp:139] Memory required for data: 200960
I0428 20:04:51.235922 30475 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:51.235936 30475 net.cpp:86] Creating Layer conv0
I0428 20:04:51.235941 30475 net.cpp:408] conv0 <- data
I0428 20:04:51.235975 30475 net.cpp:382] conv0 -> conv0
I0428 20:04:51.471246 30475 net.cpp:124] Setting up conv0
I0428 20:04:51.471287 30475 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:51.471290 30475 net.cpp:139] Memory required for data: 3887360
I0428 20:04:51.471354 30475 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:51.471366 30475 net.cpp:86] Creating Layer pool0
I0428 20:04:51.471370 30475 net.cpp:408] pool0 <- conv0
I0428 20:04:51.471375 30475 net.cpp:382] pool0 -> pool0
I0428 20:04:51.471424 30475 net.cpp:124] Setting up pool0
I0428 20:04:51.471432 30475 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:51.471436 30475 net.cpp:139] Memory required for data: 4808960
I0428 20:04:51.471437 30475 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:51.471449 30475 net.cpp:86] Creating Layer conv1
I0428 20:04:51.471452 30475 net.cpp:408] conv1 <- pool0
I0428 20:04:51.471457 30475 net.cpp:382] conv1 -> conv1
I0428 20:04:51.474292 30475 net.cpp:124] Setting up conv1
I0428 20:04:51.474305 30475 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:51.474325 30475 net.cpp:139] Memory required for data: 4841728
I0428 20:04:51.474349 30475 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:51.474356 30475 net.cpp:86] Creating Layer pool1
I0428 20:04:51.474359 30475 net.cpp:408] pool1 <- conv1
I0428 20:04:51.474364 30475 net.cpp:382] pool1 -> pool1
I0428 20:04:51.474398 30475 net.cpp:124] Setting up pool1
I0428 20:04:51.474405 30475 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:51.474407 30475 net.cpp:139] Memory required for data: 4849920
I0428 20:04:51.474411 30475 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:51.474416 30475 net.cpp:86] Creating Layer ip1
I0428 20:04:51.474419 30475 net.cpp:408] ip1 <- pool1
I0428 20:04:51.474424 30475 net.cpp:382] ip1 -> ip1
I0428 20:04:51.474521 30475 net.cpp:124] Setting up ip1
I0428 20:04:51.474529 30475 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:51.474531 30475 net.cpp:139] Memory required for data: 4856320
I0428 20:04:51.474539 30475 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:51.474544 30475 net.cpp:86] Creating Layer relu1
I0428 20:04:51.474547 30475 net.cpp:408] relu1 <- ip1
I0428 20:04:51.474550 30475 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:51.474719 30475 net.cpp:124] Setting up relu1
I0428 20:04:51.474726 30475 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:51.474730 30475 net.cpp:139] Memory required for data: 4862720
I0428 20:04:51.474732 30475 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:51.474737 30475 net.cpp:86] Creating Layer ip2
I0428 20:04:51.474740 30475 net.cpp:408] ip2 <- ip1
I0428 20:04:51.474745 30475 net.cpp:382] ip2 -> ip2
I0428 20:04:51.474829 30475 net.cpp:124] Setting up ip2
I0428 20:04:51.474835 30475 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:51.474838 30475 net.cpp:139] Memory required for data: 4865280
I0428 20:04:51.474843 30475 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:51.474849 30475 net.cpp:86] Creating Layer relu2
I0428 20:04:51.474853 30475 net.cpp:408] relu2 <- ip2
I0428 20:04:51.474856 30475 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:51.475664 30475 net.cpp:124] Setting up relu2
I0428 20:04:51.475692 30475 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:51.475695 30475 net.cpp:139] Memory required for data: 4867840
I0428 20:04:51.475699 30475 layer_factory.hpp:77] Creating layer loss
I0428 20:04:51.475706 30475 net.cpp:86] Creating Layer loss
I0428 20:04:51.475709 30475 net.cpp:408] loss <- ip2
I0428 20:04:51.475714 30475 net.cpp:408] loss <- label
I0428 20:04:51.475719 30475 net.cpp:382] loss -> loss
I0428 20:04:51.475735 30475 layer_factory.hpp:77] Creating layer loss
I0428 20:04:51.475968 30475 net.cpp:124] Setting up loss
I0428 20:04:51.475977 30475 net.cpp:131] Top shape: (1)
I0428 20:04:51.475981 30475 net.cpp:134]     with loss weight 1
I0428 20:04:51.475999 30475 net.cpp:139] Memory required for data: 4867844
I0428 20:04:51.476003 30475 net.cpp:200] loss needs backward computation.
I0428 20:04:51.476006 30475 net.cpp:200] relu2 needs backward computation.
I0428 20:04:51.476011 30475 net.cpp:200] ip2 needs backward computation.
I0428 20:04:51.476013 30475 net.cpp:200] relu1 needs backward computation.
I0428 20:04:51.476016 30475 net.cpp:200] ip1 needs backward computation.
I0428 20:04:51.476029 30475 net.cpp:200] pool1 needs backward computation.
I0428 20:04:51.476032 30475 net.cpp:200] conv1 needs backward computation.
I0428 20:04:51.476035 30475 net.cpp:200] pool0 needs backward computation.
I0428 20:04:51.476038 30475 net.cpp:200] conv0 needs backward computation.
I0428 20:04:51.476042 30475 net.cpp:202] mnist does not need backward computation.
I0428 20:04:51.476045 30475 net.cpp:244] This network produces output loss
I0428 20:04:51.476053 30475 net.cpp:257] Network initialization done.
I0428 20:04:51.476356 30475 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test983.prototxt
I0428 20:04:51.476409 30475 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:51.476487 30475 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:51.476563 30475 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:51.476608 30475 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:51.476619 30475 net.cpp:86] Creating Layer mnist
I0428 20:04:51.476624 30475 net.cpp:382] mnist -> data
I0428 20:04:51.476631 30475 net.cpp:382] mnist -> label
I0428 20:04:51.476724 30475 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:51.478759 30475 net.cpp:124] Setting up mnist
I0428 20:04:51.478787 30475 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:51.478792 30475 net.cpp:131] Top shape: 100 (100)
I0428 20:04:51.478796 30475 net.cpp:139] Memory required for data: 314000
I0428 20:04:51.478799 30475 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:51.478806 30475 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:51.478808 30475 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:51.478813 30475 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:51.478819 30475 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:51.478890 30475 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:51.478906 30475 net.cpp:131] Top shape: 100 (100)
I0428 20:04:51.478910 30475 net.cpp:131] Top shape: 100 (100)
I0428 20:04:51.478912 30475 net.cpp:139] Memory required for data: 314800
I0428 20:04:51.478915 30475 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:51.478940 30475 net.cpp:86] Creating Layer conv0
I0428 20:04:51.478942 30475 net.cpp:408] conv0 <- data
I0428 20:04:51.478948 30475 net.cpp:382] conv0 -> conv0
I0428 20:04:51.480792 30475 net.cpp:124] Setting up conv0
I0428 20:04:51.480805 30475 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:51.480813 30475 net.cpp:139] Memory required for data: 6074800
I0428 20:04:51.480839 30475 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:51.480861 30475 net.cpp:86] Creating Layer pool0
I0428 20:04:51.480865 30475 net.cpp:408] pool0 <- conv0
I0428 20:04:51.480870 30475 net.cpp:382] pool0 -> pool0
I0428 20:04:51.480940 30475 net.cpp:124] Setting up pool0
I0428 20:04:51.480950 30475 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:51.480953 30475 net.cpp:139] Memory required for data: 7514800
I0428 20:04:51.480957 30475 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:51.480967 30475 net.cpp:86] Creating Layer conv1
I0428 20:04:51.480970 30475 net.cpp:408] conv1 <- pool0
I0428 20:04:51.480976 30475 net.cpp:382] conv1 -> conv1
I0428 20:04:51.483268 30475 net.cpp:124] Setting up conv1
I0428 20:04:51.483283 30475 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:51.483288 30475 net.cpp:139] Memory required for data: 7566000
I0428 20:04:51.483296 30475 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:51.483314 30475 net.cpp:86] Creating Layer pool1
I0428 20:04:51.483319 30475 net.cpp:408] pool1 <- conv1
I0428 20:04:51.483330 30475 net.cpp:382] pool1 -> pool1
I0428 20:04:51.483368 30475 net.cpp:124] Setting up pool1
I0428 20:04:51.483373 30475 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:51.483376 30475 net.cpp:139] Memory required for data: 7578800
I0428 20:04:51.483379 30475 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:51.483386 30475 net.cpp:86] Creating Layer ip1
I0428 20:04:51.483395 30475 net.cpp:408] ip1 <- pool1
I0428 20:04:51.483399 30475 net.cpp:382] ip1 -> ip1
I0428 20:04:51.483531 30475 net.cpp:124] Setting up ip1
I0428 20:04:51.483539 30475 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:51.483542 30475 net.cpp:139] Memory required for data: 7588800
I0428 20:04:51.483549 30475 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:51.483554 30475 net.cpp:86] Creating Layer relu1
I0428 20:04:51.483557 30475 net.cpp:408] relu1 <- ip1
I0428 20:04:51.483561 30475 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:51.483804 30475 net.cpp:124] Setting up relu1
I0428 20:04:51.483813 30475 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:51.483816 30475 net.cpp:139] Memory required for data: 7598800
I0428 20:04:51.483819 30475 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:51.483832 30475 net.cpp:86] Creating Layer ip2
I0428 20:04:51.483835 30475 net.cpp:408] ip2 <- ip1
I0428 20:04:51.483841 30475 net.cpp:382] ip2 -> ip2
I0428 20:04:51.483955 30475 net.cpp:124] Setting up ip2
I0428 20:04:51.483963 30475 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:51.483965 30475 net.cpp:139] Memory required for data: 7602800
I0428 20:04:51.483970 30475 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:51.483974 30475 net.cpp:86] Creating Layer relu2
I0428 20:04:51.483978 30475 net.cpp:408] relu2 <- ip2
I0428 20:04:51.483981 30475 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:51.484148 30475 net.cpp:124] Setting up relu2
I0428 20:04:51.484156 30475 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:51.484159 30475 net.cpp:139] Memory required for data: 7606800
I0428 20:04:51.484163 30475 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:04:51.484189 30475 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:04:51.484191 30475 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:04:51.484195 30475 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:04:51.484226 30475 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:04:51.484264 30475 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:04:51.484271 30475 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:51.484273 30475 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:51.484293 30475 net.cpp:139] Memory required for data: 7614800
I0428 20:04:51.484297 30475 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:51.484302 30475 net.cpp:86] Creating Layer accuracy
I0428 20:04:51.484307 30475 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:04:51.484310 30475 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:51.484315 30475 net.cpp:382] accuracy -> accuracy
I0428 20:04:51.484323 30475 net.cpp:124] Setting up accuracy
I0428 20:04:51.484326 30475 net.cpp:131] Top shape: (1)
I0428 20:04:51.484329 30475 net.cpp:139] Memory required for data: 7614804
I0428 20:04:51.484333 30475 layer_factory.hpp:77] Creating layer loss
I0428 20:04:51.484340 30475 net.cpp:86] Creating Layer loss
I0428 20:04:51.484344 30475 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:04:51.484347 30475 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:51.484351 30475 net.cpp:382] loss -> loss
I0428 20:04:51.484357 30475 layer_factory.hpp:77] Creating layer loss
I0428 20:04:51.484642 30475 net.cpp:124] Setting up loss
I0428 20:04:51.484652 30475 net.cpp:131] Top shape: (1)
I0428 20:04:51.484654 30475 net.cpp:134]     with loss weight 1
I0428 20:04:51.484666 30475 net.cpp:139] Memory required for data: 7614808
I0428 20:04:51.484669 30475 net.cpp:200] loss needs backward computation.
I0428 20:04:51.484673 30475 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:51.484678 30475 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:04:51.484680 30475 net.cpp:200] relu2 needs backward computation.
I0428 20:04:51.484683 30475 net.cpp:200] ip2 needs backward computation.
I0428 20:04:51.484685 30475 net.cpp:200] relu1 needs backward computation.
I0428 20:04:51.484688 30475 net.cpp:200] ip1 needs backward computation.
I0428 20:04:51.484691 30475 net.cpp:200] pool1 needs backward computation.
I0428 20:04:51.484694 30475 net.cpp:200] conv1 needs backward computation.
I0428 20:04:51.484702 30475 net.cpp:200] pool0 needs backward computation.
I0428 20:04:51.484705 30475 net.cpp:200] conv0 needs backward computation.
I0428 20:04:51.484709 30475 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:51.484717 30475 net.cpp:202] mnist does not need backward computation.
I0428 20:04:51.484719 30475 net.cpp:244] This network produces output accuracy
I0428 20:04:51.484722 30475 net.cpp:244] This network produces output loss
I0428 20:04:51.484733 30475 net.cpp:257] Network initialization done.
I0428 20:04:51.484767 30475 solver.cpp:56] Solver scaffolding done.
I0428 20:04:51.485082 30475 caffe.cpp:248] Starting Optimization
I0428 20:04:51.485090 30475 solver.cpp:273] Solving LeNet
I0428 20:04:51.485092 30475 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:51.486104 30475 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:51.491210 30475 blocking_queue.cpp:49] Waiting for data
I0428 20:04:51.564401 30482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:51.565024 30475 solver.cpp:398]     Test net output #0: accuracy = 0.0676
I0428 20:04:51.565059 30475 solver.cpp:398]     Test net output #1: loss = 2.3454 (* 1 = 2.3454 loss)
I0428 20:04:51.567942 30475 solver.cpp:219] Iteration 0 (0 iter/s, 0.0828211s/100 iters), loss = 2.3629
I0428 20:04:51.567987 30475 solver.cpp:238]     Train net output #0: loss = 2.3629 (* 1 = 2.3629 loss)
I0428 20:04:51.568015 30475 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:51.659044 30475 solver.cpp:219] Iteration 100 (1098.34 iter/s, 0.0910466s/100 iters), loss = 1.03817
I0428 20:04:51.659068 30475 solver.cpp:238]     Train net output #0: loss = 1.03817 (* 1 = 1.03817 loss)
I0428 20:04:51.659075 30475 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:51.740025 30475 solver.cpp:219] Iteration 200 (1235.37 iter/s, 0.0809472s/100 iters), loss = 0.269518
I0428 20:04:51.740058 30475 solver.cpp:238]     Train net output #0: loss = 0.269518 (* 1 = 0.269518 loss)
I0428 20:04:51.740064 30475 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:51.820132 30475 solver.cpp:219] Iteration 300 (1249.01 iter/s, 0.0800634s/100 iters), loss = 0.288655
I0428 20:04:51.820153 30475 solver.cpp:238]     Train net output #0: loss = 0.288654 (* 1 = 0.288654 loss)
I0428 20:04:51.820159 30475 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:51.909876 30475 solver.cpp:219] Iteration 400 (1114.67 iter/s, 0.0897126s/100 iters), loss = 0.272288
I0428 20:04:51.909901 30475 solver.cpp:238]     Train net output #0: loss = 0.272288 (* 1 = 0.272288 loss)
I0428 20:04:51.909906 30475 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:51.994987 30475 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:52.070714 30482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:52.071282 30475 solver.cpp:398]     Test net output #0: accuracy = 0.9294
I0428 20:04:52.071319 30475 solver.cpp:398]     Test net output #1: loss = 0.228118 (* 1 = 0.228118 loss)
I0428 20:04:52.072132 30475 solver.cpp:219] Iteration 500 (616.454 iter/s, 0.162218s/100 iters), loss = 0.165532
I0428 20:04:52.072170 30475 solver.cpp:238]     Train net output #0: loss = 0.165532 (* 1 = 0.165532 loss)
I0428 20:04:52.072176 30475 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:52.165627 30475 solver.cpp:219] Iteration 600 (1069.96 iter/s, 0.0934617s/100 iters), loss = 0.179287
I0428 20:04:52.165665 30475 solver.cpp:238]     Train net output #0: loss = 0.179287 (* 1 = 0.179287 loss)
I0428 20:04:52.165670 30475 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:52.247483 30475 solver.cpp:219] Iteration 700 (1222.12 iter/s, 0.0818248s/100 iters), loss = 0.243349
I0428 20:04:52.247522 30475 solver.cpp:238]     Train net output #0: loss = 0.243349 (* 1 = 0.243349 loss)
I0428 20:04:52.247527 30475 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:52.338526 30475 solver.cpp:219] Iteration 800 (1098.79 iter/s, 0.091009s/100 iters), loss = 0.334032
I0428 20:04:52.338565 30475 solver.cpp:238]     Train net output #0: loss = 0.334032 (* 1 = 0.334032 loss)
I0428 20:04:52.338572 30475 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:52.420904 30475 solver.cpp:219] Iteration 900 (1214.42 iter/s, 0.0823438s/100 iters), loss = 0.302859
I0428 20:04:52.420943 30475 solver.cpp:238]     Train net output #0: loss = 0.302859 (* 1 = 0.302859 loss)
I0428 20:04:52.420949 30475 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:52.448030 30481 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:52.501476 30475 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:52.502146 30475 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:52.502706 30475 solver.cpp:311] Iteration 1000, loss = 0.2731
I0428 20:04:52.502719 30475 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:52.577718 30482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:52.578274 30475 solver.cpp:398]     Test net output #0: accuracy = 0.9419
I0428 20:04:52.578310 30475 solver.cpp:398]     Test net output #1: loss = 0.189116 (* 1 = 0.189116 loss)
I0428 20:04:52.578315 30475 solver.cpp:316] Optimization Done.
I0428 20:04:52.578318 30475 caffe.cpp:259] Optimization Done.
