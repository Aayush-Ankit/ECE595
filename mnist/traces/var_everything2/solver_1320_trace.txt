I0428 20:18:30.045804  1151 caffe.cpp:218] Using GPUs 0
I0428 20:18:30.088074  1151 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:30.619503  1151 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1320.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:30.619663  1151 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1320.prototxt
I0428 20:18:30.620154  1151 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:30.620175  1151 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:30.620288  1151 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:30.620373  1151 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:30.620471  1151 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:30.620494  1151 net.cpp:86] Creating Layer mnist
I0428 20:18:30.620504  1151 net.cpp:382] mnist -> data
I0428 20:18:30.620527  1151 net.cpp:382] mnist -> label
I0428 20:18:30.621753  1151 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:30.624613  1151 net.cpp:124] Setting up mnist
I0428 20:18:30.624646  1151 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:30.624655  1151 net.cpp:131] Top shape: 64 (64)
I0428 20:18:30.624660  1151 net.cpp:139] Memory required for data: 200960
I0428 20:18:30.624667  1151 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:30.624701  1151 net.cpp:86] Creating Layer conv0
I0428 20:18:30.624724  1151 net.cpp:408] conv0 <- data
I0428 20:18:30.624740  1151 net.cpp:382] conv0 -> conv0
I0428 20:18:30.918092  1151 net.cpp:124] Setting up conv0
I0428 20:18:30.918138  1151 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:30.918144  1151 net.cpp:139] Memory required for data: 7573760
I0428 20:18:30.918166  1151 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:30.918196  1151 net.cpp:86] Creating Layer pool0
I0428 20:18:30.918202  1151 net.cpp:408] pool0 <- conv0
I0428 20:18:30.918210  1151 net.cpp:382] pool0 -> pool0
I0428 20:18:30.918265  1151 net.cpp:124] Setting up pool0
I0428 20:18:30.918292  1151 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:30.918296  1151 net.cpp:139] Memory required for data: 9416960
I0428 20:18:30.918301  1151 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:30.918315  1151 net.cpp:86] Creating Layer conv1
I0428 20:18:30.918320  1151 net.cpp:408] conv1 <- pool0
I0428 20:18:30.918328  1151 net.cpp:382] conv1 -> conv1
I0428 20:18:30.921931  1151 net.cpp:124] Setting up conv1
I0428 20:18:30.921962  1151 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:30.921967  1151 net.cpp:139] Memory required for data: 9580800
I0428 20:18:30.921978  1151 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:30.921988  1151 net.cpp:86] Creating Layer pool1
I0428 20:18:30.921993  1151 net.cpp:408] pool1 <- conv1
I0428 20:18:30.922015  1151 net.cpp:382] pool1 -> pool1
I0428 20:18:30.922060  1151 net.cpp:124] Setting up pool1
I0428 20:18:30.922070  1151 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:30.922075  1151 net.cpp:139] Memory required for data: 9621760
I0428 20:18:30.922078  1151 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:30.922088  1151 net.cpp:86] Creating Layer ip1
I0428 20:18:30.922092  1151 net.cpp:408] ip1 <- pool1
I0428 20:18:30.922099  1151 net.cpp:382] ip1 -> ip1
I0428 20:18:30.922288  1151 net.cpp:124] Setting up ip1
I0428 20:18:30.922299  1151 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:30.922304  1151 net.cpp:139] Memory required for data: 9634560
I0428 20:18:30.922313  1151 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:30.922322  1151 net.cpp:86] Creating Layer relu1
I0428 20:18:30.922327  1151 net.cpp:408] relu1 <- ip1
I0428 20:18:30.922333  1151 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:30.922529  1151 net.cpp:124] Setting up relu1
I0428 20:18:30.922541  1151 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:30.922546  1151 net.cpp:139] Memory required for data: 9647360
I0428 20:18:30.922551  1151 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:30.922560  1151 net.cpp:86] Creating Layer ip2
I0428 20:18:30.922566  1151 net.cpp:408] ip2 <- ip1
I0428 20:18:30.922574  1151 net.cpp:382] ip2 -> ip2
I0428 20:18:30.922719  1151 net.cpp:124] Setting up ip2
I0428 20:18:30.922729  1151 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:30.922734  1151 net.cpp:139] Memory required for data: 9653760
I0428 20:18:30.922744  1151 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:30.922752  1151 net.cpp:86] Creating Layer relu2
I0428 20:18:30.922756  1151 net.cpp:408] relu2 <- ip2
I0428 20:18:30.922763  1151 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:30.923710  1151 net.cpp:124] Setting up relu2
I0428 20:18:30.923740  1151 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:30.923745  1151 net.cpp:139] Memory required for data: 9660160
I0428 20:18:30.923751  1151 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:30.923761  1151 net.cpp:86] Creating Layer ip3
I0428 20:18:30.923766  1151 net.cpp:408] ip3 <- ip2
I0428 20:18:30.923774  1151 net.cpp:382] ip3 -> ip3
I0428 20:18:30.923904  1151 net.cpp:124] Setting up ip3
I0428 20:18:30.923915  1151 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:30.923920  1151 net.cpp:139] Memory required for data: 9662720
I0428 20:18:30.923933  1151 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:30.923939  1151 net.cpp:86] Creating Layer relu3
I0428 20:18:30.923944  1151 net.cpp:408] relu3 <- ip3
I0428 20:18:30.923951  1151 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:30.924175  1151 net.cpp:124] Setting up relu3
I0428 20:18:30.924187  1151 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:30.924192  1151 net.cpp:139] Memory required for data: 9665280
I0428 20:18:30.924198  1151 layer_factory.hpp:77] Creating layer loss
I0428 20:18:30.924207  1151 net.cpp:86] Creating Layer loss
I0428 20:18:30.924212  1151 net.cpp:408] loss <- ip3
I0428 20:18:30.924218  1151 net.cpp:408] loss <- label
I0428 20:18:30.924226  1151 net.cpp:382] loss -> loss
I0428 20:18:30.924247  1151 layer_factory.hpp:77] Creating layer loss
I0428 20:18:30.924530  1151 net.cpp:124] Setting up loss
I0428 20:18:30.924556  1151 net.cpp:131] Top shape: (1)
I0428 20:18:30.924576  1151 net.cpp:134]     with loss weight 1
I0428 20:18:30.924594  1151 net.cpp:139] Memory required for data: 9665284
I0428 20:18:30.924599  1151 net.cpp:200] loss needs backward computation.
I0428 20:18:30.924605  1151 net.cpp:200] relu3 needs backward computation.
I0428 20:18:30.924609  1151 net.cpp:200] ip3 needs backward computation.
I0428 20:18:30.924614  1151 net.cpp:200] relu2 needs backward computation.
I0428 20:18:30.924618  1151 net.cpp:200] ip2 needs backward computation.
I0428 20:18:30.924623  1151 net.cpp:200] relu1 needs backward computation.
I0428 20:18:30.924628  1151 net.cpp:200] ip1 needs backward computation.
I0428 20:18:30.924633  1151 net.cpp:200] pool1 needs backward computation.
I0428 20:18:30.924638  1151 net.cpp:200] conv1 needs backward computation.
I0428 20:18:30.924643  1151 net.cpp:200] pool0 needs backward computation.
I0428 20:18:30.924648  1151 net.cpp:200] conv0 needs backward computation.
I0428 20:18:30.924652  1151 net.cpp:202] mnist does not need backward computation.
I0428 20:18:30.924657  1151 net.cpp:244] This network produces output loss
I0428 20:18:30.924670  1151 net.cpp:257] Network initialization done.
I0428 20:18:30.925242  1151 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1320.prototxt
I0428 20:18:30.925294  1151 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:30.925433  1151 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:30.925536  1151 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:30.925587  1151 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:30.925602  1151 net.cpp:86] Creating Layer mnist
I0428 20:18:30.925608  1151 net.cpp:382] mnist -> data
I0428 20:18:30.925619  1151 net.cpp:382] mnist -> label
I0428 20:18:30.925739  1151 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:30.928226  1151 net.cpp:124] Setting up mnist
I0428 20:18:30.928273  1151 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:30.928293  1151 net.cpp:131] Top shape: 100 (100)
I0428 20:18:30.928298  1151 net.cpp:139] Memory required for data: 314000
I0428 20:18:30.928304  1151 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:30.928318  1151 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:30.928323  1151 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:30.928330  1151 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:30.928339  1151 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:30.928493  1151 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:30.928503  1151 net.cpp:131] Top shape: 100 (100)
I0428 20:18:30.928509  1151 net.cpp:131] Top shape: 100 (100)
I0428 20:18:30.928514  1151 net.cpp:139] Memory required for data: 314800
I0428 20:18:30.928520  1151 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:30.928532  1151 net.cpp:86] Creating Layer conv0
I0428 20:18:30.928537  1151 net.cpp:408] conv0 <- data
I0428 20:18:30.928545  1151 net.cpp:382] conv0 -> conv0
I0428 20:18:30.930749  1151 net.cpp:124] Setting up conv0
I0428 20:18:30.930784  1151 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:30.930790  1151 net.cpp:139] Memory required for data: 11834800
I0428 20:18:30.930804  1151 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:30.930814  1151 net.cpp:86] Creating Layer pool0
I0428 20:18:30.930821  1151 net.cpp:408] pool0 <- conv0
I0428 20:18:30.930831  1151 net.cpp:382] pool0 -> pool0
I0428 20:18:30.930879  1151 net.cpp:124] Setting up pool0
I0428 20:18:30.930889  1151 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:30.930896  1151 net.cpp:139] Memory required for data: 14714800
I0428 20:18:30.930902  1151 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:30.930913  1151 net.cpp:86] Creating Layer conv1
I0428 20:18:30.930939  1151 net.cpp:408] conv1 <- pool0
I0428 20:18:30.930948  1151 net.cpp:382] conv1 -> conv1
I0428 20:18:30.932996  1151 net.cpp:124] Setting up conv1
I0428 20:18:30.933013  1151 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:30.933020  1151 net.cpp:139] Memory required for data: 14970800
I0428 20:18:30.933033  1151 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:30.933046  1151 net.cpp:86] Creating Layer pool1
I0428 20:18:30.933053  1151 net.cpp:408] pool1 <- conv1
I0428 20:18:30.933060  1151 net.cpp:382] pool1 -> pool1
I0428 20:18:30.933120  1151 net.cpp:124] Setting up pool1
I0428 20:18:30.933130  1151 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:30.933135  1151 net.cpp:139] Memory required for data: 15034800
I0428 20:18:30.933141  1151 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:30.933164  1151 net.cpp:86] Creating Layer ip1
I0428 20:18:30.933169  1151 net.cpp:408] ip1 <- pool1
I0428 20:18:30.933176  1151 net.cpp:382] ip1 -> ip1
I0428 20:18:30.933374  1151 net.cpp:124] Setting up ip1
I0428 20:18:30.933387  1151 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:30.933410  1151 net.cpp:139] Memory required for data: 15054800
I0428 20:18:30.933423  1151 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:30.933430  1151 net.cpp:86] Creating Layer relu1
I0428 20:18:30.933435  1151 net.cpp:408] relu1 <- ip1
I0428 20:18:30.933444  1151 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:30.933689  1151 net.cpp:124] Setting up relu1
I0428 20:18:30.933701  1151 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:30.933706  1151 net.cpp:139] Memory required for data: 15074800
I0428 20:18:30.933712  1151 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:30.933722  1151 net.cpp:86] Creating Layer ip2
I0428 20:18:30.933727  1151 net.cpp:408] ip2 <- ip1
I0428 20:18:30.933734  1151 net.cpp:382] ip2 -> ip2
I0428 20:18:30.933873  1151 net.cpp:124] Setting up ip2
I0428 20:18:30.933883  1151 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:30.933888  1151 net.cpp:139] Memory required for data: 15084800
I0428 20:18:30.933897  1151 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:30.933904  1151 net.cpp:86] Creating Layer relu2
I0428 20:18:30.933909  1151 net.cpp:408] relu2 <- ip2
I0428 20:18:30.933917  1151 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:30.934134  1151 net.cpp:124] Setting up relu2
I0428 20:18:30.934146  1151 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:30.934151  1151 net.cpp:139] Memory required for data: 15094800
I0428 20:18:30.934156  1151 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:30.934165  1151 net.cpp:86] Creating Layer ip3
I0428 20:18:30.934170  1151 net.cpp:408] ip3 <- ip2
I0428 20:18:30.934177  1151 net.cpp:382] ip3 -> ip3
I0428 20:18:30.934324  1151 net.cpp:124] Setting up ip3
I0428 20:18:30.934334  1151 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:30.934339  1151 net.cpp:139] Memory required for data: 15098800
I0428 20:18:30.934350  1151 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:30.934361  1151 net.cpp:86] Creating Layer relu3
I0428 20:18:30.934366  1151 net.cpp:408] relu3 <- ip3
I0428 20:18:30.934372  1151 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:30.935433  1151 net.cpp:124] Setting up relu3
I0428 20:18:30.935463  1151 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:30.935469  1151 net.cpp:139] Memory required for data: 15102800
I0428 20:18:30.935474  1151 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:30.935482  1151 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:30.935488  1151 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:30.935495  1151 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:30.935504  1151 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:30.935556  1151 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:30.935564  1151 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:30.935571  1151 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:30.935576  1151 net.cpp:139] Memory required for data: 15110800
I0428 20:18:30.935581  1151 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:30.935590  1151 net.cpp:86] Creating Layer accuracy
I0428 20:18:30.935595  1151 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:30.935601  1151 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:30.935608  1151 net.cpp:382] accuracy -> accuracy
I0428 20:18:30.935618  1151 net.cpp:124] Setting up accuracy
I0428 20:18:30.935626  1151 net.cpp:131] Top shape: (1)
I0428 20:18:30.935629  1151 net.cpp:139] Memory required for data: 15110804
I0428 20:18:30.935634  1151 layer_factory.hpp:77] Creating layer loss
I0428 20:18:30.935653  1151 net.cpp:86] Creating Layer loss
I0428 20:18:30.935658  1151 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:30.935664  1151 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:30.935670  1151 net.cpp:382] loss -> loss
I0428 20:18:30.935679  1151 layer_factory.hpp:77] Creating layer loss
I0428 20:18:30.936019  1151 net.cpp:124] Setting up loss
I0428 20:18:30.936033  1151 net.cpp:131] Top shape: (1)
I0428 20:18:30.936053  1151 net.cpp:134]     with loss weight 1
I0428 20:18:30.936072  1151 net.cpp:139] Memory required for data: 15110808
I0428 20:18:30.936092  1151 net.cpp:200] loss needs backward computation.
I0428 20:18:30.936098  1151 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:30.936103  1151 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:30.936108  1151 net.cpp:200] relu3 needs backward computation.
I0428 20:18:30.936113  1151 net.cpp:200] ip3 needs backward computation.
I0428 20:18:30.936131  1151 net.cpp:200] relu2 needs backward computation.
I0428 20:18:30.936136  1151 net.cpp:200] ip2 needs backward computation.
I0428 20:18:30.936141  1151 net.cpp:200] relu1 needs backward computation.
I0428 20:18:30.936144  1151 net.cpp:200] ip1 needs backward computation.
I0428 20:18:30.936149  1151 net.cpp:200] pool1 needs backward computation.
I0428 20:18:30.936153  1151 net.cpp:200] conv1 needs backward computation.
I0428 20:18:30.936158  1151 net.cpp:200] pool0 needs backward computation.
I0428 20:18:30.936162  1151 net.cpp:200] conv0 needs backward computation.
I0428 20:18:30.936168  1151 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:30.936173  1151 net.cpp:202] mnist does not need backward computation.
I0428 20:18:30.936177  1151 net.cpp:244] This network produces output accuracy
I0428 20:18:30.936182  1151 net.cpp:244] This network produces output loss
I0428 20:18:30.936198  1151 net.cpp:257] Network initialization done.
I0428 20:18:30.936252  1151 solver.cpp:56] Solver scaffolding done.
I0428 20:18:30.936729  1151 caffe.cpp:248] Starting Optimization
I0428 20:18:30.936738  1151 solver.cpp:273] Solving LeNet
I0428 20:18:30.936758  1151 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:30.936990  1151 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:31.014354  1160 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:31.015753  1151 solver.cpp:398]     Test net output #0: accuracy = 0.104
I0428 20:18:31.015792  1151 solver.cpp:398]     Test net output #1: loss = 2.31007 (* 1 = 2.31007 loss)
I0428 20:18:31.021332  1151 solver.cpp:219] Iteration 0 (-4.66387e-31 iter/s, 0.0845445s/100 iters), loss = 2.31738
I0428 20:18:31.021378  1151 solver.cpp:238]     Train net output #0: loss = 2.31738 (* 1 = 2.31738 loss)
I0428 20:18:31.021392  1151 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:31.149689  1151 solver.cpp:219] Iteration 100 (779.336 iter/s, 0.128314s/100 iters), loss = 0.289114
I0428 20:18:31.149734  1151 solver.cpp:238]     Train net output #0: loss = 0.289114 (* 1 = 0.289114 loss)
I0428 20:18:31.149741  1151 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:31.278370  1151 solver.cpp:219] Iteration 200 (777.351 iter/s, 0.128642s/100 iters), loss = 0.180672
I0428 20:18:31.278414  1151 solver.cpp:238]     Train net output #0: loss = 0.180672 (* 1 = 0.180672 loss)
I0428 20:18:31.278422  1151 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:31.405508  1151 solver.cpp:219] Iteration 300 (786.795 iter/s, 0.127098s/100 iters), loss = 0.247453
I0428 20:18:31.405550  1151 solver.cpp:238]     Train net output #0: loss = 0.247453 (* 1 = 0.247453 loss)
I0428 20:18:31.405557  1151 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:31.533424  1151 solver.cpp:219] Iteration 400 (781.989 iter/s, 0.127879s/100 iters), loss = 0.128179
I0428 20:18:31.533468  1151 solver.cpp:238]     Train net output #0: loss = 0.128179 (* 1 = 0.128179 loss)
I0428 20:18:31.533476  1151 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:31.660429  1151 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:31.726048  1160 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:31.728384  1151 solver.cpp:398]     Test net output #0: accuracy = 0.9638
I0428 20:18:31.728418  1151 solver.cpp:398]     Test net output #1: loss = 0.113104 (* 1 = 0.113104 loss)
I0428 20:18:31.729607  1151 solver.cpp:219] Iteration 500 (509.874 iter/s, 0.196127s/100 iters), loss = 0.0732462
I0428 20:18:31.729645  1151 solver.cpp:238]     Train net output #0: loss = 0.0732461 (* 1 = 0.0732461 loss)
I0428 20:18:31.729665  1151 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:31.852020  1151 solver.cpp:219] Iteration 600 (817.139 iter/s, 0.122378s/100 iters), loss = 0.124355
I0428 20:18:31.852046  1151 solver.cpp:238]     Train net output #0: loss = 0.124355 (* 1 = 0.124355 loss)
I0428 20:18:31.852052  1151 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:31.978162  1151 solver.cpp:219] Iteration 700 (792.993 iter/s, 0.126105s/100 iters), loss = 0.180595
I0428 20:18:31.978201  1151 solver.cpp:238]     Train net output #0: loss = 0.180595 (* 1 = 0.180595 loss)
I0428 20:18:31.978209  1151 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:32.104547  1151 solver.cpp:219] Iteration 800 (791.489 iter/s, 0.126344s/100 iters), loss = 0.205432
I0428 20:18:32.104575  1151 solver.cpp:238]     Train net output #0: loss = 0.205432 (* 1 = 0.205432 loss)
I0428 20:18:32.104583  1151 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:32.233556  1151 solver.cpp:219] Iteration 900 (775.382 iter/s, 0.128969s/100 iters), loss = 0.219274
I0428 20:18:32.233587  1151 solver.cpp:238]     Train net output #0: loss = 0.219273 (* 1 = 0.219273 loss)
I0428 20:18:32.233594  1151 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:32.275277  1159 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:32.358815  1151 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:32.360095  1151 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:32.360951  1151 solver.cpp:311] Iteration 1000, loss = 0.109706
I0428 20:18:32.360970  1151 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:32.426983  1160 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:32.429280  1151 solver.cpp:398]     Test net output #0: accuracy = 0.9778
I0428 20:18:32.429299  1151 solver.cpp:398]     Test net output #1: loss = 0.0728183 (* 1 = 0.0728183 loss)
I0428 20:18:32.429304  1151 solver.cpp:316] Optimization Done.
I0428 20:18:32.429307  1151 caffe.cpp:259] Optimization Done.
