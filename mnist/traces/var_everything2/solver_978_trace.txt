I0428 20:04:40.440266 30434 caffe.cpp:218] Using GPUs 0
I0428 20:04:40.478042 30434 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:40.931093 30434 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test978.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:40.931246 30434 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test978.prototxt
I0428 20:04:40.931563 30434 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:40.931592 30434 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:40.931659 30434 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:40.931715 30434 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:40.931794 30434 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:40.931813 30434 net.cpp:86] Creating Layer mnist
I0428 20:04:40.931818 30434 net.cpp:382] mnist -> data
I0428 20:04:40.931836 30434 net.cpp:382] mnist -> label
I0428 20:04:40.932870 30434 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:40.935070 30434 net.cpp:124] Setting up mnist
I0428 20:04:40.935099 30434 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:40.935104 30434 net.cpp:131] Top shape: 64 (64)
I0428 20:04:40.935107 30434 net.cpp:139] Memory required for data: 200960
I0428 20:04:40.935113 30434 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:40.935127 30434 net.cpp:86] Creating Layer conv0
I0428 20:04:40.935132 30434 net.cpp:408] conv0 <- data
I0428 20:04:40.935140 30434 net.cpp:382] conv0 -> conv0
I0428 20:04:41.160511 30434 net.cpp:124] Setting up conv0
I0428 20:04:41.160538 30434 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:41.160542 30434 net.cpp:139] Memory required for data: 3887360
I0428 20:04:41.160571 30434 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:41.160600 30434 net.cpp:86] Creating Layer pool0
I0428 20:04:41.160604 30434 net.cpp:408] pool0 <- conv0
I0428 20:04:41.160609 30434 net.cpp:382] pool0 -> pool0
I0428 20:04:41.160651 30434 net.cpp:124] Setting up pool0
I0428 20:04:41.160658 30434 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:41.160661 30434 net.cpp:139] Memory required for data: 4808960
I0428 20:04:41.160665 30434 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:41.160675 30434 net.cpp:86] Creating Layer conv1
I0428 20:04:41.160677 30434 net.cpp:408] conv1 <- pool0
I0428 20:04:41.160681 30434 net.cpp:382] conv1 -> conv1
I0428 20:04:41.163461 30434 net.cpp:124] Setting up conv1
I0428 20:04:41.163491 30434 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:41.163496 30434 net.cpp:139] Memory required for data: 4841728
I0428 20:04:41.163502 30434 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:41.163509 30434 net.cpp:86] Creating Layer pool1
I0428 20:04:41.163513 30434 net.cpp:408] pool1 <- conv1
I0428 20:04:41.163534 30434 net.cpp:382] pool1 -> pool1
I0428 20:04:41.163568 30434 net.cpp:124] Setting up pool1
I0428 20:04:41.163574 30434 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:41.163578 30434 net.cpp:139] Memory required for data: 4849920
I0428 20:04:41.163580 30434 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:41.163588 30434 net.cpp:86] Creating Layer ip1
I0428 20:04:41.163590 30434 net.cpp:408] ip1 <- pool1
I0428 20:04:41.163594 30434 net.cpp:382] ip1 -> ip1
I0428 20:04:41.163681 30434 net.cpp:124] Setting up ip1
I0428 20:04:41.163688 30434 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:41.163691 30434 net.cpp:139] Memory required for data: 4852480
I0428 20:04:41.163697 30434 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:41.163703 30434 net.cpp:86] Creating Layer relu1
I0428 20:04:41.163707 30434 net.cpp:408] relu1 <- ip1
I0428 20:04:41.163710 30434 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:41.163862 30434 net.cpp:124] Setting up relu1
I0428 20:04:41.163872 30434 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:41.163874 30434 net.cpp:139] Memory required for data: 4855040
I0428 20:04:41.163877 30434 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:41.163883 30434 net.cpp:86] Creating Layer ip2
I0428 20:04:41.163887 30434 net.cpp:408] ip2 <- ip1
I0428 20:04:41.163892 30434 net.cpp:382] ip2 -> ip2
I0428 20:04:41.163987 30434 net.cpp:124] Setting up ip2
I0428 20:04:41.163995 30434 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:41.163996 30434 net.cpp:139] Memory required for data: 4857600
I0428 20:04:41.164001 30434 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:41.164007 30434 net.cpp:86] Creating Layer relu2
I0428 20:04:41.164011 30434 net.cpp:408] relu2 <- ip2
I0428 20:04:41.164013 30434 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:41.164777 30434 net.cpp:124] Setting up relu2
I0428 20:04:41.164788 30434 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:41.164808 30434 net.cpp:139] Memory required for data: 4860160
I0428 20:04:41.164827 30434 layer_factory.hpp:77] Creating layer loss
I0428 20:04:41.164834 30434 net.cpp:86] Creating Layer loss
I0428 20:04:41.164837 30434 net.cpp:408] loss <- ip2
I0428 20:04:41.164842 30434 net.cpp:408] loss <- label
I0428 20:04:41.164847 30434 net.cpp:382] loss -> loss
I0428 20:04:41.164863 30434 layer_factory.hpp:77] Creating layer loss
I0428 20:04:41.165110 30434 net.cpp:124] Setting up loss
I0428 20:04:41.165122 30434 net.cpp:131] Top shape: (1)
I0428 20:04:41.165125 30434 net.cpp:134]     with loss weight 1
I0428 20:04:41.165140 30434 net.cpp:139] Memory required for data: 4860164
I0428 20:04:41.165144 30434 net.cpp:200] loss needs backward computation.
I0428 20:04:41.165148 30434 net.cpp:200] relu2 needs backward computation.
I0428 20:04:41.165151 30434 net.cpp:200] ip2 needs backward computation.
I0428 20:04:41.165154 30434 net.cpp:200] relu1 needs backward computation.
I0428 20:04:41.165158 30434 net.cpp:200] ip1 needs backward computation.
I0428 20:04:41.165174 30434 net.cpp:200] pool1 needs backward computation.
I0428 20:04:41.165179 30434 net.cpp:200] conv1 needs backward computation.
I0428 20:04:41.165182 30434 net.cpp:200] pool0 needs backward computation.
I0428 20:04:41.165185 30434 net.cpp:200] conv0 needs backward computation.
I0428 20:04:41.165189 30434 net.cpp:202] mnist does not need backward computation.
I0428 20:04:41.165191 30434 net.cpp:244] This network produces output loss
I0428 20:04:41.165201 30434 net.cpp:257] Network initialization done.
I0428 20:04:41.165537 30434 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test978.prototxt
I0428 20:04:41.165578 30434 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:41.165670 30434 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:41.165747 30434 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:41.165791 30434 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:41.165804 30434 net.cpp:86] Creating Layer mnist
I0428 20:04:41.165809 30434 net.cpp:382] mnist -> data
I0428 20:04:41.165817 30434 net.cpp:382] mnist -> label
I0428 20:04:41.165897 30434 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:41.167826 30434 net.cpp:124] Setting up mnist
I0428 20:04:41.167871 30434 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:41.167876 30434 net.cpp:131] Top shape: 100 (100)
I0428 20:04:41.167881 30434 net.cpp:139] Memory required for data: 314000
I0428 20:04:41.167883 30434 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:41.167891 30434 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:41.167894 30434 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:41.167898 30434 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:41.167906 30434 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:41.168004 30434 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:41.168023 30434 net.cpp:131] Top shape: 100 (100)
I0428 20:04:41.168028 30434 net.cpp:131] Top shape: 100 (100)
I0428 20:04:41.168031 30434 net.cpp:139] Memory required for data: 314800
I0428 20:04:41.168035 30434 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:41.168043 30434 net.cpp:86] Creating Layer conv0
I0428 20:04:41.168046 30434 net.cpp:408] conv0 <- data
I0428 20:04:41.168051 30434 net.cpp:382] conv0 -> conv0
I0428 20:04:41.169497 30434 net.cpp:124] Setting up conv0
I0428 20:04:41.169512 30434 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:41.169515 30434 net.cpp:139] Memory required for data: 6074800
I0428 20:04:41.169540 30434 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:41.169548 30434 net.cpp:86] Creating Layer pool0
I0428 20:04:41.169551 30434 net.cpp:408] pool0 <- conv0
I0428 20:04:41.169556 30434 net.cpp:382] pool0 -> pool0
I0428 20:04:41.169591 30434 net.cpp:124] Setting up pool0
I0428 20:04:41.169598 30434 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:41.169601 30434 net.cpp:139] Memory required for data: 7514800
I0428 20:04:41.169605 30434 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:41.169612 30434 net.cpp:86] Creating Layer conv1
I0428 20:04:41.169615 30434 net.cpp:408] conv1 <- pool0
I0428 20:04:41.169620 30434 net.cpp:382] conv1 -> conv1
I0428 20:04:41.171665 30434 net.cpp:124] Setting up conv1
I0428 20:04:41.171679 30434 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:41.171681 30434 net.cpp:139] Memory required for data: 7566000
I0428 20:04:41.171691 30434 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:41.171697 30434 net.cpp:86] Creating Layer pool1
I0428 20:04:41.171700 30434 net.cpp:408] pool1 <- conv1
I0428 20:04:41.171705 30434 net.cpp:382] pool1 -> pool1
I0428 20:04:41.171746 30434 net.cpp:124] Setting up pool1
I0428 20:04:41.171753 30434 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:41.171756 30434 net.cpp:139] Memory required for data: 7578800
I0428 20:04:41.171759 30434 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:41.171764 30434 net.cpp:86] Creating Layer ip1
I0428 20:04:41.171767 30434 net.cpp:408] ip1 <- pool1
I0428 20:04:41.171772 30434 net.cpp:382] ip1 -> ip1
I0428 20:04:41.171903 30434 net.cpp:124] Setting up ip1
I0428 20:04:41.171912 30434 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:41.171916 30434 net.cpp:139] Memory required for data: 7582800
I0428 20:04:41.171922 30434 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:41.171929 30434 net.cpp:86] Creating Layer relu1
I0428 20:04:41.171932 30434 net.cpp:408] relu1 <- ip1
I0428 20:04:41.171937 30434 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:41.172111 30434 net.cpp:124] Setting up relu1
I0428 20:04:41.172122 30434 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:41.172125 30434 net.cpp:139] Memory required for data: 7586800
I0428 20:04:41.172128 30434 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:41.172137 30434 net.cpp:86] Creating Layer ip2
I0428 20:04:41.172139 30434 net.cpp:408] ip2 <- ip1
I0428 20:04:41.172143 30434 net.cpp:382] ip2 -> ip2
I0428 20:04:41.172237 30434 net.cpp:124] Setting up ip2
I0428 20:04:41.172245 30434 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:41.172248 30434 net.cpp:139] Memory required for data: 7590800
I0428 20:04:41.172253 30434 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:41.172258 30434 net.cpp:86] Creating Layer relu2
I0428 20:04:41.172261 30434 net.cpp:408] relu2 <- ip2
I0428 20:04:41.172266 30434 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:41.172466 30434 net.cpp:124] Setting up relu2
I0428 20:04:41.172474 30434 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:41.172477 30434 net.cpp:139] Memory required for data: 7594800
I0428 20:04:41.172479 30434 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:04:41.172487 30434 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:04:41.172489 30434 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:04:41.172493 30434 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:04:41.172508 30434 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:04:41.172559 30434 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:04:41.172564 30434 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:41.172569 30434 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:41.172586 30434 net.cpp:139] Memory required for data: 7602800
I0428 20:04:41.172590 30434 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:41.172595 30434 net.cpp:86] Creating Layer accuracy
I0428 20:04:41.172597 30434 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:04:41.172603 30434 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:41.172608 30434 net.cpp:382] accuracy -> accuracy
I0428 20:04:41.172615 30434 net.cpp:124] Setting up accuracy
I0428 20:04:41.172624 30434 net.cpp:131] Top shape: (1)
I0428 20:04:41.172627 30434 net.cpp:139] Memory required for data: 7602804
I0428 20:04:41.172631 30434 layer_factory.hpp:77] Creating layer loss
I0428 20:04:41.172636 30434 net.cpp:86] Creating Layer loss
I0428 20:04:41.172638 30434 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:04:41.172642 30434 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:41.172663 30434 net.cpp:382] loss -> loss
I0428 20:04:41.172669 30434 layer_factory.hpp:77] Creating layer loss
I0428 20:04:41.172929 30434 net.cpp:124] Setting up loss
I0428 20:04:41.172938 30434 net.cpp:131] Top shape: (1)
I0428 20:04:41.172941 30434 net.cpp:134]     with loss weight 1
I0428 20:04:41.172947 30434 net.cpp:139] Memory required for data: 7602808
I0428 20:04:41.172950 30434 net.cpp:200] loss needs backward computation.
I0428 20:04:41.172955 30434 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:41.172957 30434 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:04:41.172960 30434 net.cpp:200] relu2 needs backward computation.
I0428 20:04:41.172963 30434 net.cpp:200] ip2 needs backward computation.
I0428 20:04:41.172966 30434 net.cpp:200] relu1 needs backward computation.
I0428 20:04:41.172968 30434 net.cpp:200] ip1 needs backward computation.
I0428 20:04:41.172971 30434 net.cpp:200] pool1 needs backward computation.
I0428 20:04:41.172974 30434 net.cpp:200] conv1 needs backward computation.
I0428 20:04:41.172977 30434 net.cpp:200] pool0 needs backward computation.
I0428 20:04:41.172981 30434 net.cpp:200] conv0 needs backward computation.
I0428 20:04:41.172983 30434 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:41.172986 30434 net.cpp:202] mnist does not need backward computation.
I0428 20:04:41.172989 30434 net.cpp:244] This network produces output accuracy
I0428 20:04:41.172998 30434 net.cpp:244] This network produces output loss
I0428 20:04:41.173008 30434 net.cpp:257] Network initialization done.
I0428 20:04:41.173045 30434 solver.cpp:56] Solver scaffolding done.
I0428 20:04:41.173352 30434 caffe.cpp:248] Starting Optimization
I0428 20:04:41.173358 30434 solver.cpp:273] Solving LeNet
I0428 20:04:41.173362 30434 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:41.174068 30434 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:41.181476 30434 blocking_queue.cpp:49] Waiting for data
I0428 20:04:41.230636 30441 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:41.231792 30434 solver.cpp:398]     Test net output #0: accuracy = 0.0811
I0428 20:04:41.231844 30434 solver.cpp:398]     Test net output #1: loss = 2.35025 (* 1 = 2.35025 loss)
I0428 20:04:41.236613 30434 solver.cpp:219] Iteration 0 (0 iter/s, 0.0632157s/100 iters), loss = 2.32281
I0428 20:04:41.236660 30434 solver.cpp:238]     Train net output #0: loss = 2.32281 (* 1 = 2.32281 loss)
I0428 20:04:41.236686 30434 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:41.326537 30434 solver.cpp:219] Iteration 100 (1112.85 iter/s, 0.089859s/100 iters), loss = 0.847065
I0428 20:04:41.326571 30434 solver.cpp:238]     Train net output #0: loss = 0.847065 (* 1 = 0.847065 loss)
I0428 20:04:41.326581 30434 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:41.409862 30434 solver.cpp:219] Iteration 200 (1200.76 iter/s, 0.0832809s/100 iters), loss = 0.521393
I0428 20:04:41.409906 30434 solver.cpp:238]     Train net output #0: loss = 0.521393 (* 1 = 0.521393 loss)
I0428 20:04:41.409914 30434 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:41.492833 30434 solver.cpp:219] Iteration 300 (1206.45 iter/s, 0.0828877s/100 iters), loss = 0.39726
I0428 20:04:41.492863 30434 solver.cpp:238]     Train net output #0: loss = 0.39726 (* 1 = 0.39726 loss)
I0428 20:04:41.492871 30434 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:41.572142 30434 solver.cpp:219] Iteration 400 (1261.51 iter/s, 0.07927s/100 iters), loss = 0.288847
I0428 20:04:41.572166 30434 solver.cpp:238]     Train net output #0: loss = 0.288847 (* 1 = 0.288847 loss)
I0428 20:04:41.572173 30434 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:41.649762 30434 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:41.709698 30441 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:41.711650 30434 solver.cpp:398]     Test net output #0: accuracy = 0.8979
I0428 20:04:41.711683 30434 solver.cpp:398]     Test net output #1: loss = 0.350532 (* 1 = 0.350532 loss)
I0428 20:04:41.712556 30434 solver.cpp:219] Iteration 500 (712.378 iter/s, 0.140375s/100 iters), loss = 0.368233
I0428 20:04:41.712590 30434 solver.cpp:238]     Train net output #0: loss = 0.368233 (* 1 = 0.368233 loss)
I0428 20:04:41.712604 30434 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:41.798082 30434 solver.cpp:219] Iteration 600 (1169.82 iter/s, 0.0854835s/100 iters), loss = 0.25114
I0428 20:04:41.798111 30434 solver.cpp:238]     Train net output #0: loss = 0.25114 (* 1 = 0.25114 loss)
I0428 20:04:41.798132 30434 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:41.881733 30434 solver.cpp:219] Iteration 700 (1195.99 iter/s, 0.0836127s/100 iters), loss = 0.470822
I0428 20:04:41.881762 30434 solver.cpp:238]     Train net output #0: loss = 0.470822 (* 1 = 0.470822 loss)
I0428 20:04:41.881770 30434 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:41.972304 30434 solver.cpp:219] Iteration 800 (1104.62 iter/s, 0.0905288s/100 iters), loss = 0.294545
I0428 20:04:41.972347 30434 solver.cpp:238]     Train net output #0: loss = 0.294545 (* 1 = 0.294545 loss)
I0428 20:04:41.972369 30434 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:42.057570 30434 solver.cpp:219] Iteration 900 (1173.49 iter/s, 0.0852162s/100 iters), loss = 0.325062
I0428 20:04:42.057601 30434 solver.cpp:238]     Train net output #0: loss = 0.325062 (* 1 = 0.325062 loss)
I0428 20:04:42.057610 30434 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:42.085351 30440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:42.140280 30434 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:42.141000 30434 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:42.141557 30434 solver.cpp:311] Iteration 1000, loss = 0.189166
I0428 20:04:42.141574 30434 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:42.194810 30441 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:42.196218 30434 solver.cpp:398]     Test net output #0: accuracy = 0.9418
I0428 20:04:42.196239 30434 solver.cpp:398]     Test net output #1: loss = 0.191414 (* 1 = 0.191414 loss)
I0428 20:04:42.196245 30434 solver.cpp:316] Optimization Done.
I0428 20:04:42.196249 30434 caffe.cpp:259] Optimization Done.
