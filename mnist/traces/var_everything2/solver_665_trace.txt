I0428 19:52:33.942960 27543 caffe.cpp:218] Using GPUs 0
I0428 19:52:33.985980 27543 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:34.591188 27543 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test665.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:34.591361 27543 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test665.prototxt
I0428 19:52:34.591840 27543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:34.591861 27543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:34.591974 27543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:52:34.592067 27543 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:34.592187 27543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:34.592219 27543 net.cpp:86] Creating Layer mnist
I0428 19:52:34.592229 27543 net.cpp:382] mnist -> data
I0428 19:52:34.592259 27543 net.cpp:382] mnist -> label
I0428 19:52:34.593670 27543 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:34.596875 27543 net.cpp:124] Setting up mnist
I0428 19:52:34.596900 27543 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:34.596909 27543 net.cpp:131] Top shape: 64 (64)
I0428 19:52:34.596915 27543 net.cpp:139] Memory required for data: 200960
I0428 19:52:34.596925 27543 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:34.596946 27543 net.cpp:86] Creating Layer conv0
I0428 19:52:34.596953 27543 net.cpp:408] conv0 <- data
I0428 19:52:34.596968 27543 net.cpp:382] conv0 -> conv0
I0428 19:52:34.919271 27543 net.cpp:124] Setting up conv0
I0428 19:52:34.919319 27543 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:34.919324 27543 net.cpp:139] Memory required for data: 938240
I0428 19:52:34.919344 27543 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:34.919375 27543 net.cpp:86] Creating Layer pool0
I0428 19:52:34.919381 27543 net.cpp:408] pool0 <- conv0
I0428 19:52:34.919389 27543 net.cpp:382] pool0 -> pool0
I0428 19:52:34.919450 27543 net.cpp:124] Setting up pool0
I0428 19:52:34.919459 27543 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:34.919481 27543 net.cpp:139] Memory required for data: 1122560
I0428 19:52:34.919486 27543 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:34.919500 27543 net.cpp:86] Creating Layer conv1
I0428 19:52:34.919504 27543 net.cpp:408] conv1 <- pool0
I0428 19:52:34.919512 27543 net.cpp:382] conv1 -> conv1
I0428 19:52:34.923141 27543 net.cpp:124] Setting up conv1
I0428 19:52:34.923173 27543 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:34.923178 27543 net.cpp:139] Memory required for data: 1941760
I0428 19:52:34.923189 27543 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:34.923199 27543 net.cpp:86] Creating Layer pool1
I0428 19:52:34.923203 27543 net.cpp:408] pool1 <- conv1
I0428 19:52:34.923225 27543 net.cpp:382] pool1 -> pool1
I0428 19:52:34.923270 27543 net.cpp:124] Setting up pool1
I0428 19:52:34.923280 27543 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:34.923285 27543 net.cpp:139] Memory required for data: 2146560
I0428 19:52:34.923288 27543 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:34.923303 27543 net.cpp:86] Creating Layer ip1
I0428 19:52:34.923308 27543 net.cpp:408] ip1 <- pool1
I0428 19:52:34.923315 27543 net.cpp:382] ip1 -> ip1
I0428 19:52:34.923503 27543 net.cpp:124] Setting up ip1
I0428 19:52:34.923513 27543 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:34.923517 27543 net.cpp:139] Memory required for data: 2149120
I0428 19:52:34.923527 27543 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:34.923534 27543 net.cpp:86] Creating Layer relu1
I0428 19:52:34.923539 27543 net.cpp:408] relu1 <- ip1
I0428 19:52:34.923545 27543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:34.923768 27543 net.cpp:124] Setting up relu1
I0428 19:52:34.923779 27543 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:34.923784 27543 net.cpp:139] Memory required for data: 2151680
I0428 19:52:34.923789 27543 layer_factory.hpp:77] Creating layer loss
I0428 19:52:34.923797 27543 net.cpp:86] Creating Layer loss
I0428 19:52:34.923801 27543 net.cpp:408] loss <- ip1
I0428 19:52:34.923807 27543 net.cpp:408] loss <- label
I0428 19:52:34.923815 27543 net.cpp:382] loss -> loss
I0428 19:52:34.923835 27543 layer_factory.hpp:77] Creating layer loss
I0428 19:52:34.924924 27543 net.cpp:124] Setting up loss
I0428 19:52:34.924957 27543 net.cpp:131] Top shape: (1)
I0428 19:52:34.924962 27543 net.cpp:134]     with loss weight 1
I0428 19:52:34.924979 27543 net.cpp:139] Memory required for data: 2151684
I0428 19:52:34.924985 27543 net.cpp:200] loss needs backward computation.
I0428 19:52:34.924991 27543 net.cpp:200] relu1 needs backward computation.
I0428 19:52:34.924996 27543 net.cpp:200] ip1 needs backward computation.
I0428 19:52:34.925001 27543 net.cpp:200] pool1 needs backward computation.
I0428 19:52:34.925006 27543 net.cpp:200] conv1 needs backward computation.
I0428 19:52:34.925011 27543 net.cpp:200] pool0 needs backward computation.
I0428 19:52:34.925016 27543 net.cpp:200] conv0 needs backward computation.
I0428 19:52:34.925021 27543 net.cpp:202] mnist does not need backward computation.
I0428 19:52:34.925026 27543 net.cpp:244] This network produces output loss
I0428 19:52:34.925038 27543 net.cpp:257] Network initialization done.
I0428 19:52:34.925457 27543 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test665.prototxt
I0428 19:52:34.925505 27543 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:34.925611 27543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:52:34.925717 27543 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:34.925786 27543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:34.925802 27543 net.cpp:86] Creating Layer mnist
I0428 19:52:34.925809 27543 net.cpp:382] mnist -> data
I0428 19:52:34.925819 27543 net.cpp:382] mnist -> label
I0428 19:52:34.925925 27543 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:34.928583 27543 net.cpp:124] Setting up mnist
I0428 19:52:34.928624 27543 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:34.928632 27543 net.cpp:131] Top shape: 100 (100)
I0428 19:52:34.928635 27543 net.cpp:139] Memory required for data: 314000
I0428 19:52:34.928640 27543 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:34.928653 27543 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:34.928673 27543 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:34.928680 27543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:34.928689 27543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:34.928782 27543 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:34.928793 27543 net.cpp:131] Top shape: 100 (100)
I0428 19:52:34.928798 27543 net.cpp:131] Top shape: 100 (100)
I0428 19:52:34.928802 27543 net.cpp:139] Memory required for data: 314800
I0428 19:52:34.928807 27543 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:34.928840 27543 net.cpp:86] Creating Layer conv0
I0428 19:52:34.928845 27543 net.cpp:408] conv0 <- data
I0428 19:52:34.928853 27543 net.cpp:382] conv0 -> conv0
I0428 19:52:34.929961 27543 net.cpp:124] Setting up conv0
I0428 19:52:34.929992 27543 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:34.929997 27543 net.cpp:139] Memory required for data: 1466800
I0428 19:52:34.930009 27543 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:34.930017 27543 net.cpp:86] Creating Layer pool0
I0428 19:52:34.930022 27543 net.cpp:408] pool0 <- conv0
I0428 19:52:34.930029 27543 net.cpp:382] pool0 -> pool0
I0428 19:52:34.930073 27543 net.cpp:124] Setting up pool0
I0428 19:52:34.930081 27543 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:34.930086 27543 net.cpp:139] Memory required for data: 1754800
I0428 19:52:34.930090 27543 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:34.930101 27543 net.cpp:86] Creating Layer conv1
I0428 19:52:34.930106 27543 net.cpp:408] conv1 <- pool0
I0428 19:52:34.930114 27543 net.cpp:382] conv1 -> conv1
I0428 19:52:34.932166 27543 net.cpp:124] Setting up conv1
I0428 19:52:34.932199 27543 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:34.932204 27543 net.cpp:139] Memory required for data: 3034800
I0428 19:52:34.932214 27543 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:34.932224 27543 net.cpp:86] Creating Layer pool1
I0428 19:52:34.932255 27543 net.cpp:408] pool1 <- conv1
I0428 19:52:34.932270 27543 net.cpp:382] pool1 -> pool1
I0428 19:52:34.932327 27543 net.cpp:124] Setting up pool1
I0428 19:52:34.932340 27543 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:34.932345 27543 net.cpp:139] Memory required for data: 3354800
I0428 19:52:34.932350 27543 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:34.932359 27543 net.cpp:86] Creating Layer ip1
I0428 19:52:34.932364 27543 net.cpp:408] ip1 <- pool1
I0428 19:52:34.932371 27543 net.cpp:382] ip1 -> ip1
I0428 19:52:34.932570 27543 net.cpp:124] Setting up ip1
I0428 19:52:34.932581 27543 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:34.932586 27543 net.cpp:139] Memory required for data: 3358800
I0428 19:52:34.932597 27543 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:34.932605 27543 net.cpp:86] Creating Layer relu1
I0428 19:52:34.932624 27543 net.cpp:408] relu1 <- ip1
I0428 19:52:34.932631 27543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:34.933728 27543 net.cpp:124] Setting up relu1
I0428 19:52:34.933759 27543 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:34.933764 27543 net.cpp:139] Memory required for data: 3362800
I0428 19:52:34.933769 27543 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:52:34.933779 27543 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:52:34.933784 27543 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:52:34.933791 27543 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:52:34.933800 27543 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:52:34.933845 27543 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:52:34.933853 27543 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:34.933859 27543 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:34.933863 27543 net.cpp:139] Memory required for data: 3370800
I0428 19:52:34.933869 27543 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:34.933876 27543 net.cpp:86] Creating Layer accuracy
I0428 19:52:34.933881 27543 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:52:34.933887 27543 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:34.933893 27543 net.cpp:382] accuracy -> accuracy
I0428 19:52:34.933902 27543 net.cpp:124] Setting up accuracy
I0428 19:52:34.933908 27543 net.cpp:131] Top shape: (1)
I0428 19:52:34.933912 27543 net.cpp:139] Memory required for data: 3370804
I0428 19:52:34.933917 27543 layer_factory.hpp:77] Creating layer loss
I0428 19:52:34.933923 27543 net.cpp:86] Creating Layer loss
I0428 19:52:34.933928 27543 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:52:34.933934 27543 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:34.933940 27543 net.cpp:382] loss -> loss
I0428 19:52:34.933948 27543 layer_factory.hpp:77] Creating layer loss
I0428 19:52:34.934236 27543 net.cpp:124] Setting up loss
I0428 19:52:34.934262 27543 net.cpp:131] Top shape: (1)
I0428 19:52:34.934284 27543 net.cpp:134]     with loss weight 1
I0428 19:52:34.934293 27543 net.cpp:139] Memory required for data: 3370808
I0428 19:52:34.934304 27543 net.cpp:200] loss needs backward computation.
I0428 19:52:34.934321 27543 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:34.934347 27543 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:52:34.934352 27543 net.cpp:200] relu1 needs backward computation.
I0428 19:52:34.934356 27543 net.cpp:200] ip1 needs backward computation.
I0428 19:52:34.934366 27543 net.cpp:200] pool1 needs backward computation.
I0428 19:52:34.934386 27543 net.cpp:200] conv1 needs backward computation.
I0428 19:52:34.934392 27543 net.cpp:200] pool0 needs backward computation.
I0428 19:52:34.934397 27543 net.cpp:200] conv0 needs backward computation.
I0428 19:52:34.934414 27543 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:34.934420 27543 net.cpp:202] mnist does not need backward computation.
I0428 19:52:34.934424 27543 net.cpp:244] This network produces output accuracy
I0428 19:52:34.934440 27543 net.cpp:244] This network produces output loss
I0428 19:52:34.934473 27543 net.cpp:257] Network initialization done.
I0428 19:52:34.934520 27543 solver.cpp:56] Solver scaffolding done.
I0428 19:52:34.934854 27543 caffe.cpp:248] Starting Optimization
I0428 19:52:34.934862 27543 solver.cpp:273] Solving LeNet
I0428 19:52:34.934881 27543 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:34.935050 27543 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:34.940402 27543 blocking_queue.cpp:49] Waiting for data
I0428 19:52:35.009765 27550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:35.010288 27543 solver.cpp:398]     Test net output #0: accuracy = 0.0723
I0428 19:52:35.010329 27543 solver.cpp:398]     Test net output #1: loss = 2.4024 (* 1 = 2.4024 loss)
I0428 19:52:35.013639 27543 solver.cpp:219] Iteration 0 (-1.27259e-30 iter/s, 0.0787251s/100 iters), loss = 2.38202
I0428 19:52:35.013700 27543 solver.cpp:238]     Train net output #0: loss = 2.38202 (* 1 = 2.38202 loss)
I0428 19:52:35.013731 27543 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:35.108741 27543 solver.cpp:219] Iteration 100 (1052.28 iter/s, 0.0950313s/100 iters), loss = 1.22045
I0428 19:52:35.108788 27543 solver.cpp:238]     Train net output #0: loss = 1.22045 (* 1 = 1.22045 loss)
I0428 19:52:35.108798 27543 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:35.202816 27543 solver.cpp:219] Iteration 200 (1063.62 iter/s, 0.0940186s/100 iters), loss = 0.744771
I0428 19:52:35.202860 27543 solver.cpp:238]     Train net output #0: loss = 0.744771 (* 1 = 0.744771 loss)
I0428 19:52:35.202869 27543 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:35.299980 27543 solver.cpp:219] Iteration 300 (1029.81 iter/s, 0.0971049s/100 iters), loss = 0.398912
I0428 19:52:35.300043 27543 solver.cpp:238]     Train net output #0: loss = 0.398912 (* 1 = 0.398912 loss)
I0428 19:52:35.300058 27543 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:35.400354 27543 solver.cpp:219] Iteration 400 (996.899 iter/s, 0.100311s/100 iters), loss = 0.365723
I0428 19:52:35.400400 27543 solver.cpp:238]     Train net output #0: loss = 0.365723 (* 1 = 0.365723 loss)
I0428 19:52:35.400409 27543 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:35.500339 27543 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:35.553529 27550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:35.554306 27543 solver.cpp:398]     Test net output #0: accuracy = 0.8619
I0428 19:52:35.554363 27543 solver.cpp:398]     Test net output #1: loss = 0.38318 (* 1 = 0.38318 loss)
I0428 19:52:35.555572 27543 solver.cpp:219] Iteration 500 (644.523 iter/s, 0.155153s/100 iters), loss = 0.421689
I0428 19:52:35.555629 27543 solver.cpp:238]     Train net output #0: loss = 0.421689 (* 1 = 0.421689 loss)
I0428 19:52:35.555641 27543 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:35.656702 27543 solver.cpp:219] Iteration 600 (989.455 iter/s, 0.101066s/100 iters), loss = 0.216122
I0428 19:52:35.656741 27543 solver.cpp:238]     Train net output #0: loss = 0.216122 (* 1 = 0.216122 loss)
I0428 19:52:35.656751 27543 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:35.758888 27543 solver.cpp:219] Iteration 700 (979.089 iter/s, 0.102136s/100 iters), loss = 0.168369
I0428 19:52:35.758935 27543 solver.cpp:238]     Train net output #0: loss = 0.16837 (* 1 = 0.16837 loss)
I0428 19:52:35.758949 27543 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:35.858863 27543 solver.cpp:219] Iteration 800 (1000.82 iter/s, 0.099918s/100 iters), loss = 0.268167
I0428 19:52:35.858902 27543 solver.cpp:238]     Train net output #0: loss = 0.268168 (* 1 = 0.268168 loss)
I0428 19:52:35.858912 27543 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:35.959416 27543 solver.cpp:219] Iteration 900 (995.001 iter/s, 0.100502s/100 iters), loss = 0.264445
I0428 19:52:35.959460 27543 solver.cpp:238]     Train net output #0: loss = 0.264445 (* 1 = 0.264445 loss)
I0428 19:52:35.959472 27543 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:35.994235 27549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:36.062816 27543 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:36.063982 27543 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:36.064767 27543 solver.cpp:311] Iteration 1000, loss = 0.133083
I0428 19:52:36.064793 27543 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:36.139690 27550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:36.140205 27543 solver.cpp:398]     Test net output #0: accuracy = 0.9747
I0428 19:52:36.140234 27543 solver.cpp:398]     Test net output #1: loss = 0.083011 (* 1 = 0.083011 loss)
I0428 19:52:36.140241 27543 solver.cpp:316] Optimization Done.
I0428 19:52:36.140256 27543 caffe.cpp:259] Optimization Done.
