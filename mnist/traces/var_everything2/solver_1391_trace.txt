I0428 20:21:46.716030  1825 caffe.cpp:218] Using GPUs 0
I0428 20:21:46.747961  1825 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:47.229581  1825 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1391.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:47.229724  1825 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1391.prototxt
I0428 20:21:47.230100  1825 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:47.230118  1825 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:47.230217  1825 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:47.230298  1825 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:47.230408  1825 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:47.230429  1825 net.cpp:86] Creating Layer mnist
I0428 20:21:47.230437  1825 net.cpp:382] mnist -> data
I0428 20:21:47.230455  1825 net.cpp:382] mnist -> label
I0428 20:21:47.231492  1825 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:47.233757  1825 net.cpp:124] Setting up mnist
I0428 20:21:47.233788  1825 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:47.233808  1825 net.cpp:131] Top shape: 64 (64)
I0428 20:21:47.233811  1825 net.cpp:139] Memory required for data: 200960
I0428 20:21:47.233816  1825 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:47.233830  1825 net.cpp:86] Creating Layer conv0
I0428 20:21:47.233849  1825 net.cpp:408] conv0 <- data
I0428 20:21:47.233860  1825 net.cpp:382] conv0 -> conv0
I0428 20:21:47.454990  1825 net.cpp:124] Setting up conv0
I0428 20:21:47.455016  1825 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:47.455020  1825 net.cpp:139] Memory required for data: 7573760
I0428 20:21:47.455034  1825 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:47.455046  1825 net.cpp:86] Creating Layer pool0
I0428 20:21:47.455050  1825 net.cpp:408] pool0 <- conv0
I0428 20:21:47.455054  1825 net.cpp:382] pool0 -> pool0
I0428 20:21:47.455114  1825 net.cpp:124] Setting up pool0
I0428 20:21:47.455121  1825 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:47.455123  1825 net.cpp:139] Memory required for data: 9416960
I0428 20:21:47.455127  1825 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:47.455137  1825 net.cpp:86] Creating Layer conv1
I0428 20:21:47.455140  1825 net.cpp:408] conv1 <- pool0
I0428 20:21:47.455145  1825 net.cpp:382] conv1 -> conv1
I0428 20:21:47.457373  1825 net.cpp:124] Setting up conv1
I0428 20:21:47.457402  1825 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:47.457406  1825 net.cpp:139] Memory required for data: 10236160
I0428 20:21:47.457417  1825 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:47.457438  1825 net.cpp:86] Creating Layer pool1
I0428 20:21:47.457442  1825 net.cpp:408] pool1 <- conv1
I0428 20:21:47.457446  1825 net.cpp:382] pool1 -> pool1
I0428 20:21:47.457482  1825 net.cpp:124] Setting up pool1
I0428 20:21:47.457489  1825 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:47.457492  1825 net.cpp:139] Memory required for data: 10440960
I0428 20:21:47.457495  1825 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:47.457502  1825 net.cpp:86] Creating Layer ip1
I0428 20:21:47.457505  1825 net.cpp:408] ip1 <- pool1
I0428 20:21:47.457509  1825 net.cpp:382] ip1 -> ip1
I0428 20:21:47.457711  1825 net.cpp:124] Setting up ip1
I0428 20:21:47.457732  1825 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:47.457743  1825 net.cpp:139] Memory required for data: 10447360
I0428 20:21:47.457751  1825 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:47.457756  1825 net.cpp:86] Creating Layer relu1
I0428 20:21:47.457758  1825 net.cpp:408] relu1 <- ip1
I0428 20:21:47.457762  1825 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:47.457921  1825 net.cpp:124] Setting up relu1
I0428 20:21:47.457929  1825 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:47.457932  1825 net.cpp:139] Memory required for data: 10453760
I0428 20:21:47.457936  1825 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:47.457940  1825 net.cpp:86] Creating Layer ip2
I0428 20:21:47.457943  1825 net.cpp:408] ip2 <- ip1
I0428 20:21:47.457948  1825 net.cpp:382] ip2 -> ip2
I0428 20:21:47.458053  1825 net.cpp:124] Setting up ip2
I0428 20:21:47.458060  1825 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:47.458063  1825 net.cpp:139] Memory required for data: 10460160
I0428 20:21:47.458068  1825 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:47.458073  1825 net.cpp:86] Creating Layer relu2
I0428 20:21:47.458076  1825 net.cpp:408] relu2 <- ip2
I0428 20:21:47.458081  1825 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:47.458849  1825 net.cpp:124] Setting up relu2
I0428 20:21:47.458861  1825 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:47.458880  1825 net.cpp:139] Memory required for data: 10466560
I0428 20:21:47.458884  1825 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:47.458890  1825 net.cpp:86] Creating Layer ip3
I0428 20:21:47.458894  1825 net.cpp:408] ip3 <- ip2
I0428 20:21:47.458899  1825 net.cpp:382] ip3 -> ip3
I0428 20:21:47.458988  1825 net.cpp:124] Setting up ip3
I0428 20:21:47.458998  1825 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:47.459002  1825 net.cpp:139] Memory required for data: 10469120
I0428 20:21:47.459008  1825 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:47.459017  1825 net.cpp:86] Creating Layer relu3
I0428 20:21:47.459019  1825 net.cpp:408] relu3 <- ip3
I0428 20:21:47.459023  1825 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:47.459182  1825 net.cpp:124] Setting up relu3
I0428 20:21:47.459192  1825 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:47.459195  1825 net.cpp:139] Memory required for data: 10471680
I0428 20:21:47.459198  1825 layer_factory.hpp:77] Creating layer loss
I0428 20:21:47.459204  1825 net.cpp:86] Creating Layer loss
I0428 20:21:47.459208  1825 net.cpp:408] loss <- ip3
I0428 20:21:47.459210  1825 net.cpp:408] loss <- label
I0428 20:21:47.459216  1825 net.cpp:382] loss -> loss
I0428 20:21:47.459229  1825 layer_factory.hpp:77] Creating layer loss
I0428 20:21:47.459456  1825 net.cpp:124] Setting up loss
I0428 20:21:47.459465  1825 net.cpp:131] Top shape: (1)
I0428 20:21:47.459467  1825 net.cpp:134]     with loss weight 1
I0428 20:21:47.459482  1825 net.cpp:139] Memory required for data: 10471684
I0428 20:21:47.459486  1825 net.cpp:200] loss needs backward computation.
I0428 20:21:47.459489  1825 net.cpp:200] relu3 needs backward computation.
I0428 20:21:47.459491  1825 net.cpp:200] ip3 needs backward computation.
I0428 20:21:47.459494  1825 net.cpp:200] relu2 needs backward computation.
I0428 20:21:47.459497  1825 net.cpp:200] ip2 needs backward computation.
I0428 20:21:47.459501  1825 net.cpp:200] relu1 needs backward computation.
I0428 20:21:47.459502  1825 net.cpp:200] ip1 needs backward computation.
I0428 20:21:47.459506  1825 net.cpp:200] pool1 needs backward computation.
I0428 20:21:47.459508  1825 net.cpp:200] conv1 needs backward computation.
I0428 20:21:47.459511  1825 net.cpp:200] pool0 needs backward computation.
I0428 20:21:47.459514  1825 net.cpp:200] conv0 needs backward computation.
I0428 20:21:47.459517  1825 net.cpp:202] mnist does not need backward computation.
I0428 20:21:47.459520  1825 net.cpp:244] This network produces output loss
I0428 20:21:47.459529  1825 net.cpp:257] Network initialization done.
I0428 20:21:47.459848  1825 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1391.prototxt
I0428 20:21:47.459889  1825 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:47.459975  1825 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:47.460072  1825 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:47.460114  1825 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:47.460126  1825 net.cpp:86] Creating Layer mnist
I0428 20:21:47.460130  1825 net.cpp:382] mnist -> data
I0428 20:21:47.460137  1825 net.cpp:382] mnist -> label
I0428 20:21:47.460214  1825 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:47.462307  1825 net.cpp:124] Setting up mnist
I0428 20:21:47.462337  1825 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:47.462342  1825 net.cpp:131] Top shape: 100 (100)
I0428 20:21:47.462347  1825 net.cpp:139] Memory required for data: 314000
I0428 20:21:47.462352  1825 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:47.462360  1825 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:47.462364  1825 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:47.462369  1825 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:47.462375  1825 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:47.462455  1825 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:47.462461  1825 net.cpp:131] Top shape: 100 (100)
I0428 20:21:47.462465  1825 net.cpp:131] Top shape: 100 (100)
I0428 20:21:47.462467  1825 net.cpp:139] Memory required for data: 314800
I0428 20:21:47.462471  1825 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:47.462478  1825 net.cpp:86] Creating Layer conv0
I0428 20:21:47.462481  1825 net.cpp:408] conv0 <- data
I0428 20:21:47.462486  1825 net.cpp:382] conv0 -> conv0
I0428 20:21:47.464022  1825 net.cpp:124] Setting up conv0
I0428 20:21:47.464040  1825 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:47.464043  1825 net.cpp:139] Memory required for data: 11834800
I0428 20:21:47.464067  1825 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:47.464073  1825 net.cpp:86] Creating Layer pool0
I0428 20:21:47.464076  1825 net.cpp:408] pool0 <- conv0
I0428 20:21:47.464082  1825 net.cpp:382] pool0 -> pool0
I0428 20:21:47.464119  1825 net.cpp:124] Setting up pool0
I0428 20:21:47.464125  1825 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:47.464128  1825 net.cpp:139] Memory required for data: 14714800
I0428 20:21:47.464136  1825 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:47.464144  1825 net.cpp:86] Creating Layer conv1
I0428 20:21:47.464148  1825 net.cpp:408] conv1 <- pool0
I0428 20:21:47.464153  1825 net.cpp:382] conv1 -> conv1
I0428 20:21:47.466054  1825 net.cpp:124] Setting up conv1
I0428 20:21:47.466069  1825 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:47.466073  1825 net.cpp:139] Memory required for data: 15994800
I0428 20:21:47.466083  1825 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:47.466089  1825 net.cpp:86] Creating Layer pool1
I0428 20:21:47.466101  1825 net.cpp:408] pool1 <- conv1
I0428 20:21:47.466112  1825 net.cpp:382] pool1 -> pool1
I0428 20:21:47.466150  1825 net.cpp:124] Setting up pool1
I0428 20:21:47.466156  1825 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:47.466159  1825 net.cpp:139] Memory required for data: 16314800
I0428 20:21:47.466162  1825 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:47.466173  1825 net.cpp:86] Creating Layer ip1
I0428 20:21:47.466176  1825 net.cpp:408] ip1 <- pool1
I0428 20:21:47.466181  1825 net.cpp:382] ip1 -> ip1
I0428 20:21:47.466413  1825 net.cpp:124] Setting up ip1
I0428 20:21:47.466420  1825 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:47.466434  1825 net.cpp:139] Memory required for data: 16324800
I0428 20:21:47.466440  1825 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:47.466445  1825 net.cpp:86] Creating Layer relu1
I0428 20:21:47.466447  1825 net.cpp:408] relu1 <- ip1
I0428 20:21:47.466451  1825 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:47.466701  1825 net.cpp:124] Setting up relu1
I0428 20:21:47.466711  1825 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:47.466714  1825 net.cpp:139] Memory required for data: 16334800
I0428 20:21:47.466717  1825 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:47.466724  1825 net.cpp:86] Creating Layer ip2
I0428 20:21:47.466728  1825 net.cpp:408] ip2 <- ip1
I0428 20:21:47.466733  1825 net.cpp:382] ip2 -> ip2
I0428 20:21:47.466831  1825 net.cpp:124] Setting up ip2
I0428 20:21:47.466840  1825 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:47.466842  1825 net.cpp:139] Memory required for data: 16344800
I0428 20:21:47.466847  1825 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:47.466852  1825 net.cpp:86] Creating Layer relu2
I0428 20:21:47.466856  1825 net.cpp:408] relu2 <- ip2
I0428 20:21:47.466859  1825 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:47.467077  1825 net.cpp:124] Setting up relu2
I0428 20:21:47.467085  1825 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:47.467089  1825 net.cpp:139] Memory required for data: 16354800
I0428 20:21:47.467108  1825 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:47.467118  1825 net.cpp:86] Creating Layer ip3
I0428 20:21:47.467123  1825 net.cpp:408] ip3 <- ip2
I0428 20:21:47.467128  1825 net.cpp:382] ip3 -> ip3
I0428 20:21:47.467239  1825 net.cpp:124] Setting up ip3
I0428 20:21:47.467247  1825 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:47.467250  1825 net.cpp:139] Memory required for data: 16358800
I0428 20:21:47.467257  1825 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:47.467263  1825 net.cpp:86] Creating Layer relu3
I0428 20:21:47.467267  1825 net.cpp:408] relu3 <- ip3
I0428 20:21:47.467272  1825 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:47.468055  1825 net.cpp:124] Setting up relu3
I0428 20:21:47.468066  1825 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:47.468070  1825 net.cpp:139] Memory required for data: 16362800
I0428 20:21:47.468073  1825 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:47.468078  1825 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:47.468081  1825 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:47.468086  1825 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:47.468093  1825 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:47.468129  1825 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:47.468137  1825 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:47.468139  1825 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:47.468142  1825 net.cpp:139] Memory required for data: 16370800
I0428 20:21:47.468145  1825 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:47.468150  1825 net.cpp:86] Creating Layer accuracy
I0428 20:21:47.468153  1825 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:47.468158  1825 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:47.468161  1825 net.cpp:382] accuracy -> accuracy
I0428 20:21:47.468168  1825 net.cpp:124] Setting up accuracy
I0428 20:21:47.468171  1825 net.cpp:131] Top shape: (1)
I0428 20:21:47.468174  1825 net.cpp:139] Memory required for data: 16370804
I0428 20:21:47.468178  1825 layer_factory.hpp:77] Creating layer loss
I0428 20:21:47.468183  1825 net.cpp:86] Creating Layer loss
I0428 20:21:47.468185  1825 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:47.468189  1825 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:47.468192  1825 net.cpp:382] loss -> loss
I0428 20:21:47.468199  1825 layer_factory.hpp:77] Creating layer loss
I0428 20:21:47.468436  1825 net.cpp:124] Setting up loss
I0428 20:21:47.468444  1825 net.cpp:131] Top shape: (1)
I0428 20:21:47.468463  1825 net.cpp:134]     with loss weight 1
I0428 20:21:47.468479  1825 net.cpp:139] Memory required for data: 16370808
I0428 20:21:47.468483  1825 net.cpp:200] loss needs backward computation.
I0428 20:21:47.468487  1825 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:47.468489  1825 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:47.468492  1825 net.cpp:200] relu3 needs backward computation.
I0428 20:21:47.468495  1825 net.cpp:200] ip3 needs backward computation.
I0428 20:21:47.468497  1825 net.cpp:200] relu2 needs backward computation.
I0428 20:21:47.468500  1825 net.cpp:200] ip2 needs backward computation.
I0428 20:21:47.468502  1825 net.cpp:200] relu1 needs backward computation.
I0428 20:21:47.468505  1825 net.cpp:200] ip1 needs backward computation.
I0428 20:21:47.468508  1825 net.cpp:200] pool1 needs backward computation.
I0428 20:21:47.468510  1825 net.cpp:200] conv1 needs backward computation.
I0428 20:21:47.468513  1825 net.cpp:200] pool0 needs backward computation.
I0428 20:21:47.468516  1825 net.cpp:200] conv0 needs backward computation.
I0428 20:21:47.468519  1825 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:47.468523  1825 net.cpp:202] mnist does not need backward computation.
I0428 20:21:47.468526  1825 net.cpp:244] This network produces output accuracy
I0428 20:21:47.468529  1825 net.cpp:244] This network produces output loss
I0428 20:21:47.468539  1825 net.cpp:257] Network initialization done.
I0428 20:21:47.468578  1825 solver.cpp:56] Solver scaffolding done.
I0428 20:21:47.468930  1825 caffe.cpp:248] Starting Optimization
I0428 20:21:47.468937  1825 solver.cpp:273] Solving LeNet
I0428 20:21:47.468940  1825 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:47.469750  1825 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:47.543938  1832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:47.546581  1825 solver.cpp:398]     Test net output #0: accuracy = 0.1034
I0428 20:21:47.546597  1825 solver.cpp:398]     Test net output #1: loss = 2.29821 (* 1 = 2.29821 loss)
I0428 20:21:47.550709  1825 solver.cpp:219] Iteration 0 (-7.73065e-31 iter/s, 0.0817439s/100 iters), loss = 2.28848
I0428 20:21:47.550732  1825 solver.cpp:238]     Train net output #0: loss = 2.28848 (* 1 = 2.28848 loss)
I0428 20:21:47.550760  1825 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:47.705761  1825 solver.cpp:219] Iteration 100 (645.112 iter/s, 0.155012s/100 iters), loss = 1.22922
I0428 20:21:47.705791  1825 solver.cpp:238]     Train net output #0: loss = 1.22922 (* 1 = 1.22922 loss)
I0428 20:21:47.705797  1825 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:47.858042  1825 solver.cpp:219] Iteration 200 (656.861 iter/s, 0.152239s/100 iters), loss = 0.930273
I0428 20:21:47.858067  1825 solver.cpp:238]     Train net output #0: loss = 0.930273 (* 1 = 0.930273 loss)
I0428 20:21:47.858072  1825 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:48.009095  1825 solver.cpp:219] Iteration 300 (662.256 iter/s, 0.150999s/100 iters), loss = 0.96239
I0428 20:21:48.009120  1825 solver.cpp:238]     Train net output #0: loss = 0.96239 (* 1 = 0.96239 loss)
I0428 20:21:48.009142  1825 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:48.170976  1825 solver.cpp:219] Iteration 400 (617.885 iter/s, 0.161842s/100 iters), loss = 0.733236
I0428 20:21:48.171002  1825 solver.cpp:238]     Train net output #0: loss = 0.733236 (* 1 = 0.733236 loss)
I0428 20:21:48.171008  1825 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:48.326211  1825 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:48.398983  1832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:48.401625  1825 solver.cpp:398]     Test net output #0: accuracy = 0.6947
I0428 20:21:48.401659  1825 solver.cpp:398]     Test net output #1: loss = 0.771726 (* 1 = 0.771726 loss)
I0428 20:21:48.403101  1825 solver.cpp:219] Iteration 500 (430.879 iter/s, 0.232084s/100 iters), loss = 0.85236
I0428 20:21:48.403123  1825 solver.cpp:238]     Train net output #0: loss = 0.85236 (* 1 = 0.85236 loss)
I0428 20:21:48.403143  1825 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:48.562273  1825 solver.cpp:219] Iteration 600 (628.398 iter/s, 0.159135s/100 iters), loss = 0.788672
I0428 20:21:48.562305  1825 solver.cpp:238]     Train net output #0: loss = 0.788672 (* 1 = 0.788672 loss)
I0428 20:21:48.562312  1825 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:48.725584  1825 solver.cpp:219] Iteration 700 (612.503 iter/s, 0.163265s/100 iters), loss = 1.049
I0428 20:21:48.725620  1825 solver.cpp:238]     Train net output #0: loss = 1.049 (* 1 = 1.049 loss)
I0428 20:21:48.725628  1825 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:48.895000  1825 solver.cpp:219] Iteration 800 (590.439 iter/s, 0.169366s/100 iters), loss = 0.939341
I0428 20:21:48.895038  1825 solver.cpp:238]     Train net output #0: loss = 0.939341 (* 1 = 0.939341 loss)
I0428 20:21:48.895054  1825 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:49.065006  1825 solver.cpp:219] Iteration 900 (588.391 iter/s, 0.169955s/100 iters), loss = 0.589022
I0428 20:21:49.065052  1825 solver.cpp:238]     Train net output #0: loss = 0.589022 (* 1 = 0.589022 loss)
I0428 20:21:49.065071  1825 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:49.120040  1831 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:49.233887  1825 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:49.236773  1825 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:49.238529  1825 solver.cpp:311] Iteration 1000, loss = 0.743033
I0428 20:21:49.238555  1825 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:49.317365  1832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:49.320140  1825 solver.cpp:398]     Test net output #0: accuracy = 0.7872
I0428 20:21:49.320163  1825 solver.cpp:398]     Test net output #1: loss = 0.540422 (* 1 = 0.540422 loss)
I0428 20:21:49.320168  1825 solver.cpp:316] Optimization Done.
I0428 20:21:49.320184  1825 caffe.cpp:259] Optimization Done.
