I0428 19:28:20.282973 21599 caffe.cpp:218] Using GPUs 0
I0428 19:28:20.320540 21599 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:20.838816 21599 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test22.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:20.838958 21599 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test22.prototxt
I0428 19:28:20.839267 21599 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:20.839283 21599 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:20.839354 21599 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:20.839426 21599 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:20.839524 21599 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:20.839547 21599 net.cpp:86] Creating Layer mnist
I0428 19:28:20.839555 21599 net.cpp:382] mnist -> data
I0428 19:28:20.839579 21599 net.cpp:382] mnist -> label
I0428 19:28:20.841292 21599 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:20.843744 21599 net.cpp:124] Setting up mnist
I0428 19:28:20.843760 21599 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:20.843766 21599 net.cpp:131] Top shape: 64 (64)
I0428 19:28:20.843770 21599 net.cpp:139] Memory required for data: 200960
I0428 19:28:20.843776 21599 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:20.843789 21599 net.cpp:86] Creating Layer ip1
I0428 19:28:20.843794 21599 net.cpp:408] ip1 <- data
I0428 19:28:20.843807 21599 net.cpp:382] ip1 -> ip1
I0428 19:28:20.844147 21599 net.cpp:124] Setting up ip1
I0428 19:28:20.844161 21599 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:20.844164 21599 net.cpp:139] Memory required for data: 207360
I0428 19:28:20.844177 21599 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:20.844185 21599 net.cpp:86] Creating Layer relu1
I0428 19:28:20.844189 21599 net.cpp:408] relu1 <- ip1
I0428 19:28:20.844194 21599 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:21.126539 21599 net.cpp:124] Setting up relu1
I0428 19:28:21.126566 21599 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:21.126570 21599 net.cpp:139] Memory required for data: 213760
I0428 19:28:21.126575 21599 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:21.126587 21599 net.cpp:86] Creating Layer ip2
I0428 19:28:21.126610 21599 net.cpp:408] ip2 <- ip1
I0428 19:28:21.126618 21599 net.cpp:382] ip2 -> ip2
I0428 19:28:21.126729 21599 net.cpp:124] Setting up ip2
I0428 19:28:21.126737 21599 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:21.126740 21599 net.cpp:139] Memory required for data: 216320
I0428 19:28:21.126750 21599 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:21.126758 21599 net.cpp:86] Creating Layer relu2
I0428 19:28:21.126761 21599 net.cpp:408] relu2 <- ip2
I0428 19:28:21.126765 21599 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:21.127506 21599 net.cpp:124] Setting up relu2
I0428 19:28:21.127517 21599 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:21.127521 21599 net.cpp:139] Memory required for data: 218880
I0428 19:28:21.127524 21599 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:21.127532 21599 net.cpp:86] Creating Layer ip3
I0428 19:28:21.127534 21599 net.cpp:408] ip3 <- ip2
I0428 19:28:21.127540 21599 net.cpp:382] ip3 -> ip3
I0428 19:28:21.127632 21599 net.cpp:124] Setting up ip3
I0428 19:28:21.127640 21599 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:21.127643 21599 net.cpp:139] Memory required for data: 221440
I0428 19:28:21.127651 21599 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:21.127656 21599 net.cpp:86] Creating Layer relu3
I0428 19:28:21.127660 21599 net.cpp:408] relu3 <- ip3
I0428 19:28:21.127665 21599 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:21.127830 21599 net.cpp:124] Setting up relu3
I0428 19:28:21.127838 21599 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:21.127841 21599 net.cpp:139] Memory required for data: 224000
I0428 19:28:21.127845 21599 layer_factory.hpp:77] Creating layer loss
I0428 19:28:21.127858 21599 net.cpp:86] Creating Layer loss
I0428 19:28:21.127862 21599 net.cpp:408] loss <- ip3
I0428 19:28:21.127866 21599 net.cpp:408] loss <- label
I0428 19:28:21.127871 21599 net.cpp:382] loss -> loss
I0428 19:28:21.127885 21599 layer_factory.hpp:77] Creating layer loss
I0428 19:28:21.129030 21599 net.cpp:124] Setting up loss
I0428 19:28:21.129043 21599 net.cpp:131] Top shape: (1)
I0428 19:28:21.129046 21599 net.cpp:134]     with loss weight 1
I0428 19:28:21.129060 21599 net.cpp:139] Memory required for data: 224004
I0428 19:28:21.129065 21599 net.cpp:200] loss needs backward computation.
I0428 19:28:21.129067 21599 net.cpp:200] relu3 needs backward computation.
I0428 19:28:21.129070 21599 net.cpp:200] ip3 needs backward computation.
I0428 19:28:21.129075 21599 net.cpp:200] relu2 needs backward computation.
I0428 19:28:21.129077 21599 net.cpp:200] ip2 needs backward computation.
I0428 19:28:21.129081 21599 net.cpp:200] relu1 needs backward computation.
I0428 19:28:21.129082 21599 net.cpp:200] ip1 needs backward computation.
I0428 19:28:21.129086 21599 net.cpp:202] mnist does not need backward computation.
I0428 19:28:21.129088 21599 net.cpp:244] This network produces output loss
I0428 19:28:21.129096 21599 net.cpp:257] Network initialization done.
I0428 19:28:21.129344 21599 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test22.prototxt
I0428 19:28:21.129369 21599 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:21.129453 21599 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:21.129526 21599 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:21.129570 21599 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:21.129585 21599 net.cpp:86] Creating Layer mnist
I0428 19:28:21.129590 21599 net.cpp:382] mnist -> data
I0428 19:28:21.129598 21599 net.cpp:382] mnist -> label
I0428 19:28:21.129683 21599 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:21.131642 21599 net.cpp:124] Setting up mnist
I0428 19:28:21.131671 21599 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:21.131676 21599 net.cpp:131] Top shape: 100 (100)
I0428 19:28:21.131680 21599 net.cpp:139] Memory required for data: 314000
I0428 19:28:21.131683 21599 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:21.131731 21599 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:21.131736 21599 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:21.131741 21599 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:21.131748 21599 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:21.131789 21599 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:21.131795 21599 net.cpp:131] Top shape: 100 (100)
I0428 19:28:21.131798 21599 net.cpp:131] Top shape: 100 (100)
I0428 19:28:21.131801 21599 net.cpp:139] Memory required for data: 314800
I0428 19:28:21.131804 21599 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:21.131811 21599 net.cpp:86] Creating Layer ip1
I0428 19:28:21.131814 21599 net.cpp:408] ip1 <- data
I0428 19:28:21.131820 21599 net.cpp:382] ip1 -> ip1
I0428 19:28:21.132113 21599 net.cpp:124] Setting up ip1
I0428 19:28:21.132122 21599 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:21.132125 21599 net.cpp:139] Memory required for data: 324800
I0428 19:28:21.132135 21599 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:21.132140 21599 net.cpp:86] Creating Layer relu1
I0428 19:28:21.132143 21599 net.cpp:408] relu1 <- ip1
I0428 19:28:21.132148 21599 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:21.133157 21599 net.cpp:124] Setting up relu1
I0428 19:28:21.133169 21599 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:21.133173 21599 net.cpp:139] Memory required for data: 334800
I0428 19:28:21.133177 21599 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:21.133185 21599 net.cpp:86] Creating Layer ip2
I0428 19:28:21.133188 21599 net.cpp:408] ip2 <- ip1
I0428 19:28:21.133209 21599 net.cpp:382] ip2 -> ip2
I0428 19:28:21.133308 21599 net.cpp:124] Setting up ip2
I0428 19:28:21.133316 21599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:21.133319 21599 net.cpp:139] Memory required for data: 338800
I0428 19:28:21.133327 21599 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:21.133332 21599 net.cpp:86] Creating Layer relu2
I0428 19:28:21.133334 21599 net.cpp:408] relu2 <- ip2
I0428 19:28:21.133339 21599 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:21.133499 21599 net.cpp:124] Setting up relu2
I0428 19:28:21.133508 21599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:21.133512 21599 net.cpp:139] Memory required for data: 342800
I0428 19:28:21.133514 21599 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:21.133519 21599 net.cpp:86] Creating Layer ip3
I0428 19:28:21.133522 21599 net.cpp:408] ip3 <- ip2
I0428 19:28:21.133527 21599 net.cpp:382] ip3 -> ip3
I0428 19:28:21.133630 21599 net.cpp:124] Setting up ip3
I0428 19:28:21.133638 21599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:21.133641 21599 net.cpp:139] Memory required for data: 346800
I0428 19:28:21.133648 21599 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:21.133654 21599 net.cpp:86] Creating Layer relu3
I0428 19:28:21.133673 21599 net.cpp:408] relu3 <- ip3
I0428 19:28:21.133678 21599 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:21.133853 21599 net.cpp:124] Setting up relu3
I0428 19:28:21.133862 21599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:21.133865 21599 net.cpp:139] Memory required for data: 350800
I0428 19:28:21.133868 21599 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:21.133874 21599 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:21.133878 21599 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:21.133883 21599 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:21.133888 21599 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:21.133924 21599 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:21.133929 21599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:21.133932 21599 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:21.133935 21599 net.cpp:139] Memory required for data: 358800
I0428 19:28:21.133939 21599 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:21.133942 21599 net.cpp:86] Creating Layer accuracy
I0428 19:28:21.133945 21599 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:21.133949 21599 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:21.133955 21599 net.cpp:382] accuracy -> accuracy
I0428 19:28:21.133961 21599 net.cpp:124] Setting up accuracy
I0428 19:28:21.133965 21599 net.cpp:131] Top shape: (1)
I0428 19:28:21.133967 21599 net.cpp:139] Memory required for data: 358804
I0428 19:28:21.133970 21599 layer_factory.hpp:77] Creating layer loss
I0428 19:28:21.133975 21599 net.cpp:86] Creating Layer loss
I0428 19:28:21.133978 21599 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:21.133982 21599 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:21.133986 21599 net.cpp:382] loss -> loss
I0428 19:28:21.133992 21599 layer_factory.hpp:77] Creating layer loss
I0428 19:28:21.134337 21599 net.cpp:124] Setting up loss
I0428 19:28:21.134347 21599 net.cpp:131] Top shape: (1)
I0428 19:28:21.134351 21599 net.cpp:134]     with loss weight 1
I0428 19:28:21.134356 21599 net.cpp:139] Memory required for data: 358808
I0428 19:28:21.134359 21599 net.cpp:200] loss needs backward computation.
I0428 19:28:21.134363 21599 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:21.134367 21599 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:21.134371 21599 net.cpp:200] relu3 needs backward computation.
I0428 19:28:21.134373 21599 net.cpp:200] ip3 needs backward computation.
I0428 19:28:21.134377 21599 net.cpp:200] relu2 needs backward computation.
I0428 19:28:21.134379 21599 net.cpp:200] ip2 needs backward computation.
I0428 19:28:21.134382 21599 net.cpp:200] relu1 needs backward computation.
I0428 19:28:21.134385 21599 net.cpp:200] ip1 needs backward computation.
I0428 19:28:21.134388 21599 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:21.134392 21599 net.cpp:202] mnist does not need backward computation.
I0428 19:28:21.134395 21599 net.cpp:244] This network produces output accuracy
I0428 19:28:21.134398 21599 net.cpp:244] This network produces output loss
I0428 19:28:21.134407 21599 net.cpp:257] Network initialization done.
I0428 19:28:21.134451 21599 solver.cpp:56] Solver scaffolding done.
I0428 19:28:21.134660 21599 caffe.cpp:248] Starting Optimization
I0428 19:28:21.134666 21599 solver.cpp:273] Solving LeNet
I0428 19:28:21.134670 21599 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:21.134785 21599 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:21.134867 21599 blocking_queue.cpp:49] Waiting for data
I0428 19:28:21.211683 21607 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:21.212216 21599 solver.cpp:398]     Test net output #0: accuracy = 0.0522
I0428 19:28:21.212250 21599 solver.cpp:398]     Test net output #1: loss = 2.33092 (* 1 = 2.33092 loss)
I0428 19:28:21.213129 21599 solver.cpp:219] Iteration 0 (0 iter/s, 0.07843s/100 iters), loss = 2.30996
I0428 19:28:21.213165 21599 solver.cpp:238]     Train net output #0: loss = 2.30996 (* 1 = 2.30996 loss)
I0428 19:28:21.213191 21599 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:21.270856 21599 solver.cpp:219] Iteration 100 (1733.74 iter/s, 0.0576788s/100 iters), loss = 0.830822
I0428 19:28:21.270892 21599 solver.cpp:238]     Train net output #0: loss = 0.830822 (* 1 = 0.830822 loss)
I0428 19:28:21.270901 21599 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:21.322804 21599 solver.cpp:219] Iteration 200 (1926.61 iter/s, 0.0519046s/100 iters), loss = 0.626115
I0428 19:28:21.322830 21599 solver.cpp:238]     Train net output #0: loss = 0.626115 (* 1 = 0.626115 loss)
I0428 19:28:21.322841 21599 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:21.370940 21599 solver.cpp:219] Iteration 300 (2079.03 iter/s, 0.0480993s/100 iters), loss = 0.649283
I0428 19:28:21.370976 21599 solver.cpp:238]     Train net output #0: loss = 0.649283 (* 1 = 0.649283 loss)
I0428 19:28:21.370985 21599 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:21.419337 21599 solver.cpp:219] Iteration 400 (2068.07 iter/s, 0.0483543s/100 iters), loss = 0.492524
I0428 19:28:21.419366 21599 solver.cpp:238]     Train net output #0: loss = 0.492524 (* 1 = 0.492524 loss)
I0428 19:28:21.419373 21599 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:21.466770 21599 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:21.539618 21607 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:21.540151 21599 solver.cpp:398]     Test net output #0: accuracy = 0.8191
I0428 19:28:21.540177 21599 solver.cpp:398]     Test net output #1: loss = 0.574187 (* 1 = 0.574187 loss)
I0428 19:28:21.540724 21599 solver.cpp:219] Iteration 500 (824.096 iter/s, 0.121345s/100 iters), loss = 0.658424
I0428 19:28:21.540786 21599 solver.cpp:238]     Train net output #0: loss = 0.658424 (* 1 = 0.658424 loss)
I0428 19:28:21.540798 21599 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:21.605686 21599 solver.cpp:219] Iteration 600 (1541.11 iter/s, 0.0648881s/100 iters), loss = 0.506359
I0428 19:28:21.605746 21599 solver.cpp:238]     Train net output #0: loss = 0.506359 (* 1 = 0.506359 loss)
I0428 19:28:21.605756 21599 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:21.662384 21599 solver.cpp:219] Iteration 700 (1765.81 iter/s, 0.0566313s/100 iters), loss = 0.670609
I0428 19:28:21.662431 21599 solver.cpp:238]     Train net output #0: loss = 0.670609 (* 1 = 0.670609 loss)
I0428 19:28:21.662441 21599 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:21.719009 21599 solver.cpp:219] Iteration 800 (1767.79 iter/s, 0.0565678s/100 iters), loss = 0.719909
I0428 19:28:21.719040 21599 solver.cpp:238]     Train net output #0: loss = 0.719909 (* 1 = 0.719909 loss)
I0428 19:28:21.719048 21599 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:21.770592 21599 solver.cpp:219] Iteration 900 (1940.09 iter/s, 0.0515441s/100 iters), loss = 0.692724
I0428 19:28:21.770622 21599 solver.cpp:238]     Train net output #0: loss = 0.692724 (* 1 = 0.692724 loss)
I0428 19:28:21.770630 21599 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:21.787789 21605 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:21.819285 21599 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:21.820163 21599 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:21.820689 21599 solver.cpp:311] Iteration 1000, loss = 0.582409
I0428 19:28:21.820708 21599 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:21.899998 21607 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:21.900457 21599 solver.cpp:398]     Test net output #0: accuracy = 0.8314
I0428 19:28:21.900481 21599 solver.cpp:398]     Test net output #1: loss = 0.506756 (* 1 = 0.506756 loss)
I0428 19:28:21.900488 21599 solver.cpp:316] Optimization Done.
I0428 19:28:21.900493 21599 caffe.cpp:259] Optimization Done.
