I0428 20:36:20.705229  4779 caffe.cpp:218] Using GPUs 0
I0428 20:36:20.741631  4779 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:36:21.258401  4779 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1635.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:36:21.258545  4779 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1635.prototxt
I0428 20:36:21.258965  4779 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:36:21.258985  4779 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:36:21.259088  4779 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:21.259168  4779 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:21.259269  4779 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:36:21.259292  4779 net.cpp:86] Creating Layer mnist
I0428 20:36:21.259299  4779 net.cpp:382] mnist -> data
I0428 20:36:21.259325  4779 net.cpp:382] mnist -> label
I0428 20:36:21.260426  4779 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:36:21.262873  4779 net.cpp:124] Setting up mnist
I0428 20:36:21.262892  4779 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:36:21.262898  4779 net.cpp:131] Top shape: 64 (64)
I0428 20:36:21.262902  4779 net.cpp:139] Memory required for data: 200960
I0428 20:36:21.262909  4779 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:21.262936  4779 net.cpp:86] Creating Layer conv0
I0428 20:36:21.262959  4779 net.cpp:408] conv0 <- data
I0428 20:36:21.262971  4779 net.cpp:382] conv0 -> conv0
I0428 20:36:21.551610  4779 net.cpp:124] Setting up conv0
I0428 20:36:21.551637  4779 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:36:21.551642  4779 net.cpp:139] Memory required for data: 14946560
I0428 20:36:21.551657  4779 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:21.551671  4779 net.cpp:86] Creating Layer pool0
I0428 20:36:21.551674  4779 net.cpp:408] pool0 <- conv0
I0428 20:36:21.551681  4779 net.cpp:382] pool0 -> pool0
I0428 20:36:21.551728  4779 net.cpp:124] Setting up pool0
I0428 20:36:21.551733  4779 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:36:21.551736  4779 net.cpp:139] Memory required for data: 18632960
I0428 20:36:21.551739  4779 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:21.551750  4779 net.cpp:86] Creating Layer conv1
I0428 20:36:21.551753  4779 net.cpp:408] conv1 <- pool0
I0428 20:36:21.551759  4779 net.cpp:382] conv1 -> conv1
I0428 20:36:21.555220  4779 net.cpp:124] Setting up conv1
I0428 20:36:21.555235  4779 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:36:21.555239  4779 net.cpp:139] Memory required for data: 19452160
I0428 20:36:21.555248  4779 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:21.555255  4779 net.cpp:86] Creating Layer pool1
I0428 20:36:21.555259  4779 net.cpp:408] pool1 <- conv1
I0428 20:36:21.555264  4779 net.cpp:382] pool1 -> pool1
I0428 20:36:21.555300  4779 net.cpp:124] Setting up pool1
I0428 20:36:21.555305  4779 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:36:21.555308  4779 net.cpp:139] Memory required for data: 19656960
I0428 20:36:21.555311  4779 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:21.555318  4779 net.cpp:86] Creating Layer ip1
I0428 20:36:21.555321  4779 net.cpp:408] ip1 <- pool1
I0428 20:36:21.555326  4779 net.cpp:382] ip1 -> ip1
I0428 20:36:21.555654  4779 net.cpp:124] Setting up ip1
I0428 20:36:21.555661  4779 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:21.555665  4779 net.cpp:139] Memory required for data: 19669760
I0428 20:36:21.555671  4779 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:21.555676  4779 net.cpp:86] Creating Layer relu1
I0428 20:36:21.555680  4779 net.cpp:408] relu1 <- ip1
I0428 20:36:21.555685  4779 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:21.555850  4779 net.cpp:124] Setting up relu1
I0428 20:36:21.555860  4779 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:21.555862  4779 net.cpp:139] Memory required for data: 19682560
I0428 20:36:21.555866  4779 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:21.555872  4779 net.cpp:86] Creating Layer ip2
I0428 20:36:21.555876  4779 net.cpp:408] ip2 <- ip1
I0428 20:36:21.555881  4779 net.cpp:382] ip2 -> ip2
I0428 20:36:21.555994  4779 net.cpp:124] Setting up ip2
I0428 20:36:21.556000  4779 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:21.556004  4779 net.cpp:139] Memory required for data: 19695360
I0428 20:36:21.556008  4779 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:21.556015  4779 net.cpp:86] Creating Layer relu2
I0428 20:36:21.556017  4779 net.cpp:408] relu2 <- ip2
I0428 20:36:21.556021  4779 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:21.556779  4779 net.cpp:124] Setting up relu2
I0428 20:36:21.556792  4779 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:21.556834  4779 net.cpp:139] Memory required for data: 19708160
I0428 20:36:21.556838  4779 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:21.556846  4779 net.cpp:86] Creating Layer ip3
I0428 20:36:21.556850  4779 net.cpp:408] ip3 <- ip2
I0428 20:36:21.556856  4779 net.cpp:382] ip3 -> ip3
I0428 20:36:21.556999  4779 net.cpp:124] Setting up ip3
I0428 20:36:21.557008  4779 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:21.557010  4779 net.cpp:139] Memory required for data: 19710720
I0428 20:36:21.557019  4779 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:21.557025  4779 net.cpp:86] Creating Layer relu3
I0428 20:36:21.557029  4779 net.cpp:408] relu3 <- ip3
I0428 20:36:21.557049  4779 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:21.557243  4779 net.cpp:124] Setting up relu3
I0428 20:36:21.557252  4779 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:21.557255  4779 net.cpp:139] Memory required for data: 19713280
I0428 20:36:21.557258  4779 layer_factory.hpp:77] Creating layer loss
I0428 20:36:21.557265  4779 net.cpp:86] Creating Layer loss
I0428 20:36:21.557267  4779 net.cpp:408] loss <- ip3
I0428 20:36:21.557271  4779 net.cpp:408] loss <- label
I0428 20:36:21.557276  4779 net.cpp:382] loss -> loss
I0428 20:36:21.557308  4779 layer_factory.hpp:77] Creating layer loss
I0428 20:36:21.557524  4779 net.cpp:124] Setting up loss
I0428 20:36:21.557533  4779 net.cpp:131] Top shape: (1)
I0428 20:36:21.557536  4779 net.cpp:134]     with loss weight 1
I0428 20:36:21.557550  4779 net.cpp:139] Memory required for data: 19713284
I0428 20:36:21.557554  4779 net.cpp:200] loss needs backward computation.
I0428 20:36:21.557557  4779 net.cpp:200] relu3 needs backward computation.
I0428 20:36:21.557560  4779 net.cpp:200] ip3 needs backward computation.
I0428 20:36:21.557564  4779 net.cpp:200] relu2 needs backward computation.
I0428 20:36:21.557566  4779 net.cpp:200] ip2 needs backward computation.
I0428 20:36:21.557569  4779 net.cpp:200] relu1 needs backward computation.
I0428 20:36:21.557571  4779 net.cpp:200] ip1 needs backward computation.
I0428 20:36:21.557574  4779 net.cpp:200] pool1 needs backward computation.
I0428 20:36:21.557577  4779 net.cpp:200] conv1 needs backward computation.
I0428 20:36:21.557580  4779 net.cpp:200] pool0 needs backward computation.
I0428 20:36:21.557584  4779 net.cpp:200] conv0 needs backward computation.
I0428 20:36:21.557587  4779 net.cpp:202] mnist does not need backward computation.
I0428 20:36:21.557590  4779 net.cpp:244] This network produces output loss
I0428 20:36:21.557600  4779 net.cpp:257] Network initialization done.
I0428 20:36:21.557993  4779 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1635.prototxt
I0428 20:36:21.558051  4779 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:36:21.558141  4779 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:21.558233  4779 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:21.558277  4779 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:36:21.558290  4779 net.cpp:86] Creating Layer mnist
I0428 20:36:21.558295  4779 net.cpp:382] mnist -> data
I0428 20:36:21.558301  4779 net.cpp:382] mnist -> label
I0428 20:36:21.558383  4779 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:36:21.559538  4779 net.cpp:124] Setting up mnist
I0428 20:36:21.559566  4779 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:36:21.559571  4779 net.cpp:131] Top shape: 100 (100)
I0428 20:36:21.559576  4779 net.cpp:139] Memory required for data: 314000
I0428 20:36:21.559578  4779 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:36:21.559617  4779 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:36:21.559620  4779 net.cpp:408] label_mnist_1_split <- label
I0428 20:36:21.559625  4779 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:36:21.559633  4779 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:36:21.559687  4779 net.cpp:124] Setting up label_mnist_1_split
I0428 20:36:21.559693  4779 net.cpp:131] Top shape: 100 (100)
I0428 20:36:21.559696  4779 net.cpp:131] Top shape: 100 (100)
I0428 20:36:21.559700  4779 net.cpp:139] Memory required for data: 314800
I0428 20:36:21.559702  4779 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:21.559710  4779 net.cpp:86] Creating Layer conv0
I0428 20:36:21.559713  4779 net.cpp:408] conv0 <- data
I0428 20:36:21.559718  4779 net.cpp:382] conv0 -> conv0
I0428 20:36:21.561517  4779 net.cpp:124] Setting up conv0
I0428 20:36:21.561530  4779 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:36:21.561534  4779 net.cpp:139] Memory required for data: 23354800
I0428 20:36:21.561543  4779 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:21.561550  4779 net.cpp:86] Creating Layer pool0
I0428 20:36:21.561553  4779 net.cpp:408] pool0 <- conv0
I0428 20:36:21.561558  4779 net.cpp:382] pool0 -> pool0
I0428 20:36:21.561594  4779 net.cpp:124] Setting up pool0
I0428 20:36:21.561599  4779 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:36:21.561601  4779 net.cpp:139] Memory required for data: 29114800
I0428 20:36:21.561604  4779 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:21.561612  4779 net.cpp:86] Creating Layer conv1
I0428 20:36:21.561615  4779 net.cpp:408] conv1 <- pool0
I0428 20:36:21.561620  4779 net.cpp:382] conv1 -> conv1
I0428 20:36:21.564918  4779 net.cpp:124] Setting up conv1
I0428 20:36:21.564941  4779 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:36:21.564946  4779 net.cpp:139] Memory required for data: 30394800
I0428 20:36:21.564956  4779 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:21.564963  4779 net.cpp:86] Creating Layer pool1
I0428 20:36:21.564967  4779 net.cpp:408] pool1 <- conv1
I0428 20:36:21.564975  4779 net.cpp:382] pool1 -> pool1
I0428 20:36:21.565012  4779 net.cpp:124] Setting up pool1
I0428 20:36:21.565019  4779 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:36:21.565023  4779 net.cpp:139] Memory required for data: 30714800
I0428 20:36:21.565026  4779 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:21.565032  4779 net.cpp:86] Creating Layer ip1
I0428 20:36:21.565037  4779 net.cpp:408] ip1 <- pool1
I0428 20:36:21.565042  4779 net.cpp:382] ip1 -> ip1
I0428 20:36:21.565407  4779 net.cpp:124] Setting up ip1
I0428 20:36:21.565429  4779 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:21.565433  4779 net.cpp:139] Memory required for data: 30734800
I0428 20:36:21.565441  4779 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:21.565446  4779 net.cpp:86] Creating Layer relu1
I0428 20:36:21.565450  4779 net.cpp:408] relu1 <- ip1
I0428 20:36:21.565456  4779 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:21.565675  4779 net.cpp:124] Setting up relu1
I0428 20:36:21.565683  4779 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:21.565687  4779 net.cpp:139] Memory required for data: 30754800
I0428 20:36:21.565691  4779 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:21.565699  4779 net.cpp:86] Creating Layer ip2
I0428 20:36:21.565703  4779 net.cpp:408] ip2 <- ip1
I0428 20:36:21.565709  4779 net.cpp:382] ip2 -> ip2
I0428 20:36:21.565871  4779 net.cpp:124] Setting up ip2
I0428 20:36:21.565894  4779 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:21.565897  4779 net.cpp:139] Memory required for data: 30774800
I0428 20:36:21.565918  4779 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:21.565937  4779 net.cpp:86] Creating Layer relu2
I0428 20:36:21.565942  4779 net.cpp:408] relu2 <- ip2
I0428 20:36:21.565945  4779 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:21.566103  4779 net.cpp:124] Setting up relu2
I0428 20:36:21.566112  4779 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:21.566114  4779 net.cpp:139] Memory required for data: 30794800
I0428 20:36:21.566118  4779 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:21.566123  4779 net.cpp:86] Creating Layer ip3
I0428 20:36:21.566126  4779 net.cpp:408] ip3 <- ip2
I0428 20:36:21.566131  4779 net.cpp:382] ip3 -> ip3
I0428 20:36:21.566232  4779 net.cpp:124] Setting up ip3
I0428 20:36:21.566239  4779 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:21.566256  4779 net.cpp:139] Memory required for data: 30798800
I0428 20:36:21.566263  4779 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:21.566274  4779 net.cpp:86] Creating Layer relu3
I0428 20:36:21.566277  4779 net.cpp:408] relu3 <- ip3
I0428 20:36:21.566287  4779 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:21.567057  4779 net.cpp:124] Setting up relu3
I0428 20:36:21.567068  4779 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:21.567072  4779 net.cpp:139] Memory required for data: 30802800
I0428 20:36:21.567075  4779 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:36:21.567082  4779 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:36:21.567085  4779 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:36:21.567090  4779 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:36:21.567095  4779 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:36:21.567167  4779 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:36:21.567175  4779 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:21.567179  4779 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:21.567183  4779 net.cpp:139] Memory required for data: 30810800
I0428 20:36:21.567184  4779 layer_factory.hpp:77] Creating layer accuracy
I0428 20:36:21.567195  4779 net.cpp:86] Creating Layer accuracy
I0428 20:36:21.567199  4779 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:36:21.567203  4779 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:36:21.567209  4779 net.cpp:382] accuracy -> accuracy
I0428 20:36:21.567214  4779 net.cpp:124] Setting up accuracy
I0428 20:36:21.567219  4779 net.cpp:131] Top shape: (1)
I0428 20:36:21.567221  4779 net.cpp:139] Memory required for data: 30810804
I0428 20:36:21.567230  4779 layer_factory.hpp:77] Creating layer loss
I0428 20:36:21.567234  4779 net.cpp:86] Creating Layer loss
I0428 20:36:21.567237  4779 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:36:21.567241  4779 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:36:21.567246  4779 net.cpp:382] loss -> loss
I0428 20:36:21.567252  4779 layer_factory.hpp:77] Creating layer loss
I0428 20:36:21.567486  4779 net.cpp:124] Setting up loss
I0428 20:36:21.567494  4779 net.cpp:131] Top shape: (1)
I0428 20:36:21.567497  4779 net.cpp:134]     with loss weight 1
I0428 20:36:21.567512  4779 net.cpp:139] Memory required for data: 30810808
I0428 20:36:21.567515  4779 net.cpp:200] loss needs backward computation.
I0428 20:36:21.567519  4779 net.cpp:202] accuracy does not need backward computation.
I0428 20:36:21.567523  4779 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:36:21.567525  4779 net.cpp:200] relu3 needs backward computation.
I0428 20:36:21.567528  4779 net.cpp:200] ip3 needs backward computation.
I0428 20:36:21.567531  4779 net.cpp:200] relu2 needs backward computation.
I0428 20:36:21.567534  4779 net.cpp:200] ip2 needs backward computation.
I0428 20:36:21.567544  4779 net.cpp:200] relu1 needs backward computation.
I0428 20:36:21.567546  4779 net.cpp:200] ip1 needs backward computation.
I0428 20:36:21.567549  4779 net.cpp:200] pool1 needs backward computation.
I0428 20:36:21.567558  4779 net.cpp:200] conv1 needs backward computation.
I0428 20:36:21.567560  4779 net.cpp:200] pool0 needs backward computation.
I0428 20:36:21.567564  4779 net.cpp:200] conv0 needs backward computation.
I0428 20:36:21.567567  4779 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:36:21.567571  4779 net.cpp:202] mnist does not need backward computation.
I0428 20:36:21.567574  4779 net.cpp:244] This network produces output accuracy
I0428 20:36:21.567577  4779 net.cpp:244] This network produces output loss
I0428 20:36:21.567589  4779 net.cpp:257] Network initialization done.
I0428 20:36:21.567632  4779 solver.cpp:56] Solver scaffolding done.
I0428 20:36:21.567960  4779 caffe.cpp:248] Starting Optimization
I0428 20:36:21.567966  4779 solver.cpp:273] Solving LeNet
I0428 20:36:21.567970  4779 solver.cpp:274] Learning Rate Policy: inv
I0428 20:36:21.568737  4779 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:36:21.656432  4779 blocking_queue.cpp:49] Waiting for data
I0428 20:36:21.678915  4787 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:21.680382  4779 solver.cpp:398]     Test net output #0: accuracy = 0.106
I0428 20:36:21.680418  4779 solver.cpp:398]     Test net output #1: loss = 2.30354 (* 1 = 2.30354 loss)
I0428 20:36:21.685226  4779 solver.cpp:219] Iteration 0 (-7.04853e-43 iter/s, 0.117228s/100 iters), loss = 2.30169
I0428 20:36:21.685266  4779 solver.cpp:238]     Train net output #0: loss = 2.30169 (* 1 = 2.30169 loss)
I0428 20:36:21.685278  4779 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:36:21.920035  4779 solver.cpp:219] Iteration 100 (425.987 iter/s, 0.234749s/100 iters), loss = 1.37563
I0428 20:36:21.920068  4779 solver.cpp:238]     Train net output #0: loss = 1.37563 (* 1 = 1.37563 loss)
I0428 20:36:21.920075  4779 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:36:22.149343  4779 solver.cpp:219] Iteration 200 (436.186 iter/s, 0.22926s/100 iters), loss = 1.07296
I0428 20:36:22.149372  4779 solver.cpp:238]     Train net output #0: loss = 1.07296 (* 1 = 1.07296 loss)
I0428 20:36:22.149379  4779 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:36:22.380591  4779 solver.cpp:219] Iteration 300 (432.521 iter/s, 0.231203s/100 iters), loss = 0.769867
I0428 20:36:22.380619  4779 solver.cpp:238]     Train net output #0: loss = 0.769867 (* 1 = 0.769867 loss)
I0428 20:36:22.380626  4779 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:36:22.609489  4779 solver.cpp:219] Iteration 400 (436.96 iter/s, 0.228854s/100 iters), loss = 0.613619
I0428 20:36:22.609516  4779 solver.cpp:238]     Train net output #0: loss = 0.613619 (* 1 = 0.613619 loss)
I0428 20:36:22.609524  4779 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:36:22.834345  4779 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:36:22.941102  4787 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:22.943825  4779 solver.cpp:398]     Test net output #0: accuracy = 0.6748
I0428 20:36:22.943861  4779 solver.cpp:398]     Test net output #1: loss = 0.821164 (* 1 = 0.821164 loss)
I0428 20:36:22.946089  4779 solver.cpp:219] Iteration 500 (297.132 iter/s, 0.336551s/100 iters), loss = 0.926807
I0428 20:36:22.946141  4779 solver.cpp:238]     Train net output #0: loss = 0.926807 (* 1 = 0.926807 loss)
I0428 20:36:22.946148  4779 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:36:23.180274  4779 solver.cpp:219] Iteration 600 (427.139 iter/s, 0.234116s/100 iters), loss = 0.74542
I0428 20:36:23.180335  4779 solver.cpp:238]     Train net output #0: loss = 0.74542 (* 1 = 0.74542 loss)
I0428 20:36:23.180356  4779 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:36:23.413029  4779 solver.cpp:219] Iteration 700 (429.747 iter/s, 0.232695s/100 iters), loss = 0.796829
I0428 20:36:23.413055  4779 solver.cpp:238]     Train net output #0: loss = 0.796829 (* 1 = 0.796829 loss)
I0428 20:36:23.413063  4779 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:36:23.648058  4779 solver.cpp:219] Iteration 800 (425.556 iter/s, 0.234986s/100 iters), loss = 0.919034
I0428 20:36:23.648102  4779 solver.cpp:238]     Train net output #0: loss = 0.919034 (* 1 = 0.919034 loss)
I0428 20:36:23.648108  4779 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:36:23.886312  4779 solver.cpp:219] Iteration 900 (419.799 iter/s, 0.238209s/100 iters), loss = 0.544847
I0428 20:36:23.886343  4779 solver.cpp:238]     Train net output #0: loss = 0.544847 (* 1 = 0.544847 loss)
I0428 20:36:23.886350  4779 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:36:23.969240  4786 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:24.135861  4779 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:36:24.142091  4779 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:36:24.145028  4779 solver.cpp:311] Iteration 1000, loss = 0.680301
I0428 20:36:24.145052  4779 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:36:24.260238  4787 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:24.263394  4779 solver.cpp:398]     Test net output #0: accuracy = 0.7803
I0428 20:36:24.263422  4779 solver.cpp:398]     Test net output #1: loss = 0.537897 (* 1 = 0.537897 loss)
I0428 20:36:24.263427  4779 solver.cpp:316] Optimization Done.
I0428 20:36:24.263432  4779 caffe.cpp:259] Optimization Done.
