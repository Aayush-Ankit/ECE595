I0428 20:11:45.513120 32135 caffe.cpp:218] Using GPUs 0
I0428 20:11:45.543208 32135 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:45.986526 32135 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1166.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:45.986657 32135 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1166.prototxt
I0428 20:11:45.987025 32135 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:45.987056 32135 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:45.987139 32135 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:45.987218 32135 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:45.987298 32135 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:45.987318 32135 net.cpp:86] Creating Layer mnist
I0428 20:11:45.987323 32135 net.cpp:382] mnist -> data
I0428 20:11:45.987342 32135 net.cpp:382] mnist -> label
I0428 20:11:45.988248 32135 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:45.990464 32135 net.cpp:124] Setting up mnist
I0428 20:11:45.990510 32135 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:45.990530 32135 net.cpp:131] Top shape: 64 (64)
I0428 20:11:45.990533 32135 net.cpp:139] Memory required for data: 200960
I0428 20:11:45.990540 32135 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:45.990553 32135 net.cpp:86] Creating Layer conv0
I0428 20:11:45.990571 32135 net.cpp:408] conv0 <- data
I0428 20:11:45.990582 32135 net.cpp:382] conv0 -> conv0
I0428 20:11:46.208654 32135 net.cpp:124] Setting up conv0
I0428 20:11:46.208698 32135 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:46.208701 32135 net.cpp:139] Memory required for data: 3887360
I0428 20:11:46.208715 32135 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:46.208745 32135 net.cpp:86] Creating Layer pool0
I0428 20:11:46.208748 32135 net.cpp:408] pool0 <- conv0
I0428 20:11:46.208753 32135 net.cpp:382] pool0 -> pool0
I0428 20:11:46.208796 32135 net.cpp:124] Setting up pool0
I0428 20:11:46.208803 32135 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:46.208806 32135 net.cpp:139] Memory required for data: 4808960
I0428 20:11:46.208814 32135 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:46.208844 32135 net.cpp:86] Creating Layer conv1
I0428 20:11:46.208851 32135 net.cpp:408] conv1 <- pool0
I0428 20:11:46.208858 32135 net.cpp:382] conv1 -> conv1
I0428 20:11:46.210783 32135 net.cpp:124] Setting up conv1
I0428 20:11:46.210798 32135 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:46.210817 32135 net.cpp:139] Memory required for data: 5628160
I0428 20:11:46.210826 32135 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:46.210835 32135 net.cpp:86] Creating Layer pool1
I0428 20:11:46.210839 32135 net.cpp:408] pool1 <- conv1
I0428 20:11:46.210844 32135 net.cpp:382] pool1 -> pool1
I0428 20:11:46.210885 32135 net.cpp:124] Setting up pool1
I0428 20:11:46.210892 32135 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:46.210896 32135 net.cpp:139] Memory required for data: 5832960
I0428 20:11:46.210898 32135 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:46.210906 32135 net.cpp:86] Creating Layer ip1
I0428 20:11:46.210912 32135 net.cpp:408] ip1 <- pool1
I0428 20:11:46.210917 32135 net.cpp:382] ip1 -> ip1
I0428 20:11:46.211282 32135 net.cpp:124] Setting up ip1
I0428 20:11:46.211288 32135 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:46.211307 32135 net.cpp:139] Memory required for data: 5845760
I0428 20:11:46.211313 32135 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:46.211319 32135 net.cpp:86] Creating Layer relu1
I0428 20:11:46.211323 32135 net.cpp:408] relu1 <- ip1
I0428 20:11:46.211328 32135 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:46.211506 32135 net.cpp:124] Setting up relu1
I0428 20:11:46.211531 32135 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:46.211534 32135 net.cpp:139] Memory required for data: 5858560
I0428 20:11:46.211537 32135 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:46.211544 32135 net.cpp:86] Creating Layer ip2
I0428 20:11:46.211547 32135 net.cpp:408] ip2 <- ip1
I0428 20:11:46.211551 32135 net.cpp:382] ip2 -> ip2
I0428 20:11:46.212533 32135 net.cpp:124] Setting up ip2
I0428 20:11:46.212545 32135 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:46.212565 32135 net.cpp:139] Memory required for data: 5864960
I0428 20:11:46.212571 32135 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:46.212595 32135 net.cpp:86] Creating Layer relu2
I0428 20:11:46.212599 32135 net.cpp:408] relu2 <- ip2
I0428 20:11:46.212604 32135 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:46.213434 32135 net.cpp:124] Setting up relu2
I0428 20:11:46.213446 32135 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:46.213467 32135 net.cpp:139] Memory required for data: 5871360
I0428 20:11:46.213470 32135 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:46.213493 32135 net.cpp:86] Creating Layer ip3
I0428 20:11:46.213496 32135 net.cpp:408] ip3 <- ip2
I0428 20:11:46.213502 32135 net.cpp:382] ip3 -> ip3
I0428 20:11:46.213600 32135 net.cpp:124] Setting up ip3
I0428 20:11:46.213608 32135 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:46.213610 32135 net.cpp:139] Memory required for data: 5873920
I0428 20:11:46.213618 32135 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:46.213626 32135 net.cpp:86] Creating Layer relu3
I0428 20:11:46.213629 32135 net.cpp:408] relu3 <- ip3
I0428 20:11:46.213632 32135 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:46.213816 32135 net.cpp:124] Setting up relu3
I0428 20:11:46.213825 32135 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:46.213829 32135 net.cpp:139] Memory required for data: 5876480
I0428 20:11:46.213831 32135 layer_factory.hpp:77] Creating layer loss
I0428 20:11:46.213837 32135 net.cpp:86] Creating Layer loss
I0428 20:11:46.213840 32135 net.cpp:408] loss <- ip3
I0428 20:11:46.213845 32135 net.cpp:408] loss <- label
I0428 20:11:46.213850 32135 net.cpp:382] loss -> loss
I0428 20:11:46.213868 32135 layer_factory.hpp:77] Creating layer loss
I0428 20:11:46.214174 32135 net.cpp:124] Setting up loss
I0428 20:11:46.214182 32135 net.cpp:131] Top shape: (1)
I0428 20:11:46.214201 32135 net.cpp:134]     with loss weight 1
I0428 20:11:46.214215 32135 net.cpp:139] Memory required for data: 5876484
I0428 20:11:46.214217 32135 net.cpp:200] loss needs backward computation.
I0428 20:11:46.214221 32135 net.cpp:200] relu3 needs backward computation.
I0428 20:11:46.214224 32135 net.cpp:200] ip3 needs backward computation.
I0428 20:11:46.214227 32135 net.cpp:200] relu2 needs backward computation.
I0428 20:11:46.214229 32135 net.cpp:200] ip2 needs backward computation.
I0428 20:11:46.214232 32135 net.cpp:200] relu1 needs backward computation.
I0428 20:11:46.214234 32135 net.cpp:200] ip1 needs backward computation.
I0428 20:11:46.214237 32135 net.cpp:200] pool1 needs backward computation.
I0428 20:11:46.214241 32135 net.cpp:200] conv1 needs backward computation.
I0428 20:11:46.214243 32135 net.cpp:200] pool0 needs backward computation.
I0428 20:11:46.214262 32135 net.cpp:200] conv0 needs backward computation.
I0428 20:11:46.214264 32135 net.cpp:202] mnist does not need backward computation.
I0428 20:11:46.214267 32135 net.cpp:244] This network produces output loss
I0428 20:11:46.214277 32135 net.cpp:257] Network initialization done.
I0428 20:11:46.214596 32135 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1166.prototxt
I0428 20:11:46.214623 32135 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:46.214731 32135 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:46.214839 32135 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:46.214882 32135 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:46.214895 32135 net.cpp:86] Creating Layer mnist
I0428 20:11:46.214900 32135 net.cpp:382] mnist -> data
I0428 20:11:46.214907 32135 net.cpp:382] mnist -> label
I0428 20:11:46.214989 32135 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:46.217257 32135 net.cpp:124] Setting up mnist
I0428 20:11:46.217286 32135 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:46.217305 32135 net.cpp:131] Top shape: 100 (100)
I0428 20:11:46.217308 32135 net.cpp:139] Memory required for data: 314000
I0428 20:11:46.217313 32135 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:46.217319 32135 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:46.217321 32135 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:46.217326 32135 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:46.217332 32135 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:46.217412 32135 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:46.217435 32135 net.cpp:131] Top shape: 100 (100)
I0428 20:11:46.217438 32135 net.cpp:131] Top shape: 100 (100)
I0428 20:11:46.217442 32135 net.cpp:139] Memory required for data: 314800
I0428 20:11:46.217444 32135 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:46.217453 32135 net.cpp:86] Creating Layer conv0
I0428 20:11:46.217458 32135 net.cpp:408] conv0 <- data
I0428 20:11:46.217463 32135 net.cpp:382] conv0 -> conv0
I0428 20:11:46.219012 32135 net.cpp:124] Setting up conv0
I0428 20:11:46.219027 32135 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:46.219029 32135 net.cpp:139] Memory required for data: 6074800
I0428 20:11:46.219054 32135 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:46.219061 32135 net.cpp:86] Creating Layer pool0
I0428 20:11:46.219065 32135 net.cpp:408] pool0 <- conv0
I0428 20:11:46.219069 32135 net.cpp:382] pool0 -> pool0
I0428 20:11:46.219110 32135 net.cpp:124] Setting up pool0
I0428 20:11:46.219117 32135 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:46.219120 32135 net.cpp:139] Memory required for data: 7514800
I0428 20:11:46.219123 32135 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:46.219148 32135 net.cpp:86] Creating Layer conv1
I0428 20:11:46.219151 32135 net.cpp:408] conv1 <- pool0
I0428 20:11:46.219157 32135 net.cpp:382] conv1 -> conv1
I0428 20:11:46.220923 32135 net.cpp:124] Setting up conv1
I0428 20:11:46.220938 32135 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:46.220942 32135 net.cpp:139] Memory required for data: 8794800
I0428 20:11:46.220950 32135 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:46.220957 32135 net.cpp:86] Creating Layer pool1
I0428 20:11:46.220960 32135 net.cpp:408] pool1 <- conv1
I0428 20:11:46.220968 32135 net.cpp:382] pool1 -> pool1
I0428 20:11:46.221035 32135 net.cpp:124] Setting up pool1
I0428 20:11:46.221043 32135 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:46.221046 32135 net.cpp:139] Memory required for data: 9114800
I0428 20:11:46.221050 32135 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:46.221057 32135 net.cpp:86] Creating Layer ip1
I0428 20:11:46.221061 32135 net.cpp:408] ip1 <- pool1
I0428 20:11:46.221066 32135 net.cpp:382] ip1 -> ip1
I0428 20:11:46.221463 32135 net.cpp:124] Setting up ip1
I0428 20:11:46.221472 32135 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:46.221483 32135 net.cpp:139] Memory required for data: 9134800
I0428 20:11:46.221491 32135 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:46.221503 32135 net.cpp:86] Creating Layer relu1
I0428 20:11:46.221508 32135 net.cpp:408] relu1 <- ip1
I0428 20:11:46.221513 32135 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:46.221668 32135 net.cpp:124] Setting up relu1
I0428 20:11:46.221678 32135 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:46.221680 32135 net.cpp:139] Memory required for data: 9154800
I0428 20:11:46.221683 32135 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:46.221705 32135 net.cpp:86] Creating Layer ip2
I0428 20:11:46.221709 32135 net.cpp:408] ip2 <- ip1
I0428 20:11:46.221714 32135 net.cpp:382] ip2 -> ip2
I0428 20:11:46.221823 32135 net.cpp:124] Setting up ip2
I0428 20:11:46.221832 32135 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:46.221834 32135 net.cpp:139] Memory required for data: 9164800
I0428 20:11:46.221839 32135 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:46.221843 32135 net.cpp:86] Creating Layer relu2
I0428 20:11:46.221846 32135 net.cpp:408] relu2 <- ip2
I0428 20:11:46.221853 32135 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:46.222025 32135 net.cpp:124] Setting up relu2
I0428 20:11:46.222033 32135 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:46.222038 32135 net.cpp:139] Memory required for data: 9174800
I0428 20:11:46.222040 32135 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:46.222048 32135 net.cpp:86] Creating Layer ip3
I0428 20:11:46.222050 32135 net.cpp:408] ip3 <- ip2
I0428 20:11:46.222062 32135 net.cpp:382] ip3 -> ip3
I0428 20:11:46.222164 32135 net.cpp:124] Setting up ip3
I0428 20:11:46.222172 32135 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:46.222175 32135 net.cpp:139] Memory required for data: 9178800
I0428 20:11:46.222182 32135 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:46.222187 32135 net.cpp:86] Creating Layer relu3
I0428 20:11:46.222189 32135 net.cpp:408] relu3 <- ip3
I0428 20:11:46.222194 32135 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:46.223024 32135 net.cpp:124] Setting up relu3
I0428 20:11:46.223037 32135 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:46.223039 32135 net.cpp:139] Memory required for data: 9182800
I0428 20:11:46.223042 32135 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:46.223049 32135 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:46.223052 32135 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:46.223057 32135 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:46.223063 32135 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:46.223134 32135 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:46.223140 32135 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:46.223145 32135 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:46.223146 32135 net.cpp:139] Memory required for data: 9190800
I0428 20:11:46.223150 32135 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:46.223168 32135 net.cpp:86] Creating Layer accuracy
I0428 20:11:46.223178 32135 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:46.223187 32135 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:46.223193 32135 net.cpp:382] accuracy -> accuracy
I0428 20:11:46.223201 32135 net.cpp:124] Setting up accuracy
I0428 20:11:46.223206 32135 net.cpp:131] Top shape: (1)
I0428 20:11:46.223208 32135 net.cpp:139] Memory required for data: 9190804
I0428 20:11:46.223217 32135 layer_factory.hpp:77] Creating layer loss
I0428 20:11:46.223227 32135 net.cpp:86] Creating Layer loss
I0428 20:11:46.223230 32135 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:46.223234 32135 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:46.223239 32135 net.cpp:382] loss -> loss
I0428 20:11:46.223247 32135 layer_factory.hpp:77] Creating layer loss
I0428 20:11:46.223515 32135 net.cpp:124] Setting up loss
I0428 20:11:46.223525 32135 net.cpp:131] Top shape: (1)
I0428 20:11:46.223533 32135 net.cpp:134]     with loss weight 1
I0428 20:11:46.223548 32135 net.cpp:139] Memory required for data: 9190808
I0428 20:11:46.223552 32135 net.cpp:200] loss needs backward computation.
I0428 20:11:46.223556 32135 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:46.223558 32135 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:46.223562 32135 net.cpp:200] relu3 needs backward computation.
I0428 20:11:46.223564 32135 net.cpp:200] ip3 needs backward computation.
I0428 20:11:46.223567 32135 net.cpp:200] relu2 needs backward computation.
I0428 20:11:46.223569 32135 net.cpp:200] ip2 needs backward computation.
I0428 20:11:46.223572 32135 net.cpp:200] relu1 needs backward computation.
I0428 20:11:46.223575 32135 net.cpp:200] ip1 needs backward computation.
I0428 20:11:46.223577 32135 net.cpp:200] pool1 needs backward computation.
I0428 20:11:46.223580 32135 net.cpp:200] conv1 needs backward computation.
I0428 20:11:46.223583 32135 net.cpp:200] pool0 needs backward computation.
I0428 20:11:46.223585 32135 net.cpp:200] conv0 needs backward computation.
I0428 20:11:46.223589 32135 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:46.223592 32135 net.cpp:202] mnist does not need backward computation.
I0428 20:11:46.223595 32135 net.cpp:244] This network produces output accuracy
I0428 20:11:46.223598 32135 net.cpp:244] This network produces output loss
I0428 20:11:46.223609 32135 net.cpp:257] Network initialization done.
I0428 20:11:46.223649 32135 solver.cpp:56] Solver scaffolding done.
I0428 20:11:46.223979 32135 caffe.cpp:248] Starting Optimization
I0428 20:11:46.223987 32135 solver.cpp:273] Solving LeNet
I0428 20:11:46.223990 32135 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:46.224921 32135 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:46.231268 32135 blocking_queue.cpp:49] Waiting for data
I0428 20:11:46.300550 32142 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:46.301177 32135 solver.cpp:398]     Test net output #0: accuracy = 0.0955
I0428 20:11:46.301195 32135 solver.cpp:398]     Test net output #1: loss = 2.31049 (* 1 = 2.31049 loss)
I0428 20:11:46.304879 32135 solver.cpp:219] Iteration 0 (-1.78034e-31 iter/s, 0.0808602s/100 iters), loss = 2.31685
I0428 20:11:46.304903 32135 solver.cpp:238]     Train net output #0: loss = 2.31685 (* 1 = 2.31685 loss)
I0428 20:11:46.304930 32135 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:46.430332 32135 solver.cpp:219] Iteration 100 (797.356 iter/s, 0.125414s/100 iters), loss = 0.566016
I0428 20:11:46.430357 32135 solver.cpp:238]     Train net output #0: loss = 0.566016 (* 1 = 0.566016 loss)
I0428 20:11:46.430379 32135 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:46.553412 32135 solver.cpp:219] Iteration 200 (812.724 iter/s, 0.123043s/100 iters), loss = 0.46995
I0428 20:11:46.553437 32135 solver.cpp:238]     Train net output #0: loss = 0.46995 (* 1 = 0.46995 loss)
I0428 20:11:46.553443 32135 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:46.676365 32135 solver.cpp:219] Iteration 300 (813.558 iter/s, 0.122917s/100 iters), loss = 0.562681
I0428 20:11:46.676407 32135 solver.cpp:238]     Train net output #0: loss = 0.562681 (* 1 = 0.562681 loss)
I0428 20:11:46.676429 32135 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:46.800258 32135 solver.cpp:219] Iteration 400 (807.497 iter/s, 0.123839s/100 iters), loss = 0.289439
I0428 20:11:46.800283 32135 solver.cpp:238]     Train net output #0: loss = 0.289439 (* 1 = 0.289439 loss)
I0428 20:11:46.800289 32135 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:46.923233 32135 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:46.977916 32142 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:46.979851 32135 solver.cpp:398]     Test net output #0: accuracy = 0.8735
I0428 20:11:46.979872 32135 solver.cpp:398]     Test net output #1: loss = 0.330381 (* 1 = 0.330381 loss)
I0428 20:11:46.980999 32135 solver.cpp:219] Iteration 500 (553.4 iter/s, 0.180701s/100 iters), loss = 0.190416
I0428 20:11:46.981056 32135 solver.cpp:238]     Train net output #0: loss = 0.190416 (* 1 = 0.190416 loss)
I0428 20:11:46.981065 32135 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:47.104768 32135 solver.cpp:219] Iteration 600 (808.399 iter/s, 0.123701s/100 iters), loss = 0.230086
I0428 20:11:47.104794 32135 solver.cpp:238]     Train net output #0: loss = 0.230086 (* 1 = 0.230086 loss)
I0428 20:11:47.104800 32135 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:47.227064 32135 solver.cpp:219] Iteration 700 (817.933 iter/s, 0.122259s/100 iters), loss = 0.496184
I0428 20:11:47.227090 32135 solver.cpp:238]     Train net output #0: loss = 0.496184 (* 1 = 0.496184 loss)
I0428 20:11:47.227097 32135 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:47.348428 32135 solver.cpp:219] Iteration 800 (824.222 iter/s, 0.121327s/100 iters), loss = 0.39698
I0428 20:11:47.348453 32135 solver.cpp:238]     Train net output #0: loss = 0.39698 (* 1 = 0.39698 loss)
I0428 20:11:47.348459 32135 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:47.468624 32135 solver.cpp:219] Iteration 900 (832.222 iter/s, 0.12016s/100 iters), loss = 0.148003
I0428 20:11:47.468647 32135 solver.cpp:238]     Train net output #0: loss = 0.148003 (* 1 = 0.148003 loss)
I0428 20:11:47.468653 32135 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:47.508709 32141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:47.588380 32135 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:47.590354 32135 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:47.591421 32135 solver.cpp:311] Iteration 1000, loss = 0.12229
I0428 20:11:47.591436 32135 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:47.645440 32142 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:47.647421 32135 solver.cpp:398]     Test net output #0: accuracy = 0.9723
I0428 20:11:47.647455 32135 solver.cpp:398]     Test net output #1: loss = 0.0881075 (* 1 = 0.0881075 loss)
I0428 20:11:47.647460 32135 solver.cpp:316] Optimization Done.
I0428 20:11:47.647464 32135 caffe.cpp:259] Optimization Done.
