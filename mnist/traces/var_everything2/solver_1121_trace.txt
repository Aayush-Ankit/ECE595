I0428 20:09:54.130237 31726 caffe.cpp:218] Using GPUs 0
I0428 20:09:54.163213 31726 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:54.625236 31726 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1121.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:54.625393 31726 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1121.prototxt
I0428 20:09:54.626579 31726 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:54.626618 31726 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:54.626801 31726 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:54.626919 31726 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:54.627081 31726 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:54.627115 31726 net.cpp:86] Creating Layer mnist
I0428 20:09:54.627132 31726 net.cpp:382] mnist -> data
I0428 20:09:54.627164 31726 net.cpp:382] mnist -> label
I0428 20:09:54.628794 31726 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:54.632640 31726 net.cpp:124] Setting up mnist
I0428 20:09:54.632681 31726 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:54.632694 31726 net.cpp:131] Top shape: 64 (64)
I0428 20:09:54.632701 31726 net.cpp:139] Memory required for data: 200960
I0428 20:09:54.632714 31726 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:54.632738 31726 net.cpp:86] Creating Layer conv0
I0428 20:09:54.632781 31726 net.cpp:408] conv0 <- data
I0428 20:09:54.632804 31726 net.cpp:382] conv0 -> conv0
I0428 20:09:54.922554 31726 net.cpp:124] Setting up conv0
I0428 20:09:54.922596 31726 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:54.922600 31726 net.cpp:139] Memory required for data: 3887360
I0428 20:09:54.922616 31726 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:54.922644 31726 net.cpp:86] Creating Layer pool0
I0428 20:09:54.922648 31726 net.cpp:408] pool0 <- conv0
I0428 20:09:54.922653 31726 net.cpp:382] pool0 -> pool0
I0428 20:09:54.922698 31726 net.cpp:124] Setting up pool0
I0428 20:09:54.922705 31726 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:54.922708 31726 net.cpp:139] Memory required for data: 4808960
I0428 20:09:54.922711 31726 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:54.922721 31726 net.cpp:86] Creating Layer conv1
I0428 20:09:54.922725 31726 net.cpp:408] conv1 <- pool0
I0428 20:09:54.922730 31726 net.cpp:382] conv1 -> conv1
I0428 20:09:54.925562 31726 net.cpp:124] Setting up conv1
I0428 20:09:54.925593 31726 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:54.925597 31726 net.cpp:139] Memory required for data: 5218560
I0428 20:09:54.925621 31726 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:54.925643 31726 net.cpp:86] Creating Layer pool1
I0428 20:09:54.925647 31726 net.cpp:408] pool1 <- conv1
I0428 20:09:54.925652 31726 net.cpp:382] pool1 -> pool1
I0428 20:09:54.925688 31726 net.cpp:124] Setting up pool1
I0428 20:09:54.925694 31726 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:54.925696 31726 net.cpp:139] Memory required for data: 5320960
I0428 20:09:54.925699 31726 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:54.925706 31726 net.cpp:86] Creating Layer ip1
I0428 20:09:54.925709 31726 net.cpp:408] ip1 <- pool1
I0428 20:09:54.925714 31726 net.cpp:382] ip1 -> ip1
I0428 20:09:54.925854 31726 net.cpp:124] Setting up ip1
I0428 20:09:54.925861 31726 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:54.925864 31726 net.cpp:139] Memory required for data: 5327360
I0428 20:09:54.925871 31726 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:54.925876 31726 net.cpp:86] Creating Layer relu1
I0428 20:09:54.925879 31726 net.cpp:408] relu1 <- ip1
I0428 20:09:54.925884 31726 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:54.926057 31726 net.cpp:124] Setting up relu1
I0428 20:09:54.926066 31726 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:54.926069 31726 net.cpp:139] Memory required for data: 5333760
I0428 20:09:54.926072 31726 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:54.926079 31726 net.cpp:86] Creating Layer ip2
I0428 20:09:54.926081 31726 net.cpp:408] ip2 <- ip1
I0428 20:09:54.926086 31726 net.cpp:382] ip2 -> ip2
I0428 20:09:54.927037 31726 net.cpp:124] Setting up ip2
I0428 20:09:54.927049 31726 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:09:54.927069 31726 net.cpp:139] Memory required for data: 5346560
I0428 20:09:54.927075 31726 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:54.927083 31726 net.cpp:86] Creating Layer relu2
I0428 20:09:54.927085 31726 net.cpp:408] relu2 <- ip2
I0428 20:09:54.927090 31726 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:54.927863 31726 net.cpp:124] Setting up relu2
I0428 20:09:54.927875 31726 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:09:54.927896 31726 net.cpp:139] Memory required for data: 5359360
I0428 20:09:54.927899 31726 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:54.927906 31726 net.cpp:86] Creating Layer ip3
I0428 20:09:54.927911 31726 net.cpp:408] ip3 <- ip2
I0428 20:09:54.927916 31726 net.cpp:382] ip3 -> ip3
I0428 20:09:54.928015 31726 net.cpp:124] Setting up ip3
I0428 20:09:54.928022 31726 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:54.928025 31726 net.cpp:139] Memory required for data: 5361920
I0428 20:09:54.928033 31726 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:54.928038 31726 net.cpp:86] Creating Layer relu3
I0428 20:09:54.928041 31726 net.cpp:408] relu3 <- ip3
I0428 20:09:54.928045 31726 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:54.928225 31726 net.cpp:124] Setting up relu3
I0428 20:09:54.928233 31726 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:54.928237 31726 net.cpp:139] Memory required for data: 5364480
I0428 20:09:54.928241 31726 layer_factory.hpp:77] Creating layer loss
I0428 20:09:54.928246 31726 net.cpp:86] Creating Layer loss
I0428 20:09:54.928249 31726 net.cpp:408] loss <- ip3
I0428 20:09:54.928253 31726 net.cpp:408] loss <- label
I0428 20:09:54.928258 31726 net.cpp:382] loss -> loss
I0428 20:09:54.928285 31726 layer_factory.hpp:77] Creating layer loss
I0428 20:09:54.928515 31726 net.cpp:124] Setting up loss
I0428 20:09:54.928539 31726 net.cpp:131] Top shape: (1)
I0428 20:09:54.928544 31726 net.cpp:134]     with loss weight 1
I0428 20:09:54.928571 31726 net.cpp:139] Memory required for data: 5364484
I0428 20:09:54.928575 31726 net.cpp:200] loss needs backward computation.
I0428 20:09:54.928578 31726 net.cpp:200] relu3 needs backward computation.
I0428 20:09:54.928582 31726 net.cpp:200] ip3 needs backward computation.
I0428 20:09:54.928584 31726 net.cpp:200] relu2 needs backward computation.
I0428 20:09:54.928587 31726 net.cpp:200] ip2 needs backward computation.
I0428 20:09:54.928591 31726 net.cpp:200] relu1 needs backward computation.
I0428 20:09:54.928593 31726 net.cpp:200] ip1 needs backward computation.
I0428 20:09:54.928596 31726 net.cpp:200] pool1 needs backward computation.
I0428 20:09:54.928599 31726 net.cpp:200] conv1 needs backward computation.
I0428 20:09:54.928602 31726 net.cpp:200] pool0 needs backward computation.
I0428 20:09:54.928606 31726 net.cpp:200] conv0 needs backward computation.
I0428 20:09:54.928608 31726 net.cpp:202] mnist does not need backward computation.
I0428 20:09:54.928611 31726 net.cpp:244] This network produces output loss
I0428 20:09:54.928620 31726 net.cpp:257] Network initialization done.
I0428 20:09:54.928998 31726 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1121.prototxt
I0428 20:09:54.929042 31726 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:54.929133 31726 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:54.929225 31726 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:54.929268 31726 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:54.929280 31726 net.cpp:86] Creating Layer mnist
I0428 20:09:54.929286 31726 net.cpp:382] mnist -> data
I0428 20:09:54.929292 31726 net.cpp:382] mnist -> label
I0428 20:09:54.929394 31726 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:54.931417 31726 net.cpp:124] Setting up mnist
I0428 20:09:54.931448 31726 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:54.931453 31726 net.cpp:131] Top shape: 100 (100)
I0428 20:09:54.931457 31726 net.cpp:139] Memory required for data: 314000
I0428 20:09:54.931460 31726 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:54.931470 31726 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:54.931473 31726 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:54.931478 31726 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:54.931484 31726 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:54.931598 31726 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:54.931607 31726 net.cpp:131] Top shape: 100 (100)
I0428 20:09:54.931610 31726 net.cpp:131] Top shape: 100 (100)
I0428 20:09:54.931613 31726 net.cpp:139] Memory required for data: 314800
I0428 20:09:54.931617 31726 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:54.931625 31726 net.cpp:86] Creating Layer conv0
I0428 20:09:54.931630 31726 net.cpp:408] conv0 <- data
I0428 20:09:54.931635 31726 net.cpp:382] conv0 -> conv0
I0428 20:09:54.933200 31726 net.cpp:124] Setting up conv0
I0428 20:09:54.933230 31726 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:54.933234 31726 net.cpp:139] Memory required for data: 6074800
I0428 20:09:54.933259 31726 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:54.933265 31726 net.cpp:86] Creating Layer pool0
I0428 20:09:54.933269 31726 net.cpp:408] pool0 <- conv0
I0428 20:09:54.933274 31726 net.cpp:382] pool0 -> pool0
I0428 20:09:54.933317 31726 net.cpp:124] Setting up pool0
I0428 20:09:54.933324 31726 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:54.933327 31726 net.cpp:139] Memory required for data: 7514800
I0428 20:09:54.933331 31726 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:54.933338 31726 net.cpp:86] Creating Layer conv1
I0428 20:09:54.933341 31726 net.cpp:408] conv1 <- pool0
I0428 20:09:54.933347 31726 net.cpp:382] conv1 -> conv1
I0428 20:09:54.935537 31726 net.cpp:124] Setting up conv1
I0428 20:09:54.935566 31726 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:54.935570 31726 net.cpp:139] Memory required for data: 8154800
I0428 20:09:54.935580 31726 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:54.935585 31726 net.cpp:86] Creating Layer pool1
I0428 20:09:54.935606 31726 net.cpp:408] pool1 <- conv1
I0428 20:09:54.935611 31726 net.cpp:382] pool1 -> pool1
I0428 20:09:54.935654 31726 net.cpp:124] Setting up pool1
I0428 20:09:54.935662 31726 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:54.935664 31726 net.cpp:139] Memory required for data: 8314800
I0428 20:09:54.935667 31726 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:54.935673 31726 net.cpp:86] Creating Layer ip1
I0428 20:09:54.935688 31726 net.cpp:408] ip1 <- pool1
I0428 20:09:54.935693 31726 net.cpp:382] ip1 -> ip1
I0428 20:09:54.935863 31726 net.cpp:124] Setting up ip1
I0428 20:09:54.935886 31726 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:54.935901 31726 net.cpp:139] Memory required for data: 8324800
I0428 20:09:54.935909 31726 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:54.935914 31726 net.cpp:86] Creating Layer relu1
I0428 20:09:54.935917 31726 net.cpp:408] relu1 <- ip1
I0428 20:09:54.935922 31726 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:54.936094 31726 net.cpp:124] Setting up relu1
I0428 20:09:54.936103 31726 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:54.936107 31726 net.cpp:139] Memory required for data: 8334800
I0428 20:09:54.936111 31726 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:54.936118 31726 net.cpp:86] Creating Layer ip2
I0428 20:09:54.936121 31726 net.cpp:408] ip2 <- ip1
I0428 20:09:54.936126 31726 net.cpp:382] ip2 -> ip2
I0428 20:09:54.936250 31726 net.cpp:124] Setting up ip2
I0428 20:09:54.936257 31726 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:09:54.936260 31726 net.cpp:139] Memory required for data: 8354800
I0428 20:09:54.936266 31726 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:54.936280 31726 net.cpp:86] Creating Layer relu2
I0428 20:09:54.936282 31726 net.cpp:408] relu2 <- ip2
I0428 20:09:54.936286 31726 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:54.936458 31726 net.cpp:124] Setting up relu2
I0428 20:09:54.936467 31726 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:09:54.936470 31726 net.cpp:139] Memory required for data: 8374800
I0428 20:09:54.936475 31726 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:54.936480 31726 net.cpp:86] Creating Layer ip3
I0428 20:09:54.936482 31726 net.cpp:408] ip3 <- ip2
I0428 20:09:54.936487 31726 net.cpp:382] ip3 -> ip3
I0428 20:09:54.936599 31726 net.cpp:124] Setting up ip3
I0428 20:09:54.936605 31726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:54.936609 31726 net.cpp:139] Memory required for data: 8378800
I0428 20:09:54.936616 31726 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:54.936624 31726 net.cpp:86] Creating Layer relu3
I0428 20:09:54.936626 31726 net.cpp:408] relu3 <- ip3
I0428 20:09:54.936630 31726 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:54.937553 31726 net.cpp:124] Setting up relu3
I0428 20:09:54.937583 31726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:54.937587 31726 net.cpp:139] Memory required for data: 8382800
I0428 20:09:54.937589 31726 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:54.937595 31726 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:54.937598 31726 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:54.937603 31726 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:54.937610 31726 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:54.937650 31726 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:54.937656 31726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:54.937660 31726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:54.937662 31726 net.cpp:139] Memory required for data: 8390800
I0428 20:09:54.937665 31726 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:54.937670 31726 net.cpp:86] Creating Layer accuracy
I0428 20:09:54.937674 31726 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:54.937677 31726 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:54.937683 31726 net.cpp:382] accuracy -> accuracy
I0428 20:09:54.937690 31726 net.cpp:124] Setting up accuracy
I0428 20:09:54.937695 31726 net.cpp:131] Top shape: (1)
I0428 20:09:54.937698 31726 net.cpp:139] Memory required for data: 8390804
I0428 20:09:54.937700 31726 layer_factory.hpp:77] Creating layer loss
I0428 20:09:54.937706 31726 net.cpp:86] Creating Layer loss
I0428 20:09:54.937710 31726 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:54.937713 31726 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:54.937717 31726 net.cpp:382] loss -> loss
I0428 20:09:54.937723 31726 layer_factory.hpp:77] Creating layer loss
I0428 20:09:54.937985 31726 net.cpp:124] Setting up loss
I0428 20:09:54.937994 31726 net.cpp:131] Top shape: (1)
I0428 20:09:54.937997 31726 net.cpp:134]     with loss weight 1
I0428 20:09:54.938014 31726 net.cpp:139] Memory required for data: 8390808
I0428 20:09:54.938019 31726 net.cpp:200] loss needs backward computation.
I0428 20:09:54.938022 31726 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:54.938026 31726 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:54.938030 31726 net.cpp:200] relu3 needs backward computation.
I0428 20:09:54.938032 31726 net.cpp:200] ip3 needs backward computation.
I0428 20:09:54.938035 31726 net.cpp:200] relu2 needs backward computation.
I0428 20:09:54.938045 31726 net.cpp:200] ip2 needs backward computation.
I0428 20:09:54.938048 31726 net.cpp:200] relu1 needs backward computation.
I0428 20:09:54.938052 31726 net.cpp:200] ip1 needs backward computation.
I0428 20:09:54.938055 31726 net.cpp:200] pool1 needs backward computation.
I0428 20:09:54.938074 31726 net.cpp:200] conv1 needs backward computation.
I0428 20:09:54.938078 31726 net.cpp:200] pool0 needs backward computation.
I0428 20:09:54.938081 31726 net.cpp:200] conv0 needs backward computation.
I0428 20:09:54.938086 31726 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:54.938089 31726 net.cpp:202] mnist does not need backward computation.
I0428 20:09:54.938091 31726 net.cpp:244] This network produces output accuracy
I0428 20:09:54.938096 31726 net.cpp:244] This network produces output loss
I0428 20:09:54.938107 31726 net.cpp:257] Network initialization done.
I0428 20:09:54.938153 31726 solver.cpp:56] Solver scaffolding done.
I0428 20:09:54.938539 31726 caffe.cpp:248] Starting Optimization
I0428 20:09:54.938550 31726 solver.cpp:273] Solving LeNet
I0428 20:09:54.938552 31726 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:54.939447 31726 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:54.945380 31726 blocking_queue.cpp:49] Waiting for data
I0428 20:09:55.017621 31733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:55.019912 31726 solver.cpp:398]     Test net output #0: accuracy = 0.0885
I0428 20:09:55.019954 31726 solver.cpp:398]     Test net output #1: loss = 2.35138 (* 1 = 2.35138 loss)
I0428 20:09:55.025146 31726 solver.cpp:219] Iteration 0 (-1.07594e-31 iter/s, 0.0865341s/100 iters), loss = 2.35866
I0428 20:09:55.025187 31726 solver.cpp:238]     Train net output #0: loss = 2.35866 (* 1 = 2.35866 loss)
I0428 20:09:55.025204 31726 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:55.132107 31726 solver.cpp:219] Iteration 100 (935.378 iter/s, 0.106909s/100 iters), loss = 0.304238
I0428 20:09:55.132149 31726 solver.cpp:238]     Train net output #0: loss = 0.304238 (* 1 = 0.304238 loss)
I0428 20:09:55.132156 31726 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:55.235725 31726 solver.cpp:219] Iteration 200 (965.468 iter/s, 0.103577s/100 iters), loss = 0.242058
I0428 20:09:55.235766 31726 solver.cpp:238]     Train net output #0: loss = 0.242058 (* 1 = 0.242058 loss)
I0428 20:09:55.235774 31726 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:55.339272 31726 solver.cpp:219] Iteration 300 (966.109 iter/s, 0.103508s/100 iters), loss = 0.196223
I0428 20:09:55.339313 31726 solver.cpp:238]     Train net output #0: loss = 0.196223 (* 1 = 0.196223 loss)
I0428 20:09:55.339320 31726 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:55.443146 31726 solver.cpp:219] Iteration 400 (963.165 iter/s, 0.103824s/100 iters), loss = 0.0891249
I0428 20:09:55.443187 31726 solver.cpp:238]     Train net output #0: loss = 0.0891248 (* 1 = 0.0891248 loss)
I0428 20:09:55.443194 31726 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:55.546082 31726 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:55.603327 31733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:55.605392 31726 solver.cpp:398]     Test net output #0: accuracy = 0.9544
I0428 20:09:55.605433 31726 solver.cpp:398]     Test net output #1: loss = 0.137309 (* 1 = 0.137309 loss)
I0428 20:09:55.606443 31726 solver.cpp:219] Iteration 500 (612.538 iter/s, 0.163255s/100 iters), loss = 0.153488
I0428 20:09:55.606495 31726 solver.cpp:238]     Train net output #0: loss = 0.153488 (* 1 = 0.153488 loss)
I0428 20:09:55.606503 31726 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:55.710546 31726 solver.cpp:219] Iteration 600 (961.088 iter/s, 0.104049s/100 iters), loss = 0.0927078
I0428 20:09:55.710583 31726 solver.cpp:238]     Train net output #0: loss = 0.0927077 (* 1 = 0.0927077 loss)
I0428 20:09:55.710592 31726 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:55.814317 31726 solver.cpp:219] Iteration 700 (964.02 iter/s, 0.103732s/100 iters), loss = 0.139703
I0428 20:09:55.814357 31726 solver.cpp:238]     Train net output #0: loss = 0.139703 (* 1 = 0.139703 loss)
I0428 20:09:55.814364 31726 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:55.920661 31726 solver.cpp:219] Iteration 800 (940.721 iter/s, 0.106301s/100 iters), loss = 0.204518
I0428 20:09:55.920707 31726 solver.cpp:238]     Train net output #0: loss = 0.204518 (* 1 = 0.204518 loss)
I0428 20:09:55.920719 31726 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:56.032532 31726 solver.cpp:219] Iteration 900 (894.312 iter/s, 0.111818s/100 iters), loss = 0.143084
I0428 20:09:56.032569 31726 solver.cpp:238]     Train net output #0: loss = 0.143084 (* 1 = 0.143084 loss)
I0428 20:09:56.032577 31726 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:56.066560 31732 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:56.137852 31726 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:56.139596 31726 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:56.140696 31726 solver.cpp:311] Iteration 1000, loss = 0.142729
I0428 20:09:56.140723 31726 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:56.206176 31733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:56.208333 31726 solver.cpp:398]     Test net output #0: accuracy = 0.9746
I0428 20:09:56.208358 31726 solver.cpp:398]     Test net output #1: loss = 0.0761922 (* 1 = 0.0761922 loss)
I0428 20:09:56.208369 31726 solver.cpp:316] Optimization Done.
I0428 20:09:56.208372 31726 caffe.cpp:259] Optimization Done.
