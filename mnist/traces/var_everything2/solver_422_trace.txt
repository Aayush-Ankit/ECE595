I0428 19:43:27.514772 25351 caffe.cpp:218] Using GPUs 0
I0428 19:43:27.556109 25351 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:28.074374 25351 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test422.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:28.074512 25351 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test422.prototxt
I0428 19:43:28.074928 25351 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:28.074945 25351 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:28.075048 25351 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:28.075129 25351 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:28.075237 25351 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:28.075261 25351 net.cpp:86] Creating Layer mnist
I0428 19:43:28.075269 25351 net.cpp:382] mnist -> data
I0428 19:43:28.075290 25351 net.cpp:382] mnist -> label
I0428 19:43:28.076395 25351 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:28.078878 25351 net.cpp:124] Setting up mnist
I0428 19:43:28.078896 25351 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:28.078903 25351 net.cpp:131] Top shape: 64 (64)
I0428 19:43:28.078907 25351 net.cpp:139] Memory required for data: 200960
I0428 19:43:28.078914 25351 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:28.078929 25351 net.cpp:86] Creating Layer conv0
I0428 19:43:28.078951 25351 net.cpp:408] conv0 <- data
I0428 19:43:28.078965 25351 net.cpp:382] conv0 -> conv0
I0428 19:43:28.346943 25351 net.cpp:124] Setting up conv0
I0428 19:43:28.346985 25351 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:28.346989 25351 net.cpp:139] Memory required for data: 495872
I0428 19:43:28.347004 25351 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:28.347023 25351 net.cpp:86] Creating Layer pool0
I0428 19:43:28.347028 25351 net.cpp:408] pool0 <- conv0
I0428 19:43:28.347033 25351 net.cpp:382] pool0 -> pool0
I0428 19:43:28.347095 25351 net.cpp:124] Setting up pool0
I0428 19:43:28.347101 25351 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:28.347105 25351 net.cpp:139] Memory required for data: 569600
I0428 19:43:28.347107 25351 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:28.347118 25351 net.cpp:86] Creating Layer conv1
I0428 19:43:28.347124 25351 net.cpp:408] conv1 <- pool0
I0428 19:43:28.347129 25351 net.cpp:382] conv1 -> conv1
I0428 19:43:28.349877 25351 net.cpp:124] Setting up conv1
I0428 19:43:28.349907 25351 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:28.349911 25351 net.cpp:139] Memory required for data: 979200
I0428 19:43:28.349920 25351 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:28.349927 25351 net.cpp:86] Creating Layer pool1
I0428 19:43:28.349931 25351 net.cpp:408] pool1 <- conv1
I0428 19:43:28.349936 25351 net.cpp:382] pool1 -> pool1
I0428 19:43:28.349987 25351 net.cpp:124] Setting up pool1
I0428 19:43:28.349997 25351 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:28.350002 25351 net.cpp:139] Memory required for data: 1081600
I0428 19:43:28.350006 25351 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:28.350015 25351 net.cpp:86] Creating Layer ip1
I0428 19:43:28.350018 25351 net.cpp:408] ip1 <- pool1
I0428 19:43:28.350023 25351 net.cpp:382] ip1 -> ip1
I0428 19:43:28.350237 25351 net.cpp:124] Setting up ip1
I0428 19:43:28.350246 25351 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:28.350250 25351 net.cpp:139] Memory required for data: 1094400
I0428 19:43:28.350256 25351 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:28.350263 25351 net.cpp:86] Creating Layer relu1
I0428 19:43:28.350266 25351 net.cpp:408] relu1 <- ip1
I0428 19:43:28.350270 25351 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:28.350457 25351 net.cpp:124] Setting up relu1
I0428 19:43:28.350466 25351 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:28.350469 25351 net.cpp:139] Memory required for data: 1107200
I0428 19:43:28.350472 25351 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:28.350478 25351 net.cpp:86] Creating Layer ip2
I0428 19:43:28.350481 25351 net.cpp:408] ip2 <- ip1
I0428 19:43:28.350487 25351 net.cpp:382] ip2 -> ip2
I0428 19:43:28.350585 25351 net.cpp:124] Setting up ip2
I0428 19:43:28.350592 25351 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:28.350595 25351 net.cpp:139] Memory required for data: 1109760
I0428 19:43:28.350600 25351 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:28.350606 25351 net.cpp:86] Creating Layer relu2
I0428 19:43:28.350610 25351 net.cpp:408] relu2 <- ip2
I0428 19:43:28.350615 25351 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:28.351372 25351 net.cpp:124] Setting up relu2
I0428 19:43:28.351383 25351 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:28.351403 25351 net.cpp:139] Memory required for data: 1112320
I0428 19:43:28.351407 25351 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:28.351413 25351 net.cpp:86] Creating Layer ip3
I0428 19:43:28.351418 25351 net.cpp:408] ip3 <- ip2
I0428 19:43:28.351423 25351 net.cpp:382] ip3 -> ip3
I0428 19:43:28.351526 25351 net.cpp:124] Setting up ip3
I0428 19:43:28.351532 25351 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:28.351536 25351 net.cpp:139] Memory required for data: 1114880
I0428 19:43:28.351543 25351 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:28.351549 25351 net.cpp:86] Creating Layer relu3
I0428 19:43:28.351555 25351 net.cpp:408] relu3 <- ip3
I0428 19:43:28.351558 25351 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:28.351729 25351 net.cpp:124] Setting up relu3
I0428 19:43:28.351739 25351 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:28.351742 25351 net.cpp:139] Memory required for data: 1117440
I0428 19:43:28.351745 25351 layer_factory.hpp:77] Creating layer loss
I0428 19:43:28.351750 25351 net.cpp:86] Creating Layer loss
I0428 19:43:28.351753 25351 net.cpp:408] loss <- ip3
I0428 19:43:28.351758 25351 net.cpp:408] loss <- label
I0428 19:43:28.351763 25351 net.cpp:382] loss -> loss
I0428 19:43:28.351794 25351 layer_factory.hpp:77] Creating layer loss
I0428 19:43:28.352030 25351 net.cpp:124] Setting up loss
I0428 19:43:28.352042 25351 net.cpp:131] Top shape: (1)
I0428 19:43:28.352046 25351 net.cpp:134]     with loss weight 1
I0428 19:43:28.352061 25351 net.cpp:139] Memory required for data: 1117444
I0428 19:43:28.352064 25351 net.cpp:200] loss needs backward computation.
I0428 19:43:28.352068 25351 net.cpp:200] relu3 needs backward computation.
I0428 19:43:28.352072 25351 net.cpp:200] ip3 needs backward computation.
I0428 19:43:28.352073 25351 net.cpp:200] relu2 needs backward computation.
I0428 19:43:28.352077 25351 net.cpp:200] ip2 needs backward computation.
I0428 19:43:28.352079 25351 net.cpp:200] relu1 needs backward computation.
I0428 19:43:28.352082 25351 net.cpp:200] ip1 needs backward computation.
I0428 19:43:28.352085 25351 net.cpp:200] pool1 needs backward computation.
I0428 19:43:28.352087 25351 net.cpp:200] conv1 needs backward computation.
I0428 19:43:28.352090 25351 net.cpp:200] pool0 needs backward computation.
I0428 19:43:28.352093 25351 net.cpp:200] conv0 needs backward computation.
I0428 19:43:28.352097 25351 net.cpp:202] mnist does not need backward computation.
I0428 19:43:28.352099 25351 net.cpp:244] This network produces output loss
I0428 19:43:28.352110 25351 net.cpp:257] Network initialization done.
I0428 19:43:28.352506 25351 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test422.prototxt
I0428 19:43:28.352550 25351 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:28.352645 25351 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:28.352728 25351 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:28.352787 25351 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:28.352798 25351 net.cpp:86] Creating Layer mnist
I0428 19:43:28.352804 25351 net.cpp:382] mnist -> data
I0428 19:43:28.352833 25351 net.cpp:382] mnist -> label
I0428 19:43:28.352941 25351 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:28.355136 25351 net.cpp:124] Setting up mnist
I0428 19:43:28.355149 25351 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:28.355154 25351 net.cpp:131] Top shape: 100 (100)
I0428 19:43:28.355156 25351 net.cpp:139] Memory required for data: 314000
I0428 19:43:28.355160 25351 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:28.355167 25351 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:28.355170 25351 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:28.355201 25351 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:28.355209 25351 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:28.355248 25351 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:28.355254 25351 net.cpp:131] Top shape: 100 (100)
I0428 19:43:28.355258 25351 net.cpp:131] Top shape: 100 (100)
I0428 19:43:28.355260 25351 net.cpp:139] Memory required for data: 314800
I0428 19:43:28.355263 25351 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:28.355288 25351 net.cpp:86] Creating Layer conv0
I0428 19:43:28.355293 25351 net.cpp:408] conv0 <- data
I0428 19:43:28.355300 25351 net.cpp:382] conv0 -> conv0
I0428 19:43:28.356914 25351 net.cpp:124] Setting up conv0
I0428 19:43:28.356928 25351 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:28.356932 25351 net.cpp:139] Memory required for data: 775600
I0428 19:43:28.356941 25351 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:28.356947 25351 net.cpp:86] Creating Layer pool0
I0428 19:43:28.356966 25351 net.cpp:408] pool0 <- conv0
I0428 19:43:28.356971 25351 net.cpp:382] pool0 -> pool0
I0428 19:43:28.357024 25351 net.cpp:124] Setting up pool0
I0428 19:43:28.357030 25351 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:28.357033 25351 net.cpp:139] Memory required for data: 890800
I0428 19:43:28.357036 25351 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:28.357046 25351 net.cpp:86] Creating Layer conv1
I0428 19:43:28.357049 25351 net.cpp:408] conv1 <- pool0
I0428 19:43:28.357054 25351 net.cpp:382] conv1 -> conv1
I0428 19:43:28.358587 25351 net.cpp:124] Setting up conv1
I0428 19:43:28.358600 25351 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:28.358604 25351 net.cpp:139] Memory required for data: 1530800
I0428 19:43:28.358614 25351 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:28.358620 25351 net.cpp:86] Creating Layer pool1
I0428 19:43:28.358629 25351 net.cpp:408] pool1 <- conv1
I0428 19:43:28.358634 25351 net.cpp:382] pool1 -> pool1
I0428 19:43:28.358687 25351 net.cpp:124] Setting up pool1
I0428 19:43:28.358693 25351 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:28.358696 25351 net.cpp:139] Memory required for data: 1690800
I0428 19:43:28.358700 25351 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:28.358705 25351 net.cpp:86] Creating Layer ip1
I0428 19:43:28.358713 25351 net.cpp:408] ip1 <- pool1
I0428 19:43:28.358719 25351 net.cpp:382] ip1 -> ip1
I0428 19:43:28.358956 25351 net.cpp:124] Setting up ip1
I0428 19:43:28.358964 25351 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:28.358978 25351 net.cpp:139] Memory required for data: 1710800
I0428 19:43:28.358986 25351 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:28.358992 25351 net.cpp:86] Creating Layer relu1
I0428 19:43:28.359002 25351 net.cpp:408] relu1 <- ip1
I0428 19:43:28.359006 25351 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:28.359167 25351 net.cpp:124] Setting up relu1
I0428 19:43:28.359192 25351 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:28.359196 25351 net.cpp:139] Memory required for data: 1730800
I0428 19:43:28.359200 25351 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:28.359206 25351 net.cpp:86] Creating Layer ip2
I0428 19:43:28.359210 25351 net.cpp:408] ip2 <- ip1
I0428 19:43:28.359215 25351 net.cpp:382] ip2 -> ip2
I0428 19:43:28.359319 25351 net.cpp:124] Setting up ip2
I0428 19:43:28.359326 25351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:28.359330 25351 net.cpp:139] Memory required for data: 1734800
I0428 19:43:28.359335 25351 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:28.359340 25351 net.cpp:86] Creating Layer relu2
I0428 19:43:28.359344 25351 net.cpp:408] relu2 <- ip2
I0428 19:43:28.359349 25351 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:28.359536 25351 net.cpp:124] Setting up relu2
I0428 19:43:28.359545 25351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:28.359547 25351 net.cpp:139] Memory required for data: 1738800
I0428 19:43:28.359550 25351 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:28.359557 25351 net.cpp:86] Creating Layer ip3
I0428 19:43:28.359560 25351 net.cpp:408] ip3 <- ip2
I0428 19:43:28.359565 25351 net.cpp:382] ip3 -> ip3
I0428 19:43:28.359683 25351 net.cpp:124] Setting up ip3
I0428 19:43:28.359691 25351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:28.359694 25351 net.cpp:139] Memory required for data: 1742800
I0428 19:43:28.359702 25351 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:28.359706 25351 net.cpp:86] Creating Layer relu3
I0428 19:43:28.359710 25351 net.cpp:408] relu3 <- ip3
I0428 19:43:28.359714 25351 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:28.360615 25351 net.cpp:124] Setting up relu3
I0428 19:43:28.360627 25351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:28.360631 25351 net.cpp:139] Memory required for data: 1746800
I0428 19:43:28.360635 25351 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:28.360641 25351 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:28.360644 25351 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:28.360651 25351 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:28.360657 25351 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:28.360693 25351 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:28.360698 25351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:28.360702 25351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:28.360704 25351 net.cpp:139] Memory required for data: 1754800
I0428 19:43:28.360707 25351 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:28.360713 25351 net.cpp:86] Creating Layer accuracy
I0428 19:43:28.360716 25351 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:28.360720 25351 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:28.360740 25351 net.cpp:382] accuracy -> accuracy
I0428 19:43:28.360747 25351 net.cpp:124] Setting up accuracy
I0428 19:43:28.360751 25351 net.cpp:131] Top shape: (1)
I0428 19:43:28.360754 25351 net.cpp:139] Memory required for data: 1754804
I0428 19:43:28.360757 25351 layer_factory.hpp:77] Creating layer loss
I0428 19:43:28.360764 25351 net.cpp:86] Creating Layer loss
I0428 19:43:28.360766 25351 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:28.360770 25351 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:28.360774 25351 net.cpp:382] loss -> loss
I0428 19:43:28.360780 25351 layer_factory.hpp:77] Creating layer loss
I0428 19:43:28.361075 25351 net.cpp:124] Setting up loss
I0428 19:43:28.361086 25351 net.cpp:131] Top shape: (1)
I0428 19:43:28.361089 25351 net.cpp:134]     with loss weight 1
I0428 19:43:28.361096 25351 net.cpp:139] Memory required for data: 1754808
I0428 19:43:28.361110 25351 net.cpp:200] loss needs backward computation.
I0428 19:43:28.361124 25351 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:28.361129 25351 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:28.361131 25351 net.cpp:200] relu3 needs backward computation.
I0428 19:43:28.361145 25351 net.cpp:200] ip3 needs backward computation.
I0428 19:43:28.361163 25351 net.cpp:200] relu2 needs backward computation.
I0428 19:43:28.361166 25351 net.cpp:200] ip2 needs backward computation.
I0428 19:43:28.361169 25351 net.cpp:200] relu1 needs backward computation.
I0428 19:43:28.361186 25351 net.cpp:200] ip1 needs backward computation.
I0428 19:43:28.361189 25351 net.cpp:200] pool1 needs backward computation.
I0428 19:43:28.361193 25351 net.cpp:200] conv1 needs backward computation.
I0428 19:43:28.361196 25351 net.cpp:200] pool0 needs backward computation.
I0428 19:43:28.361198 25351 net.cpp:200] conv0 needs backward computation.
I0428 19:43:28.361202 25351 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:28.361205 25351 net.cpp:202] mnist does not need backward computation.
I0428 19:43:28.361208 25351 net.cpp:244] This network produces output accuracy
I0428 19:43:28.361212 25351 net.cpp:244] This network produces output loss
I0428 19:43:28.361222 25351 net.cpp:257] Network initialization done.
I0428 19:43:28.361277 25351 solver.cpp:56] Solver scaffolding done.
I0428 19:43:28.361588 25351 caffe.cpp:248] Starting Optimization
I0428 19:43:28.361600 25351 solver.cpp:273] Solving LeNet
I0428 19:43:28.361603 25351 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:28.362373 25351 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:28.365514 25351 blocking_queue.cpp:49] Waiting for data
I0428 19:43:28.436867 25358 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:28.437330 25351 solver.cpp:398]     Test net output #0: accuracy = 0.1037
I0428 19:43:28.437348 25351 solver.cpp:398]     Test net output #1: loss = 2.30801 (* 1 = 2.30801 loss)
I0428 19:43:28.438567 25351 solver.cpp:219] Iteration 0 (0 iter/s, 0.0769382s/100 iters), loss = 2.28009
I0428 19:43:28.438606 25351 solver.cpp:238]     Train net output #0: loss = 2.28009 (* 1 = 2.28009 loss)
I0428 19:43:28.438621 25351 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:28.523936 25351 solver.cpp:219] Iteration 100 (1172.05 iter/s, 0.0853207s/100 iters), loss = 0.55157
I0428 19:43:28.523963 25351 solver.cpp:238]     Train net output #0: loss = 0.55157 (* 1 = 0.55157 loss)
I0428 19:43:28.523969 25351 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:28.604547 25351 solver.cpp:219] Iteration 200 (1241.09 iter/s, 0.0805744s/100 iters), loss = 0.300437
I0428 19:43:28.604571 25351 solver.cpp:238]     Train net output #0: loss = 0.300437 (* 1 = 0.300437 loss)
I0428 19:43:28.604593 25351 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:28.694771 25351 solver.cpp:219] Iteration 300 (1108.81 iter/s, 0.0901868s/100 iters), loss = 0.276226
I0428 19:43:28.694808 25351 solver.cpp:238]     Train net output #0: loss = 0.276226 (* 1 = 0.276226 loss)
I0428 19:43:28.694818 25351 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:28.787091 25351 solver.cpp:219] Iteration 400 (1083.72 iter/s, 0.0922747s/100 iters), loss = 0.171621
I0428 19:43:28.787119 25351 solver.cpp:238]     Train net output #0: loss = 0.171621 (* 1 = 0.171621 loss)
I0428 19:43:28.787127 25351 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:28.868916 25351 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:28.911402 25358 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:28.911820 25351 solver.cpp:398]     Test net output #0: accuracy = 0.9447
I0428 19:43:28.911839 25351 solver.cpp:398]     Test net output #1: loss = 0.173671 (* 1 = 0.173671 loss)
I0428 19:43:28.912679 25351 solver.cpp:219] Iteration 500 (796.518 iter/s, 0.125547s/100 iters), loss = 0.189623
I0428 19:43:28.912705 25351 solver.cpp:238]     Train net output #0: loss = 0.189623 (* 1 = 0.189623 loss)
I0428 19:43:28.912729 25351 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:29.003705 25351 solver.cpp:219] Iteration 600 (1099.04 iter/s, 0.0909885s/100 iters), loss = 0.104465
I0428 19:43:29.003731 25351 solver.cpp:238]     Train net output #0: loss = 0.104465 (* 1 = 0.104465 loss)
I0428 19:43:29.003753 25351 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:29.087813 25351 solver.cpp:219] Iteration 700 (1189.46 iter/s, 0.0840714s/100 iters), loss = 0.288786
I0428 19:43:29.087838 25351 solver.cpp:238]     Train net output #0: loss = 0.288786 (* 1 = 0.288786 loss)
I0428 19:43:29.087862 25351 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:29.169033 25351 solver.cpp:219] Iteration 800 (1231.79 iter/s, 0.0811827s/100 iters), loss = 0.195216
I0428 19:43:29.169056 25351 solver.cpp:238]     Train net output #0: loss = 0.195216 (* 1 = 0.195216 loss)
I0428 19:43:29.169078 25351 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:29.251060 25351 solver.cpp:219] Iteration 900 (1219.62 iter/s, 0.0819925s/100 iters), loss = 0.222977
I0428 19:43:29.251085 25351 solver.cpp:238]     Train net output #0: loss = 0.222977 (* 1 = 0.222977 loss)
I0428 19:43:29.251108 25351 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:29.282290 25357 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:29.340216 25351 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:29.341307 25351 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:29.341965 25351 solver.cpp:311] Iteration 1000, loss = 0.161566
I0428 19:43:29.341981 25351 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:29.409764 25358 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:29.410193 25351 solver.cpp:398]     Test net output #0: accuracy = 0.97
I0428 19:43:29.410212 25351 solver.cpp:398]     Test net output #1: loss = 0.0947626 (* 1 = 0.0947626 loss)
I0428 19:43:29.410217 25351 solver.cpp:316] Optimization Done.
I0428 19:43:29.410220 25351 caffe.cpp:259] Optimization Done.
