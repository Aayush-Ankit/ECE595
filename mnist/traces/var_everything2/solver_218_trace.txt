I0428 19:35:06.877759 23449 caffe.cpp:218] Using GPUs 0
I0428 19:35:06.913622 23449 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:07.419642 23449 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test218.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:07.419770 23449 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test218.prototxt
I0428 19:35:07.420135 23449 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:07.420153 23449 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:07.420243 23449 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:07.420317 23449 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:07.420413 23449 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:07.420434 23449 net.cpp:86] Creating Layer mnist
I0428 19:35:07.420444 23449 net.cpp:382] mnist -> data
I0428 19:35:07.420464 23449 net.cpp:382] mnist -> label
I0428 19:35:07.421532 23449 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:07.424126 23449 net.cpp:124] Setting up mnist
I0428 19:35:07.424144 23449 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:07.424150 23449 net.cpp:131] Top shape: 64 (64)
I0428 19:35:07.424154 23449 net.cpp:139] Memory required for data: 200960
I0428 19:35:07.424161 23449 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:07.424197 23449 net.cpp:86] Creating Layer conv0
I0428 19:35:07.424203 23449 net.cpp:408] conv0 <- data
I0428 19:35:07.424222 23449 net.cpp:382] conv0 -> conv0
I0428 19:35:07.708359 23449 net.cpp:124] Setting up conv0
I0428 19:35:07.708387 23449 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:07.708392 23449 net.cpp:139] Memory required for data: 7573760
I0428 19:35:07.708408 23449 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:07.708421 23449 net.cpp:86] Creating Layer pool0
I0428 19:35:07.708443 23449 net.cpp:408] pool0 <- conv0
I0428 19:35:07.708449 23449 net.cpp:382] pool0 -> pool0
I0428 19:35:07.708499 23449 net.cpp:124] Setting up pool0
I0428 19:35:07.708506 23449 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:07.708509 23449 net.cpp:139] Memory required for data: 9416960
I0428 19:35:07.708513 23449 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:07.708521 23449 net.cpp:86] Creating Layer ip1
I0428 19:35:07.708525 23449 net.cpp:408] ip1 <- pool0
I0428 19:35:07.708530 23449 net.cpp:382] ip1 -> ip1
I0428 19:35:07.710525 23449 net.cpp:124] Setting up ip1
I0428 19:35:07.710539 23449 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:07.710543 23449 net.cpp:139] Memory required for data: 9423360
I0428 19:35:07.710551 23449 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:07.710559 23449 net.cpp:86] Creating Layer relu1
I0428 19:35:07.710563 23449 net.cpp:408] relu1 <- ip1
I0428 19:35:07.710572 23449 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:07.710748 23449 net.cpp:124] Setting up relu1
I0428 19:35:07.710757 23449 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:07.710762 23449 net.cpp:139] Memory required for data: 9429760
I0428 19:35:07.710764 23449 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:07.710772 23449 net.cpp:86] Creating Layer ip2
I0428 19:35:07.710775 23449 net.cpp:408] ip2 <- ip1
I0428 19:35:07.710780 23449 net.cpp:382] ip2 -> ip2
I0428 19:35:07.710873 23449 net.cpp:124] Setting up ip2
I0428 19:35:07.710880 23449 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:07.710883 23449 net.cpp:139] Memory required for data: 9432320
I0428 19:35:07.710891 23449 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:07.710896 23449 net.cpp:86] Creating Layer relu2
I0428 19:35:07.710899 23449 net.cpp:408] relu2 <- ip2
I0428 19:35:07.710904 23449 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:07.711654 23449 net.cpp:124] Setting up relu2
I0428 19:35:07.711668 23449 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:07.711670 23449 net.cpp:139] Memory required for data: 9434880
I0428 19:35:07.711674 23449 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:07.711681 23449 net.cpp:86] Creating Layer ip3
I0428 19:35:07.711685 23449 net.cpp:408] ip3 <- ip2
I0428 19:35:07.711691 23449 net.cpp:382] ip3 -> ip3
I0428 19:35:07.711807 23449 net.cpp:124] Setting up ip3
I0428 19:35:07.711814 23449 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:07.711817 23449 net.cpp:139] Memory required for data: 9437440
I0428 19:35:07.711823 23449 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:07.711830 23449 net.cpp:86] Creating Layer relu3
I0428 19:35:07.711833 23449 net.cpp:408] relu3 <- ip3
I0428 19:35:07.711838 23449 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:07.712007 23449 net.cpp:124] Setting up relu3
I0428 19:35:07.712015 23449 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:07.712019 23449 net.cpp:139] Memory required for data: 9440000
I0428 19:35:07.712023 23449 layer_factory.hpp:77] Creating layer loss
I0428 19:35:07.712028 23449 net.cpp:86] Creating Layer loss
I0428 19:35:07.712031 23449 net.cpp:408] loss <- ip3
I0428 19:35:07.712035 23449 net.cpp:408] loss <- label
I0428 19:35:07.712041 23449 net.cpp:382] loss -> loss
I0428 19:35:07.712056 23449 layer_factory.hpp:77] Creating layer loss
I0428 19:35:07.712278 23449 net.cpp:124] Setting up loss
I0428 19:35:07.712288 23449 net.cpp:131] Top shape: (1)
I0428 19:35:07.712291 23449 net.cpp:134]     with loss weight 1
I0428 19:35:07.712307 23449 net.cpp:139] Memory required for data: 9440004
I0428 19:35:07.712311 23449 net.cpp:200] loss needs backward computation.
I0428 19:35:07.712316 23449 net.cpp:200] relu3 needs backward computation.
I0428 19:35:07.712318 23449 net.cpp:200] ip3 needs backward computation.
I0428 19:35:07.712322 23449 net.cpp:200] relu2 needs backward computation.
I0428 19:35:07.712324 23449 net.cpp:200] ip2 needs backward computation.
I0428 19:35:07.712328 23449 net.cpp:200] relu1 needs backward computation.
I0428 19:35:07.712330 23449 net.cpp:200] ip1 needs backward computation.
I0428 19:35:07.712344 23449 net.cpp:200] pool0 needs backward computation.
I0428 19:35:07.712348 23449 net.cpp:200] conv0 needs backward computation.
I0428 19:35:07.712352 23449 net.cpp:202] mnist does not need backward computation.
I0428 19:35:07.712354 23449 net.cpp:244] This network produces output loss
I0428 19:35:07.712363 23449 net.cpp:257] Network initialization done.
I0428 19:35:07.712647 23449 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test218.prototxt
I0428 19:35:07.712674 23449 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:07.712774 23449 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:07.712867 23449 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:07.712918 23449 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:07.712932 23449 net.cpp:86] Creating Layer mnist
I0428 19:35:07.712937 23449 net.cpp:382] mnist -> data
I0428 19:35:07.712946 23449 net.cpp:382] mnist -> label
I0428 19:35:07.713035 23449 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:07.714143 23449 net.cpp:124] Setting up mnist
I0428 19:35:07.714155 23449 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:07.714160 23449 net.cpp:131] Top shape: 100 (100)
I0428 19:35:07.714164 23449 net.cpp:139] Memory required for data: 314000
I0428 19:35:07.714167 23449 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:07.714174 23449 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:07.714179 23449 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:07.714184 23449 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:07.714190 23449 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:07.714226 23449 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:07.714231 23449 net.cpp:131] Top shape: 100 (100)
I0428 19:35:07.714236 23449 net.cpp:131] Top shape: 100 (100)
I0428 19:35:07.714238 23449 net.cpp:139] Memory required for data: 314800
I0428 19:35:07.714251 23449 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:07.714260 23449 net.cpp:86] Creating Layer conv0
I0428 19:35:07.714263 23449 net.cpp:408] conv0 <- data
I0428 19:35:07.714269 23449 net.cpp:382] conv0 -> conv0
I0428 19:35:07.715970 23449 net.cpp:124] Setting up conv0
I0428 19:35:07.715984 23449 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:07.715988 23449 net.cpp:139] Memory required for data: 11834800
I0428 19:35:07.715997 23449 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:07.716004 23449 net.cpp:86] Creating Layer pool0
I0428 19:35:07.716008 23449 net.cpp:408] pool0 <- conv0
I0428 19:35:07.716013 23449 net.cpp:382] pool0 -> pool0
I0428 19:35:07.716048 23449 net.cpp:124] Setting up pool0
I0428 19:35:07.716053 23449 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:07.716056 23449 net.cpp:139] Memory required for data: 14714800
I0428 19:35:07.716060 23449 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:07.716066 23449 net.cpp:86] Creating Layer ip1
I0428 19:35:07.716070 23449 net.cpp:408] ip1 <- pool0
I0428 19:35:07.716075 23449 net.cpp:382] ip1 -> ip1
I0428 19:35:07.718122 23449 net.cpp:124] Setting up ip1
I0428 19:35:07.718135 23449 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:07.718140 23449 net.cpp:139] Memory required for data: 14724800
I0428 19:35:07.718148 23449 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:07.718158 23449 net.cpp:86] Creating Layer relu1
I0428 19:35:07.718161 23449 net.cpp:408] relu1 <- ip1
I0428 19:35:07.718166 23449 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:07.718367 23449 net.cpp:124] Setting up relu1
I0428 19:35:07.718377 23449 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:07.718381 23449 net.cpp:139] Memory required for data: 14734800
I0428 19:35:07.718385 23449 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:07.718402 23449 net.cpp:86] Creating Layer ip2
I0428 19:35:07.718405 23449 net.cpp:408] ip2 <- ip1
I0428 19:35:07.718411 23449 net.cpp:382] ip2 -> ip2
I0428 19:35:07.718519 23449 net.cpp:124] Setting up ip2
I0428 19:35:07.718528 23449 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:07.718530 23449 net.cpp:139] Memory required for data: 14738800
I0428 19:35:07.718539 23449 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:07.718545 23449 net.cpp:86] Creating Layer relu2
I0428 19:35:07.718549 23449 net.cpp:408] relu2 <- ip2
I0428 19:35:07.718554 23449 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:07.719374 23449 net.cpp:124] Setting up relu2
I0428 19:35:07.719388 23449 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:07.719393 23449 net.cpp:139] Memory required for data: 14742800
I0428 19:35:07.719398 23449 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:07.719405 23449 net.cpp:86] Creating Layer ip3
I0428 19:35:07.719409 23449 net.cpp:408] ip3 <- ip2
I0428 19:35:07.719416 23449 net.cpp:382] ip3 -> ip3
I0428 19:35:07.719553 23449 net.cpp:124] Setting up ip3
I0428 19:35:07.719561 23449 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:07.719564 23449 net.cpp:139] Memory required for data: 14746800
I0428 19:35:07.719570 23449 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:07.719574 23449 net.cpp:86] Creating Layer relu3
I0428 19:35:07.719578 23449 net.cpp:408] relu3 <- ip3
I0428 19:35:07.719583 23449 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:07.719776 23449 net.cpp:124] Setting up relu3
I0428 19:35:07.719786 23449 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:07.719789 23449 net.cpp:139] Memory required for data: 14750800
I0428 19:35:07.719794 23449 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:07.719797 23449 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:07.719801 23449 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:07.719806 23449 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:07.719813 23449 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:07.719848 23449 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:07.719853 23449 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:07.719867 23449 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:07.719871 23449 net.cpp:139] Memory required for data: 14758800
I0428 19:35:07.719873 23449 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:07.719879 23449 net.cpp:86] Creating Layer accuracy
I0428 19:35:07.719890 23449 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:07.719895 23449 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:07.719905 23449 net.cpp:382] accuracy -> accuracy
I0428 19:35:07.719913 23449 net.cpp:124] Setting up accuracy
I0428 19:35:07.719918 23449 net.cpp:131] Top shape: (1)
I0428 19:35:07.719926 23449 net.cpp:139] Memory required for data: 14758804
I0428 19:35:07.719929 23449 layer_factory.hpp:77] Creating layer loss
I0428 19:35:07.719935 23449 net.cpp:86] Creating Layer loss
I0428 19:35:07.719945 23449 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:07.719949 23449 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:07.719954 23449 net.cpp:382] loss -> loss
I0428 19:35:07.719965 23449 layer_factory.hpp:77] Creating layer loss
I0428 19:35:07.720206 23449 net.cpp:124] Setting up loss
I0428 19:35:07.720214 23449 net.cpp:131] Top shape: (1)
I0428 19:35:07.720218 23449 net.cpp:134]     with loss weight 1
I0428 19:35:07.720226 23449 net.cpp:139] Memory required for data: 14758808
I0428 19:35:07.720229 23449 net.cpp:200] loss needs backward computation.
I0428 19:35:07.720233 23449 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:07.720237 23449 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:07.720240 23449 net.cpp:200] relu3 needs backward computation.
I0428 19:35:07.720243 23449 net.cpp:200] ip3 needs backward computation.
I0428 19:35:07.720247 23449 net.cpp:200] relu2 needs backward computation.
I0428 19:35:07.720249 23449 net.cpp:200] ip2 needs backward computation.
I0428 19:35:07.720252 23449 net.cpp:200] relu1 needs backward computation.
I0428 19:35:07.720255 23449 net.cpp:200] ip1 needs backward computation.
I0428 19:35:07.720258 23449 net.cpp:200] pool0 needs backward computation.
I0428 19:35:07.720262 23449 net.cpp:200] conv0 needs backward computation.
I0428 19:35:07.720264 23449 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:07.720268 23449 net.cpp:202] mnist does not need backward computation.
I0428 19:35:07.720271 23449 net.cpp:244] This network produces output accuracy
I0428 19:35:07.720275 23449 net.cpp:244] This network produces output loss
I0428 19:35:07.720286 23449 net.cpp:257] Network initialization done.
I0428 19:35:07.720324 23449 solver.cpp:56] Solver scaffolding done.
I0428 19:35:07.720589 23449 caffe.cpp:248] Starting Optimization
I0428 19:35:07.720597 23449 solver.cpp:273] Solving LeNet
I0428 19:35:07.720600 23449 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:07.721467 23449 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:07.820500 23456 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:07.822747 23449 solver.cpp:398]     Test net output #0: accuracy = 0.0742
I0428 19:35:07.822782 23449 solver.cpp:398]     Test net output #1: loss = 2.31381 (* 1 = 2.31381 loss)
I0428 19:35:07.827121 23449 solver.cpp:219] Iteration 0 (0 iter/s, 0.10649s/100 iters), loss = 2.31684
I0428 19:35:07.827144 23449 solver.cpp:238]     Train net output #0: loss = 2.31684 (* 1 = 2.31684 loss)
I0428 19:35:07.827157 23449 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:07.974602 23449 solver.cpp:219] Iteration 100 (678.23 iter/s, 0.147443s/100 iters), loss = 0.730935
I0428 19:35:07.974628 23449 solver.cpp:238]     Train net output #0: loss = 0.730935 (* 1 = 0.730935 loss)
I0428 19:35:07.974635 23449 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:08.116685 23449 solver.cpp:219] Iteration 200 (704.002 iter/s, 0.142045s/100 iters), loss = 0.304931
I0428 19:35:08.116710 23449 solver.cpp:238]     Train net output #0: loss = 0.304931 (* 1 = 0.304931 loss)
I0428 19:35:08.116717 23449 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:08.257282 23449 solver.cpp:219] Iteration 300 (711.449 iter/s, 0.140558s/100 iters), loss = 0.327831
I0428 19:35:08.257320 23449 solver.cpp:238]     Train net output #0: loss = 0.327831 (* 1 = 0.327831 loss)
I0428 19:35:08.257328 23449 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:08.398432 23449 solver.cpp:219] Iteration 400 (708.713 iter/s, 0.141101s/100 iters), loss = 0.129745
I0428 19:35:08.398458 23449 solver.cpp:238]     Train net output #0: loss = 0.129745 (* 1 = 0.129745 loss)
I0428 19:35:08.398465 23449 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:08.542176 23449 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:08.637599 23456 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:08.640095 23449 solver.cpp:398]     Test net output #0: accuracy = 0.9454
I0428 19:35:08.640131 23449 solver.cpp:398]     Test net output #1: loss = 0.17645 (* 1 = 0.17645 loss)
I0428 19:35:08.641501 23449 solver.cpp:219] Iteration 500 (411.479 iter/s, 0.243026s/100 iters), loss = 0.261491
I0428 19:35:08.641526 23449 solver.cpp:238]     Train net output #0: loss = 0.261491 (* 1 = 0.261491 loss)
I0428 19:35:08.641535 23449 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:08.788239 23449 solver.cpp:219] Iteration 600 (681.668 iter/s, 0.146699s/100 iters), loss = 0.112724
I0428 19:35:08.788269 23449 solver.cpp:238]     Train net output #0: loss = 0.112724 (* 1 = 0.112724 loss)
I0428 19:35:08.788277 23449 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:08.933646 23449 solver.cpp:219] Iteration 700 (687.919 iter/s, 0.145366s/100 iters), loss = 0.295788
I0428 19:35:08.933687 23449 solver.cpp:238]     Train net output #0: loss = 0.295788 (* 1 = 0.295788 loss)
I0428 19:35:08.933696 23449 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:09.079128 23449 solver.cpp:219] Iteration 800 (687.575 iter/s, 0.145439s/100 iters), loss = 0.22722
I0428 19:35:09.079180 23449 solver.cpp:238]     Train net output #0: loss = 0.22722 (* 1 = 0.22722 loss)
I0428 19:35:09.079200 23449 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:09.225440 23449 solver.cpp:219] Iteration 900 (683.733 iter/s, 0.146256s/100 iters), loss = 0.211833
I0428 19:35:09.225481 23449 solver.cpp:238]     Train net output #0: loss = 0.211833 (* 1 = 0.211833 loss)
I0428 19:35:09.225497 23449 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:09.272915 23455 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:09.367560 23449 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:09.372398 23449 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:09.374862 23449 solver.cpp:311] Iteration 1000, loss = 0.18727
I0428 19:35:09.374886 23449 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:09.472617 23456 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:09.475178 23449 solver.cpp:398]     Test net output #0: accuracy = 0.9639
I0428 19:35:09.475205 23449 solver.cpp:398]     Test net output #1: loss = 0.115325 (* 1 = 0.115325 loss)
I0428 19:35:09.475217 23449 solver.cpp:316] Optimization Done.
I0428 19:35:09.475227 23449 caffe.cpp:259] Optimization Done.
