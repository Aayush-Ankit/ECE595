I0428 20:19:19.455721  1337 caffe.cpp:218] Using GPUs 0
I0428 20:19:19.493501  1337 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:20.005410  1337 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1339.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:20.005551  1337 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1339.prototxt
I0428 20:19:20.005969  1337 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:20.005987  1337 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:20.006091  1337 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:20.006170  1337 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:20.006268  1337 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:20.006291  1337 net.cpp:86] Creating Layer mnist
I0428 20:19:20.006300  1337 net.cpp:382] mnist -> data
I0428 20:19:20.006322  1337 net.cpp:382] mnist -> label
I0428 20:19:20.007414  1337 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:20.009876  1337 net.cpp:124] Setting up mnist
I0428 20:19:20.009894  1337 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:20.009901  1337 net.cpp:131] Top shape: 64 (64)
I0428 20:19:20.009904  1337 net.cpp:139] Memory required for data: 200960
I0428 20:19:20.009910  1337 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:20.009929  1337 net.cpp:86] Creating Layer conv0
I0428 20:19:20.009949  1337 net.cpp:408] conv0 <- data
I0428 20:19:20.009963  1337 net.cpp:382] conv0 -> conv0
I0428 20:19:20.299371  1337 net.cpp:124] Setting up conv0
I0428 20:19:20.299398  1337 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:20.299402  1337 net.cpp:139] Memory required for data: 7573760
I0428 20:19:20.299417  1337 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:20.299430  1337 net.cpp:86] Creating Layer pool0
I0428 20:19:20.299435  1337 net.cpp:408] pool0 <- conv0
I0428 20:19:20.299441  1337 net.cpp:382] pool0 -> pool0
I0428 20:19:20.299489  1337 net.cpp:124] Setting up pool0
I0428 20:19:20.299495  1337 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:20.299499  1337 net.cpp:139] Memory required for data: 9416960
I0428 20:19:20.299501  1337 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:20.299512  1337 net.cpp:86] Creating Layer conv1
I0428 20:19:20.299515  1337 net.cpp:408] conv1 <- pool0
I0428 20:19:20.299520  1337 net.cpp:382] conv1 -> conv1
I0428 20:19:20.301545  1337 net.cpp:124] Setting up conv1
I0428 20:19:20.301560  1337 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:20.301564  1337 net.cpp:139] Memory required for data: 9826560
I0428 20:19:20.301573  1337 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:20.301580  1337 net.cpp:86] Creating Layer pool1
I0428 20:19:20.301584  1337 net.cpp:408] pool1 <- conv1
I0428 20:19:20.301589  1337 net.cpp:382] pool1 -> pool1
I0428 20:19:20.301627  1337 net.cpp:124] Setting up pool1
I0428 20:19:20.301632  1337 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:20.301635  1337 net.cpp:139] Memory required for data: 9928960
I0428 20:19:20.301638  1337 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:20.301645  1337 net.cpp:86] Creating Layer ip1
I0428 20:19:20.301648  1337 net.cpp:408] ip1 <- pool1
I0428 20:19:20.301653  1337 net.cpp:382] ip1 -> ip1
I0428 20:19:20.301775  1337 net.cpp:124] Setting up ip1
I0428 20:19:20.301782  1337 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:20.301786  1337 net.cpp:139] Memory required for data: 9931520
I0428 20:19:20.301793  1337 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:20.301798  1337 net.cpp:86] Creating Layer relu1
I0428 20:19:20.301802  1337 net.cpp:408] relu1 <- ip1
I0428 20:19:20.301806  1337 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:20.301972  1337 net.cpp:124] Setting up relu1
I0428 20:19:20.301981  1337 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:20.301985  1337 net.cpp:139] Memory required for data: 9934080
I0428 20:19:20.301987  1337 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:20.301993  1337 net.cpp:86] Creating Layer ip2
I0428 20:19:20.301997  1337 net.cpp:408] ip2 <- ip1
I0428 20:19:20.302002  1337 net.cpp:382] ip2 -> ip2
I0428 20:19:20.302096  1337 net.cpp:124] Setting up ip2
I0428 20:19:20.302103  1337 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:20.302106  1337 net.cpp:139] Memory required for data: 9936640
I0428 20:19:20.302111  1337 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:20.302119  1337 net.cpp:86] Creating Layer relu2
I0428 20:19:20.302121  1337 net.cpp:408] relu2 <- ip2
I0428 20:19:20.302125  1337 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:20.302969  1337 net.cpp:124] Setting up relu2
I0428 20:19:20.302983  1337 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:20.302985  1337 net.cpp:139] Memory required for data: 9939200
I0428 20:19:20.302989  1337 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:20.302996  1337 net.cpp:86] Creating Layer ip3
I0428 20:19:20.302999  1337 net.cpp:408] ip3 <- ip2
I0428 20:19:20.303005  1337 net.cpp:382] ip3 -> ip3
I0428 20:19:20.303102  1337 net.cpp:124] Setting up ip3
I0428 20:19:20.303109  1337 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:20.303112  1337 net.cpp:139] Memory required for data: 9941760
I0428 20:19:20.303120  1337 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:20.303127  1337 net.cpp:86] Creating Layer relu3
I0428 20:19:20.303129  1337 net.cpp:408] relu3 <- ip3
I0428 20:19:20.303133  1337 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:20.303298  1337 net.cpp:124] Setting up relu3
I0428 20:19:20.303308  1337 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:20.303311  1337 net.cpp:139] Memory required for data: 9944320
I0428 20:19:20.303314  1337 layer_factory.hpp:77] Creating layer loss
I0428 20:19:20.303325  1337 net.cpp:86] Creating Layer loss
I0428 20:19:20.303328  1337 net.cpp:408] loss <- ip3
I0428 20:19:20.303333  1337 net.cpp:408] loss <- label
I0428 20:19:20.303338  1337 net.cpp:382] loss -> loss
I0428 20:19:20.303351  1337 layer_factory.hpp:77] Creating layer loss
I0428 20:19:20.303572  1337 net.cpp:124] Setting up loss
I0428 20:19:20.303582  1337 net.cpp:131] Top shape: (1)
I0428 20:19:20.303586  1337 net.cpp:134]     with loss weight 1
I0428 20:19:20.303599  1337 net.cpp:139] Memory required for data: 9944324
I0428 20:19:20.303603  1337 net.cpp:200] loss needs backward computation.
I0428 20:19:20.303607  1337 net.cpp:200] relu3 needs backward computation.
I0428 20:19:20.303611  1337 net.cpp:200] ip3 needs backward computation.
I0428 20:19:20.303613  1337 net.cpp:200] relu2 needs backward computation.
I0428 20:19:20.303617  1337 net.cpp:200] ip2 needs backward computation.
I0428 20:19:20.303619  1337 net.cpp:200] relu1 needs backward computation.
I0428 20:19:20.303622  1337 net.cpp:200] ip1 needs backward computation.
I0428 20:19:20.303625  1337 net.cpp:200] pool1 needs backward computation.
I0428 20:19:20.303628  1337 net.cpp:200] conv1 needs backward computation.
I0428 20:19:20.303632  1337 net.cpp:200] pool0 needs backward computation.
I0428 20:19:20.303634  1337 net.cpp:200] conv0 needs backward computation.
I0428 20:19:20.303637  1337 net.cpp:202] mnist does not need backward computation.
I0428 20:19:20.303640  1337 net.cpp:244] This network produces output loss
I0428 20:19:20.303649  1337 net.cpp:257] Network initialization done.
I0428 20:19:20.303972  1337 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1339.prototxt
I0428 20:19:20.303999  1337 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:20.304090  1337 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:20.304170  1337 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:20.304214  1337 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:20.304227  1337 net.cpp:86] Creating Layer mnist
I0428 20:19:20.304232  1337 net.cpp:382] mnist -> data
I0428 20:19:20.304240  1337 net.cpp:382] mnist -> label
I0428 20:19:20.304325  1337 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:20.306277  1337 net.cpp:124] Setting up mnist
I0428 20:19:20.306291  1337 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:20.306296  1337 net.cpp:131] Top shape: 100 (100)
I0428 20:19:20.306300  1337 net.cpp:139] Memory required for data: 314000
I0428 20:19:20.306303  1337 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:20.306310  1337 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:20.306313  1337 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:20.306318  1337 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:20.306325  1337 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:20.306375  1337 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:20.306380  1337 net.cpp:131] Top shape: 100 (100)
I0428 20:19:20.306385  1337 net.cpp:131] Top shape: 100 (100)
I0428 20:19:20.306387  1337 net.cpp:139] Memory required for data: 314800
I0428 20:19:20.306391  1337 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:20.306398  1337 net.cpp:86] Creating Layer conv0
I0428 20:19:20.306401  1337 net.cpp:408] conv0 <- data
I0428 20:19:20.306406  1337 net.cpp:382] conv0 -> conv0
I0428 20:19:20.308001  1337 net.cpp:124] Setting up conv0
I0428 20:19:20.308015  1337 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:20.308018  1337 net.cpp:139] Memory required for data: 11834800
I0428 20:19:20.308028  1337 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:20.308034  1337 net.cpp:86] Creating Layer pool0
I0428 20:19:20.308037  1337 net.cpp:408] pool0 <- conv0
I0428 20:19:20.308043  1337 net.cpp:382] pool0 -> pool0
I0428 20:19:20.308079  1337 net.cpp:124] Setting up pool0
I0428 20:19:20.308084  1337 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:20.308087  1337 net.cpp:139] Memory required for data: 14714800
I0428 20:19:20.308090  1337 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:20.308099  1337 net.cpp:86] Creating Layer conv1
I0428 20:19:20.308102  1337 net.cpp:408] conv1 <- pool0
I0428 20:19:20.308107  1337 net.cpp:382] conv1 -> conv1
I0428 20:19:20.309836  1337 net.cpp:124] Setting up conv1
I0428 20:19:20.309862  1337 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:20.309866  1337 net.cpp:139] Memory required for data: 15354800
I0428 20:19:20.309876  1337 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:20.309900  1337 net.cpp:86] Creating Layer pool1
I0428 20:19:20.309904  1337 net.cpp:408] pool1 <- conv1
I0428 20:19:20.309911  1337 net.cpp:382] pool1 -> pool1
I0428 20:19:20.309949  1337 net.cpp:124] Setting up pool1
I0428 20:19:20.309957  1337 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:20.309962  1337 net.cpp:139] Memory required for data: 15514800
I0428 20:19:20.309965  1337 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:20.309973  1337 net.cpp:86] Creating Layer ip1
I0428 20:19:20.309976  1337 net.cpp:408] ip1 <- pool1
I0428 20:19:20.309981  1337 net.cpp:382] ip1 -> ip1
I0428 20:19:20.310111  1337 net.cpp:124] Setting up ip1
I0428 20:19:20.310119  1337 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:20.310133  1337 net.cpp:139] Memory required for data: 15518800
I0428 20:19:20.310142  1337 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:20.310148  1337 net.cpp:86] Creating Layer relu1
I0428 20:19:20.310151  1337 net.cpp:408] relu1 <- ip1
I0428 20:19:20.310156  1337 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:20.310405  1337 net.cpp:124] Setting up relu1
I0428 20:19:20.310413  1337 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:20.310416  1337 net.cpp:139] Memory required for data: 15522800
I0428 20:19:20.310420  1337 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:20.310427  1337 net.cpp:86] Creating Layer ip2
I0428 20:19:20.310431  1337 net.cpp:408] ip2 <- ip1
I0428 20:19:20.310436  1337 net.cpp:382] ip2 -> ip2
I0428 20:19:20.310539  1337 net.cpp:124] Setting up ip2
I0428 20:19:20.310546  1337 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:20.310550  1337 net.cpp:139] Memory required for data: 15526800
I0428 20:19:20.310555  1337 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:20.310560  1337 net.cpp:86] Creating Layer relu2
I0428 20:19:20.310564  1337 net.cpp:408] relu2 <- ip2
I0428 20:19:20.310567  1337 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:20.310725  1337 net.cpp:124] Setting up relu2
I0428 20:19:20.310734  1337 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:20.310755  1337 net.cpp:139] Memory required for data: 15530800
I0428 20:19:20.310758  1337 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:20.310763  1337 net.cpp:86] Creating Layer ip3
I0428 20:19:20.310767  1337 net.cpp:408] ip3 <- ip2
I0428 20:19:20.310773  1337 net.cpp:382] ip3 -> ip3
I0428 20:19:20.310962  1337 net.cpp:124] Setting up ip3
I0428 20:19:20.310969  1337 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:20.310974  1337 net.cpp:139] Memory required for data: 15534800
I0428 20:19:20.310982  1337 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:20.310987  1337 net.cpp:86] Creating Layer relu3
I0428 20:19:20.310992  1337 net.cpp:408] relu3 <- ip3
I0428 20:19:20.310997  1337 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:20.311830  1337 net.cpp:124] Setting up relu3
I0428 20:19:20.311841  1337 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:20.311846  1337 net.cpp:139] Memory required for data: 15538800
I0428 20:19:20.311848  1337 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:20.311861  1337 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:20.311863  1337 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:20.311868  1337 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:20.311874  1337 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:20.311911  1337 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:20.311916  1337 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:20.311920  1337 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:20.311923  1337 net.cpp:139] Memory required for data: 15546800
I0428 20:19:20.311925  1337 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:20.311930  1337 net.cpp:86] Creating Layer accuracy
I0428 20:19:20.311933  1337 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:20.311938  1337 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:20.311942  1337 net.cpp:382] accuracy -> accuracy
I0428 20:19:20.311954  1337 net.cpp:124] Setting up accuracy
I0428 20:19:20.311959  1337 net.cpp:131] Top shape: (1)
I0428 20:19:20.311960  1337 net.cpp:139] Memory required for data: 15546804
I0428 20:19:20.311964  1337 layer_factory.hpp:77] Creating layer loss
I0428 20:19:20.311967  1337 net.cpp:86] Creating Layer loss
I0428 20:19:20.311971  1337 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:20.311975  1337 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:20.311978  1337 net.cpp:382] loss -> loss
I0428 20:19:20.311985  1337 layer_factory.hpp:77] Creating layer loss
I0428 20:19:20.312225  1337 net.cpp:124] Setting up loss
I0428 20:19:20.312234  1337 net.cpp:131] Top shape: (1)
I0428 20:19:20.312238  1337 net.cpp:134]     with loss weight 1
I0428 20:19:20.312280  1337 net.cpp:139] Memory required for data: 15546808
I0428 20:19:20.312284  1337 net.cpp:200] loss needs backward computation.
I0428 20:19:20.312288  1337 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:20.312292  1337 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:20.312296  1337 net.cpp:200] relu3 needs backward computation.
I0428 20:19:20.312299  1337 net.cpp:200] ip3 needs backward computation.
I0428 20:19:20.312302  1337 net.cpp:200] relu2 needs backward computation.
I0428 20:19:20.312305  1337 net.cpp:200] ip2 needs backward computation.
I0428 20:19:20.312309  1337 net.cpp:200] relu1 needs backward computation.
I0428 20:19:20.312311  1337 net.cpp:200] ip1 needs backward computation.
I0428 20:19:20.312314  1337 net.cpp:200] pool1 needs backward computation.
I0428 20:19:20.312317  1337 net.cpp:200] conv1 needs backward computation.
I0428 20:19:20.312321  1337 net.cpp:200] pool0 needs backward computation.
I0428 20:19:20.312325  1337 net.cpp:200] conv0 needs backward computation.
I0428 20:19:20.312328  1337 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:20.312332  1337 net.cpp:202] mnist does not need backward computation.
I0428 20:19:20.312335  1337 net.cpp:244] This network produces output accuracy
I0428 20:19:20.312338  1337 net.cpp:244] This network produces output loss
I0428 20:19:20.312350  1337 net.cpp:257] Network initialization done.
I0428 20:19:20.312392  1337 solver.cpp:56] Solver scaffolding done.
I0428 20:19:20.312739  1337 caffe.cpp:248] Starting Optimization
I0428 20:19:20.312746  1337 solver.cpp:273] Solving LeNet
I0428 20:19:20.312748  1337 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:20.312947  1337 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:20.382239  1346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:20.384642  1337 solver.cpp:398]     Test net output #0: accuracy = 0.101
I0428 20:19:20.384677  1337 solver.cpp:398]     Test net output #1: loss = 2.30428 (* 1 = 2.30428 loss)
I0428 20:19:20.388743  1337 solver.cpp:219] Iteration 0 (0 iter/s, 0.0759605s/100 iters), loss = 2.30603
I0428 20:19:20.388782  1337 solver.cpp:238]     Train net output #0: loss = 2.30603 (* 1 = 2.30603 loss)
I0428 20:19:20.388792  1337 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:20.522413  1337 solver.cpp:219] Iteration 100 (748.312 iter/s, 0.133634s/100 iters), loss = 1.64761
I0428 20:19:20.522438  1337 solver.cpp:238]     Train net output #0: loss = 1.64761 (* 1 = 1.64761 loss)
I0428 20:19:20.522444  1337 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:20.654402  1337 solver.cpp:219] Iteration 200 (757.842 iter/s, 0.131954s/100 iters), loss = 1.48996
I0428 20:19:20.654443  1337 solver.cpp:238]     Train net output #0: loss = 1.48996 (* 1 = 1.48996 loss)
I0428 20:19:20.654449  1337 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:20.802640  1337 solver.cpp:219] Iteration 300 (674.766 iter/s, 0.148199s/100 iters), loss = 1.02205
I0428 20:19:20.802671  1337 solver.cpp:238]     Train net output #0: loss = 1.02205 (* 1 = 1.02205 loss)
I0428 20:19:20.802680  1337 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:20.946399  1337 solver.cpp:219] Iteration 400 (695.82 iter/s, 0.143715s/100 iters), loss = 1.11386
I0428 20:19:20.946444  1337 solver.cpp:238]     Train net output #0: loss = 1.11386 (* 1 = 1.11386 loss)
I0428 20:19:20.946451  1337 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:21.089464  1337 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:21.160102  1346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:21.162582  1337 solver.cpp:398]     Test net output #0: accuracy = 0.5786
I0428 20:19:21.162606  1337 solver.cpp:398]     Test net output #1: loss = 1.06091 (* 1 = 1.06091 loss)
I0428 20:19:21.163907  1337 solver.cpp:219] Iteration 500 (459.857 iter/s, 0.217459s/100 iters), loss = 1.3222
I0428 20:19:21.163931  1337 solver.cpp:238]     Train net output #0: loss = 1.3222 (* 1 = 1.3222 loss)
I0428 20:19:21.163954  1337 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:21.310585  1337 solver.cpp:219] Iteration 600 (681.948 iter/s, 0.146639s/100 iters), loss = 0.882216
I0428 20:19:21.310636  1337 solver.cpp:238]     Train net output #0: loss = 0.882216 (* 1 = 0.882216 loss)
I0428 20:19:21.310645  1337 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:21.458616  1337 solver.cpp:219] Iteration 700 (675.779 iter/s, 0.147977s/100 iters), loss = 0.967577
I0428 20:19:21.458654  1337 solver.cpp:238]     Train net output #0: loss = 0.967577 (* 1 = 0.967577 loss)
I0428 20:19:21.458662  1337 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:21.602475  1337 solver.cpp:219] Iteration 800 (695.339 iter/s, 0.143815s/100 iters), loss = 1.01445
I0428 20:19:21.602521  1337 solver.cpp:238]     Train net output #0: loss = 1.01445 (* 1 = 1.01445 loss)
I0428 20:19:21.602530  1337 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:21.745898  1337 solver.cpp:219] Iteration 900 (697.525 iter/s, 0.143364s/100 iters), loss = 0.922469
I0428 20:19:21.745942  1337 solver.cpp:238]     Train net output #0: loss = 0.922469 (* 1 = 0.922469 loss)
I0428 20:19:21.745951  1337 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:21.794631  1345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:21.891203  1337 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:21.892928  1337 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:21.894057  1337 solver.cpp:311] Iteration 1000, loss = 0.92984
I0428 20:19:21.894089  1337 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:21.965204  1346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:21.967680  1337 solver.cpp:398]     Test net output #0: accuracy = 0.5861
I0428 20:19:21.967702  1337 solver.cpp:398]     Test net output #1: loss = 1.00086 (* 1 = 1.00086 loss)
I0428 20:19:21.967718  1337 solver.cpp:316] Optimization Done.
I0428 20:19:21.967722  1337 caffe.cpp:259] Optimization Done.
