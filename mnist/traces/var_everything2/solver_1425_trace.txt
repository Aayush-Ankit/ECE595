I0428 20:23:40.549876  2272 caffe.cpp:218] Using GPUs 0
I0428 20:23:40.586149  2272 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:41.099588  2272 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1425.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:41.099725  2272 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1425.prototxt
I0428 20:23:41.100142  2272 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:41.100162  2272 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:41.100263  2272 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:41.100343  2272 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:41.100445  2272 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:41.100469  2272 net.cpp:86] Creating Layer mnist
I0428 20:23:41.100477  2272 net.cpp:382] mnist -> data
I0428 20:23:41.100502  2272 net.cpp:382] mnist -> label
I0428 20:23:41.101619  2272 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:41.104055  2272 net.cpp:124] Setting up mnist
I0428 20:23:41.104087  2272 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:41.104094  2272 net.cpp:131] Top shape: 64 (64)
I0428 20:23:41.104099  2272 net.cpp:139] Memory required for data: 200960
I0428 20:23:41.104105  2272 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:41.104122  2272 net.cpp:86] Creating Layer conv0
I0428 20:23:41.104142  2272 net.cpp:408] conv0 <- data
I0428 20:23:41.104154  2272 net.cpp:382] conv0 -> conv0
I0428 20:23:41.378615  2272 net.cpp:124] Setting up conv0
I0428 20:23:41.378643  2272 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:41.378646  2272 net.cpp:139] Memory required for data: 7573760
I0428 20:23:41.378659  2272 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:41.378674  2272 net.cpp:86] Creating Layer pool0
I0428 20:23:41.378677  2272 net.cpp:408] pool0 <- conv0
I0428 20:23:41.378682  2272 net.cpp:382] pool0 -> pool0
I0428 20:23:41.378744  2272 net.cpp:124] Setting up pool0
I0428 20:23:41.378749  2272 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:41.378752  2272 net.cpp:139] Memory required for data: 9416960
I0428 20:23:41.378754  2272 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:41.378767  2272 net.cpp:86] Creating Layer conv1
I0428 20:23:41.378770  2272 net.cpp:408] conv1 <- pool0
I0428 20:23:41.378777  2272 net.cpp:382] conv1 -> conv1
I0428 20:23:41.382197  2272 net.cpp:124] Setting up conv1
I0428 20:23:41.382228  2272 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:41.382232  2272 net.cpp:139] Memory required for data: 11055360
I0428 20:23:41.382241  2272 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:41.382248  2272 net.cpp:86] Creating Layer pool1
I0428 20:23:41.382252  2272 net.cpp:408] pool1 <- conv1
I0428 20:23:41.382257  2272 net.cpp:382] pool1 -> pool1
I0428 20:23:41.382308  2272 net.cpp:124] Setting up pool1
I0428 20:23:41.382315  2272 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:41.382318  2272 net.cpp:139] Memory required for data: 11464960
I0428 20:23:41.382321  2272 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:41.382328  2272 net.cpp:86] Creating Layer ip1
I0428 20:23:41.382330  2272 net.cpp:408] ip1 <- pool1
I0428 20:23:41.382336  2272 net.cpp:382] ip1 -> ip1
I0428 20:23:41.382689  2272 net.cpp:124] Setting up ip1
I0428 20:23:41.382697  2272 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:41.382714  2272 net.cpp:139] Memory required for data: 11471360
I0428 20:23:41.382721  2272 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:41.382727  2272 net.cpp:86] Creating Layer relu1
I0428 20:23:41.382732  2272 net.cpp:408] relu1 <- ip1
I0428 20:23:41.382736  2272 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:41.382894  2272 net.cpp:124] Setting up relu1
I0428 20:23:41.382903  2272 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:41.382906  2272 net.cpp:139] Memory required for data: 11477760
I0428 20:23:41.382908  2272 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:41.382915  2272 net.cpp:86] Creating Layer ip2
I0428 20:23:41.382917  2272 net.cpp:408] ip2 <- ip1
I0428 20:23:41.382925  2272 net.cpp:382] ip2 -> ip2
I0428 20:23:41.383015  2272 net.cpp:124] Setting up ip2
I0428 20:23:41.383021  2272 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:41.383024  2272 net.cpp:139] Memory required for data: 11480320
I0428 20:23:41.383029  2272 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:41.383038  2272 net.cpp:86] Creating Layer relu2
I0428 20:23:41.383040  2272 net.cpp:408] relu2 <- ip2
I0428 20:23:41.383044  2272 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:41.383841  2272 net.cpp:124] Setting up relu2
I0428 20:23:41.383853  2272 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:41.383857  2272 net.cpp:139] Memory required for data: 11482880
I0428 20:23:41.383859  2272 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:41.383867  2272 net.cpp:86] Creating Layer ip3
I0428 20:23:41.383869  2272 net.cpp:408] ip3 <- ip2
I0428 20:23:41.383875  2272 net.cpp:382] ip3 -> ip3
I0428 20:23:41.383986  2272 net.cpp:124] Setting up ip3
I0428 20:23:41.383993  2272 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:41.383996  2272 net.cpp:139] Memory required for data: 11485440
I0428 20:23:41.384004  2272 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:41.384009  2272 net.cpp:86] Creating Layer relu3
I0428 20:23:41.384011  2272 net.cpp:408] relu3 <- ip3
I0428 20:23:41.384016  2272 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:41.384186  2272 net.cpp:124] Setting up relu3
I0428 20:23:41.384194  2272 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:41.384197  2272 net.cpp:139] Memory required for data: 11488000
I0428 20:23:41.384201  2272 layer_factory.hpp:77] Creating layer loss
I0428 20:23:41.384207  2272 net.cpp:86] Creating Layer loss
I0428 20:23:41.384210  2272 net.cpp:408] loss <- ip3
I0428 20:23:41.384214  2272 net.cpp:408] loss <- label
I0428 20:23:41.384219  2272 net.cpp:382] loss -> loss
I0428 20:23:41.384232  2272 layer_factory.hpp:77] Creating layer loss
I0428 20:23:41.384464  2272 net.cpp:124] Setting up loss
I0428 20:23:41.384472  2272 net.cpp:131] Top shape: (1)
I0428 20:23:41.384475  2272 net.cpp:134]     with loss weight 1
I0428 20:23:41.384490  2272 net.cpp:139] Memory required for data: 11488004
I0428 20:23:41.384492  2272 net.cpp:200] loss needs backward computation.
I0428 20:23:41.384496  2272 net.cpp:200] relu3 needs backward computation.
I0428 20:23:41.384500  2272 net.cpp:200] ip3 needs backward computation.
I0428 20:23:41.384502  2272 net.cpp:200] relu2 needs backward computation.
I0428 20:23:41.384505  2272 net.cpp:200] ip2 needs backward computation.
I0428 20:23:41.384507  2272 net.cpp:200] relu1 needs backward computation.
I0428 20:23:41.384510  2272 net.cpp:200] ip1 needs backward computation.
I0428 20:23:41.384513  2272 net.cpp:200] pool1 needs backward computation.
I0428 20:23:41.384516  2272 net.cpp:200] conv1 needs backward computation.
I0428 20:23:41.384519  2272 net.cpp:200] pool0 needs backward computation.
I0428 20:23:41.384522  2272 net.cpp:200] conv0 needs backward computation.
I0428 20:23:41.384526  2272 net.cpp:202] mnist does not need backward computation.
I0428 20:23:41.384528  2272 net.cpp:244] This network produces output loss
I0428 20:23:41.384539  2272 net.cpp:257] Network initialization done.
I0428 20:23:41.384943  2272 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1425.prototxt
I0428 20:23:41.384999  2272 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:41.385098  2272 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:41.385210  2272 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:41.385252  2272 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:41.385265  2272 net.cpp:86] Creating Layer mnist
I0428 20:23:41.385270  2272 net.cpp:382] mnist -> data
I0428 20:23:41.385278  2272 net.cpp:382] mnist -> label
I0428 20:23:41.385386  2272 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:41.386700  2272 net.cpp:124] Setting up mnist
I0428 20:23:41.386714  2272 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:41.386719  2272 net.cpp:131] Top shape: 100 (100)
I0428 20:23:41.386723  2272 net.cpp:139] Memory required for data: 314000
I0428 20:23:41.386725  2272 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:41.386732  2272 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:41.386735  2272 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:41.386740  2272 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:41.386746  2272 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:41.386793  2272 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:41.386798  2272 net.cpp:131] Top shape: 100 (100)
I0428 20:23:41.386802  2272 net.cpp:131] Top shape: 100 (100)
I0428 20:23:41.386804  2272 net.cpp:139] Memory required for data: 314800
I0428 20:23:41.386807  2272 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:41.386816  2272 net.cpp:86] Creating Layer conv0
I0428 20:23:41.386819  2272 net.cpp:408] conv0 <- data
I0428 20:23:41.386826  2272 net.cpp:382] conv0 -> conv0
I0428 20:23:41.388628  2272 net.cpp:124] Setting up conv0
I0428 20:23:41.388641  2272 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:41.388645  2272 net.cpp:139] Memory required for data: 11834800
I0428 20:23:41.388653  2272 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:41.388676  2272 net.cpp:86] Creating Layer pool0
I0428 20:23:41.388679  2272 net.cpp:408] pool0 <- conv0
I0428 20:23:41.388685  2272 net.cpp:382] pool0 -> pool0
I0428 20:23:41.388720  2272 net.cpp:124] Setting up pool0
I0428 20:23:41.388725  2272 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:41.388727  2272 net.cpp:139] Memory required for data: 14714800
I0428 20:23:41.388730  2272 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:41.388738  2272 net.cpp:86] Creating Layer conv1
I0428 20:23:41.388741  2272 net.cpp:408] conv1 <- pool0
I0428 20:23:41.388746  2272 net.cpp:382] conv1 -> conv1
I0428 20:23:41.392096  2272 net.cpp:124] Setting up conv1
I0428 20:23:41.392112  2272 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:41.392132  2272 net.cpp:139] Memory required for data: 17274800
I0428 20:23:41.392141  2272 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:41.392163  2272 net.cpp:86] Creating Layer pool1
I0428 20:23:41.392165  2272 net.cpp:408] pool1 <- conv1
I0428 20:23:41.392170  2272 net.cpp:382] pool1 -> pool1
I0428 20:23:41.392207  2272 net.cpp:124] Setting up pool1
I0428 20:23:41.392212  2272 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:41.392215  2272 net.cpp:139] Memory required for data: 17914800
I0428 20:23:41.392217  2272 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:41.392223  2272 net.cpp:86] Creating Layer ip1
I0428 20:23:41.392232  2272 net.cpp:408] ip1 <- pool1
I0428 20:23:41.392238  2272 net.cpp:382] ip1 -> ip1
I0428 20:23:41.392583  2272 net.cpp:124] Setting up ip1
I0428 20:23:41.392601  2272 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:41.392604  2272 net.cpp:139] Memory required for data: 17924800
I0428 20:23:41.392619  2272 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:41.392626  2272 net.cpp:86] Creating Layer relu1
I0428 20:23:41.392628  2272 net.cpp:408] relu1 <- ip1
I0428 20:23:41.392633  2272 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:41.392789  2272 net.cpp:124] Setting up relu1
I0428 20:23:41.392797  2272 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:41.392802  2272 net.cpp:139] Memory required for data: 17934800
I0428 20:23:41.392803  2272 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:41.392817  2272 net.cpp:86] Creating Layer ip2
I0428 20:23:41.392843  2272 net.cpp:408] ip2 <- ip1
I0428 20:23:41.392848  2272 net.cpp:382] ip2 -> ip2
I0428 20:23:41.392966  2272 net.cpp:124] Setting up ip2
I0428 20:23:41.392973  2272 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:41.392976  2272 net.cpp:139] Memory required for data: 17938800
I0428 20:23:41.392982  2272 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:41.392987  2272 net.cpp:86] Creating Layer relu2
I0428 20:23:41.392992  2272 net.cpp:408] relu2 <- ip2
I0428 20:23:41.392997  2272 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:41.393189  2272 net.cpp:124] Setting up relu2
I0428 20:23:41.393198  2272 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:41.393200  2272 net.cpp:139] Memory required for data: 17942800
I0428 20:23:41.393203  2272 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:41.393210  2272 net.cpp:86] Creating Layer ip3
I0428 20:23:41.393213  2272 net.cpp:408] ip3 <- ip2
I0428 20:23:41.393234  2272 net.cpp:382] ip3 -> ip3
I0428 20:23:41.393347  2272 net.cpp:124] Setting up ip3
I0428 20:23:41.393357  2272 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:41.393359  2272 net.cpp:139] Memory required for data: 17946800
I0428 20:23:41.393368  2272 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:41.393373  2272 net.cpp:86] Creating Layer relu3
I0428 20:23:41.393375  2272 net.cpp:408] relu3 <- ip3
I0428 20:23:41.393379  2272 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:41.394229  2272 net.cpp:124] Setting up relu3
I0428 20:23:41.394244  2272 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:41.394253  2272 net.cpp:139] Memory required for data: 17950800
I0428 20:23:41.394256  2272 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:41.394263  2272 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:41.394268  2272 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:41.394280  2272 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:41.394286  2272 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:41.394341  2272 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:41.394358  2272 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:41.394368  2272 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:41.394371  2272 net.cpp:139] Memory required for data: 17958800
I0428 20:23:41.394374  2272 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:41.394381  2272 net.cpp:86] Creating Layer accuracy
I0428 20:23:41.394383  2272 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:41.394388  2272 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:41.394392  2272 net.cpp:382] accuracy -> accuracy
I0428 20:23:41.394399  2272 net.cpp:124] Setting up accuracy
I0428 20:23:41.394402  2272 net.cpp:131] Top shape: (1)
I0428 20:23:41.394405  2272 net.cpp:139] Memory required for data: 17958804
I0428 20:23:41.394408  2272 layer_factory.hpp:77] Creating layer loss
I0428 20:23:41.394420  2272 net.cpp:86] Creating Layer loss
I0428 20:23:41.394423  2272 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:41.394428  2272 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:41.394431  2272 net.cpp:382] loss -> loss
I0428 20:23:41.394443  2272 layer_factory.hpp:77] Creating layer loss
I0428 20:23:41.394716  2272 net.cpp:124] Setting up loss
I0428 20:23:41.394726  2272 net.cpp:131] Top shape: (1)
I0428 20:23:41.394736  2272 net.cpp:134]     with loss weight 1
I0428 20:23:41.394752  2272 net.cpp:139] Memory required for data: 17958808
I0428 20:23:41.394757  2272 net.cpp:200] loss needs backward computation.
I0428 20:23:41.394759  2272 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:41.394763  2272 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:41.394767  2272 net.cpp:200] relu3 needs backward computation.
I0428 20:23:41.394769  2272 net.cpp:200] ip3 needs backward computation.
I0428 20:23:41.394773  2272 net.cpp:200] relu2 needs backward computation.
I0428 20:23:41.394775  2272 net.cpp:200] ip2 needs backward computation.
I0428 20:23:41.394778  2272 net.cpp:200] relu1 needs backward computation.
I0428 20:23:41.394781  2272 net.cpp:200] ip1 needs backward computation.
I0428 20:23:41.394785  2272 net.cpp:200] pool1 needs backward computation.
I0428 20:23:41.394788  2272 net.cpp:200] conv1 needs backward computation.
I0428 20:23:41.394793  2272 net.cpp:200] pool0 needs backward computation.
I0428 20:23:41.394795  2272 net.cpp:200] conv0 needs backward computation.
I0428 20:23:41.394799  2272 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:41.394803  2272 net.cpp:202] mnist does not need backward computation.
I0428 20:23:41.394805  2272 net.cpp:244] This network produces output accuracy
I0428 20:23:41.394809  2272 net.cpp:244] This network produces output loss
I0428 20:23:41.394825  2272 net.cpp:257] Network initialization done.
I0428 20:23:41.394881  2272 solver.cpp:56] Solver scaffolding done.
I0428 20:23:41.395213  2272 caffe.cpp:248] Starting Optimization
I0428 20:23:41.395220  2272 solver.cpp:273] Solving LeNet
I0428 20:23:41.395222  2272 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:41.395448  2272 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:41.485411  2280 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:41.486819  2272 solver.cpp:398]     Test net output #0: accuracy = 0.1261
I0428 20:23:41.486837  2272 solver.cpp:398]     Test net output #1: loss = 2.31682 (* 1 = 2.31682 loss)
I0428 20:23:41.492635  2272 solver.cpp:219] Iteration 0 (0 iter/s, 0.0973875s/100 iters), loss = 2.30456
I0428 20:23:41.492673  2272 solver.cpp:238]     Train net output #0: loss = 2.30456 (* 1 = 2.30456 loss)
I0428 20:23:41.492699  2272 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:41.713950  2272 solver.cpp:219] Iteration 100 (451.966 iter/s, 0.221256s/100 iters), loss = 0.775409
I0428 20:23:41.713979  2272 solver.cpp:238]     Train net output #0: loss = 0.775409 (* 1 = 0.775409 loss)
I0428 20:23:41.713986  2272 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:41.937070  2272 solver.cpp:219] Iteration 200 (448.285 iter/s, 0.223072s/100 iters), loss = 0.630437
I0428 20:23:41.937110  2272 solver.cpp:238]     Train net output #0: loss = 0.630437 (* 1 = 0.630437 loss)
I0428 20:23:41.937120  2272 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:42.150943  2272 solver.cpp:219] Iteration 300 (467.687 iter/s, 0.213818s/100 iters), loss = 0.208487
I0428 20:23:42.150967  2272 solver.cpp:238]     Train net output #0: loss = 0.208487 (* 1 = 0.208487 loss)
I0428 20:23:42.150974  2272 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:42.385812  2272 solver.cpp:219] Iteration 400 (425.851 iter/s, 0.234824s/100 iters), loss = 0.306532
I0428 20:23:42.385845  2272 solver.cpp:238]     Train net output #0: loss = 0.306532 (* 1 = 0.306532 loss)
I0428 20:23:42.385854  2272 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:42.612936  2272 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:42.703145  2280 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:42.706326  2272 solver.cpp:398]     Test net output #0: accuracy = 0.8843
I0428 20:23:42.706357  2272 solver.cpp:398]     Test net output #1: loss = 0.319964 (* 1 = 0.319964 loss)
I0428 20:23:42.708547  2272 solver.cpp:219] Iteration 500 (309.903 iter/s, 0.322682s/100 iters), loss = 0.381936
I0428 20:23:42.708576  2272 solver.cpp:238]     Train net output #0: loss = 0.381936 (* 1 = 0.381936 loss)
I0428 20:23:42.708605  2272 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:42.943008  2272 solver.cpp:219] Iteration 600 (426.594 iter/s, 0.234415s/100 iters), loss = 0.222127
I0428 20:23:42.943042  2272 solver.cpp:238]     Train net output #0: loss = 0.222127 (* 1 = 0.222127 loss)
I0428 20:23:42.943050  2272 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:43.169241  2272 solver.cpp:219] Iteration 700 (442.12 iter/s, 0.226183s/100 iters), loss = 0.556872
I0428 20:23:43.169270  2272 solver.cpp:238]     Train net output #0: loss = 0.556872 (* 1 = 0.556872 loss)
I0428 20:23:43.169277  2272 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:43.405203  2272 solver.cpp:219] Iteration 800 (423.881 iter/s, 0.235915s/100 iters), loss = 0.425845
I0428 20:23:43.405236  2272 solver.cpp:238]     Train net output #0: loss = 0.425845 (* 1 = 0.425845 loss)
I0428 20:23:43.405243  2272 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:43.636981  2272 solver.cpp:219] Iteration 900 (431.544 iter/s, 0.231726s/100 iters), loss = 0.245001
I0428 20:23:43.637020  2272 solver.cpp:238]     Train net output #0: loss = 0.245001 (* 1 = 0.245001 loss)
I0428 20:23:43.637029  2272 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:43.714574  2279 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:43.867244  2272 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:43.872583  2272 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:43.874748  2272 solver.cpp:311] Iteration 1000, loss = 0.400954
I0428 20:23:43.874768  2272 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:43.924589  2272 blocking_queue.cpp:49] Waiting for data
I0428 20:23:43.965555  2280 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:43.966917  2272 solver.cpp:398]     Test net output #0: accuracy = 0.8901
I0428 20:23:43.966941  2272 solver.cpp:398]     Test net output #1: loss = 0.286444 (* 1 = 0.286444 loss)
I0428 20:23:43.966948  2272 solver.cpp:316] Optimization Done.
I0428 20:23:43.966951  2272 caffe.cpp:259] Optimization Done.
