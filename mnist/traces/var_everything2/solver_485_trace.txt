I0428 19:46:05.902703 25942 caffe.cpp:218] Using GPUs 0
I0428 19:46:05.940317 25942 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:06.455807 25942 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test485.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:06.455989 25942 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test485.prototxt
I0428 19:46:06.456804 25942 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:06.456833 25942 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:06.456936 25942 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:06.457016 25942 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:06.457118 25942 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:06.457151 25942 net.cpp:86] Creating Layer mnist
I0428 19:46:06.457160 25942 net.cpp:382] mnist -> data
I0428 19:46:06.457183 25942 net.cpp:382] mnist -> label
I0428 19:46:06.458294 25942 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:06.460763 25942 net.cpp:124] Setting up mnist
I0428 19:46:06.460780 25942 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:06.460788 25942 net.cpp:131] Top shape: 64 (64)
I0428 19:46:06.460791 25942 net.cpp:139] Memory required for data: 200960
I0428 19:46:06.460798 25942 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:06.460832 25942 net.cpp:86] Creating Layer conv0
I0428 19:46:06.460853 25942 net.cpp:408] conv0 <- data
I0428 19:46:06.460866 25942 net.cpp:382] conv0 -> conv0
I0428 19:46:06.747665 25942 net.cpp:124] Setting up conv0
I0428 19:46:06.747697 25942 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:06.747702 25942 net.cpp:139] Memory required for data: 495872
I0428 19:46:06.747720 25942 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:06.747735 25942 net.cpp:86] Creating Layer pool0
I0428 19:46:06.747740 25942 net.cpp:408] pool0 <- conv0
I0428 19:46:06.747746 25942 net.cpp:382] pool0 -> pool0
I0428 19:46:06.747802 25942 net.cpp:124] Setting up pool0
I0428 19:46:06.747809 25942 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:06.747813 25942 net.cpp:139] Memory required for data: 569600
I0428 19:46:06.747817 25942 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:06.747829 25942 net.cpp:86] Creating Layer conv1
I0428 19:46:06.747835 25942 net.cpp:408] conv1 <- pool0
I0428 19:46:06.747841 25942 net.cpp:382] conv1 -> conv1
I0428 19:46:06.750973 25942 net.cpp:124] Setting up conv1
I0428 19:46:06.750990 25942 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:06.750995 25942 net.cpp:139] Memory required for data: 2208000
I0428 19:46:06.751006 25942 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:06.751014 25942 net.cpp:86] Creating Layer pool1
I0428 19:46:06.751019 25942 net.cpp:408] pool1 <- conv1
I0428 19:46:06.751025 25942 net.cpp:382] pool1 -> pool1
I0428 19:46:06.751067 25942 net.cpp:124] Setting up pool1
I0428 19:46:06.751082 25942 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:06.751086 25942 net.cpp:139] Memory required for data: 2617600
I0428 19:46:06.751090 25942 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:06.751097 25942 net.cpp:86] Creating Layer ip1
I0428 19:46:06.751101 25942 net.cpp:408] ip1 <- pool1
I0428 19:46:06.751107 25942 net.cpp:382] ip1 -> ip1
I0428 19:46:06.751332 25942 net.cpp:124] Setting up ip1
I0428 19:46:06.751340 25942 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:06.751344 25942 net.cpp:139] Memory required for data: 2620160
I0428 19:46:06.751353 25942 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:06.751359 25942 net.cpp:86] Creating Layer relu1
I0428 19:46:06.751363 25942 net.cpp:408] relu1 <- ip1
I0428 19:46:06.751368 25942 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:06.751564 25942 net.cpp:124] Setting up relu1
I0428 19:46:06.751574 25942 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:06.751577 25942 net.cpp:139] Memory required for data: 2622720
I0428 19:46:06.751581 25942 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:06.751590 25942 net.cpp:86] Creating Layer ip2
I0428 19:46:06.751593 25942 net.cpp:408] ip2 <- ip1
I0428 19:46:06.751600 25942 net.cpp:382] ip2 -> ip2
I0428 19:46:06.751713 25942 net.cpp:124] Setting up ip2
I0428 19:46:06.751719 25942 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:06.751724 25942 net.cpp:139] Memory required for data: 2629120
I0428 19:46:06.751730 25942 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:06.751737 25942 net.cpp:86] Creating Layer relu2
I0428 19:46:06.751741 25942 net.cpp:408] relu2 <- ip2
I0428 19:46:06.751745 25942 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:06.752585 25942 net.cpp:124] Setting up relu2
I0428 19:46:06.752600 25942 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:06.752605 25942 net.cpp:139] Memory required for data: 2635520
I0428 19:46:06.752609 25942 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:06.752619 25942 net.cpp:86] Creating Layer ip3
I0428 19:46:06.752622 25942 net.cpp:408] ip3 <- ip2
I0428 19:46:06.752629 25942 net.cpp:382] ip3 -> ip3
I0428 19:46:06.752744 25942 net.cpp:124] Setting up ip3
I0428 19:46:06.752753 25942 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:06.752756 25942 net.cpp:139] Memory required for data: 2638080
I0428 19:46:06.752766 25942 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:06.752773 25942 net.cpp:86] Creating Layer relu3
I0428 19:46:06.752775 25942 net.cpp:408] relu3 <- ip3
I0428 19:46:06.752781 25942 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:06.752985 25942 net.cpp:124] Setting up relu3
I0428 19:46:06.752996 25942 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:06.753000 25942 net.cpp:139] Memory required for data: 2640640
I0428 19:46:06.753003 25942 layer_factory.hpp:77] Creating layer loss
I0428 19:46:06.753011 25942 net.cpp:86] Creating Layer loss
I0428 19:46:06.753015 25942 net.cpp:408] loss <- ip3
I0428 19:46:06.753020 25942 net.cpp:408] loss <- label
I0428 19:46:06.753026 25942 net.cpp:382] loss -> loss
I0428 19:46:06.753042 25942 layer_factory.hpp:77] Creating layer loss
I0428 19:46:06.753309 25942 net.cpp:124] Setting up loss
I0428 19:46:06.753320 25942 net.cpp:131] Top shape: (1)
I0428 19:46:06.753324 25942 net.cpp:134]     with loss weight 1
I0428 19:46:06.753342 25942 net.cpp:139] Memory required for data: 2640644
I0428 19:46:06.753347 25942 net.cpp:200] loss needs backward computation.
I0428 19:46:06.753351 25942 net.cpp:200] relu3 needs backward computation.
I0428 19:46:06.753356 25942 net.cpp:200] ip3 needs backward computation.
I0428 19:46:06.753360 25942 net.cpp:200] relu2 needs backward computation.
I0428 19:46:06.753362 25942 net.cpp:200] ip2 needs backward computation.
I0428 19:46:06.753366 25942 net.cpp:200] relu1 needs backward computation.
I0428 19:46:06.753370 25942 net.cpp:200] ip1 needs backward computation.
I0428 19:46:06.753373 25942 net.cpp:200] pool1 needs backward computation.
I0428 19:46:06.753376 25942 net.cpp:200] conv1 needs backward computation.
I0428 19:46:06.753381 25942 net.cpp:200] pool0 needs backward computation.
I0428 19:46:06.753384 25942 net.cpp:200] conv0 needs backward computation.
I0428 19:46:06.753388 25942 net.cpp:202] mnist does not need backward computation.
I0428 19:46:06.753391 25942 net.cpp:244] This network produces output loss
I0428 19:46:06.753402 25942 net.cpp:257] Network initialization done.
I0428 19:46:06.753783 25942 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test485.prototxt
I0428 19:46:06.753815 25942 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:06.753924 25942 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:06.754024 25942 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:06.754076 25942 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:06.754088 25942 net.cpp:86] Creating Layer mnist
I0428 19:46:06.754094 25942 net.cpp:382] mnist -> data
I0428 19:46:06.754103 25942 net.cpp:382] mnist -> label
I0428 19:46:06.754202 25942 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:06.756379 25942 net.cpp:124] Setting up mnist
I0428 19:46:06.756395 25942 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:06.756400 25942 net.cpp:131] Top shape: 100 (100)
I0428 19:46:06.756404 25942 net.cpp:139] Memory required for data: 314000
I0428 19:46:06.756412 25942 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:06.756420 25942 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:06.756424 25942 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:06.756430 25942 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:06.756438 25942 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:06.756505 25942 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:06.756511 25942 net.cpp:131] Top shape: 100 (100)
I0428 19:46:06.756516 25942 net.cpp:131] Top shape: 100 (100)
I0428 19:46:06.756520 25942 net.cpp:139] Memory required for data: 314800
I0428 19:46:06.756522 25942 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:06.756533 25942 net.cpp:86] Creating Layer conv0
I0428 19:46:06.756537 25942 net.cpp:408] conv0 <- data
I0428 19:46:06.756544 25942 net.cpp:382] conv0 -> conv0
I0428 19:46:06.758406 25942 net.cpp:124] Setting up conv0
I0428 19:46:06.758422 25942 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:06.758427 25942 net.cpp:139] Memory required for data: 775600
I0428 19:46:06.758438 25942 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:06.758447 25942 net.cpp:86] Creating Layer pool0
I0428 19:46:06.758452 25942 net.cpp:408] pool0 <- conv0
I0428 19:46:06.758458 25942 net.cpp:382] pool0 -> pool0
I0428 19:46:06.758504 25942 net.cpp:124] Setting up pool0
I0428 19:46:06.758510 25942 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:06.758514 25942 net.cpp:139] Memory required for data: 890800
I0428 19:46:06.758517 25942 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:06.758528 25942 net.cpp:86] Creating Layer conv1
I0428 19:46:06.758533 25942 net.cpp:408] conv1 <- pool0
I0428 19:46:06.758539 25942 net.cpp:382] conv1 -> conv1
I0428 19:46:06.760332 25942 net.cpp:124] Setting up conv1
I0428 19:46:06.760349 25942 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:06.760362 25942 net.cpp:139] Memory required for data: 3450800
I0428 19:46:06.760373 25942 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:06.760381 25942 net.cpp:86] Creating Layer pool1
I0428 19:46:06.760391 25942 net.cpp:408] pool1 <- conv1
I0428 19:46:06.760397 25942 net.cpp:382] pool1 -> pool1
I0428 19:46:06.760442 25942 net.cpp:124] Setting up pool1
I0428 19:46:06.760460 25942 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:06.760464 25942 net.cpp:139] Memory required for data: 4090800
I0428 19:46:06.760468 25942 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:06.760474 25942 net.cpp:86] Creating Layer ip1
I0428 19:46:06.760484 25942 net.cpp:408] ip1 <- pool1
I0428 19:46:06.760491 25942 net.cpp:382] ip1 -> ip1
I0428 19:46:06.760717 25942 net.cpp:124] Setting up ip1
I0428 19:46:06.760726 25942 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:06.760741 25942 net.cpp:139] Memory required for data: 4094800
I0428 19:46:06.760751 25942 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:06.760758 25942 net.cpp:86] Creating Layer relu1
I0428 19:46:06.760762 25942 net.cpp:408] relu1 <- ip1
I0428 19:46:06.760767 25942 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:06.760975 25942 net.cpp:124] Setting up relu1
I0428 19:46:06.760985 25942 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:06.760989 25942 net.cpp:139] Memory required for data: 4098800
I0428 19:46:06.760994 25942 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:06.761003 25942 net.cpp:86] Creating Layer ip2
I0428 19:46:06.761008 25942 net.cpp:408] ip2 <- ip1
I0428 19:46:06.761023 25942 net.cpp:382] ip2 -> ip2
I0428 19:46:06.761139 25942 net.cpp:124] Setting up ip2
I0428 19:46:06.761148 25942 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:06.761152 25942 net.cpp:139] Memory required for data: 4108800
I0428 19:46:06.761157 25942 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:06.761165 25942 net.cpp:86] Creating Layer relu2
I0428 19:46:06.761168 25942 net.cpp:408] relu2 <- ip2
I0428 19:46:06.761173 25942 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:06.761422 25942 net.cpp:124] Setting up relu2
I0428 19:46:06.761432 25942 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:06.761435 25942 net.cpp:139] Memory required for data: 4118800
I0428 19:46:06.761440 25942 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:06.761446 25942 net.cpp:86] Creating Layer ip3
I0428 19:46:06.761451 25942 net.cpp:408] ip3 <- ip2
I0428 19:46:06.761457 25942 net.cpp:382] ip3 -> ip3
I0428 19:46:06.761611 25942 net.cpp:124] Setting up ip3
I0428 19:46:06.761620 25942 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:06.761625 25942 net.cpp:139] Memory required for data: 4122800
I0428 19:46:06.761633 25942 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:06.761638 25942 net.cpp:86] Creating Layer relu3
I0428 19:46:06.761642 25942 net.cpp:408] relu3 <- ip3
I0428 19:46:06.761647 25942 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:06.762583 25942 net.cpp:124] Setting up relu3
I0428 19:46:06.762596 25942 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:06.762600 25942 net.cpp:139] Memory required for data: 4126800
I0428 19:46:06.762604 25942 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:06.762610 25942 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:06.762614 25942 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:06.762621 25942 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:06.762629 25942 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:06.762689 25942 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:06.762698 25942 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:06.762703 25942 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:06.762706 25942 net.cpp:139] Memory required for data: 4134800
I0428 19:46:06.762711 25942 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:06.762717 25942 net.cpp:86] Creating Layer accuracy
I0428 19:46:06.762727 25942 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:06.762732 25942 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:06.762743 25942 net.cpp:382] accuracy -> accuracy
I0428 19:46:06.762753 25942 net.cpp:124] Setting up accuracy
I0428 19:46:06.762763 25942 net.cpp:131] Top shape: (1)
I0428 19:46:06.762766 25942 net.cpp:139] Memory required for data: 4134804
I0428 19:46:06.762775 25942 layer_factory.hpp:77] Creating layer loss
I0428 19:46:06.762783 25942 net.cpp:86] Creating Layer loss
I0428 19:46:06.762786 25942 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:06.762792 25942 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:06.762796 25942 net.cpp:382] loss -> loss
I0428 19:46:06.762804 25942 layer_factory.hpp:77] Creating layer loss
I0428 19:46:06.763087 25942 net.cpp:124] Setting up loss
I0428 19:46:06.763098 25942 net.cpp:131] Top shape: (1)
I0428 19:46:06.763103 25942 net.cpp:134]     with loss weight 1
I0428 19:46:06.763110 25942 net.cpp:139] Memory required for data: 4134808
I0428 19:46:06.763128 25942 net.cpp:200] loss needs backward computation.
I0428 19:46:06.763134 25942 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:06.763144 25942 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:06.763149 25942 net.cpp:200] relu3 needs backward computation.
I0428 19:46:06.763157 25942 net.cpp:200] ip3 needs backward computation.
I0428 19:46:06.763160 25942 net.cpp:200] relu2 needs backward computation.
I0428 19:46:06.763164 25942 net.cpp:200] ip2 needs backward computation.
I0428 19:46:06.763167 25942 net.cpp:200] relu1 needs backward computation.
I0428 19:46:06.763170 25942 net.cpp:200] ip1 needs backward computation.
I0428 19:46:06.763175 25942 net.cpp:200] pool1 needs backward computation.
I0428 19:46:06.763178 25942 net.cpp:200] conv1 needs backward computation.
I0428 19:46:06.763181 25942 net.cpp:200] pool0 needs backward computation.
I0428 19:46:06.763196 25942 net.cpp:200] conv0 needs backward computation.
I0428 19:46:06.763201 25942 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:06.763212 25942 net.cpp:202] mnist does not need backward computation.
I0428 19:46:06.763216 25942 net.cpp:244] This network produces output accuracy
I0428 19:46:06.763219 25942 net.cpp:244] This network produces output loss
I0428 19:46:06.763234 25942 net.cpp:257] Network initialization done.
I0428 19:46:06.763284 25942 solver.cpp:56] Solver scaffolding done.
I0428 19:46:06.763684 25942 caffe.cpp:248] Starting Optimization
I0428 19:46:06.763692 25942 solver.cpp:273] Solving LeNet
I0428 19:46:06.763695 25942 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:06.764027 25942 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:06.769512 25942 blocking_queue.cpp:49] Waiting for data
I0428 19:46:06.837842 25949 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:06.838452 25942 solver.cpp:398]     Test net output #0: accuracy = 0.1392
I0428 19:46:06.838475 25942 solver.cpp:398]     Test net output #1: loss = 2.30984 (* 1 = 2.30984 loss)
I0428 19:46:06.842316 25942 solver.cpp:219] Iteration 0 (0 iter/s, 0.0785736s/100 iters), loss = 2.2823
I0428 19:46:06.842344 25942 solver.cpp:238]     Train net output #0: loss = 2.2823 (* 1 = 2.2823 loss)
I0428 19:46:06.842356 25942 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:07.002179 25942 solver.cpp:219] Iteration 100 (625.717 iter/s, 0.159817s/100 iters), loss = 1.2295
I0428 19:46:07.002216 25942 solver.cpp:238]     Train net output #0: loss = 1.2295 (* 1 = 1.2295 loss)
I0428 19:46:07.002231 25942 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:07.168001 25942 solver.cpp:219] Iteration 200 (603.241 iter/s, 0.165771s/100 iters), loss = 1.17332
I0428 19:46:07.168040 25942 solver.cpp:238]     Train net output #0: loss = 1.17332 (* 1 = 1.17332 loss)
I0428 19:46:07.168062 25942 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:07.340301 25942 solver.cpp:219] Iteration 300 (580.568 iter/s, 0.172245s/100 iters), loss = 0.831294
I0428 19:46:07.340344 25942 solver.cpp:238]     Train net output #0: loss = 0.831294 (* 1 = 0.831294 loss)
I0428 19:46:07.340359 25942 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:07.506688 25942 solver.cpp:219] Iteration 400 (601.21 iter/s, 0.166331s/100 iters), loss = 0.770028
I0428 19:46:07.506726 25942 solver.cpp:238]     Train net output #0: loss = 0.770028 (* 1 = 0.770028 loss)
I0428 19:46:07.506739 25942 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:07.671720 25942 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:07.729604 25949 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:07.731523 25942 solver.cpp:398]     Test net output #0: accuracy = 0.6805
I0428 19:46:07.731550 25942 solver.cpp:398]     Test net output #1: loss = 0.827773 (* 1 = 0.827773 loss)
I0428 19:46:07.733016 25942 solver.cpp:219] Iteration 500 (441.941 iter/s, 0.226274s/100 iters), loss = 0.915295
I0428 19:46:07.733045 25942 solver.cpp:238]     Train net output #0: loss = 0.915295 (* 1 = 0.915295 loss)
I0428 19:46:07.733081 25942 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:07.894229 25942 solver.cpp:219] Iteration 600 (620.469 iter/s, 0.161168s/100 iters), loss = 0.931919
I0428 19:46:07.894276 25942 solver.cpp:238]     Train net output #0: loss = 0.931919 (* 1 = 0.931919 loss)
I0428 19:46:07.894299 25942 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:08.060405 25942 solver.cpp:219] Iteration 700 (601.999 iter/s, 0.166113s/100 iters), loss = 1.01704
I0428 19:46:08.060446 25942 solver.cpp:238]     Train net output #0: loss = 1.01704 (* 1 = 1.01704 loss)
I0428 19:46:08.060466 25942 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:08.229074 25942 solver.cpp:219] Iteration 800 (593.071 iter/s, 0.168614s/100 iters), loss = 0.942056
I0428 19:46:08.229127 25942 solver.cpp:238]     Train net output #0: loss = 0.942056 (* 1 = 0.942056 loss)
I0428 19:46:08.229142 25942 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:08.396631 25942 solver.cpp:219] Iteration 900 (597.012 iter/s, 0.167501s/100 iters), loss = 1.02599
I0428 19:46:08.396673 25942 solver.cpp:238]     Train net output #0: loss = 1.02599 (* 1 = 1.02599 loss)
I0428 19:46:08.396683 25942 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:08.453065 25948 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:08.564987 25942 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:08.566797 25942 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:08.567711 25942 solver.cpp:311] Iteration 1000, loss = 0.890415
I0428 19:46:08.567734 25942 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:08.626854 25949 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:08.628767 25942 solver.cpp:398]     Test net output #0: accuracy = 0.695
I0428 19:46:08.628790 25942 solver.cpp:398]     Test net output #1: loss = 0.761961 (* 1 = 0.761961 loss)
I0428 19:46:08.628798 25942 solver.cpp:316] Optimization Done.
I0428 19:46:08.628820 25942 caffe.cpp:259] Optimization Done.
