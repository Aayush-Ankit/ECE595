I0428 20:34:08.629822  4430 caffe.cpp:218] Using GPUs 0
I0428 20:34:08.664026  4430 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:34:09.107131  4430 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1600.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:34:09.107271  4430 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1600.prototxt
I0428 20:34:09.107538  4430 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:34:09.107552  4430 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:34:09.107616  4430 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:34:09.107671  4430 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:09.107753  4430 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:34:09.107771  4430 net.cpp:86] Creating Layer mnist
I0428 20:34:09.107779  4430 net.cpp:382] mnist -> data
I0428 20:34:09.107796  4430 net.cpp:382] mnist -> label
I0428 20:34:09.108759  4430 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:34:09.110869  4430 net.cpp:124] Setting up mnist
I0428 20:34:09.110914  4430 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:34:09.110919  4430 net.cpp:131] Top shape: 64 (64)
I0428 20:34:09.110922  4430 net.cpp:139] Memory required for data: 200960
I0428 20:34:09.110929  4430 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:09.110966  4430 net.cpp:86] Creating Layer conv0
I0428 20:34:09.110971  4430 net.cpp:408] conv0 <- data
I0428 20:34:09.110982  4430 net.cpp:382] conv0 -> conv0
I0428 20:34:09.345481  4430 net.cpp:124] Setting up conv0
I0428 20:34:09.345523  4430 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:34:09.345527  4430 net.cpp:139] Memory required for data: 14946560
I0428 20:34:09.345541  4430 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:09.345554  4430 net.cpp:86] Creating Layer pool0
I0428 20:34:09.345557  4430 net.cpp:408] pool0 <- conv0
I0428 20:34:09.345562  4430 net.cpp:382] pool0 -> pool0
I0428 20:34:09.345623  4430 net.cpp:124] Setting up pool0
I0428 20:34:09.345628  4430 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:34:09.345646  4430 net.cpp:139] Memory required for data: 18632960
I0428 20:34:09.345650  4430 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:09.345660  4430 net.cpp:86] Creating Layer conv1
I0428 20:34:09.345664  4430 net.cpp:408] conv1 <- pool0
I0428 20:34:09.345669  4430 net.cpp:382] conv1 -> conv1
I0428 20:34:09.349231  4430 net.cpp:124] Setting up conv1
I0428 20:34:09.349261  4430 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:34:09.349264  4430 net.cpp:139] Memory required for data: 19452160
I0428 20:34:09.349272  4430 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:09.349279  4430 net.cpp:86] Creating Layer pool1
I0428 20:34:09.349282  4430 net.cpp:408] pool1 <- conv1
I0428 20:34:09.349287  4430 net.cpp:382] pool1 -> pool1
I0428 20:34:09.349354  4430 net.cpp:124] Setting up pool1
I0428 20:34:09.349359  4430 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:34:09.349361  4430 net.cpp:139] Memory required for data: 19656960
I0428 20:34:09.349364  4430 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:09.349370  4430 net.cpp:86] Creating Layer ip1
I0428 20:34:09.349373  4430 net.cpp:408] ip1 <- pool1
I0428 20:34:09.349378  4430 net.cpp:382] ip1 -> ip1
I0428 20:34:09.350407  4430 net.cpp:124] Setting up ip1
I0428 20:34:09.350435  4430 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:09.350453  4430 net.cpp:139] Memory required for data: 19659520
I0428 20:34:09.350462  4430 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:09.350468  4430 net.cpp:86] Creating Layer relu1
I0428 20:34:09.350472  4430 net.cpp:408] relu1 <- ip1
I0428 20:34:09.350477  4430 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:09.350729  4430 net.cpp:124] Setting up relu1
I0428 20:34:09.350739  4430 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:09.350742  4430 net.cpp:139] Memory required for data: 19662080
I0428 20:34:09.350746  4430 layer_factory.hpp:77] Creating layer loss
I0428 20:34:09.350752  4430 net.cpp:86] Creating Layer loss
I0428 20:34:09.350755  4430 net.cpp:408] loss <- ip1
I0428 20:34:09.350759  4430 net.cpp:408] loss <- label
I0428 20:34:09.350765  4430 net.cpp:382] loss -> loss
I0428 20:34:09.350778  4430 layer_factory.hpp:77] Creating layer loss
I0428 20:34:09.351666  4430 net.cpp:124] Setting up loss
I0428 20:34:09.351678  4430 net.cpp:131] Top shape: (1)
I0428 20:34:09.351697  4430 net.cpp:134]     with loss weight 1
I0428 20:34:09.351711  4430 net.cpp:139] Memory required for data: 19662084
I0428 20:34:09.351714  4430 net.cpp:200] loss needs backward computation.
I0428 20:34:09.351718  4430 net.cpp:200] relu1 needs backward computation.
I0428 20:34:09.351722  4430 net.cpp:200] ip1 needs backward computation.
I0428 20:34:09.351723  4430 net.cpp:200] pool1 needs backward computation.
I0428 20:34:09.351727  4430 net.cpp:200] conv1 needs backward computation.
I0428 20:34:09.351745  4430 net.cpp:200] pool0 needs backward computation.
I0428 20:34:09.351748  4430 net.cpp:200] conv0 needs backward computation.
I0428 20:34:09.351752  4430 net.cpp:202] mnist does not need backward computation.
I0428 20:34:09.351754  4430 net.cpp:244] This network produces output loss
I0428 20:34:09.351763  4430 net.cpp:257] Network initialization done.
I0428 20:34:09.352030  4430 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1600.prototxt
I0428 20:34:09.352069  4430 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:34:09.352143  4430 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:34:09.352216  4430 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:09.352258  4430 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:34:09.352272  4430 net.cpp:86] Creating Layer mnist
I0428 20:34:09.352275  4430 net.cpp:382] mnist -> data
I0428 20:34:09.352284  4430 net.cpp:382] mnist -> label
I0428 20:34:09.352385  4430 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:34:09.353613  4430 net.cpp:124] Setting up mnist
I0428 20:34:09.353658  4430 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:34:09.353663  4430 net.cpp:131] Top shape: 100 (100)
I0428 20:34:09.353665  4430 net.cpp:139] Memory required for data: 314000
I0428 20:34:09.353669  4430 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:34:09.353677  4430 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:34:09.353679  4430 net.cpp:408] label_mnist_1_split <- label
I0428 20:34:09.353704  4430 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:34:09.353711  4430 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:34:09.353760  4430 net.cpp:124] Setting up label_mnist_1_split
I0428 20:34:09.353768  4430 net.cpp:131] Top shape: 100 (100)
I0428 20:34:09.353772  4430 net.cpp:131] Top shape: 100 (100)
I0428 20:34:09.353775  4430 net.cpp:139] Memory required for data: 314800
I0428 20:34:09.353777  4430 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:09.353786  4430 net.cpp:86] Creating Layer conv0
I0428 20:34:09.353790  4430 net.cpp:408] conv0 <- data
I0428 20:34:09.353796  4430 net.cpp:382] conv0 -> conv0
I0428 20:34:09.354881  4430 net.cpp:124] Setting up conv0
I0428 20:34:09.354912  4430 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:34:09.354914  4430 net.cpp:139] Memory required for data: 23354800
I0428 20:34:09.354924  4430 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:09.354930  4430 net.cpp:86] Creating Layer pool0
I0428 20:34:09.354933  4430 net.cpp:408] pool0 <- conv0
I0428 20:34:09.354939  4430 net.cpp:382] pool0 -> pool0
I0428 20:34:09.354976  4430 net.cpp:124] Setting up pool0
I0428 20:34:09.354984  4430 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:34:09.354986  4430 net.cpp:139] Memory required for data: 29114800
I0428 20:34:09.354990  4430 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:09.354998  4430 net.cpp:86] Creating Layer conv1
I0428 20:34:09.355001  4430 net.cpp:408] conv1 <- pool0
I0428 20:34:09.355006  4430 net.cpp:382] conv1 -> conv1
I0428 20:34:09.358132  4430 net.cpp:124] Setting up conv1
I0428 20:34:09.358178  4430 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:34:09.358182  4430 net.cpp:139] Memory required for data: 30394800
I0428 20:34:09.358206  4430 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:09.358213  4430 net.cpp:86] Creating Layer pool1
I0428 20:34:09.358247  4430 net.cpp:408] pool1 <- conv1
I0428 20:34:09.358252  4430 net.cpp:382] pool1 -> pool1
I0428 20:34:09.358289  4430 net.cpp:124] Setting up pool1
I0428 20:34:09.358295  4430 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:34:09.358297  4430 net.cpp:139] Memory required for data: 30714800
I0428 20:34:09.358301  4430 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:09.358309  4430 net.cpp:86] Creating Layer ip1
I0428 20:34:09.358311  4430 net.cpp:408] ip1 <- pool1
I0428 20:34:09.358316  4430 net.cpp:382] ip1 -> ip1
I0428 20:34:09.358454  4430 net.cpp:124] Setting up ip1
I0428 20:34:09.358463  4430 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:09.358471  4430 net.cpp:139] Memory required for data: 30718800
I0428 20:34:09.358479  4430 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:09.358484  4430 net.cpp:86] Creating Layer relu1
I0428 20:34:09.358489  4430 net.cpp:408] relu1 <- ip1
I0428 20:34:09.358492  4430 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:09.359321  4430 net.cpp:124] Setting up relu1
I0428 20:34:09.359331  4430 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:09.359350  4430 net.cpp:139] Memory required for data: 30722800
I0428 20:34:09.359354  4430 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:34:09.359361  4430 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:34:09.359364  4430 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:34:09.359369  4430 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:34:09.359380  4430 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:34:09.359452  4430 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:34:09.359459  4430 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:09.359463  4430 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:09.359465  4430 net.cpp:139] Memory required for data: 30730800
I0428 20:34:09.359468  4430 layer_factory.hpp:77] Creating layer accuracy
I0428 20:34:09.359474  4430 net.cpp:86] Creating Layer accuracy
I0428 20:34:09.359478  4430 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:34:09.359482  4430 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:34:09.359486  4430 net.cpp:382] accuracy -> accuracy
I0428 20:34:09.359493  4430 net.cpp:124] Setting up accuracy
I0428 20:34:09.359496  4430 net.cpp:131] Top shape: (1)
I0428 20:34:09.359504  4430 net.cpp:139] Memory required for data: 30730804
I0428 20:34:09.359508  4430 layer_factory.hpp:77] Creating layer loss
I0428 20:34:09.359513  4430 net.cpp:86] Creating Layer loss
I0428 20:34:09.359515  4430 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:34:09.359519  4430 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:34:09.359524  4430 net.cpp:382] loss -> loss
I0428 20:34:09.359545  4430 layer_factory.hpp:77] Creating layer loss
I0428 20:34:09.359827  4430 net.cpp:124] Setting up loss
I0428 20:34:09.359838  4430 net.cpp:131] Top shape: (1)
I0428 20:34:09.359840  4430 net.cpp:134]     with loss weight 1
I0428 20:34:09.359848  4430 net.cpp:139] Memory required for data: 30730808
I0428 20:34:09.359851  4430 net.cpp:200] loss needs backward computation.
I0428 20:34:09.359855  4430 net.cpp:202] accuracy does not need backward computation.
I0428 20:34:09.359858  4430 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:34:09.359861  4430 net.cpp:200] relu1 needs backward computation.
I0428 20:34:09.359864  4430 net.cpp:200] ip1 needs backward computation.
I0428 20:34:09.359869  4430 net.cpp:200] pool1 needs backward computation.
I0428 20:34:09.359871  4430 net.cpp:200] conv1 needs backward computation.
I0428 20:34:09.359875  4430 net.cpp:200] pool0 needs backward computation.
I0428 20:34:09.359879  4430 net.cpp:200] conv0 needs backward computation.
I0428 20:34:09.359882  4430 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:34:09.359886  4430 net.cpp:202] mnist does not need backward computation.
I0428 20:34:09.359889  4430 net.cpp:244] This network produces output accuracy
I0428 20:34:09.359908  4430 net.cpp:244] This network produces output loss
I0428 20:34:09.359927  4430 net.cpp:257] Network initialization done.
I0428 20:34:09.359974  4430 solver.cpp:56] Solver scaffolding done.
I0428 20:34:09.360183  4430 caffe.cpp:248] Starting Optimization
I0428 20:34:09.360189  4430 solver.cpp:273] Solving LeNet
I0428 20:34:09.360193  4430 solver.cpp:274] Learning Rate Policy: inv
I0428 20:34:09.360368  4430 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:34:09.464378  4437 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:09.467093  4430 solver.cpp:398]     Test net output #0: accuracy = 0.1412
I0428 20:34:09.467126  4430 solver.cpp:398]     Test net output #1: loss = 2.28196 (* 1 = 2.28196 loss)
I0428 20:34:09.471381  4430 solver.cpp:219] Iteration 0 (-1.07288e-30 iter/s, 0.111161s/100 iters), loss = 2.24661
I0428 20:34:09.471420  4430 solver.cpp:238]     Train net output #0: loss = 2.24661 (* 1 = 2.24661 loss)
I0428 20:34:09.471431  4430 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:34:09.687270  4430 solver.cpp:219] Iteration 100 (463.292 iter/s, 0.215847s/100 iters), loss = 0.205118
I0428 20:34:09.687300  4430 solver.cpp:238]     Train net output #0: loss = 0.205118 (* 1 = 0.205118 loss)
I0428 20:34:09.687306  4430 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:34:09.902547  4430 solver.cpp:219] Iteration 200 (464.614 iter/s, 0.215233s/100 iters), loss = 0.143538
I0428 20:34:09.902590  4430 solver.cpp:238]     Train net output #0: loss = 0.143538 (* 1 = 0.143538 loss)
I0428 20:34:09.902596  4430 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:34:10.118744  4430 solver.cpp:219] Iteration 300 (462.67 iter/s, 0.216137s/100 iters), loss = 0.154015
I0428 20:34:10.118788  4430 solver.cpp:238]     Train net output #0: loss = 0.154015 (* 1 = 0.154015 loss)
I0428 20:34:10.118799  4430 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:34:10.337417  4430 solver.cpp:219] Iteration 400 (457.421 iter/s, 0.218617s/100 iters), loss = 0.0713016
I0428 20:34:10.337460  4430 solver.cpp:238]     Train net output #0: loss = 0.0713015 (* 1 = 0.0713015 loss)
I0428 20:34:10.337466  4430 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:34:10.555254  4430 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:34:10.657024  4437 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:10.659637  4430 solver.cpp:398]     Test net output #0: accuracy = 0.9698
I0428 20:34:10.659673  4430 solver.cpp:398]     Test net output #1: loss = 0.0974337 (* 1 = 0.0974337 loss)
I0428 20:34:10.661850  4430 solver.cpp:219] Iteration 500 (308.274 iter/s, 0.324387s/100 iters), loss = 0.125473
I0428 20:34:10.661888  4430 solver.cpp:238]     Train net output #0: loss = 0.125473 (* 1 = 0.125473 loss)
I0428 20:34:10.661896  4430 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:10.889142  4430 solver.cpp:219] Iteration 600 (440.04 iter/s, 0.227252s/100 iters), loss = 0.0863905
I0428 20:34:10.889184  4430 solver.cpp:238]     Train net output #0: loss = 0.0863903 (* 1 = 0.0863903 loss)
I0428 20:34:10.889190  4430 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:11.108834  4430 solver.cpp:219] Iteration 700 (455.304 iter/s, 0.219634s/100 iters), loss = 0.158236
I0428 20:34:11.108875  4430 solver.cpp:238]     Train net output #0: loss = 0.158236 (* 1 = 0.158236 loss)
I0428 20:34:11.108882  4430 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:11.331043  4430 solver.cpp:219] Iteration 800 (450.118 iter/s, 0.222164s/100 iters), loss = 0.207217
I0428 20:34:11.331084  4430 solver.cpp:238]     Train net output #0: loss = 0.207217 (* 1 = 0.207217 loss)
I0428 20:34:11.331095  4430 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:11.552675  4430 solver.cpp:219] Iteration 900 (451.308 iter/s, 0.221578s/100 iters), loss = 0.140315
I0428 20:34:11.552701  4430 solver.cpp:238]     Train net output #0: loss = 0.140315 (* 1 = 0.140315 loss)
I0428 20:34:11.552708  4430 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:11.625620  4436 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:11.772408  4430 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:11.776448  4430 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:11.778246  4430 solver.cpp:311] Iteration 1000, loss = 0.100821
I0428 20:34:11.778261  4430 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:11.882851  4437 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:11.886481  4430 solver.cpp:398]     Test net output #0: accuracy = 0.9756
I0428 20:34:11.886513  4430 solver.cpp:398]     Test net output #1: loss = 0.074639 (* 1 = 0.074639 loss)
I0428 20:34:11.886518  4430 solver.cpp:316] Optimization Done.
I0428 20:34:11.886520  4430 caffe.cpp:259] Optimization Done.
