I0428 19:57:38.853093 28734 caffe.cpp:218] Using GPUs 0
I0428 19:57:38.891000 28734 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:57:39.401325 28734 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test795.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:57:39.401473 28734 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test795.prototxt
I0428 19:57:39.401875 28734 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:57:39.401892 28734 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:57:39.401989 28734 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:57:39.402065 28734 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:39.402168 28734 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:57:39.402191 28734 net.cpp:86] Creating Layer mnist
I0428 19:57:39.402199 28734 net.cpp:382] mnist -> data
I0428 19:57:39.402221 28734 net.cpp:382] mnist -> label
I0428 19:57:39.403333 28734 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:57:39.405786 28734 net.cpp:124] Setting up mnist
I0428 19:57:39.405803 28734 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:57:39.405810 28734 net.cpp:131] Top shape: 64 (64)
I0428 19:57:39.405813 28734 net.cpp:139] Memory required for data: 200960
I0428 19:57:39.405822 28734 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:39.405838 28734 net.cpp:86] Creating Layer conv0
I0428 19:57:39.405858 28734 net.cpp:408] conv0 <- data
I0428 19:57:39.405871 28734 net.cpp:382] conv0 -> conv0
I0428 19:57:39.695721 28734 net.cpp:124] Setting up conv0
I0428 19:57:39.695752 28734 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:57:39.695757 28734 net.cpp:139] Memory required for data: 1675520
I0428 19:57:39.695775 28734 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:39.695788 28734 net.cpp:86] Creating Layer pool0
I0428 19:57:39.695793 28734 net.cpp:408] pool0 <- conv0
I0428 19:57:39.695799 28734 net.cpp:382] pool0 -> pool0
I0428 19:57:39.695853 28734 net.cpp:124] Setting up pool0
I0428 19:57:39.695859 28734 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:57:39.695863 28734 net.cpp:139] Memory required for data: 2044160
I0428 19:57:39.695866 28734 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:39.695878 28734 net.cpp:86] Creating Layer conv1
I0428 19:57:39.695883 28734 net.cpp:408] conv1 <- pool0
I0428 19:57:39.695888 28734 net.cpp:382] conv1 -> conv1
I0428 19:57:39.698889 28734 net.cpp:124] Setting up conv1
I0428 19:57:39.698907 28734 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:57:39.698911 28734 net.cpp:139] Memory required for data: 2126080
I0428 19:57:39.698921 28734 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:39.698930 28734 net.cpp:86] Creating Layer pool1
I0428 19:57:39.698935 28734 net.cpp:408] pool1 <- conv1
I0428 19:57:39.698940 28734 net.cpp:382] pool1 -> pool1
I0428 19:57:39.698984 28734 net.cpp:124] Setting up pool1
I0428 19:57:39.698990 28734 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:57:39.698993 28734 net.cpp:139] Memory required for data: 2146560
I0428 19:57:39.698997 28734 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:39.699004 28734 net.cpp:86] Creating Layer ip1
I0428 19:57:39.699008 28734 net.cpp:408] ip1 <- pool1
I0428 19:57:39.699013 28734 net.cpp:382] ip1 -> ip1
I0428 19:57:39.699126 28734 net.cpp:124] Setting up ip1
I0428 19:57:39.699133 28734 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:39.699137 28734 net.cpp:139] Memory required for data: 2149120
I0428 19:57:39.699144 28734 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:39.699151 28734 net.cpp:86] Creating Layer relu1
I0428 19:57:39.699154 28734 net.cpp:408] relu1 <- ip1
I0428 19:57:39.699159 28734 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:39.699348 28734 net.cpp:124] Setting up relu1
I0428 19:57:39.699358 28734 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:39.699362 28734 net.cpp:139] Memory required for data: 2151680
I0428 19:57:39.699367 28734 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:39.699374 28734 net.cpp:86] Creating Layer ip2
I0428 19:57:39.699378 28734 net.cpp:408] ip2 <- ip1
I0428 19:57:39.699383 28734 net.cpp:382] ip2 -> ip2
I0428 19:57:39.699491 28734 net.cpp:124] Setting up ip2
I0428 19:57:39.699498 28734 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:57:39.699502 28734 net.cpp:139] Memory required for data: 2158080
I0428 19:57:39.699508 28734 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:39.699515 28734 net.cpp:86] Creating Layer relu2
I0428 19:57:39.699518 28734 net.cpp:408] relu2 <- ip2
I0428 19:57:39.699523 28734 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:39.700336 28734 net.cpp:124] Setting up relu2
I0428 19:57:39.700350 28734 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:57:39.700354 28734 net.cpp:139] Memory required for data: 2164480
I0428 19:57:39.700358 28734 layer_factory.hpp:77] Creating layer ip3
I0428 19:57:39.700366 28734 net.cpp:86] Creating Layer ip3
I0428 19:57:39.700371 28734 net.cpp:408] ip3 <- ip2
I0428 19:57:39.700377 28734 net.cpp:382] ip3 -> ip3
I0428 19:57:39.700490 28734 net.cpp:124] Setting up ip3
I0428 19:57:39.700498 28734 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:39.700501 28734 net.cpp:139] Memory required for data: 2167040
I0428 19:57:39.700511 28734 layer_factory.hpp:77] Creating layer relu3
I0428 19:57:39.700516 28734 net.cpp:86] Creating Layer relu3
I0428 19:57:39.700520 28734 net.cpp:408] relu3 <- ip3
I0428 19:57:39.700525 28734 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:57:39.700716 28734 net.cpp:124] Setting up relu3
I0428 19:57:39.700726 28734 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:39.700729 28734 net.cpp:139] Memory required for data: 2169600
I0428 19:57:39.700733 28734 layer_factory.hpp:77] Creating layer loss
I0428 19:57:39.700739 28734 net.cpp:86] Creating Layer loss
I0428 19:57:39.700743 28734 net.cpp:408] loss <- ip3
I0428 19:57:39.700748 28734 net.cpp:408] loss <- label
I0428 19:57:39.700754 28734 net.cpp:382] loss -> loss
I0428 19:57:39.700774 28734 layer_factory.hpp:77] Creating layer loss
I0428 19:57:39.701041 28734 net.cpp:124] Setting up loss
I0428 19:57:39.701053 28734 net.cpp:131] Top shape: (1)
I0428 19:57:39.701057 28734 net.cpp:134]     with loss weight 1
I0428 19:57:39.701073 28734 net.cpp:139] Memory required for data: 2169604
I0428 19:57:39.701077 28734 net.cpp:200] loss needs backward computation.
I0428 19:57:39.701081 28734 net.cpp:200] relu3 needs backward computation.
I0428 19:57:39.701086 28734 net.cpp:200] ip3 needs backward computation.
I0428 19:57:39.701089 28734 net.cpp:200] relu2 needs backward computation.
I0428 19:57:39.701092 28734 net.cpp:200] ip2 needs backward computation.
I0428 19:57:39.701095 28734 net.cpp:200] relu1 needs backward computation.
I0428 19:57:39.701098 28734 net.cpp:200] ip1 needs backward computation.
I0428 19:57:39.701102 28734 net.cpp:200] pool1 needs backward computation.
I0428 19:57:39.701107 28734 net.cpp:200] conv1 needs backward computation.
I0428 19:57:39.701110 28734 net.cpp:200] pool0 needs backward computation.
I0428 19:57:39.701113 28734 net.cpp:200] conv0 needs backward computation.
I0428 19:57:39.701117 28734 net.cpp:202] mnist does not need backward computation.
I0428 19:57:39.701120 28734 net.cpp:244] This network produces output loss
I0428 19:57:39.701131 28734 net.cpp:257] Network initialization done.
I0428 19:57:39.701517 28734 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test795.prototxt
I0428 19:57:39.701550 28734 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:57:39.701652 28734 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:57:39.701747 28734 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:39.701797 28734 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:57:39.701809 28734 net.cpp:86] Creating Layer mnist
I0428 19:57:39.701817 28734 net.cpp:382] mnist -> data
I0428 19:57:39.701825 28734 net.cpp:382] mnist -> label
I0428 19:57:39.701928 28734 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:57:39.704236 28734 net.cpp:124] Setting up mnist
I0428 19:57:39.704252 28734 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:57:39.704257 28734 net.cpp:131] Top shape: 100 (100)
I0428 19:57:39.704260 28734 net.cpp:139] Memory required for data: 314000
I0428 19:57:39.704264 28734 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:57:39.704306 28734 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:57:39.704311 28734 net.cpp:408] label_mnist_1_split <- label
I0428 19:57:39.704318 28734 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:57:39.704324 28734 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:57:39.704375 28734 net.cpp:124] Setting up label_mnist_1_split
I0428 19:57:39.704380 28734 net.cpp:131] Top shape: 100 (100)
I0428 19:57:39.704385 28734 net.cpp:131] Top shape: 100 (100)
I0428 19:57:39.704388 28734 net.cpp:139] Memory required for data: 314800
I0428 19:57:39.704391 28734 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:39.704401 28734 net.cpp:86] Creating Layer conv0
I0428 19:57:39.704406 28734 net.cpp:408] conv0 <- data
I0428 19:57:39.704412 28734 net.cpp:382] conv0 -> conv0
I0428 19:57:39.706135 28734 net.cpp:124] Setting up conv0
I0428 19:57:39.706151 28734 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:57:39.706154 28734 net.cpp:139] Memory required for data: 2618800
I0428 19:57:39.706164 28734 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:39.706173 28734 net.cpp:86] Creating Layer pool0
I0428 19:57:39.706177 28734 net.cpp:408] pool0 <- conv0
I0428 19:57:39.706182 28734 net.cpp:382] pool0 -> pool0
I0428 19:57:39.706225 28734 net.cpp:124] Setting up pool0
I0428 19:57:39.706231 28734 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:57:39.706234 28734 net.cpp:139] Memory required for data: 3194800
I0428 19:57:39.706238 28734 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:39.706248 28734 net.cpp:86] Creating Layer conv1
I0428 19:57:39.706251 28734 net.cpp:408] conv1 <- pool0
I0428 19:57:39.706257 28734 net.cpp:382] conv1 -> conv1
I0428 19:57:39.708436 28734 net.cpp:124] Setting up conv1
I0428 19:57:39.708451 28734 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:57:39.708457 28734 net.cpp:139] Memory required for data: 3322800
I0428 19:57:39.708467 28734 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:39.708475 28734 net.cpp:86] Creating Layer pool1
I0428 19:57:39.708479 28734 net.cpp:408] pool1 <- conv1
I0428 19:57:39.708484 28734 net.cpp:382] pool1 -> pool1
I0428 19:57:39.708534 28734 net.cpp:124] Setting up pool1
I0428 19:57:39.708539 28734 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:57:39.708542 28734 net.cpp:139] Memory required for data: 3354800
I0428 19:57:39.708546 28734 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:39.708561 28734 net.cpp:86] Creating Layer ip1
I0428 19:57:39.708565 28734 net.cpp:408] ip1 <- pool1
I0428 19:57:39.708570 28734 net.cpp:382] ip1 -> ip1
I0428 19:57:39.708703 28734 net.cpp:124] Setting up ip1
I0428 19:57:39.708711 28734 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:39.708725 28734 net.cpp:139] Memory required for data: 3358800
I0428 19:57:39.708734 28734 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:39.708740 28734 net.cpp:86] Creating Layer relu1
I0428 19:57:39.708744 28734 net.cpp:408] relu1 <- ip1
I0428 19:57:39.708748 28734 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:39.709043 28734 net.cpp:124] Setting up relu1
I0428 19:57:39.709053 28734 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:39.709056 28734 net.cpp:139] Memory required for data: 3362800
I0428 19:57:39.709060 28734 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:39.709069 28734 net.cpp:86] Creating Layer ip2
I0428 19:57:39.709072 28734 net.cpp:408] ip2 <- ip1
I0428 19:57:39.709079 28734 net.cpp:382] ip2 -> ip2
I0428 19:57:39.709193 28734 net.cpp:124] Setting up ip2
I0428 19:57:39.709203 28734 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:57:39.709206 28734 net.cpp:139] Memory required for data: 3372800
I0428 19:57:39.709211 28734 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:39.709216 28734 net.cpp:86] Creating Layer relu2
I0428 19:57:39.709220 28734 net.cpp:408] relu2 <- ip2
I0428 19:57:39.709224 28734 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:39.709396 28734 net.cpp:124] Setting up relu2
I0428 19:57:39.709406 28734 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:57:39.709410 28734 net.cpp:139] Memory required for data: 3382800
I0428 19:57:39.709414 28734 layer_factory.hpp:77] Creating layer ip3
I0428 19:57:39.709420 28734 net.cpp:86] Creating Layer ip3
I0428 19:57:39.709424 28734 net.cpp:408] ip3 <- ip2
I0428 19:57:39.709430 28734 net.cpp:382] ip3 -> ip3
I0428 19:57:39.709539 28734 net.cpp:124] Setting up ip3
I0428 19:57:39.709547 28734 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:39.709549 28734 net.cpp:139] Memory required for data: 3386800
I0428 19:57:39.709560 28734 layer_factory.hpp:77] Creating layer relu3
I0428 19:57:39.709566 28734 net.cpp:86] Creating Layer relu3
I0428 19:57:39.709569 28734 net.cpp:408] relu3 <- ip3
I0428 19:57:39.709574 28734 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:57:39.710448 28734 net.cpp:124] Setting up relu3
I0428 19:57:39.710460 28734 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:39.710464 28734 net.cpp:139] Memory required for data: 3390800
I0428 19:57:39.710467 28734 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:57:39.710474 28734 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:57:39.710477 28734 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:57:39.710484 28734 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:57:39.710491 28734 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:57:39.710537 28734 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:57:39.710542 28734 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:39.710547 28734 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:39.710549 28734 net.cpp:139] Memory required for data: 3398800
I0428 19:57:39.710553 28734 layer_factory.hpp:77] Creating layer accuracy
I0428 19:57:39.710559 28734 net.cpp:86] Creating Layer accuracy
I0428 19:57:39.710562 28734 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:57:39.710567 28734 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:57:39.710572 28734 net.cpp:382] accuracy -> accuracy
I0428 19:57:39.710580 28734 net.cpp:124] Setting up accuracy
I0428 19:57:39.710585 28734 net.cpp:131] Top shape: (1)
I0428 19:57:39.710588 28734 net.cpp:139] Memory required for data: 3398804
I0428 19:57:39.710592 28734 layer_factory.hpp:77] Creating layer loss
I0428 19:57:39.710597 28734 net.cpp:86] Creating Layer loss
I0428 19:57:39.710600 28734 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:57:39.710603 28734 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:57:39.710608 28734 net.cpp:382] loss -> loss
I0428 19:57:39.710621 28734 layer_factory.hpp:77] Creating layer loss
I0428 19:57:39.710887 28734 net.cpp:124] Setting up loss
I0428 19:57:39.710898 28734 net.cpp:131] Top shape: (1)
I0428 19:57:39.710901 28734 net.cpp:134]     with loss weight 1
I0428 19:57:39.710908 28734 net.cpp:139] Memory required for data: 3398808
I0428 19:57:39.710922 28734 net.cpp:200] loss needs backward computation.
I0428 19:57:39.710927 28734 net.cpp:202] accuracy does not need backward computation.
I0428 19:57:39.710932 28734 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:57:39.710935 28734 net.cpp:200] relu3 needs backward computation.
I0428 19:57:39.710938 28734 net.cpp:200] ip3 needs backward computation.
I0428 19:57:39.710942 28734 net.cpp:200] relu2 needs backward computation.
I0428 19:57:39.710944 28734 net.cpp:200] ip2 needs backward computation.
I0428 19:57:39.710963 28734 net.cpp:200] relu1 needs backward computation.
I0428 19:57:39.710966 28734 net.cpp:200] ip1 needs backward computation.
I0428 19:57:39.710969 28734 net.cpp:200] pool1 needs backward computation.
I0428 19:57:39.710973 28734 net.cpp:200] conv1 needs backward computation.
I0428 19:57:39.710976 28734 net.cpp:200] pool0 needs backward computation.
I0428 19:57:39.710980 28734 net.cpp:200] conv0 needs backward computation.
I0428 19:57:39.710984 28734 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:57:39.710988 28734 net.cpp:202] mnist does not need backward computation.
I0428 19:57:39.710991 28734 net.cpp:244] This network produces output accuracy
I0428 19:57:39.711005 28734 net.cpp:244] This network produces output loss
I0428 19:57:39.711016 28734 net.cpp:257] Network initialization done.
I0428 19:57:39.711061 28734 solver.cpp:56] Solver scaffolding done.
I0428 19:57:39.711446 28734 caffe.cpp:248] Starting Optimization
I0428 19:57:39.711452 28734 solver.cpp:273] Solving LeNet
I0428 19:57:39.711462 28734 solver.cpp:274] Learning Rate Policy: inv
I0428 19:57:39.712340 28734 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:57:39.716140 28734 blocking_queue.cpp:49] Waiting for data
I0428 19:57:39.788079 28741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:39.788586 28734 solver.cpp:398]     Test net output #0: accuracy = 0.1126
I0428 19:57:39.788604 28734 solver.cpp:398]     Test net output #1: loss = 2.31301 (* 1 = 2.31301 loss)
I0428 19:57:39.791160 28734 solver.cpp:219] Iteration 0 (0 iter/s, 0.0796724s/100 iters), loss = 2.31761
I0428 19:57:39.791183 28734 solver.cpp:238]     Train net output #0: loss = 2.31761 (* 1 = 2.31761 loss)
I0428 19:57:39.791209 28734 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:57:39.868479 28734 solver.cpp:219] Iteration 100 (1293.92 iter/s, 0.0772844s/100 iters), loss = 0.766073
I0428 19:57:39.868504 28734 solver.cpp:238]     Train net output #0: loss = 0.766073 (* 1 = 0.766073 loss)
I0428 19:57:39.868510 28734 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:57:39.944399 28734 solver.cpp:219] Iteration 200 (1317.76 iter/s, 0.0758866s/100 iters), loss = 0.406152
I0428 19:57:39.944422 28734 solver.cpp:238]     Train net output #0: loss = 0.406152 (* 1 = 0.406152 loss)
I0428 19:57:39.944443 28734 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:57:40.020387 28734 solver.cpp:219] Iteration 300 (1316.55 iter/s, 0.0759562s/100 iters), loss = 0.376759
I0428 19:57:40.020409 28734 solver.cpp:238]     Train net output #0: loss = 0.376759 (* 1 = 0.376759 loss)
I0428 19:57:40.020416 28734 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:57:40.095984 28734 solver.cpp:219] Iteration 400 (1323.35 iter/s, 0.075566s/100 iters), loss = 0.197041
I0428 19:57:40.096007 28734 solver.cpp:238]     Train net output #0: loss = 0.197041 (* 1 = 0.197041 loss)
I0428 19:57:40.096012 28734 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:57:40.170199 28734 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:57:40.223624 28741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:40.224131 28734 solver.cpp:398]     Test net output #0: accuracy = 0.9228
I0428 19:57:40.224148 28734 solver.cpp:398]     Test net output #1: loss = 0.262518 (* 1 = 0.262518 loss)
I0428 19:57:40.224966 28734 solver.cpp:219] Iteration 500 (775.511 iter/s, 0.128947s/100 iters), loss = 0.30541
I0428 19:57:40.224988 28734 solver.cpp:238]     Train net output #0: loss = 0.30541 (* 1 = 0.30541 loss)
I0428 19:57:40.225016 28734 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:57:40.306270 28734 solver.cpp:219] Iteration 600 (1230.42 iter/s, 0.0812728s/100 iters), loss = 0.163786
I0428 19:57:40.306293 28734 solver.cpp:238]     Train net output #0: loss = 0.163786 (* 1 = 0.163786 loss)
I0428 19:57:40.306314 28734 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:57:40.390069 28734 solver.cpp:219] Iteration 700 (1193.84 iter/s, 0.0837632s/100 iters), loss = 0.22855
I0428 19:57:40.390100 28734 solver.cpp:238]     Train net output #0: loss = 0.22855 (* 1 = 0.22855 loss)
I0428 19:57:40.390110 28734 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:57:40.466927 28734 solver.cpp:219] Iteration 800 (1301.77 iter/s, 0.0768184s/100 iters), loss = 0.231642
I0428 19:57:40.466953 28734 solver.cpp:238]     Train net output #0: loss = 0.231642 (* 1 = 0.231642 loss)
I0428 19:57:40.466958 28734 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:57:40.542330 28734 solver.cpp:219] Iteration 900 (1326.82 iter/s, 0.0753684s/100 iters), loss = 0.309638
I0428 19:57:40.542369 28734 solver.cpp:238]     Train net output #0: loss = 0.309638 (* 1 = 0.309638 loss)
I0428 19:57:40.542376 28734 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:57:40.567730 28740 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:40.617100 28734 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:57:40.617831 28734 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:57:40.618278 28734 solver.cpp:311] Iteration 1000, loss = 0.21034
I0428 19:57:40.618296 28734 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:57:40.695710 28741 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:40.696229 28734 solver.cpp:398]     Test net output #0: accuracy = 0.948
I0428 19:57:40.696247 28734 solver.cpp:398]     Test net output #1: loss = 0.169435 (* 1 = 0.169435 loss)
I0428 19:57:40.696252 28734 solver.cpp:316] Optimization Done.
I0428 19:57:40.696255 28734 caffe.cpp:259] Optimization Done.
