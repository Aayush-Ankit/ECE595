I0428 20:07:14.553041 31057 caffe.cpp:218] Using GPUs 0
I0428 20:07:14.589136 31057 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:15.098350 31057 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1050.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:15.098505 31057 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1050.prototxt
I0428 20:07:15.099169 31057 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:15.099197 31057 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:15.099357 31057 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:15.099474 31057 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:15.099611 31057 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:15.099645 31057 net.cpp:86] Creating Layer mnist
I0428 20:07:15.099658 31057 net.cpp:382] mnist -> data
I0428 20:07:15.099692 31057 net.cpp:382] mnist -> label
I0428 20:07:15.101291 31057 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:15.104130 31057 net.cpp:124] Setting up mnist
I0428 20:07:15.104147 31057 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:15.104154 31057 net.cpp:131] Top shape: 64 (64)
I0428 20:07:15.104157 31057 net.cpp:139] Memory required for data: 200960
I0428 20:07:15.104164 31057 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:15.104182 31057 net.cpp:86] Creating Layer conv0
I0428 20:07:15.104208 31057 net.cpp:408] conv0 <- data
I0428 20:07:15.104228 31057 net.cpp:382] conv0 -> conv0
I0428 20:07:15.395025 31057 net.cpp:124] Setting up conv0
I0428 20:07:15.395056 31057 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:15.395061 31057 net.cpp:139] Memory required for data: 3887360
I0428 20:07:15.395079 31057 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:15.395094 31057 net.cpp:86] Creating Layer pool0
I0428 20:07:15.395099 31057 net.cpp:408] pool0 <- conv0
I0428 20:07:15.395107 31057 net.cpp:382] pool0 -> pool0
I0428 20:07:15.395174 31057 net.cpp:124] Setting up pool0
I0428 20:07:15.395190 31057 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:15.395196 31057 net.cpp:139] Memory required for data: 4808960
I0428 20:07:15.395203 31057 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:15.395221 31057 net.cpp:86] Creating Layer conv1
I0428 20:07:15.395232 31057 net.cpp:408] conv1 <- pool0
I0428 20:07:15.395243 31057 net.cpp:382] conv1 -> conv1
I0428 20:07:15.398933 31057 net.cpp:124] Setting up conv1
I0428 20:07:15.398952 31057 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:15.398957 31057 net.cpp:139] Memory required for data: 4890880
I0428 20:07:15.398967 31057 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:15.398977 31057 net.cpp:86] Creating Layer pool1
I0428 20:07:15.398980 31057 net.cpp:408] pool1 <- conv1
I0428 20:07:15.398986 31057 net.cpp:382] pool1 -> pool1
I0428 20:07:15.399044 31057 net.cpp:124] Setting up pool1
I0428 20:07:15.399057 31057 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:15.399065 31057 net.cpp:139] Memory required for data: 4911360
I0428 20:07:15.399070 31057 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:15.399083 31057 net.cpp:86] Creating Layer ip1
I0428 20:07:15.399089 31057 net.cpp:408] ip1 <- pool1
I0428 20:07:15.399099 31057 net.cpp:382] ip1 -> ip1
I0428 20:07:15.399307 31057 net.cpp:124] Setting up ip1
I0428 20:07:15.399322 31057 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:15.399328 31057 net.cpp:139] Memory required for data: 4924160
I0428 20:07:15.399343 31057 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:15.399353 31057 net.cpp:86] Creating Layer relu1
I0428 20:07:15.399360 31057 net.cpp:408] relu1 <- ip1
I0428 20:07:15.399369 31057 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:15.399641 31057 net.cpp:124] Setting up relu1
I0428 20:07:15.399655 31057 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:15.399662 31057 net.cpp:139] Memory required for data: 4936960
I0428 20:07:15.399668 31057 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:15.399679 31057 net.cpp:86] Creating Layer ip2
I0428 20:07:15.399685 31057 net.cpp:408] ip2 <- ip1
I0428 20:07:15.399695 31057 net.cpp:382] ip2 -> ip2
I0428 20:07:15.399881 31057 net.cpp:124] Setting up ip2
I0428 20:07:15.399895 31057 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:15.399902 31057 net.cpp:139] Memory required for data: 4949760
I0428 20:07:15.399914 31057 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:15.399925 31057 net.cpp:86] Creating Layer relu2
I0428 20:07:15.399932 31057 net.cpp:408] relu2 <- ip2
I0428 20:07:15.399941 31057 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:15.401167 31057 net.cpp:124] Setting up relu2
I0428 20:07:15.401188 31057 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:15.401196 31057 net.cpp:139] Memory required for data: 4962560
I0428 20:07:15.401202 31057 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:15.401216 31057 net.cpp:86] Creating Layer ip3
I0428 20:07:15.401222 31057 net.cpp:408] ip3 <- ip2
I0428 20:07:15.401232 31057 net.cpp:382] ip3 -> ip3
I0428 20:07:15.401410 31057 net.cpp:124] Setting up ip3
I0428 20:07:15.401427 31057 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:15.401433 31057 net.cpp:139] Memory required for data: 4965120
I0428 20:07:15.401449 31057 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:15.401468 31057 net.cpp:86] Creating Layer relu3
I0428 20:07:15.401474 31057 net.cpp:408] relu3 <- ip3
I0428 20:07:15.401482 31057 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:15.401763 31057 net.cpp:124] Setting up relu3
I0428 20:07:15.401779 31057 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:15.401785 31057 net.cpp:139] Memory required for data: 4967680
I0428 20:07:15.401793 31057 layer_factory.hpp:77] Creating layer loss
I0428 20:07:15.401810 31057 net.cpp:86] Creating Layer loss
I0428 20:07:15.401816 31057 net.cpp:408] loss <- ip3
I0428 20:07:15.401824 31057 net.cpp:408] loss <- label
I0428 20:07:15.401834 31057 net.cpp:382] loss -> loss
I0428 20:07:15.401857 31057 layer_factory.hpp:77] Creating layer loss
I0428 20:07:15.402241 31057 net.cpp:124] Setting up loss
I0428 20:07:15.402256 31057 net.cpp:131] Top shape: (1)
I0428 20:07:15.402263 31057 net.cpp:134]     with loss weight 1
I0428 20:07:15.402284 31057 net.cpp:139] Memory required for data: 4967684
I0428 20:07:15.402292 31057 net.cpp:200] loss needs backward computation.
I0428 20:07:15.402298 31057 net.cpp:200] relu3 needs backward computation.
I0428 20:07:15.402304 31057 net.cpp:200] ip3 needs backward computation.
I0428 20:07:15.402310 31057 net.cpp:200] relu2 needs backward computation.
I0428 20:07:15.402317 31057 net.cpp:200] ip2 needs backward computation.
I0428 20:07:15.402323 31057 net.cpp:200] relu1 needs backward computation.
I0428 20:07:15.402328 31057 net.cpp:200] ip1 needs backward computation.
I0428 20:07:15.402334 31057 net.cpp:200] pool1 needs backward computation.
I0428 20:07:15.402340 31057 net.cpp:200] conv1 needs backward computation.
I0428 20:07:15.402346 31057 net.cpp:200] pool0 needs backward computation.
I0428 20:07:15.402353 31057 net.cpp:200] conv0 needs backward computation.
I0428 20:07:15.402359 31057 net.cpp:202] mnist does not need backward computation.
I0428 20:07:15.402364 31057 net.cpp:244] This network produces output loss
I0428 20:07:15.402382 31057 net.cpp:257] Network initialization done.
I0428 20:07:15.402995 31057 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1050.prototxt
I0428 20:07:15.403046 31057 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:15.403228 31057 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:15.403378 31057 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:15.403450 31057 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:15.403470 31057 net.cpp:86] Creating Layer mnist
I0428 20:07:15.403479 31057 net.cpp:382] mnist -> data
I0428 20:07:15.403497 31057 net.cpp:382] mnist -> label
I0428 20:07:15.403641 31057 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:15.406527 31057 net.cpp:124] Setting up mnist
I0428 20:07:15.406543 31057 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:15.406549 31057 net.cpp:131] Top shape: 100 (100)
I0428 20:07:15.406553 31057 net.cpp:139] Memory required for data: 314000
I0428 20:07:15.406558 31057 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:15.406565 31057 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:15.406569 31057 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:15.406576 31057 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:15.406586 31057 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:15.406710 31057 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:15.406726 31057 net.cpp:131] Top shape: 100 (100)
I0428 20:07:15.406735 31057 net.cpp:131] Top shape: 100 (100)
I0428 20:07:15.406741 31057 net.cpp:139] Memory required for data: 314800
I0428 20:07:15.406747 31057 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:15.406766 31057 net.cpp:86] Creating Layer conv0
I0428 20:07:15.406780 31057 net.cpp:408] conv0 <- data
I0428 20:07:15.406790 31057 net.cpp:382] conv0 -> conv0
I0428 20:07:15.409065 31057 net.cpp:124] Setting up conv0
I0428 20:07:15.409082 31057 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:15.409087 31057 net.cpp:139] Memory required for data: 6074800
I0428 20:07:15.409099 31057 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:15.409108 31057 net.cpp:86] Creating Layer pool0
I0428 20:07:15.409113 31057 net.cpp:408] pool0 <- conv0
I0428 20:07:15.409119 31057 net.cpp:382] pool0 -> pool0
I0428 20:07:15.409181 31057 net.cpp:124] Setting up pool0
I0428 20:07:15.409204 31057 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:15.409210 31057 net.cpp:139] Memory required for data: 7514800
I0428 20:07:15.409216 31057 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:15.409235 31057 net.cpp:86] Creating Layer conv1
I0428 20:07:15.409246 31057 net.cpp:408] conv1 <- pool0
I0428 20:07:15.409260 31057 net.cpp:382] conv1 -> conv1
I0428 20:07:15.412235 31057 net.cpp:124] Setting up conv1
I0428 20:07:15.412251 31057 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:15.412256 31057 net.cpp:139] Memory required for data: 7642800
I0428 20:07:15.412266 31057 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:15.412276 31057 net.cpp:86] Creating Layer pool1
I0428 20:07:15.412281 31057 net.cpp:408] pool1 <- conv1
I0428 20:07:15.412286 31057 net.cpp:382] pool1 -> pool1
I0428 20:07:15.412398 31057 net.cpp:124] Setting up pool1
I0428 20:07:15.412415 31057 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:15.412422 31057 net.cpp:139] Memory required for data: 7674800
I0428 20:07:15.412430 31057 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:15.412441 31057 net.cpp:86] Creating Layer ip1
I0428 20:07:15.412449 31057 net.cpp:408] ip1 <- pool1
I0428 20:07:15.412464 31057 net.cpp:382] ip1 -> ip1
I0428 20:07:15.412690 31057 net.cpp:124] Setting up ip1
I0428 20:07:15.412704 31057 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:15.412731 31057 net.cpp:139] Memory required for data: 7694800
I0428 20:07:15.412746 31057 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:15.412756 31057 net.cpp:86] Creating Layer relu1
I0428 20:07:15.412762 31057 net.cpp:408] relu1 <- ip1
I0428 20:07:15.412773 31057 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:15.413069 31057 net.cpp:124] Setting up relu1
I0428 20:07:15.413087 31057 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:15.413094 31057 net.cpp:139] Memory required for data: 7714800
I0428 20:07:15.413100 31057 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:15.413113 31057 net.cpp:86] Creating Layer ip2
I0428 20:07:15.413121 31057 net.cpp:408] ip2 <- ip1
I0428 20:07:15.413131 31057 net.cpp:382] ip2 -> ip2
I0428 20:07:15.413369 31057 net.cpp:124] Setting up ip2
I0428 20:07:15.413386 31057 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:15.413393 31057 net.cpp:139] Memory required for data: 7734800
I0428 20:07:15.413404 31057 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:15.413414 31057 net.cpp:86] Creating Layer relu2
I0428 20:07:15.413420 31057 net.cpp:408] relu2 <- ip2
I0428 20:07:15.413431 31057 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:15.413709 31057 net.cpp:124] Setting up relu2
I0428 20:07:15.413724 31057 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:15.413730 31057 net.cpp:139] Memory required for data: 7754800
I0428 20:07:15.413738 31057 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:15.413749 31057 net.cpp:86] Creating Layer ip3
I0428 20:07:15.413755 31057 net.cpp:408] ip3 <- ip2
I0428 20:07:15.413764 31057 net.cpp:382] ip3 -> ip3
I0428 20:07:15.413944 31057 net.cpp:124] Setting up ip3
I0428 20:07:15.413956 31057 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:15.413962 31057 net.cpp:139] Memory required for data: 7758800
I0428 20:07:15.413978 31057 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:15.413987 31057 net.cpp:86] Creating Layer relu3
I0428 20:07:15.413993 31057 net.cpp:408] relu3 <- ip3
I0428 20:07:15.414001 31057 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:15.415256 31057 net.cpp:124] Setting up relu3
I0428 20:07:15.415277 31057 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:15.415283 31057 net.cpp:139] Memory required for data: 7762800
I0428 20:07:15.415289 31057 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:15.415300 31057 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:15.415307 31057 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:15.415318 31057 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:15.415328 31057 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:15.415393 31057 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:15.415405 31057 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:15.415413 31057 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:15.415418 31057 net.cpp:139] Memory required for data: 7770800
I0428 20:07:15.415424 31057 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:15.415436 31057 net.cpp:86] Creating Layer accuracy
I0428 20:07:15.415442 31057 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:15.415451 31057 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:15.415459 31057 net.cpp:382] accuracy -> accuracy
I0428 20:07:15.415470 31057 net.cpp:124] Setting up accuracy
I0428 20:07:15.415478 31057 net.cpp:131] Top shape: (1)
I0428 20:07:15.415484 31057 net.cpp:139] Memory required for data: 7770804
I0428 20:07:15.415490 31057 layer_factory.hpp:77] Creating layer loss
I0428 20:07:15.415498 31057 net.cpp:86] Creating Layer loss
I0428 20:07:15.415505 31057 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:15.415513 31057 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:15.415522 31057 net.cpp:382] loss -> loss
I0428 20:07:15.415534 31057 layer_factory.hpp:77] Creating layer loss
I0428 20:07:15.415947 31057 net.cpp:124] Setting up loss
I0428 20:07:15.415964 31057 net.cpp:131] Top shape: (1)
I0428 20:07:15.415971 31057 net.cpp:134]     with loss weight 1
I0428 20:07:15.415982 31057 net.cpp:139] Memory required for data: 7770808
I0428 20:07:15.416003 31057 net.cpp:200] loss needs backward computation.
I0428 20:07:15.416012 31057 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:15.416018 31057 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:15.416024 31057 net.cpp:200] relu3 needs backward computation.
I0428 20:07:15.416030 31057 net.cpp:200] ip3 needs backward computation.
I0428 20:07:15.416036 31057 net.cpp:200] relu2 needs backward computation.
I0428 20:07:15.416043 31057 net.cpp:200] ip2 needs backward computation.
I0428 20:07:15.416049 31057 net.cpp:200] relu1 needs backward computation.
I0428 20:07:15.416055 31057 net.cpp:200] ip1 needs backward computation.
I0428 20:07:15.416061 31057 net.cpp:200] pool1 needs backward computation.
I0428 20:07:15.416067 31057 net.cpp:200] conv1 needs backward computation.
I0428 20:07:15.416074 31057 net.cpp:200] pool0 needs backward computation.
I0428 20:07:15.416080 31057 net.cpp:200] conv0 needs backward computation.
I0428 20:07:15.416087 31057 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:15.416095 31057 net.cpp:202] mnist does not need backward computation.
I0428 20:07:15.416100 31057 net.cpp:244] This network produces output accuracy
I0428 20:07:15.416107 31057 net.cpp:244] This network produces output loss
I0428 20:07:15.416128 31057 net.cpp:257] Network initialization done.
I0428 20:07:15.416203 31057 solver.cpp:56] Solver scaffolding done.
I0428 20:07:15.416795 31057 caffe.cpp:248] Starting Optimization
I0428 20:07:15.416805 31057 solver.cpp:273] Solving LeNet
I0428 20:07:15.416820 31057 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:15.418058 31057 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:15.424707 31057 blocking_queue.cpp:49] Waiting for data
I0428 20:07:15.493794 31064 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:15.494640 31057 solver.cpp:398]     Test net output #0: accuracy = 0.1075
I0428 20:07:15.494678 31057 solver.cpp:398]     Test net output #1: loss = 2.31085 (* 1 = 2.31085 loss)
I0428 20:07:15.498960 31057 solver.cpp:219] Iteration 0 (-5.48757e-31 iter/s, 0.0821033s/100 iters), loss = 2.30654
I0428 20:07:15.498992 31057 solver.cpp:238]     Train net output #0: loss = 2.30654 (* 1 = 2.30654 loss)
I0428 20:07:15.499007 31057 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:15.587707 31057 solver.cpp:219] Iteration 100 (1127.33 iter/s, 0.088705s/100 iters), loss = 0.906839
I0428 20:07:15.587749 31057 solver.cpp:238]     Train net output #0: loss = 0.906839 (* 1 = 0.906839 loss)
I0428 20:07:15.587755 31057 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:15.675138 31057 solver.cpp:219] Iteration 200 (1144.44 iter/s, 0.0873789s/100 iters), loss = 0.422803
I0428 20:07:15.675163 31057 solver.cpp:238]     Train net output #0: loss = 0.422803 (* 1 = 0.422803 loss)
I0428 20:07:15.675168 31057 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:15.764240 31057 solver.cpp:219] Iteration 300 (1122.75 iter/s, 0.0890667s/100 iters), loss = 0.649597
I0428 20:07:15.764278 31057 solver.cpp:238]     Train net output #0: loss = 0.649597 (* 1 = 0.649597 loss)
I0428 20:07:15.764300 31057 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:15.853027 31057 solver.cpp:219] Iteration 400 (1126.71 iter/s, 0.0887542s/100 iters), loss = 0.340274
I0428 20:07:15.853067 31057 solver.cpp:238]     Train net output #0: loss = 0.340274 (* 1 = 0.340274 loss)
I0428 20:07:15.853073 31057 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:15.944133 31057 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:15.998615 31064 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:15.999361 31057 solver.cpp:398]     Test net output #0: accuracy = 0.8614
I0428 20:07:15.999402 31057 solver.cpp:398]     Test net output #1: loss = 0.380777 (* 1 = 0.380777 loss)
I0428 20:07:16.000568 31057 solver.cpp:219] Iteration 500 (677.947 iter/s, 0.147504s/100 iters), loss = 0.318943
I0428 20:07:16.000610 31057 solver.cpp:238]     Train net output #0: loss = 0.318943 (* 1 = 0.318943 loss)
I0428 20:07:16.000618 31057 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:16.096215 31057 solver.cpp:219] Iteration 600 (1046.06 iter/s, 0.0955965s/100 iters), loss = 0.229147
I0428 20:07:16.096272 31057 solver.cpp:238]     Train net output #0: loss = 0.229147 (* 1 = 0.229147 loss)
I0428 20:07:16.096278 31057 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:16.189050 31057 solver.cpp:219] Iteration 700 (1077.78 iter/s, 0.0927836s/100 iters), loss = 0.279452
I0428 20:07:16.189093 31057 solver.cpp:238]     Train net output #0: loss = 0.279452 (* 1 = 0.279452 loss)
I0428 20:07:16.189100 31057 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:16.278563 31057 solver.cpp:219] Iteration 800 (1117.81 iter/s, 0.0894607s/100 iters), loss = 0.604914
I0428 20:07:16.278604 31057 solver.cpp:238]     Train net output #0: loss = 0.604914 (* 1 = 0.604914 loss)
I0428 20:07:16.278610 31057 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:16.366628 31057 solver.cpp:219] Iteration 900 (1136.17 iter/s, 0.0880148s/100 iters), loss = 0.488984
I0428 20:07:16.366668 31057 solver.cpp:238]     Train net output #0: loss = 0.488984 (* 1 = 0.488984 loss)
I0428 20:07:16.366675 31057 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:16.396152 31063 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:16.452940 31057 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:16.453980 31057 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:16.454772 31057 solver.cpp:311] Iteration 1000, loss = 0.347446
I0428 20:07:16.454789 31057 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:16.509004 31064 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:16.509784 31057 solver.cpp:398]     Test net output #0: accuracy = 0.8747
I0428 20:07:16.509824 31057 solver.cpp:398]     Test net output #1: loss = 0.329933 (* 1 = 0.329933 loss)
I0428 20:07:16.509834 31057 solver.cpp:316] Optimization Done.
I0428 20:07:16.509838 31057 caffe.cpp:259] Optimization Done.
