I0428 20:06:05.462687 30791 caffe.cpp:218] Using GPUs 0
I0428 20:06:05.498426 30791 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:06.010354 30791 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1018.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:06.010488 30791 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1018.prototxt
I0428 20:06:06.010876 30791 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:06.010892 30791 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:06.010984 30791 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:06:06.011057 30791 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:06.011160 30791 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:06.011183 30791 net.cpp:86] Creating Layer mnist
I0428 20:06:06.011193 30791 net.cpp:382] mnist -> data
I0428 20:06:06.011214 30791 net.cpp:382] mnist -> label
I0428 20:06:06.012343 30791 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:06.014829 30791 net.cpp:124] Setting up mnist
I0428 20:06:06.014853 30791 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:06.014869 30791 net.cpp:131] Top shape: 64 (64)
I0428 20:06:06.014873 30791 net.cpp:139] Memory required for data: 200960
I0428 20:06:06.014880 30791 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:06.014897 30791 net.cpp:86] Creating Layer conv0
I0428 20:06:06.014904 30791 net.cpp:408] conv0 <- data
I0428 20:06:06.014919 30791 net.cpp:382] conv0 -> conv0
I0428 20:06:06.300187 30791 net.cpp:124] Setting up conv0
I0428 20:06:06.300216 30791 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:06.300228 30791 net.cpp:139] Memory required for data: 3887360
I0428 20:06:06.300274 30791 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:06.300295 30791 net.cpp:86] Creating Layer pool0
I0428 20:06:06.300300 30791 net.cpp:408] pool0 <- conv0
I0428 20:06:06.300307 30791 net.cpp:382] pool0 -> pool0
I0428 20:06:06.300361 30791 net.cpp:124] Setting up pool0
I0428 20:06:06.300369 30791 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:06.300374 30791 net.cpp:139] Memory required for data: 4808960
I0428 20:06:06.300377 30791 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:06.300390 30791 net.cpp:86] Creating Layer conv1
I0428 20:06:06.300395 30791 net.cpp:408] conv1 <- pool0
I0428 20:06:06.300401 30791 net.cpp:382] conv1 -> conv1
I0428 20:06:06.303536 30791 net.cpp:124] Setting up conv1
I0428 20:06:06.303555 30791 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:06.303558 30791 net.cpp:139] Memory required for data: 4890880
I0428 20:06:06.303570 30791 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:06.303578 30791 net.cpp:86] Creating Layer pool1
I0428 20:06:06.303582 30791 net.cpp:408] pool1 <- conv1
I0428 20:06:06.303588 30791 net.cpp:382] pool1 -> pool1
I0428 20:06:06.303632 30791 net.cpp:124] Setting up pool1
I0428 20:06:06.303638 30791 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:06.303642 30791 net.cpp:139] Memory required for data: 4911360
I0428 20:06:06.303647 30791 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:06.303654 30791 net.cpp:86] Creating Layer ip1
I0428 20:06:06.303658 30791 net.cpp:408] ip1 <- pool1
I0428 20:06:06.303664 30791 net.cpp:382] ip1 -> ip1
I0428 20:06:06.303778 30791 net.cpp:124] Setting up ip1
I0428 20:06:06.303786 30791 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:06.303791 30791 net.cpp:139] Memory required for data: 4913920
I0428 20:06:06.303798 30791 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:06.303805 30791 net.cpp:86] Creating Layer relu1
I0428 20:06:06.303809 30791 net.cpp:408] relu1 <- ip1
I0428 20:06:06.303814 30791 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:06.304013 30791 net.cpp:124] Setting up relu1
I0428 20:06:06.304023 30791 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:06.304026 30791 net.cpp:139] Memory required for data: 4916480
I0428 20:06:06.304030 30791 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:06.304038 30791 net.cpp:86] Creating Layer ip2
I0428 20:06:06.304041 30791 net.cpp:408] ip2 <- ip1
I0428 20:06:06.304047 30791 net.cpp:382] ip2 -> ip2
I0428 20:06:06.304157 30791 net.cpp:124] Setting up ip2
I0428 20:06:06.304165 30791 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:06.304169 30791 net.cpp:139] Memory required for data: 4919040
I0428 20:06:06.304175 30791 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:06.304183 30791 net.cpp:86] Creating Layer relu2
I0428 20:06:06.304186 30791 net.cpp:408] relu2 <- ip2
I0428 20:06:06.304191 30791 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:06.305033 30791 net.cpp:124] Setting up relu2
I0428 20:06:06.305047 30791 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:06.305052 30791 net.cpp:139] Memory required for data: 4921600
I0428 20:06:06.305057 30791 layer_factory.hpp:77] Creating layer loss
I0428 20:06:06.305064 30791 net.cpp:86] Creating Layer loss
I0428 20:06:06.305068 30791 net.cpp:408] loss <- ip2
I0428 20:06:06.305073 30791 net.cpp:408] loss <- label
I0428 20:06:06.305079 30791 net.cpp:382] loss -> loss
I0428 20:06:06.305099 30791 layer_factory.hpp:77] Creating layer loss
I0428 20:06:06.305371 30791 net.cpp:124] Setting up loss
I0428 20:06:06.305382 30791 net.cpp:131] Top shape: (1)
I0428 20:06:06.305387 30791 net.cpp:134]     with loss weight 1
I0428 20:06:06.305402 30791 net.cpp:139] Memory required for data: 4921604
I0428 20:06:06.305407 30791 net.cpp:200] loss needs backward computation.
I0428 20:06:06.305411 30791 net.cpp:200] relu2 needs backward computation.
I0428 20:06:06.305414 30791 net.cpp:200] ip2 needs backward computation.
I0428 20:06:06.305418 30791 net.cpp:200] relu1 needs backward computation.
I0428 20:06:06.305423 30791 net.cpp:200] ip1 needs backward computation.
I0428 20:06:06.305441 30791 net.cpp:200] pool1 needs backward computation.
I0428 20:06:06.305446 30791 net.cpp:200] conv1 needs backward computation.
I0428 20:06:06.305450 30791 net.cpp:200] pool0 needs backward computation.
I0428 20:06:06.305454 30791 net.cpp:200] conv0 needs backward computation.
I0428 20:06:06.305459 30791 net.cpp:202] mnist does not need backward computation.
I0428 20:06:06.305461 30791 net.cpp:244] This network produces output loss
I0428 20:06:06.305472 30791 net.cpp:257] Network initialization done.
I0428 20:06:06.305807 30791 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1018.prototxt
I0428 20:06:06.305835 30791 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:06.305936 30791 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:06:06.306010 30791 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:06.306071 30791 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:06.306084 30791 net.cpp:86] Creating Layer mnist
I0428 20:06:06.306089 30791 net.cpp:382] mnist -> data
I0428 20:06:06.306098 30791 net.cpp:382] mnist -> label
I0428 20:06:06.306195 30791 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:06.308557 30791 net.cpp:124] Setting up mnist
I0428 20:06:06.308573 30791 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:06.308578 30791 net.cpp:131] Top shape: 100 (100)
I0428 20:06:06.308583 30791 net.cpp:139] Memory required for data: 314000
I0428 20:06:06.308588 30791 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:06.308595 30791 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:06.308599 30791 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:06.308605 30791 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:06.308614 30791 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:06.308715 30791 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:06.308737 30791 net.cpp:131] Top shape: 100 (100)
I0428 20:06:06.308742 30791 net.cpp:131] Top shape: 100 (100)
I0428 20:06:06.308745 30791 net.cpp:139] Memory required for data: 314800
I0428 20:06:06.308749 30791 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:06.308759 30791 net.cpp:86] Creating Layer conv0
I0428 20:06:06.308763 30791 net.cpp:408] conv0 <- data
I0428 20:06:06.308769 30791 net.cpp:382] conv0 -> conv0
I0428 20:06:06.310453 30791 net.cpp:124] Setting up conv0
I0428 20:06:06.310470 30791 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:06.310475 30791 net.cpp:139] Memory required for data: 6074800
I0428 20:06:06.310485 30791 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:06.310493 30791 net.cpp:86] Creating Layer pool0
I0428 20:06:06.310497 30791 net.cpp:408] pool0 <- conv0
I0428 20:06:06.310503 30791 net.cpp:382] pool0 -> pool0
I0428 20:06:06.310544 30791 net.cpp:124] Setting up pool0
I0428 20:06:06.310552 30791 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:06.310556 30791 net.cpp:139] Memory required for data: 7514800
I0428 20:06:06.310560 30791 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:06.310570 30791 net.cpp:86] Creating Layer conv1
I0428 20:06:06.310576 30791 net.cpp:408] conv1 <- pool0
I0428 20:06:06.310582 30791 net.cpp:382] conv1 -> conv1
I0428 20:06:06.312993 30791 net.cpp:124] Setting up conv1
I0428 20:06:06.313007 30791 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:06.313012 30791 net.cpp:139] Memory required for data: 7642800
I0428 20:06:06.313022 30791 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:06.313031 30791 net.cpp:86] Creating Layer pool1
I0428 20:06:06.313043 30791 net.cpp:408] pool1 <- conv1
I0428 20:06:06.313050 30791 net.cpp:382] pool1 -> pool1
I0428 20:06:06.313094 30791 net.cpp:124] Setting up pool1
I0428 20:06:06.313107 30791 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:06.313112 30791 net.cpp:139] Memory required for data: 7674800
I0428 20:06:06.313114 30791 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:06.313133 30791 net.cpp:86] Creating Layer ip1
I0428 20:06:06.313138 30791 net.cpp:408] ip1 <- pool1
I0428 20:06:06.313144 30791 net.cpp:382] ip1 -> ip1
I0428 20:06:06.313263 30791 net.cpp:124] Setting up ip1
I0428 20:06:06.313273 30791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:06.313277 30791 net.cpp:139] Memory required for data: 7678800
I0428 20:06:06.313287 30791 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:06.313292 30791 net.cpp:86] Creating Layer relu1
I0428 20:06:06.313297 30791 net.cpp:408] relu1 <- ip1
I0428 20:06:06.313302 30791 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:06.313493 30791 net.cpp:124] Setting up relu1
I0428 20:06:06.313503 30791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:06.313506 30791 net.cpp:139] Memory required for data: 7682800
I0428 20:06:06.313510 30791 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:06.313519 30791 net.cpp:86] Creating Layer ip2
I0428 20:06:06.313524 30791 net.cpp:408] ip2 <- ip1
I0428 20:06:06.313529 30791 net.cpp:382] ip2 -> ip2
I0428 20:06:06.313640 30791 net.cpp:124] Setting up ip2
I0428 20:06:06.313648 30791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:06.313652 30791 net.cpp:139] Memory required for data: 7686800
I0428 20:06:06.313658 30791 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:06.313663 30791 net.cpp:86] Creating Layer relu2
I0428 20:06:06.313675 30791 net.cpp:408] relu2 <- ip2
I0428 20:06:06.313680 30791 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:06.313887 30791 net.cpp:124] Setting up relu2
I0428 20:06:06.313897 30791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:06.313901 30791 net.cpp:139] Memory required for data: 7690800
I0428 20:06:06.313905 30791 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:06:06.313912 30791 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:06:06.313915 30791 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:06:06.313921 30791 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:06:06.313941 30791 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:06:06.314012 30791 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:06:06.314019 30791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:06.314024 30791 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:06.314028 30791 net.cpp:139] Memory required for data: 7698800
I0428 20:06:06.314031 30791 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:06.314038 30791 net.cpp:86] Creating Layer accuracy
I0428 20:06:06.314041 30791 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:06:06.314046 30791 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:06.314051 30791 net.cpp:382] accuracy -> accuracy
I0428 20:06:06.314059 30791 net.cpp:124] Setting up accuracy
I0428 20:06:06.314064 30791 net.cpp:131] Top shape: (1)
I0428 20:06:06.314069 30791 net.cpp:139] Memory required for data: 7698804
I0428 20:06:06.314072 30791 layer_factory.hpp:77] Creating layer loss
I0428 20:06:06.314090 30791 net.cpp:86] Creating Layer loss
I0428 20:06:06.314093 30791 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:06:06.314098 30791 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:06.314103 30791 net.cpp:382] loss -> loss
I0428 20:06:06.314110 30791 layer_factory.hpp:77] Creating layer loss
I0428 20:06:06.314384 30791 net.cpp:124] Setting up loss
I0428 20:06:06.314395 30791 net.cpp:131] Top shape: (1)
I0428 20:06:06.314399 30791 net.cpp:134]     with loss weight 1
I0428 20:06:06.314407 30791 net.cpp:139] Memory required for data: 7698808
I0428 20:06:06.314411 30791 net.cpp:200] loss needs backward computation.
I0428 20:06:06.314416 30791 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:06.314421 30791 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:06:06.314425 30791 net.cpp:200] relu2 needs backward computation.
I0428 20:06:06.314429 30791 net.cpp:200] ip2 needs backward computation.
I0428 20:06:06.314443 30791 net.cpp:200] relu1 needs backward computation.
I0428 20:06:06.314446 30791 net.cpp:200] ip1 needs backward computation.
I0428 20:06:06.314450 30791 net.cpp:200] pool1 needs backward computation.
I0428 20:06:06.314455 30791 net.cpp:200] conv1 needs backward computation.
I0428 20:06:06.314458 30791 net.cpp:200] pool0 needs backward computation.
I0428 20:06:06.314462 30791 net.cpp:200] conv0 needs backward computation.
I0428 20:06:06.314476 30791 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:06.314481 30791 net.cpp:202] mnist does not need backward computation.
I0428 20:06:06.314484 30791 net.cpp:244] This network produces output accuracy
I0428 20:06:06.314488 30791 net.cpp:244] This network produces output loss
I0428 20:06:06.314499 30791 net.cpp:257] Network initialization done.
I0428 20:06:06.314543 30791 solver.cpp:56] Solver scaffolding done.
I0428 20:06:06.314859 30791 caffe.cpp:248] Starting Optimization
I0428 20:06:06.314865 30791 solver.cpp:273] Solving LeNet
I0428 20:06:06.314869 30791 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:06.315800 30791 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:06.321643 30791 blocking_queue.cpp:49] Waiting for data
I0428 20:06:06.390723 30798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:06.391326 30791 solver.cpp:398]     Test net output #0: accuracy = 0.1237
I0428 20:06:06.391350 30791 solver.cpp:398]     Test net output #1: loss = 2.31021 (* 1 = 2.31021 loss)
I0428 20:06:06.395200 30791 solver.cpp:219] Iteration 0 (0 iter/s, 0.0803s/100 iters), loss = 2.3156
I0428 20:06:06.395228 30791 solver.cpp:238]     Train net output #0: loss = 2.3156 (* 1 = 2.3156 loss)
I0428 20:06:06.395241 30791 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:06.479773 30791 solver.cpp:219] Iteration 100 (1182.98 iter/s, 0.0845322s/100 iters), loss = 0.557038
I0428 20:06:06.479822 30791 solver.cpp:238]     Train net output #0: loss = 0.557038 (* 1 = 0.557038 loss)
I0428 20:06:06.479830 30791 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:06.564519 30791 solver.cpp:219] Iteration 200 (1180.63 iter/s, 0.0847003s/100 iters), loss = 0.434443
I0428 20:06:06.564574 30791 solver.cpp:238]     Train net output #0: loss = 0.434443 (* 1 = 0.434443 loss)
I0428 20:06:06.564581 30791 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:06.648759 30791 solver.cpp:219] Iteration 300 (1187.86 iter/s, 0.0841852s/100 iters), loss = 0.283792
I0428 20:06:06.648788 30791 solver.cpp:238]     Train net output #0: loss = 0.283792 (* 1 = 0.283792 loss)
I0428 20:06:06.648797 30791 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:06.733139 30791 solver.cpp:219] Iteration 400 (1185.78 iter/s, 0.0843325s/100 iters), loss = 0.309338
I0428 20:06:06.733166 30791 solver.cpp:238]     Train net output #0: loss = 0.309338 (* 1 = 0.309338 loss)
I0428 20:06:06.733175 30791 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:06.816061 30791 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:06.869879 30798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:06.870476 30791 solver.cpp:398]     Test net output #0: accuracy = 0.9433
I0428 20:06:06.870494 30791 solver.cpp:398]     Test net output #1: loss = 0.188222 (* 1 = 0.188222 loss)
I0428 20:06:06.871381 30791 solver.cpp:219] Iteration 500 (723.572 iter/s, 0.138203s/100 iters), loss = 0.21407
I0428 20:06:06.871423 30791 solver.cpp:238]     Train net output #0: loss = 0.21407 (* 1 = 0.21407 loss)
I0428 20:06:06.871429 30791 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:06.952673 30791 solver.cpp:219] Iteration 600 (1230.64 iter/s, 0.0812585s/100 iters), loss = 0.173956
I0428 20:06:06.952697 30791 solver.cpp:238]     Train net output #0: loss = 0.173956 (* 1 = 0.173956 loss)
I0428 20:06:06.952704 30791 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:07.041607 30791 solver.cpp:219] Iteration 700 (1124.85 iter/s, 0.0889005s/100 iters), loss = 0.352885
I0428 20:06:07.041646 30791 solver.cpp:238]     Train net output #0: loss = 0.352885 (* 1 = 0.352885 loss)
I0428 20:06:07.041653 30791 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:07.126155 30791 solver.cpp:219] Iteration 800 (1183.21 iter/s, 0.0845159s/100 iters), loss = 0.325153
I0428 20:06:07.126196 30791 solver.cpp:238]     Train net output #0: loss = 0.325153 (* 1 = 0.325153 loss)
I0428 20:06:07.126202 30791 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:07.212234 30791 solver.cpp:219] Iteration 900 (1162.19 iter/s, 0.0860447s/100 iters), loss = 0.19577
I0428 20:06:07.212275 30791 solver.cpp:238]     Train net output #0: loss = 0.19577 (* 1 = 0.19577 loss)
I0428 20:06:07.212283 30791 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:07.244704 30797 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:07.302913 30791 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:07.303611 30791 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:07.304113 30791 solver.cpp:311] Iteration 1000, loss = 0.10587
I0428 20:06:07.304131 30791 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:07.358412 30798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:07.358969 30791 solver.cpp:398]     Test net output #0: accuracy = 0.9676
I0428 20:06:07.359006 30791 solver.cpp:398]     Test net output #1: loss = 0.112856 (* 1 = 0.112856 loss)
I0428 20:06:07.359012 30791 solver.cpp:316] Optimization Done.
I0428 20:06:07.359015 30791 caffe.cpp:259] Optimization Done.
