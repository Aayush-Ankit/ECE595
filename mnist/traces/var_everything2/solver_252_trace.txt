I0428 19:37:02.024441 23762 caffe.cpp:218] Using GPUs 0
I0428 19:37:02.062029 23762 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:02.581718 23762 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test252.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:02.581876 23762 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test252.prototxt
I0428 19:37:02.582278 23762 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:02.582296 23762 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:02.582391 23762 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:02.582473 23762 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:02.582569 23762 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:02.582593 23762 net.cpp:86] Creating Layer mnist
I0428 19:37:02.582602 23762 net.cpp:382] mnist -> data
I0428 19:37:02.582625 23762 net.cpp:382] mnist -> label
I0428 19:37:02.583880 23762 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:02.586762 23762 net.cpp:124] Setting up mnist
I0428 19:37:02.586812 23762 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:02.586817 23762 net.cpp:131] Top shape: 64 (64)
I0428 19:37:02.586822 23762 net.cpp:139] Memory required for data: 200960
I0428 19:37:02.586830 23762 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:02.586848 23762 net.cpp:86] Creating Layer conv0
I0428 19:37:02.586854 23762 net.cpp:408] conv0 <- data
I0428 19:37:02.586884 23762 net.cpp:382] conv0 -> conv0
I0428 19:37:02.877750 23762 net.cpp:124] Setting up conv0
I0428 19:37:02.877813 23762 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:02.877818 23762 net.cpp:139] Memory required for data: 14946560
I0428 19:37:02.877840 23762 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:02.877856 23762 net.cpp:86] Creating Layer pool0
I0428 19:37:02.877882 23762 net.cpp:408] pool0 <- conv0
I0428 19:37:02.877889 23762 net.cpp:382] pool0 -> pool0
I0428 19:37:02.877945 23762 net.cpp:124] Setting up pool0
I0428 19:37:02.877955 23762 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:02.877960 23762 net.cpp:139] Memory required for data: 18632960
I0428 19:37:02.877964 23762 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:02.877974 23762 net.cpp:86] Creating Layer ip1
I0428 19:37:02.877979 23762 net.cpp:408] ip1 <- pool0
I0428 19:37:02.877985 23762 net.cpp:382] ip1 -> ip1
I0428 19:37:02.880616 23762 net.cpp:124] Setting up ip1
I0428 19:37:02.880661 23762 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:02.880666 23762 net.cpp:139] Memory required for data: 18635520
I0428 19:37:02.880676 23762 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:02.880686 23762 net.cpp:86] Creating Layer relu1
I0428 19:37:02.880692 23762 net.cpp:408] relu1 <- ip1
I0428 19:37:02.880698 23762 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:02.880982 23762 net.cpp:124] Setting up relu1
I0428 19:37:02.880996 23762 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:02.881001 23762 net.cpp:139] Memory required for data: 18638080
I0428 19:37:02.881007 23762 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:02.881018 23762 net.cpp:86] Creating Layer ip2
I0428 19:37:02.881023 23762 net.cpp:408] ip2 <- ip1
I0428 19:37:02.881032 23762 net.cpp:382] ip2 -> ip2
I0428 19:37:02.881216 23762 net.cpp:124] Setting up ip2
I0428 19:37:02.881225 23762 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:02.881229 23762 net.cpp:139] Memory required for data: 18650880
I0428 19:37:02.881239 23762 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:02.881247 23762 net.cpp:86] Creating Layer relu2
I0428 19:37:02.881252 23762 net.cpp:408] relu2 <- ip2
I0428 19:37:02.881258 23762 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:02.882277 23762 net.cpp:124] Setting up relu2
I0428 19:37:02.882306 23762 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:02.882310 23762 net.cpp:139] Memory required for data: 18663680
I0428 19:37:02.882315 23762 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:02.882326 23762 net.cpp:86] Creating Layer ip3
I0428 19:37:02.882330 23762 net.cpp:408] ip3 <- ip2
I0428 19:37:02.882339 23762 net.cpp:382] ip3 -> ip3
I0428 19:37:02.882496 23762 net.cpp:124] Setting up ip3
I0428 19:37:02.882506 23762 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:02.882510 23762 net.cpp:139] Memory required for data: 18666240
I0428 19:37:02.882519 23762 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:02.882527 23762 net.cpp:86] Creating Layer relu3
I0428 19:37:02.882531 23762 net.cpp:408] relu3 <- ip3
I0428 19:37:02.882539 23762 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:02.882751 23762 net.cpp:124] Setting up relu3
I0428 19:37:02.882762 23762 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:02.882766 23762 net.cpp:139] Memory required for data: 18668800
I0428 19:37:02.882771 23762 layer_factory.hpp:77] Creating layer loss
I0428 19:37:02.882779 23762 net.cpp:86] Creating Layer loss
I0428 19:37:02.882784 23762 net.cpp:408] loss <- ip3
I0428 19:37:02.882789 23762 net.cpp:408] loss <- label
I0428 19:37:02.882798 23762 net.cpp:382] loss -> loss
I0428 19:37:02.882819 23762 layer_factory.hpp:77] Creating layer loss
I0428 19:37:02.883163 23762 net.cpp:124] Setting up loss
I0428 19:37:02.883174 23762 net.cpp:131] Top shape: (1)
I0428 19:37:02.883194 23762 net.cpp:134]     with loss weight 1
I0428 19:37:02.883211 23762 net.cpp:139] Memory required for data: 18668804
I0428 19:37:02.883216 23762 net.cpp:200] loss needs backward computation.
I0428 19:37:02.883220 23762 net.cpp:200] relu3 needs backward computation.
I0428 19:37:02.883224 23762 net.cpp:200] ip3 needs backward computation.
I0428 19:37:02.883244 23762 net.cpp:200] relu2 needs backward computation.
I0428 19:37:02.883247 23762 net.cpp:200] ip2 needs backward computation.
I0428 19:37:02.883252 23762 net.cpp:200] relu1 needs backward computation.
I0428 19:37:02.883255 23762 net.cpp:200] ip1 needs backward computation.
I0428 19:37:02.883271 23762 net.cpp:200] pool0 needs backward computation.
I0428 19:37:02.883275 23762 net.cpp:200] conv0 needs backward computation.
I0428 19:37:02.883280 23762 net.cpp:202] mnist does not need backward computation.
I0428 19:37:02.883285 23762 net.cpp:244] This network produces output loss
I0428 19:37:02.883297 23762 net.cpp:257] Network initialization done.
I0428 19:37:02.883738 23762 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test252.prototxt
I0428 19:37:02.883816 23762 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:02.883929 23762 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:02.884023 23762 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:02.884090 23762 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:02.884106 23762 net.cpp:86] Creating Layer mnist
I0428 19:37:02.884114 23762 net.cpp:382] mnist -> data
I0428 19:37:02.884137 23762 net.cpp:382] mnist -> label
I0428 19:37:02.884251 23762 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:02.885684 23762 net.cpp:124] Setting up mnist
I0428 19:37:02.885730 23762 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:02.885736 23762 net.cpp:131] Top shape: 100 (100)
I0428 19:37:02.885741 23762 net.cpp:139] Memory required for data: 314000
I0428 19:37:02.885761 23762 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:02.885776 23762 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:02.885779 23762 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:02.885787 23762 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:02.885794 23762 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:02.885898 23762 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:02.885908 23762 net.cpp:131] Top shape: 100 (100)
I0428 19:37:02.885915 23762 net.cpp:131] Top shape: 100 (100)
I0428 19:37:02.885918 23762 net.cpp:139] Memory required for data: 314800
I0428 19:37:02.885934 23762 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:02.885947 23762 net.cpp:86] Creating Layer conv0
I0428 19:37:02.885952 23762 net.cpp:408] conv0 <- data
I0428 19:37:02.885962 23762 net.cpp:382] conv0 -> conv0
I0428 19:37:02.888133 23762 net.cpp:124] Setting up conv0
I0428 19:37:02.888164 23762 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:02.888170 23762 net.cpp:139] Memory required for data: 23354800
I0428 19:37:02.888185 23762 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:02.888193 23762 net.cpp:86] Creating Layer pool0
I0428 19:37:02.888198 23762 net.cpp:408] pool0 <- conv0
I0428 19:37:02.888206 23762 net.cpp:382] pool0 -> pool0
I0428 19:37:02.888265 23762 net.cpp:124] Setting up pool0
I0428 19:37:02.888275 23762 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:02.888279 23762 net.cpp:139] Memory required for data: 29114800
I0428 19:37:02.888284 23762 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:02.888293 23762 net.cpp:86] Creating Layer ip1
I0428 19:37:02.888298 23762 net.cpp:408] ip1 <- pool0
I0428 19:37:02.888308 23762 net.cpp:382] ip1 -> ip1
I0428 19:37:02.891067 23762 net.cpp:124] Setting up ip1
I0428 19:37:02.891101 23762 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:02.891106 23762 net.cpp:139] Memory required for data: 29118800
I0428 19:37:02.891118 23762 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:02.891126 23762 net.cpp:86] Creating Layer relu1
I0428 19:37:02.891131 23762 net.cpp:408] relu1 <- ip1
I0428 19:37:02.891140 23762 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:02.891402 23762 net.cpp:124] Setting up relu1
I0428 19:37:02.891414 23762 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:02.891419 23762 net.cpp:139] Memory required for data: 29122800
I0428 19:37:02.891433 23762 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:02.891443 23762 net.cpp:86] Creating Layer ip2
I0428 19:37:02.891448 23762 net.cpp:408] ip2 <- ip1
I0428 19:37:02.891456 23762 net.cpp:382] ip2 -> ip2
I0428 19:37:02.891593 23762 net.cpp:124] Setting up ip2
I0428 19:37:02.891605 23762 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:02.891609 23762 net.cpp:139] Memory required for data: 29142800
I0428 19:37:02.891620 23762 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:02.891628 23762 net.cpp:86] Creating Layer relu2
I0428 19:37:02.891633 23762 net.cpp:408] relu2 <- ip2
I0428 19:37:02.891638 23762 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:02.892833 23762 net.cpp:124] Setting up relu2
I0428 19:37:02.892863 23762 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:02.892869 23762 net.cpp:139] Memory required for data: 29162800
I0428 19:37:02.892874 23762 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:02.892886 23762 net.cpp:86] Creating Layer ip3
I0428 19:37:02.892894 23762 net.cpp:408] ip3 <- ip2
I0428 19:37:02.892902 23762 net.cpp:382] ip3 -> ip3
I0428 19:37:02.893044 23762 net.cpp:124] Setting up ip3
I0428 19:37:02.893055 23762 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:02.893060 23762 net.cpp:139] Memory required for data: 29166800
I0428 19:37:02.893069 23762 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:02.893092 23762 net.cpp:86] Creating Layer relu3
I0428 19:37:02.893097 23762 net.cpp:408] relu3 <- ip3
I0428 19:37:02.893105 23762 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:02.893362 23762 net.cpp:124] Setting up relu3
I0428 19:37:02.893373 23762 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:02.893378 23762 net.cpp:139] Memory required for data: 29170800
I0428 19:37:02.893384 23762 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:02.893391 23762 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:02.893396 23762 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:02.893419 23762 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:02.893440 23762 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:02.893487 23762 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:02.893497 23762 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:02.893517 23762 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:02.893520 23762 net.cpp:139] Memory required for data: 29178800
I0428 19:37:02.893527 23762 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:02.893549 23762 net.cpp:86] Creating Layer accuracy
I0428 19:37:02.893554 23762 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:02.893560 23762 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:02.893566 23762 net.cpp:382] accuracy -> accuracy
I0428 19:37:02.893591 23762 net.cpp:124] Setting up accuracy
I0428 19:37:02.893597 23762 net.cpp:131] Top shape: (1)
I0428 19:37:02.893601 23762 net.cpp:139] Memory required for data: 29178804
I0428 19:37:02.893605 23762 layer_factory.hpp:77] Creating layer loss
I0428 19:37:02.893611 23762 net.cpp:86] Creating Layer loss
I0428 19:37:02.893616 23762 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:02.893621 23762 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:02.893626 23762 net.cpp:382] loss -> loss
I0428 19:37:02.893635 23762 layer_factory.hpp:77] Creating layer loss
I0428 19:37:02.894016 23762 net.cpp:124] Setting up loss
I0428 19:37:02.894027 23762 net.cpp:131] Top shape: (1)
I0428 19:37:02.894047 23762 net.cpp:134]     with loss weight 1
I0428 19:37:02.894055 23762 net.cpp:139] Memory required for data: 29178808
I0428 19:37:02.894060 23762 net.cpp:200] loss needs backward computation.
I0428 19:37:02.894065 23762 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:02.894071 23762 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:02.894075 23762 net.cpp:200] relu3 needs backward computation.
I0428 19:37:02.894079 23762 net.cpp:200] ip3 needs backward computation.
I0428 19:37:02.894083 23762 net.cpp:200] relu2 needs backward computation.
I0428 19:37:02.894088 23762 net.cpp:200] ip2 needs backward computation.
I0428 19:37:02.894091 23762 net.cpp:200] relu1 needs backward computation.
I0428 19:37:02.894098 23762 net.cpp:200] ip1 needs backward computation.
I0428 19:37:02.894103 23762 net.cpp:200] pool0 needs backward computation.
I0428 19:37:02.894106 23762 net.cpp:200] conv0 needs backward computation.
I0428 19:37:02.894111 23762 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:02.894116 23762 net.cpp:202] mnist does not need backward computation.
I0428 19:37:02.894120 23762 net.cpp:244] This network produces output accuracy
I0428 19:37:02.894125 23762 net.cpp:244] This network produces output loss
I0428 19:37:02.894137 23762 net.cpp:257] Network initialization done.
I0428 19:37:02.894201 23762 solver.cpp:56] Solver scaffolding done.
I0428 19:37:02.894613 23762 caffe.cpp:248] Starting Optimization
I0428 19:37:02.894621 23762 solver.cpp:273] Solving LeNet
I0428 19:37:02.894639 23762 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:02.896536 23762 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:03.068773 23769 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:03.075059 23762 solver.cpp:398]     Test net output #0: accuracy = 0.1142
I0428 19:37:03.075099 23762 solver.cpp:398]     Test net output #1: loss = 2.30216 (* 1 = 2.30216 loss)
I0428 19:37:03.081116 23762 solver.cpp:219] Iteration 0 (0 iter/s, 0.186427s/100 iters), loss = 2.30231
I0428 19:37:03.081176 23762 solver.cpp:238]     Train net output #0: loss = 2.30231 (* 1 = 2.30231 loss)
I0428 19:37:03.081190 23762 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:03.314374 23762 solver.cpp:219] Iteration 100 (428.862 iter/s, 0.233175s/100 iters), loss = 1.50414
I0428 19:37:03.314412 23762 solver.cpp:238]     Train net output #0: loss = 1.50414 (* 1 = 1.50414 loss)
I0428 19:37:03.314420 23762 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:03.545169 23762 solver.cpp:219] Iteration 200 (433.388 iter/s, 0.23074s/100 iters), loss = 1.18663
I0428 19:37:03.545215 23762 solver.cpp:238]     Train net output #0: loss = 1.18663 (* 1 = 1.18663 loss)
I0428 19:37:03.545223 23762 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:03.773283 23762 solver.cpp:219] Iteration 300 (438.497 iter/s, 0.228052s/100 iters), loss = 1.35016
I0428 19:37:03.773321 23762 solver.cpp:238]     Train net output #0: loss = 1.35016 (* 1 = 1.35016 loss)
I0428 19:37:03.773327 23762 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:03.999336 23762 solver.cpp:219] Iteration 400 (442.484 iter/s, 0.225997s/100 iters), loss = 1.4407
I0428 19:37:03.999362 23762 solver.cpp:238]     Train net output #0: loss = 1.4407 (* 1 = 1.4407 loss)
I0428 19:37:03.999369 23762 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:04.225428 23762 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:04.384083 23769 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:04.390038 23762 solver.cpp:398]     Test net output #0: accuracy = 0.5401
I0428 19:37:04.390074 23762 solver.cpp:398]     Test net output #1: loss = 1.32636 (* 1 = 1.32636 loss)
I0428 19:37:04.392273 23762 solver.cpp:219] Iteration 500 (254.527 iter/s, 0.392885s/100 iters), loss = 1.53515
I0428 19:37:04.392328 23762 solver.cpp:238]     Train net output #0: loss = 1.53515 (* 1 = 1.53515 loss)
I0428 19:37:04.392333 23762 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:04.618810 23762 solver.cpp:219] Iteration 600 (441.566 iter/s, 0.226467s/100 iters), loss = 1.20239
I0428 19:37:04.618852 23762 solver.cpp:238]     Train net output #0: loss = 1.20239 (* 1 = 1.20239 loss)
I0428 19:37:04.618858 23762 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:04.851938 23762 solver.cpp:219] Iteration 700 (429.041 iter/s, 0.233078s/100 iters), loss = 1.1652
I0428 19:37:04.851990 23762 solver.cpp:238]     Train net output #0: loss = 1.1652 (* 1 = 1.1652 loss)
I0428 19:37:04.852005 23762 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:05.094226 23762 solver.cpp:219] Iteration 800 (412.846 iter/s, 0.242221s/100 iters), loss = 1.35251
I0428 19:37:05.094275 23762 solver.cpp:238]     Train net output #0: loss = 1.35251 (* 1 = 1.35251 loss)
I0428 19:37:05.094285 23762 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:05.340804 23762 solver.cpp:219] Iteration 900 (405.647 iter/s, 0.24652s/100 iters), loss = 1.25846
I0428 19:37:05.340888 23762 solver.cpp:238]     Train net output #0: loss = 1.25846 (* 1 = 1.25846 loss)
I0428 19:37:05.340898 23762 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:05.419657 23768 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:05.579541 23762 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:05.585263 23762 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:05.588588 23762 solver.cpp:311] Iteration 1000, loss = 1.22309
I0428 19:37:05.588614 23762 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:05.757863 23769 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:05.764153 23762 solver.cpp:398]     Test net output #0: accuracy = 0.5708
I0428 19:37:05.764190 23762 solver.cpp:398]     Test net output #1: loss = 1.26645 (* 1 = 1.26645 loss)
I0428 19:37:05.764197 23762 solver.cpp:316] Optimization Done.
I0428 19:37:05.764200 23762 caffe.cpp:259] Optimization Done.
