I0428 19:55:20.219539 28163 caffe.cpp:218] Using GPUs 0
I0428 19:55:20.252182 28163 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:20.736703 28163 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test730.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:20.736877 28163 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test730.prototxt
I0428 19:55:20.737242 28163 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:20.737258 28163 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:20.737356 28163 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:20.737421 28163 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:20.737506 28163 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:20.737526 28163 net.cpp:86] Creating Layer mnist
I0428 19:55:20.737535 28163 net.cpp:382] mnist -> data
I0428 19:55:20.737555 28163 net.cpp:382] mnist -> label
I0428 19:55:20.738592 28163 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:20.740923 28163 net.cpp:124] Setting up mnist
I0428 19:55:20.740967 28163 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:20.740972 28163 net.cpp:131] Top shape: 64 (64)
I0428 19:55:20.740975 28163 net.cpp:139] Memory required for data: 200960
I0428 19:55:20.740981 28163 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:20.741006 28163 net.cpp:86] Creating Layer conv0
I0428 19:55:20.741024 28163 net.cpp:408] conv0 <- data
I0428 19:55:20.741034 28163 net.cpp:382] conv0 -> conv0
I0428 19:55:20.974568 28163 net.cpp:124] Setting up conv0
I0428 19:55:20.974608 28163 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:20.974612 28163 net.cpp:139] Memory required for data: 938240
I0428 19:55:20.974642 28163 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:20.974670 28163 net.cpp:86] Creating Layer pool0
I0428 19:55:20.974675 28163 net.cpp:408] pool0 <- conv0
I0428 19:55:20.974696 28163 net.cpp:382] pool0 -> pool0
I0428 19:55:20.974762 28163 net.cpp:124] Setting up pool0
I0428 19:55:20.974771 28163 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:20.974774 28163 net.cpp:139] Memory required for data: 1122560
I0428 19:55:20.974778 28163 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:20.974789 28163 net.cpp:86] Creating Layer conv1
I0428 19:55:20.974793 28163 net.cpp:408] conv1 <- pool0
I0428 19:55:20.974798 28163 net.cpp:382] conv1 -> conv1
I0428 19:55:20.977576 28163 net.cpp:124] Setting up conv1
I0428 19:55:20.977607 28163 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:20.977610 28163 net.cpp:139] Memory required for data: 2760960
I0428 19:55:20.977618 28163 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:20.977627 28163 net.cpp:86] Creating Layer pool1
I0428 19:55:20.977629 28163 net.cpp:408] pool1 <- conv1
I0428 19:55:20.977634 28163 net.cpp:382] pool1 -> pool1
I0428 19:55:20.977685 28163 net.cpp:124] Setting up pool1
I0428 19:55:20.977690 28163 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:20.977694 28163 net.cpp:139] Memory required for data: 3170560
I0428 19:55:20.977696 28163 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:20.977704 28163 net.cpp:86] Creating Layer ip1
I0428 19:55:20.977706 28163 net.cpp:408] ip1 <- pool1
I0428 19:55:20.977710 28163 net.cpp:382] ip1 -> ip1
I0428 19:55:20.978061 28163 net.cpp:124] Setting up ip1
I0428 19:55:20.978068 28163 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:20.978087 28163 net.cpp:139] Memory required for data: 3176960
I0428 19:55:20.978094 28163 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:20.978101 28163 net.cpp:86] Creating Layer relu1
I0428 19:55:20.978118 28163 net.cpp:408] relu1 <- ip1
I0428 19:55:20.978123 28163 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:20.978301 28163 net.cpp:124] Setting up relu1
I0428 19:55:20.978309 28163 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:20.978313 28163 net.cpp:139] Memory required for data: 3183360
I0428 19:55:20.978317 28163 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:20.978324 28163 net.cpp:86] Creating Layer ip2
I0428 19:55:20.978328 28163 net.cpp:408] ip2 <- ip1
I0428 19:55:20.978332 28163 net.cpp:382] ip2 -> ip2
I0428 19:55:20.979285 28163 net.cpp:124] Setting up ip2
I0428 19:55:20.979296 28163 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:20.979315 28163 net.cpp:139] Memory required for data: 3196160
I0428 19:55:20.979322 28163 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:20.979328 28163 net.cpp:86] Creating Layer relu2
I0428 19:55:20.979332 28163 net.cpp:408] relu2 <- ip2
I0428 19:55:20.979336 28163 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:20.980048 28163 net.cpp:124] Setting up relu2
I0428 19:55:20.980059 28163 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:20.980079 28163 net.cpp:139] Memory required for data: 3208960
I0428 19:55:20.980082 28163 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:20.980089 28163 net.cpp:86] Creating Layer ip3
I0428 19:55:20.980093 28163 net.cpp:408] ip3 <- ip2
I0428 19:55:20.980098 28163 net.cpp:382] ip3 -> ip3
I0428 19:55:20.980195 28163 net.cpp:124] Setting up ip3
I0428 19:55:20.980202 28163 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:20.980206 28163 net.cpp:139] Memory required for data: 3211520
I0428 19:55:20.980212 28163 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:20.980218 28163 net.cpp:86] Creating Layer relu3
I0428 19:55:20.980221 28163 net.cpp:408] relu3 <- ip3
I0428 19:55:20.980226 28163 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:20.980399 28163 net.cpp:124] Setting up relu3
I0428 19:55:20.980407 28163 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:20.980412 28163 net.cpp:139] Memory required for data: 3214080
I0428 19:55:20.980413 28163 layer_factory.hpp:77] Creating layer loss
I0428 19:55:20.980419 28163 net.cpp:86] Creating Layer loss
I0428 19:55:20.980422 28163 net.cpp:408] loss <- ip3
I0428 19:55:20.980427 28163 net.cpp:408] loss <- label
I0428 19:55:20.980432 28163 net.cpp:382] loss -> loss
I0428 19:55:20.980446 28163 layer_factory.hpp:77] Creating layer loss
I0428 19:55:20.980681 28163 net.cpp:124] Setting up loss
I0428 19:55:20.980690 28163 net.cpp:131] Top shape: (1)
I0428 19:55:20.980693 28163 net.cpp:134]     with loss weight 1
I0428 19:55:20.980706 28163 net.cpp:139] Memory required for data: 3214084
I0428 19:55:20.980710 28163 net.cpp:200] loss needs backward computation.
I0428 19:55:20.980713 28163 net.cpp:200] relu3 needs backward computation.
I0428 19:55:20.980716 28163 net.cpp:200] ip3 needs backward computation.
I0428 19:55:20.980720 28163 net.cpp:200] relu2 needs backward computation.
I0428 19:55:20.980722 28163 net.cpp:200] ip2 needs backward computation.
I0428 19:55:20.980725 28163 net.cpp:200] relu1 needs backward computation.
I0428 19:55:20.980727 28163 net.cpp:200] ip1 needs backward computation.
I0428 19:55:20.980731 28163 net.cpp:200] pool1 needs backward computation.
I0428 19:55:20.980733 28163 net.cpp:200] conv1 needs backward computation.
I0428 19:55:20.980736 28163 net.cpp:200] pool0 needs backward computation.
I0428 19:55:20.980739 28163 net.cpp:200] conv0 needs backward computation.
I0428 19:55:20.980742 28163 net.cpp:202] mnist does not need backward computation.
I0428 19:55:20.980746 28163 net.cpp:244] This network produces output loss
I0428 19:55:20.980754 28163 net.cpp:257] Network initialization done.
I0428 19:55:20.981149 28163 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test730.prototxt
I0428 19:55:20.981206 28163 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:20.981307 28163 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:20.981382 28163 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:20.981443 28163 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:20.981456 28163 net.cpp:86] Creating Layer mnist
I0428 19:55:20.981461 28163 net.cpp:382] mnist -> data
I0428 19:55:20.981468 28163 net.cpp:382] mnist -> label
I0428 19:55:20.981549 28163 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:20.983566 28163 net.cpp:124] Setting up mnist
I0428 19:55:20.983609 28163 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:20.983614 28163 net.cpp:131] Top shape: 100 (100)
I0428 19:55:20.983618 28163 net.cpp:139] Memory required for data: 314000
I0428 19:55:20.983621 28163 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:20.983628 28163 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:20.983631 28163 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:20.983635 28163 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:20.983642 28163 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:20.983695 28163 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:20.983701 28163 net.cpp:131] Top shape: 100 (100)
I0428 19:55:20.983705 28163 net.cpp:131] Top shape: 100 (100)
I0428 19:55:20.983707 28163 net.cpp:139] Memory required for data: 314800
I0428 19:55:20.983711 28163 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:20.983718 28163 net.cpp:86] Creating Layer conv0
I0428 19:55:20.983721 28163 net.cpp:408] conv0 <- data
I0428 19:55:20.983726 28163 net.cpp:382] conv0 -> conv0
I0428 19:55:20.985260 28163 net.cpp:124] Setting up conv0
I0428 19:55:20.985273 28163 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:20.985277 28163 net.cpp:139] Memory required for data: 1466800
I0428 19:55:20.985286 28163 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:20.985303 28163 net.cpp:86] Creating Layer pool0
I0428 19:55:20.985306 28163 net.cpp:408] pool0 <- conv0
I0428 19:55:20.985311 28163 net.cpp:382] pool0 -> pool0
I0428 19:55:20.985364 28163 net.cpp:124] Setting up pool0
I0428 19:55:20.985369 28163 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:20.985373 28163 net.cpp:139] Memory required for data: 1754800
I0428 19:55:20.985375 28163 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:20.985383 28163 net.cpp:86] Creating Layer conv1
I0428 19:55:20.985388 28163 net.cpp:408] conv1 <- pool0
I0428 19:55:20.985393 28163 net.cpp:382] conv1 -> conv1
I0428 19:55:20.986948 28163 net.cpp:124] Setting up conv1
I0428 19:55:20.986961 28163 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:20.986966 28163 net.cpp:139] Memory required for data: 4314800
I0428 19:55:20.986975 28163 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:20.986981 28163 net.cpp:86] Creating Layer pool1
I0428 19:55:20.986985 28163 net.cpp:408] pool1 <- conv1
I0428 19:55:20.986990 28163 net.cpp:382] pool1 -> pool1
I0428 19:55:20.987026 28163 net.cpp:124] Setting up pool1
I0428 19:55:20.987031 28163 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:20.987042 28163 net.cpp:139] Memory required for data: 4954800
I0428 19:55:20.987046 28163 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:20.987051 28163 net.cpp:86] Creating Layer ip1
I0428 19:55:20.987061 28163 net.cpp:408] ip1 <- pool1
I0428 19:55:20.987066 28163 net.cpp:382] ip1 -> ip1
I0428 19:55:20.987409 28163 net.cpp:124] Setting up ip1
I0428 19:55:20.987417 28163 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:20.987432 28163 net.cpp:139] Memory required for data: 4964800
I0428 19:55:20.987439 28163 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:20.987443 28163 net.cpp:86] Creating Layer relu1
I0428 19:55:20.987454 28163 net.cpp:408] relu1 <- ip1
I0428 19:55:20.987458 28163 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:20.987653 28163 net.cpp:124] Setting up relu1
I0428 19:55:20.987664 28163 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:20.987668 28163 net.cpp:139] Memory required for data: 4974800
I0428 19:55:20.987671 28163 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:20.987679 28163 net.cpp:86] Creating Layer ip2
I0428 19:55:20.987682 28163 net.cpp:408] ip2 <- ip1
I0428 19:55:20.987689 28163 net.cpp:382] ip2 -> ip2
I0428 19:55:20.987799 28163 net.cpp:124] Setting up ip2
I0428 19:55:20.987823 28163 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:20.987825 28163 net.cpp:139] Memory required for data: 4994800
I0428 19:55:20.987830 28163 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:20.987843 28163 net.cpp:86] Creating Layer relu2
I0428 19:55:20.987846 28163 net.cpp:408] relu2 <- ip2
I0428 19:55:20.987855 28163 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:20.988093 28163 net.cpp:124] Setting up relu2
I0428 19:55:20.988101 28163 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:20.988106 28163 net.cpp:139] Memory required for data: 5014800
I0428 19:55:20.988108 28163 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:20.988114 28163 net.cpp:86] Creating Layer ip3
I0428 19:55:20.988118 28163 net.cpp:408] ip3 <- ip2
I0428 19:55:20.988124 28163 net.cpp:382] ip3 -> ip3
I0428 19:55:20.988291 28163 net.cpp:124] Setting up ip3
I0428 19:55:20.988313 28163 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:20.988317 28163 net.cpp:139] Memory required for data: 5018800
I0428 19:55:20.988327 28163 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:20.988332 28163 net.cpp:86] Creating Layer relu3
I0428 19:55:20.988340 28163 net.cpp:408] relu3 <- ip3
I0428 19:55:20.988343 28163 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:20.989145 28163 net.cpp:124] Setting up relu3
I0428 19:55:20.989157 28163 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:20.989161 28163 net.cpp:139] Memory required for data: 5022800
I0428 19:55:20.989164 28163 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:20.989171 28163 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:20.989173 28163 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:20.989193 28163 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:20.989202 28163 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:20.989243 28163 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:20.989248 28163 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:20.989251 28163 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:20.989254 28163 net.cpp:139] Memory required for data: 5030800
I0428 19:55:20.989258 28163 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:20.989264 28163 net.cpp:86] Creating Layer accuracy
I0428 19:55:20.989266 28163 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:20.989270 28163 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:20.989274 28163 net.cpp:382] accuracy -> accuracy
I0428 19:55:20.989281 28163 net.cpp:124] Setting up accuracy
I0428 19:55:20.989285 28163 net.cpp:131] Top shape: (1)
I0428 19:55:20.989287 28163 net.cpp:139] Memory required for data: 5030804
I0428 19:55:20.989290 28163 layer_factory.hpp:77] Creating layer loss
I0428 19:55:20.989295 28163 net.cpp:86] Creating Layer loss
I0428 19:55:20.989297 28163 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:20.989301 28163 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:20.989306 28163 net.cpp:382] loss -> loss
I0428 19:55:20.989312 28163 layer_factory.hpp:77] Creating layer loss
I0428 19:55:20.989598 28163 net.cpp:124] Setting up loss
I0428 19:55:20.989608 28163 net.cpp:131] Top shape: (1)
I0428 19:55:20.989611 28163 net.cpp:134]     with loss weight 1
I0428 19:55:20.989626 28163 net.cpp:139] Memory required for data: 5030808
I0428 19:55:20.989630 28163 net.cpp:200] loss needs backward computation.
I0428 19:55:20.989634 28163 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:20.989639 28163 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:20.989641 28163 net.cpp:200] relu3 needs backward computation.
I0428 19:55:20.989644 28163 net.cpp:200] ip3 needs backward computation.
I0428 19:55:20.989646 28163 net.cpp:200] relu2 needs backward computation.
I0428 19:55:20.989650 28163 net.cpp:200] ip2 needs backward computation.
I0428 19:55:20.989652 28163 net.cpp:200] relu1 needs backward computation.
I0428 19:55:20.989655 28163 net.cpp:200] ip1 needs backward computation.
I0428 19:55:20.989658 28163 net.cpp:200] pool1 needs backward computation.
I0428 19:55:20.989661 28163 net.cpp:200] conv1 needs backward computation.
I0428 19:55:20.989665 28163 net.cpp:200] pool0 needs backward computation.
I0428 19:55:20.989667 28163 net.cpp:200] conv0 needs backward computation.
I0428 19:55:20.989671 28163 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:20.989675 28163 net.cpp:202] mnist does not need backward computation.
I0428 19:55:20.989678 28163 net.cpp:244] This network produces output accuracy
I0428 19:55:20.989682 28163 net.cpp:244] This network produces output loss
I0428 19:55:20.989693 28163 net.cpp:257] Network initialization done.
I0428 19:55:20.989737 28163 solver.cpp:56] Solver scaffolding done.
I0428 19:55:20.990124 28163 caffe.cpp:248] Starting Optimization
I0428 19:55:20.990131 28163 solver.cpp:273] Solving LeNet
I0428 19:55:20.990134 28163 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:20.990990 28163 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:20.996286 28163 blocking_queue.cpp:49] Waiting for data
I0428 19:55:21.067379 28170 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:21.068008 28163 solver.cpp:398]     Test net output #0: accuracy = 0.0648
I0428 19:55:21.068027 28163 solver.cpp:398]     Test net output #1: loss = 2.3084 (* 1 = 2.3084 loss)
I0428 19:55:21.071802 28163 solver.cpp:219] Iteration 0 (-1.08316e-30 iter/s, 0.0816087s/100 iters), loss = 2.31259
I0428 19:55:21.071825 28163 solver.cpp:238]     Train net output #0: loss = 2.31259 (* 1 = 2.31259 loss)
I0428 19:55:21.071851 28163 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:21.221745 28163 solver.cpp:219] Iteration 100 (667.097 iter/s, 0.149903s/100 iters), loss = 1.74179
I0428 19:55:21.221770 28163 solver.cpp:238]     Train net output #0: loss = 1.74179 (* 1 = 1.74179 loss)
I0428 19:55:21.221776 28163 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:21.371724 28163 solver.cpp:219] Iteration 200 (666.96 iter/s, 0.149934s/100 iters), loss = 1.56469
I0428 19:55:21.371790 28163 solver.cpp:238]     Train net output #0: loss = 1.56469 (* 1 = 1.56469 loss)
I0428 19:55:21.371804 28163 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:21.540016 28163 solver.cpp:219] Iteration 300 (594.483 iter/s, 0.168214s/100 iters), loss = 1.72527
I0428 19:55:21.540053 28163 solver.cpp:238]     Train net output #0: loss = 1.72527 (* 1 = 1.72527 loss)
I0428 19:55:21.540061 28163 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:21.696107 28163 solver.cpp:219] Iteration 400 (640.856 iter/s, 0.156041s/100 iters), loss = 1.95429
I0428 19:55:21.696140 28163 solver.cpp:238]     Train net output #0: loss = 1.95429 (* 1 = 1.95429 loss)
I0428 19:55:21.696146 28163 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:21.850149 28163 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:21.923303 28170 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:21.923950 28163 solver.cpp:398]     Test net output #0: accuracy = 0.3794
I0428 19:55:21.923984 28163 solver.cpp:398]     Test net output #1: loss = 1.60707 (* 1 = 1.60707 loss)
I0428 19:55:21.925593 28163 solver.cpp:219] Iteration 500 (435.851 iter/s, 0.229436s/100 iters), loss = 1.60058
I0428 19:55:21.925631 28163 solver.cpp:238]     Train net output #0: loss = 1.60058 (* 1 = 1.60058 loss)
I0428 19:55:21.925662 28163 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:22.091930 28163 solver.cpp:219] Iteration 600 (601.374 iter/s, 0.166286s/100 iters), loss = 1.4398
I0428 19:55:22.091962 28163 solver.cpp:238]     Train net output #0: loss = 1.4398 (* 1 = 1.4398 loss)
I0428 19:55:22.091969 28163 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:22.247227 28163 solver.cpp:219] Iteration 700 (644.107 iter/s, 0.155254s/100 iters), loss = 1.324
I0428 19:55:22.247267 28163 solver.cpp:238]     Train net output #0: loss = 1.324 (* 1 = 1.324 loss)
I0428 19:55:22.247273 28163 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:22.403065 28163 solver.cpp:219] Iteration 800 (641.842 iter/s, 0.155802s/100 iters), loss = 1.34472
I0428 19:55:22.403105 28163 solver.cpp:238]     Train net output #0: loss = 1.34472 (* 1 = 1.34472 loss)
I0428 19:55:22.403110 28163 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:22.554265 28163 solver.cpp:219] Iteration 900 (661.538 iter/s, 0.151163s/100 iters), loss = 1.32886
I0428 19:55:22.554303 28163 solver.cpp:238]     Train net output #0: loss = 1.32886 (* 1 = 1.32886 loss)
I0428 19:55:22.554309 28163 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:22.604852 28169 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:22.700073 28163 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:22.702285 28163 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:22.703303 28163 solver.cpp:311] Iteration 1000, loss = 1.30997
I0428 19:55:22.703317 28163 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:22.778882 28170 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:22.779515 28163 solver.cpp:398]     Test net output #0: accuracy = 0.4811
I0428 19:55:22.779532 28163 solver.cpp:398]     Test net output #1: loss = 1.24849 (* 1 = 1.24849 loss)
I0428 19:55:22.779537 28163 solver.cpp:316] Optimization Done.
I0428 19:55:22.779541 28163 caffe.cpp:259] Optimization Done.
