I0428 20:04:34.418262 30410 caffe.cpp:218] Using GPUs 0
I0428 20:04:34.456554 30410 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:34.911566 30410 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test975.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:34.911696 30410 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test975.prototxt
I0428 20:04:34.911978 30410 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:34.911990 30410 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:34.912067 30410 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:04:34.912117 30410 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:34.912199 30410 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:34.912217 30410 net.cpp:86] Creating Layer mnist
I0428 20:04:34.912223 30410 net.cpp:382] mnist -> data
I0428 20:04:34.912240 30410 net.cpp:382] mnist -> label
I0428 20:04:34.913241 30410 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:34.915419 30410 net.cpp:124] Setting up mnist
I0428 20:04:34.915448 30410 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:34.915453 30410 net.cpp:131] Top shape: 64 (64)
I0428 20:04:34.915457 30410 net.cpp:139] Memory required for data: 200960
I0428 20:04:34.915462 30410 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:34.915474 30410 net.cpp:86] Creating Layer conv0
I0428 20:04:34.915479 30410 net.cpp:408] conv0 <- data
I0428 20:04:34.915488 30410 net.cpp:382] conv0 -> conv0
I0428 20:04:35.143193 30410 net.cpp:124] Setting up conv0
I0428 20:04:35.143218 30410 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:35.143221 30410 net.cpp:139] Memory required for data: 3887360
I0428 20:04:35.143234 30410 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:35.143247 30410 net.cpp:86] Creating Layer pool0
I0428 20:04:35.143251 30410 net.cpp:408] pool0 <- conv0
I0428 20:04:35.143257 30410 net.cpp:382] pool0 -> pool0
I0428 20:04:35.143316 30410 net.cpp:124] Setting up pool0
I0428 20:04:35.143321 30410 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:35.143338 30410 net.cpp:139] Memory required for data: 4808960
I0428 20:04:35.143342 30410 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:35.143352 30410 net.cpp:86] Creating Layer conv1
I0428 20:04:35.143355 30410 net.cpp:408] conv1 <- pool0
I0428 20:04:35.143360 30410 net.cpp:382] conv1 -> conv1
I0428 20:04:35.146149 30410 net.cpp:124] Setting up conv1
I0428 20:04:35.146178 30410 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:35.146183 30410 net.cpp:139] Memory required for data: 4841728
I0428 20:04:35.146190 30410 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:35.146198 30410 net.cpp:86] Creating Layer pool1
I0428 20:04:35.146201 30410 net.cpp:408] pool1 <- conv1
I0428 20:04:35.146206 30410 net.cpp:382] pool1 -> pool1
I0428 20:04:35.146257 30410 net.cpp:124] Setting up pool1
I0428 20:04:35.146263 30410 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:35.146266 30410 net.cpp:139] Memory required for data: 4849920
I0428 20:04:35.146270 30410 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:35.146276 30410 net.cpp:86] Creating Layer ip1
I0428 20:04:35.146280 30410 net.cpp:408] ip1 <- pool1
I0428 20:04:35.146283 30410 net.cpp:382] ip1 -> ip1
I0428 20:04:35.146379 30410 net.cpp:124] Setting up ip1
I0428 20:04:35.146386 30410 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:35.146389 30410 net.cpp:139] Memory required for data: 4852480
I0428 20:04:35.146396 30410 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:35.146402 30410 net.cpp:86] Creating Layer relu1
I0428 20:04:35.146406 30410 net.cpp:408] relu1 <- ip1
I0428 20:04:35.146410 30410 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:35.146569 30410 net.cpp:124] Setting up relu1
I0428 20:04:35.146579 30410 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:35.146581 30410 net.cpp:139] Memory required for data: 4855040
I0428 20:04:35.146584 30410 layer_factory.hpp:77] Creating layer loss
I0428 20:04:35.146590 30410 net.cpp:86] Creating Layer loss
I0428 20:04:35.146594 30410 net.cpp:408] loss <- ip1
I0428 20:04:35.146597 30410 net.cpp:408] loss <- label
I0428 20:04:35.146601 30410 net.cpp:382] loss -> loss
I0428 20:04:35.146615 30410 layer_factory.hpp:77] Creating layer loss
I0428 20:04:35.147462 30410 net.cpp:124] Setting up loss
I0428 20:04:35.147475 30410 net.cpp:131] Top shape: (1)
I0428 20:04:35.147495 30410 net.cpp:134]     with loss weight 1
I0428 20:04:35.147508 30410 net.cpp:139] Memory required for data: 4855044
I0428 20:04:35.147526 30410 net.cpp:200] loss needs backward computation.
I0428 20:04:35.147531 30410 net.cpp:200] relu1 needs backward computation.
I0428 20:04:35.147533 30410 net.cpp:200] ip1 needs backward computation.
I0428 20:04:35.147537 30410 net.cpp:200] pool1 needs backward computation.
I0428 20:04:35.147541 30410 net.cpp:200] conv1 needs backward computation.
I0428 20:04:35.147543 30410 net.cpp:200] pool0 needs backward computation.
I0428 20:04:35.147547 30410 net.cpp:200] conv0 needs backward computation.
I0428 20:04:35.147549 30410 net.cpp:202] mnist does not need backward computation.
I0428 20:04:35.147552 30410 net.cpp:244] This network produces output loss
I0428 20:04:35.147575 30410 net.cpp:257] Network initialization done.
I0428 20:04:35.147840 30410 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test975.prototxt
I0428 20:04:35.147863 30410 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:35.147935 30410 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:04:35.148002 30410 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:35.148046 30410 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:35.148058 30410 net.cpp:86] Creating Layer mnist
I0428 20:04:35.148062 30410 net.cpp:382] mnist -> data
I0428 20:04:35.148071 30410 net.cpp:382] mnist -> label
I0428 20:04:35.148149 30410 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:35.150236 30410 net.cpp:124] Setting up mnist
I0428 20:04:35.150250 30410 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:35.150255 30410 net.cpp:131] Top shape: 100 (100)
I0428 20:04:35.150259 30410 net.cpp:139] Memory required for data: 314000
I0428 20:04:35.150262 30410 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:35.150269 30410 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:35.150271 30410 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:35.150276 30410 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:35.150282 30410 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:35.150399 30410 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:35.150408 30410 net.cpp:131] Top shape: 100 (100)
I0428 20:04:35.150411 30410 net.cpp:131] Top shape: 100 (100)
I0428 20:04:35.150414 30410 net.cpp:139] Memory required for data: 314800
I0428 20:04:35.150418 30410 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:35.150424 30410 net.cpp:86] Creating Layer conv0
I0428 20:04:35.150429 30410 net.cpp:408] conv0 <- data
I0428 20:04:35.150432 30410 net.cpp:382] conv0 -> conv0
I0428 20:04:35.151270 30410 net.cpp:124] Setting up conv0
I0428 20:04:35.151293 30410 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:35.151295 30410 net.cpp:139] Memory required for data: 6074800
I0428 20:04:35.151304 30410 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:35.151327 30410 net.cpp:86] Creating Layer pool0
I0428 20:04:35.151330 30410 net.cpp:408] pool0 <- conv0
I0428 20:04:35.151335 30410 net.cpp:382] pool0 -> pool0
I0428 20:04:35.151372 30410 net.cpp:124] Setting up pool0
I0428 20:04:35.151379 30410 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:35.151382 30410 net.cpp:139] Memory required for data: 7514800
I0428 20:04:35.151386 30410 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:35.151393 30410 net.cpp:86] Creating Layer conv1
I0428 20:04:35.151397 30410 net.cpp:408] conv1 <- pool0
I0428 20:04:35.151402 30410 net.cpp:382] conv1 -> conv1
I0428 20:04:35.153671 30410 net.cpp:124] Setting up conv1
I0428 20:04:35.153683 30410 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:35.153687 30410 net.cpp:139] Memory required for data: 7566000
I0428 20:04:35.153697 30410 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:35.153703 30410 net.cpp:86] Creating Layer pool1
I0428 20:04:35.153733 30410 net.cpp:408] pool1 <- conv1
I0428 20:04:35.153739 30410 net.cpp:382] pool1 -> pool1
I0428 20:04:35.153784 30410 net.cpp:124] Setting up pool1
I0428 20:04:35.153790 30410 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:35.153792 30410 net.cpp:139] Memory required for data: 7578800
I0428 20:04:35.153795 30410 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:35.153802 30410 net.cpp:86] Creating Layer ip1
I0428 20:04:35.153805 30410 net.cpp:408] ip1 <- pool1
I0428 20:04:35.153810 30410 net.cpp:382] ip1 -> ip1
I0428 20:04:35.153937 30410 net.cpp:124] Setting up ip1
I0428 20:04:35.153946 30410 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:35.153950 30410 net.cpp:139] Memory required for data: 7582800
I0428 20:04:35.153957 30410 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:35.153964 30410 net.cpp:86] Creating Layer relu1
I0428 20:04:35.153967 30410 net.cpp:408] relu1 <- ip1
I0428 20:04:35.153972 30410 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:35.154785 30410 net.cpp:124] Setting up relu1
I0428 20:04:35.154798 30410 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:35.154803 30410 net.cpp:139] Memory required for data: 7586800
I0428 20:04:35.154806 30410 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:04:35.154813 30410 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:04:35.154816 30410 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:04:35.154821 30410 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:04:35.154827 30410 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:04:35.154871 30410 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:04:35.154877 30410 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:35.154881 30410 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:35.154883 30410 net.cpp:139] Memory required for data: 7594800
I0428 20:04:35.154886 30410 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:35.154891 30410 net.cpp:86] Creating Layer accuracy
I0428 20:04:35.154894 30410 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:04:35.154898 30410 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:35.154903 30410 net.cpp:382] accuracy -> accuracy
I0428 20:04:35.154911 30410 net.cpp:124] Setting up accuracy
I0428 20:04:35.154914 30410 net.cpp:131] Top shape: (1)
I0428 20:04:35.154917 30410 net.cpp:139] Memory required for data: 7594804
I0428 20:04:35.154920 30410 layer_factory.hpp:77] Creating layer loss
I0428 20:04:35.154925 30410 net.cpp:86] Creating Layer loss
I0428 20:04:35.154928 30410 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:04:35.154932 30410 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:35.154937 30410 net.cpp:382] loss -> loss
I0428 20:04:35.154942 30410 layer_factory.hpp:77] Creating layer loss
I0428 20:04:35.155200 30410 net.cpp:124] Setting up loss
I0428 20:04:35.155210 30410 net.cpp:131] Top shape: (1)
I0428 20:04:35.155212 30410 net.cpp:134]     with loss weight 1
I0428 20:04:35.155220 30410 net.cpp:139] Memory required for data: 7594808
I0428 20:04:35.155223 30410 net.cpp:200] loss needs backward computation.
I0428 20:04:35.155226 30410 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:35.155230 30410 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:04:35.155233 30410 net.cpp:200] relu1 needs backward computation.
I0428 20:04:35.155236 30410 net.cpp:200] ip1 needs backward computation.
I0428 20:04:35.155239 30410 net.cpp:200] pool1 needs backward computation.
I0428 20:04:35.155242 30410 net.cpp:200] conv1 needs backward computation.
I0428 20:04:35.155246 30410 net.cpp:200] pool0 needs backward computation.
I0428 20:04:35.155248 30410 net.cpp:200] conv0 needs backward computation.
I0428 20:04:35.155252 30410 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:35.155256 30410 net.cpp:202] mnist does not need backward computation.
I0428 20:04:35.155258 30410 net.cpp:244] This network produces output accuracy
I0428 20:04:35.155261 30410 net.cpp:244] This network produces output loss
I0428 20:04:35.155280 30410 net.cpp:257] Network initialization done.
I0428 20:04:35.155313 30410 solver.cpp:56] Solver scaffolding done.
I0428 20:04:35.155503 30410 caffe.cpp:248] Starting Optimization
I0428 20:04:35.155509 30410 solver.cpp:273] Solving LeNet
I0428 20:04:35.155513 30410 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:35.156299 30410 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:35.160975 30410 blocking_queue.cpp:49] Waiting for data
I0428 20:04:35.232916 30417 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:35.233474 30410 solver.cpp:398]     Test net output #0: accuracy = 0.1274
I0428 20:04:35.233508 30410 solver.cpp:398]     Test net output #1: loss = 2.32438 (* 1 = 2.32438 loss)
I0428 20:04:35.236349 30410 solver.cpp:219] Iteration 0 (-1.02295e-42 iter/s, 0.080812s/100 iters), loss = 2.29526
I0428 20:04:35.236385 30410 solver.cpp:238]     Train net output #0: loss = 2.29526 (* 1 = 2.29526 loss)
I0428 20:04:35.236413 30410 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:35.310533 30410 solver.cpp:219] Iteration 100 (1348.85 iter/s, 0.0741373s/100 iters), loss = 0.610238
I0428 20:04:35.310570 30410 solver.cpp:238]     Train net output #0: loss = 0.610238 (* 1 = 0.610238 loss)
I0428 20:04:35.310576 30410 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:35.383426 30410 solver.cpp:219] Iteration 200 (1372.75 iter/s, 0.0728463s/100 iters), loss = 0.475681
I0428 20:04:35.383464 30410 solver.cpp:238]     Train net output #0: loss = 0.475681 (* 1 = 0.475681 loss)
I0428 20:04:35.383471 30410 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:35.456050 30410 solver.cpp:219] Iteration 300 (1377.55 iter/s, 0.0725924s/100 iters), loss = 0.677583
I0428 20:04:35.456087 30410 solver.cpp:238]     Train net output #0: loss = 0.677583 (* 1 = 0.677583 loss)
I0428 20:04:35.456094 30410 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:35.528553 30410 solver.cpp:219] Iteration 400 (1379.87 iter/s, 0.0724707s/100 iters), loss = 0.499306
I0428 20:04:35.528591 30410 solver.cpp:238]     Train net output #0: loss = 0.499306 (* 1 = 0.499306 loss)
I0428 20:04:35.528597 30410 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:35.600086 30410 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:35.647251 30417 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:35.647967 30410 solver.cpp:398]     Test net output #0: accuracy = 0.8408
I0428 20:04:35.647986 30410 solver.cpp:398]     Test net output #1: loss = 0.467717 (* 1 = 0.467717 loss)
I0428 20:04:35.648754 30410 solver.cpp:219] Iteration 500 (832.179 iter/s, 0.120166s/100 iters), loss = 0.615742
I0428 20:04:35.648790 30410 solver.cpp:238]     Train net output #0: loss = 0.615742 (* 1 = 0.615742 loss)
I0428 20:04:35.648797 30410 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:35.722303 30410 solver.cpp:219] Iteration 600 (1360.44 iter/s, 0.0735057s/100 iters), loss = 0.478442
I0428 20:04:35.722327 30410 solver.cpp:238]     Train net output #0: loss = 0.478442 (* 1 = 0.478442 loss)
I0428 20:04:35.722333 30410 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:35.807427 30410 solver.cpp:219] Iteration 700 (1175.22 iter/s, 0.0850903s/100 iters), loss = 0.593776
I0428 20:04:35.807453 30410 solver.cpp:238]     Train net output #0: loss = 0.593776 (* 1 = 0.593776 loss)
I0428 20:04:35.807476 30410 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:35.881111 30410 solver.cpp:219] Iteration 800 (1357.81 iter/s, 0.0736481s/100 iters), loss = 0.685024
I0428 20:04:35.881136 30410 solver.cpp:238]     Train net output #0: loss = 0.685024 (* 1 = 0.685024 loss)
I0428 20:04:35.881144 30410 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:35.953739 30410 solver.cpp:219] Iteration 900 (1377.51 iter/s, 0.0725945s/100 iters), loss = 0.61059
I0428 20:04:35.953763 30410 solver.cpp:238]     Train net output #0: loss = 0.61059 (* 1 = 0.61059 loss)
I0428 20:04:35.953784 30410 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:35.978266 30416 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:36.026044 30410 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:36.026703 30410 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:36.027241 30410 solver.cpp:311] Iteration 1000, loss = 0.426656
I0428 20:04:36.027256 30410 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:36.092027 30417 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:36.092569 30410 solver.cpp:398]     Test net output #0: accuracy = 0.8615
I0428 20:04:36.092586 30410 solver.cpp:398]     Test net output #1: loss = 0.388968 (* 1 = 0.388968 loss)
I0428 20:04:36.092591 30410 solver.cpp:316] Optimization Done.
I0428 20:04:36.092593 30410 caffe.cpp:259] Optimization Done.
