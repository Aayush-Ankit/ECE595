I0428 19:41:21.199527 24804 caffe.cpp:218] Using GPUs 0
I0428 19:41:21.241158 24804 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:21.710566 24804 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test362.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:21.710721 24804 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test362.prototxt
I0428 19:41:21.711036 24804 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:21.711053 24804 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:21.711129 24804 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:41:21.711210 24804 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:21.711313 24804 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:21.711340 24804 net.cpp:86] Creating Layer mnist
I0428 19:41:21.711350 24804 net.cpp:382] mnist -> data
I0428 19:41:21.711375 24804 net.cpp:382] mnist -> label
I0428 19:41:21.712417 24804 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:21.714634 24804 net.cpp:124] Setting up mnist
I0428 19:41:21.714668 24804 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:21.714690 24804 net.cpp:131] Top shape: 64 (64)
I0428 19:41:21.714695 24804 net.cpp:139] Memory required for data: 200960
I0428 19:41:21.714704 24804 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:21.714725 24804 net.cpp:86] Creating Layer conv0
I0428 19:41:21.714735 24804 net.cpp:408] conv0 <- data
I0428 19:41:21.714750 24804 net.cpp:382] conv0 -> conv0
I0428 19:41:21.947897 24804 net.cpp:124] Setting up conv0
I0428 19:41:21.947926 24804 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:21.947931 24804 net.cpp:139] Memory required for data: 495872
I0428 19:41:21.947989 24804 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:21.948009 24804 net.cpp:86] Creating Layer pool0
I0428 19:41:21.948015 24804 net.cpp:408] pool0 <- conv0
I0428 19:41:21.948024 24804 net.cpp:382] pool0 -> pool0
I0428 19:41:21.948074 24804 net.cpp:124] Setting up pool0
I0428 19:41:21.948083 24804 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:21.948088 24804 net.cpp:139] Memory required for data: 569600
I0428 19:41:21.948093 24804 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:21.948108 24804 net.cpp:86] Creating Layer conv1
I0428 19:41:21.948115 24804 net.cpp:408] conv1 <- pool0
I0428 19:41:21.948123 24804 net.cpp:382] conv1 -> conv1
I0428 19:41:21.950012 24804 net.cpp:124] Setting up conv1
I0428 19:41:21.950042 24804 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:21.950048 24804 net.cpp:139] Memory required for data: 733440
I0428 19:41:21.950062 24804 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:21.950073 24804 net.cpp:86] Creating Layer pool1
I0428 19:41:21.950079 24804 net.cpp:408] pool1 <- conv1
I0428 19:41:21.950088 24804 net.cpp:382] pool1 -> pool1
I0428 19:41:21.950134 24804 net.cpp:124] Setting up pool1
I0428 19:41:21.950143 24804 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:21.950148 24804 net.cpp:139] Memory required for data: 774400
I0428 19:41:21.950153 24804 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:21.950165 24804 net.cpp:86] Creating Layer ip1
I0428 19:41:21.950170 24804 net.cpp:408] ip1 <- pool1
I0428 19:41:21.950179 24804 net.cpp:382] ip1 -> ip1
I0428 19:41:21.951256 24804 net.cpp:124] Setting up ip1
I0428 19:41:21.951270 24804 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:21.951277 24804 net.cpp:139] Memory required for data: 787200
I0428 19:41:21.951290 24804 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:21.951302 24804 net.cpp:86] Creating Layer relu1
I0428 19:41:21.951311 24804 net.cpp:408] relu1 <- ip1
I0428 19:41:21.951320 24804 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:21.951510 24804 net.cpp:124] Setting up relu1
I0428 19:41:21.951522 24804 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:21.951527 24804 net.cpp:139] Memory required for data: 800000
I0428 19:41:21.951532 24804 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:21.951542 24804 net.cpp:86] Creating Layer ip2
I0428 19:41:21.951548 24804 net.cpp:408] ip2 <- ip1
I0428 19:41:21.951557 24804 net.cpp:382] ip2 -> ip2
I0428 19:41:21.951661 24804 net.cpp:124] Setting up ip2
I0428 19:41:21.951670 24804 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:21.951675 24804 net.cpp:139] Memory required for data: 802560
I0428 19:41:21.951684 24804 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:21.951709 24804 net.cpp:86] Creating Layer relu2
I0428 19:41:21.951719 24804 net.cpp:408] relu2 <- ip2
I0428 19:41:21.951725 24804 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:21.952479 24804 net.cpp:124] Setting up relu2
I0428 19:41:21.952493 24804 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:21.952500 24804 net.cpp:139] Memory required for data: 805120
I0428 19:41:21.952507 24804 layer_factory.hpp:77] Creating layer loss
I0428 19:41:21.952515 24804 net.cpp:86] Creating Layer loss
I0428 19:41:21.952522 24804 net.cpp:408] loss <- ip2
I0428 19:41:21.952528 24804 net.cpp:408] loss <- label
I0428 19:41:21.952538 24804 net.cpp:382] loss -> loss
I0428 19:41:21.952576 24804 layer_factory.hpp:77] Creating layer loss
I0428 19:41:21.952860 24804 net.cpp:124] Setting up loss
I0428 19:41:21.952872 24804 net.cpp:131] Top shape: (1)
I0428 19:41:21.952878 24804 net.cpp:134]     with loss weight 1
I0428 19:41:21.952914 24804 net.cpp:139] Memory required for data: 805124
I0428 19:41:21.952921 24804 net.cpp:200] loss needs backward computation.
I0428 19:41:21.952927 24804 net.cpp:200] relu2 needs backward computation.
I0428 19:41:21.952934 24804 net.cpp:200] ip2 needs backward computation.
I0428 19:41:21.952939 24804 net.cpp:200] relu1 needs backward computation.
I0428 19:41:21.952944 24804 net.cpp:200] ip1 needs backward computation.
I0428 19:41:21.952950 24804 net.cpp:200] pool1 needs backward computation.
I0428 19:41:21.952967 24804 net.cpp:200] conv1 needs backward computation.
I0428 19:41:21.952975 24804 net.cpp:200] pool0 needs backward computation.
I0428 19:41:21.952980 24804 net.cpp:200] conv0 needs backward computation.
I0428 19:41:21.952986 24804 net.cpp:202] mnist does not need backward computation.
I0428 19:41:21.952992 24804 net.cpp:244] This network produces output loss
I0428 19:41:21.953007 24804 net.cpp:257] Network initialization done.
I0428 19:41:21.953343 24804 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test362.prototxt
I0428 19:41:21.953374 24804 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:21.953459 24804 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:41:21.953550 24804 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:21.953608 24804 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:21.953639 24804 net.cpp:86] Creating Layer mnist
I0428 19:41:21.953645 24804 net.cpp:382] mnist -> data
I0428 19:41:21.953657 24804 net.cpp:382] mnist -> label
I0428 19:41:21.953774 24804 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:21.955862 24804 net.cpp:124] Setting up mnist
I0428 19:41:21.955875 24804 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:21.955883 24804 net.cpp:131] Top shape: 100 (100)
I0428 19:41:21.955888 24804 net.cpp:139] Memory required for data: 314000
I0428 19:41:21.955893 24804 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:21.955901 24804 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:21.955922 24804 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:21.955930 24804 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:21.955940 24804 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:21.956039 24804 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:21.956056 24804 net.cpp:131] Top shape: 100 (100)
I0428 19:41:21.956063 24804 net.cpp:131] Top shape: 100 (100)
I0428 19:41:21.956069 24804 net.cpp:139] Memory required for data: 314800
I0428 19:41:21.956074 24804 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:21.956089 24804 net.cpp:86] Creating Layer conv0
I0428 19:41:21.956094 24804 net.cpp:408] conv0 <- data
I0428 19:41:21.956104 24804 net.cpp:382] conv0 -> conv0
I0428 19:41:21.957729 24804 net.cpp:124] Setting up conv0
I0428 19:41:21.957746 24804 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:21.957751 24804 net.cpp:139] Memory required for data: 775600
I0428 19:41:21.957765 24804 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:21.957774 24804 net.cpp:86] Creating Layer pool0
I0428 19:41:21.957783 24804 net.cpp:408] pool0 <- conv0
I0428 19:41:21.957792 24804 net.cpp:382] pool0 -> pool0
I0428 19:41:21.957830 24804 net.cpp:124] Setting up pool0
I0428 19:41:21.957839 24804 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:21.957844 24804 net.cpp:139] Memory required for data: 890800
I0428 19:41:21.957849 24804 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:21.957861 24804 net.cpp:86] Creating Layer conv1
I0428 19:41:21.957867 24804 net.cpp:408] conv1 <- pool0
I0428 19:41:21.957876 24804 net.cpp:382] conv1 -> conv1
I0428 19:41:21.959302 24804 net.cpp:124] Setting up conv1
I0428 19:41:21.959317 24804 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:21.959323 24804 net.cpp:139] Memory required for data: 1146800
I0428 19:41:21.959337 24804 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:21.959347 24804 net.cpp:86] Creating Layer pool1
I0428 19:41:21.959354 24804 net.cpp:408] pool1 <- conv1
I0428 19:41:21.959362 24804 net.cpp:382] pool1 -> pool1
I0428 19:41:21.959404 24804 net.cpp:124] Setting up pool1
I0428 19:41:21.959414 24804 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:21.959419 24804 net.cpp:139] Memory required for data: 1210800
I0428 19:41:21.959424 24804 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:21.959434 24804 net.cpp:86] Creating Layer ip1
I0428 19:41:21.959439 24804 net.cpp:408] ip1 <- pool1
I0428 19:41:21.959448 24804 net.cpp:382] ip1 -> ip1
I0428 19:41:21.959609 24804 net.cpp:124] Setting up ip1
I0428 19:41:21.959632 24804 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:21.959637 24804 net.cpp:139] Memory required for data: 1230800
I0428 19:41:21.959650 24804 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:21.959657 24804 net.cpp:86] Creating Layer relu1
I0428 19:41:21.959666 24804 net.cpp:408] relu1 <- ip1
I0428 19:41:21.959674 24804 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:21.959825 24804 net.cpp:124] Setting up relu1
I0428 19:41:21.959834 24804 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:21.959839 24804 net.cpp:139] Memory required for data: 1250800
I0428 19:41:21.959844 24804 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:21.959856 24804 net.cpp:86] Creating Layer ip2
I0428 19:41:21.959861 24804 net.cpp:408] ip2 <- ip1
I0428 19:41:21.959869 24804 net.cpp:382] ip2 -> ip2
I0428 19:41:21.959983 24804 net.cpp:124] Setting up ip2
I0428 19:41:21.959992 24804 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:21.959998 24804 net.cpp:139] Memory required for data: 1254800
I0428 19:41:21.960007 24804 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:21.960014 24804 net.cpp:86] Creating Layer relu2
I0428 19:41:21.960021 24804 net.cpp:408] relu2 <- ip2
I0428 19:41:21.960027 24804 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:21.960192 24804 net.cpp:124] Setting up relu2
I0428 19:41:21.960202 24804 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:21.960207 24804 net.cpp:139] Memory required for data: 1258800
I0428 19:41:21.960212 24804 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:41:21.960219 24804 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:41:21.960225 24804 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:41:21.960234 24804 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:41:21.960255 24804 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:41:21.960330 24804 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:41:21.960338 24804 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:21.960345 24804 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:21.960350 24804 net.cpp:139] Memory required for data: 1266800
I0428 19:41:21.960356 24804 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:21.960364 24804 net.cpp:86] Creating Layer accuracy
I0428 19:41:21.960369 24804 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:41:21.960377 24804 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:21.960386 24804 net.cpp:382] accuracy -> accuracy
I0428 19:41:21.960402 24804 net.cpp:124] Setting up accuracy
I0428 19:41:21.960412 24804 net.cpp:131] Top shape: (1)
I0428 19:41:21.960417 24804 net.cpp:139] Memory required for data: 1266804
I0428 19:41:21.960422 24804 layer_factory.hpp:77] Creating layer loss
I0428 19:41:21.960430 24804 net.cpp:86] Creating Layer loss
I0428 19:41:21.960436 24804 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:41:21.960443 24804 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:21.960451 24804 net.cpp:382] loss -> loss
I0428 19:41:21.960461 24804 layer_factory.hpp:77] Creating layer loss
I0428 19:41:21.960695 24804 net.cpp:124] Setting up loss
I0428 19:41:21.960706 24804 net.cpp:131] Top shape: (1)
I0428 19:41:21.960711 24804 net.cpp:134]     with loss weight 1
I0428 19:41:21.960734 24804 net.cpp:139] Memory required for data: 1266808
I0428 19:41:21.960741 24804 net.cpp:200] loss needs backward computation.
I0428 19:41:21.960747 24804 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:21.960752 24804 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:41:21.960757 24804 net.cpp:200] relu2 needs backward computation.
I0428 19:41:21.960762 24804 net.cpp:200] ip2 needs backward computation.
I0428 19:41:21.960767 24804 net.cpp:200] relu1 needs backward computation.
I0428 19:41:21.960772 24804 net.cpp:200] ip1 needs backward computation.
I0428 19:41:21.960777 24804 net.cpp:200] pool1 needs backward computation.
I0428 19:41:21.960783 24804 net.cpp:200] conv1 needs backward computation.
I0428 19:41:21.960788 24804 net.cpp:200] pool0 needs backward computation.
I0428 19:41:21.960793 24804 net.cpp:200] conv0 needs backward computation.
I0428 19:41:21.960798 24804 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:21.960803 24804 net.cpp:202] mnist does not need backward computation.
I0428 19:41:21.960808 24804 net.cpp:244] This network produces output accuracy
I0428 19:41:21.960836 24804 net.cpp:244] This network produces output loss
I0428 19:41:21.960852 24804 net.cpp:257] Network initialization done.
I0428 19:41:21.960912 24804 solver.cpp:56] Solver scaffolding done.
I0428 19:41:21.961221 24804 caffe.cpp:248] Starting Optimization
I0428 19:41:21.961228 24804 solver.cpp:273] Solving LeNet
I0428 19:41:21.961232 24804 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:21.962069 24804 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:21.964275 24804 blocking_queue.cpp:49] Waiting for data
I0428 19:41:22.035985 24811 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:22.036510 24804 solver.cpp:398]     Test net output #0: accuracy = 0.0193
I0428 19:41:22.036542 24804 solver.cpp:398]     Test net output #1: loss = 2.35424 (* 1 = 2.35424 loss)
I0428 19:41:22.038895 24804 solver.cpp:219] Iteration 0 (0 iter/s, 0.0776274s/100 iters), loss = 2.33717
I0428 19:41:22.038938 24804 solver.cpp:238]     Train net output #0: loss = 2.33717 (* 1 = 2.33717 loss)
I0428 19:41:22.038965 24804 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:22.126896 24804 solver.cpp:219] Iteration 100 (1136.97 iter/s, 0.0879534s/100 iters), loss = 1.18888
I0428 19:41:22.126936 24804 solver.cpp:238]     Train net output #0: loss = 1.18888 (* 1 = 1.18888 loss)
I0428 19:41:22.126951 24804 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:22.198370 24804 solver.cpp:219] Iteration 200 (1399.97 iter/s, 0.0714301s/100 iters), loss = 1.12979
I0428 19:41:22.198415 24804 solver.cpp:238]     Train net output #0: loss = 1.12979 (* 1 = 1.12979 loss)
I0428 19:41:22.198426 24804 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:22.263983 24804 solver.cpp:219] Iteration 300 (1525.24 iter/s, 0.0655636s/100 iters), loss = 1.0742
I0428 19:41:22.264009 24804 solver.cpp:238]     Train net output #0: loss = 1.0742 (* 1 = 1.0742 loss)
I0428 19:41:22.264019 24804 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:22.329550 24804 solver.cpp:219] Iteration 400 (1525.9 iter/s, 0.065535s/100 iters), loss = 0.943901
I0428 19:41:22.329577 24804 solver.cpp:238]     Train net output #0: loss = 0.943901 (* 1 = 0.943901 loss)
I0428 19:41:22.329602 24804 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:22.395647 24804 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:22.441303 24811 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:22.441721 24804 solver.cpp:398]     Test net output #0: accuracy = 0.7632
I0428 19:41:22.441742 24804 solver.cpp:398]     Test net output #1: loss = 0.62294 (* 1 = 0.62294 loss)
I0428 19:41:22.442436 24804 solver.cpp:219] Iteration 500 (886.125 iter/s, 0.112851s/100 iters), loss = 0.580669
I0428 19:41:22.442464 24804 solver.cpp:238]     Train net output #0: loss = 0.580669 (* 1 = 0.580669 loss)
I0428 19:41:22.442474 24804 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:22.508910 24804 solver.cpp:219] Iteration 600 (1505.11 iter/s, 0.0664402s/100 iters), loss = 0.837541
I0428 19:41:22.508937 24804 solver.cpp:238]     Train net output #0: loss = 0.837541 (* 1 = 0.837541 loss)
I0428 19:41:22.508963 24804 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:22.573554 24804 solver.cpp:219] Iteration 700 (1547.72 iter/s, 0.0646111s/100 iters), loss = 0.51123
I0428 19:41:22.573580 24804 solver.cpp:238]     Train net output #0: loss = 0.51123 (* 1 = 0.51123 loss)
I0428 19:41:22.573606 24804 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:22.638047 24804 solver.cpp:219] Iteration 800 (1551.33 iter/s, 0.0644608s/100 iters), loss = 0.445972
I0428 19:41:22.638074 24804 solver.cpp:238]     Train net output #0: loss = 0.445972 (* 1 = 0.445972 loss)
I0428 19:41:22.638100 24804 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:22.702704 24804 solver.cpp:219] Iteration 900 (1547.4 iter/s, 0.0646246s/100 iters), loss = 0.261155
I0428 19:41:22.702730 24804 solver.cpp:238]     Train net output #0: loss = 0.261155 (* 1 = 0.261155 loss)
I0428 19:41:22.702756 24804 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:22.724298 24810 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:22.766508 24804 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:22.767179 24804 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:22.767627 24804 solver.cpp:311] Iteration 1000, loss = 0.341848
I0428 19:41:22.767642 24804 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:22.812088 24811 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:22.812597 24804 solver.cpp:398]     Test net output #0: accuracy = 0.8679
I0428 19:41:22.812628 24804 solver.cpp:398]     Test net output #1: loss = 0.34213 (* 1 = 0.34213 loss)
I0428 19:41:22.812639 24804 solver.cpp:316] Optimization Done.
I0428 19:41:22.812647 24804 caffe.cpp:259] Optimization Done.
