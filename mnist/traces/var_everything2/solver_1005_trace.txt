I0428 20:05:37.477805 30659 caffe.cpp:218] Using GPUs 0
I0428 20:05:37.514252 30659 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:37.968076 30659 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1005.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:37.968204 30659 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1005.prototxt
I0428 20:05:37.968564 30659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:37.968597 30659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:37.968693 30659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:37.968757 30659 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:37.968880 30659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:37.968899 30659 net.cpp:86] Creating Layer mnist
I0428 20:05:37.968907 30659 net.cpp:382] mnist -> data
I0428 20:05:37.968925 30659 net.cpp:382] mnist -> label
I0428 20:05:37.969946 30659 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:37.972151 30659 net.cpp:124] Setting up mnist
I0428 20:05:37.972164 30659 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:37.972170 30659 net.cpp:131] Top shape: 64 (64)
I0428 20:05:37.972173 30659 net.cpp:139] Memory required for data: 200960
I0428 20:05:37.972179 30659 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:37.972219 30659 net.cpp:86] Creating Layer conv0
I0428 20:05:37.972236 30659 net.cpp:408] conv0 <- data
I0428 20:05:37.972249 30659 net.cpp:382] conv0 -> conv0
I0428 20:05:38.199517 30659 net.cpp:124] Setting up conv0
I0428 20:05:38.199542 30659 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:38.199546 30659 net.cpp:139] Memory required for data: 3887360
I0428 20:05:38.199561 30659 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:38.199573 30659 net.cpp:86] Creating Layer pool0
I0428 20:05:38.199578 30659 net.cpp:408] pool0 <- conv0
I0428 20:05:38.199582 30659 net.cpp:382] pool0 -> pool0
I0428 20:05:38.199640 30659 net.cpp:124] Setting up pool0
I0428 20:05:38.199646 30659 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:38.199650 30659 net.cpp:139] Memory required for data: 4808960
I0428 20:05:38.199652 30659 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:38.199662 30659 net.cpp:86] Creating Layer conv1
I0428 20:05:38.199666 30659 net.cpp:408] conv1 <- pool0
I0428 20:05:38.199671 30659 net.cpp:382] conv1 -> conv1
I0428 20:05:38.202417 30659 net.cpp:124] Setting up conv1
I0428 20:05:38.202447 30659 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:38.202451 30659 net.cpp:139] Memory required for data: 4841728
I0428 20:05:38.202460 30659 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:38.202466 30659 net.cpp:86] Creating Layer pool1
I0428 20:05:38.202486 30659 net.cpp:408] pool1 <- conv1
I0428 20:05:38.202491 30659 net.cpp:382] pool1 -> pool1
I0428 20:05:38.202525 30659 net.cpp:124] Setting up pool1
I0428 20:05:38.202543 30659 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:38.202545 30659 net.cpp:139] Memory required for data: 4849920
I0428 20:05:38.202548 30659 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:38.202555 30659 net.cpp:86] Creating Layer ip1
I0428 20:05:38.202558 30659 net.cpp:408] ip1 <- pool1
I0428 20:05:38.202563 30659 net.cpp:382] ip1 -> ip1
I0428 20:05:38.202682 30659 net.cpp:124] Setting up ip1
I0428 20:05:38.202689 30659 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:38.202692 30659 net.cpp:139] Memory required for data: 4862720
I0428 20:05:38.202699 30659 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:38.202704 30659 net.cpp:86] Creating Layer relu1
I0428 20:05:38.202708 30659 net.cpp:408] relu1 <- ip1
I0428 20:05:38.202711 30659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:38.202863 30659 net.cpp:124] Setting up relu1
I0428 20:05:38.202872 30659 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:38.202874 30659 net.cpp:139] Memory required for data: 4875520
I0428 20:05:38.202877 30659 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:38.202883 30659 net.cpp:86] Creating Layer ip2
I0428 20:05:38.202886 30659 net.cpp:408] ip2 <- ip1
I0428 20:05:38.202891 30659 net.cpp:382] ip2 -> ip2
I0428 20:05:38.202981 30659 net.cpp:124] Setting up ip2
I0428 20:05:38.202988 30659 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:38.202991 30659 net.cpp:139] Memory required for data: 4878080
I0428 20:05:38.202996 30659 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:38.203001 30659 net.cpp:86] Creating Layer relu2
I0428 20:05:38.203004 30659 net.cpp:408] relu2 <- ip2
I0428 20:05:38.203008 30659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:38.203737 30659 net.cpp:124] Setting up relu2
I0428 20:05:38.203748 30659 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:38.203768 30659 net.cpp:139] Memory required for data: 4880640
I0428 20:05:38.203773 30659 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:38.203779 30659 net.cpp:86] Creating Layer ip3
I0428 20:05:38.203783 30659 net.cpp:408] ip3 <- ip2
I0428 20:05:38.203788 30659 net.cpp:382] ip3 -> ip3
I0428 20:05:38.203912 30659 net.cpp:124] Setting up ip3
I0428 20:05:38.203919 30659 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:38.203922 30659 net.cpp:139] Memory required for data: 4883200
I0428 20:05:38.203929 30659 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:38.203934 30659 net.cpp:86] Creating Layer relu3
I0428 20:05:38.203941 30659 net.cpp:408] relu3 <- ip3
I0428 20:05:38.203945 30659 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:38.204102 30659 net.cpp:124] Setting up relu3
I0428 20:05:38.204110 30659 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:38.204113 30659 net.cpp:139] Memory required for data: 4885760
I0428 20:05:38.204118 30659 layer_factory.hpp:77] Creating layer loss
I0428 20:05:38.204123 30659 net.cpp:86] Creating Layer loss
I0428 20:05:38.204125 30659 net.cpp:408] loss <- ip3
I0428 20:05:38.204129 30659 net.cpp:408] loss <- label
I0428 20:05:38.204134 30659 net.cpp:382] loss -> loss
I0428 20:05:38.204149 30659 layer_factory.hpp:77] Creating layer loss
I0428 20:05:38.204357 30659 net.cpp:124] Setting up loss
I0428 20:05:38.204366 30659 net.cpp:131] Top shape: (1)
I0428 20:05:38.204370 30659 net.cpp:134]     with loss weight 1
I0428 20:05:38.204383 30659 net.cpp:139] Memory required for data: 4885764
I0428 20:05:38.204386 30659 net.cpp:200] loss needs backward computation.
I0428 20:05:38.204391 30659 net.cpp:200] relu3 needs backward computation.
I0428 20:05:38.204393 30659 net.cpp:200] ip3 needs backward computation.
I0428 20:05:38.204396 30659 net.cpp:200] relu2 needs backward computation.
I0428 20:05:38.204398 30659 net.cpp:200] ip2 needs backward computation.
I0428 20:05:38.204401 30659 net.cpp:200] relu1 needs backward computation.
I0428 20:05:38.204403 30659 net.cpp:200] ip1 needs backward computation.
I0428 20:05:38.204406 30659 net.cpp:200] pool1 needs backward computation.
I0428 20:05:38.204409 30659 net.cpp:200] conv1 needs backward computation.
I0428 20:05:38.204412 30659 net.cpp:200] pool0 needs backward computation.
I0428 20:05:38.204416 30659 net.cpp:200] conv0 needs backward computation.
I0428 20:05:38.204418 30659 net.cpp:202] mnist does not need backward computation.
I0428 20:05:38.204421 30659 net.cpp:244] This network produces output loss
I0428 20:05:38.204429 30659 net.cpp:257] Network initialization done.
I0428 20:05:38.204737 30659 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1005.prototxt
I0428 20:05:38.204793 30659 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:38.204959 30659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:38.205047 30659 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:38.205098 30659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:38.205111 30659 net.cpp:86] Creating Layer mnist
I0428 20:05:38.205116 30659 net.cpp:382] mnist -> data
I0428 20:05:38.205126 30659 net.cpp:382] mnist -> label
I0428 20:05:38.205271 30659 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:38.207139 30659 net.cpp:124] Setting up mnist
I0428 20:05:38.207182 30659 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:38.207187 30659 net.cpp:131] Top shape: 100 (100)
I0428 20:05:38.207190 30659 net.cpp:139] Memory required for data: 314000
I0428 20:05:38.207195 30659 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:38.207201 30659 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:38.207204 30659 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:38.207209 30659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:38.207216 30659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:38.207259 30659 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:38.207265 30659 net.cpp:131] Top shape: 100 (100)
I0428 20:05:38.207268 30659 net.cpp:131] Top shape: 100 (100)
I0428 20:05:38.207271 30659 net.cpp:139] Memory required for data: 314800
I0428 20:05:38.207274 30659 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:38.207283 30659 net.cpp:86] Creating Layer conv0
I0428 20:05:38.207285 30659 net.cpp:408] conv0 <- data
I0428 20:05:38.207305 30659 net.cpp:382] conv0 -> conv0
I0428 20:05:38.209033 30659 net.cpp:124] Setting up conv0
I0428 20:05:38.209046 30659 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:38.209050 30659 net.cpp:139] Memory required for data: 6074800
I0428 20:05:38.209059 30659 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:38.209066 30659 net.cpp:86] Creating Layer pool0
I0428 20:05:38.209069 30659 net.cpp:408] pool0 <- conv0
I0428 20:05:38.209089 30659 net.cpp:382] pool0 -> pool0
I0428 20:05:38.209125 30659 net.cpp:124] Setting up pool0
I0428 20:05:38.209131 30659 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:38.209134 30659 net.cpp:139] Memory required for data: 7514800
I0428 20:05:38.209137 30659 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:38.209159 30659 net.cpp:86] Creating Layer conv1
I0428 20:05:38.209162 30659 net.cpp:408] conv1 <- pool0
I0428 20:05:38.209167 30659 net.cpp:382] conv1 -> conv1
I0428 20:05:38.211269 30659 net.cpp:124] Setting up conv1
I0428 20:05:38.211282 30659 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:38.211287 30659 net.cpp:139] Memory required for data: 7566000
I0428 20:05:38.211294 30659 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:38.211316 30659 net.cpp:86] Creating Layer pool1
I0428 20:05:38.211320 30659 net.cpp:408] pool1 <- conv1
I0428 20:05:38.211341 30659 net.cpp:382] pool1 -> pool1
I0428 20:05:38.211406 30659 net.cpp:124] Setting up pool1
I0428 20:05:38.211413 30659 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:38.211416 30659 net.cpp:139] Memory required for data: 7578800
I0428 20:05:38.211419 30659 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:38.211426 30659 net.cpp:86] Creating Layer ip1
I0428 20:05:38.211429 30659 net.cpp:408] ip1 <- pool1
I0428 20:05:38.211434 30659 net.cpp:382] ip1 -> ip1
I0428 20:05:38.211537 30659 net.cpp:124] Setting up ip1
I0428 20:05:38.211544 30659 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:38.211558 30659 net.cpp:139] Memory required for data: 7598800
I0428 20:05:38.211567 30659 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:38.211573 30659 net.cpp:86] Creating Layer relu1
I0428 20:05:38.211576 30659 net.cpp:408] relu1 <- ip1
I0428 20:05:38.211581 30659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:38.211738 30659 net.cpp:124] Setting up relu1
I0428 20:05:38.211746 30659 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:38.211750 30659 net.cpp:139] Memory required for data: 7618800
I0428 20:05:38.211753 30659 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:38.211760 30659 net.cpp:86] Creating Layer ip2
I0428 20:05:38.211763 30659 net.cpp:408] ip2 <- ip1
I0428 20:05:38.211767 30659 net.cpp:382] ip2 -> ip2
I0428 20:05:38.211920 30659 net.cpp:124] Setting up ip2
I0428 20:05:38.211927 30659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:38.211931 30659 net.cpp:139] Memory required for data: 7622800
I0428 20:05:38.211936 30659 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:38.211941 30659 net.cpp:86] Creating Layer relu2
I0428 20:05:38.211943 30659 net.cpp:408] relu2 <- ip2
I0428 20:05:38.211947 30659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:38.212090 30659 net.cpp:124] Setting up relu2
I0428 20:05:38.212098 30659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:38.212101 30659 net.cpp:139] Memory required for data: 7626800
I0428 20:05:38.212105 30659 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:38.212110 30659 net.cpp:86] Creating Layer ip3
I0428 20:05:38.212112 30659 net.cpp:408] ip3 <- ip2
I0428 20:05:38.212117 30659 net.cpp:382] ip3 -> ip3
I0428 20:05:38.212208 30659 net.cpp:124] Setting up ip3
I0428 20:05:38.212218 30659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:38.212237 30659 net.cpp:139] Memory required for data: 7630800
I0428 20:05:38.212245 30659 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:38.212249 30659 net.cpp:86] Creating Layer relu3
I0428 20:05:38.212254 30659 net.cpp:408] relu3 <- ip3
I0428 20:05:38.212257 30659 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:38.213130 30659 net.cpp:124] Setting up relu3
I0428 20:05:38.213160 30659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:38.213179 30659 net.cpp:139] Memory required for data: 7634800
I0428 20:05:38.213183 30659 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:38.213189 30659 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:38.213210 30659 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:38.213217 30659 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:38.213238 30659 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:38.213274 30659 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:38.213279 30659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:38.213284 30659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:38.213286 30659 net.cpp:139] Memory required for data: 7642800
I0428 20:05:38.213289 30659 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:38.213294 30659 net.cpp:86] Creating Layer accuracy
I0428 20:05:38.213297 30659 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:38.213301 30659 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:38.213305 30659 net.cpp:382] accuracy -> accuracy
I0428 20:05:38.213311 30659 net.cpp:124] Setting up accuracy
I0428 20:05:38.213315 30659 net.cpp:131] Top shape: (1)
I0428 20:05:38.213318 30659 net.cpp:139] Memory required for data: 7642804
I0428 20:05:38.213321 30659 layer_factory.hpp:77] Creating layer loss
I0428 20:05:38.213325 30659 net.cpp:86] Creating Layer loss
I0428 20:05:38.213328 30659 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:38.213332 30659 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:38.213336 30659 net.cpp:382] loss -> loss
I0428 20:05:38.213341 30659 layer_factory.hpp:77] Creating layer loss
I0428 20:05:38.213565 30659 net.cpp:124] Setting up loss
I0428 20:05:38.213575 30659 net.cpp:131] Top shape: (1)
I0428 20:05:38.213578 30659 net.cpp:134]     with loss weight 1
I0428 20:05:38.213585 30659 net.cpp:139] Memory required for data: 7642808
I0428 20:05:38.213598 30659 net.cpp:200] loss needs backward computation.
I0428 20:05:38.213603 30659 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:38.213606 30659 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:38.213609 30659 net.cpp:200] relu3 needs backward computation.
I0428 20:05:38.213611 30659 net.cpp:200] ip3 needs backward computation.
I0428 20:05:38.213614 30659 net.cpp:200] relu2 needs backward computation.
I0428 20:05:38.213618 30659 net.cpp:200] ip2 needs backward computation.
I0428 20:05:38.213620 30659 net.cpp:200] relu1 needs backward computation.
I0428 20:05:38.213624 30659 net.cpp:200] ip1 needs backward computation.
I0428 20:05:38.213626 30659 net.cpp:200] pool1 needs backward computation.
I0428 20:05:38.213629 30659 net.cpp:200] conv1 needs backward computation.
I0428 20:05:38.213632 30659 net.cpp:200] pool0 needs backward computation.
I0428 20:05:38.213635 30659 net.cpp:200] conv0 needs backward computation.
I0428 20:05:38.213639 30659 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:38.213642 30659 net.cpp:202] mnist does not need backward computation.
I0428 20:05:38.213644 30659 net.cpp:244] This network produces output accuracy
I0428 20:05:38.213649 30659 net.cpp:244] This network produces output loss
I0428 20:05:38.213659 30659 net.cpp:257] Network initialization done.
I0428 20:05:38.213699 30659 solver.cpp:56] Solver scaffolding done.
I0428 20:05:38.214056 30659 caffe.cpp:248] Starting Optimization
I0428 20:05:38.214063 30659 solver.cpp:273] Solving LeNet
I0428 20:05:38.214066 30659 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:38.214846 30659 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:38.271039 30666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:38.271955 30659 solver.cpp:398]     Test net output #0: accuracy = 0.0887
I0428 20:05:38.271991 30659 solver.cpp:398]     Test net output #1: loss = 2.30702 (* 1 = 2.30702 loss)
I0428 20:05:38.274966 30659 solver.cpp:219] Iteration 0 (0 iter/s, 0.0608604s/100 iters), loss = 2.29938
I0428 20:05:38.274989 30659 solver.cpp:238]     Train net output #0: loss = 2.29938 (* 1 = 2.29938 loss)
I0428 20:05:38.275002 30659 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:38.375090 30659 solver.cpp:219] Iteration 100 (999.164 iter/s, 0.100084s/100 iters), loss = 1.78282
I0428 20:05:38.375130 30659 solver.cpp:238]     Train net output #0: loss = 1.78282 (* 1 = 1.78282 loss)
I0428 20:05:38.375136 30659 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:38.462759 30659 solver.cpp:219] Iteration 200 (1141.11 iter/s, 0.0876339s/100 iters), loss = 1.85557
I0428 20:05:38.462782 30659 solver.cpp:238]     Train net output #0: loss = 1.85557 (* 1 = 1.85557 loss)
I0428 20:05:38.462787 30659 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:38.554541 30659 solver.cpp:219] Iteration 300 (1089.93 iter/s, 0.0917494s/100 iters), loss = 1.56617
I0428 20:05:38.554564 30659 solver.cpp:238]     Train net output #0: loss = 1.56617 (* 1 = 1.56617 loss)
I0428 20:05:38.554570 30659 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:38.643664 30659 solver.cpp:219] Iteration 400 (1122.47 iter/s, 0.089089s/100 iters), loss = 1.24434
I0428 20:05:38.643687 30659 solver.cpp:238]     Train net output #0: loss = 1.24434 (* 1 = 1.24434 loss)
I0428 20:05:38.643692 30659 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:38.737066 30659 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:38.742648 30659 blocking_queue.cpp:49] Waiting for data
I0428 20:05:38.811275 30666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:38.811870 30659 solver.cpp:398]     Test net output #0: accuracy = 0.5216
I0428 20:05:38.811890 30659 solver.cpp:398]     Test net output #1: loss = 1.26281 (* 1 = 1.26281 loss)
I0428 20:05:38.812800 30659 solver.cpp:219] Iteration 500 (591.412 iter/s, 0.169087s/100 iters), loss = 1.18106
I0428 20:05:38.812834 30659 solver.cpp:238]     Train net output #0: loss = 1.18106 (* 1 = 1.18106 loss)
I0428 20:05:38.812860 30659 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:38.914559 30659 solver.cpp:219] Iteration 600 (983.14 iter/s, 0.101715s/100 iters), loss = 1.53093
I0428 20:05:38.914585 30659 solver.cpp:238]     Train net output #0: loss = 1.53093 (* 1 = 1.53093 loss)
I0428 20:05:38.914608 30659 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:39.004096 30659 solver.cpp:219] Iteration 700 (1117.31 iter/s, 0.0895007s/100 iters), loss = 0.944207
I0428 20:05:39.004123 30659 solver.cpp:238]     Train net output #0: loss = 0.944207 (* 1 = 0.944207 loss)
I0428 20:05:39.004130 30659 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:39.091856 30659 solver.cpp:219] Iteration 800 (1139.96 iter/s, 0.0877221s/100 iters), loss = 0.957777
I0428 20:05:39.091881 30659 solver.cpp:238]     Train net output #0: loss = 0.957777 (* 1 = 0.957777 loss)
I0428 20:05:39.091888 30659 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:39.179162 30659 solver.cpp:219] Iteration 900 (1145.86 iter/s, 0.0872704s/100 iters), loss = 1.3296
I0428 20:05:39.179186 30659 solver.cpp:238]     Train net output #0: loss = 1.3296 (* 1 = 1.3296 loss)
I0428 20:05:39.179208 30659 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:39.208601 30665 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:39.265875 30659 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:39.266649 30659 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:39.267179 30659 solver.cpp:311] Iteration 1000, loss = 0.995688
I0428 20:05:39.267195 30659 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:39.342000 30666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:39.342608 30659 solver.cpp:398]     Test net output #0: accuracy = 0.64
I0428 20:05:39.342628 30659 solver.cpp:398]     Test net output #1: loss = 0.913761 (* 1 = 0.913761 loss)
I0428 20:05:39.342635 30659 solver.cpp:316] Optimization Done.
I0428 20:05:39.342639 30659 caffe.cpp:259] Optimization Done.
