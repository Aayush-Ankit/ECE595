I0428 20:24:36.595836  2433 caffe.cpp:218] Using GPUs 0
I0428 20:24:36.633401  2433 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:37.147536  2433 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1440.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:37.147680  2433 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1440.prototxt
I0428 20:24:37.148083  2433 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:37.148100  2433 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:37.148197  2433 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:37.148272  2433 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:37.148375  2433 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:37.148398  2433 net.cpp:86] Creating Layer mnist
I0428 20:24:37.148406  2433 net.cpp:382] mnist -> data
I0428 20:24:37.148428  2433 net.cpp:382] mnist -> label
I0428 20:24:37.149557  2433 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:37.151993  2433 net.cpp:124] Setting up mnist
I0428 20:24:37.152009  2433 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:37.152015  2433 net.cpp:131] Top shape: 64 (64)
I0428 20:24:37.152019  2433 net.cpp:139] Memory required for data: 200960
I0428 20:24:37.152026  2433 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:37.152042  2433 net.cpp:86] Creating Layer conv0
I0428 20:24:37.152061  2433 net.cpp:408] conv0 <- data
I0428 20:24:37.152073  2433 net.cpp:382] conv0 -> conv0
I0428 20:24:37.430106  2433 net.cpp:124] Setting up conv0
I0428 20:24:37.430132  2433 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:37.430136  2433 net.cpp:139] Memory required for data: 7573760
I0428 20:24:37.430152  2433 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:37.430164  2433 net.cpp:86] Creating Layer pool0
I0428 20:24:37.430168  2433 net.cpp:408] pool0 <- conv0
I0428 20:24:37.430174  2433 net.cpp:382] pool0 -> pool0
I0428 20:24:37.430222  2433 net.cpp:124] Setting up pool0
I0428 20:24:37.430229  2433 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:37.430233  2433 net.cpp:139] Memory required for data: 9416960
I0428 20:24:37.430236  2433 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:37.430248  2433 net.cpp:86] Creating Layer conv1
I0428 20:24:37.430251  2433 net.cpp:408] conv1 <- pool0
I0428 20:24:37.430255  2433 net.cpp:382] conv1 -> conv1
I0428 20:24:37.433812  2433 net.cpp:124] Setting up conv1
I0428 20:24:37.433827  2433 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:37.433831  2433 net.cpp:139] Memory required for data: 11055360
I0428 20:24:37.433856  2433 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:37.433863  2433 net.cpp:86] Creating Layer pool1
I0428 20:24:37.433867  2433 net.cpp:408] pool1 <- conv1
I0428 20:24:37.433872  2433 net.cpp:382] pool1 -> pool1
I0428 20:24:37.433923  2433 net.cpp:124] Setting up pool1
I0428 20:24:37.433929  2433 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:37.433933  2433 net.cpp:139] Memory required for data: 11464960
I0428 20:24:37.433935  2433 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:37.433943  2433 net.cpp:86] Creating Layer ip1
I0428 20:24:37.433945  2433 net.cpp:408] ip1 <- pool1
I0428 20:24:37.433950  2433 net.cpp:382] ip1 -> ip1
I0428 20:24:37.434481  2433 net.cpp:124] Setting up ip1
I0428 20:24:37.434489  2433 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:37.434492  2433 net.cpp:139] Memory required for data: 11477760
I0428 20:24:37.434499  2433 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:37.434505  2433 net.cpp:86] Creating Layer relu1
I0428 20:24:37.434509  2433 net.cpp:408] relu1 <- ip1
I0428 20:24:37.434512  2433 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:37.434675  2433 net.cpp:124] Setting up relu1
I0428 20:24:37.434684  2433 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:37.434687  2433 net.cpp:139] Memory required for data: 11490560
I0428 20:24:37.434691  2433 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:37.434696  2433 net.cpp:86] Creating Layer ip2
I0428 20:24:37.434700  2433 net.cpp:408] ip2 <- ip1
I0428 20:24:37.434705  2433 net.cpp:382] ip2 -> ip2
I0428 20:24:37.434811  2433 net.cpp:124] Setting up ip2
I0428 20:24:37.434818  2433 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:37.434823  2433 net.cpp:139] Memory required for data: 11503360
I0428 20:24:37.434828  2433 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:37.434834  2433 net.cpp:86] Creating Layer relu2
I0428 20:24:37.434836  2433 net.cpp:408] relu2 <- ip2
I0428 20:24:37.434840  2433 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:37.435619  2433 net.cpp:124] Setting up relu2
I0428 20:24:37.435632  2433 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:37.435636  2433 net.cpp:139] Memory required for data: 11516160
I0428 20:24:37.435639  2433 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:37.435647  2433 net.cpp:86] Creating Layer ip3
I0428 20:24:37.435649  2433 net.cpp:408] ip3 <- ip2
I0428 20:24:37.435655  2433 net.cpp:382] ip3 -> ip3
I0428 20:24:37.435753  2433 net.cpp:124] Setting up ip3
I0428 20:24:37.435760  2433 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:37.435763  2433 net.cpp:139] Memory required for data: 11518720
I0428 20:24:37.435771  2433 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:37.435776  2433 net.cpp:86] Creating Layer relu3
I0428 20:24:37.435780  2433 net.cpp:408] relu3 <- ip3
I0428 20:24:37.435783  2433 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:37.435942  2433 net.cpp:124] Setting up relu3
I0428 20:24:37.435950  2433 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:37.435953  2433 net.cpp:139] Memory required for data: 11521280
I0428 20:24:37.435956  2433 layer_factory.hpp:77] Creating layer loss
I0428 20:24:37.435962  2433 net.cpp:86] Creating Layer loss
I0428 20:24:37.435966  2433 net.cpp:408] loss <- ip3
I0428 20:24:37.435969  2433 net.cpp:408] loss <- label
I0428 20:24:37.435974  2433 net.cpp:382] loss -> loss
I0428 20:24:37.435988  2433 layer_factory.hpp:77] Creating layer loss
I0428 20:24:37.436249  2433 net.cpp:124] Setting up loss
I0428 20:24:37.436259  2433 net.cpp:131] Top shape: (1)
I0428 20:24:37.436261  2433 net.cpp:134]     with loss weight 1
I0428 20:24:37.436276  2433 net.cpp:139] Memory required for data: 11521284
I0428 20:24:37.436280  2433 net.cpp:200] loss needs backward computation.
I0428 20:24:37.436285  2433 net.cpp:200] relu3 needs backward computation.
I0428 20:24:37.436287  2433 net.cpp:200] ip3 needs backward computation.
I0428 20:24:37.436290  2433 net.cpp:200] relu2 needs backward computation.
I0428 20:24:37.436293  2433 net.cpp:200] ip2 needs backward computation.
I0428 20:24:37.436296  2433 net.cpp:200] relu1 needs backward computation.
I0428 20:24:37.436300  2433 net.cpp:200] ip1 needs backward computation.
I0428 20:24:37.436302  2433 net.cpp:200] pool1 needs backward computation.
I0428 20:24:37.436305  2433 net.cpp:200] conv1 needs backward computation.
I0428 20:24:37.436309  2433 net.cpp:200] pool0 needs backward computation.
I0428 20:24:37.436312  2433 net.cpp:200] conv0 needs backward computation.
I0428 20:24:37.436316  2433 net.cpp:202] mnist does not need backward computation.
I0428 20:24:37.436319  2433 net.cpp:244] This network produces output loss
I0428 20:24:37.436328  2433 net.cpp:257] Network initialization done.
I0428 20:24:37.436671  2433 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1440.prototxt
I0428 20:24:37.436698  2433 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:37.436803  2433 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:37.436941  2433 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:37.436990  2433 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:37.437002  2433 net.cpp:86] Creating Layer mnist
I0428 20:24:37.437007  2433 net.cpp:382] mnist -> data
I0428 20:24:37.437016  2433 net.cpp:382] mnist -> label
I0428 20:24:37.437108  2433 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:37.438474  2433 net.cpp:124] Setting up mnist
I0428 20:24:37.438504  2433 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:37.438509  2433 net.cpp:131] Top shape: 100 (100)
I0428 20:24:37.438513  2433 net.cpp:139] Memory required for data: 314000
I0428 20:24:37.438516  2433 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:37.438524  2433 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:37.438527  2433 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:37.438532  2433 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:37.438539  2433 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:37.438617  2433 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:37.438626  2433 net.cpp:131] Top shape: 100 (100)
I0428 20:24:37.438629  2433 net.cpp:131] Top shape: 100 (100)
I0428 20:24:37.438632  2433 net.cpp:139] Memory required for data: 314800
I0428 20:24:37.438635  2433 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:37.438644  2433 net.cpp:86] Creating Layer conv0
I0428 20:24:37.438647  2433 net.cpp:408] conv0 <- data
I0428 20:24:37.438653  2433 net.cpp:382] conv0 -> conv0
I0428 20:24:37.440253  2433 net.cpp:124] Setting up conv0
I0428 20:24:37.440266  2433 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:37.440269  2433 net.cpp:139] Memory required for data: 11834800
I0428 20:24:37.440294  2433 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:37.440302  2433 net.cpp:86] Creating Layer pool0
I0428 20:24:37.440306  2433 net.cpp:408] pool0 <- conv0
I0428 20:24:37.440311  2433 net.cpp:382] pool0 -> pool0
I0428 20:24:37.440349  2433 net.cpp:124] Setting up pool0
I0428 20:24:37.440358  2433 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:37.440361  2433 net.cpp:139] Memory required for data: 14714800
I0428 20:24:37.440364  2433 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:37.440373  2433 net.cpp:86] Creating Layer conv1
I0428 20:24:37.440377  2433 net.cpp:408] conv1 <- pool0
I0428 20:24:37.440383  2433 net.cpp:382] conv1 -> conv1
I0428 20:24:37.443612  2433 net.cpp:124] Setting up conv1
I0428 20:24:37.443629  2433 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:37.443634  2433 net.cpp:139] Memory required for data: 17274800
I0428 20:24:37.443658  2433 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:37.443665  2433 net.cpp:86] Creating Layer pool1
I0428 20:24:37.443670  2433 net.cpp:408] pool1 <- conv1
I0428 20:24:37.443675  2433 net.cpp:382] pool1 -> pool1
I0428 20:24:37.443711  2433 net.cpp:124] Setting up pool1
I0428 20:24:37.443717  2433 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:37.443720  2433 net.cpp:139] Memory required for data: 17914800
I0428 20:24:37.443723  2433 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:37.443729  2433 net.cpp:86] Creating Layer ip1
I0428 20:24:37.443732  2433 net.cpp:408] ip1 <- pool1
I0428 20:24:37.443737  2433 net.cpp:382] ip1 -> ip1
I0428 20:24:37.444322  2433 net.cpp:124] Setting up ip1
I0428 20:24:37.444344  2433 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:37.444346  2433 net.cpp:139] Memory required for data: 17934800
I0428 20:24:37.444355  2433 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:37.444360  2433 net.cpp:86] Creating Layer relu1
I0428 20:24:37.444362  2433 net.cpp:408] relu1 <- ip1
I0428 20:24:37.444366  2433 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:37.444545  2433 net.cpp:124] Setting up relu1
I0428 20:24:37.444555  2433 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:37.444558  2433 net.cpp:139] Memory required for data: 17954800
I0428 20:24:37.444561  2433 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:37.444568  2433 net.cpp:86] Creating Layer ip2
I0428 20:24:37.444571  2433 net.cpp:408] ip2 <- ip1
I0428 20:24:37.444576  2433 net.cpp:382] ip2 -> ip2
I0428 20:24:37.444686  2433 net.cpp:124] Setting up ip2
I0428 20:24:37.444692  2433 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:37.444696  2433 net.cpp:139] Memory required for data: 17974800
I0428 20:24:37.444701  2433 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:37.444705  2433 net.cpp:86] Creating Layer relu2
I0428 20:24:37.444708  2433 net.cpp:408] relu2 <- ip2
I0428 20:24:37.444712  2433 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:37.444880  2433 net.cpp:124] Setting up relu2
I0428 20:24:37.444888  2433 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:37.444891  2433 net.cpp:139] Memory required for data: 17994800
I0428 20:24:37.444895  2433 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:37.444900  2433 net.cpp:86] Creating Layer ip3
I0428 20:24:37.444902  2433 net.cpp:408] ip3 <- ip2
I0428 20:24:37.444918  2433 net.cpp:382] ip3 -> ip3
I0428 20:24:37.445037  2433 net.cpp:124] Setting up ip3
I0428 20:24:37.445044  2433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:37.445049  2433 net.cpp:139] Memory required for data: 17998800
I0428 20:24:37.445056  2433 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:37.445061  2433 net.cpp:86] Creating Layer relu3
I0428 20:24:37.445065  2433 net.cpp:408] relu3 <- ip3
I0428 20:24:37.445070  2433 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:37.445930  2433 net.cpp:124] Setting up relu3
I0428 20:24:37.445945  2433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:37.445948  2433 net.cpp:139] Memory required for data: 18002800
I0428 20:24:37.445952  2433 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:37.445958  2433 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:37.445961  2433 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:37.445967  2433 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:37.445974  2433 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:37.446028  2433 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:37.446035  2433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:37.446039  2433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:37.446043  2433 net.cpp:139] Memory required for data: 18010800
I0428 20:24:37.446045  2433 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:37.446050  2433 net.cpp:86] Creating Layer accuracy
I0428 20:24:37.446053  2433 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:37.446058  2433 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:37.446063  2433 net.cpp:382] accuracy -> accuracy
I0428 20:24:37.446069  2433 net.cpp:124] Setting up accuracy
I0428 20:24:37.446074  2433 net.cpp:131] Top shape: (1)
I0428 20:24:37.446076  2433 net.cpp:139] Memory required for data: 18010804
I0428 20:24:37.446079  2433 layer_factory.hpp:77] Creating layer loss
I0428 20:24:37.446084  2433 net.cpp:86] Creating Layer loss
I0428 20:24:37.446086  2433 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:37.446090  2433 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:37.446095  2433 net.cpp:382] loss -> loss
I0428 20:24:37.446104  2433 layer_factory.hpp:77] Creating layer loss
I0428 20:24:37.446344  2433 net.cpp:124] Setting up loss
I0428 20:24:37.446353  2433 net.cpp:131] Top shape: (1)
I0428 20:24:37.446357  2433 net.cpp:134]     with loss weight 1
I0428 20:24:37.446374  2433 net.cpp:139] Memory required for data: 18010808
I0428 20:24:37.446378  2433 net.cpp:200] loss needs backward computation.
I0428 20:24:37.446382  2433 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:37.446386  2433 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:37.446389  2433 net.cpp:200] relu3 needs backward computation.
I0428 20:24:37.446393  2433 net.cpp:200] ip3 needs backward computation.
I0428 20:24:37.446395  2433 net.cpp:200] relu2 needs backward computation.
I0428 20:24:37.446398  2433 net.cpp:200] ip2 needs backward computation.
I0428 20:24:37.446401  2433 net.cpp:200] relu1 needs backward computation.
I0428 20:24:37.446403  2433 net.cpp:200] ip1 needs backward computation.
I0428 20:24:37.446408  2433 net.cpp:200] pool1 needs backward computation.
I0428 20:24:37.446410  2433 net.cpp:200] conv1 needs backward computation.
I0428 20:24:37.446413  2433 net.cpp:200] pool0 needs backward computation.
I0428 20:24:37.446416  2433 net.cpp:200] conv0 needs backward computation.
I0428 20:24:37.446420  2433 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:37.446424  2433 net.cpp:202] mnist does not need backward computation.
I0428 20:24:37.446426  2433 net.cpp:244] This network produces output accuracy
I0428 20:24:37.446429  2433 net.cpp:244] This network produces output loss
I0428 20:24:37.446439  2433 net.cpp:257] Network initialization done.
I0428 20:24:37.446482  2433 solver.cpp:56] Solver scaffolding done.
I0428 20:24:37.446826  2433 caffe.cpp:248] Starting Optimization
I0428 20:24:37.446835  2433 solver.cpp:273] Solving LeNet
I0428 20:24:37.446837  2433 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:37.447636  2433 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:37.466226  2433 blocking_queue.cpp:49] Waiting for data
I0428 20:24:37.538246  2440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:37.539640  2433 solver.cpp:398]     Test net output #0: accuracy = 0.0985
I0428 20:24:37.539659  2433 solver.cpp:398]     Test net output #1: loss = 2.31887 (* 1 = 2.31887 loss)
I0428 20:24:37.545164  2433 solver.cpp:219] Iteration 0 (0 iter/s, 0.0983021s/100 iters), loss = 2.32431
I0428 20:24:37.545188  2433 solver.cpp:238]     Train net output #0: loss = 2.32431 (* 1 = 2.32431 loss)
I0428 20:24:37.545200  2433 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:37.774210  2433 solver.cpp:219] Iteration 100 (436.673 iter/s, 0.229004s/100 iters), loss = 0.470484
I0428 20:24:37.774245  2433 solver.cpp:238]     Train net output #0: loss = 0.470484 (* 1 = 0.470484 loss)
I0428 20:24:37.774253  2433 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:38.001538  2433 solver.cpp:219] Iteration 200 (439.996 iter/s, 0.227275s/100 iters), loss = 0.296748
I0428 20:24:38.001579  2433 solver.cpp:238]     Train net output #0: loss = 0.296748 (* 1 = 0.296748 loss)
I0428 20:24:38.001590  2433 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:38.225414  2433 solver.cpp:219] Iteration 300 (446.796 iter/s, 0.223816s/100 iters), loss = 0.171588
I0428 20:24:38.225466  2433 solver.cpp:238]     Train net output #0: loss = 0.171588 (* 1 = 0.171588 loss)
I0428 20:24:38.225481  2433 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:38.466465  2433 solver.cpp:219] Iteration 400 (414.96 iter/s, 0.240987s/100 iters), loss = 0.0973113
I0428 20:24:38.466500  2433 solver.cpp:238]     Train net output #0: loss = 0.0973113 (* 1 = 0.0973113 loss)
I0428 20:24:38.466509  2433 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:38.691773  2433 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:38.782735  2440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:38.785279  2433 solver.cpp:398]     Test net output #0: accuracy = 0.9699
I0428 20:24:38.785306  2433 solver.cpp:398]     Test net output #1: loss = 0.0921991 (* 1 = 0.0921991 loss)
I0428 20:24:38.787521  2433 solver.cpp:219] Iteration 500 (311.525 iter/s, 0.321001s/100 iters), loss = 0.0403439
I0428 20:24:38.787570  2433 solver.cpp:238]     Train net output #0: loss = 0.0403439 (* 1 = 0.0403439 loss)
I0428 20:24:38.787580  2433 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:39.013329  2433 solver.cpp:219] Iteration 600 (442.982 iter/s, 0.225743s/100 iters), loss = 0.0694242
I0428 20:24:39.013363  2433 solver.cpp:238]     Train net output #0: loss = 0.0694241 (* 1 = 0.0694241 loss)
I0428 20:24:39.013372  2433 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:39.248234  2433 solver.cpp:219] Iteration 700 (425.796 iter/s, 0.234854s/100 iters), loss = 0.0696829
I0428 20:24:39.248272  2433 solver.cpp:238]     Train net output #0: loss = 0.0696829 (* 1 = 0.0696829 loss)
I0428 20:24:39.248281  2433 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:39.481206  2433 solver.cpp:219] Iteration 800 (429.345 iter/s, 0.232913s/100 iters), loss = 0.180595
I0428 20:24:39.481261  2433 solver.cpp:238]     Train net output #0: loss = 0.180595 (* 1 = 0.180595 loss)
I0428 20:24:39.481274  2433 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:39.725390  2433 solver.cpp:219] Iteration 900 (409.646 iter/s, 0.244113s/100 iters), loss = 0.153347
I0428 20:24:39.725435  2433 solver.cpp:238]     Train net output #0: loss = 0.153347 (* 1 = 0.153347 loss)
I0428 20:24:39.725445  2433 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:39.798635  2439 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:39.948143  2433 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:39.953851  2433 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:39.956357  2433 solver.cpp:311] Iteration 1000, loss = 0.103597
I0428 20:24:39.956378  2433 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:40.047248  2440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:40.048827  2433 solver.cpp:398]     Test net output #0: accuracy = 0.9815
I0428 20:24:40.048856  2433 solver.cpp:398]     Test net output #1: loss = 0.0596691 (* 1 = 0.0596691 loss)
I0428 20:24:40.048864  2433 solver.cpp:316] Optimization Done.
I0428 20:24:40.048868  2433 caffe.cpp:259] Optimization Done.
