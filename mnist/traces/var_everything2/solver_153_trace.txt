I0428 19:32:26.923004 22841 caffe.cpp:218] Using GPUs 0
I0428 19:32:26.964139 22841 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:27.508249 22841 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test153.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:27.508404 22841 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test153.prototxt
I0428 19:32:27.508782 22841 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:27.508806 22841 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:27.508915 22841 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:27.509021 22841 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:27.509135 22841 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:27.509166 22841 net.cpp:86] Creating Layer mnist
I0428 19:32:27.509178 22841 net.cpp:382] mnist -> data
I0428 19:32:27.509207 22841 net.cpp:382] mnist -> label
I0428 19:32:27.510296 22841 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:27.512750 22841 net.cpp:124] Setting up mnist
I0428 19:32:27.512770 22841 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:27.512780 22841 net.cpp:131] Top shape: 64 (64)
I0428 19:32:27.512789 22841 net.cpp:139] Memory required for data: 200960
I0428 19:32:27.512800 22841 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:27.512825 22841 net.cpp:86] Creating Layer conv0
I0428 19:32:27.512831 22841 net.cpp:408] conv0 <- data
I0428 19:32:27.512843 22841 net.cpp:382] conv0 -> conv0
I0428 19:32:27.805605 22841 net.cpp:124] Setting up conv0
I0428 19:32:27.805639 22841 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:27.805644 22841 net.cpp:139] Memory required for data: 1675520
I0428 19:32:27.805662 22841 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:27.805677 22841 net.cpp:86] Creating Layer pool0
I0428 19:32:27.805706 22841 net.cpp:408] pool0 <- conv0
I0428 19:32:27.805713 22841 net.cpp:382] pool0 -> pool0
I0428 19:32:27.805771 22841 net.cpp:124] Setting up pool0
I0428 19:32:27.805778 22841 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:27.805783 22841 net.cpp:139] Memory required for data: 2044160
I0428 19:32:27.805786 22841 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:27.805795 22841 net.cpp:86] Creating Layer ip1
I0428 19:32:27.805799 22841 net.cpp:408] ip1 <- pool0
I0428 19:32:27.805804 22841 net.cpp:382] ip1 -> ip1
I0428 19:32:27.807384 22841 net.cpp:124] Setting up ip1
I0428 19:32:27.807399 22841 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:27.807404 22841 net.cpp:139] Memory required for data: 2056960
I0428 19:32:27.807415 22841 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:27.807422 22841 net.cpp:86] Creating Layer relu1
I0428 19:32:27.807426 22841 net.cpp:408] relu1 <- ip1
I0428 19:32:27.807431 22841 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:27.807629 22841 net.cpp:124] Setting up relu1
I0428 19:32:27.807641 22841 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:27.807644 22841 net.cpp:139] Memory required for data: 2069760
I0428 19:32:27.807647 22841 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:27.807656 22841 net.cpp:86] Creating Layer ip2
I0428 19:32:27.807659 22841 net.cpp:408] ip2 <- ip1
I0428 19:32:27.807665 22841 net.cpp:382] ip2 -> ip2
I0428 19:32:27.808778 22841 net.cpp:124] Setting up ip2
I0428 19:32:27.808792 22841 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:27.808796 22841 net.cpp:139] Memory required for data: 2082560
I0428 19:32:27.808806 22841 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:27.808822 22841 net.cpp:86] Creating Layer relu2
I0428 19:32:27.808827 22841 net.cpp:408] relu2 <- ip2
I0428 19:32:27.808832 22841 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:27.809684 22841 net.cpp:124] Setting up relu2
I0428 19:32:27.809700 22841 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:27.809705 22841 net.cpp:139] Memory required for data: 2095360
I0428 19:32:27.809708 22841 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:27.809716 22841 net.cpp:86] Creating Layer ip3
I0428 19:32:27.809720 22841 net.cpp:408] ip3 <- ip2
I0428 19:32:27.809727 22841 net.cpp:382] ip3 -> ip3
I0428 19:32:27.809846 22841 net.cpp:124] Setting up ip3
I0428 19:32:27.809855 22841 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:27.809859 22841 net.cpp:139] Memory required for data: 2097920
I0428 19:32:27.809865 22841 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:27.809873 22841 net.cpp:86] Creating Layer relu3
I0428 19:32:27.809876 22841 net.cpp:408] relu3 <- ip3
I0428 19:32:27.809881 22841 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:27.810058 22841 net.cpp:124] Setting up relu3
I0428 19:32:27.810068 22841 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:27.810072 22841 net.cpp:139] Memory required for data: 2100480
I0428 19:32:27.810076 22841 layer_factory.hpp:77] Creating layer loss
I0428 19:32:27.810084 22841 net.cpp:86] Creating Layer loss
I0428 19:32:27.810088 22841 net.cpp:408] loss <- ip3
I0428 19:32:27.810093 22841 net.cpp:408] loss <- label
I0428 19:32:27.810099 22841 net.cpp:382] loss -> loss
I0428 19:32:27.810117 22841 layer_factory.hpp:77] Creating layer loss
I0428 19:32:27.810386 22841 net.cpp:124] Setting up loss
I0428 19:32:27.810397 22841 net.cpp:131] Top shape: (1)
I0428 19:32:27.810401 22841 net.cpp:134]     with loss weight 1
I0428 19:32:27.810417 22841 net.cpp:139] Memory required for data: 2100484
I0428 19:32:27.810421 22841 net.cpp:200] loss needs backward computation.
I0428 19:32:27.810426 22841 net.cpp:200] relu3 needs backward computation.
I0428 19:32:27.810430 22841 net.cpp:200] ip3 needs backward computation.
I0428 19:32:27.810433 22841 net.cpp:200] relu2 needs backward computation.
I0428 19:32:27.810436 22841 net.cpp:200] ip2 needs backward computation.
I0428 19:32:27.810441 22841 net.cpp:200] relu1 needs backward computation.
I0428 19:32:27.810443 22841 net.cpp:200] ip1 needs backward computation.
I0428 19:32:27.810461 22841 net.cpp:200] pool0 needs backward computation.
I0428 19:32:27.810464 22841 net.cpp:200] conv0 needs backward computation.
I0428 19:32:27.810468 22841 net.cpp:202] mnist does not need backward computation.
I0428 19:32:27.810472 22841 net.cpp:244] This network produces output loss
I0428 19:32:27.810480 22841 net.cpp:257] Network initialization done.
I0428 19:32:27.810817 22841 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test153.prototxt
I0428 19:32:27.810847 22841 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:27.810941 22841 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:27.811015 22841 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:27.811069 22841 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:27.811084 22841 net.cpp:86] Creating Layer mnist
I0428 19:32:27.811090 22841 net.cpp:382] mnist -> data
I0428 19:32:27.811100 22841 net.cpp:382] mnist -> label
I0428 19:32:27.811199 22841 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:27.812432 22841 net.cpp:124] Setting up mnist
I0428 19:32:27.812446 22841 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:27.812453 22841 net.cpp:131] Top shape: 100 (100)
I0428 19:32:27.812456 22841 net.cpp:139] Memory required for data: 314000
I0428 19:32:27.812460 22841 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:27.812469 22841 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:27.812474 22841 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:27.812479 22841 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:27.812486 22841 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:27.812544 22841 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:27.812552 22841 net.cpp:131] Top shape: 100 (100)
I0428 19:32:27.812556 22841 net.cpp:131] Top shape: 100 (100)
I0428 19:32:27.812559 22841 net.cpp:139] Memory required for data: 314800
I0428 19:32:27.812574 22841 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:27.812587 22841 net.cpp:86] Creating Layer conv0
I0428 19:32:27.812590 22841 net.cpp:408] conv0 <- data
I0428 19:32:27.812597 22841 net.cpp:382] conv0 -> conv0
I0428 19:32:27.814489 22841 net.cpp:124] Setting up conv0
I0428 19:32:27.814507 22841 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:27.814512 22841 net.cpp:139] Memory required for data: 2618800
I0428 19:32:27.814522 22841 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:27.814530 22841 net.cpp:86] Creating Layer pool0
I0428 19:32:27.814534 22841 net.cpp:408] pool0 <- conv0
I0428 19:32:27.814540 22841 net.cpp:382] pool0 -> pool0
I0428 19:32:27.814584 22841 net.cpp:124] Setting up pool0
I0428 19:32:27.814589 22841 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:27.814594 22841 net.cpp:139] Memory required for data: 3194800
I0428 19:32:27.814597 22841 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:27.814604 22841 net.cpp:86] Creating Layer ip1
I0428 19:32:27.814609 22841 net.cpp:408] ip1 <- pool0
I0428 19:32:27.814615 22841 net.cpp:382] ip1 -> ip1
I0428 19:32:27.815279 22841 net.cpp:124] Setting up ip1
I0428 19:32:27.815289 22841 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:27.815292 22841 net.cpp:139] Memory required for data: 3214800
I0428 19:32:27.815301 22841 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:27.815306 22841 net.cpp:86] Creating Layer relu1
I0428 19:32:27.815310 22841 net.cpp:408] relu1 <- ip1
I0428 19:32:27.815315 22841 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:27.815588 22841 net.cpp:124] Setting up relu1
I0428 19:32:27.815598 22841 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:27.815603 22841 net.cpp:139] Memory required for data: 3234800
I0428 19:32:27.815608 22841 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:27.815614 22841 net.cpp:86] Creating Layer ip2
I0428 19:32:27.815625 22841 net.cpp:408] ip2 <- ip1
I0428 19:32:27.815630 22841 net.cpp:382] ip2 -> ip2
I0428 19:32:27.815770 22841 net.cpp:124] Setting up ip2
I0428 19:32:27.815779 22841 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:27.815783 22841 net.cpp:139] Memory required for data: 3254800
I0428 19:32:27.815793 22841 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:27.815798 22841 net.cpp:86] Creating Layer relu2
I0428 19:32:27.815803 22841 net.cpp:408] relu2 <- ip2
I0428 19:32:27.815807 22841 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:27.816730 22841 net.cpp:124] Setting up relu2
I0428 19:32:27.816743 22841 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:27.816747 22841 net.cpp:139] Memory required for data: 3274800
I0428 19:32:27.816751 22841 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:27.816761 22841 net.cpp:86] Creating Layer ip3
I0428 19:32:27.816764 22841 net.cpp:408] ip3 <- ip2
I0428 19:32:27.816771 22841 net.cpp:382] ip3 -> ip3
I0428 19:32:27.816925 22841 net.cpp:124] Setting up ip3
I0428 19:32:27.816936 22841 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:27.816941 22841 net.cpp:139] Memory required for data: 3278800
I0428 19:32:27.816947 22841 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:27.816954 22841 net.cpp:86] Creating Layer relu3
I0428 19:32:27.816958 22841 net.cpp:408] relu3 <- ip3
I0428 19:32:27.816963 22841 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:27.817147 22841 net.cpp:124] Setting up relu3
I0428 19:32:27.817157 22841 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:27.817162 22841 net.cpp:139] Memory required for data: 3282800
I0428 19:32:27.817165 22841 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:27.817172 22841 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:27.817175 22841 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:27.817180 22841 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:27.817188 22841 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:27.817227 22841 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:27.817234 22841 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:27.817239 22841 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:27.817255 22841 net.cpp:139] Memory required for data: 3290800
I0428 19:32:27.817258 22841 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:27.817267 22841 net.cpp:86] Creating Layer accuracy
I0428 19:32:27.817273 22841 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:27.817281 22841 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:27.817288 22841 net.cpp:382] accuracy -> accuracy
I0428 19:32:27.817301 22841 net.cpp:124] Setting up accuracy
I0428 19:32:27.817318 22841 net.cpp:131] Top shape: (1)
I0428 19:32:27.817322 22841 net.cpp:139] Memory required for data: 3290804
I0428 19:32:27.817325 22841 layer_factory.hpp:77] Creating layer loss
I0428 19:32:27.817332 22841 net.cpp:86] Creating Layer loss
I0428 19:32:27.817334 22841 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:27.817339 22841 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:27.817344 22841 net.cpp:382] loss -> loss
I0428 19:32:27.817351 22841 layer_factory.hpp:77] Creating layer loss
I0428 19:32:27.817632 22841 net.cpp:124] Setting up loss
I0428 19:32:27.817643 22841 net.cpp:131] Top shape: (1)
I0428 19:32:27.817647 22841 net.cpp:134]     with loss weight 1
I0428 19:32:27.817656 22841 net.cpp:139] Memory required for data: 3290808
I0428 19:32:27.817661 22841 net.cpp:200] loss needs backward computation.
I0428 19:32:27.817664 22841 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:27.817669 22841 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:27.817673 22841 net.cpp:200] relu3 needs backward computation.
I0428 19:32:27.817677 22841 net.cpp:200] ip3 needs backward computation.
I0428 19:32:27.817680 22841 net.cpp:200] relu2 needs backward computation.
I0428 19:32:27.817683 22841 net.cpp:200] ip2 needs backward computation.
I0428 19:32:27.817701 22841 net.cpp:200] relu1 needs backward computation.
I0428 19:32:27.817704 22841 net.cpp:200] ip1 needs backward computation.
I0428 19:32:27.817708 22841 net.cpp:200] pool0 needs backward computation.
I0428 19:32:27.817711 22841 net.cpp:200] conv0 needs backward computation.
I0428 19:32:27.817716 22841 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:27.817720 22841 net.cpp:202] mnist does not need backward computation.
I0428 19:32:27.817723 22841 net.cpp:244] This network produces output accuracy
I0428 19:32:27.817728 22841 net.cpp:244] This network produces output loss
I0428 19:32:27.817740 22841 net.cpp:257] Network initialization done.
I0428 19:32:27.817783 22841 solver.cpp:56] Solver scaffolding done.
I0428 19:32:27.818135 22841 caffe.cpp:248] Starting Optimization
I0428 19:32:27.818143 22841 solver.cpp:273] Solving LeNet
I0428 19:32:27.818147 22841 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:27.819694 22841 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:27.823738 22841 blocking_queue.cpp:49] Waiting for data
I0428 19:32:27.894029 22848 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:27.894608 22841 solver.cpp:398]     Test net output #0: accuracy = 0.137
I0428 19:32:27.894634 22841 solver.cpp:398]     Test net output #1: loss = 2.30718 (* 1 = 2.30718 loss)
I0428 19:32:27.897163 22841 solver.cpp:219] Iteration 0 (-1.04677e-42 iter/s, 0.0789842s/100 iters), loss = 2.30587
I0428 19:32:27.897194 22841 solver.cpp:238]     Train net output #0: loss = 2.30587 (* 1 = 2.30587 loss)
I0428 19:32:27.897207 22841 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:27.970870 22841 solver.cpp:219] Iteration 100 (1357.45 iter/s, 0.0736677s/100 iters), loss = 0.572821
I0428 19:32:27.970896 22841 solver.cpp:238]     Train net output #0: loss = 0.572821 (* 1 = 0.572821 loss)
I0428 19:32:27.970902 22841 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:28.042735 22841 solver.cpp:219] Iteration 200 (1392.17 iter/s, 0.0718305s/100 iters), loss = 0.338326
I0428 19:32:28.042758 22841 solver.cpp:238]     Train net output #0: loss = 0.338326 (* 1 = 0.338326 loss)
I0428 19:32:28.042780 22841 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:28.115418 22841 solver.cpp:219] Iteration 300 (1376.43 iter/s, 0.0726516s/100 iters), loss = 0.51452
I0428 19:32:28.115442 22841 solver.cpp:238]     Train net output #0: loss = 0.51452 (* 1 = 0.51452 loss)
I0428 19:32:28.115447 22841 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:28.187513 22841 solver.cpp:219] Iteration 400 (1387.69 iter/s, 0.0720619s/100 iters), loss = 0.324073
I0428 19:32:28.187536 22841 solver.cpp:238]     Train net output #0: loss = 0.324073 (* 1 = 0.324073 loss)
I0428 19:32:28.187542 22841 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:28.260046 22841 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:28.313225 22848 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:28.313765 22841 solver.cpp:398]     Test net output #0: accuracy = 0.945
I0428 19:32:28.313786 22841 solver.cpp:398]     Test net output #1: loss = 0.187357 (* 1 = 0.187357 loss)
I0428 19:32:28.314580 22841 solver.cpp:219] Iteration 500 (787.201 iter/s, 0.127032s/100 iters), loss = 0.263732
I0428 19:32:28.314604 22841 solver.cpp:238]     Train net output #0: loss = 0.263732 (* 1 = 0.263732 loss)
I0428 19:32:28.314611 22841 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:28.396663 22841 solver.cpp:219] Iteration 600 (1218.77 iter/s, 0.08205s/100 iters), loss = 0.157705
I0428 19:32:28.396687 22841 solver.cpp:238]     Train net output #0: loss = 0.157705 (* 1 = 0.157705 loss)
I0428 19:32:28.396693 22841 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:28.478507 22841 solver.cpp:219] Iteration 700 (1222.33 iter/s, 0.0818113s/100 iters), loss = 0.319687
I0428 19:32:28.478548 22841 solver.cpp:238]     Train net output #0: loss = 0.319687 (* 1 = 0.319687 loss)
I0428 19:32:28.478554 22841 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:28.556840 22841 solver.cpp:219] Iteration 800 (1277.14 iter/s, 0.0783002s/100 iters), loss = 0.265354
I0428 19:32:28.556898 22841 solver.cpp:238]     Train net output #0: loss = 0.265354 (* 1 = 0.265354 loss)
I0428 19:32:28.556921 22841 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:28.630780 22841 solver.cpp:219] Iteration 900 (1353.65 iter/s, 0.0738744s/100 iters), loss = 0.180588
I0428 19:32:28.630820 22841 solver.cpp:238]     Train net output #0: loss = 0.180588 (* 1 = 0.180588 loss)
I0428 19:32:28.630826 22841 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:28.655223 22847 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:28.702877 22841 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:28.704447 22841 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:28.705538 22841 solver.cpp:311] Iteration 1000, loss = 0.165662
I0428 19:32:28.705554 22841 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:28.786141 22848 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:28.786851 22841 solver.cpp:398]     Test net output #0: accuracy = 0.9649
I0428 19:32:28.786882 22841 solver.cpp:398]     Test net output #1: loss = 0.111055 (* 1 = 0.111055 loss)
I0428 19:32:28.786892 22841 solver.cpp:316] Optimization Done.
I0428 19:32:28.786897 22841 caffe.cpp:259] Optimization Done.
