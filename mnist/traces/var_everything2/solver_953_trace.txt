I0428 20:03:31.474011 30198 caffe.cpp:218] Using GPUs 0
I0428 20:03:31.503545 30198 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:31.949831 30198 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test953.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:31.949961 30198 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test953.prototxt
I0428 20:03:31.950305 30198 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:31.950336 30198 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:31.950431 30198 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:31.950498 30198 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:31.950579 30198 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:31.950598 30198 net.cpp:86] Creating Layer mnist
I0428 20:03:31.950604 30198 net.cpp:382] mnist -> data
I0428 20:03:31.950623 30198 net.cpp:382] mnist -> label
I0428 20:03:31.951642 30198 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:31.953940 30198 net.cpp:124] Setting up mnist
I0428 20:03:31.953989 30198 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:31.953994 30198 net.cpp:131] Top shape: 64 (64)
I0428 20:03:31.953997 30198 net.cpp:139] Memory required for data: 200960
I0428 20:03:31.954004 30198 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:31.954020 30198 net.cpp:86] Creating Layer conv0
I0428 20:03:31.954051 30198 net.cpp:408] conv0 <- data
I0428 20:03:31.954061 30198 net.cpp:382] conv0 -> conv0
I0428 20:03:32.183068 30198 net.cpp:124] Setting up conv0
I0428 20:03:32.183109 30198 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:32.183113 30198 net.cpp:139] Memory required for data: 1675520
I0428 20:03:32.183128 30198 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:32.183140 30198 net.cpp:86] Creating Layer pool0
I0428 20:03:32.183145 30198 net.cpp:408] pool0 <- conv0
I0428 20:03:32.183149 30198 net.cpp:382] pool0 -> pool0
I0428 20:03:32.183238 30198 net.cpp:124] Setting up pool0
I0428 20:03:32.183251 30198 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:32.183254 30198 net.cpp:139] Memory required for data: 2044160
I0428 20:03:32.183257 30198 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:32.183269 30198 net.cpp:86] Creating Layer conv1
I0428 20:03:32.183271 30198 net.cpp:408] conv1 <- pool0
I0428 20:03:32.183275 30198 net.cpp:382] conv1 -> conv1
I0428 20:03:32.185264 30198 net.cpp:124] Setting up conv1
I0428 20:03:32.185295 30198 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:32.185299 30198 net.cpp:139] Memory required for data: 3682560
I0428 20:03:32.185308 30198 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:32.185317 30198 net.cpp:86] Creating Layer pool1
I0428 20:03:32.185320 30198 net.cpp:408] pool1 <- conv1
I0428 20:03:32.185326 30198 net.cpp:382] pool1 -> pool1
I0428 20:03:32.185364 30198 net.cpp:124] Setting up pool1
I0428 20:03:32.185369 30198 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:32.185372 30198 net.cpp:139] Memory required for data: 4092160
I0428 20:03:32.185375 30198 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:32.185382 30198 net.cpp:86] Creating Layer ip1
I0428 20:03:32.185385 30198 net.cpp:408] ip1 <- pool1
I0428 20:03:32.185405 30198 net.cpp:382] ip1 -> ip1
I0428 20:03:32.186475 30198 net.cpp:124] Setting up ip1
I0428 20:03:32.186486 30198 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:32.186506 30198 net.cpp:139] Memory required for data: 4094720
I0428 20:03:32.186528 30198 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:32.186534 30198 net.cpp:86] Creating Layer relu1
I0428 20:03:32.186538 30198 net.cpp:408] relu1 <- ip1
I0428 20:03:32.186542 30198 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:32.186707 30198 net.cpp:124] Setting up relu1
I0428 20:03:32.186715 30198 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:32.186718 30198 net.cpp:139] Memory required for data: 4097280
I0428 20:03:32.186722 30198 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:32.186728 30198 net.cpp:86] Creating Layer ip2
I0428 20:03:32.186730 30198 net.cpp:408] ip2 <- ip1
I0428 20:03:32.186735 30198 net.cpp:382] ip2 -> ip2
I0428 20:03:32.186826 30198 net.cpp:124] Setting up ip2
I0428 20:03:32.186833 30198 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:32.186836 30198 net.cpp:139] Memory required for data: 4103680
I0428 20:03:32.186841 30198 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:32.186847 30198 net.cpp:86] Creating Layer relu2
I0428 20:03:32.186851 30198 net.cpp:408] relu2 <- ip2
I0428 20:03:32.186854 30198 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:32.187619 30198 net.cpp:124] Setting up relu2
I0428 20:03:32.187631 30198 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:32.187650 30198 net.cpp:139] Memory required for data: 4110080
I0428 20:03:32.187654 30198 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:32.187661 30198 net.cpp:86] Creating Layer ip3
I0428 20:03:32.187666 30198 net.cpp:408] ip3 <- ip2
I0428 20:03:32.187671 30198 net.cpp:382] ip3 -> ip3
I0428 20:03:32.187768 30198 net.cpp:124] Setting up ip3
I0428 20:03:32.187775 30198 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:32.187778 30198 net.cpp:139] Memory required for data: 4112640
I0428 20:03:32.187786 30198 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:32.187791 30198 net.cpp:86] Creating Layer relu3
I0428 20:03:32.187794 30198 net.cpp:408] relu3 <- ip3
I0428 20:03:32.187798 30198 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:32.187957 30198 net.cpp:124] Setting up relu3
I0428 20:03:32.187965 30198 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:32.187968 30198 net.cpp:139] Memory required for data: 4115200
I0428 20:03:32.187971 30198 layer_factory.hpp:77] Creating layer loss
I0428 20:03:32.187976 30198 net.cpp:86] Creating Layer loss
I0428 20:03:32.187980 30198 net.cpp:408] loss <- ip3
I0428 20:03:32.187984 30198 net.cpp:408] loss <- label
I0428 20:03:32.187989 30198 net.cpp:382] loss -> loss
I0428 20:03:32.188004 30198 layer_factory.hpp:77] Creating layer loss
I0428 20:03:32.188227 30198 net.cpp:124] Setting up loss
I0428 20:03:32.188236 30198 net.cpp:131] Top shape: (1)
I0428 20:03:32.188240 30198 net.cpp:134]     with loss weight 1
I0428 20:03:32.188252 30198 net.cpp:139] Memory required for data: 4115204
I0428 20:03:32.188256 30198 net.cpp:200] loss needs backward computation.
I0428 20:03:32.188259 30198 net.cpp:200] relu3 needs backward computation.
I0428 20:03:32.188261 30198 net.cpp:200] ip3 needs backward computation.
I0428 20:03:32.188264 30198 net.cpp:200] relu2 needs backward computation.
I0428 20:03:32.188267 30198 net.cpp:200] ip2 needs backward computation.
I0428 20:03:32.188271 30198 net.cpp:200] relu1 needs backward computation.
I0428 20:03:32.188272 30198 net.cpp:200] ip1 needs backward computation.
I0428 20:03:32.188275 30198 net.cpp:200] pool1 needs backward computation.
I0428 20:03:32.188278 30198 net.cpp:200] conv1 needs backward computation.
I0428 20:03:32.188282 30198 net.cpp:200] pool0 needs backward computation.
I0428 20:03:32.188284 30198 net.cpp:200] conv0 needs backward computation.
I0428 20:03:32.188287 30198 net.cpp:202] mnist does not need backward computation.
I0428 20:03:32.188290 30198 net.cpp:244] This network produces output loss
I0428 20:03:32.188298 30198 net.cpp:257] Network initialization done.
I0428 20:03:32.188663 30198 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test953.prototxt
I0428 20:03:32.188719 30198 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:32.188844 30198 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:32.188941 30198 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:32.188983 30198 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:32.189000 30198 net.cpp:86] Creating Layer mnist
I0428 20:03:32.189004 30198 net.cpp:382] mnist -> data
I0428 20:03:32.189013 30198 net.cpp:382] mnist -> label
I0428 20:03:32.189097 30198 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:32.191201 30198 net.cpp:124] Setting up mnist
I0428 20:03:32.191244 30198 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:32.191249 30198 net.cpp:131] Top shape: 100 (100)
I0428 20:03:32.191253 30198 net.cpp:139] Memory required for data: 314000
I0428 20:03:32.191256 30198 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:32.191263 30198 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:32.191267 30198 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:32.191272 30198 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:32.191278 30198 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:32.191323 30198 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:32.191329 30198 net.cpp:131] Top shape: 100 (100)
I0428 20:03:32.191332 30198 net.cpp:131] Top shape: 100 (100)
I0428 20:03:32.191335 30198 net.cpp:139] Memory required for data: 314800
I0428 20:03:32.191339 30198 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:32.191346 30198 net.cpp:86] Creating Layer conv0
I0428 20:03:32.191349 30198 net.cpp:408] conv0 <- data
I0428 20:03:32.191354 30198 net.cpp:382] conv0 -> conv0
I0428 20:03:32.193215 30198 net.cpp:124] Setting up conv0
I0428 20:03:32.193245 30198 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:32.193249 30198 net.cpp:139] Memory required for data: 2618800
I0428 20:03:32.193259 30198 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:32.193264 30198 net.cpp:86] Creating Layer pool0
I0428 20:03:32.193269 30198 net.cpp:408] pool0 <- conv0
I0428 20:03:32.193272 30198 net.cpp:382] pool0 -> pool0
I0428 20:03:32.193306 30198 net.cpp:124] Setting up pool0
I0428 20:03:32.193311 30198 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:32.193315 30198 net.cpp:139] Memory required for data: 3194800
I0428 20:03:32.193317 30198 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:32.193325 30198 net.cpp:86] Creating Layer conv1
I0428 20:03:32.193327 30198 net.cpp:408] conv1 <- pool0
I0428 20:03:32.193332 30198 net.cpp:382] conv1 -> conv1
I0428 20:03:32.195080 30198 net.cpp:124] Setting up conv1
I0428 20:03:32.195109 30198 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:32.195114 30198 net.cpp:139] Memory required for data: 5754800
I0428 20:03:32.195124 30198 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:32.195132 30198 net.cpp:86] Creating Layer pool1
I0428 20:03:32.195137 30198 net.cpp:408] pool1 <- conv1
I0428 20:03:32.195142 30198 net.cpp:382] pool1 -> pool1
I0428 20:03:32.195179 30198 net.cpp:124] Setting up pool1
I0428 20:03:32.195185 30198 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:32.195189 30198 net.cpp:139] Memory required for data: 6394800
I0428 20:03:32.195194 30198 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:32.195199 30198 net.cpp:86] Creating Layer ip1
I0428 20:03:32.195204 30198 net.cpp:408] ip1 <- pool1
I0428 20:03:32.195209 30198 net.cpp:382] ip1 -> ip1
I0428 20:03:32.195426 30198 net.cpp:124] Setting up ip1
I0428 20:03:32.195433 30198 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:32.195447 30198 net.cpp:139] Memory required for data: 6398800
I0428 20:03:32.195454 30198 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:32.195459 30198 net.cpp:86] Creating Layer relu1
I0428 20:03:32.195464 30198 net.cpp:408] relu1 <- ip1
I0428 20:03:32.195468 30198 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:32.195638 30198 net.cpp:124] Setting up relu1
I0428 20:03:32.195647 30198 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:32.195652 30198 net.cpp:139] Memory required for data: 6402800
I0428 20:03:32.195654 30198 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:32.195662 30198 net.cpp:86] Creating Layer ip2
I0428 20:03:32.195665 30198 net.cpp:408] ip2 <- ip1
I0428 20:03:32.195670 30198 net.cpp:382] ip2 -> ip2
I0428 20:03:32.195767 30198 net.cpp:124] Setting up ip2
I0428 20:03:32.195775 30198 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:32.195777 30198 net.cpp:139] Memory required for data: 6412800
I0428 20:03:32.195782 30198 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:32.195786 30198 net.cpp:86] Creating Layer relu2
I0428 20:03:32.195789 30198 net.cpp:408] relu2 <- ip2
I0428 20:03:32.195793 30198 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:32.196060 30198 net.cpp:124] Setting up relu2
I0428 20:03:32.196070 30198 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:32.196074 30198 net.cpp:139] Memory required for data: 6422800
I0428 20:03:32.196079 30198 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:32.196099 30198 net.cpp:86] Creating Layer ip3
I0428 20:03:32.196104 30198 net.cpp:408] ip3 <- ip2
I0428 20:03:32.196108 30198 net.cpp:382] ip3 -> ip3
I0428 20:03:32.196213 30198 net.cpp:124] Setting up ip3
I0428 20:03:32.196221 30198 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:32.196225 30198 net.cpp:139] Memory required for data: 6426800
I0428 20:03:32.196233 30198 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:32.196239 30198 net.cpp:86] Creating Layer relu3
I0428 20:03:32.196243 30198 net.cpp:408] relu3 <- ip3
I0428 20:03:32.196247 30198 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:32.197173 30198 net.cpp:124] Setting up relu3
I0428 20:03:32.197202 30198 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:32.197206 30198 net.cpp:139] Memory required for data: 6430800
I0428 20:03:32.197211 30198 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:32.197216 30198 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:32.197221 30198 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:32.197227 30198 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:32.197232 30198 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:32.197270 30198 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:32.197275 30198 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:32.197279 30198 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:32.197283 30198 net.cpp:139] Memory required for data: 6438800
I0428 20:03:32.197285 30198 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:32.197290 30198 net.cpp:86] Creating Layer accuracy
I0428 20:03:32.197295 30198 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:32.197300 30198 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:32.197304 30198 net.cpp:382] accuracy -> accuracy
I0428 20:03:32.197311 30198 net.cpp:124] Setting up accuracy
I0428 20:03:32.197315 30198 net.cpp:131] Top shape: (1)
I0428 20:03:32.197319 30198 net.cpp:139] Memory required for data: 6438804
I0428 20:03:32.197334 30198 layer_factory.hpp:77] Creating layer loss
I0428 20:03:32.197337 30198 net.cpp:86] Creating Layer loss
I0428 20:03:32.197360 30198 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:32.197365 30198 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:32.197369 30198 net.cpp:382] loss -> loss
I0428 20:03:32.197376 30198 layer_factory.hpp:77] Creating layer loss
I0428 20:03:32.197604 30198 net.cpp:124] Setting up loss
I0428 20:03:32.197613 30198 net.cpp:131] Top shape: (1)
I0428 20:03:32.197618 30198 net.cpp:134]     with loss weight 1
I0428 20:03:32.197633 30198 net.cpp:139] Memory required for data: 6438808
I0428 20:03:32.197638 30198 net.cpp:200] loss needs backward computation.
I0428 20:03:32.197640 30198 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:32.197644 30198 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:32.197649 30198 net.cpp:200] relu3 needs backward computation.
I0428 20:03:32.197651 30198 net.cpp:200] ip3 needs backward computation.
I0428 20:03:32.197654 30198 net.cpp:200] relu2 needs backward computation.
I0428 20:03:32.197657 30198 net.cpp:200] ip2 needs backward computation.
I0428 20:03:32.197660 30198 net.cpp:200] relu1 needs backward computation.
I0428 20:03:32.197662 30198 net.cpp:200] ip1 needs backward computation.
I0428 20:03:32.197666 30198 net.cpp:200] pool1 needs backward computation.
I0428 20:03:32.197669 30198 net.cpp:200] conv1 needs backward computation.
I0428 20:03:32.197672 30198 net.cpp:200] pool0 needs backward computation.
I0428 20:03:32.197675 30198 net.cpp:200] conv0 needs backward computation.
I0428 20:03:32.197679 30198 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:32.197684 30198 net.cpp:202] mnist does not need backward computation.
I0428 20:03:32.197685 30198 net.cpp:244] This network produces output accuracy
I0428 20:03:32.197690 30198 net.cpp:244] This network produces output loss
I0428 20:03:32.197700 30198 net.cpp:257] Network initialization done.
I0428 20:03:32.197739 30198 solver.cpp:56] Solver scaffolding done.
I0428 20:03:32.198106 30198 caffe.cpp:248] Starting Optimization
I0428 20:03:32.198112 30198 solver.cpp:273] Solving LeNet
I0428 20:03:32.198113 30198 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:32.198443 30198 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:32.204396 30198 blocking_queue.cpp:49] Waiting for data
I0428 20:03:32.273962 30205 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:32.274598 30198 solver.cpp:398]     Test net output #0: accuracy = 0.06
I0428 20:03:32.274633 30198 solver.cpp:398]     Test net output #1: loss = 2.31227 (* 1 = 2.31227 loss)
I0428 20:03:32.278343 30198 solver.cpp:219] Iteration 0 (0 iter/s, 0.0801833s/100 iters), loss = 2.32334
I0428 20:03:32.278381 30198 solver.cpp:238]     Train net output #0: loss = 2.32334 (* 1 = 2.32334 loss)
I0428 20:03:32.278393 30198 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:32.425698 30198 solver.cpp:219] Iteration 100 (678.795 iter/s, 0.14732s/100 iters), loss = 1.28949
I0428 20:03:32.425739 30198 solver.cpp:238]     Train net output #0: loss = 1.28949 (* 1 = 1.28949 loss)
I0428 20:03:32.425745 30198 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:32.573323 30198 solver.cpp:219] Iteration 200 (677.571 iter/s, 0.147586s/100 iters), loss = 0.500129
I0428 20:03:32.573379 30198 solver.cpp:238]     Train net output #0: loss = 0.500129 (* 1 = 0.500129 loss)
I0428 20:03:32.573385 30198 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:32.717520 30198 solver.cpp:219] Iteration 300 (693.822 iter/s, 0.144129s/100 iters), loss = 0.298767
I0428 20:03:32.717561 30198 solver.cpp:238]     Train net output #0: loss = 0.298767 (* 1 = 0.298767 loss)
I0428 20:03:32.717566 30198 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:32.865456 30198 solver.cpp:219] Iteration 400 (676.21 iter/s, 0.147883s/100 iters), loss = 0.116116
I0428 20:03:32.865485 30198 solver.cpp:238]     Train net output #0: loss = 0.116116 (* 1 = 0.116116 loss)
I0428 20:03:32.865494 30198 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:33.016840 30198 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:33.073298 30205 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:33.075175 30198 solver.cpp:398]     Test net output #0: accuracy = 0.943
I0428 20:03:33.075196 30198 solver.cpp:398]     Test net output #1: loss = 0.189565 (* 1 = 0.189565 loss)
I0428 20:03:33.076501 30198 solver.cpp:219] Iteration 500 (473.935 iter/s, 0.211s/100 iters), loss = 0.121058
I0428 20:03:33.076525 30198 solver.cpp:238]     Train net output #0: loss = 0.121058 (* 1 = 0.121058 loss)
I0428 20:03:33.076547 30198 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:33.219703 30198 solver.cpp:219] Iteration 600 (698.488 iter/s, 0.143166s/100 iters), loss = 0.100292
I0428 20:03:33.219743 30198 solver.cpp:238]     Train net output #0: loss = 0.100292 (* 1 = 0.100292 loss)
I0428 20:03:33.219749 30198 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:33.363895 30198 solver.cpp:219] Iteration 700 (693.695 iter/s, 0.144156s/100 iters), loss = 0.131857
I0428 20:03:33.363935 30198 solver.cpp:238]     Train net output #0: loss = 0.131857 (* 1 = 0.131857 loss)
I0428 20:03:33.363941 30198 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:33.510499 30198 solver.cpp:219] Iteration 800 (682.286 iter/s, 0.146566s/100 iters), loss = 0.327228
I0428 20:03:33.510543 30198 solver.cpp:238]     Train net output #0: loss = 0.327228 (* 1 = 0.327228 loss)
I0428 20:03:33.510550 30198 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:33.662652 30198 solver.cpp:219] Iteration 900 (657.41 iter/s, 0.152112s/100 iters), loss = 0.223174
I0428 20:03:33.662678 30198 solver.cpp:238]     Train net output #0: loss = 0.223174 (* 1 = 0.223174 loss)
I0428 20:03:33.662684 30198 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:33.710515 30204 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:33.812476 30198 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:33.814549 30198 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:33.815585 30198 solver.cpp:311] Iteration 1000, loss = 0.0512676
I0428 20:03:33.815608 30198 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:33.890239 30205 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:33.890863 30198 solver.cpp:398]     Test net output #0: accuracy = 0.9699
I0428 20:03:33.890884 30198 solver.cpp:398]     Test net output #1: loss = 0.099662 (* 1 = 0.099662 loss)
I0428 20:03:33.890890 30198 solver.cpp:316] Optimization Done.
I0428 20:03:33.890893 30198 caffe.cpp:259] Optimization Done.
