I0428 19:48:53.456892 26621 caffe.cpp:218] Using GPUs 0
I0428 19:48:53.497670 26621 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:54.017159 26621 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test558.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:54.017295 26621 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test558.prototxt
I0428 19:48:54.017716 26621 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:54.017736 26621 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:54.017838 26621 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:54.017920 26621 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:54.018018 26621 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:54.018043 26621 net.cpp:86] Creating Layer mnist
I0428 19:48:54.018054 26621 net.cpp:382] mnist -> data
I0428 19:48:54.018080 26621 net.cpp:382] mnist -> label
I0428 19:48:54.019176 26621 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:54.021641 26621 net.cpp:124] Setting up mnist
I0428 19:48:54.021658 26621 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:54.021664 26621 net.cpp:131] Top shape: 64 (64)
I0428 19:48:54.021668 26621 net.cpp:139] Memory required for data: 200960
I0428 19:48:54.021675 26621 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:54.021711 26621 net.cpp:86] Creating Layer conv0
I0428 19:48:54.021734 26621 net.cpp:408] conv0 <- data
I0428 19:48:54.021749 26621 net.cpp:382] conv0 -> conv0
I0428 19:48:54.311096 26621 net.cpp:124] Setting up conv0
I0428 19:48:54.311125 26621 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:54.311130 26621 net.cpp:139] Memory required for data: 938240
I0428 19:48:54.311146 26621 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:54.311158 26621 net.cpp:86] Creating Layer pool0
I0428 19:48:54.311163 26621 net.cpp:408] pool0 <- conv0
I0428 19:48:54.311169 26621 net.cpp:382] pool0 -> pool0
I0428 19:48:54.311219 26621 net.cpp:124] Setting up pool0
I0428 19:48:54.311226 26621 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:54.311229 26621 net.cpp:139] Memory required for data: 1122560
I0428 19:48:54.311233 26621 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:54.311244 26621 net.cpp:86] Creating Layer conv1
I0428 19:48:54.311249 26621 net.cpp:408] conv1 <- pool0
I0428 19:48:54.311254 26621 net.cpp:382] conv1 -> conv1
I0428 19:48:54.313263 26621 net.cpp:124] Setting up conv1
I0428 19:48:54.313279 26621 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:48:54.313283 26621 net.cpp:139] Memory required for data: 1204480
I0428 19:48:54.313292 26621 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:54.313300 26621 net.cpp:86] Creating Layer pool1
I0428 19:48:54.313304 26621 net.cpp:408] pool1 <- conv1
I0428 19:48:54.313309 26621 net.cpp:382] pool1 -> pool1
I0428 19:48:54.313349 26621 net.cpp:124] Setting up pool1
I0428 19:48:54.313354 26621 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:48:54.313356 26621 net.cpp:139] Memory required for data: 1224960
I0428 19:48:54.313359 26621 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:54.313367 26621 net.cpp:86] Creating Layer ip1
I0428 19:48:54.313370 26621 net.cpp:408] ip1 <- pool1
I0428 19:48:54.313375 26621 net.cpp:382] ip1 -> ip1
I0428 19:48:54.313486 26621 net.cpp:124] Setting up ip1
I0428 19:48:54.313494 26621 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:54.313498 26621 net.cpp:139] Memory required for data: 1227520
I0428 19:48:54.313505 26621 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:54.313511 26621 net.cpp:86] Creating Layer relu1
I0428 19:48:54.313515 26621 net.cpp:408] relu1 <- ip1
I0428 19:48:54.313519 26621 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:54.313691 26621 net.cpp:124] Setting up relu1
I0428 19:48:54.313700 26621 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:54.313704 26621 net.cpp:139] Memory required for data: 1230080
I0428 19:48:54.313707 26621 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:54.313714 26621 net.cpp:86] Creating Layer ip2
I0428 19:48:54.313717 26621 net.cpp:408] ip2 <- ip1
I0428 19:48:54.313722 26621 net.cpp:382] ip2 -> ip2
I0428 19:48:54.313819 26621 net.cpp:124] Setting up ip2
I0428 19:48:54.313827 26621 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:54.313829 26621 net.cpp:139] Memory required for data: 1232640
I0428 19:48:54.313835 26621 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:54.313841 26621 net.cpp:86] Creating Layer relu2
I0428 19:48:54.313844 26621 net.cpp:408] relu2 <- ip2
I0428 19:48:54.313848 26621 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:54.314607 26621 net.cpp:124] Setting up relu2
I0428 19:48:54.314621 26621 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:54.314625 26621 net.cpp:139] Memory required for data: 1235200
I0428 19:48:54.314628 26621 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:54.314635 26621 net.cpp:86] Creating Layer ip3
I0428 19:48:54.314640 26621 net.cpp:408] ip3 <- ip2
I0428 19:48:54.314646 26621 net.cpp:382] ip3 -> ip3
I0428 19:48:54.314746 26621 net.cpp:124] Setting up ip3
I0428 19:48:54.314754 26621 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:54.314757 26621 net.cpp:139] Memory required for data: 1237760
I0428 19:48:54.314765 26621 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:54.314771 26621 net.cpp:86] Creating Layer relu3
I0428 19:48:54.314774 26621 net.cpp:408] relu3 <- ip3
I0428 19:48:54.314779 26621 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:54.314951 26621 net.cpp:124] Setting up relu3
I0428 19:48:54.314960 26621 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:54.314965 26621 net.cpp:139] Memory required for data: 1240320
I0428 19:48:54.314967 26621 layer_factory.hpp:77] Creating layer loss
I0428 19:48:54.314973 26621 net.cpp:86] Creating Layer loss
I0428 19:48:54.314976 26621 net.cpp:408] loss <- ip3
I0428 19:48:54.314980 26621 net.cpp:408] loss <- label
I0428 19:48:54.314986 26621 net.cpp:382] loss -> loss
I0428 19:48:54.315002 26621 layer_factory.hpp:77] Creating layer loss
I0428 19:48:54.315238 26621 net.cpp:124] Setting up loss
I0428 19:48:54.315248 26621 net.cpp:131] Top shape: (1)
I0428 19:48:54.315251 26621 net.cpp:134]     with loss weight 1
I0428 19:48:54.315265 26621 net.cpp:139] Memory required for data: 1240324
I0428 19:48:54.315269 26621 net.cpp:200] loss needs backward computation.
I0428 19:48:54.315274 26621 net.cpp:200] relu3 needs backward computation.
I0428 19:48:54.315276 26621 net.cpp:200] ip3 needs backward computation.
I0428 19:48:54.315279 26621 net.cpp:200] relu2 needs backward computation.
I0428 19:48:54.315282 26621 net.cpp:200] ip2 needs backward computation.
I0428 19:48:54.315285 26621 net.cpp:200] relu1 needs backward computation.
I0428 19:48:54.315289 26621 net.cpp:200] ip1 needs backward computation.
I0428 19:48:54.315291 26621 net.cpp:200] pool1 needs backward computation.
I0428 19:48:54.315294 26621 net.cpp:200] conv1 needs backward computation.
I0428 19:48:54.315299 26621 net.cpp:200] pool0 needs backward computation.
I0428 19:48:54.315301 26621 net.cpp:200] conv0 needs backward computation.
I0428 19:48:54.315305 26621 net.cpp:202] mnist does not need backward computation.
I0428 19:48:54.315309 26621 net.cpp:244] This network produces output loss
I0428 19:48:54.315317 26621 net.cpp:257] Network initialization done.
I0428 19:48:54.315655 26621 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test558.prototxt
I0428 19:48:54.315683 26621 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:54.315778 26621 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:54.315865 26621 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:54.315912 26621 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:54.315927 26621 net.cpp:86] Creating Layer mnist
I0428 19:48:54.315932 26621 net.cpp:382] mnist -> data
I0428 19:48:54.315939 26621 net.cpp:382] mnist -> label
I0428 19:48:54.316026 26621 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:54.318001 26621 net.cpp:124] Setting up mnist
I0428 19:48:54.318014 26621 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:54.318019 26621 net.cpp:131] Top shape: 100 (100)
I0428 19:48:54.318022 26621 net.cpp:139] Memory required for data: 314000
I0428 19:48:54.318027 26621 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:54.318033 26621 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:54.318037 26621 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:54.318042 26621 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:54.318049 26621 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:54.318121 26621 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:54.318132 26621 net.cpp:131] Top shape: 100 (100)
I0428 19:48:54.318137 26621 net.cpp:131] Top shape: 100 (100)
I0428 19:48:54.318140 26621 net.cpp:139] Memory required for data: 314800
I0428 19:48:54.318143 26621 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:54.318152 26621 net.cpp:86] Creating Layer conv0
I0428 19:48:54.318156 26621 net.cpp:408] conv0 <- data
I0428 19:48:54.318161 26621 net.cpp:382] conv0 -> conv0
I0428 19:48:54.319782 26621 net.cpp:124] Setting up conv0
I0428 19:48:54.319797 26621 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:54.319802 26621 net.cpp:139] Memory required for data: 1466800
I0428 19:48:54.319811 26621 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:54.319818 26621 net.cpp:86] Creating Layer pool0
I0428 19:48:54.319821 26621 net.cpp:408] pool0 <- conv0
I0428 19:48:54.319828 26621 net.cpp:382] pool0 -> pool0
I0428 19:48:54.319866 26621 net.cpp:124] Setting up pool0
I0428 19:48:54.319871 26621 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:54.319875 26621 net.cpp:139] Memory required for data: 1754800
I0428 19:48:54.319877 26621 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:54.319886 26621 net.cpp:86] Creating Layer conv1
I0428 19:48:54.319890 26621 net.cpp:408] conv1 <- pool0
I0428 19:48:54.319895 26621 net.cpp:382] conv1 -> conv1
I0428 19:48:54.322131 26621 net.cpp:124] Setting up conv1
I0428 19:48:54.322146 26621 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:48:54.322150 26621 net.cpp:139] Memory required for data: 1882800
I0428 19:48:54.322161 26621 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:54.322168 26621 net.cpp:86] Creating Layer pool1
I0428 19:48:54.322171 26621 net.cpp:408] pool1 <- conv1
I0428 19:48:54.322177 26621 net.cpp:382] pool1 -> pool1
I0428 19:48:54.322242 26621 net.cpp:124] Setting up pool1
I0428 19:48:54.322264 26621 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:48:54.322268 26621 net.cpp:139] Memory required for data: 1914800
I0428 19:48:54.322270 26621 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:54.322276 26621 net.cpp:86] Creating Layer ip1
I0428 19:48:54.322279 26621 net.cpp:408] ip1 <- pool1
I0428 19:48:54.322285 26621 net.cpp:382] ip1 -> ip1
I0428 19:48:54.322410 26621 net.cpp:124] Setting up ip1
I0428 19:48:54.322418 26621 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:54.322432 26621 net.cpp:139] Memory required for data: 1918800
I0428 19:48:54.322441 26621 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:54.322448 26621 net.cpp:86] Creating Layer relu1
I0428 19:48:54.322450 26621 net.cpp:408] relu1 <- ip1
I0428 19:48:54.322456 26621 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:54.322651 26621 net.cpp:124] Setting up relu1
I0428 19:48:54.322664 26621 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:54.322666 26621 net.cpp:139] Memory required for data: 1922800
I0428 19:48:54.322671 26621 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:54.322680 26621 net.cpp:86] Creating Layer ip2
I0428 19:48:54.322684 26621 net.cpp:408] ip2 <- ip1
I0428 19:48:54.322696 26621 net.cpp:382] ip2 -> ip2
I0428 19:48:54.322810 26621 net.cpp:124] Setting up ip2
I0428 19:48:54.322818 26621 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:54.322823 26621 net.cpp:139] Memory required for data: 1926800
I0428 19:48:54.322827 26621 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:54.322834 26621 net.cpp:86] Creating Layer relu2
I0428 19:48:54.322837 26621 net.cpp:408] relu2 <- ip2
I0428 19:48:54.322844 26621 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:54.323010 26621 net.cpp:124] Setting up relu2
I0428 19:48:54.323019 26621 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:54.323024 26621 net.cpp:139] Memory required for data: 1930800
I0428 19:48:54.323026 26621 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:54.323032 26621 net.cpp:86] Creating Layer ip3
I0428 19:48:54.323035 26621 net.cpp:408] ip3 <- ip2
I0428 19:48:54.323042 26621 net.cpp:382] ip3 -> ip3
I0428 19:48:54.323145 26621 net.cpp:124] Setting up ip3
I0428 19:48:54.323153 26621 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:54.323156 26621 net.cpp:139] Memory required for data: 1934800
I0428 19:48:54.323164 26621 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:54.323171 26621 net.cpp:86] Creating Layer relu3
I0428 19:48:54.323174 26621 net.cpp:408] relu3 <- ip3
I0428 19:48:54.323179 26621 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:54.323977 26621 net.cpp:124] Setting up relu3
I0428 19:48:54.323990 26621 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:54.323993 26621 net.cpp:139] Memory required for data: 1938800
I0428 19:48:54.323997 26621 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:48:54.324003 26621 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:48:54.324007 26621 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:48:54.324012 26621 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:48:54.324018 26621 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:48:54.324064 26621 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:48:54.324069 26621 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:54.324072 26621 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:54.324076 26621 net.cpp:139] Memory required for data: 1946800
I0428 19:48:54.324079 26621 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:54.324084 26621 net.cpp:86] Creating Layer accuracy
I0428 19:48:54.324086 26621 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:48:54.324091 26621 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:54.324096 26621 net.cpp:382] accuracy -> accuracy
I0428 19:48:54.324103 26621 net.cpp:124] Setting up accuracy
I0428 19:48:54.324107 26621 net.cpp:131] Top shape: (1)
I0428 19:48:54.324110 26621 net.cpp:139] Memory required for data: 1946804
I0428 19:48:54.324113 26621 layer_factory.hpp:77] Creating layer loss
I0428 19:48:54.324118 26621 net.cpp:86] Creating Layer loss
I0428 19:48:54.324121 26621 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:48:54.324126 26621 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:54.324131 26621 net.cpp:382] loss -> loss
I0428 19:48:54.324146 26621 layer_factory.hpp:77] Creating layer loss
I0428 19:48:54.324426 26621 net.cpp:124] Setting up loss
I0428 19:48:54.324436 26621 net.cpp:131] Top shape: (1)
I0428 19:48:54.324440 26621 net.cpp:134]     with loss weight 1
I0428 19:48:54.324446 26621 net.cpp:139] Memory required for data: 1946808
I0428 19:48:54.324461 26621 net.cpp:200] loss needs backward computation.
I0428 19:48:54.324466 26621 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:54.324470 26621 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:48:54.324475 26621 net.cpp:200] relu3 needs backward computation.
I0428 19:48:54.324476 26621 net.cpp:200] ip3 needs backward computation.
I0428 19:48:54.324481 26621 net.cpp:200] relu2 needs backward computation.
I0428 19:48:54.324483 26621 net.cpp:200] ip2 needs backward computation.
I0428 19:48:54.324486 26621 net.cpp:200] relu1 needs backward computation.
I0428 19:48:54.324491 26621 net.cpp:200] ip1 needs backward computation.
I0428 19:48:54.324493 26621 net.cpp:200] pool1 needs backward computation.
I0428 19:48:54.324496 26621 net.cpp:200] conv1 needs backward computation.
I0428 19:48:54.324507 26621 net.cpp:200] pool0 needs backward computation.
I0428 19:48:54.324512 26621 net.cpp:200] conv0 needs backward computation.
I0428 19:48:54.324515 26621 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:54.324519 26621 net.cpp:202] mnist does not need backward computation.
I0428 19:48:54.324522 26621 net.cpp:244] This network produces output accuracy
I0428 19:48:54.324525 26621 net.cpp:244] This network produces output loss
I0428 19:48:54.324539 26621 net.cpp:257] Network initialization done.
I0428 19:48:54.324585 26621 solver.cpp:56] Solver scaffolding done.
I0428 19:48:54.324988 26621 caffe.cpp:248] Starting Optimization
I0428 19:48:54.324995 26621 solver.cpp:273] Solving LeNet
I0428 19:48:54.325014 26621 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:54.325911 26621 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:54.329633 26621 blocking_queue.cpp:49] Waiting for data
I0428 19:48:54.402425 26628 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:54.402981 26621 solver.cpp:398]     Test net output #0: accuracy = 0.0875
I0428 19:48:54.403014 26621 solver.cpp:398]     Test net output #1: loss = 2.30603 (* 1 = 2.30603 loss)
I0428 19:48:54.405014 26621 solver.cpp:219] Iteration 0 (0 iter/s, 0.0799693s/100 iters), loss = 2.30781
I0428 19:48:54.405052 26621 solver.cpp:238]     Train net output #0: loss = 2.30781 (* 1 = 2.30781 loss)
I0428 19:48:54.405064 26621 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:54.485404 26621 solver.cpp:219] Iteration 100 (1244.73 iter/s, 0.0803389s/100 iters), loss = 1.43903
I0428 19:48:54.485429 26621 solver.cpp:238]     Train net output #0: loss = 1.43903 (* 1 = 1.43903 loss)
I0428 19:48:54.485435 26621 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:54.558200 26621 solver.cpp:219] Iteration 200 (1374.32 iter/s, 0.0727634s/100 iters), loss = 1.24831
I0428 19:48:54.558223 26621 solver.cpp:238]     Train net output #0: loss = 1.24831 (* 1 = 1.24831 loss)
I0428 19:48:54.558229 26621 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:54.628836 26621 solver.cpp:219] Iteration 300 (1416.33 iter/s, 0.0706048s/100 iters), loss = 0.560122
I0428 19:48:54.628859 26621 solver.cpp:238]     Train net output #0: loss = 0.560122 (* 1 = 0.560122 loss)
I0428 19:48:54.628865 26621 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:54.699096 26621 solver.cpp:219] Iteration 400 (1423.93 iter/s, 0.070228s/100 iters), loss = 0.439089
I0428 19:48:54.699120 26621 solver.cpp:238]     Train net output #0: loss = 0.439089 (* 1 = 0.439089 loss)
I0428 19:48:54.699125 26621 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:54.769428 26621 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:54.845410 26628 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:54.845909 26621 solver.cpp:398]     Test net output #0: accuracy = 0.8972
I0428 19:48:54.845932 26621 solver.cpp:398]     Test net output #1: loss = 0.348812 (* 1 = 0.348812 loss)
I0428 19:48:54.846746 26621 solver.cpp:219] Iteration 500 (677.44 iter/s, 0.147615s/100 iters), loss = 0.362913
I0428 19:48:54.846768 26621 solver.cpp:238]     Train net output #0: loss = 0.362913 (* 1 = 0.362913 loss)
I0428 19:48:54.846789 26621 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:54.923611 26621 solver.cpp:219] Iteration 600 (1301.51 iter/s, 0.0768338s/100 iters), loss = 0.302687
I0428 19:48:54.923633 26621 solver.cpp:238]     Train net output #0: loss = 0.302687 (* 1 = 0.302687 loss)
I0428 19:48:54.923640 26621 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:54.996742 26621 solver.cpp:219] Iteration 700 (1368.02 iter/s, 0.0730984s/100 iters), loss = 0.358953
I0428 19:48:54.996764 26621 solver.cpp:238]     Train net output #0: loss = 0.358953 (* 1 = 0.358953 loss)
I0428 19:48:54.996770 26621 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:55.068128 26621 solver.cpp:219] Iteration 800 (1401.44 iter/s, 0.0713554s/100 iters), loss = 0.292719
I0428 19:48:55.068151 26621 solver.cpp:238]     Train net output #0: loss = 0.292719 (* 1 = 0.292719 loss)
I0428 19:48:55.068157 26621 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:55.138821 26621 solver.cpp:219] Iteration 900 (1415.21 iter/s, 0.0706611s/100 iters), loss = 0.438676
I0428 19:48:55.138845 26621 solver.cpp:238]     Train net output #0: loss = 0.438676 (* 1 = 0.438676 loss)
I0428 19:48:55.138866 26621 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:55.163033 26627 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:55.209780 26621 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:55.210465 26621 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:55.210866 26621 solver.cpp:311] Iteration 1000, loss = 0.294926
I0428 19:48:55.210897 26621 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:55.285279 26628 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:55.285815 26621 solver.cpp:398]     Test net output #0: accuracy = 0.9463
I0428 19:48:55.285840 26621 solver.cpp:398]     Test net output #1: loss = 0.184378 (* 1 = 0.184378 loss)
I0428 19:48:55.285846 26621 solver.cpp:316] Optimization Done.
I0428 19:48:55.285851 26621 caffe.cpp:259] Optimization Done.
