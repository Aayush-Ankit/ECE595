I0428 19:33:20.767017 23083 caffe.cpp:218] Using GPUs 0
I0428 19:33:20.800465 23083 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:21.293042 23083 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test177.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:21.293189 23083 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test177.prototxt
I0428 19:33:21.293500 23083 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:21.293519 23083 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:21.293596 23083 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:21.293684 23083 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:21.293802 23083 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:21.293829 23083 net.cpp:86] Creating Layer mnist
I0428 19:33:21.293838 23083 net.cpp:382] mnist -> data
I0428 19:33:21.293864 23083 net.cpp:382] mnist -> label
I0428 19:33:21.294876 23083 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:21.297070 23083 net.cpp:124] Setting up mnist
I0428 19:33:21.297087 23083 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:21.297096 23083 net.cpp:131] Top shape: 64 (64)
I0428 19:33:21.297101 23083 net.cpp:139] Memory required for data: 200960
I0428 19:33:21.297111 23083 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:21.297135 23083 net.cpp:86] Creating Layer conv0
I0428 19:33:21.297158 23083 net.cpp:408] conv0 <- data
I0428 19:33:21.297173 23083 net.cpp:382] conv0 -> conv0
I0428 19:33:21.527122 23083 net.cpp:124] Setting up conv0
I0428 19:33:21.527150 23083 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:21.527155 23083 net.cpp:139] Memory required for data: 3887360
I0428 19:33:21.527175 23083 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:21.527191 23083 net.cpp:86] Creating Layer pool0
I0428 19:33:21.527215 23083 net.cpp:408] pool0 <- conv0
I0428 19:33:21.527225 23083 net.cpp:382] pool0 -> pool0
I0428 19:33:21.527276 23083 net.cpp:124] Setting up pool0
I0428 19:33:21.527284 23083 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:21.527288 23083 net.cpp:139] Memory required for data: 4808960
I0428 19:33:21.527293 23083 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:21.527304 23083 net.cpp:86] Creating Layer ip1
I0428 19:33:21.527313 23083 net.cpp:408] ip1 <- pool0
I0428 19:33:21.527321 23083 net.cpp:382] ip1 -> ip1
I0428 19:33:21.528749 23083 net.cpp:124] Setting up ip1
I0428 19:33:21.528764 23083 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:21.528769 23083 net.cpp:139] Memory required for data: 4815360
I0428 19:33:21.528780 23083 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:21.528805 23083 net.cpp:86] Creating Layer relu1
I0428 19:33:21.528836 23083 net.cpp:408] relu1 <- ip1
I0428 19:33:21.528843 23083 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:21.529047 23083 net.cpp:124] Setting up relu1
I0428 19:33:21.529057 23083 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:21.529063 23083 net.cpp:139] Memory required for data: 4821760
I0428 19:33:21.529068 23083 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:21.529078 23083 net.cpp:86] Creating Layer ip2
I0428 19:33:21.529084 23083 net.cpp:408] ip2 <- ip1
I0428 19:33:21.529093 23083 net.cpp:382] ip2 -> ip2
I0428 19:33:21.529208 23083 net.cpp:124] Setting up ip2
I0428 19:33:21.529217 23083 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:21.529222 23083 net.cpp:139] Memory required for data: 4824320
I0428 19:33:21.529234 23083 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:21.529243 23083 net.cpp:86] Creating Layer relu2
I0428 19:33:21.529249 23083 net.cpp:408] relu2 <- ip2
I0428 19:33:21.529256 23083 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:21.529986 23083 net.cpp:124] Setting up relu2
I0428 19:33:21.530000 23083 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:21.530006 23083 net.cpp:139] Memory required for data: 4826880
I0428 19:33:21.530011 23083 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:21.530023 23083 net.cpp:86] Creating Layer ip3
I0428 19:33:21.530028 23083 net.cpp:408] ip3 <- ip2
I0428 19:33:21.530037 23083 net.cpp:382] ip3 -> ip3
I0428 19:33:21.530165 23083 net.cpp:124] Setting up ip3
I0428 19:33:21.530174 23083 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:21.530179 23083 net.cpp:139] Memory required for data: 4829440
I0428 19:33:21.530189 23083 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:21.530197 23083 net.cpp:86] Creating Layer relu3
I0428 19:33:21.530203 23083 net.cpp:408] relu3 <- ip3
I0428 19:33:21.530210 23083 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:21.530376 23083 net.cpp:124] Setting up relu3
I0428 19:33:21.530386 23083 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:21.530390 23083 net.cpp:139] Memory required for data: 4832000
I0428 19:33:21.530395 23083 layer_factory.hpp:77] Creating layer loss
I0428 19:33:21.530403 23083 net.cpp:86] Creating Layer loss
I0428 19:33:21.530408 23083 net.cpp:408] loss <- ip3
I0428 19:33:21.530416 23083 net.cpp:408] loss <- label
I0428 19:33:21.530423 23083 net.cpp:382] loss -> loss
I0428 19:33:21.530445 23083 layer_factory.hpp:77] Creating layer loss
I0428 19:33:21.530664 23083 net.cpp:124] Setting up loss
I0428 19:33:21.530675 23083 net.cpp:131] Top shape: (1)
I0428 19:33:21.530680 23083 net.cpp:134]     with loss weight 1
I0428 19:33:21.530699 23083 net.cpp:139] Memory required for data: 4832004
I0428 19:33:21.530704 23083 net.cpp:200] loss needs backward computation.
I0428 19:33:21.530710 23083 net.cpp:200] relu3 needs backward computation.
I0428 19:33:21.530714 23083 net.cpp:200] ip3 needs backward computation.
I0428 19:33:21.530719 23083 net.cpp:200] relu2 needs backward computation.
I0428 19:33:21.530724 23083 net.cpp:200] ip2 needs backward computation.
I0428 19:33:21.530728 23083 net.cpp:200] relu1 needs backward computation.
I0428 19:33:21.530732 23083 net.cpp:200] ip1 needs backward computation.
I0428 19:33:21.530750 23083 net.cpp:200] pool0 needs backward computation.
I0428 19:33:21.530755 23083 net.cpp:200] conv0 needs backward computation.
I0428 19:33:21.530760 23083 net.cpp:202] mnist does not need backward computation.
I0428 19:33:21.530764 23083 net.cpp:244] This network produces output loss
I0428 19:33:21.530776 23083 net.cpp:257] Network initialization done.
I0428 19:33:21.531049 23083 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test177.prototxt
I0428 19:33:21.531078 23083 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:21.531177 23083 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:21.531265 23083 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:21.531327 23083 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:21.531342 23083 net.cpp:86] Creating Layer mnist
I0428 19:33:21.531349 23083 net.cpp:382] mnist -> data
I0428 19:33:21.531361 23083 net.cpp:382] mnist -> label
I0428 19:33:21.531489 23083 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:21.532847 23083 net.cpp:124] Setting up mnist
I0428 19:33:21.532877 23083 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:21.532886 23083 net.cpp:131] Top shape: 100 (100)
I0428 19:33:21.532891 23083 net.cpp:139] Memory required for data: 314000
I0428 19:33:21.532896 23083 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:21.532907 23083 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:21.532912 23083 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:21.532920 23083 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:21.532930 23083 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:21.533022 23083 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:21.533030 23083 net.cpp:131] Top shape: 100 (100)
I0428 19:33:21.533037 23083 net.cpp:131] Top shape: 100 (100)
I0428 19:33:21.533042 23083 net.cpp:139] Memory required for data: 314800
I0428 19:33:21.533058 23083 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:21.533072 23083 net.cpp:86] Creating Layer conv0
I0428 19:33:21.533079 23083 net.cpp:408] conv0 <- data
I0428 19:33:21.533087 23083 net.cpp:382] conv0 -> conv0
I0428 19:33:21.534637 23083 net.cpp:124] Setting up conv0
I0428 19:33:21.534663 23083 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:21.534670 23083 net.cpp:139] Memory required for data: 6074800
I0428 19:33:21.534683 23083 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:21.534693 23083 net.cpp:86] Creating Layer pool0
I0428 19:33:21.534699 23083 net.cpp:408] pool0 <- conv0
I0428 19:33:21.534708 23083 net.cpp:382] pool0 -> pool0
I0428 19:33:21.534747 23083 net.cpp:124] Setting up pool0
I0428 19:33:21.534755 23083 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:21.534760 23083 net.cpp:139] Memory required for data: 7514800
I0428 19:33:21.534765 23083 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:21.534775 23083 net.cpp:86] Creating Layer ip1
I0428 19:33:21.534780 23083 net.cpp:408] ip1 <- pool0
I0428 19:33:21.534788 23083 net.cpp:382] ip1 -> ip1
I0428 19:33:21.535409 23083 net.cpp:124] Setting up ip1
I0428 19:33:21.535421 23083 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:21.535426 23083 net.cpp:139] Memory required for data: 7524800
I0428 19:33:21.535439 23083 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:21.535462 23083 net.cpp:86] Creating Layer relu1
I0428 19:33:21.535468 23083 net.cpp:408] relu1 <- ip1
I0428 19:33:21.535477 23083 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:21.535663 23083 net.cpp:124] Setting up relu1
I0428 19:33:21.535673 23083 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:21.535678 23083 net.cpp:139] Memory required for data: 7534800
I0428 19:33:21.535683 23083 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:21.535692 23083 net.cpp:86] Creating Layer ip2
I0428 19:33:21.535698 23083 net.cpp:408] ip2 <- ip1
I0428 19:33:21.535706 23083 net.cpp:382] ip2 -> ip2
I0428 19:33:21.535807 23083 net.cpp:124] Setting up ip2
I0428 19:33:21.535815 23083 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:21.535820 23083 net.cpp:139] Memory required for data: 7538800
I0428 19:33:21.535831 23083 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:21.535842 23083 net.cpp:86] Creating Layer relu2
I0428 19:33:21.535848 23083 net.cpp:408] relu2 <- ip2
I0428 19:33:21.535856 23083 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:21.536607 23083 net.cpp:124] Setting up relu2
I0428 19:33:21.536622 23083 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:21.536628 23083 net.cpp:139] Memory required for data: 7542800
I0428 19:33:21.536633 23083 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:21.536643 23083 net.cpp:86] Creating Layer ip3
I0428 19:33:21.536648 23083 net.cpp:408] ip3 <- ip2
I0428 19:33:21.536659 23083 net.cpp:382] ip3 -> ip3
I0428 19:33:21.536851 23083 net.cpp:124] Setting up ip3
I0428 19:33:21.536862 23083 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:21.536866 23083 net.cpp:139] Memory required for data: 7546800
I0428 19:33:21.536877 23083 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:21.536900 23083 net.cpp:86] Creating Layer relu3
I0428 19:33:21.536906 23083 net.cpp:408] relu3 <- ip3
I0428 19:33:21.536913 23083 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:21.537089 23083 net.cpp:124] Setting up relu3
I0428 19:33:21.537101 23083 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:21.537106 23083 net.cpp:139] Memory required for data: 7550800
I0428 19:33:21.537116 23083 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:21.537123 23083 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:21.537128 23083 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:21.537139 23083 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:21.537148 23083 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:21.537220 23083 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:21.537227 23083 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:21.537233 23083 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:21.537250 23083 net.cpp:139] Memory required for data: 7558800
I0428 19:33:21.537256 23083 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:21.537266 23083 net.cpp:86] Creating Layer accuracy
I0428 19:33:21.537271 23083 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:21.537276 23083 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:21.537284 23083 net.cpp:382] accuracy -> accuracy
I0428 19:33:21.537295 23083 net.cpp:124] Setting up accuracy
I0428 19:33:21.537303 23083 net.cpp:131] Top shape: (1)
I0428 19:33:21.537308 23083 net.cpp:139] Memory required for data: 7558804
I0428 19:33:21.537313 23083 layer_factory.hpp:77] Creating layer loss
I0428 19:33:21.537322 23083 net.cpp:86] Creating Layer loss
I0428 19:33:21.537328 23083 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:21.537333 23083 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:21.537340 23083 net.cpp:382] loss -> loss
I0428 19:33:21.537350 23083 layer_factory.hpp:77] Creating layer loss
I0428 19:33:21.537608 23083 net.cpp:124] Setting up loss
I0428 19:33:21.537634 23083 net.cpp:131] Top shape: (1)
I0428 19:33:21.537639 23083 net.cpp:134]     with loss weight 1
I0428 19:33:21.537648 23083 net.cpp:139] Memory required for data: 7558808
I0428 19:33:21.537654 23083 net.cpp:200] loss needs backward computation.
I0428 19:33:21.537660 23083 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:21.537665 23083 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:21.537670 23083 net.cpp:200] relu3 needs backward computation.
I0428 19:33:21.537675 23083 net.cpp:200] ip3 needs backward computation.
I0428 19:33:21.537680 23083 net.cpp:200] relu2 needs backward computation.
I0428 19:33:21.537684 23083 net.cpp:200] ip2 needs backward computation.
I0428 19:33:21.537690 23083 net.cpp:200] relu1 needs backward computation.
I0428 19:33:21.537694 23083 net.cpp:200] ip1 needs backward computation.
I0428 19:33:21.537699 23083 net.cpp:200] pool0 needs backward computation.
I0428 19:33:21.537704 23083 net.cpp:200] conv0 needs backward computation.
I0428 19:33:21.537710 23083 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:21.537716 23083 net.cpp:202] mnist does not need backward computation.
I0428 19:33:21.537720 23083 net.cpp:244] This network produces output accuracy
I0428 19:33:21.537725 23083 net.cpp:244] This network produces output loss
I0428 19:33:21.537742 23083 net.cpp:257] Network initialization done.
I0428 19:33:21.537784 23083 solver.cpp:56] Solver scaffolding done.
I0428 19:33:21.538064 23083 caffe.cpp:248] Starting Optimization
I0428 19:33:21.538069 23083 solver.cpp:273] Solving LeNet
I0428 19:33:21.538074 23083 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:21.538878 23083 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:21.544942 23083 blocking_queue.cpp:49] Waiting for data
I0428 19:33:21.617169 23090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:21.617928 23083 solver.cpp:398]     Test net output #0: accuracy = 0.0572
I0428 19:33:21.617947 23083 solver.cpp:398]     Test net output #1: loss = 2.30374 (* 1 = 2.30374 loss)
I0428 19:33:21.621695 23083 solver.cpp:219] Iteration 0 (-1.2209e-30 iter/s, 0.0835892s/100 iters), loss = 2.30019
I0428 19:33:21.621722 23083 solver.cpp:238]     Train net output #0: loss = 2.30019 (* 1 = 2.30019 loss)
I0428 19:33:21.621753 23083 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:21.727214 23083 solver.cpp:219] Iteration 100 (948.037 iter/s, 0.105481s/100 iters), loss = 0.554004
I0428 19:33:21.727258 23083 solver.cpp:238]     Train net output #0: loss = 0.554004 (* 1 = 0.554004 loss)
I0428 19:33:21.727283 23083 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:21.825793 23083 solver.cpp:219] Iteration 200 (1014.96 iter/s, 0.0985262s/100 iters), loss = 0.333444
I0428 19:33:21.825820 23083 solver.cpp:238]     Train net output #0: loss = 0.333444 (* 1 = 0.333444 loss)
I0428 19:33:21.825829 23083 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:21.921716 23083 solver.cpp:219] Iteration 300 (1042.88 iter/s, 0.0958885s/100 iters), loss = 0.318365
I0428 19:33:21.921743 23083 solver.cpp:238]     Train net output #0: loss = 0.318364 (* 1 = 0.318364 loss)
I0428 19:33:21.921768 23083 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:22.018652 23083 solver.cpp:219] Iteration 400 (1031.98 iter/s, 0.096901s/100 iters), loss = 0.195695
I0428 19:33:22.018679 23083 solver.cpp:238]     Train net output #0: loss = 0.195695 (* 1 = 0.195695 loss)
I0428 19:33:22.018704 23083 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:22.113260 23083 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:22.176021 23090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:22.178113 23083 solver.cpp:398]     Test net output #0: accuracy = 0.9476
I0428 19:33:22.178135 23083 solver.cpp:398]     Test net output #1: loss = 0.174485 (* 1 = 0.174485 loss)
I0428 19:33:22.179062 23083 solver.cpp:219] Iteration 500 (623.551 iter/s, 0.160372s/100 iters), loss = 0.25082
I0428 19:33:22.179087 23083 solver.cpp:238]     Train net output #0: loss = 0.25082 (* 1 = 0.25082 loss)
I0428 19:33:22.179097 23083 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:22.274713 23083 solver.cpp:219] Iteration 600 (1045.83 iter/s, 0.095618s/100 iters), loss = 0.13073
I0428 19:33:22.274740 23083 solver.cpp:238]     Train net output #0: loss = 0.13073 (* 1 = 0.13073 loss)
I0428 19:33:22.274765 23083 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:22.371359 23083 solver.cpp:219] Iteration 700 (1035.09 iter/s, 0.0966103s/100 iters), loss = 0.301333
I0428 19:33:22.371387 23083 solver.cpp:238]     Train net output #0: loss = 0.301333 (* 1 = 0.301333 loss)
I0428 19:33:22.371412 23083 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:22.467548 23083 solver.cpp:219] Iteration 800 (1040 iter/s, 0.0961536s/100 iters), loss = 0.357415
I0428 19:33:22.467576 23083 solver.cpp:238]     Train net output #0: loss = 0.357415 (* 1 = 0.357415 loss)
I0428 19:33:22.467602 23083 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:22.563534 23083 solver.cpp:219] Iteration 900 (1042.2 iter/s, 0.0959508s/100 iters), loss = 0.134261
I0428 19:33:22.563562 23083 solver.cpp:238]     Train net output #0: loss = 0.134261 (* 1 = 0.134261 loss)
I0428 19:33:22.563587 23083 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:22.595631 23089 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:22.658411 23083 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:22.660305 23083 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:22.661645 23083 solver.cpp:311] Iteration 1000, loss = 0.123532
I0428 19:33:22.661662 23083 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:22.725699 23090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:22.728021 23083 solver.cpp:398]     Test net output #0: accuracy = 0.9667
I0428 19:33:22.728042 23083 solver.cpp:398]     Test net output #1: loss = 0.103142 (* 1 = 0.103142 loss)
I0428 19:33:22.728066 23083 solver.cpp:316] Optimization Done.
I0428 19:33:22.728071 23083 caffe.cpp:259] Optimization Done.
