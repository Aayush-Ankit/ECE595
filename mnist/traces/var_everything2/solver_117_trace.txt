I0428 19:31:16.410804 22536 caffe.cpp:218] Using GPUs 0
I0428 19:31:16.449884 22536 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:16.964988 22536 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test117.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:16.965137 22536 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test117.prototxt
I0428 19:31:16.965433 22536 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:16.965448 22536 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:16.965518 22536 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:31:16.965579 22536 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:16.965678 22536 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:16.965703 22536 net.cpp:86] Creating Layer mnist
I0428 19:31:16.965710 22536 net.cpp:382] mnist -> data
I0428 19:31:16.965733 22536 net.cpp:382] mnist -> label
I0428 19:31:16.966832 22536 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:16.969292 22536 net.cpp:124] Setting up mnist
I0428 19:31:16.969310 22536 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:16.969319 22536 net.cpp:131] Top shape: 64 (64)
I0428 19:31:16.969323 22536 net.cpp:139] Memory required for data: 200960
I0428 19:31:16.969331 22536 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:16.969347 22536 net.cpp:86] Creating Layer conv0
I0428 19:31:16.969352 22536 net.cpp:408] conv0 <- data
I0428 19:31:16.969364 22536 net.cpp:382] conv0 -> conv0
I0428 19:31:17.258965 22536 net.cpp:124] Setting up conv0
I0428 19:31:17.258996 22536 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:17.258999 22536 net.cpp:139] Memory required for data: 1675520
I0428 19:31:17.259016 22536 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:17.259029 22536 net.cpp:86] Creating Layer pool0
I0428 19:31:17.259034 22536 net.cpp:408] pool0 <- conv0
I0428 19:31:17.259040 22536 net.cpp:382] pool0 -> pool0
I0428 19:31:17.259093 22536 net.cpp:124] Setting up pool0
I0428 19:31:17.259099 22536 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:17.259101 22536 net.cpp:139] Memory required for data: 2044160
I0428 19:31:17.259105 22536 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:17.259114 22536 net.cpp:86] Creating Layer ip1
I0428 19:31:17.259116 22536 net.cpp:408] ip1 <- pool0
I0428 19:31:17.259122 22536 net.cpp:382] ip1 -> ip1
I0428 19:31:17.260210 22536 net.cpp:124] Setting up ip1
I0428 19:31:17.260224 22536 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:17.260244 22536 net.cpp:139] Memory required for data: 2046720
I0428 19:31:17.260253 22536 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:17.260262 22536 net.cpp:86] Creating Layer relu1
I0428 19:31:17.260265 22536 net.cpp:408] relu1 <- ip1
I0428 19:31:17.260270 22536 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:17.260457 22536 net.cpp:124] Setting up relu1
I0428 19:31:17.260468 22536 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:17.260471 22536 net.cpp:139] Memory required for data: 2049280
I0428 19:31:17.260474 22536 layer_factory.hpp:77] Creating layer loss
I0428 19:31:17.260480 22536 net.cpp:86] Creating Layer loss
I0428 19:31:17.260484 22536 net.cpp:408] loss <- ip1
I0428 19:31:17.260488 22536 net.cpp:408] loss <- label
I0428 19:31:17.260494 22536 net.cpp:382] loss -> loss
I0428 19:31:17.260514 22536 layer_factory.hpp:77] Creating layer loss
I0428 19:31:17.261395 22536 net.cpp:124] Setting up loss
I0428 19:31:17.261410 22536 net.cpp:131] Top shape: (1)
I0428 19:31:17.261415 22536 net.cpp:134]     with loss weight 1
I0428 19:31:17.261428 22536 net.cpp:139] Memory required for data: 2049284
I0428 19:31:17.261432 22536 net.cpp:200] loss needs backward computation.
I0428 19:31:17.261436 22536 net.cpp:200] relu1 needs backward computation.
I0428 19:31:17.261440 22536 net.cpp:200] ip1 needs backward computation.
I0428 19:31:17.261443 22536 net.cpp:200] pool0 needs backward computation.
I0428 19:31:17.261447 22536 net.cpp:200] conv0 needs backward computation.
I0428 19:31:17.261451 22536 net.cpp:202] mnist does not need backward computation.
I0428 19:31:17.261453 22536 net.cpp:244] This network produces output loss
I0428 19:31:17.261461 22536 net.cpp:257] Network initialization done.
I0428 19:31:17.261695 22536 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test117.prototxt
I0428 19:31:17.261719 22536 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:17.261790 22536 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:31:17.261847 22536 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:17.261896 22536 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:17.261909 22536 net.cpp:86] Creating Layer mnist
I0428 19:31:17.261914 22536 net.cpp:382] mnist -> data
I0428 19:31:17.261922 22536 net.cpp:382] mnist -> label
I0428 19:31:17.262015 22536 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:17.264045 22536 net.cpp:124] Setting up mnist
I0428 19:31:17.264060 22536 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:17.264065 22536 net.cpp:131] Top shape: 100 (100)
I0428 19:31:17.264070 22536 net.cpp:139] Memory required for data: 314000
I0428 19:31:17.264084 22536 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:17.264117 22536 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:17.264120 22536 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:17.264125 22536 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:17.264133 22536 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:17.264184 22536 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:17.264191 22536 net.cpp:131] Top shape: 100 (100)
I0428 19:31:17.264195 22536 net.cpp:131] Top shape: 100 (100)
I0428 19:31:17.264199 22536 net.cpp:139] Memory required for data: 314800
I0428 19:31:17.264202 22536 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:17.264211 22536 net.cpp:86] Creating Layer conv0
I0428 19:31:17.264215 22536 net.cpp:408] conv0 <- data
I0428 19:31:17.264220 22536 net.cpp:382] conv0 -> conv0
I0428 19:31:17.266005 22536 net.cpp:124] Setting up conv0
I0428 19:31:17.266021 22536 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:17.266026 22536 net.cpp:139] Memory required for data: 2618800
I0428 19:31:17.266034 22536 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:17.266041 22536 net.cpp:86] Creating Layer pool0
I0428 19:31:17.266046 22536 net.cpp:408] pool0 <- conv0
I0428 19:31:17.266052 22536 net.cpp:382] pool0 -> pool0
I0428 19:31:17.266089 22536 net.cpp:124] Setting up pool0
I0428 19:31:17.266095 22536 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:17.266099 22536 net.cpp:139] Memory required for data: 3194800
I0428 19:31:17.266103 22536 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:17.266109 22536 net.cpp:86] Creating Layer ip1
I0428 19:31:17.266113 22536 net.cpp:408] ip1 <- pool0
I0428 19:31:17.266119 22536 net.cpp:382] ip1 -> ip1
I0428 19:31:17.266307 22536 net.cpp:124] Setting up ip1
I0428 19:31:17.266316 22536 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:17.266319 22536 net.cpp:139] Memory required for data: 3198800
I0428 19:31:17.266327 22536 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:17.266332 22536 net.cpp:86] Creating Layer relu1
I0428 19:31:17.266335 22536 net.cpp:408] relu1 <- ip1
I0428 19:31:17.266340 22536 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:17.266510 22536 net.cpp:124] Setting up relu1
I0428 19:31:17.266520 22536 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:17.266523 22536 net.cpp:139] Memory required for data: 3202800
I0428 19:31:17.266526 22536 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:31:17.266531 22536 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:31:17.266535 22536 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:31:17.266540 22536 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:31:17.266546 22536 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:31:17.266582 22536 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:31:17.266587 22536 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:17.266592 22536 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:17.266594 22536 net.cpp:139] Memory required for data: 3210800
I0428 19:31:17.266597 22536 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:17.266603 22536 net.cpp:86] Creating Layer accuracy
I0428 19:31:17.266607 22536 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:31:17.266611 22536 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:17.266615 22536 net.cpp:382] accuracy -> accuracy
I0428 19:31:17.266623 22536 net.cpp:124] Setting up accuracy
I0428 19:31:17.266626 22536 net.cpp:131] Top shape: (1)
I0428 19:31:17.266629 22536 net.cpp:139] Memory required for data: 3210804
I0428 19:31:17.266633 22536 layer_factory.hpp:77] Creating layer loss
I0428 19:31:17.266638 22536 net.cpp:86] Creating Layer loss
I0428 19:31:17.266641 22536 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:31:17.266645 22536 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:17.266649 22536 net.cpp:382] loss -> loss
I0428 19:31:17.266655 22536 layer_factory.hpp:77] Creating layer loss
I0428 19:31:17.267047 22536 net.cpp:124] Setting up loss
I0428 19:31:17.267069 22536 net.cpp:131] Top shape: (1)
I0428 19:31:17.267072 22536 net.cpp:134]     with loss weight 1
I0428 19:31:17.267079 22536 net.cpp:139] Memory required for data: 3210808
I0428 19:31:17.267083 22536 net.cpp:200] loss needs backward computation.
I0428 19:31:17.267087 22536 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:17.267092 22536 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:31:17.267096 22536 net.cpp:200] relu1 needs backward computation.
I0428 19:31:17.267098 22536 net.cpp:200] ip1 needs backward computation.
I0428 19:31:17.267102 22536 net.cpp:200] pool0 needs backward computation.
I0428 19:31:17.267105 22536 net.cpp:200] conv0 needs backward computation.
I0428 19:31:17.267109 22536 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:17.267120 22536 net.cpp:202] mnist does not need backward computation.
I0428 19:31:17.267123 22536 net.cpp:244] This network produces output accuracy
I0428 19:31:17.267132 22536 net.cpp:244] This network produces output loss
I0428 19:31:17.267141 22536 net.cpp:257] Network initialization done.
I0428 19:31:17.267184 22536 solver.cpp:56] Solver scaffolding done.
I0428 19:31:17.267341 22536 caffe.cpp:248] Starting Optimization
I0428 19:31:17.267349 22536 solver.cpp:273] Solving LeNet
I0428 19:31:17.267354 22536 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:17.267437 22536 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:17.267505 22536 blocking_queue.cpp:49] Waiting for data
I0428 19:31:17.341807 22543 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:17.342401 22536 solver.cpp:398]     Test net output #0: accuracy = 0.1138
I0428 19:31:17.342437 22536 solver.cpp:398]     Test net output #1: loss = 2.31985 (* 1 = 2.31985 loss)
I0428 19:31:17.345523 22536 solver.cpp:219] Iteration 0 (0 iter/s, 0.0781391s/100 iters), loss = 2.29731
I0428 19:31:17.345566 22536 solver.cpp:238]     Train net output #0: loss = 2.29731 (* 1 = 2.29731 loss)
I0428 19:31:17.345587 22536 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:17.401330 22536 solver.cpp:219] Iteration 100 (1793.54 iter/s, 0.0557558s/100 iters), loss = 1.02701
I0428 19:31:17.401367 22536 solver.cpp:238]     Train net output #0: loss = 1.02701 (* 1 = 1.02701 loss)
I0428 19:31:17.401376 22536 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:17.452963 22536 solver.cpp:219] Iteration 200 (1938.39 iter/s, 0.0515892s/100 iters), loss = 0.389453
I0428 19:31:17.452993 22536 solver.cpp:238]     Train net output #0: loss = 0.389453 (* 1 = 0.389453 loss)
I0428 19:31:17.453001 22536 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:17.505729 22536 solver.cpp:219] Iteration 300 (1896.5 iter/s, 0.0527288s/100 iters), loss = 0.246368
I0428 19:31:17.505754 22536 solver.cpp:238]     Train net output #0: loss = 0.246368 (* 1 = 0.246368 loss)
I0428 19:31:17.505761 22536 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:17.559301 22536 solver.cpp:219] Iteration 400 (1867.77 iter/s, 0.0535398s/100 iters), loss = 0.181343
I0428 19:31:17.559324 22536 solver.cpp:238]     Train net output #0: loss = 0.181343 (* 1 = 0.181343 loss)
I0428 19:31:17.559330 22536 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:17.612664 22536 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:17.687881 22543 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:17.688393 22536 solver.cpp:398]     Test net output #0: accuracy = 0.9309
I0428 19:31:17.688421 22536 solver.cpp:398]     Test net output #1: loss = 0.249995 (* 1 = 0.249995 loss)
I0428 19:31:17.689066 22536 solver.cpp:219] Iteration 500 (770.841 iter/s, 0.129729s/100 iters), loss = 0.32196
I0428 19:31:17.689097 22536 solver.cpp:238]     Train net output #0: loss = 0.32196 (* 1 = 0.32196 loss)
I0428 19:31:17.689108 22536 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:17.742027 22536 solver.cpp:219] Iteration 600 (1889.59 iter/s, 0.0529214s/100 iters), loss = 0.175591
I0428 19:31:17.742074 22536 solver.cpp:238]     Train net output #0: loss = 0.175591 (* 1 = 0.175591 loss)
I0428 19:31:17.742081 22536 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:17.790104 22536 solver.cpp:219] Iteration 700 (2082.27 iter/s, 0.0480245s/100 iters), loss = 0.344873
I0428 19:31:17.790135 22536 solver.cpp:238]     Train net output #0: loss = 0.344873 (* 1 = 0.344873 loss)
I0428 19:31:17.790143 22536 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:17.837090 22536 solver.cpp:219] Iteration 800 (2129.98 iter/s, 0.0469489s/100 iters), loss = 0.415297
I0428 19:31:17.837117 22536 solver.cpp:238]     Train net output #0: loss = 0.415297 (* 1 = 0.415297 loss)
I0428 19:31:17.837139 22536 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:17.891072 22536 solver.cpp:219] Iteration 900 (1853.62 iter/s, 0.0539484s/100 iters), loss = 0.345074
I0428 19:31:17.891096 22536 solver.cpp:238]     Train net output #0: loss = 0.345074 (* 1 = 0.345074 loss)
I0428 19:31:17.891103 22536 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:17.909835 22542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:17.944319 22536 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:17.944972 22536 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:17.945447 22536 solver.cpp:311] Iteration 1000, loss = 0.269317
I0428 19:31:17.945461 22536 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:18.020475 22543 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:18.020946 22536 solver.cpp:398]     Test net output #0: accuracy = 0.9505
I0428 19:31:18.020965 22536 solver.cpp:398]     Test net output #1: loss = 0.171785 (* 1 = 0.171785 loss)
I0428 19:31:18.020973 22536 solver.cpp:316] Optimization Done.
I0428 19:31:18.020977 22536 caffe.cpp:259] Optimization Done.
