I0428 20:13:41.367154 32503 caffe.cpp:218] Using GPUs 0
I0428 20:13:41.396275 32503 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:41.838017 32503 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1204.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:41.838172 32503 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1204.prototxt
I0428 20:13:41.838538 32503 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:41.838568 32503 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:41.838649 32503 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:41.838716 32503 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:41.838794 32503 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:41.838812 32503 net.cpp:86] Creating Layer mnist
I0428 20:13:41.838819 32503 net.cpp:382] mnist -> data
I0428 20:13:41.838836 32503 net.cpp:382] mnist -> label
I0428 20:13:41.839826 32503 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:41.842178 32503 net.cpp:124] Setting up mnist
I0428 20:13:41.842223 32503 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:41.842228 32503 net.cpp:131] Top shape: 64 (64)
I0428 20:13:41.842231 32503 net.cpp:139] Memory required for data: 200960
I0428 20:13:41.842236 32503 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:41.842249 32503 net.cpp:86] Creating Layer conv0
I0428 20:13:41.842267 32503 net.cpp:408] conv0 <- data
I0428 20:13:41.842278 32503 net.cpp:382] conv0 -> conv0
I0428 20:13:42.074650 32503 net.cpp:124] Setting up conv0
I0428 20:13:42.074692 32503 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:42.074697 32503 net.cpp:139] Memory required for data: 3887360
I0428 20:13:42.074710 32503 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:42.074723 32503 net.cpp:86] Creating Layer pool0
I0428 20:13:42.074726 32503 net.cpp:408] pool0 <- conv0
I0428 20:13:42.074731 32503 net.cpp:382] pool0 -> pool0
I0428 20:13:42.074790 32503 net.cpp:124] Setting up pool0
I0428 20:13:42.074796 32503 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:42.074800 32503 net.cpp:139] Memory required for data: 4808960
I0428 20:13:42.074802 32503 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:42.074813 32503 net.cpp:86] Creating Layer conv1
I0428 20:13:42.074816 32503 net.cpp:408] conv1 <- pool0
I0428 20:13:42.074821 32503 net.cpp:382] conv1 -> conv1
I0428 20:13:42.077055 32503 net.cpp:124] Setting up conv1
I0428 20:13:42.077080 32503 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:42.077083 32503 net.cpp:139] Memory required for data: 6447360
I0428 20:13:42.077107 32503 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:42.077114 32503 net.cpp:86] Creating Layer pool1
I0428 20:13:42.077118 32503 net.cpp:408] pool1 <- conv1
I0428 20:13:42.077123 32503 net.cpp:382] pool1 -> pool1
I0428 20:13:42.077172 32503 net.cpp:124] Setting up pool1
I0428 20:13:42.077178 32503 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:42.077181 32503 net.cpp:139] Memory required for data: 6856960
I0428 20:13:42.077184 32503 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:42.077191 32503 net.cpp:86] Creating Layer ip1
I0428 20:13:42.077194 32503 net.cpp:408] ip1 <- pool1
I0428 20:13:42.077199 32503 net.cpp:382] ip1 -> ip1
I0428 20:13:42.078605 32503 net.cpp:124] Setting up ip1
I0428 20:13:42.078619 32503 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:42.078637 32503 net.cpp:139] Memory required for data: 6869760
I0428 20:13:42.078645 32503 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:42.078652 32503 net.cpp:86] Creating Layer relu1
I0428 20:13:42.078655 32503 net.cpp:408] relu1 <- ip1
I0428 20:13:42.078660 32503 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:42.078821 32503 net.cpp:124] Setting up relu1
I0428 20:13:42.078830 32503 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:42.078833 32503 net.cpp:139] Memory required for data: 6882560
I0428 20:13:42.078836 32503 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:42.078843 32503 net.cpp:86] Creating Layer ip2
I0428 20:13:42.078845 32503 net.cpp:408] ip2 <- ip1
I0428 20:13:42.078850 32503 net.cpp:382] ip2 -> ip2
I0428 20:13:42.079895 32503 net.cpp:124] Setting up ip2
I0428 20:13:42.079906 32503 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:42.079910 32503 net.cpp:139] Memory required for data: 6888960
I0428 20:13:42.079916 32503 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:42.079922 32503 net.cpp:86] Creating Layer relu2
I0428 20:13:42.079926 32503 net.cpp:408] relu2 <- ip2
I0428 20:13:42.079931 32503 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:42.080631 32503 net.cpp:124] Setting up relu2
I0428 20:13:42.080642 32503 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:42.080646 32503 net.cpp:139] Memory required for data: 6895360
I0428 20:13:42.080651 32503 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:42.080658 32503 net.cpp:86] Creating Layer ip3
I0428 20:13:42.080662 32503 net.cpp:408] ip3 <- ip2
I0428 20:13:42.080667 32503 net.cpp:382] ip3 -> ip3
I0428 20:13:42.080760 32503 net.cpp:124] Setting up ip3
I0428 20:13:42.080767 32503 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:42.080770 32503 net.cpp:139] Memory required for data: 6897920
I0428 20:13:42.080777 32503 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:42.080782 32503 net.cpp:86] Creating Layer relu3
I0428 20:13:42.080785 32503 net.cpp:408] relu3 <- ip3
I0428 20:13:42.080790 32503 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:42.080996 32503 net.cpp:124] Setting up relu3
I0428 20:13:42.081004 32503 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:42.081008 32503 net.cpp:139] Memory required for data: 6900480
I0428 20:13:42.081012 32503 layer_factory.hpp:77] Creating layer loss
I0428 20:13:42.081017 32503 net.cpp:86] Creating Layer loss
I0428 20:13:42.081020 32503 net.cpp:408] loss <- ip3
I0428 20:13:42.081025 32503 net.cpp:408] loss <- label
I0428 20:13:42.081030 32503 net.cpp:382] loss -> loss
I0428 20:13:42.081048 32503 layer_factory.hpp:77] Creating layer loss
I0428 20:13:42.081296 32503 net.cpp:124] Setting up loss
I0428 20:13:42.081305 32503 net.cpp:131] Top shape: (1)
I0428 20:13:42.081308 32503 net.cpp:134]     with loss weight 1
I0428 20:13:42.081323 32503 net.cpp:139] Memory required for data: 6900484
I0428 20:13:42.081336 32503 net.cpp:200] loss needs backward computation.
I0428 20:13:42.081341 32503 net.cpp:200] relu3 needs backward computation.
I0428 20:13:42.081343 32503 net.cpp:200] ip3 needs backward computation.
I0428 20:13:42.081346 32503 net.cpp:200] relu2 needs backward computation.
I0428 20:13:42.081348 32503 net.cpp:200] ip2 needs backward computation.
I0428 20:13:42.081351 32503 net.cpp:200] relu1 needs backward computation.
I0428 20:13:42.081354 32503 net.cpp:200] ip1 needs backward computation.
I0428 20:13:42.081357 32503 net.cpp:200] pool1 needs backward computation.
I0428 20:13:42.081360 32503 net.cpp:200] conv1 needs backward computation.
I0428 20:13:42.081363 32503 net.cpp:200] pool0 needs backward computation.
I0428 20:13:42.081367 32503 net.cpp:200] conv0 needs backward computation.
I0428 20:13:42.081369 32503 net.cpp:202] mnist does not need backward computation.
I0428 20:13:42.081372 32503 net.cpp:244] This network produces output loss
I0428 20:13:42.081382 32503 net.cpp:257] Network initialization done.
I0428 20:13:42.081692 32503 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1204.prototxt
I0428 20:13:42.081718 32503 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:42.081805 32503 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:42.081882 32503 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:42.081925 32503 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:42.081938 32503 net.cpp:86] Creating Layer mnist
I0428 20:13:42.081941 32503 net.cpp:382] mnist -> data
I0428 20:13:42.081948 32503 net.cpp:382] mnist -> label
I0428 20:13:42.082027 32503 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:42.083155 32503 net.cpp:124] Setting up mnist
I0428 20:13:42.083168 32503 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:42.083173 32503 net.cpp:131] Top shape: 100 (100)
I0428 20:13:42.083176 32503 net.cpp:139] Memory required for data: 314000
I0428 20:13:42.083180 32503 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:42.083190 32503 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:42.083194 32503 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:42.083199 32503 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:42.083207 32503 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:42.083300 32503 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:42.083308 32503 net.cpp:131] Top shape: 100 (100)
I0428 20:13:42.083312 32503 net.cpp:131] Top shape: 100 (100)
I0428 20:13:42.083315 32503 net.cpp:139] Memory required for data: 314800
I0428 20:13:42.083318 32503 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:42.083326 32503 net.cpp:86] Creating Layer conv0
I0428 20:13:42.083329 32503 net.cpp:408] conv0 <- data
I0428 20:13:42.083334 32503 net.cpp:382] conv0 -> conv0
I0428 20:13:42.084995 32503 net.cpp:124] Setting up conv0
I0428 20:13:42.085024 32503 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:42.085028 32503 net.cpp:139] Memory required for data: 6074800
I0428 20:13:42.085036 32503 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:42.085058 32503 net.cpp:86] Creating Layer pool0
I0428 20:13:42.085062 32503 net.cpp:408] pool0 <- conv0
I0428 20:13:42.085067 32503 net.cpp:382] pool0 -> pool0
I0428 20:13:42.085103 32503 net.cpp:124] Setting up pool0
I0428 20:13:42.085108 32503 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:42.085111 32503 net.cpp:139] Memory required for data: 7514800
I0428 20:13:42.085114 32503 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:42.085124 32503 net.cpp:86] Creating Layer conv1
I0428 20:13:42.085126 32503 net.cpp:408] conv1 <- pool0
I0428 20:13:42.085130 32503 net.cpp:382] conv1 -> conv1
I0428 20:13:42.087054 32503 net.cpp:124] Setting up conv1
I0428 20:13:42.087069 32503 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:42.087072 32503 net.cpp:139] Memory required for data: 10074800
I0428 20:13:42.087081 32503 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:42.087087 32503 net.cpp:86] Creating Layer pool1
I0428 20:13:42.087092 32503 net.cpp:408] pool1 <- conv1
I0428 20:13:42.087097 32503 net.cpp:382] pool1 -> pool1
I0428 20:13:42.087134 32503 net.cpp:124] Setting up pool1
I0428 20:13:42.087141 32503 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:42.087146 32503 net.cpp:139] Memory required for data: 10714800
I0428 20:13:42.087148 32503 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:42.087154 32503 net.cpp:86] Creating Layer ip1
I0428 20:13:42.087157 32503 net.cpp:408] ip1 <- pool1
I0428 20:13:42.087162 32503 net.cpp:382] ip1 -> ip1
I0428 20:13:42.087723 32503 net.cpp:124] Setting up ip1
I0428 20:13:42.087731 32503 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:42.087744 32503 net.cpp:139] Memory required for data: 10734800
I0428 20:13:42.087752 32503 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:42.087757 32503 net.cpp:86] Creating Layer relu1
I0428 20:13:42.087760 32503 net.cpp:408] relu1 <- ip1
I0428 20:13:42.087764 32503 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:42.087971 32503 net.cpp:124] Setting up relu1
I0428 20:13:42.087981 32503 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:42.087985 32503 net.cpp:139] Memory required for data: 10754800
I0428 20:13:42.087988 32503 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:42.087996 32503 net.cpp:86] Creating Layer ip2
I0428 20:13:42.087999 32503 net.cpp:408] ip2 <- ip1
I0428 20:13:42.088006 32503 net.cpp:382] ip2 -> ip2
I0428 20:13:42.088116 32503 net.cpp:124] Setting up ip2
I0428 20:13:42.088124 32503 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:42.088129 32503 net.cpp:139] Memory required for data: 10764800
I0428 20:13:42.088135 32503 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:42.088138 32503 net.cpp:86] Creating Layer relu2
I0428 20:13:42.088142 32503 net.cpp:408] relu2 <- ip2
I0428 20:13:42.088147 32503 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:42.088330 32503 net.cpp:124] Setting up relu2
I0428 20:13:42.088338 32503 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:42.088341 32503 net.cpp:139] Memory required for data: 10774800
I0428 20:13:42.088346 32503 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:42.088351 32503 net.cpp:86] Creating Layer ip3
I0428 20:13:42.088354 32503 net.cpp:408] ip3 <- ip2
I0428 20:13:42.088358 32503 net.cpp:382] ip3 -> ip3
I0428 20:13:42.088448 32503 net.cpp:124] Setting up ip3
I0428 20:13:42.088454 32503 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:42.088457 32503 net.cpp:139] Memory required for data: 10778800
I0428 20:13:42.088464 32503 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:42.088469 32503 net.cpp:86] Creating Layer relu3
I0428 20:13:42.088472 32503 net.cpp:408] relu3 <- ip3
I0428 20:13:42.088476 32503 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:42.089272 32503 net.cpp:124] Setting up relu3
I0428 20:13:42.089285 32503 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:42.089292 32503 net.cpp:139] Memory required for data: 10782800
I0428 20:13:42.089294 32503 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:42.089300 32503 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:42.089303 32503 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:42.089308 32503 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:42.089315 32503 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:42.089357 32503 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:42.089365 32503 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:42.089370 32503 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:42.089372 32503 net.cpp:139] Memory required for data: 10790800
I0428 20:13:42.089375 32503 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:42.089380 32503 net.cpp:86] Creating Layer accuracy
I0428 20:13:42.089383 32503 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:42.089388 32503 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:42.089392 32503 net.cpp:382] accuracy -> accuracy
I0428 20:13:42.089399 32503 net.cpp:124] Setting up accuracy
I0428 20:13:42.089403 32503 net.cpp:131] Top shape: (1)
I0428 20:13:42.089406 32503 net.cpp:139] Memory required for data: 10790804
I0428 20:13:42.089409 32503 layer_factory.hpp:77] Creating layer loss
I0428 20:13:42.089413 32503 net.cpp:86] Creating Layer loss
I0428 20:13:42.089416 32503 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:42.089421 32503 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:42.089424 32503 net.cpp:382] loss -> loss
I0428 20:13:42.089431 32503 layer_factory.hpp:77] Creating layer loss
I0428 20:13:42.089687 32503 net.cpp:124] Setting up loss
I0428 20:13:42.089697 32503 net.cpp:131] Top shape: (1)
I0428 20:13:42.089700 32503 net.cpp:134]     with loss weight 1
I0428 20:13:42.089716 32503 net.cpp:139] Memory required for data: 10790808
I0428 20:13:42.089720 32503 net.cpp:200] loss needs backward computation.
I0428 20:13:42.089725 32503 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:42.089730 32503 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:42.089732 32503 net.cpp:200] relu3 needs backward computation.
I0428 20:13:42.089735 32503 net.cpp:200] ip3 needs backward computation.
I0428 20:13:42.089745 32503 net.cpp:200] relu2 needs backward computation.
I0428 20:13:42.089748 32503 net.cpp:200] ip2 needs backward computation.
I0428 20:13:42.089751 32503 net.cpp:200] relu1 needs backward computation.
I0428 20:13:42.089754 32503 net.cpp:200] ip1 needs backward computation.
I0428 20:13:42.089757 32503 net.cpp:200] pool1 needs backward computation.
I0428 20:13:42.089761 32503 net.cpp:200] conv1 needs backward computation.
I0428 20:13:42.089764 32503 net.cpp:200] pool0 needs backward computation.
I0428 20:13:42.089766 32503 net.cpp:200] conv0 needs backward computation.
I0428 20:13:42.089771 32503 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:42.089776 32503 net.cpp:202] mnist does not need backward computation.
I0428 20:13:42.089779 32503 net.cpp:244] This network produces output accuracy
I0428 20:13:42.089782 32503 net.cpp:244] This network produces output loss
I0428 20:13:42.089792 32503 net.cpp:257] Network initialization done.
I0428 20:13:42.089831 32503 solver.cpp:56] Solver scaffolding done.
I0428 20:13:42.090142 32503 caffe.cpp:248] Starting Optimization
I0428 20:13:42.090149 32503 solver.cpp:273] Solving LeNet
I0428 20:13:42.090152 32503 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:42.091030 32503 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:42.098282 32503 blocking_queue.cpp:49] Waiting for data
I0428 20:13:42.168489 32510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:42.169400 32503 solver.cpp:398]     Test net output #0: accuracy = 0.0809
I0428 20:13:42.169420 32503 solver.cpp:398]     Test net output #1: loss = 2.32131 (* 1 = 2.32131 loss)
I0428 20:13:42.174202 32503 solver.cpp:219] Iteration 0 (-6.46583e-31 iter/s, 0.0840253s/100 iters), loss = 2.32401
I0428 20:13:42.174226 32503 solver.cpp:238]     Train net output #0: loss = 2.32401 (* 1 = 2.32401 loss)
I0428 20:13:42.174253 32503 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:42.344137 32503 solver.cpp:219] Iteration 100 (588.589 iter/s, 0.169898s/100 iters), loss = 1.57401
I0428 20:13:42.344163 32503 solver.cpp:238]     Train net output #0: loss = 1.57401 (* 1 = 1.57401 loss)
I0428 20:13:42.344169 32503 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:42.506234 32503 solver.cpp:219] Iteration 200 (617.077 iter/s, 0.162054s/100 iters), loss = 1.55684
I0428 20:13:42.506268 32503 solver.cpp:238]     Train net output #0: loss = 1.55684 (* 1 = 1.55684 loss)
I0428 20:13:42.506275 32503 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:42.668417 32503 solver.cpp:219] Iteration 300 (616.77 iter/s, 0.162135s/100 iters), loss = 1.54195
I0428 20:13:42.668440 32503 solver.cpp:238]     Train net output #0: loss = 1.54195 (* 1 = 1.54195 loss)
I0428 20:13:42.668447 32503 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:42.834462 32503 solver.cpp:219] Iteration 400 (602.381 iter/s, 0.166008s/100 iters), loss = 1.37211
I0428 20:13:42.834487 32503 solver.cpp:238]     Train net output #0: loss = 1.37211 (* 1 = 1.37211 loss)
I0428 20:13:42.834493 32503 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:42.998337 32503 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:43.072881 32510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:43.073829 32503 solver.cpp:398]     Test net output #0: accuracy = 0.4852
I0428 20:13:43.073865 32503 solver.cpp:398]     Test net output #1: loss = 1.44866 (* 1 = 1.44866 loss)
I0428 20:13:43.075863 32503 solver.cpp:219] Iteration 500 (414.323 iter/s, 0.241358s/100 iters), loss = 1.40469
I0428 20:13:43.075901 32503 solver.cpp:238]     Train net output #0: loss = 1.40469 (* 1 = 1.40469 loss)
I0428 20:13:43.075923 32503 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:43.244127 32503 solver.cpp:219] Iteration 600 (594.483 iter/s, 0.168214s/100 iters), loss = 1.39452
I0428 20:13:43.244150 32503 solver.cpp:238]     Train net output #0: loss = 1.39452 (* 1 = 1.39452 loss)
I0428 20:13:43.244156 32503 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:43.408093 32503 solver.cpp:219] Iteration 700 (610.02 iter/s, 0.163929s/100 iters), loss = 1.61905
I0428 20:13:43.408121 32503 solver.cpp:238]     Train net output #0: loss = 1.61905 (* 1 = 1.61905 loss)
I0428 20:13:43.408143 32503 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:43.572415 32503 solver.cpp:219] Iteration 800 (608.712 iter/s, 0.164281s/100 iters), loss = 1.55726
I0428 20:13:43.572441 32503 solver.cpp:238]     Train net output #0: loss = 1.55726 (* 1 = 1.55726 loss)
I0428 20:13:43.572448 32503 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:43.736953 32503 solver.cpp:219] Iteration 900 (607.912 iter/s, 0.164497s/100 iters), loss = 1.5406
I0428 20:13:43.736980 32503 solver.cpp:238]     Train net output #0: loss = 1.5406 (* 1 = 1.5406 loss)
I0428 20:13:43.737004 32503 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:43.791483 32509 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:43.899626 32503 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:43.902611 32503 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:43.904253 32503 solver.cpp:311] Iteration 1000, loss = 1.60867
I0428 20:13:43.904268 32503 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:43.981580 32510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:43.982548 32503 solver.cpp:398]     Test net output #0: accuracy = 0.4865
I0428 20:13:43.982569 32503 solver.cpp:398]     Test net output #1: loss = 1.42496 (* 1 = 1.42496 loss)
I0428 20:13:43.982575 32503 solver.cpp:316] Optimization Done.
I0428 20:13:43.982579 32503 caffe.cpp:259] Optimization Done.
