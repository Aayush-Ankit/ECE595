I0428 20:25:50.314656  2691 caffe.cpp:218] Using GPUs 0
I0428 20:25:50.353404  2691 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:25:50.863507  2691 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1461.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:25:50.863652  2691 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1461.prototxt
I0428 20:25:50.864073  2691 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:25:50.864092  2691 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:25:50.864195  2691 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:50.864274  2691 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:50.864372  2691 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:25:50.864398  2691 net.cpp:86] Creating Layer mnist
I0428 20:25:50.864404  2691 net.cpp:382] mnist -> data
I0428 20:25:50.864428  2691 net.cpp:382] mnist -> label
I0428 20:25:50.865530  2691 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:25:50.868197  2691 net.cpp:124] Setting up mnist
I0428 20:25:50.868216  2691 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:25:50.868224  2691 net.cpp:131] Top shape: 64 (64)
I0428 20:25:50.868228  2691 net.cpp:139] Memory required for data: 200960
I0428 20:25:50.868235  2691 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:50.868250  2691 net.cpp:86] Creating Layer conv0
I0428 20:25:50.868271  2691 net.cpp:408] conv0 <- data
I0428 20:25:50.868285  2691 net.cpp:382] conv0 -> conv0
I0428 20:25:51.132076  2691 net.cpp:124] Setting up conv0
I0428 20:25:51.132102  2691 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:25:51.132105  2691 net.cpp:139] Memory required for data: 14946560
I0428 20:25:51.132119  2691 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:51.132131  2691 net.cpp:86] Creating Layer pool0
I0428 20:25:51.132134  2691 net.cpp:408] pool0 <- conv0
I0428 20:25:51.132139  2691 net.cpp:382] pool0 -> pool0
I0428 20:25:51.132200  2691 net.cpp:124] Setting up pool0
I0428 20:25:51.132205  2691 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:25:51.132207  2691 net.cpp:139] Memory required for data: 18632960
I0428 20:25:51.132210  2691 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:51.132220  2691 net.cpp:86] Creating Layer conv1
I0428 20:25:51.132223  2691 net.cpp:408] conv1 <- pool0
I0428 20:25:51.132227  2691 net.cpp:382] conv1 -> conv1
I0428 20:25:51.134997  2691 net.cpp:124] Setting up conv1
I0428 20:25:51.135011  2691 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:25:51.135016  2691 net.cpp:139] Memory required for data: 18665728
I0428 20:25:51.135025  2691 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:51.135032  2691 net.cpp:86] Creating Layer pool1
I0428 20:25:51.135035  2691 net.cpp:408] pool1 <- conv1
I0428 20:25:51.135040  2691 net.cpp:382] pool1 -> pool1
I0428 20:25:51.135076  2691 net.cpp:124] Setting up pool1
I0428 20:25:51.135080  2691 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:25:51.135083  2691 net.cpp:139] Memory required for data: 18673920
I0428 20:25:51.135087  2691 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:51.135093  2691 net.cpp:86] Creating Layer ip1
I0428 20:25:51.135097  2691 net.cpp:408] ip1 <- pool1
I0428 20:25:51.135100  2691 net.cpp:382] ip1 -> ip1
I0428 20:25:51.135190  2691 net.cpp:124] Setting up ip1
I0428 20:25:51.135212  2691 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:51.135215  2691 net.cpp:139] Memory required for data: 18676480
I0428 20:25:51.135221  2691 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:51.135227  2691 net.cpp:86] Creating Layer relu1
I0428 20:25:51.135231  2691 net.cpp:408] relu1 <- ip1
I0428 20:25:51.135234  2691 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:51.135390  2691 net.cpp:124] Setting up relu1
I0428 20:25:51.135397  2691 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:51.135401  2691 net.cpp:139] Memory required for data: 18679040
I0428 20:25:51.135403  2691 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:51.135409  2691 net.cpp:86] Creating Layer ip2
I0428 20:25:51.135411  2691 net.cpp:408] ip2 <- ip1
I0428 20:25:51.135416  2691 net.cpp:382] ip2 -> ip2
I0428 20:25:51.135507  2691 net.cpp:124] Setting up ip2
I0428 20:25:51.135514  2691 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:25:51.135517  2691 net.cpp:139] Memory required for data: 18691840
I0428 20:25:51.135522  2691 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:51.135529  2691 net.cpp:86] Creating Layer relu2
I0428 20:25:51.135531  2691 net.cpp:408] relu2 <- ip2
I0428 20:25:51.135535  2691 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:51.136200  2691 net.cpp:124] Setting up relu2
I0428 20:25:51.136212  2691 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:25:51.136215  2691 net.cpp:139] Memory required for data: 18704640
I0428 20:25:51.136219  2691 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:51.136225  2691 net.cpp:86] Creating Layer ip3
I0428 20:25:51.136229  2691 net.cpp:408] ip3 <- ip2
I0428 20:25:51.136234  2691 net.cpp:382] ip3 -> ip3
I0428 20:25:51.136327  2691 net.cpp:124] Setting up ip3
I0428 20:25:51.136334  2691 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:51.136337  2691 net.cpp:139] Memory required for data: 18707200
I0428 20:25:51.136344  2691 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:51.136348  2691 net.cpp:86] Creating Layer relu3
I0428 20:25:51.136351  2691 net.cpp:408] relu3 <- ip3
I0428 20:25:51.136355  2691 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:51.136505  2691 net.cpp:124] Setting up relu3
I0428 20:25:51.136513  2691 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:51.136517  2691 net.cpp:139] Memory required for data: 18709760
I0428 20:25:51.136519  2691 layer_factory.hpp:77] Creating layer loss
I0428 20:25:51.136529  2691 net.cpp:86] Creating Layer loss
I0428 20:25:51.136533  2691 net.cpp:408] loss <- ip3
I0428 20:25:51.136536  2691 net.cpp:408] loss <- label
I0428 20:25:51.136541  2691 net.cpp:382] loss -> loss
I0428 20:25:51.136554  2691 layer_factory.hpp:77] Creating layer loss
I0428 20:25:51.136801  2691 net.cpp:124] Setting up loss
I0428 20:25:51.136832  2691 net.cpp:131] Top shape: (1)
I0428 20:25:51.136837  2691 net.cpp:134]     with loss weight 1
I0428 20:25:51.136850  2691 net.cpp:139] Memory required for data: 18709764
I0428 20:25:51.136853  2691 net.cpp:200] loss needs backward computation.
I0428 20:25:51.136857  2691 net.cpp:200] relu3 needs backward computation.
I0428 20:25:51.136860  2691 net.cpp:200] ip3 needs backward computation.
I0428 20:25:51.136862  2691 net.cpp:200] relu2 needs backward computation.
I0428 20:25:51.136865  2691 net.cpp:200] ip2 needs backward computation.
I0428 20:25:51.136884  2691 net.cpp:200] relu1 needs backward computation.
I0428 20:25:51.136886  2691 net.cpp:200] ip1 needs backward computation.
I0428 20:25:51.136889  2691 net.cpp:200] pool1 needs backward computation.
I0428 20:25:51.136893  2691 net.cpp:200] conv1 needs backward computation.
I0428 20:25:51.136896  2691 net.cpp:200] pool0 needs backward computation.
I0428 20:25:51.136899  2691 net.cpp:200] conv0 needs backward computation.
I0428 20:25:51.136919  2691 net.cpp:202] mnist does not need backward computation.
I0428 20:25:51.136921  2691 net.cpp:244] This network produces output loss
I0428 20:25:51.136936  2691 net.cpp:257] Network initialization done.
I0428 20:25:51.137310  2691 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1461.prototxt
I0428 20:25:51.137336  2691 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:25:51.137423  2691 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:51.137503  2691 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:51.137545  2691 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:25:51.137557  2691 net.cpp:86] Creating Layer mnist
I0428 20:25:51.137562  2691 net.cpp:382] mnist -> data
I0428 20:25:51.137569  2691 net.cpp:382] mnist -> label
I0428 20:25:51.137652  2691 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:25:51.139634  2691 net.cpp:124] Setting up mnist
I0428 20:25:51.139663  2691 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:25:51.139669  2691 net.cpp:131] Top shape: 100 (100)
I0428 20:25:51.139672  2691 net.cpp:139] Memory required for data: 314000
I0428 20:25:51.139675  2691 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:25:51.139683  2691 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:25:51.139685  2691 net.cpp:408] label_mnist_1_split <- label
I0428 20:25:51.139709  2691 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:25:51.139716  2691 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:25:51.139806  2691 net.cpp:124] Setting up label_mnist_1_split
I0428 20:25:51.139814  2691 net.cpp:131] Top shape: 100 (100)
I0428 20:25:51.139818  2691 net.cpp:131] Top shape: 100 (100)
I0428 20:25:51.139822  2691 net.cpp:139] Memory required for data: 314800
I0428 20:25:51.139824  2691 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:51.139834  2691 net.cpp:86] Creating Layer conv0
I0428 20:25:51.139837  2691 net.cpp:408] conv0 <- data
I0428 20:25:51.139858  2691 net.cpp:382] conv0 -> conv0
I0428 20:25:51.141688  2691 net.cpp:124] Setting up conv0
I0428 20:25:51.141701  2691 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:25:51.141705  2691 net.cpp:139] Memory required for data: 23354800
I0428 20:25:51.141713  2691 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:51.141719  2691 net.cpp:86] Creating Layer pool0
I0428 20:25:51.141723  2691 net.cpp:408] pool0 <- conv0
I0428 20:25:51.141742  2691 net.cpp:382] pool0 -> pool0
I0428 20:25:51.141783  2691 net.cpp:124] Setting up pool0
I0428 20:25:51.141789  2691 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:25:51.141793  2691 net.cpp:139] Memory required for data: 29114800
I0428 20:25:51.141795  2691 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:51.141803  2691 net.cpp:86] Creating Layer conv1
I0428 20:25:51.141806  2691 net.cpp:408] conv1 <- pool0
I0428 20:25:51.141811  2691 net.cpp:382] conv1 -> conv1
I0428 20:25:51.143426  2691 net.cpp:124] Setting up conv1
I0428 20:25:51.143440  2691 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:25:51.143460  2691 net.cpp:139] Memory required for data: 29166000
I0428 20:25:51.143468  2691 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:51.143476  2691 net.cpp:86] Creating Layer pool1
I0428 20:25:51.143479  2691 net.cpp:408] pool1 <- conv1
I0428 20:25:51.143484  2691 net.cpp:382] pool1 -> pool1
I0428 20:25:51.143524  2691 net.cpp:124] Setting up pool1
I0428 20:25:51.143529  2691 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:25:51.143532  2691 net.cpp:139] Memory required for data: 29178800
I0428 20:25:51.143535  2691 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:51.143542  2691 net.cpp:86] Creating Layer ip1
I0428 20:25:51.143544  2691 net.cpp:408] ip1 <- pool1
I0428 20:25:51.143550  2691 net.cpp:382] ip1 -> ip1
I0428 20:25:51.143646  2691 net.cpp:124] Setting up ip1
I0428 20:25:51.143654  2691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:51.143667  2691 net.cpp:139] Memory required for data: 29182800
I0428 20:25:51.143676  2691 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:51.143681  2691 net.cpp:86] Creating Layer relu1
I0428 20:25:51.143700  2691 net.cpp:408] relu1 <- ip1
I0428 20:25:51.143705  2691 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:51.143888  2691 net.cpp:124] Setting up relu1
I0428 20:25:51.143898  2691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:51.143901  2691 net.cpp:139] Memory required for data: 29186800
I0428 20:25:51.143905  2691 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:51.143913  2691 net.cpp:86] Creating Layer ip2
I0428 20:25:51.143916  2691 net.cpp:408] ip2 <- ip1
I0428 20:25:51.143923  2691 net.cpp:382] ip2 -> ip2
I0428 20:25:51.144032  2691 net.cpp:124] Setting up ip2
I0428 20:25:51.144039  2691 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:25:51.144057  2691 net.cpp:139] Memory required for data: 29206800
I0428 20:25:51.144062  2691 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:51.144069  2691 net.cpp:86] Creating Layer relu2
I0428 20:25:51.144073  2691 net.cpp:408] relu2 <- ip2
I0428 20:25:51.144075  2691 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:51.144349  2691 net.cpp:124] Setting up relu2
I0428 20:25:51.144358  2691 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:25:51.144363  2691 net.cpp:139] Memory required for data: 29226800
I0428 20:25:51.144366  2691 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:51.144371  2691 net.cpp:86] Creating Layer ip3
I0428 20:25:51.144374  2691 net.cpp:408] ip3 <- ip2
I0428 20:25:51.144381  2691 net.cpp:382] ip3 -> ip3
I0428 20:25:51.144495  2691 net.cpp:124] Setting up ip3
I0428 20:25:51.144501  2691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:51.144505  2691 net.cpp:139] Memory required for data: 29230800
I0428 20:25:51.144511  2691 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:51.144516  2691 net.cpp:86] Creating Layer relu3
I0428 20:25:51.144520  2691 net.cpp:408] relu3 <- ip3
I0428 20:25:51.144523  2691 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:51.145474  2691 net.cpp:124] Setting up relu3
I0428 20:25:51.145488  2691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:51.145501  2691 net.cpp:139] Memory required for data: 29234800
I0428 20:25:51.145504  2691 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:25:51.145510  2691 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:25:51.145514  2691 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:25:51.145519  2691 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:25:51.145526  2691 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:25:51.145565  2691 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:25:51.145573  2691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:51.145576  2691 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:51.145579  2691 net.cpp:139] Memory required for data: 29242800
I0428 20:25:51.145582  2691 layer_factory.hpp:77] Creating layer accuracy
I0428 20:25:51.145588  2691 net.cpp:86] Creating Layer accuracy
I0428 20:25:51.145593  2691 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:25:51.145597  2691 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:25:51.145601  2691 net.cpp:382] accuracy -> accuracy
I0428 20:25:51.145608  2691 net.cpp:124] Setting up accuracy
I0428 20:25:51.145613  2691 net.cpp:131] Top shape: (1)
I0428 20:25:51.145617  2691 net.cpp:139] Memory required for data: 29242804
I0428 20:25:51.145618  2691 layer_factory.hpp:77] Creating layer loss
I0428 20:25:51.145624  2691 net.cpp:86] Creating Layer loss
I0428 20:25:51.145627  2691 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:25:51.145632  2691 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:25:51.145635  2691 net.cpp:382] loss -> loss
I0428 20:25:51.145640  2691 layer_factory.hpp:77] Creating layer loss
I0428 20:25:51.145891  2691 net.cpp:124] Setting up loss
I0428 20:25:51.145901  2691 net.cpp:131] Top shape: (1)
I0428 20:25:51.145905  2691 net.cpp:134]     with loss weight 1
I0428 20:25:51.145920  2691 net.cpp:139] Memory required for data: 29242808
I0428 20:25:51.145923  2691 net.cpp:200] loss needs backward computation.
I0428 20:25:51.145932  2691 net.cpp:202] accuracy does not need backward computation.
I0428 20:25:51.145936  2691 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:25:51.145939  2691 net.cpp:200] relu3 needs backward computation.
I0428 20:25:51.145942  2691 net.cpp:200] ip3 needs backward computation.
I0428 20:25:51.145946  2691 net.cpp:200] relu2 needs backward computation.
I0428 20:25:51.145948  2691 net.cpp:200] ip2 needs backward computation.
I0428 20:25:51.145951  2691 net.cpp:200] relu1 needs backward computation.
I0428 20:25:51.145953  2691 net.cpp:200] ip1 needs backward computation.
I0428 20:25:51.145956  2691 net.cpp:200] pool1 needs backward computation.
I0428 20:25:51.145959  2691 net.cpp:200] conv1 needs backward computation.
I0428 20:25:51.145963  2691 net.cpp:200] pool0 needs backward computation.
I0428 20:25:51.145967  2691 net.cpp:200] conv0 needs backward computation.
I0428 20:25:51.145970  2691 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:25:51.145973  2691 net.cpp:202] mnist does not need backward computation.
I0428 20:25:51.145977  2691 net.cpp:244] This network produces output accuracy
I0428 20:25:51.145987  2691 net.cpp:244] This network produces output loss
I0428 20:25:51.145997  2691 net.cpp:257] Network initialization done.
I0428 20:25:51.146037  2691 solver.cpp:56] Solver scaffolding done.
I0428 20:25:51.146450  2691 caffe.cpp:248] Starting Optimization
I0428 20:25:51.146456  2691 solver.cpp:273] Solving LeNet
I0428 20:25:51.146458  2691 solver.cpp:274] Learning Rate Policy: inv
I0428 20:25:51.147356  2691 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:25:51.242506  2707 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:51.244027  2691 solver.cpp:398]     Test net output #0: accuracy = 0.096
I0428 20:25:51.244062  2691 solver.cpp:398]     Test net output #1: loss = 2.3011 (* 1 = 2.3011 loss)
I0428 20:25:51.248816  2691 solver.cpp:219] Iteration 0 (0 iter/s, 0.102309s/100 iters), loss = 2.30465
I0428 20:25:51.248855  2691 solver.cpp:238]     Train net output #0: loss = 2.30465 (* 1 = 2.30465 loss)
I0428 20:25:51.248867  2691 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:25:51.458163  2691 solver.cpp:219] Iteration 100 (477.829 iter/s, 0.20928s/100 iters), loss = 0.70591
I0428 20:25:51.458219  2691 solver.cpp:238]     Train net output #0: loss = 0.70591 (* 1 = 0.70591 loss)
I0428 20:25:51.458232  2691 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:25:51.675954  2691 solver.cpp:219] Iteration 200 (459.314 iter/s, 0.217716s/100 iters), loss = 0.692213
I0428 20:25:51.676017  2691 solver.cpp:238]     Train net output #0: loss = 0.692213 (* 1 = 0.692213 loss)
I0428 20:25:51.676031  2691 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:25:51.891795  2691 solver.cpp:219] Iteration 300 (463.469 iter/s, 0.215764s/100 iters), loss = 0.615995
I0428 20:25:51.891845  2691 solver.cpp:238]     Train net output #0: loss = 0.615995 (* 1 = 0.615995 loss)
I0428 20:25:51.891857  2691 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:25:52.108698  2691 solver.cpp:219] Iteration 400 (461.173 iter/s, 0.216838s/100 iters), loss = 0.535515
I0428 20:25:52.108742  2691 solver.cpp:238]     Train net output #0: loss = 0.535515 (* 1 = 0.535515 loss)
I0428 20:25:52.108753  2691 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:25:52.321074  2691 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:25:52.423503  2707 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:52.426301  2691 solver.cpp:398]     Test net output #0: accuracy = 0.8379
I0428 20:25:52.426331  2691 solver.cpp:398]     Test net output #1: loss = 0.468015 (* 1 = 0.468015 loss)
I0428 20:25:52.428247  2691 solver.cpp:219] Iteration 500 (313.002 iter/s, 0.319487s/100 iters), loss = 0.475418
I0428 20:25:52.428274  2691 solver.cpp:238]     Train net output #0: loss = 0.475418 (* 1 = 0.475418 loss)
I0428 20:25:52.428299  2691 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:25:52.640982  2691 solver.cpp:219] Iteration 600 (470.168 iter/s, 0.21269s/100 iters), loss = 0.47748
I0428 20:25:52.641019  2691 solver.cpp:238]     Train net output #0: loss = 0.47748 (* 1 = 0.47748 loss)
I0428 20:25:52.641029  2691 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:52.853799  2691 solver.cpp:219] Iteration 700 (470.007 iter/s, 0.212763s/100 iters), loss = 0.515618
I0428 20:25:52.853839  2691 solver.cpp:238]     Train net output #0: loss = 0.515618 (* 1 = 0.515618 loss)
I0428 20:25:52.853849  2691 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:25:53.067239  2691 solver.cpp:219] Iteration 800 (468.643 iter/s, 0.213382s/100 iters), loss = 0.553843
I0428 20:25:53.067293  2691 solver.cpp:238]     Train net output #0: loss = 0.553843 (* 1 = 0.553843 loss)
I0428 20:25:53.067306  2691 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:25:53.275018  2691 solver.cpp:219] Iteration 900 (481.412 iter/s, 0.207722s/100 iters), loss = 0.608327
I0428 20:25:53.275053  2691 solver.cpp:238]     Train net output #0: loss = 0.608327 (* 1 = 0.608327 loss)
I0428 20:25:53.275060  2691 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:25:53.343706  2703 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:53.476519  2691 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:25:53.478083  2691 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:25:53.479074  2691 solver.cpp:311] Iteration 1000, loss = 0.489471
I0428 20:25:53.479091  2691 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:25:53.576225  2707 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:53.579095  2691 solver.cpp:398]     Test net output #0: accuracy = 0.8581
I0428 20:25:53.579118  2691 solver.cpp:398]     Test net output #1: loss = 0.392317 (* 1 = 0.392317 loss)
I0428 20:25:53.579139  2691 solver.cpp:316] Optimization Done.
I0428 20:25:53.579145  2691 caffe.cpp:259] Optimization Done.
