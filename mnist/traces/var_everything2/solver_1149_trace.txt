I0428 20:11:01.902169 31990 caffe.cpp:218] Using GPUs 0
I0428 20:11:01.927610 31990 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:02.372846 31990 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1149.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:02.373013 31990 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1149.prototxt
I0428 20:11:02.373364 31990 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:02.373394 31990 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:02.373522 31990 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:02.373587 31990 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:02.373673 31990 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:02.373692 31990 net.cpp:86] Creating Layer mnist
I0428 20:11:02.373699 31990 net.cpp:382] mnist -> data
I0428 20:11:02.373718 31990 net.cpp:382] mnist -> label
I0428 20:11:02.374619 31990 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:02.376796 31990 net.cpp:124] Setting up mnist
I0428 20:11:02.376847 31990 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:02.376868 31990 net.cpp:131] Top shape: 64 (64)
I0428 20:11:02.376870 31990 net.cpp:139] Memory required for data: 200960
I0428 20:11:02.376891 31990 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:02.376935 31990 net.cpp:86] Creating Layer conv0
I0428 20:11:02.376955 31990 net.cpp:408] conv0 <- data
I0428 20:11:02.376968 31990 net.cpp:382] conv0 -> conv0
I0428 20:11:02.607604 31990 net.cpp:124] Setting up conv0
I0428 20:11:02.607628 31990 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:02.607632 31990 net.cpp:139] Memory required for data: 3887360
I0428 20:11:02.607646 31990 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:02.607658 31990 net.cpp:86] Creating Layer pool0
I0428 20:11:02.607662 31990 net.cpp:408] pool0 <- conv0
I0428 20:11:02.607667 31990 net.cpp:382] pool0 -> pool0
I0428 20:11:02.607739 31990 net.cpp:124] Setting up pool0
I0428 20:11:02.607744 31990 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:02.607748 31990 net.cpp:139] Memory required for data: 4808960
I0428 20:11:02.607750 31990 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:02.607761 31990 net.cpp:86] Creating Layer conv1
I0428 20:11:02.607764 31990 net.cpp:408] conv1 <- pool0
I0428 20:11:02.607769 31990 net.cpp:382] conv1 -> conv1
I0428 20:11:02.609736 31990 net.cpp:124] Setting up conv1
I0428 20:11:02.609766 31990 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:02.609771 31990 net.cpp:139] Memory required for data: 5628160
I0428 20:11:02.609778 31990 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:02.609786 31990 net.cpp:86] Creating Layer pool1
I0428 20:11:02.609789 31990 net.cpp:408] pool1 <- conv1
I0428 20:11:02.609794 31990 net.cpp:382] pool1 -> pool1
I0428 20:11:02.609829 31990 net.cpp:124] Setting up pool1
I0428 20:11:02.609834 31990 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:02.609838 31990 net.cpp:139] Memory required for data: 5832960
I0428 20:11:02.609840 31990 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:02.609846 31990 net.cpp:86] Creating Layer ip1
I0428 20:11:02.609849 31990 net.cpp:408] ip1 <- pool1
I0428 20:11:02.609854 31990 net.cpp:382] ip1 -> ip1
I0428 20:11:02.610869 31990 net.cpp:124] Setting up ip1
I0428 20:11:02.610882 31990 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:02.610899 31990 net.cpp:139] Memory required for data: 5835520
I0428 20:11:02.610908 31990 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:02.610913 31990 net.cpp:86] Creating Layer relu1
I0428 20:11:02.610916 31990 net.cpp:408] relu1 <- ip1
I0428 20:11:02.610921 31990 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:02.611100 31990 net.cpp:124] Setting up relu1
I0428 20:11:02.611109 31990 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:02.611112 31990 net.cpp:139] Memory required for data: 5838080
I0428 20:11:02.611115 31990 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:02.611122 31990 net.cpp:86] Creating Layer ip2
I0428 20:11:02.611125 31990 net.cpp:408] ip2 <- ip1
I0428 20:11:02.611130 31990 net.cpp:382] ip2 -> ip2
I0428 20:11:02.611225 31990 net.cpp:124] Setting up ip2
I0428 20:11:02.611232 31990 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:02.611235 31990 net.cpp:139] Memory required for data: 5850880
I0428 20:11:02.611240 31990 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:02.611246 31990 net.cpp:86] Creating Layer relu2
I0428 20:11:02.611249 31990 net.cpp:408] relu2 <- ip2
I0428 20:11:02.611253 31990 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:02.611966 31990 net.cpp:124] Setting up relu2
I0428 20:11:02.611979 31990 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:02.611996 31990 net.cpp:139] Memory required for data: 5863680
I0428 20:11:02.612000 31990 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:02.612006 31990 net.cpp:86] Creating Layer ip3
I0428 20:11:02.612010 31990 net.cpp:408] ip3 <- ip2
I0428 20:11:02.612015 31990 net.cpp:382] ip3 -> ip3
I0428 20:11:02.612109 31990 net.cpp:124] Setting up ip3
I0428 20:11:02.612133 31990 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:02.612135 31990 net.cpp:139] Memory required for data: 5866240
I0428 20:11:02.612143 31990 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:02.612148 31990 net.cpp:86] Creating Layer relu3
I0428 20:11:02.612150 31990 net.cpp:408] relu3 <- ip3
I0428 20:11:02.612154 31990 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:02.612310 31990 net.cpp:124] Setting up relu3
I0428 20:11:02.612318 31990 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:02.612321 31990 net.cpp:139] Memory required for data: 5868800
I0428 20:11:02.612324 31990 layer_factory.hpp:77] Creating layer loss
I0428 20:11:02.612330 31990 net.cpp:86] Creating Layer loss
I0428 20:11:02.612334 31990 net.cpp:408] loss <- ip3
I0428 20:11:02.612336 31990 net.cpp:408] loss <- label
I0428 20:11:02.612341 31990 net.cpp:382] loss -> loss
I0428 20:11:02.612355 31990 layer_factory.hpp:77] Creating layer loss
I0428 20:11:02.612578 31990 net.cpp:124] Setting up loss
I0428 20:11:02.612587 31990 net.cpp:131] Top shape: (1)
I0428 20:11:02.612591 31990 net.cpp:134]     with loss weight 1
I0428 20:11:02.612604 31990 net.cpp:139] Memory required for data: 5868804
I0428 20:11:02.612608 31990 net.cpp:200] loss needs backward computation.
I0428 20:11:02.612612 31990 net.cpp:200] relu3 needs backward computation.
I0428 20:11:02.612614 31990 net.cpp:200] ip3 needs backward computation.
I0428 20:11:02.612617 31990 net.cpp:200] relu2 needs backward computation.
I0428 20:11:02.612619 31990 net.cpp:200] ip2 needs backward computation.
I0428 20:11:02.612622 31990 net.cpp:200] relu1 needs backward computation.
I0428 20:11:02.612625 31990 net.cpp:200] ip1 needs backward computation.
I0428 20:11:02.612627 31990 net.cpp:200] pool1 needs backward computation.
I0428 20:11:02.612630 31990 net.cpp:200] conv1 needs backward computation.
I0428 20:11:02.612633 31990 net.cpp:200] pool0 needs backward computation.
I0428 20:11:02.612637 31990 net.cpp:200] conv0 needs backward computation.
I0428 20:11:02.612639 31990 net.cpp:202] mnist does not need backward computation.
I0428 20:11:02.612642 31990 net.cpp:244] This network produces output loss
I0428 20:11:02.612650 31990 net.cpp:257] Network initialization done.
I0428 20:11:02.613028 31990 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1149.prototxt
I0428 20:11:02.613070 31990 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:02.613176 31990 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:02.613296 31990 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:02.613338 31990 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:02.613353 31990 net.cpp:86] Creating Layer mnist
I0428 20:11:02.613358 31990 net.cpp:382] mnist -> data
I0428 20:11:02.613365 31990 net.cpp:382] mnist -> label
I0428 20:11:02.613445 31990 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:02.615298 31990 net.cpp:124] Setting up mnist
I0428 20:11:02.615326 31990 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:02.615346 31990 net.cpp:131] Top shape: 100 (100)
I0428 20:11:02.615350 31990 net.cpp:139] Memory required for data: 314000
I0428 20:11:02.615352 31990 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:02.615360 31990 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:02.615362 31990 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:02.615367 31990 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:02.615373 31990 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:02.615417 31990 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:02.615422 31990 net.cpp:131] Top shape: 100 (100)
I0428 20:11:02.615427 31990 net.cpp:131] Top shape: 100 (100)
I0428 20:11:02.615428 31990 net.cpp:139] Memory required for data: 314800
I0428 20:11:02.615432 31990 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:02.615455 31990 net.cpp:86] Creating Layer conv0
I0428 20:11:02.615458 31990 net.cpp:408] conv0 <- data
I0428 20:11:02.615463 31990 net.cpp:382] conv0 -> conv0
I0428 20:11:02.617244 31990 net.cpp:124] Setting up conv0
I0428 20:11:02.617275 31990 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:02.617280 31990 net.cpp:139] Memory required for data: 6074800
I0428 20:11:02.617290 31990 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:02.617295 31990 net.cpp:86] Creating Layer pool0
I0428 20:11:02.617300 31990 net.cpp:408] pool0 <- conv0
I0428 20:11:02.617303 31990 net.cpp:382] pool0 -> pool0
I0428 20:11:02.617344 31990 net.cpp:124] Setting up pool0
I0428 20:11:02.617349 31990 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:02.617352 31990 net.cpp:139] Memory required for data: 7514800
I0428 20:11:02.617355 31990 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:02.617364 31990 net.cpp:86] Creating Layer conv1
I0428 20:11:02.617369 31990 net.cpp:408] conv1 <- pool0
I0428 20:11:02.617374 31990 net.cpp:382] conv1 -> conv1
I0428 20:11:02.619163 31990 net.cpp:124] Setting up conv1
I0428 20:11:02.619192 31990 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:02.619196 31990 net.cpp:139] Memory required for data: 8794800
I0428 20:11:02.619204 31990 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:02.619212 31990 net.cpp:86] Creating Layer pool1
I0428 20:11:02.619216 31990 net.cpp:408] pool1 <- conv1
I0428 20:11:02.619223 31990 net.cpp:382] pool1 -> pool1
I0428 20:11:02.619259 31990 net.cpp:124] Setting up pool1
I0428 20:11:02.619266 31990 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:02.619269 31990 net.cpp:139] Memory required for data: 9114800
I0428 20:11:02.619272 31990 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:02.619278 31990 net.cpp:86] Creating Layer ip1
I0428 20:11:02.619287 31990 net.cpp:408] ip1 <- pool1
I0428 20:11:02.619293 31990 net.cpp:382] ip1 -> ip1
I0428 20:11:02.619436 31990 net.cpp:124] Setting up ip1
I0428 20:11:02.619444 31990 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:02.619457 31990 net.cpp:139] Memory required for data: 9118800
I0428 20:11:02.619465 31990 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:02.619472 31990 net.cpp:86] Creating Layer relu1
I0428 20:11:02.619475 31990 net.cpp:408] relu1 <- ip1
I0428 20:11:02.619482 31990 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:02.619673 31990 net.cpp:124] Setting up relu1
I0428 20:11:02.619683 31990 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:02.619686 31990 net.cpp:139] Memory required for data: 9122800
I0428 20:11:02.619689 31990 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:02.619696 31990 net.cpp:86] Creating Layer ip2
I0428 20:11:02.619699 31990 net.cpp:408] ip2 <- ip1
I0428 20:11:02.619704 31990 net.cpp:382] ip2 -> ip2
I0428 20:11:02.619840 31990 net.cpp:124] Setting up ip2
I0428 20:11:02.619848 31990 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:02.619851 31990 net.cpp:139] Memory required for data: 9142800
I0428 20:11:02.619856 31990 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:02.619863 31990 net.cpp:86] Creating Layer relu2
I0428 20:11:02.619865 31990 net.cpp:408] relu2 <- ip2
I0428 20:11:02.619870 31990 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:02.620105 31990 net.cpp:124] Setting up relu2
I0428 20:11:02.620115 31990 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:02.620117 31990 net.cpp:139] Memory required for data: 9162800
I0428 20:11:02.620121 31990 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:02.620126 31990 net.cpp:86] Creating Layer ip3
I0428 20:11:02.620129 31990 net.cpp:408] ip3 <- ip2
I0428 20:11:02.620137 31990 net.cpp:382] ip3 -> ip3
I0428 20:11:02.620259 31990 net.cpp:124] Setting up ip3
I0428 20:11:02.620265 31990 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:02.620268 31990 net.cpp:139] Memory required for data: 9166800
I0428 20:11:02.620275 31990 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:02.620281 31990 net.cpp:86] Creating Layer relu3
I0428 20:11:02.620285 31990 net.cpp:408] relu3 <- ip3
I0428 20:11:02.620290 31990 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:02.621129 31990 net.cpp:124] Setting up relu3
I0428 20:11:02.621141 31990 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:02.621145 31990 net.cpp:139] Memory required for data: 9170800
I0428 20:11:02.621148 31990 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:02.621155 31990 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:02.621160 31990 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:02.621165 31990 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:02.621171 31990 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:02.621217 31990 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:02.621224 31990 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:02.621228 31990 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:02.621232 31990 net.cpp:139] Memory required for data: 9178800
I0428 20:11:02.621249 31990 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:02.621254 31990 net.cpp:86] Creating Layer accuracy
I0428 20:11:02.621258 31990 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:02.621261 31990 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:02.621268 31990 net.cpp:382] accuracy -> accuracy
I0428 20:11:02.621274 31990 net.cpp:124] Setting up accuracy
I0428 20:11:02.621279 31990 net.cpp:131] Top shape: (1)
I0428 20:11:02.621281 31990 net.cpp:139] Memory required for data: 9178804
I0428 20:11:02.621284 31990 layer_factory.hpp:77] Creating layer loss
I0428 20:11:02.621289 31990 net.cpp:86] Creating Layer loss
I0428 20:11:02.621292 31990 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:02.621295 31990 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:02.621301 31990 net.cpp:382] loss -> loss
I0428 20:11:02.621307 31990 layer_factory.hpp:77] Creating layer loss
I0428 20:11:02.621567 31990 net.cpp:124] Setting up loss
I0428 20:11:02.621577 31990 net.cpp:131] Top shape: (1)
I0428 20:11:02.621579 31990 net.cpp:134]     with loss weight 1
I0428 20:11:02.621595 31990 net.cpp:139] Memory required for data: 9178808
I0428 20:11:02.621600 31990 net.cpp:200] loss needs backward computation.
I0428 20:11:02.621603 31990 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:02.621608 31990 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:02.621610 31990 net.cpp:200] relu3 needs backward computation.
I0428 20:11:02.621613 31990 net.cpp:200] ip3 needs backward computation.
I0428 20:11:02.621616 31990 net.cpp:200] relu2 needs backward computation.
I0428 20:11:02.621618 31990 net.cpp:200] ip2 needs backward computation.
I0428 20:11:02.621621 31990 net.cpp:200] relu1 needs backward computation.
I0428 20:11:02.621624 31990 net.cpp:200] ip1 needs backward computation.
I0428 20:11:02.621628 31990 net.cpp:200] pool1 needs backward computation.
I0428 20:11:02.621630 31990 net.cpp:200] conv1 needs backward computation.
I0428 20:11:02.621634 31990 net.cpp:200] pool0 needs backward computation.
I0428 20:11:02.621636 31990 net.cpp:200] conv0 needs backward computation.
I0428 20:11:02.621640 31990 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:02.621644 31990 net.cpp:202] mnist does not need backward computation.
I0428 20:11:02.621646 31990 net.cpp:244] This network produces output accuracy
I0428 20:11:02.621657 31990 net.cpp:244] This network produces output loss
I0428 20:11:02.621670 31990 net.cpp:257] Network initialization done.
I0428 20:11:02.621712 31990 solver.cpp:56] Solver scaffolding done.
I0428 20:11:02.622068 31990 caffe.cpp:248] Starting Optimization
I0428 20:11:02.622074 31990 solver.cpp:273] Solving LeNet
I0428 20:11:02.622076 31990 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:02.622972 31990 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:02.629554 31990 blocking_queue.cpp:49] Waiting for data
I0428 20:11:02.699857 31997 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:02.700513 31990 solver.cpp:398]     Test net output #0: accuracy = 0.104
I0428 20:11:02.700548 31990 solver.cpp:398]     Test net output #1: loss = 2.3056 (* 1 = 2.3056 loss)
I0428 20:11:02.704205 31990 solver.cpp:219] Iteration 0 (0 iter/s, 0.082091s/100 iters), loss = 2.30444
I0428 20:11:02.704242 31990 solver.cpp:238]     Train net output #0: loss = 2.30444 (* 1 = 2.30444 loss)
I0428 20:11:02.704254 31990 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:02.825078 31990 solver.cpp:219] Iteration 100 (827.671 iter/s, 0.120821s/100 iters), loss = 1.03022
I0428 20:11:02.825119 31990 solver.cpp:238]     Train net output #0: loss = 1.03022 (* 1 = 1.03022 loss)
I0428 20:11:02.825125 31990 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:02.944231 31990 solver.cpp:219] Iteration 200 (839.613 iter/s, 0.119102s/100 iters), loss = 0.798792
I0428 20:11:02.944272 31990 solver.cpp:238]     Train net output #0: loss = 0.798792 (* 1 = 0.798792 loss)
I0428 20:11:02.944278 31990 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:03.063359 31990 solver.cpp:219] Iteration 300 (839.801 iter/s, 0.119076s/100 iters), loss = 0.494389
I0428 20:11:03.063397 31990 solver.cpp:238]     Train net output #0: loss = 0.494389 (* 1 = 0.494389 loss)
I0428 20:11:03.063405 31990 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:03.181396 31990 solver.cpp:219] Iteration 400 (847.438 iter/s, 0.118003s/100 iters), loss = 0.57945
I0428 20:11:03.181435 31990 solver.cpp:238]     Train net output #0: loss = 0.57945 (* 1 = 0.57945 loss)
I0428 20:11:03.181442 31990 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:03.298382 31990 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:03.355825 31997 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:03.356499 31990 solver.cpp:398]     Test net output #0: accuracy = 0.7555
I0428 20:11:03.356534 31990 solver.cpp:398]     Test net output #1: loss = 0.61787 (* 1 = 0.61787 loss)
I0428 20:11:03.357872 31990 solver.cpp:219] Iteration 500 (566.77 iter/s, 0.176438s/100 iters), loss = 0.616979
I0428 20:11:03.357913 31990 solver.cpp:238]     Train net output #0: loss = 0.616979 (* 1 = 0.616979 loss)
I0428 20:11:03.357933 31990 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:03.482540 31990 solver.cpp:219] Iteration 600 (802.474 iter/s, 0.124615s/100 iters), loss = 0.761595
I0428 20:11:03.482589 31990 solver.cpp:238]     Train net output #0: loss = 0.761595 (* 1 = 0.761595 loss)
I0428 20:11:03.482595 31990 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:03.601788 31990 solver.cpp:219] Iteration 700 (839.015 iter/s, 0.119187s/100 iters), loss = 0.531942
I0428 20:11:03.601830 31990 solver.cpp:238]     Train net output #0: loss = 0.531942 (* 1 = 0.531942 loss)
I0428 20:11:03.601836 31990 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:03.721264 31990 solver.cpp:219] Iteration 800 (837.346 iter/s, 0.119425s/100 iters), loss = 0.70992
I0428 20:11:03.721290 31990 solver.cpp:238]     Train net output #0: loss = 0.70992 (* 1 = 0.70992 loss)
I0428 20:11:03.721297 31990 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:03.840510 31990 solver.cpp:219] Iteration 900 (838.862 iter/s, 0.119209s/100 iters), loss = 0.476036
I0428 20:11:03.840550 31990 solver.cpp:238]     Train net output #0: loss = 0.476036 (* 1 = 0.476036 loss)
I0428 20:11:03.840557 31990 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:03.880102 31996 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:03.957653 31990 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:03.959188 31990 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:03.960083 31990 solver.cpp:311] Iteration 1000, loss = 0.525588
I0428 20:11:03.960098 31990 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:04.035310 31997 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:04.035938 31990 solver.cpp:398]     Test net output #0: accuracy = 0.7706
I0428 20:11:04.035971 31990 solver.cpp:398]     Test net output #1: loss = 0.557032 (* 1 = 0.557032 loss)
I0428 20:11:04.035977 31990 solver.cpp:316] Optimization Done.
I0428 20:11:04.035980 31990 caffe.cpp:259] Optimization Done.
