I0428 19:50:44.088708 27086 caffe.cpp:218] Using GPUs 0
I0428 19:50:44.123121 27086 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:44.607062 27086 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test613.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:44.607226 27086 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test613.prototxt
I0428 19:50:44.607552 27086 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:44.607568 27086 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:44.607645 27086 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:44.607709 27086 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:44.607789 27086 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:44.607808 27086 net.cpp:86] Creating Layer mnist
I0428 19:50:44.607815 27086 net.cpp:382] mnist -> data
I0428 19:50:44.607833 27086 net.cpp:382] mnist -> label
I0428 19:50:44.608743 27086 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:44.611225 27086 net.cpp:124] Setting up mnist
I0428 19:50:44.611264 27086 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:44.611269 27086 net.cpp:131] Top shape: 64 (64)
I0428 19:50:44.611273 27086 net.cpp:139] Memory required for data: 200960
I0428 19:50:44.611279 27086 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:44.611328 27086 net.cpp:86] Creating Layer conv0
I0428 19:50:44.611346 27086 net.cpp:408] conv0 <- data
I0428 19:50:44.611359 27086 net.cpp:382] conv0 -> conv0
I0428 19:50:44.848456 27086 net.cpp:124] Setting up conv0
I0428 19:50:44.848498 27086 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:44.848502 27086 net.cpp:139] Memory required for data: 938240
I0428 19:50:44.848516 27086 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:44.848528 27086 net.cpp:86] Creating Layer pool0
I0428 19:50:44.848532 27086 net.cpp:408] pool0 <- conv0
I0428 19:50:44.848537 27086 net.cpp:382] pool0 -> pool0
I0428 19:50:44.848598 27086 net.cpp:124] Setting up pool0
I0428 19:50:44.848603 27086 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:44.848606 27086 net.cpp:139] Memory required for data: 1122560
I0428 19:50:44.848609 27086 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:44.848619 27086 net.cpp:86] Creating Layer conv1
I0428 19:50:44.848623 27086 net.cpp:408] conv1 <- pool0
I0428 19:50:44.848628 27086 net.cpp:382] conv1 -> conv1
I0428 19:50:44.851420 27086 net.cpp:124] Setting up conv1
I0428 19:50:44.851451 27086 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:44.851454 27086 net.cpp:139] Memory required for data: 1286400
I0428 19:50:44.851464 27086 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:44.851470 27086 net.cpp:86] Creating Layer pool1
I0428 19:50:44.851475 27086 net.cpp:408] pool1 <- conv1
I0428 19:50:44.851480 27086 net.cpp:382] pool1 -> pool1
I0428 19:50:44.851547 27086 net.cpp:124] Setting up pool1
I0428 19:50:44.851553 27086 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:44.851555 27086 net.cpp:139] Memory required for data: 1327360
I0428 19:50:44.851558 27086 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:44.851565 27086 net.cpp:86] Creating Layer ip1
I0428 19:50:44.851568 27086 net.cpp:408] ip1 <- pool1
I0428 19:50:44.851573 27086 net.cpp:382] ip1 -> ip1
I0428 19:50:44.851691 27086 net.cpp:124] Setting up ip1
I0428 19:50:44.851698 27086 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:44.851701 27086 net.cpp:139] Memory required for data: 1333760
I0428 19:50:44.851708 27086 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:44.851714 27086 net.cpp:86] Creating Layer relu1
I0428 19:50:44.851717 27086 net.cpp:408] relu1 <- ip1
I0428 19:50:44.851722 27086 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:44.851886 27086 net.cpp:124] Setting up relu1
I0428 19:50:44.851894 27086 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:44.851897 27086 net.cpp:139] Memory required for data: 1340160
I0428 19:50:44.851900 27086 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:44.851907 27086 net.cpp:86] Creating Layer ip2
I0428 19:50:44.851910 27086 net.cpp:408] ip2 <- ip1
I0428 19:50:44.851914 27086 net.cpp:382] ip2 -> ip2
I0428 19:50:44.852013 27086 net.cpp:124] Setting up ip2
I0428 19:50:44.852020 27086 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:44.852023 27086 net.cpp:139] Memory required for data: 1352960
I0428 19:50:44.852028 27086 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:44.852033 27086 net.cpp:86] Creating Layer relu2
I0428 19:50:44.852037 27086 net.cpp:408] relu2 <- ip2
I0428 19:50:44.852041 27086 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:44.852816 27086 net.cpp:124] Setting up relu2
I0428 19:50:44.852845 27086 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:44.852849 27086 net.cpp:139] Memory required for data: 1365760
I0428 19:50:44.852852 27086 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:44.852859 27086 net.cpp:86] Creating Layer ip3
I0428 19:50:44.852862 27086 net.cpp:408] ip3 <- ip2
I0428 19:50:44.852869 27086 net.cpp:382] ip3 -> ip3
I0428 19:50:44.852991 27086 net.cpp:124] Setting up ip3
I0428 19:50:44.852999 27086 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:44.853003 27086 net.cpp:139] Memory required for data: 1368320
I0428 19:50:44.853010 27086 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:44.853016 27086 net.cpp:86] Creating Layer relu3
I0428 19:50:44.853019 27086 net.cpp:408] relu3 <- ip3
I0428 19:50:44.853024 27086 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:44.853258 27086 net.cpp:124] Setting up relu3
I0428 19:50:44.853268 27086 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:44.853271 27086 net.cpp:139] Memory required for data: 1370880
I0428 19:50:44.853274 27086 layer_factory.hpp:77] Creating layer loss
I0428 19:50:44.853281 27086 net.cpp:86] Creating Layer loss
I0428 19:50:44.853284 27086 net.cpp:408] loss <- ip3
I0428 19:50:44.853288 27086 net.cpp:408] loss <- label
I0428 19:50:44.853293 27086 net.cpp:382] loss -> loss
I0428 19:50:44.853323 27086 layer_factory.hpp:77] Creating layer loss
I0428 19:50:44.853567 27086 net.cpp:124] Setting up loss
I0428 19:50:44.853575 27086 net.cpp:131] Top shape: (1)
I0428 19:50:44.853579 27086 net.cpp:134]     with loss weight 1
I0428 19:50:44.853593 27086 net.cpp:139] Memory required for data: 1370884
I0428 19:50:44.853596 27086 net.cpp:200] loss needs backward computation.
I0428 19:50:44.853600 27086 net.cpp:200] relu3 needs backward computation.
I0428 19:50:44.853603 27086 net.cpp:200] ip3 needs backward computation.
I0428 19:50:44.853606 27086 net.cpp:200] relu2 needs backward computation.
I0428 19:50:44.853610 27086 net.cpp:200] ip2 needs backward computation.
I0428 19:50:44.853612 27086 net.cpp:200] relu1 needs backward computation.
I0428 19:50:44.853615 27086 net.cpp:200] ip1 needs backward computation.
I0428 19:50:44.853617 27086 net.cpp:200] pool1 needs backward computation.
I0428 19:50:44.853621 27086 net.cpp:200] conv1 needs backward computation.
I0428 19:50:44.853623 27086 net.cpp:200] pool0 needs backward computation.
I0428 19:50:44.853626 27086 net.cpp:200] conv0 needs backward computation.
I0428 19:50:44.853629 27086 net.cpp:202] mnist does not need backward computation.
I0428 19:50:44.853632 27086 net.cpp:244] This network produces output loss
I0428 19:50:44.853641 27086 net.cpp:257] Network initialization done.
I0428 19:50:44.853989 27086 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test613.prototxt
I0428 19:50:44.854032 27086 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:44.854123 27086 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:44.854203 27086 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:44.854251 27086 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:44.854264 27086 net.cpp:86] Creating Layer mnist
I0428 19:50:44.854269 27086 net.cpp:382] mnist -> data
I0428 19:50:44.854277 27086 net.cpp:382] mnist -> label
I0428 19:50:44.854394 27086 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:44.856426 27086 net.cpp:124] Setting up mnist
I0428 19:50:44.856456 27086 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:44.856477 27086 net.cpp:131] Top shape: 100 (100)
I0428 19:50:44.856479 27086 net.cpp:139] Memory required for data: 314000
I0428 19:50:44.856482 27086 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:44.856489 27086 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:44.856493 27086 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:44.856498 27086 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:44.856505 27086 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:44.856564 27086 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:44.856570 27086 net.cpp:131] Top shape: 100 (100)
I0428 19:50:44.856575 27086 net.cpp:131] Top shape: 100 (100)
I0428 19:50:44.856577 27086 net.cpp:139] Memory required for data: 314800
I0428 19:50:44.856580 27086 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:44.856588 27086 net.cpp:86] Creating Layer conv0
I0428 19:50:44.856592 27086 net.cpp:408] conv0 <- data
I0428 19:50:44.856597 27086 net.cpp:382] conv0 -> conv0
I0428 19:50:44.858479 27086 net.cpp:124] Setting up conv0
I0428 19:50:44.858507 27086 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:44.858511 27086 net.cpp:139] Memory required for data: 1466800
I0428 19:50:44.858521 27086 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:44.858528 27086 net.cpp:86] Creating Layer pool0
I0428 19:50:44.858531 27086 net.cpp:408] pool0 <- conv0
I0428 19:50:44.858536 27086 net.cpp:382] pool0 -> pool0
I0428 19:50:44.858573 27086 net.cpp:124] Setting up pool0
I0428 19:50:44.858579 27086 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:44.858582 27086 net.cpp:139] Memory required for data: 1754800
I0428 19:50:44.858584 27086 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:44.858593 27086 net.cpp:86] Creating Layer conv1
I0428 19:50:44.858597 27086 net.cpp:408] conv1 <- pool0
I0428 19:50:44.858605 27086 net.cpp:382] conv1 -> conv1
I0428 19:50:44.860841 27086 net.cpp:124] Setting up conv1
I0428 19:50:44.860870 27086 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:44.860873 27086 net.cpp:139] Memory required for data: 2010800
I0428 19:50:44.860882 27086 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:44.860888 27086 net.cpp:86] Creating Layer pool1
I0428 19:50:44.860893 27086 net.cpp:408] pool1 <- conv1
I0428 19:50:44.860898 27086 net.cpp:382] pool1 -> pool1
I0428 19:50:44.860970 27086 net.cpp:124] Setting up pool1
I0428 19:50:44.860976 27086 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:44.860980 27086 net.cpp:139] Memory required for data: 2074800
I0428 19:50:44.860990 27086 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:44.860997 27086 net.cpp:86] Creating Layer ip1
I0428 19:50:44.861001 27086 net.cpp:408] ip1 <- pool1
I0428 19:50:44.861006 27086 net.cpp:382] ip1 -> ip1
I0428 19:50:44.861181 27086 net.cpp:124] Setting up ip1
I0428 19:50:44.861191 27086 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:44.861205 27086 net.cpp:139] Memory required for data: 2084800
I0428 19:50:44.861214 27086 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:44.861219 27086 net.cpp:86] Creating Layer relu1
I0428 19:50:44.861223 27086 net.cpp:408] relu1 <- ip1
I0428 19:50:44.861228 27086 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:44.861470 27086 net.cpp:124] Setting up relu1
I0428 19:50:44.861480 27086 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:44.861485 27086 net.cpp:139] Memory required for data: 2094800
I0428 19:50:44.861488 27086 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:44.861495 27086 net.cpp:86] Creating Layer ip2
I0428 19:50:44.861500 27086 net.cpp:408] ip2 <- ip1
I0428 19:50:44.861505 27086 net.cpp:382] ip2 -> ip2
I0428 19:50:44.861619 27086 net.cpp:124] Setting up ip2
I0428 19:50:44.861627 27086 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:44.861631 27086 net.cpp:139] Memory required for data: 2114800
I0428 19:50:44.861636 27086 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:44.861641 27086 net.cpp:86] Creating Layer relu2
I0428 19:50:44.861644 27086 net.cpp:408] relu2 <- ip2
I0428 19:50:44.861668 27086 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:44.861827 27086 net.cpp:124] Setting up relu2
I0428 19:50:44.861836 27086 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:44.861840 27086 net.cpp:139] Memory required for data: 2134800
I0428 19:50:44.861842 27086 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:44.861847 27086 net.cpp:86] Creating Layer ip3
I0428 19:50:44.861851 27086 net.cpp:408] ip3 <- ip2
I0428 19:50:44.861856 27086 net.cpp:382] ip3 -> ip3
I0428 19:50:44.861976 27086 net.cpp:124] Setting up ip3
I0428 19:50:44.861984 27086 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:44.861986 27086 net.cpp:139] Memory required for data: 2138800
I0428 19:50:44.861994 27086 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:44.861999 27086 net.cpp:86] Creating Layer relu3
I0428 19:50:44.862001 27086 net.cpp:408] relu3 <- ip3
I0428 19:50:44.862006 27086 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:44.862905 27086 net.cpp:124] Setting up relu3
I0428 19:50:44.862917 27086 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:44.862936 27086 net.cpp:139] Memory required for data: 2142800
I0428 19:50:44.862939 27086 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:44.862944 27086 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:44.862949 27086 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:44.862954 27086 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:44.862962 27086 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:44.863005 27086 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:44.863010 27086 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:44.863014 27086 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:44.863016 27086 net.cpp:139] Memory required for data: 2150800
I0428 19:50:44.863019 27086 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:44.863024 27086 net.cpp:86] Creating Layer accuracy
I0428 19:50:44.863029 27086 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:44.863049 27086 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:44.863052 27086 net.cpp:382] accuracy -> accuracy
I0428 19:50:44.863059 27086 net.cpp:124] Setting up accuracy
I0428 19:50:44.863064 27086 net.cpp:131] Top shape: (1)
I0428 19:50:44.863067 27086 net.cpp:139] Memory required for data: 2150804
I0428 19:50:44.863070 27086 layer_factory.hpp:77] Creating layer loss
I0428 19:50:44.863075 27086 net.cpp:86] Creating Layer loss
I0428 19:50:44.863080 27086 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:44.863083 27086 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:44.863087 27086 net.cpp:382] loss -> loss
I0428 19:50:44.863093 27086 layer_factory.hpp:77] Creating layer loss
I0428 19:50:44.863366 27086 net.cpp:124] Setting up loss
I0428 19:50:44.863391 27086 net.cpp:131] Top shape: (1)
I0428 19:50:44.863395 27086 net.cpp:134]     with loss weight 1
I0428 19:50:44.863401 27086 net.cpp:139] Memory required for data: 2150808
I0428 19:50:44.863430 27086 net.cpp:200] loss needs backward computation.
I0428 19:50:44.863435 27086 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:44.863445 27086 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:44.863447 27086 net.cpp:200] relu3 needs backward computation.
I0428 19:50:44.863451 27086 net.cpp:200] ip3 needs backward computation.
I0428 19:50:44.863453 27086 net.cpp:200] relu2 needs backward computation.
I0428 19:50:44.863456 27086 net.cpp:200] ip2 needs backward computation.
I0428 19:50:44.863477 27086 net.cpp:200] relu1 needs backward computation.
I0428 19:50:44.863481 27086 net.cpp:200] ip1 needs backward computation.
I0428 19:50:44.863484 27086 net.cpp:200] pool1 needs backward computation.
I0428 19:50:44.863487 27086 net.cpp:200] conv1 needs backward computation.
I0428 19:50:44.863495 27086 net.cpp:200] pool0 needs backward computation.
I0428 19:50:44.863498 27086 net.cpp:200] conv0 needs backward computation.
I0428 19:50:44.863502 27086 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:44.863505 27086 net.cpp:202] mnist does not need backward computation.
I0428 19:50:44.863508 27086 net.cpp:244] This network produces output accuracy
I0428 19:50:44.863512 27086 net.cpp:244] This network produces output loss
I0428 19:50:44.863523 27086 net.cpp:257] Network initialization done.
I0428 19:50:44.863564 27086 solver.cpp:56] Solver scaffolding done.
I0428 19:50:44.863978 27086 caffe.cpp:248] Starting Optimization
I0428 19:50:44.863983 27086 solver.cpp:273] Solving LeNet
I0428 19:50:44.863986 27086 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:44.864948 27086 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:44.868043 27086 blocking_queue.cpp:49] Waiting for data
I0428 19:50:44.938508 27093 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:44.938995 27086 solver.cpp:398]     Test net output #0: accuracy = 0.1386
I0428 19:50:44.939043 27086 solver.cpp:398]     Test net output #1: loss = 2.28931 (* 1 = 2.28931 loss)
I0428 19:50:44.940912 27086 solver.cpp:219] Iteration 0 (-9.25795e-35 iter/s, 0.0768799s/100 iters), loss = 2.26069
I0428 19:50:44.940940 27086 solver.cpp:238]     Train net output #0: loss = 2.26069 (* 1 = 2.26069 loss)
I0428 19:50:44.940953 27086 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:45.020377 27086 solver.cpp:219] Iteration 100 (1258.99 iter/s, 0.0794286s/100 iters), loss = 1.16527
I0428 19:50:45.020416 27086 solver.cpp:238]     Train net output #0: loss = 1.16527 (* 1 = 1.16527 loss)
I0428 19:50:45.020421 27086 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:45.097520 27086 solver.cpp:219] Iteration 200 (1296.9 iter/s, 0.0771072s/100 iters), loss = 1.14883
I0428 19:50:45.097560 27086 solver.cpp:238]     Train net output #0: loss = 1.14883 (* 1 = 1.14883 loss)
I0428 19:50:45.097581 27086 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:45.172124 27086 solver.cpp:219] Iteration 300 (1341.03 iter/s, 0.0745697s/100 iters), loss = 1.04077
I0428 19:50:45.172161 27086 solver.cpp:238]     Train net output #0: loss = 1.04077 (* 1 = 1.04077 loss)
I0428 19:50:45.172183 27086 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:45.248245 27086 solver.cpp:219] Iteration 400 (1314.28 iter/s, 0.0760873s/100 iters), loss = 0.955814
I0428 19:50:45.248283 27086 solver.cpp:238]     Train net output #0: loss = 0.955814 (* 1 = 0.955814 loss)
I0428 19:50:45.248288 27086 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:45.322800 27086 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:45.398253 27093 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:45.398780 27086 solver.cpp:398]     Test net output #0: accuracy = 0.5965
I0428 19:50:45.398818 27086 solver.cpp:398]     Test net output #1: loss = 1.00771 (* 1 = 1.00771 loss)
I0428 19:50:45.399636 27086 solver.cpp:219] Iteration 500 (660.692 iter/s, 0.151356s/100 iters), loss = 0.98514
I0428 19:50:45.399660 27086 solver.cpp:238]     Train net output #0: loss = 0.98514 (* 1 = 0.98514 loss)
I0428 19:50:45.399686 27086 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:45.480936 27086 solver.cpp:219] Iteration 600 (1230.55 iter/s, 0.0812647s/100 iters), loss = 0.839962
I0428 19:50:45.480974 27086 solver.cpp:238]     Train net output #0: loss = 0.839962 (* 1 = 0.839962 loss)
I0428 19:50:45.480980 27086 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:45.557176 27086 solver.cpp:219] Iteration 700 (1312.18 iter/s, 0.0762091s/100 iters), loss = 1.20974
I0428 19:50:45.557215 27086 solver.cpp:238]     Train net output #0: loss = 1.20974 (* 1 = 1.20974 loss)
I0428 19:50:45.557221 27086 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:45.632339 27086 solver.cpp:219] Iteration 800 (1331.01 iter/s, 0.0751309s/100 iters), loss = 0.904559
I0428 19:50:45.632377 27086 solver.cpp:238]     Train net output #0: loss = 0.904559 (* 1 = 0.904559 loss)
I0428 19:50:45.632383 27086 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:45.707762 27086 solver.cpp:219] Iteration 900 (1326.42 iter/s, 0.0753908s/100 iters), loss = 0.918719
I0428 19:50:45.707801 27086 solver.cpp:238]     Train net output #0: loss = 0.918719 (* 1 = 0.918719 loss)
I0428 19:50:45.707808 27086 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:45.733316 27092 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:45.789321 27086 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:45.790161 27086 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:45.790675 27086 solver.cpp:311] Iteration 1000, loss = 0.963133
I0428 19:50:45.790693 27086 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:45.868397 27093 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:45.869081 27086 solver.cpp:398]     Test net output #0: accuracy = 0.6934
I0428 19:50:45.869108 27086 solver.cpp:398]     Test net output #1: loss = 0.770471 (* 1 = 0.770471 loss)
I0428 19:50:45.869117 27086 solver.cpp:316] Optimization Done.
I0428 19:50:45.869122 27086 caffe.cpp:259] Optimization Done.
