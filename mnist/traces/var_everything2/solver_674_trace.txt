I0428 19:52:55.079278 27654 caffe.cpp:218] Using GPUs 0
I0428 19:52:55.113395 27654 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:55.624097 27654 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test674.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:55.624238 27654 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test674.prototxt
I0428 19:52:55.624603 27654 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:55.624619 27654 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:55.624706 27654 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:55.624774 27654 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:55.624900 27654 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:55.624925 27654 net.cpp:86] Creating Layer mnist
I0428 19:52:55.624933 27654 net.cpp:382] mnist -> data
I0428 19:52:55.624955 27654 net.cpp:382] mnist -> label
I0428 19:52:55.626049 27654 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:55.628504 27654 net.cpp:124] Setting up mnist
I0428 19:52:55.628522 27654 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:55.628528 27654 net.cpp:131] Top shape: 64 (64)
I0428 19:52:55.628532 27654 net.cpp:139] Memory required for data: 200960
I0428 19:52:55.628540 27654 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:55.628556 27654 net.cpp:86] Creating Layer conv0
I0428 19:52:55.628561 27654 net.cpp:408] conv0 <- data
I0428 19:52:55.628571 27654 net.cpp:382] conv0 -> conv0
I0428 19:52:55.876286 27654 net.cpp:124] Setting up conv0
I0428 19:52:55.876327 27654 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:55.876332 27654 net.cpp:139] Memory required for data: 938240
I0428 19:52:55.876363 27654 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:55.876392 27654 net.cpp:86] Creating Layer pool0
I0428 19:52:55.876407 27654 net.cpp:408] pool0 <- conv0
I0428 19:52:55.876412 27654 net.cpp:382] pool0 -> pool0
I0428 19:52:55.876472 27654 net.cpp:124] Setting up pool0
I0428 19:52:55.876479 27654 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:55.876482 27654 net.cpp:139] Memory required for data: 1122560
I0428 19:52:55.876485 27654 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:55.876495 27654 net.cpp:86] Creating Layer conv1
I0428 19:52:55.876498 27654 net.cpp:408] conv1 <- pool0
I0428 19:52:55.876502 27654 net.cpp:382] conv1 -> conv1
I0428 19:52:55.879416 27654 net.cpp:124] Setting up conv1
I0428 19:52:55.879446 27654 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:55.879449 27654 net.cpp:139] Memory required for data: 1941760
I0428 19:52:55.879457 27654 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:55.879467 27654 net.cpp:86] Creating Layer pool1
I0428 19:52:55.879470 27654 net.cpp:408] pool1 <- conv1
I0428 19:52:55.879474 27654 net.cpp:382] pool1 -> pool1
I0428 19:52:55.879530 27654 net.cpp:124] Setting up pool1
I0428 19:52:55.879540 27654 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:55.879544 27654 net.cpp:139] Memory required for data: 2146560
I0428 19:52:55.879546 27654 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:55.879554 27654 net.cpp:86] Creating Layer ip1
I0428 19:52:55.879557 27654 net.cpp:408] ip1 <- pool1
I0428 19:52:55.879561 27654 net.cpp:382] ip1 -> ip1
I0428 19:52:55.879925 27654 net.cpp:124] Setting up ip1
I0428 19:52:55.879931 27654 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:55.879951 27654 net.cpp:139] Memory required for data: 2159360
I0428 19:52:55.879957 27654 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:55.879962 27654 net.cpp:86] Creating Layer relu1
I0428 19:52:55.879966 27654 net.cpp:408] relu1 <- ip1
I0428 19:52:55.879971 27654 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:55.880159 27654 net.cpp:124] Setting up relu1
I0428 19:52:55.880168 27654 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:55.880172 27654 net.cpp:139] Memory required for data: 2172160
I0428 19:52:55.880175 27654 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:55.880197 27654 net.cpp:86] Creating Layer ip2
I0428 19:52:55.880199 27654 net.cpp:408] ip2 <- ip1
I0428 19:52:55.880203 27654 net.cpp:382] ip2 -> ip2
I0428 19:52:55.880306 27654 net.cpp:124] Setting up ip2
I0428 19:52:55.880311 27654 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:55.880314 27654 net.cpp:139] Memory required for data: 2174720
I0428 19:52:55.880319 27654 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:55.880326 27654 net.cpp:86] Creating Layer relu2
I0428 19:52:55.880328 27654 net.cpp:408] relu2 <- ip2
I0428 19:52:55.880333 27654 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:55.881158 27654 net.cpp:124] Setting up relu2
I0428 19:52:55.881171 27654 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:55.881191 27654 net.cpp:139] Memory required for data: 2177280
I0428 19:52:55.881193 27654 layer_factory.hpp:77] Creating layer loss
I0428 19:52:55.881217 27654 net.cpp:86] Creating Layer loss
I0428 19:52:55.881219 27654 net.cpp:408] loss <- ip2
I0428 19:52:55.881223 27654 net.cpp:408] loss <- label
I0428 19:52:55.881229 27654 net.cpp:382] loss -> loss
I0428 19:52:55.881248 27654 layer_factory.hpp:77] Creating layer loss
I0428 19:52:55.881508 27654 net.cpp:124] Setting up loss
I0428 19:52:55.881520 27654 net.cpp:131] Top shape: (1)
I0428 19:52:55.881522 27654 net.cpp:134]     with loss weight 1
I0428 19:52:55.881536 27654 net.cpp:139] Memory required for data: 2177284
I0428 19:52:55.881539 27654 net.cpp:200] loss needs backward computation.
I0428 19:52:55.881543 27654 net.cpp:200] relu2 needs backward computation.
I0428 19:52:55.881546 27654 net.cpp:200] ip2 needs backward computation.
I0428 19:52:55.881548 27654 net.cpp:200] relu1 needs backward computation.
I0428 19:52:55.881551 27654 net.cpp:200] ip1 needs backward computation.
I0428 19:52:55.881564 27654 net.cpp:200] pool1 needs backward computation.
I0428 19:52:55.881567 27654 net.cpp:200] conv1 needs backward computation.
I0428 19:52:55.881570 27654 net.cpp:200] pool0 needs backward computation.
I0428 19:52:55.881573 27654 net.cpp:200] conv0 needs backward computation.
I0428 19:52:55.881577 27654 net.cpp:202] mnist does not need backward computation.
I0428 19:52:55.881580 27654 net.cpp:244] This network produces output loss
I0428 19:52:55.881589 27654 net.cpp:257] Network initialization done.
I0428 19:52:55.881922 27654 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test674.prototxt
I0428 19:52:55.881980 27654 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:55.882068 27654 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:55.882134 27654 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:55.882223 27654 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:55.882236 27654 net.cpp:86] Creating Layer mnist
I0428 19:52:55.882241 27654 net.cpp:382] mnist -> data
I0428 19:52:55.882248 27654 net.cpp:382] mnist -> label
I0428 19:52:55.882333 27654 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:55.884392 27654 net.cpp:124] Setting up mnist
I0428 19:52:55.884419 27654 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:55.884440 27654 net.cpp:131] Top shape: 100 (100)
I0428 19:52:55.884443 27654 net.cpp:139] Memory required for data: 314000
I0428 19:52:55.884446 27654 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:55.884452 27654 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:55.884455 27654 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:55.884470 27654 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:55.884477 27654 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:55.884521 27654 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:55.884536 27654 net.cpp:131] Top shape: 100 (100)
I0428 19:52:55.884539 27654 net.cpp:131] Top shape: 100 (100)
I0428 19:52:55.884542 27654 net.cpp:139] Memory required for data: 314800
I0428 19:52:55.884546 27654 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:55.884555 27654 net.cpp:86] Creating Layer conv0
I0428 19:52:55.884558 27654 net.cpp:408] conv0 <- data
I0428 19:52:55.884563 27654 net.cpp:382] conv0 -> conv0
I0428 19:52:55.886514 27654 net.cpp:124] Setting up conv0
I0428 19:52:55.886544 27654 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:55.886548 27654 net.cpp:139] Memory required for data: 1466800
I0428 19:52:55.886556 27654 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:55.886564 27654 net.cpp:86] Creating Layer pool0
I0428 19:52:55.886566 27654 net.cpp:408] pool0 <- conv0
I0428 19:52:55.886571 27654 net.cpp:382] pool0 -> pool0
I0428 19:52:55.886606 27654 net.cpp:124] Setting up pool0
I0428 19:52:55.886611 27654 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:55.886615 27654 net.cpp:139] Memory required for data: 1754800
I0428 19:52:55.886616 27654 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:55.886626 27654 net.cpp:86] Creating Layer conv1
I0428 19:52:55.886629 27654 net.cpp:408] conv1 <- pool0
I0428 19:52:55.886634 27654 net.cpp:382] conv1 -> conv1
I0428 19:52:55.888238 27654 net.cpp:124] Setting up conv1
I0428 19:52:55.888252 27654 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:55.888272 27654 net.cpp:139] Memory required for data: 3034800
I0428 19:52:55.888294 27654 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:55.888303 27654 net.cpp:86] Creating Layer pool1
I0428 19:52:55.888319 27654 net.cpp:408] pool1 <- conv1
I0428 19:52:55.888345 27654 net.cpp:382] pool1 -> pool1
I0428 19:52:55.888384 27654 net.cpp:124] Setting up pool1
I0428 19:52:55.888399 27654 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:55.888402 27654 net.cpp:139] Memory required for data: 3354800
I0428 19:52:55.888404 27654 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:55.888412 27654 net.cpp:86] Creating Layer ip1
I0428 19:52:55.888415 27654 net.cpp:408] ip1 <- pool1
I0428 19:52:55.888420 27654 net.cpp:382] ip1 -> ip1
I0428 19:52:55.888803 27654 net.cpp:124] Setting up ip1
I0428 19:52:55.888833 27654 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:55.888837 27654 net.cpp:139] Memory required for data: 3374800
I0428 19:52:55.888860 27654 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:55.888867 27654 net.cpp:86] Creating Layer relu1
I0428 19:52:55.888870 27654 net.cpp:408] relu1 <- ip1
I0428 19:52:55.888875 27654 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:55.889047 27654 net.cpp:124] Setting up relu1
I0428 19:52:55.889057 27654 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:55.889060 27654 net.cpp:139] Memory required for data: 3394800
I0428 19:52:55.889065 27654 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:55.889072 27654 net.cpp:86] Creating Layer ip2
I0428 19:52:55.889089 27654 net.cpp:408] ip2 <- ip1
I0428 19:52:55.889096 27654 net.cpp:382] ip2 -> ip2
I0428 19:52:55.889225 27654 net.cpp:124] Setting up ip2
I0428 19:52:55.889233 27654 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:55.889235 27654 net.cpp:139] Memory required for data: 3398800
I0428 19:52:55.889240 27654 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:55.889245 27654 net.cpp:86] Creating Layer relu2
I0428 19:52:55.889248 27654 net.cpp:408] relu2 <- ip2
I0428 19:52:55.889252 27654 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:55.889575 27654 net.cpp:124] Setting up relu2
I0428 19:52:55.889601 27654 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:55.889605 27654 net.cpp:139] Memory required for data: 3402800
I0428 19:52:55.889609 27654 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:52:55.889614 27654 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:52:55.889618 27654 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:52:55.889623 27654 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:52:55.889642 27654 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:52:55.889683 27654 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:52:55.889691 27654 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:55.889695 27654 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:55.889698 27654 net.cpp:139] Memory required for data: 3410800
I0428 19:52:55.889701 27654 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:55.889708 27654 net.cpp:86] Creating Layer accuracy
I0428 19:52:55.889710 27654 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:52:55.889715 27654 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:55.889737 27654 net.cpp:382] accuracy -> accuracy
I0428 19:52:55.889760 27654 net.cpp:124] Setting up accuracy
I0428 19:52:55.889763 27654 net.cpp:131] Top shape: (1)
I0428 19:52:55.889766 27654 net.cpp:139] Memory required for data: 3410804
I0428 19:52:55.889768 27654 layer_factory.hpp:77] Creating layer loss
I0428 19:52:55.889785 27654 net.cpp:86] Creating Layer loss
I0428 19:52:55.889787 27654 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:52:55.889791 27654 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:55.889796 27654 net.cpp:382] loss -> loss
I0428 19:52:55.889801 27654 layer_factory.hpp:77] Creating layer loss
I0428 19:52:55.890033 27654 net.cpp:124] Setting up loss
I0428 19:52:55.890043 27654 net.cpp:131] Top shape: (1)
I0428 19:52:55.890045 27654 net.cpp:134]     with loss weight 1
I0428 19:52:55.890053 27654 net.cpp:139] Memory required for data: 3410808
I0428 19:52:55.890056 27654 net.cpp:200] loss needs backward computation.
I0428 19:52:55.890060 27654 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:55.890064 27654 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:52:55.890067 27654 net.cpp:200] relu2 needs backward computation.
I0428 19:52:55.890069 27654 net.cpp:200] ip2 needs backward computation.
I0428 19:52:55.890079 27654 net.cpp:200] relu1 needs backward computation.
I0428 19:52:55.890081 27654 net.cpp:200] ip1 needs backward computation.
I0428 19:52:55.890084 27654 net.cpp:200] pool1 needs backward computation.
I0428 19:52:55.890087 27654 net.cpp:200] conv1 needs backward computation.
I0428 19:52:55.890102 27654 net.cpp:200] pool0 needs backward computation.
I0428 19:52:55.890105 27654 net.cpp:200] conv0 needs backward computation.
I0428 19:52:55.890110 27654 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:55.890112 27654 net.cpp:202] mnist does not need backward computation.
I0428 19:52:55.890115 27654 net.cpp:244] This network produces output accuracy
I0428 19:52:55.890118 27654 net.cpp:244] This network produces output loss
I0428 19:52:55.890130 27654 net.cpp:257] Network initialization done.
I0428 19:52:55.890167 27654 solver.cpp:56] Solver scaffolding done.
I0428 19:52:55.890638 27654 caffe.cpp:248] Starting Optimization
I0428 19:52:55.890645 27654 solver.cpp:273] Solving LeNet
I0428 19:52:55.890663 27654 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:55.891556 27654 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:55.895691 27654 blocking_queue.cpp:49] Waiting for data
I0428 19:52:55.963750 27661 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:55.964236 27654 solver.cpp:398]     Test net output #0: accuracy = 0.1021
I0428 19:52:55.964270 27654 solver.cpp:398]     Test net output #1: loss = 2.32385 (* 1 = 2.32385 loss)
I0428 19:52:55.967268 27654 solver.cpp:219] Iteration 0 (0 iter/s, 0.0765717s/100 iters), loss = 2.32578
I0428 19:52:55.967306 27654 solver.cpp:238]     Train net output #0: loss = 2.32578 (* 1 = 2.32578 loss)
I0428 19:52:55.967317 27654 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:56.064545 27654 solver.cpp:219] Iteration 100 (1028.53 iter/s, 0.0972258s/100 iters), loss = 0.45216
I0428 19:52:56.064586 27654 solver.cpp:238]     Train net output #0: loss = 0.45216 (* 1 = 0.45216 loss)
I0428 19:52:56.064592 27654 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:56.165197 27654 solver.cpp:219] Iteration 200 (993.896 iter/s, 0.100614s/100 iters), loss = 0.201736
I0428 19:52:56.165249 27654 solver.cpp:238]     Train net output #0: loss = 0.201736 (* 1 = 0.201736 loss)
I0428 19:52:56.165258 27654 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:56.268944 27654 solver.cpp:219] Iteration 300 (964.44 iter/s, 0.103687s/100 iters), loss = 0.266529
I0428 19:52:56.268977 27654 solver.cpp:238]     Train net output #0: loss = 0.266529 (* 1 = 0.266529 loss)
I0428 19:52:56.268985 27654 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:56.369843 27654 solver.cpp:219] Iteration 400 (991.504 iter/s, 0.100857s/100 iters), loss = 0.107687
I0428 19:52:56.369873 27654 solver.cpp:238]     Train net output #0: loss = 0.107687 (* 1 = 0.107687 loss)
I0428 19:52:56.369879 27654 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:56.479039 27654 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:56.532088 27661 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:56.532579 27654 solver.cpp:398]     Test net output #0: accuracy = 0.9621
I0428 19:52:56.532604 27654 solver.cpp:398]     Test net output #1: loss = 0.116016 (* 1 = 0.116016 loss)
I0428 19:52:56.533663 27654 solver.cpp:219] Iteration 500 (610.584 iter/s, 0.163778s/100 iters), loss = 0.157938
I0428 19:52:56.533705 27654 solver.cpp:238]     Train net output #0: loss = 0.157938 (* 1 = 0.157938 loss)
I0428 19:52:56.533715 27654 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:56.641057 27654 solver.cpp:219] Iteration 600 (931.604 iter/s, 0.107342s/100 iters), loss = 0.154205
I0428 19:52:56.641093 27654 solver.cpp:238]     Train net output #0: loss = 0.154205 (* 1 = 0.154205 loss)
I0428 19:52:56.641103 27654 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:56.751894 27654 solver.cpp:219] Iteration 700 (902.62 iter/s, 0.110789s/100 iters), loss = 0.172525
I0428 19:52:56.751937 27654 solver.cpp:238]     Train net output #0: loss = 0.172525 (* 1 = 0.172525 loss)
I0428 19:52:56.751948 27654 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:56.860410 27654 solver.cpp:219] Iteration 800 (921.964 iter/s, 0.108464s/100 iters), loss = 0.256457
I0428 19:52:56.860450 27654 solver.cpp:238]     Train net output #0: loss = 0.256457 (* 1 = 0.256457 loss)
I0428 19:52:56.860458 27654 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:56.966179 27654 solver.cpp:219] Iteration 900 (945.896 iter/s, 0.10572s/100 iters), loss = 0.247737
I0428 19:52:56.966214 27654 solver.cpp:238]     Train net output #0: loss = 0.247737 (* 1 = 0.247737 loss)
I0428 19:52:56.966223 27654 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:57.005980 27660 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:57.081120 27654 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:57.082950 27654 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:57.083940 27654 solver.cpp:311] Iteration 1000, loss = 0.124587
I0428 19:52:57.083962 27654 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:57.141394 27661 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:57.141985 27654 solver.cpp:398]     Test net output #0: accuracy = 0.9776
I0428 19:52:57.142024 27654 solver.cpp:398]     Test net output #1: loss = 0.0712226 (* 1 = 0.0712226 loss)
I0428 19:52:57.142036 27654 solver.cpp:316] Optimization Done.
I0428 19:52:57.142042 27654 caffe.cpp:259] Optimization Done.
