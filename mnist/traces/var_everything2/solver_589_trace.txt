I0428 19:49:55.058673 26887 caffe.cpp:218] Using GPUs 0
I0428 19:49:55.096339 26887 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:55.608260 26887 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test589.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:55.608402 26887 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test589.prototxt
I0428 19:49:55.608784 26887 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:55.608803 26887 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:55.608903 26887 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:49:55.608979 26887 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:55.609082 26887 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:55.609107 26887 net.cpp:86] Creating Layer mnist
I0428 19:49:55.609117 26887 net.cpp:382] mnist -> data
I0428 19:49:55.609139 26887 net.cpp:382] mnist -> label
I0428 19:49:55.610231 26887 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:55.612715 26887 net.cpp:124] Setting up mnist
I0428 19:49:55.612733 26887 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:55.612740 26887 net.cpp:131] Top shape: 64 (64)
I0428 19:49:55.612745 26887 net.cpp:139] Memory required for data: 200960
I0428 19:49:55.612751 26887 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:55.612766 26887 net.cpp:86] Creating Layer conv0
I0428 19:49:55.612772 26887 net.cpp:408] conv0 <- data
I0428 19:49:55.612785 26887 net.cpp:382] conv0 -> conv0
I0428 19:49:55.931661 26887 net.cpp:124] Setting up conv0
I0428 19:49:55.931692 26887 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:55.931699 26887 net.cpp:139] Memory required for data: 938240
I0428 19:49:55.931738 26887 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:55.931753 26887 net.cpp:86] Creating Layer pool0
I0428 19:49:55.931758 26887 net.cpp:408] pool0 <- conv0
I0428 19:49:55.931766 26887 net.cpp:382] pool0 -> pool0
I0428 19:49:55.931821 26887 net.cpp:124] Setting up pool0
I0428 19:49:55.931830 26887 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:55.931834 26887 net.cpp:139] Memory required for data: 1122560
I0428 19:49:55.931838 26887 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:55.931850 26887 net.cpp:86] Creating Layer conv1
I0428 19:49:55.931854 26887 net.cpp:408] conv1 <- pool0
I0428 19:49:55.931860 26887 net.cpp:382] conv1 -> conv1
I0428 19:49:55.934983 26887 net.cpp:124] Setting up conv1
I0428 19:49:55.935001 26887 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:49:55.935006 26887 net.cpp:139] Memory required for data: 1286400
I0428 19:49:55.935017 26887 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:55.935026 26887 net.cpp:86] Creating Layer pool1
I0428 19:49:55.935031 26887 net.cpp:408] pool1 <- conv1
I0428 19:49:55.935037 26887 net.cpp:382] pool1 -> pool1
I0428 19:49:55.935082 26887 net.cpp:124] Setting up pool1
I0428 19:49:55.935088 26887 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:49:55.935092 26887 net.cpp:139] Memory required for data: 1327360
I0428 19:49:55.935096 26887 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:55.935106 26887 net.cpp:86] Creating Layer ip1
I0428 19:49:55.935108 26887 net.cpp:408] ip1 <- pool1
I0428 19:49:55.935114 26887 net.cpp:382] ip1 -> ip1
I0428 19:49:55.935245 26887 net.cpp:124] Setting up ip1
I0428 19:49:55.935253 26887 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:55.935257 26887 net.cpp:139] Memory required for data: 1329920
I0428 19:49:55.935266 26887 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:55.935272 26887 net.cpp:86] Creating Layer relu1
I0428 19:49:55.935276 26887 net.cpp:408] relu1 <- ip1
I0428 19:49:55.935281 26887 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:55.935478 26887 net.cpp:124] Setting up relu1
I0428 19:49:55.935489 26887 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:55.935492 26887 net.cpp:139] Memory required for data: 1332480
I0428 19:49:55.935497 26887 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:55.935504 26887 net.cpp:86] Creating Layer ip2
I0428 19:49:55.935508 26887 net.cpp:408] ip2 <- ip1
I0428 19:49:55.935514 26887 net.cpp:382] ip2 -> ip2
I0428 19:49:55.935624 26887 net.cpp:124] Setting up ip2
I0428 19:49:55.935632 26887 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:55.935636 26887 net.cpp:139] Memory required for data: 1335040
I0428 19:49:55.935642 26887 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:55.935649 26887 net.cpp:86] Creating Layer relu2
I0428 19:49:55.935652 26887 net.cpp:408] relu2 <- ip2
I0428 19:49:55.935657 26887 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:55.936497 26887 net.cpp:124] Setting up relu2
I0428 19:49:55.936512 26887 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:55.936517 26887 net.cpp:139] Memory required for data: 1337600
I0428 19:49:55.936520 26887 layer_factory.hpp:77] Creating layer loss
I0428 19:49:55.936528 26887 net.cpp:86] Creating Layer loss
I0428 19:49:55.936532 26887 net.cpp:408] loss <- ip2
I0428 19:49:55.936537 26887 net.cpp:408] loss <- label
I0428 19:49:55.936544 26887 net.cpp:382] loss -> loss
I0428 19:49:55.936563 26887 layer_factory.hpp:77] Creating layer loss
I0428 19:49:55.936849 26887 net.cpp:124] Setting up loss
I0428 19:49:55.936861 26887 net.cpp:131] Top shape: (1)
I0428 19:49:55.936866 26887 net.cpp:134]     with loss weight 1
I0428 19:49:55.936882 26887 net.cpp:139] Memory required for data: 1337604
I0428 19:49:55.936885 26887 net.cpp:200] loss needs backward computation.
I0428 19:49:55.936890 26887 net.cpp:200] relu2 needs backward computation.
I0428 19:49:55.936893 26887 net.cpp:200] ip2 needs backward computation.
I0428 19:49:55.936897 26887 net.cpp:200] relu1 needs backward computation.
I0428 19:49:55.936900 26887 net.cpp:200] ip1 needs backward computation.
I0428 19:49:55.936916 26887 net.cpp:200] pool1 needs backward computation.
I0428 19:49:55.936920 26887 net.cpp:200] conv1 needs backward computation.
I0428 19:49:55.936924 26887 net.cpp:200] pool0 needs backward computation.
I0428 19:49:55.936928 26887 net.cpp:200] conv0 needs backward computation.
I0428 19:49:55.936931 26887 net.cpp:202] mnist does not need backward computation.
I0428 19:49:55.936935 26887 net.cpp:244] This network produces output loss
I0428 19:49:55.936945 26887 net.cpp:257] Network initialization done.
I0428 19:49:55.937290 26887 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test589.prototxt
I0428 19:49:55.937320 26887 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:55.937419 26887 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:49:55.937494 26887 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:55.937543 26887 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:55.937562 26887 net.cpp:86] Creating Layer mnist
I0428 19:49:55.937567 26887 net.cpp:382] mnist -> data
I0428 19:49:55.937577 26887 net.cpp:382] mnist -> label
I0428 19:49:55.937677 26887 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:55.939855 26887 net.cpp:124] Setting up mnist
I0428 19:49:55.939872 26887 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:55.939877 26887 net.cpp:131] Top shape: 100 (100)
I0428 19:49:55.939882 26887 net.cpp:139] Memory required for data: 314000
I0428 19:49:55.939885 26887 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:55.939893 26887 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:55.939898 26887 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:55.939904 26887 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:55.939913 26887 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:55.939971 26887 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:55.939990 26887 net.cpp:131] Top shape: 100 (100)
I0428 19:49:55.939996 26887 net.cpp:131] Top shape: 100 (100)
I0428 19:49:55.939998 26887 net.cpp:139] Memory required for data: 314800
I0428 19:49:55.940002 26887 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:55.940012 26887 net.cpp:86] Creating Layer conv0
I0428 19:49:55.940016 26887 net.cpp:408] conv0 <- data
I0428 19:49:55.940022 26887 net.cpp:382] conv0 -> conv0
I0428 19:49:55.941956 26887 net.cpp:124] Setting up conv0
I0428 19:49:55.941972 26887 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:55.941977 26887 net.cpp:139] Memory required for data: 1466800
I0428 19:49:55.941988 26887 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:55.941997 26887 net.cpp:86] Creating Layer pool0
I0428 19:49:55.942003 26887 net.cpp:408] pool0 <- conv0
I0428 19:49:55.942008 26887 net.cpp:382] pool0 -> pool0
I0428 19:49:55.942049 26887 net.cpp:124] Setting up pool0
I0428 19:49:55.942055 26887 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:55.942059 26887 net.cpp:139] Memory required for data: 1754800
I0428 19:49:55.942062 26887 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:55.942073 26887 net.cpp:86] Creating Layer conv1
I0428 19:49:55.942077 26887 net.cpp:408] conv1 <- pool0
I0428 19:49:55.942083 26887 net.cpp:382] conv1 -> conv1
I0428 19:49:55.944383 26887 net.cpp:124] Setting up conv1
I0428 19:49:55.944401 26887 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:49:55.944406 26887 net.cpp:139] Memory required for data: 2010800
I0428 19:49:55.944416 26887 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:55.944424 26887 net.cpp:86] Creating Layer pool1
I0428 19:49:55.944428 26887 net.cpp:408] pool1 <- conv1
I0428 19:49:55.944434 26887 net.cpp:382] pool1 -> pool1
I0428 19:49:55.944484 26887 net.cpp:124] Setting up pool1
I0428 19:49:55.944490 26887 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:49:55.944494 26887 net.cpp:139] Memory required for data: 2074800
I0428 19:49:55.944497 26887 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:55.944504 26887 net.cpp:86] Creating Layer ip1
I0428 19:49:55.944509 26887 net.cpp:408] ip1 <- pool1
I0428 19:49:55.944514 26887 net.cpp:382] ip1 -> ip1
I0428 19:49:55.944665 26887 net.cpp:124] Setting up ip1
I0428 19:49:55.944675 26887 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:55.944679 26887 net.cpp:139] Memory required for data: 2078800
I0428 19:49:55.944689 26887 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:55.944694 26887 net.cpp:86] Creating Layer relu1
I0428 19:49:55.944699 26887 net.cpp:408] relu1 <- ip1
I0428 19:49:55.944705 26887 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:55.944914 26887 net.cpp:124] Setting up relu1
I0428 19:49:55.944926 26887 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:55.944931 26887 net.cpp:139] Memory required for data: 2082800
I0428 19:49:55.944934 26887 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:55.944943 26887 net.cpp:86] Creating Layer ip2
I0428 19:49:55.944947 26887 net.cpp:408] ip2 <- ip1
I0428 19:49:55.944954 26887 net.cpp:382] ip2 -> ip2
I0428 19:49:55.945067 26887 net.cpp:124] Setting up ip2
I0428 19:49:55.945075 26887 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:55.945080 26887 net.cpp:139] Memory required for data: 2086800
I0428 19:49:55.945086 26887 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:55.945092 26887 net.cpp:86] Creating Layer relu2
I0428 19:49:55.945096 26887 net.cpp:408] relu2 <- ip2
I0428 19:49:55.945104 26887 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:55.945300 26887 net.cpp:124] Setting up relu2
I0428 19:49:55.945318 26887 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:55.945322 26887 net.cpp:139] Memory required for data: 2090800
I0428 19:49:55.945327 26887 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:49:55.945333 26887 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:49:55.945336 26887 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:49:55.945343 26887 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:49:55.945363 26887 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:49:55.945405 26887 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:49:55.945415 26887 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:55.945420 26887 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:55.945422 26887 net.cpp:139] Memory required for data: 2098800
I0428 19:49:55.945426 26887 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:55.945432 26887 net.cpp:86] Creating Layer accuracy
I0428 19:49:55.945436 26887 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:49:55.945441 26887 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:55.945446 26887 net.cpp:382] accuracy -> accuracy
I0428 19:49:55.945454 26887 net.cpp:124] Setting up accuracy
I0428 19:49:55.945458 26887 net.cpp:131] Top shape: (1)
I0428 19:49:55.945462 26887 net.cpp:139] Memory required for data: 2098804
I0428 19:49:55.945466 26887 layer_factory.hpp:77] Creating layer loss
I0428 19:49:55.945472 26887 net.cpp:86] Creating Layer loss
I0428 19:49:55.945482 26887 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:49:55.945487 26887 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:55.945492 26887 net.cpp:382] loss -> loss
I0428 19:49:55.945498 26887 layer_factory.hpp:77] Creating layer loss
I0428 19:49:55.945840 26887 net.cpp:124] Setting up loss
I0428 19:49:55.945858 26887 net.cpp:131] Top shape: (1)
I0428 19:49:55.945863 26887 net.cpp:134]     with loss weight 1
I0428 19:49:55.945869 26887 net.cpp:139] Memory required for data: 2098808
I0428 19:49:55.945874 26887 net.cpp:200] loss needs backward computation.
I0428 19:49:55.945878 26887 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:55.945883 26887 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:49:55.945888 26887 net.cpp:200] relu2 needs backward computation.
I0428 19:49:55.945891 26887 net.cpp:200] ip2 needs backward computation.
I0428 19:49:55.945894 26887 net.cpp:200] relu1 needs backward computation.
I0428 19:49:55.945899 26887 net.cpp:200] ip1 needs backward computation.
I0428 19:49:55.945901 26887 net.cpp:200] pool1 needs backward computation.
I0428 19:49:55.945905 26887 net.cpp:200] conv1 needs backward computation.
I0428 19:49:55.945909 26887 net.cpp:200] pool0 needs backward computation.
I0428 19:49:55.945914 26887 net.cpp:200] conv0 needs backward computation.
I0428 19:49:55.945919 26887 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:55.945924 26887 net.cpp:202] mnist does not need backward computation.
I0428 19:49:55.945927 26887 net.cpp:244] This network produces output accuracy
I0428 19:49:55.945930 26887 net.cpp:244] This network produces output loss
I0428 19:49:55.945945 26887 net.cpp:257] Network initialization done.
I0428 19:49:55.945988 26887 solver.cpp:56] Solver scaffolding done.
I0428 19:49:55.946301 26887 caffe.cpp:248] Starting Optimization
I0428 19:49:55.946308 26887 solver.cpp:273] Solving LeNet
I0428 19:49:55.946311 26887 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:55.946466 26887 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:55.950206 26887 blocking_queue.cpp:49] Waiting for data
I0428 19:49:56.021083 26894 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:56.021596 26887 solver.cpp:398]     Test net output #0: accuracy = 0.0824
I0428 19:49:56.021622 26887 solver.cpp:398]     Test net output #1: loss = 2.32478 (* 1 = 2.32478 loss)
I0428 19:49:56.023578 26887 solver.cpp:219] Iteration 0 (0 iter/s, 0.0772372s/100 iters), loss = 2.34911
I0428 19:49:56.023607 26887 solver.cpp:238]     Train net output #0: loss = 2.34911 (* 1 = 2.34911 loss)
I0428 19:49:56.023622 26887 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:56.097592 26887 solver.cpp:219] Iteration 100 (1351.85 iter/s, 0.0739726s/100 iters), loss = 0.447984
I0428 19:49:56.097625 26887 solver.cpp:238]     Train net output #0: loss = 0.447984 (* 1 = 0.447984 loss)
I0428 19:49:56.097631 26887 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:56.170107 26887 solver.cpp:219] Iteration 200 (1379.81 iter/s, 0.0724736s/100 iters), loss = 0.222
I0428 19:49:56.170152 26887 solver.cpp:238]     Train net output #0: loss = 0.222 (* 1 = 0.222 loss)
I0428 19:49:56.170161 26887 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:56.241945 26887 solver.cpp:219] Iteration 300 (1393.12 iter/s, 0.0717814s/100 iters), loss = 0.239255
I0428 19:49:56.241974 26887 solver.cpp:238]     Train net output #0: loss = 0.239255 (* 1 = 0.239255 loss)
I0428 19:49:56.241982 26887 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:56.345280 26887 solver.cpp:219] Iteration 400 (968.138 iter/s, 0.103291s/100 iters), loss = 0.146201
I0428 19:49:56.345327 26887 solver.cpp:238]     Train net output #0: loss = 0.146201 (* 1 = 0.146201 loss)
I0428 19:49:56.345340 26887 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:56.435772 26887 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:56.490659 26894 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:56.491426 26887 solver.cpp:398]     Test net output #0: accuracy = 0.9487
I0428 19:49:56.491456 26887 solver.cpp:398]     Test net output #1: loss = 0.178912 (* 1 = 0.178912 loss)
I0428 19:49:56.492368 26887 solver.cpp:219] Iteration 500 (680.128 iter/s, 0.147031s/100 iters), loss = 0.164501
I0428 19:49:56.492400 26887 solver.cpp:238]     Train net output #0: loss = 0.164501 (* 1 = 0.164501 loss)
I0428 19:49:56.492411 26887 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:56.579906 26887 solver.cpp:219] Iteration 600 (1142.9 iter/s, 0.0874967s/100 iters), loss = 0.150095
I0428 19:49:56.579943 26887 solver.cpp:238]     Train net output #0: loss = 0.150095 (* 1 = 0.150095 loss)
I0428 19:49:56.579953 26887 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:56.669055 26887 solver.cpp:219] Iteration 700 (1122.33 iter/s, 0.0891003s/100 iters), loss = 0.254322
I0428 19:49:56.669097 26887 solver.cpp:238]     Train net output #0: loss = 0.254322 (* 1 = 0.254322 loss)
I0428 19:49:56.669107 26887 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:56.755913 26887 solver.cpp:219] Iteration 800 (1152 iter/s, 0.0868057s/100 iters), loss = 0.267607
I0428 19:49:56.755950 26887 solver.cpp:238]     Train net output #0: loss = 0.267607 (* 1 = 0.267607 loss)
I0428 19:49:56.755959 26887 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:56.828393 26887 solver.cpp:219] Iteration 900 (1380.55 iter/s, 0.0724347s/100 iters), loss = 0.363216
I0428 19:49:56.828423 26887 solver.cpp:238]     Train net output #0: loss = 0.363216 (* 1 = 0.363216 loss)
I0428 19:49:56.828430 26887 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:56.852339 26893 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:56.899049 26887 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:56.899734 26887 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:56.900156 26887 solver.cpp:311] Iteration 1000, loss = 0.248206
I0428 19:49:56.900176 26887 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:56.952917 26894 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:56.953411 26887 solver.cpp:398]     Test net output #0: accuracy = 0.9645
I0428 19:49:56.953433 26887 solver.cpp:398]     Test net output #1: loss = 0.112588 (* 1 = 0.112588 loss)
I0428 19:49:56.953439 26887 solver.cpp:316] Optimization Done.
I0428 19:49:56.953443 26887 caffe.cpp:259] Optimization Done.
