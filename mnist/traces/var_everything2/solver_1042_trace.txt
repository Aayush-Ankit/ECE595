I0428 20:06:57.192670 30992 caffe.cpp:218] Using GPUs 0
I0428 20:06:57.230263 30992 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:57.683107 30992 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1042.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:57.683321 30992 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1042.prototxt
I0428 20:06:57.684036 30992 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:57.684067 30992 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:57.684150 30992 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:57.684216 30992 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:57.684322 30992 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:57.684350 30992 net.cpp:86] Creating Layer mnist
I0428 20:06:57.684360 30992 net.cpp:382] mnist -> data
I0428 20:06:57.684401 30992 net.cpp:382] mnist -> label
I0428 20:06:57.685358 30992 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:57.687587 30992 net.cpp:124] Setting up mnist
I0428 20:06:57.687649 30992 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:57.687657 30992 net.cpp:131] Top shape: 64 (64)
I0428 20:06:57.687660 30992 net.cpp:139] Memory required for data: 200960
I0428 20:06:57.687666 30992 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:57.687680 30992 net.cpp:86] Creating Layer conv0
I0428 20:06:57.687698 30992 net.cpp:408] conv0 <- data
I0428 20:06:57.687708 30992 net.cpp:382] conv0 -> conv0
I0428 20:06:57.924018 30992 net.cpp:124] Setting up conv0
I0428 20:06:57.924060 30992 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:57.924064 30992 net.cpp:139] Memory required for data: 3887360
I0428 20:06:57.924077 30992 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:57.924089 30992 net.cpp:86] Creating Layer pool0
I0428 20:06:57.924093 30992 net.cpp:408] pool0 <- conv0
I0428 20:06:57.924098 30992 net.cpp:382] pool0 -> pool0
I0428 20:06:57.924173 30992 net.cpp:124] Setting up pool0
I0428 20:06:57.924178 30992 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:57.924181 30992 net.cpp:139] Memory required for data: 4808960
I0428 20:06:57.924185 30992 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:57.924196 30992 net.cpp:86] Creating Layer conv1
I0428 20:06:57.924198 30992 net.cpp:408] conv1 <- pool0
I0428 20:06:57.924203 30992 net.cpp:382] conv1 -> conv1
I0428 20:06:57.927108 30992 net.cpp:124] Setting up conv1
I0428 20:06:57.927137 30992 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:57.927141 30992 net.cpp:139] Memory required for data: 4890880
I0428 20:06:57.927148 30992 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:57.927156 30992 net.cpp:86] Creating Layer pool1
I0428 20:06:57.927160 30992 net.cpp:408] pool1 <- conv1
I0428 20:06:57.927166 30992 net.cpp:382] pool1 -> pool1
I0428 20:06:57.927218 30992 net.cpp:124] Setting up pool1
I0428 20:06:57.927223 30992 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:57.927225 30992 net.cpp:139] Memory required for data: 4911360
I0428 20:06:57.927228 30992 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:57.927235 30992 net.cpp:86] Creating Layer ip1
I0428 20:06:57.927238 30992 net.cpp:408] ip1 <- pool1
I0428 20:06:57.927242 30992 net.cpp:382] ip1 -> ip1
I0428 20:06:57.927340 30992 net.cpp:124] Setting up ip1
I0428 20:06:57.927347 30992 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:57.927350 30992 net.cpp:139] Memory required for data: 4917760
I0428 20:06:57.927357 30992 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:57.927361 30992 net.cpp:86] Creating Layer relu1
I0428 20:06:57.927366 30992 net.cpp:408] relu1 <- ip1
I0428 20:06:57.927368 30992 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:57.927523 30992 net.cpp:124] Setting up relu1
I0428 20:06:57.927531 30992 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:57.927534 30992 net.cpp:139] Memory required for data: 4924160
I0428 20:06:57.927537 30992 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:57.927543 30992 net.cpp:86] Creating Layer ip2
I0428 20:06:57.927546 30992 net.cpp:408] ip2 <- ip1
I0428 20:06:57.927551 30992 net.cpp:382] ip2 -> ip2
I0428 20:06:57.927649 30992 net.cpp:124] Setting up ip2
I0428 20:06:57.927656 30992 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:57.927659 30992 net.cpp:139] Memory required for data: 4936960
I0428 20:06:57.927664 30992 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:57.927670 30992 net.cpp:86] Creating Layer relu2
I0428 20:06:57.927672 30992 net.cpp:408] relu2 <- ip2
I0428 20:06:57.927676 30992 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:57.928400 30992 net.cpp:124] Setting up relu2
I0428 20:06:57.928413 30992 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:57.928432 30992 net.cpp:139] Memory required for data: 4949760
I0428 20:06:57.928436 30992 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:57.928442 30992 net.cpp:86] Creating Layer ip3
I0428 20:06:57.928445 30992 net.cpp:408] ip3 <- ip2
I0428 20:06:57.928452 30992 net.cpp:382] ip3 -> ip3
I0428 20:06:57.928550 30992 net.cpp:124] Setting up ip3
I0428 20:06:57.928558 30992 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:57.928560 30992 net.cpp:139] Memory required for data: 4952320
I0428 20:06:57.928568 30992 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:57.928573 30992 net.cpp:86] Creating Layer relu3
I0428 20:06:57.928576 30992 net.cpp:408] relu3 <- ip3
I0428 20:06:57.928580 30992 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:57.928741 30992 net.cpp:124] Setting up relu3
I0428 20:06:57.928750 30992 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:57.928752 30992 net.cpp:139] Memory required for data: 4954880
I0428 20:06:57.928755 30992 layer_factory.hpp:77] Creating layer loss
I0428 20:06:57.928761 30992 net.cpp:86] Creating Layer loss
I0428 20:06:57.928764 30992 net.cpp:408] loss <- ip3
I0428 20:06:57.928768 30992 net.cpp:408] loss <- label
I0428 20:06:57.928773 30992 net.cpp:382] loss -> loss
I0428 20:06:57.928787 30992 layer_factory.hpp:77] Creating layer loss
I0428 20:06:57.929039 30992 net.cpp:124] Setting up loss
I0428 20:06:57.929050 30992 net.cpp:131] Top shape: (1)
I0428 20:06:57.929054 30992 net.cpp:134]     with loss weight 1
I0428 20:06:57.929074 30992 net.cpp:139] Memory required for data: 4954884
I0428 20:06:57.929078 30992 net.cpp:200] loss needs backward computation.
I0428 20:06:57.929081 30992 net.cpp:200] relu3 needs backward computation.
I0428 20:06:57.929085 30992 net.cpp:200] ip3 needs backward computation.
I0428 20:06:57.929088 30992 net.cpp:200] relu2 needs backward computation.
I0428 20:06:57.929090 30992 net.cpp:200] ip2 needs backward computation.
I0428 20:06:57.929093 30992 net.cpp:200] relu1 needs backward computation.
I0428 20:06:57.929107 30992 net.cpp:200] ip1 needs backward computation.
I0428 20:06:57.929111 30992 net.cpp:200] pool1 needs backward computation.
I0428 20:06:57.929113 30992 net.cpp:200] conv1 needs backward computation.
I0428 20:06:57.929116 30992 net.cpp:200] pool0 needs backward computation.
I0428 20:06:57.929119 30992 net.cpp:200] conv0 needs backward computation.
I0428 20:06:57.929122 30992 net.cpp:202] mnist does not need backward computation.
I0428 20:06:57.929126 30992 net.cpp:244] This network produces output loss
I0428 20:06:57.929148 30992 net.cpp:257] Network initialization done.
I0428 20:06:57.929451 30992 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1042.prototxt
I0428 20:06:57.929477 30992 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:57.929579 30992 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:57.929657 30992 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:57.929702 30992 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:57.929713 30992 net.cpp:86] Creating Layer mnist
I0428 20:06:57.929718 30992 net.cpp:382] mnist -> data
I0428 20:06:57.929725 30992 net.cpp:382] mnist -> label
I0428 20:06:57.929807 30992 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:57.931759 30992 net.cpp:124] Setting up mnist
I0428 20:06:57.931772 30992 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:57.931793 30992 net.cpp:131] Top shape: 100 (100)
I0428 20:06:57.931797 30992 net.cpp:139] Memory required for data: 314000
I0428 20:06:57.931799 30992 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:57.931807 30992 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:57.931810 30992 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:57.931814 30992 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:57.931821 30992 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:57.931907 30992 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:57.931926 30992 net.cpp:131] Top shape: 100 (100)
I0428 20:06:57.931929 30992 net.cpp:131] Top shape: 100 (100)
I0428 20:06:57.931932 30992 net.cpp:139] Memory required for data: 314800
I0428 20:06:57.931936 30992 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:57.931943 30992 net.cpp:86] Creating Layer conv0
I0428 20:06:57.931946 30992 net.cpp:408] conv0 <- data
I0428 20:06:57.931951 30992 net.cpp:382] conv0 -> conv0
I0428 20:06:57.933531 30992 net.cpp:124] Setting up conv0
I0428 20:06:57.933558 30992 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:57.933562 30992 net.cpp:139] Memory required for data: 6074800
I0428 20:06:57.933570 30992 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:57.933578 30992 net.cpp:86] Creating Layer pool0
I0428 20:06:57.933583 30992 net.cpp:408] pool0 <- conv0
I0428 20:06:57.933588 30992 net.cpp:382] pool0 -> pool0
I0428 20:06:57.933652 30992 net.cpp:124] Setting up pool0
I0428 20:06:57.933657 30992 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:57.933660 30992 net.cpp:139] Memory required for data: 7514800
I0428 20:06:57.933662 30992 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:57.933670 30992 net.cpp:86] Creating Layer conv1
I0428 20:06:57.933675 30992 net.cpp:408] conv1 <- pool0
I0428 20:06:57.933679 30992 net.cpp:382] conv1 -> conv1
I0428 20:06:57.935546 30992 net.cpp:124] Setting up conv1
I0428 20:06:57.935573 30992 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:57.935578 30992 net.cpp:139] Memory required for data: 7642800
I0428 20:06:57.935586 30992 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:57.935592 30992 net.cpp:86] Creating Layer pool1
I0428 20:06:57.935596 30992 net.cpp:408] pool1 <- conv1
I0428 20:06:57.935601 30992 net.cpp:382] pool1 -> pool1
I0428 20:06:57.935672 30992 net.cpp:124] Setting up pool1
I0428 20:06:57.935681 30992 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:57.935684 30992 net.cpp:139] Memory required for data: 7674800
I0428 20:06:57.935688 30992 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:57.935693 30992 net.cpp:86] Creating Layer ip1
I0428 20:06:57.935696 30992 net.cpp:408] ip1 <- pool1
I0428 20:06:57.935701 30992 net.cpp:382] ip1 -> ip1
I0428 20:06:57.935803 30992 net.cpp:124] Setting up ip1
I0428 20:06:57.935811 30992 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:57.935825 30992 net.cpp:139] Memory required for data: 7684800
I0428 20:06:57.935832 30992 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:57.935837 30992 net.cpp:86] Creating Layer relu1
I0428 20:06:57.935840 30992 net.cpp:408] relu1 <- ip1
I0428 20:06:57.935845 30992 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:57.936000 30992 net.cpp:124] Setting up relu1
I0428 20:06:57.936010 30992 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:57.936014 30992 net.cpp:139] Memory required for data: 7694800
I0428 20:06:57.936017 30992 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:57.936024 30992 net.cpp:86] Creating Layer ip2
I0428 20:06:57.936028 30992 net.cpp:408] ip2 <- ip1
I0428 20:06:57.936033 30992 net.cpp:382] ip2 -> ip2
I0428 20:06:57.936136 30992 net.cpp:124] Setting up ip2
I0428 20:06:57.936146 30992 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:57.936151 30992 net.cpp:139] Memory required for data: 7714800
I0428 20:06:57.936157 30992 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:57.936161 30992 net.cpp:86] Creating Layer relu2
I0428 20:06:57.936164 30992 net.cpp:408] relu2 <- ip2
I0428 20:06:57.936169 30992 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:57.936380 30992 net.cpp:124] Setting up relu2
I0428 20:06:57.936394 30992 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:57.936398 30992 net.cpp:139] Memory required for data: 7734800
I0428 20:06:57.936401 30992 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:57.936408 30992 net.cpp:86] Creating Layer ip3
I0428 20:06:57.936410 30992 net.cpp:408] ip3 <- ip2
I0428 20:06:57.936416 30992 net.cpp:382] ip3 -> ip3
I0428 20:06:57.936542 30992 net.cpp:124] Setting up ip3
I0428 20:06:57.936552 30992 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:57.936554 30992 net.cpp:139] Memory required for data: 7738800
I0428 20:06:57.936563 30992 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:57.936568 30992 net.cpp:86] Creating Layer relu3
I0428 20:06:57.936571 30992 net.cpp:408] relu3 <- ip3
I0428 20:06:57.936576 30992 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:57.937386 30992 net.cpp:124] Setting up relu3
I0428 20:06:57.937398 30992 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:57.937417 30992 net.cpp:139] Memory required for data: 7742800
I0428 20:06:57.937420 30992 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:57.937425 30992 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:57.937428 30992 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:57.937434 30992 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:57.937441 30992 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:57.937476 30992 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:57.937482 30992 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:57.937489 30992 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:57.937492 30992 net.cpp:139] Memory required for data: 7750800
I0428 20:06:57.937495 30992 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:57.937500 30992 net.cpp:86] Creating Layer accuracy
I0428 20:06:57.937503 30992 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:57.937507 30992 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:57.937511 30992 net.cpp:382] accuracy -> accuracy
I0428 20:06:57.937530 30992 net.cpp:124] Setting up accuracy
I0428 20:06:57.937533 30992 net.cpp:131] Top shape: (1)
I0428 20:06:57.937536 30992 net.cpp:139] Memory required for data: 7750804
I0428 20:06:57.937538 30992 layer_factory.hpp:77] Creating layer loss
I0428 20:06:57.937542 30992 net.cpp:86] Creating Layer loss
I0428 20:06:57.937544 30992 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:57.937548 30992 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:57.937552 30992 net.cpp:382] loss -> loss
I0428 20:06:57.937557 30992 layer_factory.hpp:77] Creating layer loss
I0428 20:06:57.937783 30992 net.cpp:124] Setting up loss
I0428 20:06:57.937791 30992 net.cpp:131] Top shape: (1)
I0428 20:06:57.937794 30992 net.cpp:134]     with loss weight 1
I0428 20:06:57.937800 30992 net.cpp:139] Memory required for data: 7750808
I0428 20:06:57.937814 30992 net.cpp:200] loss needs backward computation.
I0428 20:06:57.937819 30992 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:57.937822 30992 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:57.937825 30992 net.cpp:200] relu3 needs backward computation.
I0428 20:06:57.937829 30992 net.cpp:200] ip3 needs backward computation.
I0428 20:06:57.937830 30992 net.cpp:200] relu2 needs backward computation.
I0428 20:06:57.937834 30992 net.cpp:200] ip2 needs backward computation.
I0428 20:06:57.937836 30992 net.cpp:200] relu1 needs backward computation.
I0428 20:06:57.937839 30992 net.cpp:200] ip1 needs backward computation.
I0428 20:06:57.937841 30992 net.cpp:200] pool1 needs backward computation.
I0428 20:06:57.937844 30992 net.cpp:200] conv1 needs backward computation.
I0428 20:06:57.937849 30992 net.cpp:200] pool0 needs backward computation.
I0428 20:06:57.937851 30992 net.cpp:200] conv0 needs backward computation.
I0428 20:06:57.937856 30992 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:57.937862 30992 net.cpp:202] mnist does not need backward computation.
I0428 20:06:57.937866 30992 net.cpp:244] This network produces output accuracy
I0428 20:06:57.937887 30992 net.cpp:244] This network produces output loss
I0428 20:06:57.937904 30992 net.cpp:257] Network initialization done.
I0428 20:06:57.937988 30992 solver.cpp:56] Solver scaffolding done.
I0428 20:06:57.938333 30992 caffe.cpp:248] Starting Optimization
I0428 20:06:57.938339 30992 solver.cpp:273] Solving LeNet
I0428 20:06:57.938343 30992 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:57.939112 30992 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:57.944134 30992 blocking_queue.cpp:49] Waiting for data
I0428 20:06:58.017123 30999 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:58.017737 30992 solver.cpp:398]     Test net output #0: accuracy = 0.1165
I0428 20:06:58.017773 30992 solver.cpp:398]     Test net output #1: loss = 2.29966 (* 1 = 2.29966 loss)
I0428 20:06:58.021313 30992 solver.cpp:219] Iteration 0 (0 iter/s, 0.0829317s/100 iters), loss = 2.31574
I0428 20:06:58.021351 30992 solver.cpp:238]     Train net output #0: loss = 2.31574 (* 1 = 2.31574 loss)
I0428 20:06:58.021363 30992 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:58.110819 30992 solver.cpp:219] Iteration 100 (1117.85 iter/s, 0.0894577s/100 iters), loss = 0.624906
I0428 20:06:58.110860 30992 solver.cpp:238]     Train net output #0: loss = 0.624906 (* 1 = 0.624906 loss)
I0428 20:06:58.110867 30992 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:58.199898 30992 solver.cpp:219] Iteration 200 (1123.05 iter/s, 0.0890429s/100 iters), loss = 0.529371
I0428 20:06:58.199937 30992 solver.cpp:238]     Train net output #0: loss = 0.529371 (* 1 = 0.529371 loss)
I0428 20:06:58.199944 30992 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:58.288353 30992 solver.cpp:219] Iteration 300 (1131.34 iter/s, 0.0883907s/100 iters), loss = 0.5517
I0428 20:06:58.288394 30992 solver.cpp:238]     Train net output #0: loss = 0.5517 (* 1 = 0.5517 loss)
I0428 20:06:58.288403 30992 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:58.376698 30992 solver.cpp:219] Iteration 400 (1132.57 iter/s, 0.0882944s/100 iters), loss = 0.276452
I0428 20:06:58.376736 30992 solver.cpp:238]     Train net output #0: loss = 0.276452 (* 1 = 0.276452 loss)
I0428 20:06:58.376742 30992 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:58.464153 30992 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:58.518533 30999 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:58.519117 30992 solver.cpp:398]     Test net output #0: accuracy = 0.8561
I0428 20:06:58.519150 30992 solver.cpp:398]     Test net output #1: loss = 0.388595 (* 1 = 0.388595 loss)
I0428 20:06:58.520033 30992 solver.cpp:219] Iteration 500 (697.834 iter/s, 0.1433s/100 iters), loss = 0.313581
I0428 20:06:58.520084 30992 solver.cpp:238]     Train net output #0: loss = 0.313581 (* 1 = 0.313581 loss)
I0428 20:06:58.520107 30992 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:58.608388 30992 solver.cpp:219] Iteration 600 (1132.57 iter/s, 0.0882944s/100 iters), loss = 0.246115
I0428 20:06:58.608428 30992 solver.cpp:238]     Train net output #0: loss = 0.246115 (* 1 = 0.246115 loss)
I0428 20:06:58.608450 30992 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:58.696557 30992 solver.cpp:219] Iteration 700 (1134.81 iter/s, 0.0881203s/100 iters), loss = 0.574793
I0428 20:06:58.696599 30992 solver.cpp:238]     Train net output #0: loss = 0.574793 (* 1 = 0.574793 loss)
I0428 20:06:58.696604 30992 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:58.783432 30992 solver.cpp:219] Iteration 800 (1151.54 iter/s, 0.0868405s/100 iters), loss = 0.463048
I0428 20:06:58.783457 30992 solver.cpp:238]     Train net output #0: loss = 0.463048 (* 1 = 0.463048 loss)
I0428 20:06:58.783463 30992 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:58.869606 30992 solver.cpp:219] Iteration 900 (1160.92 iter/s, 0.0861389s/100 iters), loss = 0.439528
I0428 20:06:58.869645 30992 solver.cpp:238]     Train net output #0: loss = 0.439528 (* 1 = 0.439528 loss)
I0428 20:06:58.869652 30992 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:58.898458 30998 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:58.954823 30992 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:58.955606 30992 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:58.956202 30992 solver.cpp:311] Iteration 1000, loss = 0.473767
I0428 20:06:58.956218 30992 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:59.010077 30999 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:59.011555 30992 solver.cpp:398]     Test net output #0: accuracy = 0.8665
I0428 20:06:59.011577 30992 solver.cpp:398]     Test net output #1: loss = 0.350032 (* 1 = 0.350032 loss)
I0428 20:06:59.011597 30992 solver.cpp:316] Optimization Done.
I0428 20:06:59.011601 30992 caffe.cpp:259] Optimization Done.
