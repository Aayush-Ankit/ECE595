I0428 20:04:14.382372 30348 caffe.cpp:218] Using GPUs 0
I0428 20:04:14.412058 30348 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:14.853446 30348 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test968.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:14.853586 30348 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test968.prototxt
I0428 20:04:14.853941 30348 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:14.853987 30348 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:14.854068 30348 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:14.854130 30348 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:14.854210 30348 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:14.854230 30348 net.cpp:86] Creating Layer mnist
I0428 20:04:14.854236 30348 net.cpp:382] mnist -> data
I0428 20:04:14.854255 30348 net.cpp:382] mnist -> label
I0428 20:04:14.855258 30348 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:14.857506 30348 net.cpp:124] Setting up mnist
I0428 20:04:14.857534 30348 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:14.857539 30348 net.cpp:131] Top shape: 64 (64)
I0428 20:04:14.857542 30348 net.cpp:139] Memory required for data: 200960
I0428 20:04:14.857548 30348 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:14.857592 30348 net.cpp:86] Creating Layer conv0
I0428 20:04:14.857610 30348 net.cpp:408] conv0 <- data
I0428 20:04:14.857620 30348 net.cpp:382] conv0 -> conv0
I0428 20:04:15.082211 30348 net.cpp:124] Setting up conv0
I0428 20:04:15.082236 30348 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:15.082239 30348 net.cpp:139] Memory required for data: 1675520
I0428 20:04:15.082252 30348 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:15.082264 30348 net.cpp:86] Creating Layer pool0
I0428 20:04:15.082268 30348 net.cpp:408] pool0 <- conv0
I0428 20:04:15.082273 30348 net.cpp:382] pool0 -> pool0
I0428 20:04:15.082335 30348 net.cpp:124] Setting up pool0
I0428 20:04:15.082340 30348 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:15.082343 30348 net.cpp:139] Memory required for data: 2044160
I0428 20:04:15.082346 30348 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:15.082356 30348 net.cpp:86] Creating Layer conv1
I0428 20:04:15.082360 30348 net.cpp:408] conv1 <- pool0
I0428 20:04:15.082365 30348 net.cpp:382] conv1 -> conv1
I0428 20:04:15.084408 30348 net.cpp:124] Setting up conv1
I0428 20:04:15.084439 30348 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:15.084444 30348 net.cpp:139] Memory required for data: 3682560
I0428 20:04:15.084451 30348 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:15.084475 30348 net.cpp:86] Creating Layer pool1
I0428 20:04:15.084477 30348 net.cpp:408] pool1 <- conv1
I0428 20:04:15.084497 30348 net.cpp:382] pool1 -> pool1
I0428 20:04:15.084548 30348 net.cpp:124] Setting up pool1
I0428 20:04:15.084561 30348 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:15.084565 30348 net.cpp:139] Memory required for data: 4092160
I0428 20:04:15.084568 30348 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:15.084589 30348 net.cpp:86] Creating Layer ip1
I0428 20:04:15.084592 30348 net.cpp:408] ip1 <- pool1
I0428 20:04:15.084597 30348 net.cpp:382] ip1 -> ip1
I0428 20:04:15.086230 30348 net.cpp:124] Setting up ip1
I0428 20:04:15.086242 30348 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:15.086261 30348 net.cpp:139] Memory required for data: 4104960
I0428 20:04:15.086269 30348 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:15.086275 30348 net.cpp:86] Creating Layer relu1
I0428 20:04:15.086279 30348 net.cpp:408] relu1 <- ip1
I0428 20:04:15.086284 30348 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:15.086477 30348 net.cpp:124] Setting up relu1
I0428 20:04:15.086486 30348 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:15.086489 30348 net.cpp:139] Memory required for data: 4117760
I0428 20:04:15.086493 30348 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:15.086499 30348 net.cpp:86] Creating Layer ip2
I0428 20:04:15.086503 30348 net.cpp:408] ip2 <- ip1
I0428 20:04:15.086508 30348 net.cpp:382] ip2 -> ip2
I0428 20:04:15.086617 30348 net.cpp:124] Setting up ip2
I0428 20:04:15.086624 30348 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:15.086627 30348 net.cpp:139] Memory required for data: 4120320
I0428 20:04:15.086632 30348 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:15.086638 30348 net.cpp:86] Creating Layer relu2
I0428 20:04:15.086642 30348 net.cpp:408] relu2 <- ip2
I0428 20:04:15.086647 30348 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:15.087399 30348 net.cpp:124] Setting up relu2
I0428 20:04:15.087412 30348 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:15.087431 30348 net.cpp:139] Memory required for data: 4122880
I0428 20:04:15.087435 30348 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:15.087441 30348 net.cpp:86] Creating Layer ip3
I0428 20:04:15.087446 30348 net.cpp:408] ip3 <- ip2
I0428 20:04:15.087466 30348 net.cpp:382] ip3 -> ip3
I0428 20:04:15.087571 30348 net.cpp:124] Setting up ip3
I0428 20:04:15.087579 30348 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:15.087582 30348 net.cpp:139] Memory required for data: 4125440
I0428 20:04:15.087589 30348 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:15.087594 30348 net.cpp:86] Creating Layer relu3
I0428 20:04:15.087597 30348 net.cpp:408] relu3 <- ip3
I0428 20:04:15.087616 30348 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:15.087796 30348 net.cpp:124] Setting up relu3
I0428 20:04:15.087805 30348 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:15.087808 30348 net.cpp:139] Memory required for data: 4128000
I0428 20:04:15.087811 30348 layer_factory.hpp:77] Creating layer loss
I0428 20:04:15.087817 30348 net.cpp:86] Creating Layer loss
I0428 20:04:15.087821 30348 net.cpp:408] loss <- ip3
I0428 20:04:15.087826 30348 net.cpp:408] loss <- label
I0428 20:04:15.087831 30348 net.cpp:382] loss -> loss
I0428 20:04:15.087848 30348 layer_factory.hpp:77] Creating layer loss
I0428 20:04:15.088089 30348 net.cpp:124] Setting up loss
I0428 20:04:15.088098 30348 net.cpp:131] Top shape: (1)
I0428 20:04:15.088100 30348 net.cpp:134]     with loss weight 1
I0428 20:04:15.088114 30348 net.cpp:139] Memory required for data: 4128004
I0428 20:04:15.088117 30348 net.cpp:200] loss needs backward computation.
I0428 20:04:15.088120 30348 net.cpp:200] relu3 needs backward computation.
I0428 20:04:15.088124 30348 net.cpp:200] ip3 needs backward computation.
I0428 20:04:15.088126 30348 net.cpp:200] relu2 needs backward computation.
I0428 20:04:15.088129 30348 net.cpp:200] ip2 needs backward computation.
I0428 20:04:15.088131 30348 net.cpp:200] relu1 needs backward computation.
I0428 20:04:15.088135 30348 net.cpp:200] ip1 needs backward computation.
I0428 20:04:15.088136 30348 net.cpp:200] pool1 needs backward computation.
I0428 20:04:15.088140 30348 net.cpp:200] conv1 needs backward computation.
I0428 20:04:15.088142 30348 net.cpp:200] pool0 needs backward computation.
I0428 20:04:15.088145 30348 net.cpp:200] conv0 needs backward computation.
I0428 20:04:15.088150 30348 net.cpp:202] mnist does not need backward computation.
I0428 20:04:15.088151 30348 net.cpp:244] This network produces output loss
I0428 20:04:15.088160 30348 net.cpp:257] Network initialization done.
I0428 20:04:15.088502 30348 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test968.prototxt
I0428 20:04:15.088544 30348 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:15.088645 30348 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:15.088731 30348 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:15.088786 30348 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:15.088824 30348 net.cpp:86] Creating Layer mnist
I0428 20:04:15.088845 30348 net.cpp:382] mnist -> data
I0428 20:04:15.088853 30348 net.cpp:382] mnist -> label
I0428 20:04:15.088968 30348 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:15.090180 30348 net.cpp:124] Setting up mnist
I0428 20:04:15.090209 30348 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:15.090212 30348 net.cpp:131] Top shape: 100 (100)
I0428 20:04:15.090215 30348 net.cpp:139] Memory required for data: 314000
I0428 20:04:15.090219 30348 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:15.090255 30348 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:15.090258 30348 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:15.090263 30348 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:15.090270 30348 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:15.090313 30348 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:15.090319 30348 net.cpp:131] Top shape: 100 (100)
I0428 20:04:15.090322 30348 net.cpp:131] Top shape: 100 (100)
I0428 20:04:15.090325 30348 net.cpp:139] Memory required for data: 314800
I0428 20:04:15.090327 30348 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:15.090337 30348 net.cpp:86] Creating Layer conv0
I0428 20:04:15.090339 30348 net.cpp:408] conv0 <- data
I0428 20:04:15.090345 30348 net.cpp:382] conv0 -> conv0
I0428 20:04:15.092146 30348 net.cpp:124] Setting up conv0
I0428 20:04:15.092159 30348 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:15.092178 30348 net.cpp:139] Memory required for data: 2618800
I0428 20:04:15.092193 30348 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:15.092200 30348 net.cpp:86] Creating Layer pool0
I0428 20:04:15.092203 30348 net.cpp:408] pool0 <- conv0
I0428 20:04:15.092208 30348 net.cpp:382] pool0 -> pool0
I0428 20:04:15.092244 30348 net.cpp:124] Setting up pool0
I0428 20:04:15.092249 30348 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:15.092252 30348 net.cpp:139] Memory required for data: 3194800
I0428 20:04:15.092254 30348 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:15.092264 30348 net.cpp:86] Creating Layer conv1
I0428 20:04:15.092267 30348 net.cpp:408] conv1 <- pool0
I0428 20:04:15.092273 30348 net.cpp:382] conv1 -> conv1
I0428 20:04:15.094074 30348 net.cpp:124] Setting up conv1
I0428 20:04:15.094100 30348 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:15.094105 30348 net.cpp:139] Memory required for data: 5754800
I0428 20:04:15.094125 30348 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:15.094131 30348 net.cpp:86] Creating Layer pool1
I0428 20:04:15.094135 30348 net.cpp:408] pool1 <- conv1
I0428 20:04:15.094141 30348 net.cpp:382] pool1 -> pool1
I0428 20:04:15.094177 30348 net.cpp:124] Setting up pool1
I0428 20:04:15.094182 30348 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:15.094187 30348 net.cpp:139] Memory required for data: 6394800
I0428 20:04:15.094189 30348 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:15.094202 30348 net.cpp:86] Creating Layer ip1
I0428 20:04:15.094204 30348 net.cpp:408] ip1 <- pool1
I0428 20:04:15.094208 30348 net.cpp:382] ip1 -> ip1
I0428 20:04:15.094754 30348 net.cpp:124] Setting up ip1
I0428 20:04:15.094761 30348 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:15.094795 30348 net.cpp:139] Memory required for data: 6414800
I0428 20:04:15.094815 30348 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:15.094820 30348 net.cpp:86] Creating Layer relu1
I0428 20:04:15.094825 30348 net.cpp:408] relu1 <- ip1
I0428 20:04:15.094830 30348 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:15.095039 30348 net.cpp:124] Setting up relu1
I0428 20:04:15.095047 30348 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:15.095051 30348 net.cpp:139] Memory required for data: 6434800
I0428 20:04:15.095054 30348 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:15.095062 30348 net.cpp:86] Creating Layer ip2
I0428 20:04:15.095065 30348 net.cpp:408] ip2 <- ip1
I0428 20:04:15.095070 30348 net.cpp:382] ip2 -> ip2
I0428 20:04:15.095208 30348 net.cpp:124] Setting up ip2
I0428 20:04:15.095216 30348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:15.095218 30348 net.cpp:139] Memory required for data: 6438800
I0428 20:04:15.095223 30348 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:15.095228 30348 net.cpp:86] Creating Layer relu2
I0428 20:04:15.095232 30348 net.cpp:408] relu2 <- ip2
I0428 20:04:15.095235 30348 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:15.095441 30348 net.cpp:124] Setting up relu2
I0428 20:04:15.095449 30348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:15.095453 30348 net.cpp:139] Memory required for data: 6442800
I0428 20:04:15.095458 30348 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:15.095463 30348 net.cpp:86] Creating Layer ip3
I0428 20:04:15.095465 30348 net.cpp:408] ip3 <- ip2
I0428 20:04:15.095470 30348 net.cpp:382] ip3 -> ip3
I0428 20:04:15.095574 30348 net.cpp:124] Setting up ip3
I0428 20:04:15.095580 30348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:15.095583 30348 net.cpp:139] Memory required for data: 6446800
I0428 20:04:15.095590 30348 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:15.095595 30348 net.cpp:86] Creating Layer relu3
I0428 20:04:15.095599 30348 net.cpp:408] relu3 <- ip3
I0428 20:04:15.095602 30348 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:15.096443 30348 net.cpp:124] Setting up relu3
I0428 20:04:15.096459 30348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:15.096462 30348 net.cpp:139] Memory required for data: 6450800
I0428 20:04:15.096467 30348 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:15.096472 30348 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:15.096474 30348 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:15.096480 30348 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:15.096487 30348 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:15.096537 30348 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:15.096550 30348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:15.096554 30348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:15.096556 30348 net.cpp:139] Memory required for data: 6458800
I0428 20:04:15.096560 30348 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:15.096565 30348 net.cpp:86] Creating Layer accuracy
I0428 20:04:15.096568 30348 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:15.096571 30348 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:15.096577 30348 net.cpp:382] accuracy -> accuracy
I0428 20:04:15.096585 30348 net.cpp:124] Setting up accuracy
I0428 20:04:15.096588 30348 net.cpp:131] Top shape: (1)
I0428 20:04:15.096591 30348 net.cpp:139] Memory required for data: 6458804
I0428 20:04:15.096593 30348 layer_factory.hpp:77] Creating layer loss
I0428 20:04:15.096597 30348 net.cpp:86] Creating Layer loss
I0428 20:04:15.096601 30348 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:15.096604 30348 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:15.096608 30348 net.cpp:382] loss -> loss
I0428 20:04:15.096613 30348 layer_factory.hpp:77] Creating layer loss
I0428 20:04:15.096860 30348 net.cpp:124] Setting up loss
I0428 20:04:15.096880 30348 net.cpp:131] Top shape: (1)
I0428 20:04:15.096884 30348 net.cpp:134]     with loss weight 1
I0428 20:04:15.096922 30348 net.cpp:139] Memory required for data: 6458808
I0428 20:04:15.096926 30348 net.cpp:200] loss needs backward computation.
I0428 20:04:15.096930 30348 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:15.096935 30348 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:15.096938 30348 net.cpp:200] relu3 needs backward computation.
I0428 20:04:15.096941 30348 net.cpp:200] ip3 needs backward computation.
I0428 20:04:15.096945 30348 net.cpp:200] relu2 needs backward computation.
I0428 20:04:15.096947 30348 net.cpp:200] ip2 needs backward computation.
I0428 20:04:15.096949 30348 net.cpp:200] relu1 needs backward computation.
I0428 20:04:15.096959 30348 net.cpp:200] ip1 needs backward computation.
I0428 20:04:15.096971 30348 net.cpp:200] pool1 needs backward computation.
I0428 20:04:15.096974 30348 net.cpp:200] conv1 needs backward computation.
I0428 20:04:15.096978 30348 net.cpp:200] pool0 needs backward computation.
I0428 20:04:15.096982 30348 net.cpp:200] conv0 needs backward computation.
I0428 20:04:15.096985 30348 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:15.096989 30348 net.cpp:202] mnist does not need backward computation.
I0428 20:04:15.096992 30348 net.cpp:244] This network produces output accuracy
I0428 20:04:15.096995 30348 net.cpp:244] This network produces output loss
I0428 20:04:15.097007 30348 net.cpp:257] Network initialization done.
I0428 20:04:15.097069 30348 solver.cpp:56] Solver scaffolding done.
I0428 20:04:15.097482 30348 caffe.cpp:248] Starting Optimization
I0428 20:04:15.097487 30348 solver.cpp:273] Solving LeNet
I0428 20:04:15.097491 30348 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:15.098428 30348 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:15.103797 30348 blocking_queue.cpp:49] Waiting for data
I0428 20:04:15.174659 30355 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:15.175282 30348 solver.cpp:398]     Test net output #0: accuracy = 0.0654
I0428 20:04:15.175318 30348 solver.cpp:398]     Test net output #1: loss = 2.31186 (* 1 = 2.31186 loss)
I0428 20:04:15.178936 30348 solver.cpp:219] Iteration 0 (-9.99126e-43 iter/s, 0.0814019s/100 iters), loss = 2.32444
I0428 20:04:15.178959 30348 solver.cpp:238]     Train net output #0: loss = 2.32444 (* 1 = 2.32444 loss)
I0428 20:04:15.178970 30348 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:15.342058 30348 solver.cpp:219] Iteration 100 (613.188 iter/s, 0.163082s/100 iters), loss = 1.31321
I0428 20:04:15.342083 30348 solver.cpp:238]     Train net output #0: loss = 1.31321 (* 1 = 1.31321 loss)
I0428 20:04:15.342090 30348 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:15.501529 30348 solver.cpp:219] Iteration 200 (627.244 iter/s, 0.159428s/100 iters), loss = 0.466574
I0428 20:04:15.501595 30348 solver.cpp:238]     Train net output #0: loss = 0.466574 (* 1 = 0.466574 loss)
I0428 20:04:15.501601 30348 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:15.657908 30348 solver.cpp:219] Iteration 300 (639.786 iter/s, 0.156302s/100 iters), loss = 0.291401
I0428 20:04:15.657933 30348 solver.cpp:238]     Train net output #0: loss = 0.291401 (* 1 = 0.291401 loss)
I0428 20:04:15.657939 30348 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:15.813369 30348 solver.cpp:219] Iteration 400 (643.411 iter/s, 0.155422s/100 iters), loss = 0.227438
I0428 20:04:15.813408 30348 solver.cpp:238]     Train net output #0: loss = 0.227438 (* 1 = 0.227438 loss)
I0428 20:04:15.813415 30348 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:15.968127 30348 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:16.044203 30355 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:16.044895 30348 solver.cpp:398]     Test net output #0: accuracy = 0.9533
I0428 20:04:16.044919 30348 solver.cpp:398]     Test net output #1: loss = 0.151376 (* 1 = 0.151376 loss)
I0428 20:04:16.046537 30348 solver.cpp:219] Iteration 500 (428.949 iter/s, 0.233128s/100 iters), loss = 0.156952
I0428 20:04:16.046598 30348 solver.cpp:238]     Train net output #0: loss = 0.156952 (* 1 = 0.156952 loss)
I0428 20:04:16.046609 30348 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:16.205917 30348 solver.cpp:219] Iteration 600 (627.715 iter/s, 0.159308s/100 iters), loss = 0.0740436
I0428 20:04:16.205943 30348 solver.cpp:238]     Train net output #0: loss = 0.0740436 (* 1 = 0.0740436 loss)
I0428 20:04:16.205950 30348 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:16.356182 30348 solver.cpp:219] Iteration 700 (665.66 iter/s, 0.150227s/100 iters), loss = 0.265158
I0428 20:04:16.356209 30348 solver.cpp:238]     Train net output #0: loss = 0.265158 (* 1 = 0.265158 loss)
I0428 20:04:16.356215 30348 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:16.508137 30348 solver.cpp:219] Iteration 800 (658.26 iter/s, 0.151916s/100 iters), loss = 0.175054
I0428 20:04:16.508178 30348 solver.cpp:238]     Train net output #0: loss = 0.175054 (* 1 = 0.175054 loss)
I0428 20:04:16.508184 30348 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:16.659472 30348 solver.cpp:219] Iteration 900 (660.951 iter/s, 0.151297s/100 iters), loss = 0.15387
I0428 20:04:16.659499 30348 solver.cpp:238]     Train net output #0: loss = 0.15387 (* 1 = 0.15387 loss)
I0428 20:04:16.659505 30348 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:16.710345 30354 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:16.808455 30348 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:16.812922 30348 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:16.815101 30348 solver.cpp:311] Iteration 1000, loss = 0.0953129
I0428 20:04:16.815131 30348 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:16.890900 30355 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:16.891628 30348 solver.cpp:398]     Test net output #0: accuracy = 0.9752
I0428 20:04:16.891654 30348 solver.cpp:398]     Test net output #1: loss = 0.0806071 (* 1 = 0.0806071 loss)
I0428 20:04:16.891660 30348 solver.cpp:316] Optimization Done.
I0428 20:04:16.891665 30348 caffe.cpp:259] Optimization Done.
