I0428 19:39:10.143564 24231 caffe.cpp:218] Using GPUs 0
I0428 19:39:10.183431 24231 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:10.719478 24231 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test296.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:10.719621 24231 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test296.prototxt
I0428 19:39:10.720026 24231 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:10.720043 24231 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:10.720139 24231 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:10.720212 24231 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:10.720314 24231 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:10.720337 24231 net.cpp:86] Creating Layer mnist
I0428 19:39:10.720345 24231 net.cpp:382] mnist -> data
I0428 19:39:10.720367 24231 net.cpp:382] mnist -> label
I0428 19:39:10.721462 24231 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:10.724144 24231 net.cpp:124] Setting up mnist
I0428 19:39:10.724162 24231 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:10.724169 24231 net.cpp:131] Top shape: 64 (64)
I0428 19:39:10.724172 24231 net.cpp:139] Memory required for data: 200960
I0428 19:39:10.724180 24231 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:10.724195 24231 net.cpp:86] Creating Layer conv0
I0428 19:39:10.724218 24231 net.cpp:408] conv0 <- data
I0428 19:39:10.724231 24231 net.cpp:382] conv0 -> conv0
I0428 19:39:11.010392 24231 net.cpp:124] Setting up conv0
I0428 19:39:11.010422 24231 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:11.010427 24231 net.cpp:139] Memory required for data: 495872
I0428 19:39:11.010444 24231 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:11.010459 24231 net.cpp:86] Creating Layer pool0
I0428 19:39:11.010463 24231 net.cpp:408] pool0 <- conv0
I0428 19:39:11.010470 24231 net.cpp:382] pool0 -> pool0
I0428 19:39:11.010526 24231 net.cpp:124] Setting up pool0
I0428 19:39:11.010532 24231 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:11.010536 24231 net.cpp:139] Memory required for data: 569600
I0428 19:39:11.010540 24231 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:11.010552 24231 net.cpp:86] Creating Layer conv1
I0428 19:39:11.010556 24231 net.cpp:408] conv1 <- pool0
I0428 19:39:11.010565 24231 net.cpp:382] conv1 -> conv1
I0428 19:39:11.012723 24231 net.cpp:124] Setting up conv1
I0428 19:39:11.012740 24231 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:11.012745 24231 net.cpp:139] Memory required for data: 602368
I0428 19:39:11.012754 24231 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:11.012763 24231 net.cpp:86] Creating Layer pool1
I0428 19:39:11.012768 24231 net.cpp:408] pool1 <- conv1
I0428 19:39:11.012774 24231 net.cpp:382] pool1 -> pool1
I0428 19:39:11.012827 24231 net.cpp:124] Setting up pool1
I0428 19:39:11.012835 24231 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:11.012838 24231 net.cpp:139] Memory required for data: 610560
I0428 19:39:11.012841 24231 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:11.012851 24231 net.cpp:86] Creating Layer ip1
I0428 19:39:11.012856 24231 net.cpp:408] ip1 <- pool1
I0428 19:39:11.012861 24231 net.cpp:382] ip1 -> ip1
I0428 19:39:11.012982 24231 net.cpp:124] Setting up ip1
I0428 19:39:11.012994 24231 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:11.012997 24231 net.cpp:139] Memory required for data: 616960
I0428 19:39:11.013005 24231 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:11.013011 24231 net.cpp:86] Creating Layer relu1
I0428 19:39:11.013015 24231 net.cpp:408] relu1 <- ip1
I0428 19:39:11.013021 24231 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:11.013233 24231 net.cpp:124] Setting up relu1
I0428 19:39:11.013243 24231 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:11.013247 24231 net.cpp:139] Memory required for data: 623360
I0428 19:39:11.013250 24231 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:11.013259 24231 net.cpp:86] Creating Layer ip2
I0428 19:39:11.013262 24231 net.cpp:408] ip2 <- ip1
I0428 19:39:11.013269 24231 net.cpp:382] ip2 -> ip2
I0428 19:39:11.013386 24231 net.cpp:124] Setting up ip2
I0428 19:39:11.013393 24231 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:11.013397 24231 net.cpp:139] Memory required for data: 625920
I0428 19:39:11.013403 24231 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:11.013411 24231 net.cpp:86] Creating Layer relu2
I0428 19:39:11.013414 24231 net.cpp:408] relu2 <- ip2
I0428 19:39:11.013418 24231 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:11.014261 24231 net.cpp:124] Setting up relu2
I0428 19:39:11.014274 24231 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:11.014278 24231 net.cpp:139] Memory required for data: 628480
I0428 19:39:11.014282 24231 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:11.014292 24231 net.cpp:86] Creating Layer ip3
I0428 19:39:11.014297 24231 net.cpp:408] ip3 <- ip2
I0428 19:39:11.014302 24231 net.cpp:382] ip3 -> ip3
I0428 19:39:11.014426 24231 net.cpp:124] Setting up ip3
I0428 19:39:11.014436 24231 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:11.014438 24231 net.cpp:139] Memory required for data: 631040
I0428 19:39:11.014447 24231 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:11.014453 24231 net.cpp:86] Creating Layer relu3
I0428 19:39:11.014457 24231 net.cpp:408] relu3 <- ip3
I0428 19:39:11.014462 24231 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:11.014670 24231 net.cpp:124] Setting up relu3
I0428 19:39:11.014679 24231 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:11.014683 24231 net.cpp:139] Memory required for data: 633600
I0428 19:39:11.014688 24231 layer_factory.hpp:77] Creating layer loss
I0428 19:39:11.014694 24231 net.cpp:86] Creating Layer loss
I0428 19:39:11.014698 24231 net.cpp:408] loss <- ip3
I0428 19:39:11.014703 24231 net.cpp:408] loss <- label
I0428 19:39:11.014708 24231 net.cpp:382] loss -> loss
I0428 19:39:11.014724 24231 layer_factory.hpp:77] Creating layer loss
I0428 19:39:11.015007 24231 net.cpp:124] Setting up loss
I0428 19:39:11.015017 24231 net.cpp:131] Top shape: (1)
I0428 19:39:11.015020 24231 net.cpp:134]     with loss weight 1
I0428 19:39:11.015035 24231 net.cpp:139] Memory required for data: 633604
I0428 19:39:11.015039 24231 net.cpp:200] loss needs backward computation.
I0428 19:39:11.015043 24231 net.cpp:200] relu3 needs backward computation.
I0428 19:39:11.015046 24231 net.cpp:200] ip3 needs backward computation.
I0428 19:39:11.015049 24231 net.cpp:200] relu2 needs backward computation.
I0428 19:39:11.015053 24231 net.cpp:200] ip2 needs backward computation.
I0428 19:39:11.015056 24231 net.cpp:200] relu1 needs backward computation.
I0428 19:39:11.015059 24231 net.cpp:200] ip1 needs backward computation.
I0428 19:39:11.015063 24231 net.cpp:200] pool1 needs backward computation.
I0428 19:39:11.015066 24231 net.cpp:200] conv1 needs backward computation.
I0428 19:39:11.015069 24231 net.cpp:200] pool0 needs backward computation.
I0428 19:39:11.015074 24231 net.cpp:200] conv0 needs backward computation.
I0428 19:39:11.015077 24231 net.cpp:202] mnist does not need backward computation.
I0428 19:39:11.015080 24231 net.cpp:244] This network produces output loss
I0428 19:39:11.015092 24231 net.cpp:257] Network initialization done.
I0428 19:39:11.015473 24231 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test296.prototxt
I0428 19:39:11.015504 24231 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:11.015614 24231 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:11.015708 24231 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:11.015758 24231 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:11.015772 24231 net.cpp:86] Creating Layer mnist
I0428 19:39:11.015777 24231 net.cpp:382] mnist -> data
I0428 19:39:11.015789 24231 net.cpp:382] mnist -> label
I0428 19:39:11.015892 24231 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:11.018040 24231 net.cpp:124] Setting up mnist
I0428 19:39:11.018057 24231 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:11.018064 24231 net.cpp:131] Top shape: 100 (100)
I0428 19:39:11.018066 24231 net.cpp:139] Memory required for data: 314000
I0428 19:39:11.018070 24231 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:11.018079 24231 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:11.018082 24231 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:11.018090 24231 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:11.018098 24231 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:11.018183 24231 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:11.018193 24231 net.cpp:131] Top shape: 100 (100)
I0428 19:39:11.018198 24231 net.cpp:131] Top shape: 100 (100)
I0428 19:39:11.018200 24231 net.cpp:139] Memory required for data: 314800
I0428 19:39:11.018203 24231 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:11.018215 24231 net.cpp:86] Creating Layer conv0
I0428 19:39:11.018219 24231 net.cpp:408] conv0 <- data
I0428 19:39:11.018225 24231 net.cpp:382] conv0 -> conv0
I0428 19:39:11.020105 24231 net.cpp:124] Setting up conv0
I0428 19:39:11.020122 24231 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:11.020125 24231 net.cpp:139] Memory required for data: 775600
I0428 19:39:11.020138 24231 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:11.020145 24231 net.cpp:86] Creating Layer pool0
I0428 19:39:11.020150 24231 net.cpp:408] pool0 <- conv0
I0428 19:39:11.020157 24231 net.cpp:382] pool0 -> pool0
I0428 19:39:11.020200 24231 net.cpp:124] Setting up pool0
I0428 19:39:11.020207 24231 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:11.020211 24231 net.cpp:139] Memory required for data: 890800
I0428 19:39:11.020215 24231 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:11.020226 24231 net.cpp:86] Creating Layer conv1
I0428 19:39:11.020231 24231 net.cpp:408] conv1 <- pool0
I0428 19:39:11.020236 24231 net.cpp:382] conv1 -> conv1
I0428 19:39:11.021968 24231 net.cpp:124] Setting up conv1
I0428 19:39:11.021984 24231 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:11.021989 24231 net.cpp:139] Memory required for data: 942000
I0428 19:39:11.021999 24231 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:11.022006 24231 net.cpp:86] Creating Layer pool1
I0428 19:39:11.022011 24231 net.cpp:408] pool1 <- conv1
I0428 19:39:11.022018 24231 net.cpp:382] pool1 -> pool1
I0428 19:39:11.022063 24231 net.cpp:124] Setting up pool1
I0428 19:39:11.022068 24231 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:11.022073 24231 net.cpp:139] Memory required for data: 954800
I0428 19:39:11.022075 24231 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:11.022084 24231 net.cpp:86] Creating Layer ip1
I0428 19:39:11.022088 24231 net.cpp:408] ip1 <- pool1
I0428 19:39:11.022094 24231 net.cpp:382] ip1 -> ip1
I0428 19:39:11.022217 24231 net.cpp:124] Setting up ip1
I0428 19:39:11.022225 24231 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:11.022248 24231 net.cpp:139] Memory required for data: 964800
I0428 19:39:11.022258 24231 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:11.022264 24231 net.cpp:86] Creating Layer relu1
I0428 19:39:11.022267 24231 net.cpp:408] relu1 <- ip1
I0428 19:39:11.022274 24231 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:11.022507 24231 net.cpp:124] Setting up relu1
I0428 19:39:11.022519 24231 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:11.022522 24231 net.cpp:139] Memory required for data: 974800
I0428 19:39:11.022526 24231 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:11.022536 24231 net.cpp:86] Creating Layer ip2
I0428 19:39:11.022541 24231 net.cpp:408] ip2 <- ip1
I0428 19:39:11.022545 24231 net.cpp:382] ip2 -> ip2
I0428 19:39:11.022706 24231 net.cpp:124] Setting up ip2
I0428 19:39:11.022714 24231 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:11.022718 24231 net.cpp:139] Memory required for data: 978800
I0428 19:39:11.022725 24231 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:11.022732 24231 net.cpp:86] Creating Layer relu2
I0428 19:39:11.022737 24231 net.cpp:408] relu2 <- ip2
I0428 19:39:11.022742 24231 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:11.022927 24231 net.cpp:124] Setting up relu2
I0428 19:39:11.022936 24231 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:11.022939 24231 net.cpp:139] Memory required for data: 982800
I0428 19:39:11.022944 24231 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:11.022951 24231 net.cpp:86] Creating Layer ip3
I0428 19:39:11.022955 24231 net.cpp:408] ip3 <- ip2
I0428 19:39:11.022960 24231 net.cpp:382] ip3 -> ip3
I0428 19:39:11.023077 24231 net.cpp:124] Setting up ip3
I0428 19:39:11.023084 24231 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:11.023087 24231 net.cpp:139] Memory required for data: 986800
I0428 19:39:11.023097 24231 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:11.023103 24231 net.cpp:86] Creating Layer relu3
I0428 19:39:11.023108 24231 net.cpp:408] relu3 <- ip3
I0428 19:39:11.023113 24231 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:11.024032 24231 net.cpp:124] Setting up relu3
I0428 19:39:11.024047 24231 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:11.024051 24231 net.cpp:139] Memory required for data: 990800
I0428 19:39:11.024055 24231 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:11.024061 24231 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:11.024065 24231 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:11.024071 24231 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:11.024078 24231 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:11.024124 24231 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:11.024132 24231 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:11.024137 24231 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:11.024140 24231 net.cpp:139] Memory required for data: 998800
I0428 19:39:11.024143 24231 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:11.024150 24231 net.cpp:86] Creating Layer accuracy
I0428 19:39:11.024155 24231 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:11.024159 24231 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:11.024170 24231 net.cpp:382] accuracy -> accuracy
I0428 19:39:11.024179 24231 net.cpp:124] Setting up accuracy
I0428 19:39:11.024184 24231 net.cpp:131] Top shape: (1)
I0428 19:39:11.024189 24231 net.cpp:139] Memory required for data: 998804
I0428 19:39:11.024193 24231 layer_factory.hpp:77] Creating layer loss
I0428 19:39:11.024199 24231 net.cpp:86] Creating Layer loss
I0428 19:39:11.024204 24231 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:11.024207 24231 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:11.024212 24231 net.cpp:382] loss -> loss
I0428 19:39:11.024219 24231 layer_factory.hpp:77] Creating layer loss
I0428 19:39:11.024500 24231 net.cpp:124] Setting up loss
I0428 19:39:11.024511 24231 net.cpp:131] Top shape: (1)
I0428 19:39:11.024515 24231 net.cpp:134]     with loss weight 1
I0428 19:39:11.024523 24231 net.cpp:139] Memory required for data: 998808
I0428 19:39:11.024538 24231 net.cpp:200] loss needs backward computation.
I0428 19:39:11.024544 24231 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:11.024549 24231 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:11.024552 24231 net.cpp:200] relu3 needs backward computation.
I0428 19:39:11.024555 24231 net.cpp:200] ip3 needs backward computation.
I0428 19:39:11.024559 24231 net.cpp:200] relu2 needs backward computation.
I0428 19:39:11.024562 24231 net.cpp:200] ip2 needs backward computation.
I0428 19:39:11.024565 24231 net.cpp:200] relu1 needs backward computation.
I0428 19:39:11.024575 24231 net.cpp:200] ip1 needs backward computation.
I0428 19:39:11.024580 24231 net.cpp:200] pool1 needs backward computation.
I0428 19:39:11.024583 24231 net.cpp:200] conv1 needs backward computation.
I0428 19:39:11.024586 24231 net.cpp:200] pool0 needs backward computation.
I0428 19:39:11.024590 24231 net.cpp:200] conv0 needs backward computation.
I0428 19:39:11.024595 24231 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:11.024600 24231 net.cpp:202] mnist does not need backward computation.
I0428 19:39:11.024607 24231 net.cpp:244] This network produces output accuracy
I0428 19:39:11.024611 24231 net.cpp:244] This network produces output loss
I0428 19:39:11.024626 24231 net.cpp:257] Network initialization done.
I0428 19:39:11.024675 24231 solver.cpp:56] Solver scaffolding done.
I0428 19:39:11.025105 24231 caffe.cpp:248] Starting Optimization
I0428 19:39:11.025112 24231 solver.cpp:273] Solving LeNet
I0428 19:39:11.025115 24231 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:11.026077 24231 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:11.028827 24231 blocking_queue.cpp:49] Waiting for data
I0428 19:39:11.100543 24238 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:11.101019 24231 solver.cpp:398]     Test net output #0: accuracy = 0.0659
I0428 19:39:11.101042 24231 solver.cpp:398]     Test net output #1: loss = 2.31085 (* 1 = 2.31085 loss)
I0428 19:39:11.103035 24231 solver.cpp:219] Iteration 0 (-6.06123e-31 iter/s, 0.0778846s/100 iters), loss = 2.31313
I0428 19:39:11.103065 24231 solver.cpp:238]     Train net output #0: loss = 2.31313 (* 1 = 2.31313 loss)
I0428 19:39:11.103077 24231 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:11.177497 24231 solver.cpp:219] Iteration 100 (1343.72 iter/s, 0.0744202s/100 iters), loss = 2.13495
I0428 19:39:11.177528 24231 solver.cpp:238]     Train net output #0: loss = 2.13495 (* 1 = 2.13495 loss)
I0428 19:39:11.177536 24231 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:11.251626 24231 solver.cpp:219] Iteration 200 (1349.76 iter/s, 0.0740875s/100 iters), loss = 1.14472
I0428 19:39:11.251655 24231 solver.cpp:238]     Train net output #0: loss = 1.14472 (* 1 = 1.14472 loss)
I0428 19:39:11.251663 24231 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:11.325760 24231 solver.cpp:219] Iteration 300 (1349.61 iter/s, 0.0740956s/100 iters), loss = 1.68005
I0428 19:39:11.325789 24231 solver.cpp:238]     Train net output #0: loss = 1.68005 (* 1 = 1.68005 loss)
I0428 19:39:11.325796 24231 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:11.394644 24231 solver.cpp:219] Iteration 400 (1452.53 iter/s, 0.0688456s/100 iters), loss = 1.71008
I0428 19:39:11.394666 24231 solver.cpp:238]     Train net output #0: loss = 1.71008 (* 1 = 1.71008 loss)
I0428 19:39:11.394672 24231 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:11.460479 24231 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:11.505044 24238 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:11.505533 24231 solver.cpp:398]     Test net output #0: accuracy = 0.5547
I0428 19:39:11.505568 24231 solver.cpp:398]     Test net output #1: loss = 1.34692 (* 1 = 1.34692 loss)
I0428 19:39:11.506307 24231 solver.cpp:219] Iteration 500 (895.814 iter/s, 0.11163s/100 iters), loss = 1.43736
I0428 19:39:11.506346 24231 solver.cpp:238]     Train net output #0: loss = 1.43736 (* 1 = 1.43736 loss)
I0428 19:39:11.506366 24231 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:11.572860 24231 solver.cpp:219] Iteration 600 (1503.63 iter/s, 0.0665057s/100 iters), loss = 1.23511
I0428 19:39:11.572886 24231 solver.cpp:238]     Train net output #0: loss = 1.23511 (* 1 = 1.23511 loss)
I0428 19:39:11.572892 24231 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:11.638695 24231 solver.cpp:219] Iteration 700 (1519.78 iter/s, 0.0657992s/100 iters), loss = 1.13835
I0428 19:39:11.638733 24231 solver.cpp:238]     Train net output #0: loss = 1.13835 (* 1 = 1.13835 loss)
I0428 19:39:11.638738 24231 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:11.704867 24231 solver.cpp:219] Iteration 800 (1511.92 iter/s, 0.0661412s/100 iters), loss = 1.46499
I0428 19:39:11.704906 24231 solver.cpp:238]     Train net output #0: loss = 1.46499 (* 1 = 1.46499 loss)
I0428 19:39:11.704912 24231 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:11.771392 24231 solver.cpp:219] Iteration 900 (1503.91 iter/s, 0.0664934s/100 iters), loss = 1.39692
I0428 19:39:11.771430 24231 solver.cpp:238]     Train net output #0: loss = 1.39692 (* 1 = 1.39692 loss)
I0428 19:39:11.771436 24231 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:11.793704 24237 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:11.837565 24231 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:11.838227 24231 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:11.838637 24231 solver.cpp:311] Iteration 1000, loss = 1.26708
I0428 19:39:11.838665 24231 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:11.901284 24238 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:11.901746 24231 solver.cpp:398]     Test net output #0: accuracy = 0.5707
I0428 19:39:11.901779 24231 solver.cpp:398]     Test net output #1: loss = 1.28098 (* 1 = 1.28098 loss)
I0428 19:39:11.901783 24231 solver.cpp:316] Optimization Done.
I0428 19:39:11.901787 24231 caffe.cpp:259] Optimization Done.
