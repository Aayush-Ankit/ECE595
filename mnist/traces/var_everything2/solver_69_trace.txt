I0428 19:29:45.924419 22110 caffe.cpp:218] Using GPUs 0
I0428 19:29:45.960458 22110 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:46.428195 22110 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test69.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:46.428357 22110 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test69.prototxt
I0428 19:29:46.428635 22110 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:46.428649 22110 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:46.428714 22110 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:46.428769 22110 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:46.428887 22110 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:46.428908 22110 net.cpp:86] Creating Layer mnist
I0428 19:29:46.428915 22110 net.cpp:382] mnist -> data
I0428 19:29:46.428935 22110 net.cpp:382] mnist -> label
I0428 19:29:46.430016 22110 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:46.432268 22110 net.cpp:124] Setting up mnist
I0428 19:29:46.432298 22110 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:46.432303 22110 net.cpp:131] Top shape: 64 (64)
I0428 19:29:46.432307 22110 net.cpp:139] Memory required for data: 200960
I0428 19:29:46.432312 22110 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:46.432325 22110 net.cpp:86] Creating Layer conv0
I0428 19:29:46.432329 22110 net.cpp:408] conv0 <- data
I0428 19:29:46.432338 22110 net.cpp:382] conv0 -> conv0
I0428 19:29:46.662179 22110 net.cpp:124] Setting up conv0
I0428 19:29:46.662221 22110 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:46.662225 22110 net.cpp:139] Memory required for data: 495872
I0428 19:29:46.662240 22110 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:46.662253 22110 net.cpp:86] Creating Layer pool0
I0428 19:29:46.662276 22110 net.cpp:408] pool0 <- conv0
I0428 19:29:46.662281 22110 net.cpp:382] pool0 -> pool0
I0428 19:29:46.662328 22110 net.cpp:124] Setting up pool0
I0428 19:29:46.662343 22110 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:46.662346 22110 net.cpp:139] Memory required for data: 569600
I0428 19:29:46.662349 22110 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:46.662356 22110 net.cpp:86] Creating Layer ip1
I0428 19:29:46.662359 22110 net.cpp:408] ip1 <- pool0
I0428 19:29:46.662364 22110 net.cpp:382] ip1 -> ip1
I0428 19:29:46.663458 22110 net.cpp:124] Setting up ip1
I0428 19:29:46.663486 22110 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:46.663506 22110 net.cpp:139] Memory required for data: 582400
I0428 19:29:46.663513 22110 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:46.663521 22110 net.cpp:86] Creating Layer relu1
I0428 19:29:46.663524 22110 net.cpp:408] relu1 <- ip1
I0428 19:29:46.663529 22110 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:46.663700 22110 net.cpp:124] Setting up relu1
I0428 19:29:46.663710 22110 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:46.663713 22110 net.cpp:139] Memory required for data: 595200
I0428 19:29:46.663717 22110 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:46.663723 22110 net.cpp:86] Creating Layer ip2
I0428 19:29:46.663727 22110 net.cpp:408] ip2 <- ip1
I0428 19:29:46.663731 22110 net.cpp:382] ip2 -> ip2
I0428 19:29:46.663841 22110 net.cpp:124] Setting up ip2
I0428 19:29:46.663847 22110 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:46.663851 22110 net.cpp:139] Memory required for data: 597760
I0428 19:29:46.663857 22110 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:46.663862 22110 net.cpp:86] Creating Layer relu2
I0428 19:29:46.663866 22110 net.cpp:408] relu2 <- ip2
I0428 19:29:46.663869 22110 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:46.664623 22110 net.cpp:124] Setting up relu2
I0428 19:29:46.664651 22110 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:46.664654 22110 net.cpp:139] Memory required for data: 600320
I0428 19:29:46.664659 22110 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:46.664665 22110 net.cpp:86] Creating Layer ip3
I0428 19:29:46.664669 22110 net.cpp:408] ip3 <- ip2
I0428 19:29:46.664674 22110 net.cpp:382] ip3 -> ip3
I0428 19:29:46.664769 22110 net.cpp:124] Setting up ip3
I0428 19:29:46.664777 22110 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:46.664780 22110 net.cpp:139] Memory required for data: 602880
I0428 19:29:46.664785 22110 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:46.664791 22110 net.cpp:86] Creating Layer relu3
I0428 19:29:46.664794 22110 net.cpp:408] relu3 <- ip3
I0428 19:29:46.664798 22110 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:46.664996 22110 net.cpp:124] Setting up relu3
I0428 19:29:46.665006 22110 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:46.665009 22110 net.cpp:139] Memory required for data: 605440
I0428 19:29:46.665014 22110 layer_factory.hpp:77] Creating layer loss
I0428 19:29:46.665019 22110 net.cpp:86] Creating Layer loss
I0428 19:29:46.665022 22110 net.cpp:408] loss <- ip3
I0428 19:29:46.665026 22110 net.cpp:408] loss <- label
I0428 19:29:46.665050 22110 net.cpp:382] loss -> loss
I0428 19:29:46.665066 22110 layer_factory.hpp:77] Creating layer loss
I0428 19:29:46.665338 22110 net.cpp:124] Setting up loss
I0428 19:29:46.665357 22110 net.cpp:131] Top shape: (1)
I0428 19:29:46.665375 22110 net.cpp:134]     with loss weight 1
I0428 19:29:46.665405 22110 net.cpp:139] Memory required for data: 605444
I0428 19:29:46.665407 22110 net.cpp:200] loss needs backward computation.
I0428 19:29:46.665411 22110 net.cpp:200] relu3 needs backward computation.
I0428 19:29:46.665415 22110 net.cpp:200] ip3 needs backward computation.
I0428 19:29:46.665416 22110 net.cpp:200] relu2 needs backward computation.
I0428 19:29:46.665419 22110 net.cpp:200] ip2 needs backward computation.
I0428 19:29:46.665422 22110 net.cpp:200] relu1 needs backward computation.
I0428 19:29:46.665424 22110 net.cpp:200] ip1 needs backward computation.
I0428 19:29:46.665437 22110 net.cpp:200] pool0 needs backward computation.
I0428 19:29:46.665441 22110 net.cpp:200] conv0 needs backward computation.
I0428 19:29:46.665443 22110 net.cpp:202] mnist does not need backward computation.
I0428 19:29:46.665446 22110 net.cpp:244] This network produces output loss
I0428 19:29:46.665454 22110 net.cpp:257] Network initialization done.
I0428 19:29:46.665731 22110 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test69.prototxt
I0428 19:29:46.665756 22110 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:46.665848 22110 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:46.665907 22110 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:46.665968 22110 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:46.665980 22110 net.cpp:86] Creating Layer mnist
I0428 19:29:46.665985 22110 net.cpp:382] mnist -> data
I0428 19:29:46.665993 22110 net.cpp:382] mnist -> label
I0428 19:29:46.666074 22110 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:46.668146 22110 net.cpp:124] Setting up mnist
I0428 19:29:46.668176 22110 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:46.668182 22110 net.cpp:131] Top shape: 100 (100)
I0428 19:29:46.668185 22110 net.cpp:139] Memory required for data: 314000
I0428 19:29:46.668190 22110 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:46.668196 22110 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:46.668200 22110 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:46.668205 22110 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:46.668210 22110 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:46.668262 22110 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:46.668267 22110 net.cpp:131] Top shape: 100 (100)
I0428 19:29:46.668272 22110 net.cpp:131] Top shape: 100 (100)
I0428 19:29:46.668274 22110 net.cpp:139] Memory required for data: 314800
I0428 19:29:46.668287 22110 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:46.668295 22110 net.cpp:86] Creating Layer conv0
I0428 19:29:46.668298 22110 net.cpp:408] conv0 <- data
I0428 19:29:46.668304 22110 net.cpp:382] conv0 -> conv0
I0428 19:29:46.670061 22110 net.cpp:124] Setting up conv0
I0428 19:29:46.670075 22110 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:46.670078 22110 net.cpp:139] Memory required for data: 775600
I0428 19:29:46.670087 22110 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:46.670094 22110 net.cpp:86] Creating Layer pool0
I0428 19:29:46.670097 22110 net.cpp:408] pool0 <- conv0
I0428 19:29:46.670101 22110 net.cpp:382] pool0 -> pool0
I0428 19:29:46.670136 22110 net.cpp:124] Setting up pool0
I0428 19:29:46.670142 22110 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:46.670145 22110 net.cpp:139] Memory required for data: 890800
I0428 19:29:46.670147 22110 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:46.670153 22110 net.cpp:86] Creating Layer ip1
I0428 19:29:46.670156 22110 net.cpp:408] ip1 <- pool0
I0428 19:29:46.670161 22110 net.cpp:382] ip1 -> ip1
I0428 19:29:46.670327 22110 net.cpp:124] Setting up ip1
I0428 19:29:46.670336 22110 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:46.670338 22110 net.cpp:139] Memory required for data: 910800
I0428 19:29:46.670346 22110 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:46.670351 22110 net.cpp:86] Creating Layer relu1
I0428 19:29:46.670353 22110 net.cpp:408] relu1 <- ip1
I0428 19:29:46.670357 22110 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:46.670569 22110 net.cpp:124] Setting up relu1
I0428 19:29:46.670579 22110 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:46.670583 22110 net.cpp:139] Memory required for data: 930800
I0428 19:29:46.670585 22110 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:46.670593 22110 net.cpp:86] Creating Layer ip2
I0428 19:29:46.670596 22110 net.cpp:408] ip2 <- ip1
I0428 19:29:46.670601 22110 net.cpp:382] ip2 -> ip2
I0428 19:29:46.670725 22110 net.cpp:124] Setting up ip2
I0428 19:29:46.670733 22110 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:46.670737 22110 net.cpp:139] Memory required for data: 934800
I0428 19:29:46.670744 22110 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:46.670750 22110 net.cpp:86] Creating Layer relu2
I0428 19:29:46.670753 22110 net.cpp:408] relu2 <- ip2
I0428 19:29:46.670758 22110 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:46.671721 22110 net.cpp:124] Setting up relu2
I0428 19:29:46.671733 22110 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:46.671737 22110 net.cpp:139] Memory required for data: 938800
I0428 19:29:46.671741 22110 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:46.671749 22110 net.cpp:86] Creating Layer ip3
I0428 19:29:46.671752 22110 net.cpp:408] ip3 <- ip2
I0428 19:29:46.671757 22110 net.cpp:382] ip3 -> ip3
I0428 19:29:46.671921 22110 net.cpp:124] Setting up ip3
I0428 19:29:46.671947 22110 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:46.671949 22110 net.cpp:139] Memory required for data: 942800
I0428 19:29:46.671954 22110 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:46.671977 22110 net.cpp:86] Creating Layer relu3
I0428 19:29:46.671979 22110 net.cpp:408] relu3 <- ip3
I0428 19:29:46.671983 22110 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:46.672149 22110 net.cpp:124] Setting up relu3
I0428 19:29:46.672173 22110 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:46.672178 22110 net.cpp:139] Memory required for data: 946800
I0428 19:29:46.672180 22110 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:46.672186 22110 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:46.672190 22110 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:46.672195 22110 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:46.672209 22110 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:46.672257 22110 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:46.672262 22110 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:46.672266 22110 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:46.672278 22110 net.cpp:139] Memory required for data: 954800
I0428 19:29:46.672281 22110 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:46.672287 22110 net.cpp:86] Creating Layer accuracy
I0428 19:29:46.672291 22110 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:46.672294 22110 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:46.672304 22110 net.cpp:382] accuracy -> accuracy
I0428 19:29:46.672312 22110 net.cpp:124] Setting up accuracy
I0428 19:29:46.672315 22110 net.cpp:131] Top shape: (1)
I0428 19:29:46.672318 22110 net.cpp:139] Memory required for data: 954804
I0428 19:29:46.672322 22110 layer_factory.hpp:77] Creating layer loss
I0428 19:29:46.672325 22110 net.cpp:86] Creating Layer loss
I0428 19:29:46.672328 22110 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:46.672332 22110 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:46.672336 22110 net.cpp:382] loss -> loss
I0428 19:29:46.672343 22110 layer_factory.hpp:77] Creating layer loss
I0428 19:29:46.672585 22110 net.cpp:124] Setting up loss
I0428 19:29:46.672610 22110 net.cpp:131] Top shape: (1)
I0428 19:29:46.672621 22110 net.cpp:134]     with loss weight 1
I0428 19:29:46.672626 22110 net.cpp:139] Memory required for data: 954808
I0428 19:29:46.672629 22110 net.cpp:200] loss needs backward computation.
I0428 19:29:46.672633 22110 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:46.672636 22110 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:46.672639 22110 net.cpp:200] relu3 needs backward computation.
I0428 19:29:46.672642 22110 net.cpp:200] ip3 needs backward computation.
I0428 19:29:46.672646 22110 net.cpp:200] relu2 needs backward computation.
I0428 19:29:46.672648 22110 net.cpp:200] ip2 needs backward computation.
I0428 19:29:46.672652 22110 net.cpp:200] relu1 needs backward computation.
I0428 19:29:46.672654 22110 net.cpp:200] ip1 needs backward computation.
I0428 19:29:46.672657 22110 net.cpp:200] pool0 needs backward computation.
I0428 19:29:46.672659 22110 net.cpp:200] conv0 needs backward computation.
I0428 19:29:46.672669 22110 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:46.672672 22110 net.cpp:202] mnist does not need backward computation.
I0428 19:29:46.672675 22110 net.cpp:244] This network produces output accuracy
I0428 19:29:46.672678 22110 net.cpp:244] This network produces output loss
I0428 19:29:46.672690 22110 net.cpp:257] Network initialization done.
I0428 19:29:46.672742 22110 solver.cpp:56] Solver scaffolding done.
I0428 19:29:46.673053 22110 caffe.cpp:248] Starting Optimization
I0428 19:29:46.673061 22110 solver.cpp:273] Solving LeNet
I0428 19:29:46.673065 22110 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:46.673918 22110 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:46.675055 22110 blocking_queue.cpp:49] Waiting for data
I0428 19:29:46.752126 22117 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:46.752643 22110 solver.cpp:398]     Test net output #0: accuracy = 0.1311
I0428 19:29:46.752671 22110 solver.cpp:398]     Test net output #1: loss = 2.2992 (* 1 = 2.2992 loss)
I0428 19:29:46.755337 22110 solver.cpp:219] Iteration 0 (2.76802 iter/s, 0.0822425s/100 iters), loss = 2.29992
I0428 19:29:46.755369 22110 solver.cpp:238]     Train net output #0: loss = 2.29992 (* 1 = 2.29992 loss)
I0428 19:29:46.755384 22110 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:46.816782 22110 solver.cpp:219] Iteration 100 (1628.69 iter/s, 0.061399s/100 iters), loss = 0.875543
I0428 19:29:46.816817 22110 solver.cpp:238]     Train net output #0: loss = 0.875543 (* 1 = 0.875543 loss)
I0428 19:29:46.816823 22110 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:46.871515 22110 solver.cpp:219] Iteration 200 (1828.26 iter/s, 0.054697s/100 iters), loss = 0.682343
I0428 19:29:46.871554 22110 solver.cpp:238]     Train net output #0: loss = 0.682343 (* 1 = 0.682343 loss)
I0428 19:29:46.871577 22110 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:46.926808 22110 solver.cpp:219] Iteration 300 (1810.06 iter/s, 0.0552468s/100 iters), loss = 0.417845
I0428 19:29:46.926844 22110 solver.cpp:238]     Train net output #0: loss = 0.417845 (* 1 = 0.417845 loss)
I0428 19:29:46.926867 22110 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:46.983543 22110 solver.cpp:219] Iteration 400 (1763.93 iter/s, 0.0566917s/100 iters), loss = 0.401745
I0428 19:29:46.983566 22110 solver.cpp:238]     Train net output #0: loss = 0.401745 (* 1 = 0.401745 loss)
I0428 19:29:46.983572 22110 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:47.038502 22110 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:47.113469 22117 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:47.113915 22110 solver.cpp:398]     Test net output #0: accuracy = 0.8546
I0428 19:29:47.113937 22110 solver.cpp:398]     Test net output #1: loss = 0.469407 (* 1 = 0.469407 loss)
I0428 19:29:47.114596 22110 solver.cpp:219] Iteration 500 (763.333 iter/s, 0.131004s/100 iters), loss = 0.658094
I0428 19:29:47.114622 22110 solver.cpp:238]     Train net output #0: loss = 0.658094 (* 1 = 0.658094 loss)
I0428 19:29:47.114630 22110 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:47.172492 22110 solver.cpp:219] Iteration 600 (1728.25 iter/s, 0.0578621s/100 iters), loss = 0.408499
I0428 19:29:47.172549 22110 solver.cpp:238]     Train net output #0: loss = 0.408499 (* 1 = 0.408499 loss)
I0428 19:29:47.172557 22110 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:47.229110 22110 solver.cpp:219] Iteration 700 (1768.16 iter/s, 0.0565561s/100 iters), loss = 0.718087
I0428 19:29:47.229135 22110 solver.cpp:238]     Train net output #0: loss = 0.718087 (* 1 = 0.718087 loss)
I0428 19:29:47.229158 22110 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:47.285840 22110 solver.cpp:219] Iteration 800 (1763.74 iter/s, 0.0566978s/100 iters), loss = 0.467561
I0428 19:29:47.285864 22110 solver.cpp:238]     Train net output #0: loss = 0.467561 (* 1 = 0.467561 loss)
I0428 19:29:47.285888 22110 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:47.341646 22110 solver.cpp:219] Iteration 900 (1792.98 iter/s, 0.0557732s/100 iters), loss = 0.403804
I0428 19:29:47.341670 22110 solver.cpp:238]     Train net output #0: loss = 0.403804 (* 1 = 0.403804 loss)
I0428 19:29:47.341675 22110 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:47.360250 22116 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:47.396410 22110 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:47.397279 22110 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:47.397799 22110 solver.cpp:311] Iteration 1000, loss = 0.514004
I0428 19:29:47.397814 22110 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:47.472123 22117 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:47.472568 22110 solver.cpp:398]     Test net output #0: accuracy = 0.8692
I0428 19:29:47.472586 22110 solver.cpp:398]     Test net output #1: loss = 0.38512 (* 1 = 0.38512 loss)
I0428 19:29:47.472592 22110 solver.cpp:316] Optimization Done.
I0428 19:29:47.472595 22110 caffe.cpp:259] Optimization Done.
