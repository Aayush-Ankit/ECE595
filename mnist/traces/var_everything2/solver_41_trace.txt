I0428 19:28:54.057209 21853 caffe.cpp:218] Using GPUs 0
I0428 19:28:54.092887 21853 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:54.537168 21853 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test41.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:54.537310 21853 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test41.prototxt
I0428 19:28:54.537547 21853 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:54.537559 21853 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:54.537616 21853 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:28:54.537665 21853 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:54.537744 21853 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:54.537763 21853 net.cpp:86] Creating Layer mnist
I0428 19:28:54.537770 21853 net.cpp:382] mnist -> data
I0428 19:28:54.537788 21853 net.cpp:382] mnist -> label
I0428 19:28:54.538698 21853 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:54.540936 21853 net.cpp:124] Setting up mnist
I0428 19:28:54.540968 21853 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:54.540976 21853 net.cpp:131] Top shape: 64 (64)
I0428 19:28:54.540978 21853 net.cpp:139] Memory required for data: 200960
I0428 19:28:54.540985 21853 layer_factory.hpp:77] Creating layer conv0
I0428 19:28:54.540999 21853 net.cpp:86] Creating Layer conv0
I0428 19:28:54.541003 21853 net.cpp:408] conv0 <- data
I0428 19:28:54.541014 21853 net.cpp:382] conv0 -> conv0
I0428 19:28:54.772904 21853 net.cpp:124] Setting up conv0
I0428 19:28:54.772929 21853 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:28:54.772933 21853 net.cpp:139] Memory required for data: 495872
I0428 19:28:54.772948 21853 layer_factory.hpp:77] Creating layer pool0
I0428 19:28:54.772959 21853 net.cpp:86] Creating Layer pool0
I0428 19:28:54.772964 21853 net.cpp:408] pool0 <- conv0
I0428 19:28:54.772969 21853 net.cpp:382] pool0 -> pool0
I0428 19:28:54.773028 21853 net.cpp:124] Setting up pool0
I0428 19:28:54.773035 21853 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:28:54.773037 21853 net.cpp:139] Memory required for data: 569600
I0428 19:28:54.773039 21853 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:54.773047 21853 net.cpp:86] Creating Layer ip1
I0428 19:28:54.773051 21853 net.cpp:408] ip1 <- pool0
I0428 19:28:54.773054 21853 net.cpp:382] ip1 -> ip1
I0428 19:28:54.773955 21853 net.cpp:124] Setting up ip1
I0428 19:28:54.773967 21853 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:54.773985 21853 net.cpp:139] Memory required for data: 572160
I0428 19:28:54.773993 21853 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:54.774000 21853 net.cpp:86] Creating Layer relu1
I0428 19:28:54.774004 21853 net.cpp:408] relu1 <- ip1
I0428 19:28:54.774008 21853 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:54.774216 21853 net.cpp:124] Setting up relu1
I0428 19:28:54.774225 21853 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:54.774229 21853 net.cpp:139] Memory required for data: 574720
I0428 19:28:54.774231 21853 layer_factory.hpp:77] Creating layer loss
I0428 19:28:54.774242 21853 net.cpp:86] Creating Layer loss
I0428 19:28:54.774246 21853 net.cpp:408] loss <- ip1
I0428 19:28:54.774250 21853 net.cpp:408] loss <- label
I0428 19:28:54.774255 21853 net.cpp:382] loss -> loss
I0428 19:28:54.774268 21853 layer_factory.hpp:77] Creating layer loss
I0428 19:28:54.775118 21853 net.cpp:124] Setting up loss
I0428 19:28:54.775146 21853 net.cpp:131] Top shape: (1)
I0428 19:28:54.775149 21853 net.cpp:134]     with loss weight 1
I0428 19:28:54.775177 21853 net.cpp:139] Memory required for data: 574724
I0428 19:28:54.775182 21853 net.cpp:200] loss needs backward computation.
I0428 19:28:54.775185 21853 net.cpp:200] relu1 needs backward computation.
I0428 19:28:54.775188 21853 net.cpp:200] ip1 needs backward computation.
I0428 19:28:54.775192 21853 net.cpp:200] pool0 needs backward computation.
I0428 19:28:54.775193 21853 net.cpp:200] conv0 needs backward computation.
I0428 19:28:54.775197 21853 net.cpp:202] mnist does not need backward computation.
I0428 19:28:54.775199 21853 net.cpp:244] This network produces output loss
I0428 19:28:54.775207 21853 net.cpp:257] Network initialization done.
I0428 19:28:54.775416 21853 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test41.prototxt
I0428 19:28:54.775439 21853 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:54.775503 21853 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:28:54.775558 21853 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:54.775602 21853 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:54.775614 21853 net.cpp:86] Creating Layer mnist
I0428 19:28:54.775619 21853 net.cpp:382] mnist -> data
I0428 19:28:54.775626 21853 net.cpp:382] mnist -> label
I0428 19:28:54.775712 21853 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:54.777818 21853 net.cpp:124] Setting up mnist
I0428 19:28:54.777832 21853 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:54.777835 21853 net.cpp:131] Top shape: 100 (100)
I0428 19:28:54.777838 21853 net.cpp:139] Memory required for data: 314000
I0428 19:28:54.777851 21853 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:54.777859 21853 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:54.777863 21853 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:54.777894 21853 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:54.777900 21853 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:54.777956 21853 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:54.777962 21853 net.cpp:131] Top shape: 100 (100)
I0428 19:28:54.777981 21853 net.cpp:131] Top shape: 100 (100)
I0428 19:28:54.777984 21853 net.cpp:139] Memory required for data: 314800
I0428 19:28:54.777987 21853 layer_factory.hpp:77] Creating layer conv0
I0428 19:28:54.777997 21853 net.cpp:86] Creating Layer conv0
I0428 19:28:54.777999 21853 net.cpp:408] conv0 <- data
I0428 19:28:54.778004 21853 net.cpp:382] conv0 -> conv0
I0428 19:28:54.779747 21853 net.cpp:124] Setting up conv0
I0428 19:28:54.779759 21853 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:28:54.779763 21853 net.cpp:139] Memory required for data: 775600
I0428 19:28:54.779772 21853 layer_factory.hpp:77] Creating layer pool0
I0428 19:28:54.779778 21853 net.cpp:86] Creating Layer pool0
I0428 19:28:54.779780 21853 net.cpp:408] pool0 <- conv0
I0428 19:28:54.779786 21853 net.cpp:382] pool0 -> pool0
I0428 19:28:54.779819 21853 net.cpp:124] Setting up pool0
I0428 19:28:54.779825 21853 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:28:54.779827 21853 net.cpp:139] Memory required for data: 890800
I0428 19:28:54.779830 21853 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:54.779836 21853 net.cpp:86] Creating Layer ip1
I0428 19:28:54.779839 21853 net.cpp:408] ip1 <- pool0
I0428 19:28:54.779844 21853 net.cpp:382] ip1 -> ip1
I0428 19:28:54.779947 21853 net.cpp:124] Setting up ip1
I0428 19:28:54.779953 21853 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:54.779956 21853 net.cpp:139] Memory required for data: 894800
I0428 19:28:54.779963 21853 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:54.779968 21853 net.cpp:86] Creating Layer relu1
I0428 19:28:54.779971 21853 net.cpp:408] relu1 <- ip1
I0428 19:28:54.779974 21853 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:54.780136 21853 net.cpp:124] Setting up relu1
I0428 19:28:54.780144 21853 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:54.780148 21853 net.cpp:139] Memory required for data: 898800
I0428 19:28:54.780150 21853 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:28:54.780154 21853 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:28:54.780158 21853 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:28:54.780163 21853 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:28:54.780167 21853 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:28:54.780220 21853 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:28:54.780225 21853 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:54.780228 21853 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:54.780231 21853 net.cpp:139] Memory required for data: 906800
I0428 19:28:54.780233 21853 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:54.780238 21853 net.cpp:86] Creating Layer accuracy
I0428 19:28:54.780241 21853 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:28:54.780246 21853 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:54.780249 21853 net.cpp:382] accuracy -> accuracy
I0428 19:28:54.780256 21853 net.cpp:124] Setting up accuracy
I0428 19:28:54.780274 21853 net.cpp:131] Top shape: (1)
I0428 19:28:54.780277 21853 net.cpp:139] Memory required for data: 906804
I0428 19:28:54.780280 21853 layer_factory.hpp:77] Creating layer loss
I0428 19:28:54.780287 21853 net.cpp:86] Creating Layer loss
I0428 19:28:54.780289 21853 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:28:54.780293 21853 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:54.780297 21853 net.cpp:382] loss -> loss
I0428 19:28:54.780305 21853 layer_factory.hpp:77] Creating layer loss
I0428 19:28:54.780563 21853 net.cpp:124] Setting up loss
I0428 19:28:54.780581 21853 net.cpp:131] Top shape: (1)
I0428 19:28:54.780585 21853 net.cpp:134]     with loss weight 1
I0428 19:28:54.780591 21853 net.cpp:139] Memory required for data: 906808
I0428 19:28:54.780593 21853 net.cpp:200] loss needs backward computation.
I0428 19:28:54.780596 21853 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:54.780601 21853 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:28:54.780604 21853 net.cpp:200] relu1 needs backward computation.
I0428 19:28:54.780607 21853 net.cpp:200] ip1 needs backward computation.
I0428 19:28:54.780611 21853 net.cpp:200] pool0 needs backward computation.
I0428 19:28:54.780612 21853 net.cpp:200] conv0 needs backward computation.
I0428 19:28:54.780616 21853 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:54.780619 21853 net.cpp:202] mnist does not need backward computation.
I0428 19:28:54.780622 21853 net.cpp:244] This network produces output accuracy
I0428 19:28:54.780624 21853 net.cpp:244] This network produces output loss
I0428 19:28:54.780632 21853 net.cpp:257] Network initialization done.
I0428 19:28:54.780658 21853 solver.cpp:56] Solver scaffolding done.
I0428 19:28:54.780905 21853 caffe.cpp:248] Starting Optimization
I0428 19:28:54.780912 21853 solver.cpp:273] Solving LeNet
I0428 19:28:54.780915 21853 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:54.781767 21853 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:54.781836 21853 blocking_queue.cpp:49] Waiting for data
I0428 19:28:54.859195 21860 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:54.859683 21853 solver.cpp:398]     Test net output #0: accuracy = 0.0944
I0428 19:28:54.859722 21853 solver.cpp:398]     Test net output #1: loss = 2.30659 (* 1 = 2.30659 loss)
I0428 19:28:54.861930 21853 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809841s/100 iters), loss = 2.27315
I0428 19:28:54.861973 21853 solver.cpp:238]     Train net output #0: loss = 2.27315 (* 1 = 2.27315 loss)
I0428 19:28:54.862001 21853 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:54.915644 21853 solver.cpp:219] Iteration 100 (1863.59 iter/s, 0.0536598s/100 iters), loss = 0.672665
I0428 19:28:54.915695 21853 solver.cpp:238]     Train net output #0: loss = 0.672665 (* 1 = 0.672665 loss)
I0428 19:28:54.915707 21853 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:54.961560 21853 solver.cpp:219] Iteration 200 (2179.97 iter/s, 0.0458721s/100 iters), loss = 0.331097
I0428 19:28:54.961613 21853 solver.cpp:238]     Train net output #0: loss = 0.331097 (* 1 = 0.331097 loss)
I0428 19:28:54.961622 21853 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:55.005022 21853 solver.cpp:219] Iteration 300 (2303.95 iter/s, 0.0434038s/100 iters), loss = 0.303879
I0428 19:28:55.005061 21853 solver.cpp:238]     Train net output #0: loss = 0.303879 (* 1 = 0.303879 loss)
I0428 19:28:55.005070 21853 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:55.051532 21853 solver.cpp:219] Iteration 400 (2152.17 iter/s, 0.0464648s/100 iters), loss = 0.262511
I0428 19:28:55.051570 21853 solver.cpp:238]     Train net output #0: loss = 0.262511 (* 1 = 0.262511 loss)
I0428 19:28:55.051580 21853 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:55.097980 21853 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:55.170363 21860 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:55.170758 21853 solver.cpp:398]     Test net output #0: accuracy = 0.911
I0428 19:28:55.170781 21853 solver.cpp:398]     Test net output #1: loss = 0.309246 (* 1 = 0.309246 loss)
I0428 19:28:55.171283 21853 solver.cpp:219] Iteration 500 (835.433 iter/s, 0.119698s/100 iters), loss = 0.386143
I0428 19:28:55.171332 21853 solver.cpp:238]     Train net output #0: loss = 0.386143 (* 1 = 0.386143 loss)
I0428 19:28:55.171342 21853 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:55.225675 21853 solver.cpp:219] Iteration 600 (1840.35 iter/s, 0.0543373s/100 iters), loss = 0.230099
I0428 19:28:55.225710 21853 solver.cpp:238]     Train net output #0: loss = 0.230099 (* 1 = 0.230099 loss)
I0428 19:28:55.225739 21853 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:55.271488 21853 solver.cpp:219] Iteration 700 (2184.7 iter/s, 0.0457728s/100 iters), loss = 0.420582
I0428 19:28:55.271519 21853 solver.cpp:238]     Train net output #0: loss = 0.420582 (* 1 = 0.420582 loss)
I0428 19:28:55.271528 21853 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:55.316546 21853 solver.cpp:219] Iteration 800 (2221.24 iter/s, 0.04502s/100 iters), loss = 0.50712
I0428 19:28:55.316587 21853 solver.cpp:238]     Train net output #0: loss = 0.50712 (* 1 = 0.50712 loss)
I0428 19:28:55.316596 21853 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:55.362401 21853 solver.cpp:219] Iteration 900 (2183.24 iter/s, 0.0458036s/100 iters), loss = 0.436104
I0428 19:28:55.362452 21853 solver.cpp:238]     Train net output #0: loss = 0.436104 (* 1 = 0.436104 loss)
I0428 19:28:55.362460 21853 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:55.378231 21859 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:55.408331 21853 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:55.408836 21853 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:55.409178 21853 solver.cpp:311] Iteration 1000, loss = 0.452374
I0428 19:28:55.409196 21853 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:55.483366 21860 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:55.483753 21853 solver.cpp:398]     Test net output #0: accuracy = 0.9238
I0428 19:28:55.483775 21853 solver.cpp:398]     Test net output #1: loss = 0.26939 (* 1 = 0.26939 loss)
I0428 19:28:55.483781 21853 solver.cpp:316] Optimization Done.
I0428 19:28:55.483784 21853 caffe.cpp:259] Optimization Done.
