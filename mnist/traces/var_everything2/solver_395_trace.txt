I0428 19:42:29.331863 25079 caffe.cpp:218] Using GPUs 0
I0428 19:42:29.373173 25079 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:29.842532 25079 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test395.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:29.843235 25079 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test395.prototxt
I0428 19:42:29.843914 25079 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:29.843942 25079 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:29.844099 25079 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:29.844218 25079 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:29.844367 25079 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:29.844405 25079 net.cpp:86] Creating Layer mnist
I0428 19:42:29.844418 25079 net.cpp:382] mnist -> data
I0428 19:42:29.844452 25079 net.cpp:382] mnist -> label
I0428 19:42:29.846189 25079 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:29.850062 25079 net.cpp:124] Setting up mnist
I0428 19:42:29.850093 25079 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:29.850105 25079 net.cpp:131] Top shape: 64 (64)
I0428 19:42:29.850111 25079 net.cpp:139] Memory required for data: 200960
I0428 19:42:29.850131 25079 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:29.850157 25079 net.cpp:86] Creating Layer conv0
I0428 19:42:29.850169 25079 net.cpp:408] conv0 <- data
I0428 19:42:29.850190 25079 net.cpp:382] conv0 -> conv0
I0428 19:42:30.169854 25079 net.cpp:124] Setting up conv0
I0428 19:42:30.169885 25079 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:30.169890 25079 net.cpp:139] Memory required for data: 495872
I0428 19:42:30.169934 25079 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:30.169950 25079 net.cpp:86] Creating Layer pool0
I0428 19:42:30.169955 25079 net.cpp:408] pool0 <- conv0
I0428 19:42:30.169960 25079 net.cpp:382] pool0 -> pool0
I0428 19:42:30.170029 25079 net.cpp:124] Setting up pool0
I0428 19:42:30.170039 25079 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:30.170043 25079 net.cpp:139] Memory required for data: 569600
I0428 19:42:30.170047 25079 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:30.170059 25079 net.cpp:86] Creating Layer conv1
I0428 19:42:30.170064 25079 net.cpp:408] conv1 <- pool0
I0428 19:42:30.170070 25079 net.cpp:382] conv1 -> conv1
I0428 19:42:30.173192 25079 net.cpp:124] Setting up conv1
I0428 19:42:30.173210 25079 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:30.173215 25079 net.cpp:139] Memory required for data: 979200
I0428 19:42:30.173226 25079 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:30.173235 25079 net.cpp:86] Creating Layer pool1
I0428 19:42:30.173250 25079 net.cpp:408] pool1 <- conv1
I0428 19:42:30.173256 25079 net.cpp:382] pool1 -> pool1
I0428 19:42:30.173301 25079 net.cpp:124] Setting up pool1
I0428 19:42:30.173310 25079 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:30.173315 25079 net.cpp:139] Memory required for data: 1081600
I0428 19:42:30.173317 25079 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:30.173326 25079 net.cpp:86] Creating Layer ip1
I0428 19:42:30.173331 25079 net.cpp:408] ip1 <- pool1
I0428 19:42:30.173336 25079 net.cpp:382] ip1 -> ip1
I0428 19:42:30.173480 25079 net.cpp:124] Setting up ip1
I0428 19:42:30.173490 25079 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:30.173492 25079 net.cpp:139] Memory required for data: 1084160
I0428 19:42:30.173501 25079 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:30.173508 25079 net.cpp:86] Creating Layer relu1
I0428 19:42:30.173512 25079 net.cpp:408] relu1 <- ip1
I0428 19:42:30.173517 25079 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:30.173709 25079 net.cpp:124] Setting up relu1
I0428 19:42:30.173719 25079 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:30.173723 25079 net.cpp:139] Memory required for data: 1086720
I0428 19:42:30.173727 25079 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:30.173735 25079 net.cpp:86] Creating Layer ip2
I0428 19:42:30.173738 25079 net.cpp:408] ip2 <- ip1
I0428 19:42:30.173744 25079 net.cpp:382] ip2 -> ip2
I0428 19:42:30.173856 25079 net.cpp:124] Setting up ip2
I0428 19:42:30.173863 25079 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:30.173867 25079 net.cpp:139] Memory required for data: 1089280
I0428 19:42:30.173873 25079 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:30.173880 25079 net.cpp:86] Creating Layer relu2
I0428 19:42:30.173884 25079 net.cpp:408] relu2 <- ip2
I0428 19:42:30.173889 25079 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:30.174731 25079 net.cpp:124] Setting up relu2
I0428 19:42:30.174746 25079 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:30.174751 25079 net.cpp:139] Memory required for data: 1091840
I0428 19:42:30.174754 25079 layer_factory.hpp:77] Creating layer loss
I0428 19:42:30.174762 25079 net.cpp:86] Creating Layer loss
I0428 19:42:30.174765 25079 net.cpp:408] loss <- ip2
I0428 19:42:30.174772 25079 net.cpp:408] loss <- label
I0428 19:42:30.174778 25079 net.cpp:382] loss -> loss
I0428 19:42:30.174803 25079 layer_factory.hpp:77] Creating layer loss
I0428 19:42:30.175078 25079 net.cpp:124] Setting up loss
I0428 19:42:30.175089 25079 net.cpp:131] Top shape: (1)
I0428 19:42:30.175093 25079 net.cpp:134]     with loss weight 1
I0428 19:42:30.175109 25079 net.cpp:139] Memory required for data: 1091844
I0428 19:42:30.175113 25079 net.cpp:200] loss needs backward computation.
I0428 19:42:30.175117 25079 net.cpp:200] relu2 needs backward computation.
I0428 19:42:30.175122 25079 net.cpp:200] ip2 needs backward computation.
I0428 19:42:30.175124 25079 net.cpp:200] relu1 needs backward computation.
I0428 19:42:30.175128 25079 net.cpp:200] ip1 needs backward computation.
I0428 19:42:30.175132 25079 net.cpp:200] pool1 needs backward computation.
I0428 19:42:30.175148 25079 net.cpp:200] conv1 needs backward computation.
I0428 19:42:30.175151 25079 net.cpp:200] pool0 needs backward computation.
I0428 19:42:30.175155 25079 net.cpp:200] conv0 needs backward computation.
I0428 19:42:30.175159 25079 net.cpp:202] mnist does not need backward computation.
I0428 19:42:30.175163 25079 net.cpp:244] This network produces output loss
I0428 19:42:30.175173 25079 net.cpp:257] Network initialization done.
I0428 19:42:30.175521 25079 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test395.prototxt
I0428 19:42:30.175551 25079 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:30.175659 25079 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:30.175734 25079 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:30.175786 25079 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:30.175799 25079 net.cpp:86] Creating Layer mnist
I0428 19:42:30.175804 25079 net.cpp:382] mnist -> data
I0428 19:42:30.175813 25079 net.cpp:382] mnist -> label
I0428 19:42:30.175914 25079 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:30.178102 25079 net.cpp:124] Setting up mnist
I0428 19:42:30.178117 25079 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:30.178123 25079 net.cpp:131] Top shape: 100 (100)
I0428 19:42:30.178128 25079 net.cpp:139] Memory required for data: 314000
I0428 19:42:30.178131 25079 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:30.178139 25079 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:30.178143 25079 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:30.178149 25079 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:30.178158 25079 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:30.178282 25079 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:30.178304 25079 net.cpp:131] Top shape: 100 (100)
I0428 19:42:30.178309 25079 net.cpp:131] Top shape: 100 (100)
I0428 19:42:30.178313 25079 net.cpp:139] Memory required for data: 314800
I0428 19:42:30.178318 25079 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:30.178328 25079 net.cpp:86] Creating Layer conv0
I0428 19:42:30.178333 25079 net.cpp:408] conv0 <- data
I0428 19:42:30.178339 25079 net.cpp:382] conv0 -> conv0
I0428 19:42:30.180106 25079 net.cpp:124] Setting up conv0
I0428 19:42:30.180124 25079 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:30.180129 25079 net.cpp:139] Memory required for data: 775600
I0428 19:42:30.180140 25079 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:30.180147 25079 net.cpp:86] Creating Layer pool0
I0428 19:42:30.180152 25079 net.cpp:408] pool0 <- conv0
I0428 19:42:30.180157 25079 net.cpp:382] pool0 -> pool0
I0428 19:42:30.180199 25079 net.cpp:124] Setting up pool0
I0428 19:42:30.180207 25079 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:30.180210 25079 net.cpp:139] Memory required for data: 890800
I0428 19:42:30.180214 25079 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:30.180224 25079 net.cpp:86] Creating Layer conv1
I0428 19:42:30.180229 25079 net.cpp:408] conv1 <- pool0
I0428 19:42:30.180235 25079 net.cpp:382] conv1 -> conv1
I0428 19:42:30.182046 25079 net.cpp:124] Setting up conv1
I0428 19:42:30.182062 25079 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:30.182066 25079 net.cpp:139] Memory required for data: 1530800
I0428 19:42:30.182077 25079 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:30.182085 25079 net.cpp:86] Creating Layer pool1
I0428 19:42:30.182090 25079 net.cpp:408] pool1 <- conv1
I0428 19:42:30.182096 25079 net.cpp:382] pool1 -> pool1
I0428 19:42:30.182137 25079 net.cpp:124] Setting up pool1
I0428 19:42:30.182145 25079 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:30.182149 25079 net.cpp:139] Memory required for data: 1690800
I0428 19:42:30.182152 25079 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:30.182162 25079 net.cpp:86] Creating Layer ip1
I0428 19:42:30.182165 25079 net.cpp:408] ip1 <- pool1
I0428 19:42:30.182170 25079 net.cpp:382] ip1 -> ip1
I0428 19:42:30.182319 25079 net.cpp:124] Setting up ip1
I0428 19:42:30.182328 25079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:30.182332 25079 net.cpp:139] Memory required for data: 1694800
I0428 19:42:30.182340 25079 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:30.182346 25079 net.cpp:86] Creating Layer relu1
I0428 19:42:30.182351 25079 net.cpp:408] relu1 <- ip1
I0428 19:42:30.182356 25079 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:30.182543 25079 net.cpp:124] Setting up relu1
I0428 19:42:30.182556 25079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:30.182560 25079 net.cpp:139] Memory required for data: 1698800
I0428 19:42:30.182564 25079 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:30.182572 25079 net.cpp:86] Creating Layer ip2
I0428 19:42:30.182576 25079 net.cpp:408] ip2 <- ip1
I0428 19:42:30.182582 25079 net.cpp:382] ip2 -> ip2
I0428 19:42:30.182694 25079 net.cpp:124] Setting up ip2
I0428 19:42:30.182703 25079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:30.182706 25079 net.cpp:139] Memory required for data: 1702800
I0428 19:42:30.182713 25079 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:30.182718 25079 net.cpp:86] Creating Layer relu2
I0428 19:42:30.182723 25079 net.cpp:408] relu2 <- ip2
I0428 19:42:30.182726 25079 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:30.182930 25079 net.cpp:124] Setting up relu2
I0428 19:42:30.182940 25079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:30.182945 25079 net.cpp:139] Memory required for data: 1706800
I0428 19:42:30.182948 25079 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:42:30.182953 25079 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:42:30.182957 25079 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:42:30.182963 25079 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:42:30.182983 25079 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:42:30.183059 25079 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:42:30.183068 25079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:30.183073 25079 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:30.183091 25079 net.cpp:139] Memory required for data: 1714800
I0428 19:42:30.183095 25079 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:30.183102 25079 net.cpp:86] Creating Layer accuracy
I0428 19:42:30.183106 25079 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:42:30.183111 25079 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:30.183117 25079 net.cpp:382] accuracy -> accuracy
I0428 19:42:30.183125 25079 net.cpp:124] Setting up accuracy
I0428 19:42:30.183131 25079 net.cpp:131] Top shape: (1)
I0428 19:42:30.183135 25079 net.cpp:139] Memory required for data: 1714804
I0428 19:42:30.183138 25079 layer_factory.hpp:77] Creating layer loss
I0428 19:42:30.183154 25079 net.cpp:86] Creating Layer loss
I0428 19:42:30.183164 25079 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:42:30.183169 25079 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:30.183174 25079 net.cpp:382] loss -> loss
I0428 19:42:30.183182 25079 layer_factory.hpp:77] Creating layer loss
I0428 19:42:30.183450 25079 net.cpp:124] Setting up loss
I0428 19:42:30.183460 25079 net.cpp:131] Top shape: (1)
I0428 19:42:30.183466 25079 net.cpp:134]     with loss weight 1
I0428 19:42:30.183476 25079 net.cpp:139] Memory required for data: 1714808
I0428 19:42:30.183481 25079 net.cpp:200] loss needs backward computation.
I0428 19:42:30.183486 25079 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:30.183491 25079 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:42:30.183495 25079 net.cpp:200] relu2 needs backward computation.
I0428 19:42:30.183500 25079 net.cpp:200] ip2 needs backward computation.
I0428 19:42:30.183502 25079 net.cpp:200] relu1 needs backward computation.
I0428 19:42:30.183507 25079 net.cpp:200] ip1 needs backward computation.
I0428 19:42:30.183511 25079 net.cpp:200] pool1 needs backward computation.
I0428 19:42:30.183514 25079 net.cpp:200] conv1 needs backward computation.
I0428 19:42:30.183518 25079 net.cpp:200] pool0 needs backward computation.
I0428 19:42:30.183522 25079 net.cpp:200] conv0 needs backward computation.
I0428 19:42:30.183527 25079 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:30.183540 25079 net.cpp:202] mnist does not need backward computation.
I0428 19:42:30.183544 25079 net.cpp:244] This network produces output accuracy
I0428 19:42:30.183548 25079 net.cpp:244] This network produces output loss
I0428 19:42:30.183560 25079 net.cpp:257] Network initialization done.
I0428 19:42:30.183606 25079 solver.cpp:56] Solver scaffolding done.
I0428 19:42:30.183924 25079 caffe.cpp:248] Starting Optimization
I0428 19:42:30.183931 25079 solver.cpp:273] Solving LeNet
I0428 19:42:30.183934 25079 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:30.184183 25079 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:30.188199 25079 blocking_queue.cpp:49] Waiting for data
I0428 19:42:30.261468 25086 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:30.262127 25079 solver.cpp:398]     Test net output #0: accuracy = 0.1652
I0428 19:42:30.262178 25079 solver.cpp:398]     Test net output #1: loss = 2.29822 (* 1 = 2.29822 loss)
I0428 19:42:30.263984 25079 solver.cpp:219] Iteration 0 (2.8451 iter/s, 0.0800143s/100 iters), loss = 2.29842
I0428 19:42:30.264039 25079 solver.cpp:238]     Train net output #0: loss = 2.29842 (* 1 = 2.29842 loss)
I0428 19:42:30.264070 25079 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:30.356364 25079 solver.cpp:219] Iteration 100 (1083.17 iter/s, 0.0923218s/100 iters), loss = 0.538112
I0428 19:42:30.356407 25079 solver.cpp:238]     Train net output #0: loss = 0.538112 (* 1 = 0.538112 loss)
I0428 19:42:30.356420 25079 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:30.434571 25079 solver.cpp:219] Iteration 200 (1279.45 iter/s, 0.0781588s/100 iters), loss = 0.489029
I0428 19:42:30.434615 25079 solver.cpp:238]     Train net output #0: loss = 0.489029 (* 1 = 0.489029 loss)
I0428 19:42:30.434626 25079 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:30.508577 25079 solver.cpp:219] Iteration 300 (1352.13 iter/s, 0.0739574s/100 iters), loss = 0.414629
I0428 19:42:30.508605 25079 solver.cpp:238]     Train net output #0: loss = 0.414629 (* 1 = 0.414629 loss)
I0428 19:42:30.508630 25079 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:30.584902 25079 solver.cpp:219] Iteration 400 (1310.8 iter/s, 0.076289s/100 iters), loss = 0.612658
I0428 19:42:30.584944 25079 solver.cpp:238]     Train net output #0: loss = 0.612658 (* 1 = 0.612658 loss)
I0428 19:42:30.584969 25079 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:30.661182 25079 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:30.737098 25086 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:30.737668 25079 solver.cpp:398]     Test net output #0: accuracy = 0.919
I0428 19:42:30.737706 25079 solver.cpp:398]     Test net output #1: loss = 0.421089 (* 1 = 0.421089 loss)
I0428 19:42:30.738775 25079 solver.cpp:219] Iteration 500 (650.131 iter/s, 0.153815s/100 iters), loss = 0.377307
I0428 19:42:30.738817 25079 solver.cpp:238]     Train net output #0: loss = 0.377307 (* 1 = 0.377307 loss)
I0428 19:42:30.738831 25079 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:30.826297 25079 solver.cpp:219] Iteration 600 (1143.19 iter/s, 0.0874745s/100 iters), loss = 0.247686
I0428 19:42:30.826328 25079 solver.cpp:238]     Train net output #0: loss = 0.247686 (* 1 = 0.247686 loss)
I0428 19:42:30.826335 25079 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:30.916707 25079 solver.cpp:219] Iteration 700 (1106.6 iter/s, 0.090367s/100 iters), loss = 0.276474
I0428 19:42:30.916744 25079 solver.cpp:238]     Train net output #0: loss = 0.276474 (* 1 = 0.276474 loss)
I0428 19:42:30.916754 25079 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:31.011031 25079 solver.cpp:219] Iteration 800 (1060.73 iter/s, 0.0942746s/100 iters), loss = 0.325658
I0428 19:42:31.011081 25079 solver.cpp:238]     Train net output #0: loss = 0.325658 (* 1 = 0.325658 loss)
I0428 19:42:31.011092 25079 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:31.099467 25079 solver.cpp:219] Iteration 900 (1131.49 iter/s, 0.0883794s/100 iters), loss = 0.246749
I0428 19:42:31.099499 25079 solver.cpp:238]     Train net output #0: loss = 0.246749 (* 1 = 0.246749 loss)
I0428 19:42:31.099508 25079 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:31.126713 25085 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:31.180028 25079 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:31.180807 25079 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:31.181296 25079 solver.cpp:311] Iteration 1000, loss = 0.135766
I0428 19:42:31.181318 25079 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:31.257882 25086 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:31.258342 25079 solver.cpp:398]     Test net output #0: accuracy = 0.96
I0428 19:42:31.258366 25079 solver.cpp:398]     Test net output #1: loss = 0.124965 (* 1 = 0.124965 loss)
I0428 19:42:31.258375 25079 solver.cpp:316] Optimization Done.
I0428 19:42:31.258379 25079 caffe.cpp:259] Optimization Done.
