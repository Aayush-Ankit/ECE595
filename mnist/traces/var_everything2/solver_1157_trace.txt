I0428 20:11:22.795155 32057 caffe.cpp:218] Using GPUs 0
I0428 20:11:22.830860 32057 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:23.341800 32057 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1157.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:23.341948 32057 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1157.prototxt
I0428 20:11:23.342370 32057 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:23.342389 32057 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:23.342494 32057 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:23.342574 32057 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:23.342675 32057 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:23.342700 32057 net.cpp:86] Creating Layer mnist
I0428 20:11:23.342707 32057 net.cpp:382] mnist -> data
I0428 20:11:23.342732 32057 net.cpp:382] mnist -> label
I0428 20:11:23.343818 32057 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:23.346493 32057 net.cpp:124] Setting up mnist
I0428 20:11:23.346514 32057 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:23.346520 32057 net.cpp:131] Top shape: 64 (64)
I0428 20:11:23.346524 32057 net.cpp:139] Memory required for data: 200960
I0428 20:11:23.346531 32057 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:23.346551 32057 net.cpp:86] Creating Layer conv0
I0428 20:11:23.346572 32057 net.cpp:408] conv0 <- data
I0428 20:11:23.346585 32057 net.cpp:382] conv0 -> conv0
I0428 20:11:23.628446 32057 net.cpp:124] Setting up conv0
I0428 20:11:23.628473 32057 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:23.628476 32057 net.cpp:139] Memory required for data: 3887360
I0428 20:11:23.628491 32057 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:23.628504 32057 net.cpp:86] Creating Layer pool0
I0428 20:11:23.628509 32057 net.cpp:408] pool0 <- conv0
I0428 20:11:23.628514 32057 net.cpp:382] pool0 -> pool0
I0428 20:11:23.628563 32057 net.cpp:124] Setting up pool0
I0428 20:11:23.628568 32057 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:23.628571 32057 net.cpp:139] Memory required for data: 4808960
I0428 20:11:23.628574 32057 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:23.628584 32057 net.cpp:86] Creating Layer conv1
I0428 20:11:23.628587 32057 net.cpp:408] conv1 <- pool0
I0428 20:11:23.628592 32057 net.cpp:382] conv1 -> conv1
I0428 20:11:23.630579 32057 net.cpp:124] Setting up conv1
I0428 20:11:23.630610 32057 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:23.630614 32057 net.cpp:139] Memory required for data: 5628160
I0428 20:11:23.630623 32057 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:23.630632 32057 net.cpp:86] Creating Layer pool1
I0428 20:11:23.630636 32057 net.cpp:408] pool1 <- conv1
I0428 20:11:23.630641 32057 net.cpp:382] pool1 -> pool1
I0428 20:11:23.630697 32057 net.cpp:124] Setting up pool1
I0428 20:11:23.630702 32057 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:23.630707 32057 net.cpp:139] Memory required for data: 5832960
I0428 20:11:23.630724 32057 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:23.630740 32057 net.cpp:86] Creating Layer ip1
I0428 20:11:23.630744 32057 net.cpp:408] ip1 <- pool1
I0428 20:11:23.630764 32057 net.cpp:382] ip1 -> ip1
I0428 20:11:23.630976 32057 net.cpp:124] Setting up ip1
I0428 20:11:23.630985 32057 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:23.630987 32057 net.cpp:139] Memory required for data: 5839360
I0428 20:11:23.630995 32057 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:23.631000 32057 net.cpp:86] Creating Layer relu1
I0428 20:11:23.631003 32057 net.cpp:408] relu1 <- ip1
I0428 20:11:23.631007 32057 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:23.631186 32057 net.cpp:124] Setting up relu1
I0428 20:11:23.631196 32057 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:23.631198 32057 net.cpp:139] Memory required for data: 5845760
I0428 20:11:23.631201 32057 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:23.631207 32057 net.cpp:86] Creating Layer ip2
I0428 20:11:23.631211 32057 net.cpp:408] ip2 <- ip1
I0428 20:11:23.631216 32057 net.cpp:382] ip2 -> ip2
I0428 20:11:23.631310 32057 net.cpp:124] Setting up ip2
I0428 20:11:23.631317 32057 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:23.631320 32057 net.cpp:139] Memory required for data: 5852160
I0428 20:11:23.631325 32057 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:23.631331 32057 net.cpp:86] Creating Layer relu2
I0428 20:11:23.631335 32057 net.cpp:408] relu2 <- ip2
I0428 20:11:23.631338 32057 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:23.632175 32057 net.cpp:124] Setting up relu2
I0428 20:11:23.632187 32057 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:23.632206 32057 net.cpp:139] Memory required for data: 5858560
I0428 20:11:23.632210 32057 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:23.632216 32057 net.cpp:86] Creating Layer ip3
I0428 20:11:23.632220 32057 net.cpp:408] ip3 <- ip2
I0428 20:11:23.632225 32057 net.cpp:382] ip3 -> ip3
I0428 20:11:23.632334 32057 net.cpp:124] Setting up ip3
I0428 20:11:23.632341 32057 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:23.632344 32057 net.cpp:139] Memory required for data: 5861120
I0428 20:11:23.632351 32057 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:23.632356 32057 net.cpp:86] Creating Layer relu3
I0428 20:11:23.632359 32057 net.cpp:408] relu3 <- ip3
I0428 20:11:23.632362 32057 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:23.632519 32057 net.cpp:124] Setting up relu3
I0428 20:11:23.632527 32057 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:23.632531 32057 net.cpp:139] Memory required for data: 5863680
I0428 20:11:23.632534 32057 layer_factory.hpp:77] Creating layer loss
I0428 20:11:23.632539 32057 net.cpp:86] Creating Layer loss
I0428 20:11:23.632542 32057 net.cpp:408] loss <- ip3
I0428 20:11:23.632546 32057 net.cpp:408] loss <- label
I0428 20:11:23.632550 32057 net.cpp:382] loss -> loss
I0428 20:11:23.632565 32057 layer_factory.hpp:77] Creating layer loss
I0428 20:11:23.632846 32057 net.cpp:124] Setting up loss
I0428 20:11:23.632872 32057 net.cpp:131] Top shape: (1)
I0428 20:11:23.632890 32057 net.cpp:134]     with loss weight 1
I0428 20:11:23.632920 32057 net.cpp:139] Memory required for data: 5863684
I0428 20:11:23.632925 32057 net.cpp:200] loss needs backward computation.
I0428 20:11:23.632943 32057 net.cpp:200] relu3 needs backward computation.
I0428 20:11:23.632946 32057 net.cpp:200] ip3 needs backward computation.
I0428 20:11:23.632949 32057 net.cpp:200] relu2 needs backward computation.
I0428 20:11:23.632952 32057 net.cpp:200] ip2 needs backward computation.
I0428 20:11:23.632956 32057 net.cpp:200] relu1 needs backward computation.
I0428 20:11:23.632957 32057 net.cpp:200] ip1 needs backward computation.
I0428 20:11:23.632961 32057 net.cpp:200] pool1 needs backward computation.
I0428 20:11:23.632979 32057 net.cpp:200] conv1 needs backward computation.
I0428 20:11:23.632982 32057 net.cpp:200] pool0 needs backward computation.
I0428 20:11:23.632985 32057 net.cpp:200] conv0 needs backward computation.
I0428 20:11:23.632989 32057 net.cpp:202] mnist does not need backward computation.
I0428 20:11:23.632992 32057 net.cpp:244] This network produces output loss
I0428 20:11:23.633002 32057 net.cpp:257] Network initialization done.
I0428 20:11:23.633378 32057 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1157.prototxt
I0428 20:11:23.633404 32057 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:23.633491 32057 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:23.633568 32057 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:23.633613 32057 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:23.633625 32057 net.cpp:86] Creating Layer mnist
I0428 20:11:23.633630 32057 net.cpp:382] mnist -> data
I0428 20:11:23.633637 32057 net.cpp:382] mnist -> label
I0428 20:11:23.633749 32057 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:23.635681 32057 net.cpp:124] Setting up mnist
I0428 20:11:23.635694 32057 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:23.635699 32057 net.cpp:131] Top shape: 100 (100)
I0428 20:11:23.635702 32057 net.cpp:139] Memory required for data: 314000
I0428 20:11:23.635706 32057 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:23.635712 32057 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:23.635715 32057 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:23.635720 32057 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:23.635726 32057 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:23.635771 32057 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:23.635776 32057 net.cpp:131] Top shape: 100 (100)
I0428 20:11:23.635779 32057 net.cpp:131] Top shape: 100 (100)
I0428 20:11:23.635782 32057 net.cpp:139] Memory required for data: 314800
I0428 20:11:23.635800 32057 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:23.635808 32057 net.cpp:86] Creating Layer conv0
I0428 20:11:23.635812 32057 net.cpp:408] conv0 <- data
I0428 20:11:23.635817 32057 net.cpp:382] conv0 -> conv0
I0428 20:11:23.637522 32057 net.cpp:124] Setting up conv0
I0428 20:11:23.637536 32057 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:23.637539 32057 net.cpp:139] Memory required for data: 6074800
I0428 20:11:23.637548 32057 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:23.637553 32057 net.cpp:86] Creating Layer pool0
I0428 20:11:23.637557 32057 net.cpp:408] pool0 <- conv0
I0428 20:11:23.637562 32057 net.cpp:382] pool0 -> pool0
I0428 20:11:23.637596 32057 net.cpp:124] Setting up pool0
I0428 20:11:23.637601 32057 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:23.637603 32057 net.cpp:139] Memory required for data: 7514800
I0428 20:11:23.637606 32057 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:23.637614 32057 net.cpp:86] Creating Layer conv1
I0428 20:11:23.637617 32057 net.cpp:408] conv1 <- pool0
I0428 20:11:23.637622 32057 net.cpp:382] conv1 -> conv1
I0428 20:11:23.639341 32057 net.cpp:124] Setting up conv1
I0428 20:11:23.639370 32057 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:23.639374 32057 net.cpp:139] Memory required for data: 8794800
I0428 20:11:23.639384 32057 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:23.639390 32057 net.cpp:86] Creating Layer pool1
I0428 20:11:23.639394 32057 net.cpp:408] pool1 <- conv1
I0428 20:11:23.639400 32057 net.cpp:382] pool1 -> pool1
I0428 20:11:23.639451 32057 net.cpp:124] Setting up pool1
I0428 20:11:23.639457 32057 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:23.639461 32057 net.cpp:139] Memory required for data: 9114800
I0428 20:11:23.639464 32057 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:23.639470 32057 net.cpp:86] Creating Layer ip1
I0428 20:11:23.639473 32057 net.cpp:408] ip1 <- pool1
I0428 20:11:23.639478 32057 net.cpp:382] ip1 -> ip1
I0428 20:11:23.639734 32057 net.cpp:124] Setting up ip1
I0428 20:11:23.639756 32057 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:23.639771 32057 net.cpp:139] Memory required for data: 9124800
I0428 20:11:23.639791 32057 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:23.639796 32057 net.cpp:86] Creating Layer relu1
I0428 20:11:23.639799 32057 net.cpp:408] relu1 <- ip1
I0428 20:11:23.639804 32057 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:23.640041 32057 net.cpp:124] Setting up relu1
I0428 20:11:23.640050 32057 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:23.640053 32057 net.cpp:139] Memory required for data: 9134800
I0428 20:11:23.640056 32057 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:23.640065 32057 net.cpp:86] Creating Layer ip2
I0428 20:11:23.640069 32057 net.cpp:408] ip2 <- ip1
I0428 20:11:23.640074 32057 net.cpp:382] ip2 -> ip2
I0428 20:11:23.640172 32057 net.cpp:124] Setting up ip2
I0428 20:11:23.640179 32057 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:23.640182 32057 net.cpp:139] Memory required for data: 9144800
I0428 20:11:23.640189 32057 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:23.640194 32057 net.cpp:86] Creating Layer relu2
I0428 20:11:23.640208 32057 net.cpp:408] relu2 <- ip2
I0428 20:11:23.640213 32057 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:23.640379 32057 net.cpp:124] Setting up relu2
I0428 20:11:23.640388 32057 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:23.640391 32057 net.cpp:139] Memory required for data: 9154800
I0428 20:11:23.640395 32057 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:23.640401 32057 net.cpp:86] Creating Layer ip3
I0428 20:11:23.640405 32057 net.cpp:408] ip3 <- ip2
I0428 20:11:23.640410 32057 net.cpp:382] ip3 -> ip3
I0428 20:11:23.640508 32057 net.cpp:124] Setting up ip3
I0428 20:11:23.640516 32057 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:23.640519 32057 net.cpp:139] Memory required for data: 9158800
I0428 20:11:23.640527 32057 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:23.640532 32057 net.cpp:86] Creating Layer relu3
I0428 20:11:23.640535 32057 net.cpp:408] relu3 <- ip3
I0428 20:11:23.640540 32057 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:23.641412 32057 net.cpp:124] Setting up relu3
I0428 20:11:23.641440 32057 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:23.641443 32057 net.cpp:139] Memory required for data: 9162800
I0428 20:11:23.641448 32057 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:23.641453 32057 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:23.641455 32057 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:23.641463 32057 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:23.641469 32057 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:23.641510 32057 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:23.641515 32057 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:23.641518 32057 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:23.641521 32057 net.cpp:139] Memory required for data: 9170800
I0428 20:11:23.641525 32057 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:23.641530 32057 net.cpp:86] Creating Layer accuracy
I0428 20:11:23.641533 32057 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:23.641537 32057 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:23.641543 32057 net.cpp:382] accuracy -> accuracy
I0428 20:11:23.641551 32057 net.cpp:124] Setting up accuracy
I0428 20:11:23.641554 32057 net.cpp:131] Top shape: (1)
I0428 20:11:23.641557 32057 net.cpp:139] Memory required for data: 9170804
I0428 20:11:23.641559 32057 layer_factory.hpp:77] Creating layer loss
I0428 20:11:23.641564 32057 net.cpp:86] Creating Layer loss
I0428 20:11:23.641567 32057 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:23.641571 32057 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:23.641575 32057 net.cpp:382] loss -> loss
I0428 20:11:23.641582 32057 layer_factory.hpp:77] Creating layer loss
I0428 20:11:23.641850 32057 net.cpp:124] Setting up loss
I0428 20:11:23.641860 32057 net.cpp:131] Top shape: (1)
I0428 20:11:23.641863 32057 net.cpp:134]     with loss weight 1
I0428 20:11:23.641880 32057 net.cpp:139] Memory required for data: 9170808
I0428 20:11:23.641885 32057 net.cpp:200] loss needs backward computation.
I0428 20:11:23.641888 32057 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:23.641892 32057 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:23.641896 32057 net.cpp:200] relu3 needs backward computation.
I0428 20:11:23.641898 32057 net.cpp:200] ip3 needs backward computation.
I0428 20:11:23.641901 32057 net.cpp:200] relu2 needs backward computation.
I0428 20:11:23.641904 32057 net.cpp:200] ip2 needs backward computation.
I0428 20:11:23.641908 32057 net.cpp:200] relu1 needs backward computation.
I0428 20:11:23.641911 32057 net.cpp:200] ip1 needs backward computation.
I0428 20:11:23.641914 32057 net.cpp:200] pool1 needs backward computation.
I0428 20:11:23.641917 32057 net.cpp:200] conv1 needs backward computation.
I0428 20:11:23.641921 32057 net.cpp:200] pool0 needs backward computation.
I0428 20:11:23.641924 32057 net.cpp:200] conv0 needs backward computation.
I0428 20:11:23.641933 32057 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:23.641937 32057 net.cpp:202] mnist does not need backward computation.
I0428 20:11:23.641940 32057 net.cpp:244] This network produces output accuracy
I0428 20:11:23.641944 32057 net.cpp:244] This network produces output loss
I0428 20:11:23.641957 32057 net.cpp:257] Network initialization done.
I0428 20:11:23.641999 32057 solver.cpp:56] Solver scaffolding done.
I0428 20:11:23.642395 32057 caffe.cpp:248] Starting Optimization
I0428 20:11:23.642400 32057 solver.cpp:273] Solving LeNet
I0428 20:11:23.642402 32057 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:23.643229 32057 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:23.649622 32057 blocking_queue.cpp:49] Waiting for data
I0428 20:11:23.722637 32064 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:23.723266 32057 solver.cpp:398]     Test net output #0: accuracy = 0.096
I0428 20:11:23.723305 32057 solver.cpp:398]     Test net output #1: loss = 2.30632 (* 1 = 2.30632 loss)
I0428 20:11:23.727145 32057 solver.cpp:219] Iteration 0 (-1.18976e-30 iter/s, 0.0846993s/100 iters), loss = 2.30537
I0428 20:11:23.727169 32057 solver.cpp:238]     Train net output #0: loss = 2.30537 (* 1 = 2.30537 loss)
I0428 20:11:23.727180 32057 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:23.850814 32057 solver.cpp:219] Iteration 100 (808.861 iter/s, 0.123631s/100 iters), loss = 1.1316
I0428 20:11:23.850854 32057 solver.cpp:238]     Train net output #0: loss = 1.1316 (* 1 = 1.1316 loss)
I0428 20:11:23.850862 32057 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:23.972587 32057 solver.cpp:219] Iteration 200 (821.545 iter/s, 0.121722s/100 iters), loss = 0.737669
I0428 20:11:23.972626 32057 solver.cpp:238]     Train net output #0: loss = 0.737669 (* 1 = 0.737669 loss)
I0428 20:11:23.972632 32057 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:24.095446 32057 solver.cpp:219] Iteration 300 (814.168 iter/s, 0.122825s/100 iters), loss = 0.180303
I0428 20:11:24.095489 32057 solver.cpp:238]     Train net output #0: loss = 0.180303 (* 1 = 0.180303 loss)
I0428 20:11:24.095495 32057 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:24.216680 32057 solver.cpp:219] Iteration 400 (825.224 iter/s, 0.121179s/100 iters), loss = 0.138408
I0428 20:11:24.216722 32057 solver.cpp:238]     Train net output #0: loss = 0.138408 (* 1 = 0.138408 loss)
I0428 20:11:24.216729 32057 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:24.335808 32057 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:24.393434 32064 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:24.394146 32057 solver.cpp:398]     Test net output #0: accuracy = 0.9559
I0428 20:11:24.394181 32057 solver.cpp:398]     Test net output #1: loss = 0.144646 (* 1 = 0.144646 loss)
I0428 20:11:24.395504 32057 solver.cpp:219] Iteration 500 (559.385 iter/s, 0.178768s/100 iters), loss = 0.22172
I0428 20:11:24.395558 32057 solver.cpp:238]     Train net output #0: loss = 0.22172 (* 1 = 0.22172 loss)
I0428 20:11:24.395566 32057 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:24.525710 32057 solver.cpp:219] Iteration 600 (768.318 iter/s, 0.130154s/100 iters), loss = 0.0929876
I0428 20:11:24.525771 32057 solver.cpp:238]     Train net output #0: loss = 0.0929877 (* 1 = 0.0929877 loss)
I0428 20:11:24.525779 32057 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:24.649308 32057 solver.cpp:219] Iteration 700 (809.539 iter/s, 0.123527s/100 iters), loss = 0.18645
I0428 20:11:24.649350 32057 solver.cpp:238]     Train net output #0: loss = 0.18645 (* 1 = 0.18645 loss)
I0428 20:11:24.649358 32057 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:24.769768 32057 solver.cpp:219] Iteration 800 (830.509 iter/s, 0.120408s/100 iters), loss = 0.22975
I0428 20:11:24.769824 32057 solver.cpp:238]     Train net output #0: loss = 0.22975 (* 1 = 0.22975 loss)
I0428 20:11:24.769830 32057 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:24.890002 32057 solver.cpp:219] Iteration 900 (832.059 iter/s, 0.120184s/100 iters), loss = 0.137644
I0428 20:11:24.890044 32057 solver.cpp:238]     Train net output #0: loss = 0.137644 (* 1 = 0.137644 loss)
I0428 20:11:24.890051 32057 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:24.929941 32063 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:25.007887 32057 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:25.009680 32057 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:25.010685 32057 solver.cpp:311] Iteration 1000, loss = 0.138036
I0428 20:11:25.010715 32057 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:25.086519 32064 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:25.087172 32057 solver.cpp:398]     Test net output #0: accuracy = 0.9742
I0428 20:11:25.087206 32057 solver.cpp:398]     Test net output #1: loss = 0.0821892 (* 1 = 0.0821892 loss)
I0428 20:11:25.087213 32057 solver.cpp:316] Optimization Done.
I0428 20:11:25.087215 32057 caffe.cpp:259] Optimization Done.
