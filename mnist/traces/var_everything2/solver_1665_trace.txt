I0428 20:38:26.420554  5123 caffe.cpp:218] Using GPUs 0
I0428 20:38:26.457286  5123 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:26.966806  5123 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1665.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:26.966948  5123 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1665.prototxt
I0428 20:38:26.967365  5123 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:26.967386  5123 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:26.967489  5123 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:26.967571  5123 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:26.967674  5123 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:26.967697  5123 net.cpp:86] Creating Layer mnist
I0428 20:38:26.967707  5123 net.cpp:382] mnist -> data
I0428 20:38:26.967730  5123 net.cpp:382] mnist -> label
I0428 20:38:26.968844  5123 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:26.971305  5123 net.cpp:124] Setting up mnist
I0428 20:38:26.971323  5123 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:26.971329  5123 net.cpp:131] Top shape: 64 (64)
I0428 20:38:26.971333  5123 net.cpp:139] Memory required for data: 200960
I0428 20:38:26.971339  5123 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:26.971369  5123 net.cpp:86] Creating Layer conv0
I0428 20:38:26.971388  5123 net.cpp:408] conv0 <- data
I0428 20:38:26.971403  5123 net.cpp:382] conv0 -> conv0
I0428 20:38:27.255864  5123 net.cpp:124] Setting up conv0
I0428 20:38:27.255892  5123 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:27.255895  5123 net.cpp:139] Memory required for data: 14946560
I0428 20:38:27.255910  5123 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:27.255923  5123 net.cpp:86] Creating Layer pool0
I0428 20:38:27.255928  5123 net.cpp:408] pool0 <- conv0
I0428 20:38:27.255933  5123 net.cpp:382] pool0 -> pool0
I0428 20:38:27.255980  5123 net.cpp:124] Setting up pool0
I0428 20:38:27.255985  5123 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:27.255987  5123 net.cpp:139] Memory required for data: 18632960
I0428 20:38:27.255990  5123 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:27.256001  5123 net.cpp:86] Creating Layer conv1
I0428 20:38:27.256006  5123 net.cpp:408] conv1 <- pool0
I0428 20:38:27.256011  5123 net.cpp:382] conv1 -> conv1
I0428 20:38:27.260010  5123 net.cpp:124] Setting up conv1
I0428 20:38:27.260025  5123 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:27.260027  5123 net.cpp:139] Memory required for data: 20271360
I0428 20:38:27.260036  5123 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:27.260043  5123 net.cpp:86] Creating Layer pool1
I0428 20:38:27.260047  5123 net.cpp:408] pool1 <- conv1
I0428 20:38:27.260052  5123 net.cpp:382] pool1 -> pool1
I0428 20:38:27.260087  5123 net.cpp:124] Setting up pool1
I0428 20:38:27.260093  5123 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:27.260097  5123 net.cpp:139] Memory required for data: 20680960
I0428 20:38:27.260098  5123 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:27.260105  5123 net.cpp:86] Creating Layer ip1
I0428 20:38:27.260108  5123 net.cpp:408] ip1 <- pool1
I0428 20:38:27.260113  5123 net.cpp:382] ip1 -> ip1
I0428 20:38:27.260435  5123 net.cpp:124] Setting up ip1
I0428 20:38:27.260442  5123 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:27.260445  5123 net.cpp:139] Memory required for data: 20687360
I0428 20:38:27.260452  5123 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:27.260458  5123 net.cpp:86] Creating Layer relu1
I0428 20:38:27.260462  5123 net.cpp:408] relu1 <- ip1
I0428 20:38:27.260465  5123 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:27.260627  5123 net.cpp:124] Setting up relu1
I0428 20:38:27.260635  5123 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:27.260638  5123 net.cpp:139] Memory required for data: 20693760
I0428 20:38:27.260643  5123 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:27.260648  5123 net.cpp:86] Creating Layer ip2
I0428 20:38:27.260651  5123 net.cpp:408] ip2 <- ip1
I0428 20:38:27.260656  5123 net.cpp:382] ip2 -> ip2
I0428 20:38:27.260764  5123 net.cpp:124] Setting up ip2
I0428 20:38:27.260771  5123 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:27.260774  5123 net.cpp:139] Memory required for data: 20706560
I0428 20:38:27.260781  5123 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:27.260785  5123 net.cpp:86] Creating Layer relu2
I0428 20:38:27.260789  5123 net.cpp:408] relu2 <- ip2
I0428 20:38:27.260793  5123 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:27.261550  5123 net.cpp:124] Setting up relu2
I0428 20:38:27.261564  5123 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:27.261566  5123 net.cpp:139] Memory required for data: 20719360
I0428 20:38:27.261570  5123 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:27.261577  5123 net.cpp:86] Creating Layer ip3
I0428 20:38:27.261580  5123 net.cpp:408] ip3 <- ip2
I0428 20:38:27.261586  5123 net.cpp:382] ip3 -> ip3
I0428 20:38:27.261687  5123 net.cpp:124] Setting up ip3
I0428 20:38:27.261695  5123 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:27.261698  5123 net.cpp:139] Memory required for data: 20721920
I0428 20:38:27.261706  5123 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:27.261711  5123 net.cpp:86] Creating Layer relu3
I0428 20:38:27.261714  5123 net.cpp:408] relu3 <- ip3
I0428 20:38:27.261734  5123 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:27.261881  5123 net.cpp:124] Setting up relu3
I0428 20:38:27.261890  5123 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:27.261893  5123 net.cpp:139] Memory required for data: 20724480
I0428 20:38:27.261896  5123 layer_factory.hpp:77] Creating layer loss
I0428 20:38:27.261901  5123 net.cpp:86] Creating Layer loss
I0428 20:38:27.261905  5123 net.cpp:408] loss <- ip3
I0428 20:38:27.261909  5123 net.cpp:408] loss <- label
I0428 20:38:27.261914  5123 net.cpp:382] loss -> loss
I0428 20:38:27.261929  5123 layer_factory.hpp:77] Creating layer loss
I0428 20:38:27.262153  5123 net.cpp:124] Setting up loss
I0428 20:38:27.262163  5123 net.cpp:131] Top shape: (1)
I0428 20:38:27.262166  5123 net.cpp:134]     with loss weight 1
I0428 20:38:27.262182  5123 net.cpp:139] Memory required for data: 20724484
I0428 20:38:27.262186  5123 net.cpp:200] loss needs backward computation.
I0428 20:38:27.262189  5123 net.cpp:200] relu3 needs backward computation.
I0428 20:38:27.262192  5123 net.cpp:200] ip3 needs backward computation.
I0428 20:38:27.262195  5123 net.cpp:200] relu2 needs backward computation.
I0428 20:38:27.262197  5123 net.cpp:200] ip2 needs backward computation.
I0428 20:38:27.262200  5123 net.cpp:200] relu1 needs backward computation.
I0428 20:38:27.262203  5123 net.cpp:200] ip1 needs backward computation.
I0428 20:38:27.262207  5123 net.cpp:200] pool1 needs backward computation.
I0428 20:38:27.262209  5123 net.cpp:200] conv1 needs backward computation.
I0428 20:38:27.262212  5123 net.cpp:200] pool0 needs backward computation.
I0428 20:38:27.262215  5123 net.cpp:200] conv0 needs backward computation.
I0428 20:38:27.262218  5123 net.cpp:202] mnist does not need backward computation.
I0428 20:38:27.262222  5123 net.cpp:244] This network produces output loss
I0428 20:38:27.262230  5123 net.cpp:257] Network initialization done.
I0428 20:38:27.262547  5123 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1665.prototxt
I0428 20:38:27.262574  5123 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:27.262662  5123 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:27.262742  5123 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:27.262785  5123 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:27.262799  5123 net.cpp:86] Creating Layer mnist
I0428 20:38:27.262802  5123 net.cpp:382] mnist -> data
I0428 20:38:27.262810  5123 net.cpp:382] mnist -> label
I0428 20:38:27.262893  5123 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:27.264950  5123 net.cpp:124] Setting up mnist
I0428 20:38:27.264964  5123 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:27.264986  5123 net.cpp:131] Top shape: 100 (100)
I0428 20:38:27.264993  5123 net.cpp:139] Memory required for data: 314000
I0428 20:38:27.264997  5123 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:27.265004  5123 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:27.265007  5123 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:27.265012  5123 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:27.265019  5123 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:27.265079  5123 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:27.265092  5123 net.cpp:131] Top shape: 100 (100)
I0428 20:38:27.265096  5123 net.cpp:131] Top shape: 100 (100)
I0428 20:38:27.265100  5123 net.cpp:139] Memory required for data: 314800
I0428 20:38:27.265102  5123 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:27.265111  5123 net.cpp:86] Creating Layer conv0
I0428 20:38:27.265130  5123 net.cpp:408] conv0 <- data
I0428 20:38:27.265135  5123 net.cpp:382] conv0 -> conv0
I0428 20:38:27.266748  5123 net.cpp:124] Setting up conv0
I0428 20:38:27.266762  5123 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:27.266767  5123 net.cpp:139] Memory required for data: 23354800
I0428 20:38:27.266775  5123 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:27.266782  5123 net.cpp:86] Creating Layer pool0
I0428 20:38:27.266784  5123 net.cpp:408] pool0 <- conv0
I0428 20:38:27.266789  5123 net.cpp:382] pool0 -> pool0
I0428 20:38:27.266824  5123 net.cpp:124] Setting up pool0
I0428 20:38:27.266829  5123 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:27.266832  5123 net.cpp:139] Memory required for data: 29114800
I0428 20:38:27.266835  5123 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:27.266844  5123 net.cpp:86] Creating Layer conv1
I0428 20:38:27.266847  5123 net.cpp:408] conv1 <- pool0
I0428 20:38:27.266852  5123 net.cpp:382] conv1 -> conv1
I0428 20:38:27.269665  5123 net.cpp:124] Setting up conv1
I0428 20:38:27.269678  5123 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:27.269682  5123 net.cpp:139] Memory required for data: 31674800
I0428 20:38:27.269690  5123 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:27.269696  5123 net.cpp:86] Creating Layer pool1
I0428 20:38:27.269701  5123 net.cpp:408] pool1 <- conv1
I0428 20:38:27.269706  5123 net.cpp:382] pool1 -> pool1
I0428 20:38:27.269753  5123 net.cpp:124] Setting up pool1
I0428 20:38:27.269759  5123 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:27.269762  5123 net.cpp:139] Memory required for data: 32314800
I0428 20:38:27.269765  5123 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:27.269770  5123 net.cpp:86] Creating Layer ip1
I0428 20:38:27.269780  5123 net.cpp:408] ip1 <- pool1
I0428 20:38:27.269785  5123 net.cpp:382] ip1 -> ip1
I0428 20:38:27.270115  5123 net.cpp:124] Setting up ip1
I0428 20:38:27.270133  5123 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:27.270136  5123 net.cpp:139] Memory required for data: 32324800
I0428 20:38:27.270143  5123 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:27.270148  5123 net.cpp:86] Creating Layer relu1
I0428 20:38:27.270151  5123 net.cpp:408] relu1 <- ip1
I0428 20:38:27.270156  5123 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:27.270361  5123 net.cpp:124] Setting up relu1
I0428 20:38:27.270370  5123 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:27.270373  5123 net.cpp:139] Memory required for data: 32334800
I0428 20:38:27.270376  5123 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:27.270383  5123 net.cpp:86] Creating Layer ip2
I0428 20:38:27.270386  5123 net.cpp:408] ip2 <- ip1
I0428 20:38:27.270391  5123 net.cpp:382] ip2 -> ip2
I0428 20:38:27.270531  5123 net.cpp:124] Setting up ip2
I0428 20:38:27.270539  5123 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:27.270541  5123 net.cpp:139] Memory required for data: 32354800
I0428 20:38:27.270547  5123 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:27.270551  5123 net.cpp:86] Creating Layer relu2
I0428 20:38:27.270555  5123 net.cpp:408] relu2 <- ip2
I0428 20:38:27.270560  5123 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:27.270716  5123 net.cpp:124] Setting up relu2
I0428 20:38:27.270725  5123 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:27.270727  5123 net.cpp:139] Memory required for data: 32374800
I0428 20:38:27.270731  5123 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:27.270736  5123 net.cpp:86] Creating Layer ip3
I0428 20:38:27.270745  5123 net.cpp:408] ip3 <- ip2
I0428 20:38:27.270750  5123 net.cpp:382] ip3 -> ip3
I0428 20:38:27.270859  5123 net.cpp:124] Setting up ip3
I0428 20:38:27.270866  5123 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:27.270869  5123 net.cpp:139] Memory required for data: 32378800
I0428 20:38:27.270879  5123 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:27.270884  5123 net.cpp:86] Creating Layer relu3
I0428 20:38:27.270887  5123 net.cpp:408] relu3 <- ip3
I0428 20:38:27.270891  5123 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:27.271661  5123 net.cpp:124] Setting up relu3
I0428 20:38:27.271672  5123 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:27.271682  5123 net.cpp:139] Memory required for data: 32382800
I0428 20:38:27.271684  5123 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:27.271689  5123 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:27.271693  5123 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:27.271697  5123 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:27.271703  5123 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:27.271755  5123 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:27.271770  5123 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:27.271773  5123 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:27.271776  5123 net.cpp:139] Memory required for data: 32390800
I0428 20:38:27.271780  5123 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:27.271783  5123 net.cpp:86] Creating Layer accuracy
I0428 20:38:27.271787  5123 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:27.271791  5123 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:27.271795  5123 net.cpp:382] accuracy -> accuracy
I0428 20:38:27.271802  5123 net.cpp:124] Setting up accuracy
I0428 20:38:27.271806  5123 net.cpp:131] Top shape: (1)
I0428 20:38:27.271808  5123 net.cpp:139] Memory required for data: 32390804
I0428 20:38:27.271811  5123 layer_factory.hpp:77] Creating layer loss
I0428 20:38:27.271821  5123 net.cpp:86] Creating Layer loss
I0428 20:38:27.271824  5123 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:27.271828  5123 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:27.271832  5123 net.cpp:382] loss -> loss
I0428 20:38:27.271838  5123 layer_factory.hpp:77] Creating layer loss
I0428 20:38:27.272076  5123 net.cpp:124] Setting up loss
I0428 20:38:27.272086  5123 net.cpp:131] Top shape: (1)
I0428 20:38:27.272089  5123 net.cpp:134]     with loss weight 1
I0428 20:38:27.272105  5123 net.cpp:139] Memory required for data: 32390808
I0428 20:38:27.272109  5123 net.cpp:200] loss needs backward computation.
I0428 20:38:27.272114  5123 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:27.272117  5123 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:27.272120  5123 net.cpp:200] relu3 needs backward computation.
I0428 20:38:27.272123  5123 net.cpp:200] ip3 needs backward computation.
I0428 20:38:27.272126  5123 net.cpp:200] relu2 needs backward computation.
I0428 20:38:27.272130  5123 net.cpp:200] ip2 needs backward computation.
I0428 20:38:27.272132  5123 net.cpp:200] relu1 needs backward computation.
I0428 20:38:27.272135  5123 net.cpp:200] ip1 needs backward computation.
I0428 20:38:27.272138  5123 net.cpp:200] pool1 needs backward computation.
I0428 20:38:27.272141  5123 net.cpp:200] conv1 needs backward computation.
I0428 20:38:27.272145  5123 net.cpp:200] pool0 needs backward computation.
I0428 20:38:27.272148  5123 net.cpp:200] conv0 needs backward computation.
I0428 20:38:27.272152  5123 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:27.272156  5123 net.cpp:202] mnist does not need backward computation.
I0428 20:38:27.272158  5123 net.cpp:244] This network produces output accuracy
I0428 20:38:27.272162  5123 net.cpp:244] This network produces output loss
I0428 20:38:27.272172  5123 net.cpp:257] Network initialization done.
I0428 20:38:27.272212  5123 solver.cpp:56] Solver scaffolding done.
I0428 20:38:27.272579  5123 caffe.cpp:248] Starting Optimization
I0428 20:38:27.272585  5123 solver.cpp:273] Solving LeNet
I0428 20:38:27.272588  5123 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:27.274025  5123 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:27.406402  5130 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:27.410109  5123 solver.cpp:398]     Test net output #0: accuracy = 0.0637
I0428 20:38:27.410142  5123 solver.cpp:398]     Test net output #1: loss = 2.33945 (* 1 = 2.33945 loss)
I0428 20:38:27.415838  5123 solver.cpp:219] Iteration 0 (-2.78172e-31 iter/s, 0.143194s/100 iters), loss = 2.34154
I0428 20:38:27.415877  5123 solver.cpp:238]     Train net output #0: loss = 2.34154 (* 1 = 2.34154 loss)
I0428 20:38:27.415904  5123 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:27.690024  5123 solver.cpp:219] Iteration 100 (364.797 iter/s, 0.274125s/100 iters), loss = 0.918785
I0428 20:38:27.690090  5123 solver.cpp:238]     Train net output #0: loss = 0.918785 (* 1 = 0.918785 loss)
I0428 20:38:27.690098  5123 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:27.963443  5123 solver.cpp:219] Iteration 200 (365.854 iter/s, 0.273333s/100 iters), loss = 0.451119
I0428 20:38:27.963479  5123 solver.cpp:238]     Train net output #0: loss = 0.451119 (* 1 = 0.451119 loss)
I0428 20:38:27.963486  5123 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:28.236181  5123 solver.cpp:219] Iteration 300 (366.725 iter/s, 0.272684s/100 iters), loss = 0.898779
I0428 20:38:28.236223  5123 solver.cpp:238]     Train net output #0: loss = 0.898779 (* 1 = 0.898779 loss)
I0428 20:38:28.236230  5123 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:28.512431  5123 solver.cpp:219] Iteration 400 (362.05 iter/s, 0.276205s/100 iters), loss = 0.651387
I0428 20:38:28.512473  5123 solver.cpp:238]     Train net output #0: loss = 0.651387 (* 1 = 0.651387 loss)
I0428 20:38:28.512480  5123 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:28.784988  5123 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:28.911371  5130 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:28.915163  5123 solver.cpp:398]     Test net output #0: accuracy = 0.779
I0428 20:38:28.915202  5123 solver.cpp:398]     Test net output #1: loss = 0.545363 (* 1 = 0.545363 loss)
I0428 20:38:28.917902  5123 solver.cpp:219] Iteration 500 (246.661 iter/s, 0.405415s/100 iters), loss = 0.56509
I0428 20:38:28.917942  5123 solver.cpp:238]     Train net output #0: loss = 0.56509 (* 1 = 0.56509 loss)
I0428 20:38:28.917963  5123 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:29.198354  5123 solver.cpp:219] Iteration 600 (356.619 iter/s, 0.280411s/100 iters), loss = 0.409599
I0428 20:38:29.198397  5123 solver.cpp:238]     Train net output #0: loss = 0.409599 (* 1 = 0.409599 loss)
I0428 20:38:29.198403  5123 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:29.479523  5123 solver.cpp:219] Iteration 700 (355.735 iter/s, 0.281108s/100 iters), loss = 0.521523
I0428 20:38:29.479568  5123 solver.cpp:238]     Train net output #0: loss = 0.521523 (* 1 = 0.521523 loss)
I0428 20:38:29.479574  5123 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:29.763739  5123 solver.cpp:219] Iteration 800 (351.902 iter/s, 0.28417s/100 iters), loss = 0.619468
I0428 20:38:29.763782  5123 solver.cpp:238]     Train net output #0: loss = 0.619468 (* 1 = 0.619468 loss)
I0428 20:38:29.763788  5123 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:30.049265  5123 solver.cpp:219] Iteration 900 (350.286 iter/s, 0.285481s/100 iters), loss = 0.402689
I0428 20:38:30.049304  5123 solver.cpp:238]     Train net output #0: loss = 0.402689 (* 1 = 0.402689 loss)
I0428 20:38:30.049310  5123 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:30.143069  5129 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:30.330341  5123 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:30.336061  5123 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:30.339354  5123 solver.cpp:311] Iteration 1000, loss = 0.439533
I0428 20:38:30.339370  5123 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:30.467417  5130 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:30.471058  5123 solver.cpp:398]     Test net output #0: accuracy = 0.7846
I0428 20:38:30.471078  5123 solver.cpp:398]     Test net output #1: loss = 0.522913 (* 1 = 0.522913 loss)
I0428 20:38:30.471099  5123 solver.cpp:316] Optimization Done.
I0428 20:38:30.471102  5123 caffe.cpp:259] Optimization Done.
