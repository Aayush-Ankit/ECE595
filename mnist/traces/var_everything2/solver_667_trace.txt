I0428 19:52:38.761339 27559 caffe.cpp:218] Using GPUs 0
I0428 19:52:38.793427 27559 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:39.282943 27559 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test667.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:39.283097 27559 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test667.prototxt
I0428 19:52:39.283416 27559 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:39.283430 27559 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:39.283502 27559 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:39.283558 27559 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:39.283645 27559 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:39.283665 27559 net.cpp:86] Creating Layer mnist
I0428 19:52:39.283673 27559 net.cpp:382] mnist -> data
I0428 19:52:39.283690 27559 net.cpp:382] mnist -> label
I0428 19:52:39.284677 27559 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:39.287170 27559 net.cpp:124] Setting up mnist
I0428 19:52:39.287202 27559 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:39.287207 27559 net.cpp:131] Top shape: 64 (64)
I0428 19:52:39.287210 27559 net.cpp:139] Memory required for data: 200960
I0428 19:52:39.287217 27559 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:39.287230 27559 net.cpp:86] Creating Layer conv0
I0428 19:52:39.287235 27559 net.cpp:408] conv0 <- data
I0428 19:52:39.287245 27559 net.cpp:382] conv0 -> conv0
I0428 19:52:39.524960 27559 net.cpp:124] Setting up conv0
I0428 19:52:39.525002 27559 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:39.525007 27559 net.cpp:139] Memory required for data: 938240
I0428 19:52:39.525039 27559 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:39.525068 27559 net.cpp:86] Creating Layer pool0
I0428 19:52:39.525079 27559 net.cpp:408] pool0 <- conv0
I0428 19:52:39.525084 27559 net.cpp:382] pool0 -> pool0
I0428 19:52:39.525130 27559 net.cpp:124] Setting up pool0
I0428 19:52:39.525143 27559 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:39.525146 27559 net.cpp:139] Memory required for data: 1122560
I0428 19:52:39.525149 27559 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:39.525159 27559 net.cpp:86] Creating Layer conv1
I0428 19:52:39.525162 27559 net.cpp:408] conv1 <- pool0
I0428 19:52:39.525167 27559 net.cpp:382] conv1 -> conv1
I0428 19:52:39.527930 27559 net.cpp:124] Setting up conv1
I0428 19:52:39.527961 27559 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:39.527964 27559 net.cpp:139] Memory required for data: 1941760
I0428 19:52:39.527973 27559 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:39.527982 27559 net.cpp:86] Creating Layer pool1
I0428 19:52:39.527987 27559 net.cpp:408] pool1 <- conv1
I0428 19:52:39.527992 27559 net.cpp:382] pool1 -> pool1
I0428 19:52:39.528059 27559 net.cpp:124] Setting up pool1
I0428 19:52:39.528074 27559 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:39.528077 27559 net.cpp:139] Memory required for data: 2146560
I0428 19:52:39.528079 27559 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:39.528086 27559 net.cpp:86] Creating Layer ip1
I0428 19:52:39.528090 27559 net.cpp:408] ip1 <- pool1
I0428 19:52:39.528095 27559 net.cpp:382] ip1 -> ip1
I0428 19:52:39.528231 27559 net.cpp:124] Setting up ip1
I0428 19:52:39.528239 27559 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:39.528242 27559 net.cpp:139] Memory required for data: 2149120
I0428 19:52:39.528249 27559 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:39.528254 27559 net.cpp:86] Creating Layer relu1
I0428 19:52:39.528259 27559 net.cpp:408] relu1 <- ip1
I0428 19:52:39.528262 27559 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:39.528421 27559 net.cpp:124] Setting up relu1
I0428 19:52:39.528430 27559 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:39.528434 27559 net.cpp:139] Memory required for data: 2151680
I0428 19:52:39.528436 27559 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:39.528442 27559 net.cpp:86] Creating Layer ip2
I0428 19:52:39.528445 27559 net.cpp:408] ip2 <- ip1
I0428 19:52:39.528450 27559 net.cpp:382] ip2 -> ip2
I0428 19:52:39.528542 27559 net.cpp:124] Setting up ip2
I0428 19:52:39.528548 27559 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:39.528551 27559 net.cpp:139] Memory required for data: 2154240
I0428 19:52:39.528556 27559 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:39.528563 27559 net.cpp:86] Creating Layer relu2
I0428 19:52:39.528566 27559 net.cpp:408] relu2 <- ip2
I0428 19:52:39.528570 27559 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:39.529402 27559 net.cpp:124] Setting up relu2
I0428 19:52:39.529430 27559 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:39.529434 27559 net.cpp:139] Memory required for data: 2156800
I0428 19:52:39.529438 27559 layer_factory.hpp:77] Creating layer loss
I0428 19:52:39.529445 27559 net.cpp:86] Creating Layer loss
I0428 19:52:39.529449 27559 net.cpp:408] loss <- ip2
I0428 19:52:39.529454 27559 net.cpp:408] loss <- label
I0428 19:52:39.529460 27559 net.cpp:382] loss -> loss
I0428 19:52:39.529481 27559 layer_factory.hpp:77] Creating layer loss
I0428 19:52:39.529753 27559 net.cpp:124] Setting up loss
I0428 19:52:39.529763 27559 net.cpp:131] Top shape: (1)
I0428 19:52:39.529767 27559 net.cpp:134]     with loss weight 1
I0428 19:52:39.529780 27559 net.cpp:139] Memory required for data: 2156804
I0428 19:52:39.529783 27559 net.cpp:200] loss needs backward computation.
I0428 19:52:39.529788 27559 net.cpp:200] relu2 needs backward computation.
I0428 19:52:39.529791 27559 net.cpp:200] ip2 needs backward computation.
I0428 19:52:39.529794 27559 net.cpp:200] relu1 needs backward computation.
I0428 19:52:39.529796 27559 net.cpp:200] ip1 needs backward computation.
I0428 19:52:39.529810 27559 net.cpp:200] pool1 needs backward computation.
I0428 19:52:39.529814 27559 net.cpp:200] conv1 needs backward computation.
I0428 19:52:39.529817 27559 net.cpp:200] pool0 needs backward computation.
I0428 19:52:39.529820 27559 net.cpp:200] conv0 needs backward computation.
I0428 19:52:39.529824 27559 net.cpp:202] mnist does not need backward computation.
I0428 19:52:39.529826 27559 net.cpp:244] This network produces output loss
I0428 19:52:39.529835 27559 net.cpp:257] Network initialization done.
I0428 19:52:39.530159 27559 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test667.prototxt
I0428 19:52:39.530200 27559 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:39.530280 27559 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:39.530342 27559 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:39.530390 27559 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:39.530401 27559 net.cpp:86] Creating Layer mnist
I0428 19:52:39.530406 27559 net.cpp:382] mnist -> data
I0428 19:52:39.530413 27559 net.cpp:382] mnist -> label
I0428 19:52:39.530495 27559 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:39.532510 27559 net.cpp:124] Setting up mnist
I0428 19:52:39.532539 27559 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:39.532546 27559 net.cpp:131] Top shape: 100 (100)
I0428 19:52:39.532548 27559 net.cpp:139] Memory required for data: 314000
I0428 19:52:39.532552 27559 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:39.532559 27559 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:39.532562 27559 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:39.532567 27559 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:39.532574 27559 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:39.532698 27559 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:39.532717 27559 net.cpp:131] Top shape: 100 (100)
I0428 19:52:39.532721 27559 net.cpp:131] Top shape: 100 (100)
I0428 19:52:39.532724 27559 net.cpp:139] Memory required for data: 314800
I0428 19:52:39.532727 27559 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:39.532737 27559 net.cpp:86] Creating Layer conv0
I0428 19:52:39.532740 27559 net.cpp:408] conv0 <- data
I0428 19:52:39.532745 27559 net.cpp:382] conv0 -> conv0
I0428 19:52:39.534379 27559 net.cpp:124] Setting up conv0
I0428 19:52:39.534394 27559 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:39.534397 27559 net.cpp:139] Memory required for data: 1466800
I0428 19:52:39.534406 27559 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:39.534412 27559 net.cpp:86] Creating Layer pool0
I0428 19:52:39.534415 27559 net.cpp:408] pool0 <- conv0
I0428 19:52:39.534420 27559 net.cpp:382] pool0 -> pool0
I0428 19:52:39.534471 27559 net.cpp:124] Setting up pool0
I0428 19:52:39.534476 27559 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:39.534478 27559 net.cpp:139] Memory required for data: 1754800
I0428 19:52:39.534482 27559 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:39.534489 27559 net.cpp:86] Creating Layer conv1
I0428 19:52:39.534493 27559 net.cpp:408] conv1 <- pool0
I0428 19:52:39.534498 27559 net.cpp:382] conv1 -> conv1
I0428 19:52:39.535995 27559 net.cpp:124] Setting up conv1
I0428 19:52:39.536023 27559 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:39.536027 27559 net.cpp:139] Memory required for data: 3034800
I0428 19:52:39.536036 27559 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:39.536042 27559 net.cpp:86] Creating Layer pool1
I0428 19:52:39.536046 27559 net.cpp:408] pool1 <- conv1
I0428 19:52:39.536051 27559 net.cpp:382] pool1 -> pool1
I0428 19:52:39.536087 27559 net.cpp:124] Setting up pool1
I0428 19:52:39.536092 27559 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:39.536097 27559 net.cpp:139] Memory required for data: 3354800
I0428 19:52:39.536099 27559 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:39.536105 27559 net.cpp:86] Creating Layer ip1
I0428 19:52:39.536108 27559 net.cpp:408] ip1 <- pool1
I0428 19:52:39.536113 27559 net.cpp:382] ip1 -> ip1
I0428 19:52:39.536252 27559 net.cpp:124] Setting up ip1
I0428 19:52:39.536260 27559 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:39.536263 27559 net.cpp:139] Memory required for data: 3358800
I0428 19:52:39.536270 27559 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:39.536275 27559 net.cpp:86] Creating Layer relu1
I0428 19:52:39.536279 27559 net.cpp:408] relu1 <- ip1
I0428 19:52:39.536284 27559 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:39.536454 27559 net.cpp:124] Setting up relu1
I0428 19:52:39.536463 27559 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:39.536466 27559 net.cpp:139] Memory required for data: 3362800
I0428 19:52:39.536469 27559 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:39.536476 27559 net.cpp:86] Creating Layer ip2
I0428 19:52:39.536480 27559 net.cpp:408] ip2 <- ip1
I0428 19:52:39.536485 27559 net.cpp:382] ip2 -> ip2
I0428 19:52:39.536581 27559 net.cpp:124] Setting up ip2
I0428 19:52:39.536589 27559 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:39.536592 27559 net.cpp:139] Memory required for data: 3366800
I0428 19:52:39.536597 27559 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:39.536602 27559 net.cpp:86] Creating Layer relu2
I0428 19:52:39.536605 27559 net.cpp:408] relu2 <- ip2
I0428 19:52:39.536610 27559 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:39.536772 27559 net.cpp:124] Setting up relu2
I0428 19:52:39.536779 27559 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:39.536782 27559 net.cpp:139] Memory required for data: 3370800
I0428 19:52:39.536785 27559 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:52:39.536790 27559 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:52:39.536793 27559 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:52:39.536798 27559 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:52:39.536823 27559 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:52:39.536871 27559 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:52:39.536880 27559 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:39.536888 27559 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:39.536892 27559 net.cpp:139] Memory required for data: 3378800
I0428 19:52:39.536895 27559 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:39.536900 27559 net.cpp:86] Creating Layer accuracy
I0428 19:52:39.536905 27559 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:52:39.536908 27559 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:39.536912 27559 net.cpp:382] accuracy -> accuracy
I0428 19:52:39.536919 27559 net.cpp:124] Setting up accuracy
I0428 19:52:39.536923 27559 net.cpp:131] Top shape: (1)
I0428 19:52:39.536926 27559 net.cpp:139] Memory required for data: 3378804
I0428 19:52:39.536929 27559 layer_factory.hpp:77] Creating layer loss
I0428 19:52:39.536933 27559 net.cpp:86] Creating Layer loss
I0428 19:52:39.536936 27559 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:52:39.536941 27559 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:39.536944 27559 net.cpp:382] loss -> loss
I0428 19:52:39.536950 27559 layer_factory.hpp:77] Creating layer loss
I0428 19:52:39.537170 27559 net.cpp:124] Setting up loss
I0428 19:52:39.537179 27559 net.cpp:131] Top shape: (1)
I0428 19:52:39.537189 27559 net.cpp:134]     with loss weight 1
I0428 19:52:39.537206 27559 net.cpp:139] Memory required for data: 3378808
I0428 19:52:39.537210 27559 net.cpp:200] loss needs backward computation.
I0428 19:52:39.537214 27559 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:39.537219 27559 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:52:39.537221 27559 net.cpp:200] relu2 needs backward computation.
I0428 19:52:39.537225 27559 net.cpp:200] ip2 needs backward computation.
I0428 19:52:39.537227 27559 net.cpp:200] relu1 needs backward computation.
I0428 19:52:39.537230 27559 net.cpp:200] ip1 needs backward computation.
I0428 19:52:39.537235 27559 net.cpp:200] pool1 needs backward computation.
I0428 19:52:39.537242 27559 net.cpp:200] conv1 needs backward computation.
I0428 19:52:39.537245 27559 net.cpp:200] pool0 needs backward computation.
I0428 19:52:39.537248 27559 net.cpp:200] conv0 needs backward computation.
I0428 19:52:39.537251 27559 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:39.537256 27559 net.cpp:202] mnist does not need backward computation.
I0428 19:52:39.537258 27559 net.cpp:244] This network produces output accuracy
I0428 19:52:39.537262 27559 net.cpp:244] This network produces output loss
I0428 19:52:39.537272 27559 net.cpp:257] Network initialization done.
I0428 19:52:39.537307 27559 solver.cpp:56] Solver scaffolding done.
I0428 19:52:39.537580 27559 caffe.cpp:248] Starting Optimization
I0428 19:52:39.537585 27559 solver.cpp:273] Solving LeNet
I0428 19:52:39.537588 27559 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:39.537713 27559 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:39.541807 27559 blocking_queue.cpp:49] Waiting for data
I0428 19:52:39.614748 27566 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:39.615242 27559 solver.cpp:398]     Test net output #0: accuracy = 0.0942
I0428 19:52:39.615275 27559 solver.cpp:398]     Test net output #1: loss = 2.34136 (* 1 = 2.34136 loss)
I0428 19:52:39.617600 27559 solver.cpp:219] Iteration 0 (0 iter/s, 0.0799877s/100 iters), loss = 2.32278
I0428 19:52:39.617647 27559 solver.cpp:238]     Train net output #0: loss = 2.32278 (* 1 = 2.32278 loss)
I0428 19:52:39.617660 27559 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:39.725147 27559 solver.cpp:219] Iteration 100 (930.355 iter/s, 0.107486s/100 iters), loss = 0.410669
I0428 19:52:39.725186 27559 solver.cpp:238]     Train net output #0: loss = 0.410669 (* 1 = 0.410669 loss)
I0428 19:52:39.725196 27559 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:39.818032 27559 solver.cpp:219] Iteration 200 (1077.12 iter/s, 0.0928399s/100 iters), loss = 0.238265
I0428 19:52:39.818070 27559 solver.cpp:238]     Train net output #0: loss = 0.238265 (* 1 = 0.238265 loss)
I0428 19:52:39.818094 27559 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:39.910346 27559 solver.cpp:219] Iteration 300 (1083.83 iter/s, 0.0922655s/100 iters), loss = 0.219705
I0428 19:52:39.910383 27559 solver.cpp:238]     Train net output #0: loss = 0.219705 (* 1 = 0.219705 loss)
I0428 19:52:39.910406 27559 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:40.002701 27559 solver.cpp:219] Iteration 400 (1083.33 iter/s, 0.0923083s/100 iters), loss = 0.139239
I0428 19:52:40.002724 27559 solver.cpp:238]     Train net output #0: loss = 0.139239 (* 1 = 0.139239 loss)
I0428 19:52:40.002745 27559 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:40.093961 27559 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:40.147083 27566 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:40.147578 27559 solver.cpp:398]     Test net output #0: accuracy = 0.9526
I0428 19:52:40.147613 27559 solver.cpp:398]     Test net output #1: loss = 0.151594 (* 1 = 0.151594 loss)
I0428 19:52:40.148584 27559 solver.cpp:219] Iteration 500 (685.644 iter/s, 0.145848s/100 iters), loss = 0.0961778
I0428 19:52:40.148644 27559 solver.cpp:238]     Train net output #0: loss = 0.0961778 (* 1 = 0.0961778 loss)
I0428 19:52:40.148672 27559 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:40.254330 27559 solver.cpp:219] Iteration 600 (946.269 iter/s, 0.105678s/100 iters), loss = 0.15378
I0428 19:52:40.254354 27559 solver.cpp:238]     Train net output #0: loss = 0.15378 (* 1 = 0.15378 loss)
I0428 19:52:40.254360 27559 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:40.347266 27559 solver.cpp:219] Iteration 700 (1076.39 iter/s, 0.0929034s/100 iters), loss = 0.188473
I0428 19:52:40.347304 27559 solver.cpp:238]     Train net output #0: loss = 0.188473 (* 1 = 0.188473 loss)
I0428 19:52:40.347311 27559 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:40.439913 27559 solver.cpp:219] Iteration 800 (1079.75 iter/s, 0.0926136s/100 iters), loss = 0.311486
I0428 19:52:40.439951 27559 solver.cpp:238]     Train net output #0: loss = 0.311486 (* 1 = 0.311486 loss)
I0428 19:52:40.439956 27559 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:40.531894 27559 solver.cpp:219] Iteration 900 (1087.56 iter/s, 0.0919491s/100 iters), loss = 0.114608
I0428 19:52:40.531932 27559 solver.cpp:238]     Train net output #0: loss = 0.114608 (* 1 = 0.114608 loss)
I0428 19:52:40.531939 27559 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:40.562441 27565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:40.623128 27559 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:40.624109 27559 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:40.624683 27559 solver.cpp:311] Iteration 1000, loss = 0.0929285
I0428 19:52:40.624701 27559 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:40.699241 27566 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:40.699731 27559 solver.cpp:398]     Test net output #0: accuracy = 0.9739
I0428 19:52:40.699769 27559 solver.cpp:398]     Test net output #1: loss = 0.0853358 (* 1 = 0.0853358 loss)
I0428 19:52:40.699774 27559 solver.cpp:316] Optimization Done.
I0428 19:52:40.699776 27559 caffe.cpp:259] Optimization Done.
