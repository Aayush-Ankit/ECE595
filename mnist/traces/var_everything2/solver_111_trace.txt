I0428 19:31:04.813000 22485 caffe.cpp:218] Using GPUs 0
I0428 19:31:04.849301 22485 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:05.298270 22485 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test111.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:05.298399 22485 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test111.prototxt
I0428 19:31:05.298718 22485 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:05.298748 22485 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:05.298826 22485 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:05.298887 22485 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:05.298969 22485 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:05.299005 22485 net.cpp:86] Creating Layer mnist
I0428 19:31:05.299012 22485 net.cpp:382] mnist -> data
I0428 19:31:05.299031 22485 net.cpp:382] mnist -> label
I0428 19:31:05.300000 22485 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:05.302244 22485 net.cpp:124] Setting up mnist
I0428 19:31:05.302289 22485 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:05.302294 22485 net.cpp:131] Top shape: 64 (64)
I0428 19:31:05.302296 22485 net.cpp:139] Memory required for data: 200960
I0428 19:31:05.302302 22485 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:05.302333 22485 net.cpp:86] Creating Layer conv0
I0428 19:31:05.302341 22485 net.cpp:408] conv0 <- data
I0428 19:31:05.302367 22485 net.cpp:382] conv0 -> conv0
I0428 19:31:05.536741 22485 net.cpp:124] Setting up conv0
I0428 19:31:05.536767 22485 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:31:05.536770 22485 net.cpp:139] Memory required for data: 938240
I0428 19:31:05.536787 22485 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:05.536799 22485 net.cpp:86] Creating Layer pool0
I0428 19:31:05.536839 22485 net.cpp:408] pool0 <- conv0
I0428 19:31:05.536860 22485 net.cpp:382] pool0 -> pool0
I0428 19:31:05.536912 22485 net.cpp:124] Setting up pool0
I0428 19:31:05.536921 22485 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:31:05.536924 22485 net.cpp:139] Memory required for data: 1122560
I0428 19:31:05.536927 22485 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:05.536936 22485 net.cpp:86] Creating Layer ip1
I0428 19:31:05.536938 22485 net.cpp:408] ip1 <- pool0
I0428 19:31:05.536943 22485 net.cpp:382] ip1 -> ip1
I0428 19:31:05.537312 22485 net.cpp:124] Setting up ip1
I0428 19:31:05.537320 22485 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:05.537339 22485 net.cpp:139] Memory required for data: 1135360
I0428 19:31:05.537346 22485 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:05.537353 22485 net.cpp:86] Creating Layer relu1
I0428 19:31:05.537356 22485 net.cpp:408] relu1 <- ip1
I0428 19:31:05.537360 22485 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:05.537529 22485 net.cpp:124] Setting up relu1
I0428 19:31:05.537539 22485 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:05.537541 22485 net.cpp:139] Memory required for data: 1148160
I0428 19:31:05.537544 22485 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:05.537552 22485 net.cpp:86] Creating Layer ip2
I0428 19:31:05.537555 22485 net.cpp:408] ip2 <- ip1
I0428 19:31:05.537560 22485 net.cpp:382] ip2 -> ip2
I0428 19:31:05.538547 22485 net.cpp:124] Setting up ip2
I0428 19:31:05.538558 22485 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:05.538578 22485 net.cpp:139] Memory required for data: 1154560
I0428 19:31:05.538585 22485 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:05.538591 22485 net.cpp:86] Creating Layer relu2
I0428 19:31:05.538595 22485 net.cpp:408] relu2 <- ip2
I0428 19:31:05.538601 22485 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:05.539363 22485 net.cpp:124] Setting up relu2
I0428 19:31:05.539376 22485 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:05.539394 22485 net.cpp:139] Memory required for data: 1160960
I0428 19:31:05.539397 22485 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:05.539404 22485 net.cpp:86] Creating Layer ip3
I0428 19:31:05.539407 22485 net.cpp:408] ip3 <- ip2
I0428 19:31:05.539414 22485 net.cpp:382] ip3 -> ip3
I0428 19:31:05.539532 22485 net.cpp:124] Setting up ip3
I0428 19:31:05.539541 22485 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:05.539543 22485 net.cpp:139] Memory required for data: 1163520
I0428 19:31:05.539549 22485 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:05.539556 22485 net.cpp:86] Creating Layer relu3
I0428 19:31:05.539559 22485 net.cpp:408] relu3 <- ip3
I0428 19:31:05.539563 22485 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:05.539726 22485 net.cpp:124] Setting up relu3
I0428 19:31:05.539734 22485 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:05.539737 22485 net.cpp:139] Memory required for data: 1166080
I0428 19:31:05.539741 22485 layer_factory.hpp:77] Creating layer loss
I0428 19:31:05.539748 22485 net.cpp:86] Creating Layer loss
I0428 19:31:05.539752 22485 net.cpp:408] loss <- ip3
I0428 19:31:05.539755 22485 net.cpp:408] loss <- label
I0428 19:31:05.539760 22485 net.cpp:382] loss -> loss
I0428 19:31:05.539777 22485 layer_factory.hpp:77] Creating layer loss
I0428 19:31:05.540045 22485 net.cpp:124] Setting up loss
I0428 19:31:05.540055 22485 net.cpp:131] Top shape: (1)
I0428 19:31:05.540056 22485 net.cpp:134]     with loss weight 1
I0428 19:31:05.540071 22485 net.cpp:139] Memory required for data: 1166084
I0428 19:31:05.540073 22485 net.cpp:200] loss needs backward computation.
I0428 19:31:05.540076 22485 net.cpp:200] relu3 needs backward computation.
I0428 19:31:05.540079 22485 net.cpp:200] ip3 needs backward computation.
I0428 19:31:05.540081 22485 net.cpp:200] relu2 needs backward computation.
I0428 19:31:05.540084 22485 net.cpp:200] ip2 needs backward computation.
I0428 19:31:05.540086 22485 net.cpp:200] relu1 needs backward computation.
I0428 19:31:05.540089 22485 net.cpp:200] ip1 needs backward computation.
I0428 19:31:05.540102 22485 net.cpp:200] pool0 needs backward computation.
I0428 19:31:05.540104 22485 net.cpp:200] conv0 needs backward computation.
I0428 19:31:05.540107 22485 net.cpp:202] mnist does not need backward computation.
I0428 19:31:05.540109 22485 net.cpp:244] This network produces output loss
I0428 19:31:05.540118 22485 net.cpp:257] Network initialization done.
I0428 19:31:05.540411 22485 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test111.prototxt
I0428 19:31:05.540436 22485 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:05.540515 22485 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:05.540581 22485 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:05.540640 22485 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:05.540653 22485 net.cpp:86] Creating Layer mnist
I0428 19:31:05.540659 22485 net.cpp:382] mnist -> data
I0428 19:31:05.540668 22485 net.cpp:382] mnist -> label
I0428 19:31:05.540757 22485 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:05.542917 22485 net.cpp:124] Setting up mnist
I0428 19:31:05.542966 22485 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:05.542989 22485 net.cpp:131] Top shape: 100 (100)
I0428 19:31:05.542990 22485 net.cpp:139] Memory required for data: 314000
I0428 19:31:05.542995 22485 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:05.543002 22485 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:05.543006 22485 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:05.543012 22485 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:05.543020 22485 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:05.543103 22485 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:05.543112 22485 net.cpp:131] Top shape: 100 (100)
I0428 19:31:05.543118 22485 net.cpp:131] Top shape: 100 (100)
I0428 19:31:05.543119 22485 net.cpp:139] Memory required for data: 314800
I0428 19:31:05.543133 22485 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:05.543141 22485 net.cpp:86] Creating Layer conv0
I0428 19:31:05.543144 22485 net.cpp:408] conv0 <- data
I0428 19:31:05.543151 22485 net.cpp:382] conv0 -> conv0
I0428 19:31:05.544754 22485 net.cpp:124] Setting up conv0
I0428 19:31:05.544782 22485 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:31:05.544786 22485 net.cpp:139] Memory required for data: 1466800
I0428 19:31:05.544814 22485 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:05.544837 22485 net.cpp:86] Creating Layer pool0
I0428 19:31:05.544842 22485 net.cpp:408] pool0 <- conv0
I0428 19:31:05.544858 22485 net.cpp:382] pool0 -> pool0
I0428 19:31:05.544930 22485 net.cpp:124] Setting up pool0
I0428 19:31:05.544937 22485 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:31:05.544941 22485 net.cpp:139] Memory required for data: 1754800
I0428 19:31:05.544945 22485 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:05.544953 22485 net.cpp:86] Creating Layer ip1
I0428 19:31:05.544957 22485 net.cpp:408] ip1 <- pool0
I0428 19:31:05.544963 22485 net.cpp:382] ip1 -> ip1
I0428 19:31:05.545336 22485 net.cpp:124] Setting up ip1
I0428 19:31:05.545344 22485 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:05.545363 22485 net.cpp:139] Memory required for data: 1774800
I0428 19:31:05.545370 22485 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:05.545374 22485 net.cpp:86] Creating Layer relu1
I0428 19:31:05.545378 22485 net.cpp:408] relu1 <- ip1
I0428 19:31:05.545382 22485 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:05.545550 22485 net.cpp:124] Setting up relu1
I0428 19:31:05.545559 22485 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:05.545570 22485 net.cpp:139] Memory required for data: 1794800
I0428 19:31:05.545578 22485 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:05.545584 22485 net.cpp:86] Creating Layer ip2
I0428 19:31:05.545588 22485 net.cpp:408] ip2 <- ip1
I0428 19:31:05.545593 22485 net.cpp:382] ip2 -> ip2
I0428 19:31:05.545722 22485 net.cpp:124] Setting up ip2
I0428 19:31:05.545729 22485 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:05.545733 22485 net.cpp:139] Memory required for data: 1804800
I0428 19:31:05.545740 22485 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:05.545747 22485 net.cpp:86] Creating Layer relu2
I0428 19:31:05.545749 22485 net.cpp:408] relu2 <- ip2
I0428 19:31:05.545754 22485 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:05.546632 22485 net.cpp:124] Setting up relu2
I0428 19:31:05.546658 22485 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:05.546663 22485 net.cpp:139] Memory required for data: 1814800
I0428 19:31:05.546665 22485 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:05.546674 22485 net.cpp:86] Creating Layer ip3
I0428 19:31:05.546679 22485 net.cpp:408] ip3 <- ip2
I0428 19:31:05.546684 22485 net.cpp:382] ip3 -> ip3
I0428 19:31:05.546799 22485 net.cpp:124] Setting up ip3
I0428 19:31:05.546809 22485 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:05.546813 22485 net.cpp:139] Memory required for data: 1818800
I0428 19:31:05.546819 22485 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:05.546824 22485 net.cpp:86] Creating Layer relu3
I0428 19:31:05.546828 22485 net.cpp:408] relu3 <- ip3
I0428 19:31:05.546831 22485 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:05.546998 22485 net.cpp:124] Setting up relu3
I0428 19:31:05.547009 22485 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:05.547015 22485 net.cpp:139] Memory required for data: 1822800
I0428 19:31:05.547024 22485 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:05.547029 22485 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:05.547032 22485 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:05.547036 22485 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:05.547042 22485 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:05.547085 22485 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:05.547107 22485 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:05.547111 22485 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:05.547125 22485 net.cpp:139] Memory required for data: 1830800
I0428 19:31:05.547128 22485 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:05.547133 22485 net.cpp:86] Creating Layer accuracy
I0428 19:31:05.547137 22485 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:05.547142 22485 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:05.547148 22485 net.cpp:382] accuracy -> accuracy
I0428 19:31:05.547161 22485 net.cpp:124] Setting up accuracy
I0428 19:31:05.547166 22485 net.cpp:131] Top shape: (1)
I0428 19:31:05.547169 22485 net.cpp:139] Memory required for data: 1830804
I0428 19:31:05.547173 22485 layer_factory.hpp:77] Creating layer loss
I0428 19:31:05.547178 22485 net.cpp:86] Creating Layer loss
I0428 19:31:05.547180 22485 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:05.547184 22485 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:05.547190 22485 net.cpp:382] loss -> loss
I0428 19:31:05.547196 22485 layer_factory.hpp:77] Creating layer loss
I0428 19:31:05.547492 22485 net.cpp:124] Setting up loss
I0428 19:31:05.547500 22485 net.cpp:131] Top shape: (1)
I0428 19:31:05.547503 22485 net.cpp:134]     with loss weight 1
I0428 19:31:05.547510 22485 net.cpp:139] Memory required for data: 1830808
I0428 19:31:05.547513 22485 net.cpp:200] loss needs backward computation.
I0428 19:31:05.547518 22485 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:05.547521 22485 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:05.547524 22485 net.cpp:200] relu3 needs backward computation.
I0428 19:31:05.547528 22485 net.cpp:200] ip3 needs backward computation.
I0428 19:31:05.547530 22485 net.cpp:200] relu2 needs backward computation.
I0428 19:31:05.547533 22485 net.cpp:200] ip2 needs backward computation.
I0428 19:31:05.547536 22485 net.cpp:200] relu1 needs backward computation.
I0428 19:31:05.547538 22485 net.cpp:200] ip1 needs backward computation.
I0428 19:31:05.547541 22485 net.cpp:200] pool0 needs backward computation.
I0428 19:31:05.547544 22485 net.cpp:200] conv0 needs backward computation.
I0428 19:31:05.547549 22485 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:05.547551 22485 net.cpp:202] mnist does not need backward computation.
I0428 19:31:05.547554 22485 net.cpp:244] This network produces output accuracy
I0428 19:31:05.547557 22485 net.cpp:244] This network produces output loss
I0428 19:31:05.547569 22485 net.cpp:257] Network initialization done.
I0428 19:31:05.547623 22485 solver.cpp:56] Solver scaffolding done.
I0428 19:31:05.548033 22485 caffe.cpp:248] Starting Optimization
I0428 19:31:05.548040 22485 solver.cpp:273] Solving LeNet
I0428 19:31:05.548064 22485 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:05.548900 22485 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:05.552650 22485 blocking_queue.cpp:49] Waiting for data
I0428 19:31:05.624644 22494 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:05.625100 22485 solver.cpp:398]     Test net output #0: accuracy = 0.0756
I0428 19:31:05.625134 22485 solver.cpp:398]     Test net output #1: loss = 2.31117 (* 1 = 2.31117 loss)
I0428 19:31:05.626726 22485 solver.cpp:219] Iteration 0 (0 iter/s, 0.0786348s/100 iters), loss = 2.30888
I0428 19:31:05.626770 22485 solver.cpp:238]     Train net output #0: loss = 2.30888 (* 1 = 2.30888 loss)
I0428 19:31:05.626796 22485 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:05.686522 22485 solver.cpp:219] Iteration 100 (1673.84 iter/s, 0.0597428s/100 iters), loss = 0.62578
I0428 19:31:05.686561 22485 solver.cpp:238]     Train net output #0: loss = 0.62578 (* 1 = 0.62578 loss)
I0428 19:31:05.686568 22485 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:05.745597 22485 solver.cpp:219] Iteration 200 (1693.63 iter/s, 0.0590448s/100 iters), loss = 0.319245
I0428 19:31:05.745635 22485 solver.cpp:238]     Train net output #0: loss = 0.319245 (* 1 = 0.319245 loss)
I0428 19:31:05.745640 22485 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:05.805107 22485 solver.cpp:219] Iteration 300 (1681.24 iter/s, 0.0594801s/100 iters), loss = 0.291337
I0428 19:31:05.805146 22485 solver.cpp:238]     Train net output #0: loss = 0.291337 (* 1 = 0.291337 loss)
I0428 19:31:05.805151 22485 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:05.865964 22485 solver.cpp:219] Iteration 400 (1644.02 iter/s, 0.0608266s/100 iters), loss = 0.141886
I0428 19:31:05.866003 22485 solver.cpp:238]     Train net output #0: loss = 0.141886 (* 1 = 0.141886 loss)
I0428 19:31:05.866008 22485 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:05.925400 22485 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:05.969369 22494 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:05.969786 22485 solver.cpp:398]     Test net output #0: accuracy = 0.9407
I0428 19:31:05.969805 22485 solver.cpp:398]     Test net output #1: loss = 0.200122 (* 1 = 0.200122 loss)
I0428 19:31:05.970464 22485 solver.cpp:219] Iteration 500 (957.234 iter/s, 0.104468s/100 iters), loss = 0.282642
I0428 19:31:05.970502 22485 solver.cpp:238]     Train net output #0: loss = 0.282642 (* 1 = 0.282642 loss)
I0428 19:31:05.970525 22485 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:06.030854 22485 solver.cpp:219] Iteration 600 (1656.76 iter/s, 0.0603587s/100 iters), loss = 0.138765
I0428 19:31:06.030892 22485 solver.cpp:238]     Train net output #0: loss = 0.138765 (* 1 = 0.138765 loss)
I0428 19:31:06.030913 22485 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:06.091486 22485 solver.cpp:219] Iteration 700 (1650.1 iter/s, 0.0606022s/100 iters), loss = 0.421531
I0428 19:31:06.091523 22485 solver.cpp:238]     Train net output #0: loss = 0.421531 (* 1 = 0.421531 loss)
I0428 19:31:06.091529 22485 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:06.151846 22485 solver.cpp:219] Iteration 800 (1657.55 iter/s, 0.06033s/100 iters), loss = 0.310205
I0428 19:31:06.151885 22485 solver.cpp:238]     Train net output #0: loss = 0.310205 (* 1 = 0.310205 loss)
I0428 19:31:06.151891 22485 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:06.212461 22485 solver.cpp:219] Iteration 900 (1650.6 iter/s, 0.0605839s/100 iters), loss = 0.271725
I0428 19:31:06.212501 22485 solver.cpp:238]     Train net output #0: loss = 0.271725 (* 1 = 0.271725 loss)
I0428 19:31:06.212505 22485 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:06.235441 22491 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:06.276185 22485 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:06.277438 22485 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:06.278087 22485 solver.cpp:311] Iteration 1000, loss = 0.189169
I0428 19:31:06.278102 22485 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:06.348325 22494 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:06.348769 22485 solver.cpp:398]     Test net output #0: accuracy = 0.9595
I0428 19:31:06.348808 22485 solver.cpp:398]     Test net output #1: loss = 0.136882 (* 1 = 0.136882 loss)
I0428 19:31:06.348834 22485 solver.cpp:316] Optimization Done.
I0428 19:31:06.348837 22485 caffe.cpp:259] Optimization Done.
