I0428 20:29:30.149477  3543 caffe.cpp:218] Using GPUs 0
I0428 20:29:30.190835  3543 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:29:30.712930  3543 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1523.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:29:30.713079  3543 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1523.prototxt
I0428 20:29:30.713423  3543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:29:30.713438  3543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:29:30.713524  3543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:29:30.713594  3543 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:30.713695  3543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:29:30.713721  3543 net.cpp:86] Creating Layer mnist
I0428 20:29:30.713732  3543 net.cpp:382] mnist -> data
I0428 20:29:30.713757  3543 net.cpp:382] mnist -> label
I0428 20:29:30.714843  3543 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:29:30.717326  3543 net.cpp:124] Setting up mnist
I0428 20:29:30.717344  3543 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:29:30.717350  3543 net.cpp:131] Top shape: 64 (64)
I0428 20:29:30.717353  3543 net.cpp:139] Memory required for data: 200960
I0428 20:29:30.717360  3543 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:30.717377  3543 net.cpp:86] Creating Layer conv0
I0428 20:29:30.717383  3543 net.cpp:408] conv0 <- data
I0428 20:29:30.717396  3543 net.cpp:382] conv0 -> conv0
I0428 20:29:31.010807  3543 net.cpp:124] Setting up conv0
I0428 20:29:31.010836  3543 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:29:31.010841  3543 net.cpp:139] Memory required for data: 14946560
I0428 20:29:31.010859  3543 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:31.010872  3543 net.cpp:86] Creating Layer pool0
I0428 20:29:31.010876  3543 net.cpp:408] pool0 <- conv0
I0428 20:29:31.010882  3543 net.cpp:382] pool0 -> pool0
I0428 20:29:31.010934  3543 net.cpp:124] Setting up pool0
I0428 20:29:31.010941  3543 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:29:31.010963  3543 net.cpp:139] Memory required for data: 18632960
I0428 20:29:31.010968  3543 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:31.010980  3543 net.cpp:86] Creating Layer conv1
I0428 20:29:31.010984  3543 net.cpp:408] conv1 <- pool0
I0428 20:29:31.010989  3543 net.cpp:382] conv1 -> conv1
I0428 20:29:31.013176  3543 net.cpp:124] Setting up conv1
I0428 20:29:31.013192  3543 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:29:31.013197  3543 net.cpp:139] Memory required for data: 18796800
I0428 20:29:31.013206  3543 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:31.013216  3543 net.cpp:86] Creating Layer pool1
I0428 20:29:31.013219  3543 net.cpp:408] pool1 <- conv1
I0428 20:29:31.013224  3543 net.cpp:382] pool1 -> pool1
I0428 20:29:31.013265  3543 net.cpp:124] Setting up pool1
I0428 20:29:31.013272  3543 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:29:31.013274  3543 net.cpp:139] Memory required for data: 18837760
I0428 20:29:31.013278  3543 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:31.013285  3543 net.cpp:86] Creating Layer ip1
I0428 20:29:31.013289  3543 net.cpp:408] ip1 <- pool1
I0428 20:29:31.013294  3543 net.cpp:382] ip1 -> ip1
I0428 20:29:31.013408  3543 net.cpp:124] Setting up ip1
I0428 20:29:31.013417  3543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:31.013420  3543 net.cpp:139] Memory required for data: 18840320
I0428 20:29:31.013428  3543 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:31.013434  3543 net.cpp:86] Creating Layer relu1
I0428 20:29:31.013437  3543 net.cpp:408] relu1 <- ip1
I0428 20:29:31.013442  3543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:31.013626  3543 net.cpp:124] Setting up relu1
I0428 20:29:31.013635  3543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:31.013639  3543 net.cpp:139] Memory required for data: 18842880
I0428 20:29:31.013643  3543 layer_factory.hpp:77] Creating layer loss
I0428 20:29:31.013650  3543 net.cpp:86] Creating Layer loss
I0428 20:29:31.013653  3543 net.cpp:408] loss <- ip1
I0428 20:29:31.013659  3543 net.cpp:408] loss <- label
I0428 20:29:31.013664  3543 net.cpp:382] loss -> loss
I0428 20:29:31.013682  3543 layer_factory.hpp:77] Creating layer loss
I0428 20:29:31.014552  3543 net.cpp:124] Setting up loss
I0428 20:29:31.014566  3543 net.cpp:131] Top shape: (1)
I0428 20:29:31.014570  3543 net.cpp:134]     with loss weight 1
I0428 20:29:31.014585  3543 net.cpp:139] Memory required for data: 18842884
I0428 20:29:31.014590  3543 net.cpp:200] loss needs backward computation.
I0428 20:29:31.014593  3543 net.cpp:200] relu1 needs backward computation.
I0428 20:29:31.014596  3543 net.cpp:200] ip1 needs backward computation.
I0428 20:29:31.014600  3543 net.cpp:200] pool1 needs backward computation.
I0428 20:29:31.014603  3543 net.cpp:200] conv1 needs backward computation.
I0428 20:29:31.014606  3543 net.cpp:200] pool0 needs backward computation.
I0428 20:29:31.014609  3543 net.cpp:200] conv0 needs backward computation.
I0428 20:29:31.014613  3543 net.cpp:202] mnist does not need backward computation.
I0428 20:29:31.014616  3543 net.cpp:244] This network produces output loss
I0428 20:29:31.014624  3543 net.cpp:257] Network initialization done.
I0428 20:29:31.014904  3543 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1523.prototxt
I0428 20:29:31.014930  3543 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:29:31.015012  3543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:29:31.015087  3543 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:31.015135  3543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:29:31.015147  3543 net.cpp:86] Creating Layer mnist
I0428 20:29:31.015152  3543 net.cpp:382] mnist -> data
I0428 20:29:31.015161  3543 net.cpp:382] mnist -> label
I0428 20:29:31.015255  3543 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:29:31.017490  3543 net.cpp:124] Setting up mnist
I0428 20:29:31.017504  3543 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:29:31.017510  3543 net.cpp:131] Top shape: 100 (100)
I0428 20:29:31.017513  3543 net.cpp:139] Memory required for data: 314000
I0428 20:29:31.017518  3543 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:29:31.017529  3543 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:29:31.017532  3543 net.cpp:408] label_mnist_1_split <- label
I0428 20:29:31.017537  3543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:29:31.017544  3543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:29:31.017596  3543 net.cpp:124] Setting up label_mnist_1_split
I0428 20:29:31.017601  3543 net.cpp:131] Top shape: 100 (100)
I0428 20:29:31.017606  3543 net.cpp:131] Top shape: 100 (100)
I0428 20:29:31.017609  3543 net.cpp:139] Memory required for data: 314800
I0428 20:29:31.017612  3543 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:31.017621  3543 net.cpp:86] Creating Layer conv0
I0428 20:29:31.017624  3543 net.cpp:408] conv0 <- data
I0428 20:29:31.017629  3543 net.cpp:382] conv0 -> conv0
I0428 20:29:31.018575  3543 net.cpp:124] Setting up conv0
I0428 20:29:31.018589  3543 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:29:31.018592  3543 net.cpp:139] Memory required for data: 23354800
I0428 20:29:31.018601  3543 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:31.018607  3543 net.cpp:86] Creating Layer pool0
I0428 20:29:31.018611  3543 net.cpp:408] pool0 <- conv0
I0428 20:29:31.018616  3543 net.cpp:382] pool0 -> pool0
I0428 20:29:31.018653  3543 net.cpp:124] Setting up pool0
I0428 20:29:31.018659  3543 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:29:31.018662  3543 net.cpp:139] Memory required for data: 29114800
I0428 20:29:31.018666  3543 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:31.018674  3543 net.cpp:86] Creating Layer conv1
I0428 20:29:31.018677  3543 net.cpp:408] conv1 <- pool0
I0428 20:29:31.018682  3543 net.cpp:382] conv1 -> conv1
I0428 20:29:31.020454  3543 net.cpp:124] Setting up conv1
I0428 20:29:31.020469  3543 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:29:31.020473  3543 net.cpp:139] Memory required for data: 29370800
I0428 20:29:31.020483  3543 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:31.020489  3543 net.cpp:86] Creating Layer pool1
I0428 20:29:31.020505  3543 net.cpp:408] pool1 <- conv1
I0428 20:29:31.020512  3543 net.cpp:382] pool1 -> pool1
I0428 20:29:31.020550  3543 net.cpp:124] Setting up pool1
I0428 20:29:31.020556  3543 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:29:31.020560  3543 net.cpp:139] Memory required for data: 29434800
I0428 20:29:31.020563  3543 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:31.020570  3543 net.cpp:86] Creating Layer ip1
I0428 20:29:31.020575  3543 net.cpp:408] ip1 <- pool1
I0428 20:29:31.020579  3543 net.cpp:382] ip1 -> ip1
I0428 20:29:31.020706  3543 net.cpp:124] Setting up ip1
I0428 20:29:31.020716  3543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:31.020720  3543 net.cpp:139] Memory required for data: 29438800
I0428 20:29:31.020728  3543 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:31.020733  3543 net.cpp:86] Creating Layer relu1
I0428 20:29:31.020737  3543 net.cpp:408] relu1 <- ip1
I0428 20:29:31.020742  3543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:31.021615  3543 net.cpp:124] Setting up relu1
I0428 20:29:31.021628  3543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:31.021647  3543 net.cpp:139] Memory required for data: 29442800
I0428 20:29:31.021651  3543 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:29:31.021659  3543 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:29:31.021663  3543 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:29:31.021668  3543 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:29:31.021675  3543 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:29:31.021734  3543 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:29:31.021740  3543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:31.021744  3543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:31.021747  3543 net.cpp:139] Memory required for data: 29450800
I0428 20:29:31.021751  3543 layer_factory.hpp:77] Creating layer accuracy
I0428 20:29:31.021756  3543 net.cpp:86] Creating Layer accuracy
I0428 20:29:31.021765  3543 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:29:31.021770  3543 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:29:31.021775  3543 net.cpp:382] accuracy -> accuracy
I0428 20:29:31.021785  3543 net.cpp:124] Setting up accuracy
I0428 20:29:31.021790  3543 net.cpp:131] Top shape: (1)
I0428 20:29:31.021792  3543 net.cpp:139] Memory required for data: 29450804
I0428 20:29:31.021795  3543 layer_factory.hpp:77] Creating layer loss
I0428 20:29:31.021800  3543 net.cpp:86] Creating Layer loss
I0428 20:29:31.021808  3543 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:29:31.021812  3543 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:29:31.021817  3543 net.cpp:382] loss -> loss
I0428 20:29:31.021823  3543 layer_factory.hpp:77] Creating layer loss
I0428 20:29:31.022080  3543 net.cpp:124] Setting up loss
I0428 20:29:31.022090  3543 net.cpp:131] Top shape: (1)
I0428 20:29:31.022094  3543 net.cpp:134]     with loss weight 1
I0428 20:29:31.022102  3543 net.cpp:139] Memory required for data: 29450808
I0428 20:29:31.022112  3543 net.cpp:200] loss needs backward computation.
I0428 20:29:31.022117  3543 net.cpp:202] accuracy does not need backward computation.
I0428 20:29:31.022121  3543 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:29:31.022125  3543 net.cpp:200] relu1 needs backward computation.
I0428 20:29:31.022127  3543 net.cpp:200] ip1 needs backward computation.
I0428 20:29:31.022131  3543 net.cpp:200] pool1 needs backward computation.
I0428 20:29:31.022135  3543 net.cpp:200] conv1 needs backward computation.
I0428 20:29:31.022138  3543 net.cpp:200] pool0 needs backward computation.
I0428 20:29:31.022142  3543 net.cpp:200] conv0 needs backward computation.
I0428 20:29:31.022146  3543 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:29:31.022150  3543 net.cpp:202] mnist does not need backward computation.
I0428 20:29:31.022153  3543 net.cpp:244] This network produces output accuracy
I0428 20:29:31.022156  3543 net.cpp:244] This network produces output loss
I0428 20:29:31.022177  3543 net.cpp:257] Network initialization done.
I0428 20:29:31.022213  3543 solver.cpp:56] Solver scaffolding done.
I0428 20:29:31.022430  3543 caffe.cpp:248] Starting Optimization
I0428 20:29:31.022438  3543 solver.cpp:273] Solving LeNet
I0428 20:29:31.022441  3543 solver.cpp:274] Learning Rate Policy: inv
I0428 20:29:31.022614  3543 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:29:31.114205  3552 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:31.116415  3543 solver.cpp:398]     Test net output #0: accuracy = 0.1246
I0428 20:29:31.116449  3543 solver.cpp:398]     Test net output #1: loss = 2.29699 (* 1 = 2.29699 loss)
I0428 20:29:31.120739  3543 solver.cpp:219] Iteration 0 (-7.53264e-31 iter/s, 0.0982712s/100 iters), loss = 2.31593
I0428 20:29:31.120779  3543 solver.cpp:238]     Train net output #0: loss = 2.31593 (* 1 = 2.31593 loss)
I0428 20:29:31.120805  3543 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:29:31.309517  3543 solver.cpp:219] Iteration 100 (529.876 iter/s, 0.188723s/100 iters), loss = 0.308952
I0428 20:29:31.309546  3543 solver.cpp:238]     Train net output #0: loss = 0.308952 (* 1 = 0.308952 loss)
I0428 20:29:31.309554  3543 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:29:31.498806  3543 solver.cpp:219] Iteration 200 (528.42 iter/s, 0.189243s/100 iters), loss = 0.150679
I0428 20:29:31.498842  3543 solver.cpp:238]     Train net output #0: loss = 0.150679 (* 1 = 0.150679 loss)
I0428 20:29:31.498852  3543 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:29:31.703698  3543 solver.cpp:219] Iteration 300 (488.191 iter/s, 0.204838s/100 iters), loss = 0.209541
I0428 20:29:31.703749  3543 solver.cpp:238]     Train net output #0: loss = 0.209541 (* 1 = 0.209541 loss)
I0428 20:29:31.703763  3543 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:29:31.911272  3543 solver.cpp:219] Iteration 400 (481.915 iter/s, 0.207505s/100 iters), loss = 0.103059
I0428 20:29:31.911325  3543 solver.cpp:238]     Train net output #0: loss = 0.10306 (* 1 = 0.10306 loss)
I0428 20:29:31.911339  3543 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:29:32.116863  3543 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:29:32.213966  3552 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:32.217221  3543 solver.cpp:398]     Test net output #0: accuracy = 0.9666
I0428 20:29:32.217247  3543 solver.cpp:398]     Test net output #1: loss = 0.117957 (* 1 = 0.117957 loss)
I0428 20:29:32.219072  3543 solver.cpp:219] Iteration 500 (324.958 iter/s, 0.307732s/100 iters), loss = 0.147413
I0428 20:29:32.219101  3543 solver.cpp:238]     Train net output #0: loss = 0.147413 (* 1 = 0.147413 loss)
I0428 20:29:32.219110  3543 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:29:32.419395  3543 solver.cpp:219] Iteration 600 (499.316 iter/s, 0.200274s/100 iters), loss = 0.139262
I0428 20:29:32.419450  3543 solver.cpp:238]     Train net output #0: loss = 0.139262 (* 1 = 0.139262 loss)
I0428 20:29:32.419463  3543 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:29:32.630605  3543 solver.cpp:219] Iteration 700 (473.62 iter/s, 0.21114s/100 iters), loss = 0.188226
I0428 20:29:32.630661  3543 solver.cpp:238]     Train net output #0: loss = 0.188226 (* 1 = 0.188226 loss)
I0428 20:29:32.630674  3543 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:29:32.840759  3543 solver.cpp:219] Iteration 800 (476.005 iter/s, 0.210082s/100 iters), loss = 0.272965
I0428 20:29:32.840831  3543 solver.cpp:238]     Train net output #0: loss = 0.272965 (* 1 = 0.272965 loss)
I0428 20:29:32.840847  3543 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:29:33.053115  3543 solver.cpp:219] Iteration 900 (471.066 iter/s, 0.212284s/100 iters), loss = 0.1756
I0428 20:29:33.053171  3543 solver.cpp:238]     Train net output #0: loss = 0.1756 (* 1 = 0.1756 loss)
I0428 20:29:33.053186  3543 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:29:33.123880  3551 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:33.262804  3543 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:29:33.264901  3543 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:29:33.266358  3543 solver.cpp:311] Iteration 1000, loss = 0.0762764
I0428 20:29:33.266389  3543 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:29:33.365311  3552 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:33.368650  3543 solver.cpp:398]     Test net output #0: accuracy = 0.9735
I0428 20:29:33.368675  3543 solver.cpp:398]     Test net output #1: loss = 0.0836794 (* 1 = 0.0836794 loss)
I0428 20:29:33.368682  3543 solver.cpp:316] Optimization Done.
I0428 20:29:33.368686  3543 caffe.cpp:259] Optimization Done.
