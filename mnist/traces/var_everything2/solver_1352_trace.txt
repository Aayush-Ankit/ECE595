I0428 20:19:56.084086  1452 caffe.cpp:218] Using GPUs 0
I0428 20:19:56.120234  1452 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:56.642061  1452 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1352.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:56.642240  1452 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1352.prototxt
I0428 20:19:56.642666  1452 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:56.642693  1452 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:56.642808  1452 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:56.642925  1452 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:56.643057  1452 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:56.643090  1452 net.cpp:86] Creating Layer mnist
I0428 20:19:56.643105  1452 net.cpp:382] mnist -> data
I0428 20:19:56.643136  1452 net.cpp:382] mnist -> label
I0428 20:19:56.644408  1452 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:56.646875  1452 net.cpp:124] Setting up mnist
I0428 20:19:56.646895  1452 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:56.646905  1452 net.cpp:131] Top shape: 64 (64)
I0428 20:19:56.646913  1452 net.cpp:139] Memory required for data: 200960
I0428 20:19:56.646926  1452 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:56.646971  1452 net.cpp:86] Creating Layer conv0
I0428 20:19:56.646996  1452 net.cpp:408] conv0 <- data
I0428 20:19:56.647017  1452 net.cpp:382] conv0 -> conv0
I0428 20:19:56.939008  1452 net.cpp:124] Setting up conv0
I0428 20:19:56.939043  1452 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:56.939050  1452 net.cpp:139] Memory required for data: 7573760
I0428 20:19:56.939076  1452 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:56.939097  1452 net.cpp:86] Creating Layer pool0
I0428 20:19:56.939116  1452 net.cpp:408] pool0 <- conv0
I0428 20:19:56.939127  1452 net.cpp:382] pool0 -> pool0
I0428 20:19:56.939198  1452 net.cpp:124] Setting up pool0
I0428 20:19:56.939209  1452 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:56.939215  1452 net.cpp:139] Memory required for data: 9416960
I0428 20:19:56.939223  1452 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:56.939240  1452 net.cpp:86] Creating Layer conv1
I0428 20:19:56.939249  1452 net.cpp:408] conv1 <- pool0
I0428 20:19:56.939260  1452 net.cpp:382] conv1 -> conv1
I0428 20:19:56.941686  1452 net.cpp:124] Setting up conv1
I0428 20:19:56.941706  1452 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:56.941714  1452 net.cpp:139] Memory required for data: 9826560
I0428 20:19:56.941730  1452 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:56.941745  1452 net.cpp:86] Creating Layer pool1
I0428 20:19:56.941753  1452 net.cpp:408] pool1 <- conv1
I0428 20:19:56.941764  1452 net.cpp:382] pool1 -> pool1
I0428 20:19:56.941826  1452 net.cpp:124] Setting up pool1
I0428 20:19:56.941838  1452 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:56.941843  1452 net.cpp:139] Memory required for data: 9928960
I0428 20:19:56.941851  1452 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:56.941866  1452 net.cpp:86] Creating Layer ip1
I0428 20:19:56.941879  1452 net.cpp:408] ip1 <- pool1
I0428 20:19:56.941889  1452 net.cpp:382] ip1 -> ip1
I0428 20:19:56.943063  1452 net.cpp:124] Setting up ip1
I0428 20:19:56.943079  1452 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:56.943085  1452 net.cpp:139] Memory required for data: 9935360
I0428 20:19:56.943101  1452 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:56.943115  1452 net.cpp:86] Creating Layer relu1
I0428 20:19:56.943130  1452 net.cpp:408] relu1 <- ip1
I0428 20:19:56.943140  1452 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:56.943362  1452 net.cpp:124] Setting up relu1
I0428 20:19:56.943375  1452 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:56.943382  1452 net.cpp:139] Memory required for data: 9941760
I0428 20:19:56.943387  1452 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:56.943403  1452 net.cpp:86] Creating Layer ip2
I0428 20:19:56.943409  1452 net.cpp:408] ip2 <- ip1
I0428 20:19:56.943421  1452 net.cpp:382] ip2 -> ip2
I0428 20:19:56.943554  1452 net.cpp:124] Setting up ip2
I0428 20:19:56.943567  1452 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:56.943573  1452 net.cpp:139] Memory required for data: 9948160
I0428 20:19:56.943585  1452 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:56.943598  1452 net.cpp:86] Creating Layer relu2
I0428 20:19:56.943605  1452 net.cpp:408] relu2 <- ip2
I0428 20:19:56.943614  1452 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:56.944490  1452 net.cpp:124] Setting up relu2
I0428 20:19:56.944507  1452 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:56.944514  1452 net.cpp:139] Memory required for data: 9954560
I0428 20:19:56.944521  1452 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:56.944535  1452 net.cpp:86] Creating Layer ip3
I0428 20:19:56.944543  1452 net.cpp:408] ip3 <- ip2
I0428 20:19:56.944555  1452 net.cpp:382] ip3 -> ip3
I0428 20:19:56.944689  1452 net.cpp:124] Setting up ip3
I0428 20:19:56.944700  1452 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:56.944706  1452 net.cpp:139] Memory required for data: 9957120
I0428 20:19:56.944721  1452 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:56.944732  1452 net.cpp:86] Creating Layer relu3
I0428 20:19:56.944739  1452 net.cpp:408] relu3 <- ip3
I0428 20:19:56.944751  1452 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:56.944977  1452 net.cpp:124] Setting up relu3
I0428 20:19:56.944990  1452 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:56.944996  1452 net.cpp:139] Memory required for data: 9959680
I0428 20:19:56.945003  1452 layer_factory.hpp:77] Creating layer loss
I0428 20:19:56.945013  1452 net.cpp:86] Creating Layer loss
I0428 20:19:56.945019  1452 net.cpp:408] loss <- ip3
I0428 20:19:56.945027  1452 net.cpp:408] loss <- label
I0428 20:19:56.945039  1452 net.cpp:382] loss -> loss
I0428 20:19:56.945066  1452 layer_factory.hpp:77] Creating layer loss
I0428 20:19:56.945374  1452 net.cpp:124] Setting up loss
I0428 20:19:56.945387  1452 net.cpp:131] Top shape: (1)
I0428 20:19:56.945394  1452 net.cpp:134]     with loss weight 1
I0428 20:19:56.945417  1452 net.cpp:139] Memory required for data: 9959684
I0428 20:19:56.945425  1452 net.cpp:200] loss needs backward computation.
I0428 20:19:56.945431  1452 net.cpp:200] relu3 needs backward computation.
I0428 20:19:56.945438  1452 net.cpp:200] ip3 needs backward computation.
I0428 20:19:56.945444  1452 net.cpp:200] relu2 needs backward computation.
I0428 20:19:56.945449  1452 net.cpp:200] ip2 needs backward computation.
I0428 20:19:56.945456  1452 net.cpp:200] relu1 needs backward computation.
I0428 20:19:56.945461  1452 net.cpp:200] ip1 needs backward computation.
I0428 20:19:56.945466  1452 net.cpp:200] pool1 needs backward computation.
I0428 20:19:56.945472  1452 net.cpp:200] conv1 needs backward computation.
I0428 20:19:56.945479  1452 net.cpp:200] pool0 needs backward computation.
I0428 20:19:56.945484  1452 net.cpp:200] conv0 needs backward computation.
I0428 20:19:56.945492  1452 net.cpp:202] mnist does not need backward computation.
I0428 20:19:56.945497  1452 net.cpp:244] This network produces output loss
I0428 20:19:56.945518  1452 net.cpp:257] Network initialization done.
I0428 20:19:56.945914  1452 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1352.prototxt
I0428 20:19:56.945956  1452 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:56.946079  1452 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:56.946224  1452 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:56.946292  1452 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:56.946316  1452 net.cpp:86] Creating Layer mnist
I0428 20:19:56.946324  1452 net.cpp:382] mnist -> data
I0428 20:19:56.946338  1452 net.cpp:382] mnist -> label
I0428 20:19:56.946487  1452 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:56.948881  1452 net.cpp:124] Setting up mnist
I0428 20:19:56.948902  1452 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:56.948912  1452 net.cpp:131] Top shape: 100 (100)
I0428 20:19:56.948918  1452 net.cpp:139] Memory required for data: 314000
I0428 20:19:56.948925  1452 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:56.948937  1452 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:56.948945  1452 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:56.948953  1452 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:56.948966  1452 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:56.949074  1452 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:56.949085  1452 net.cpp:131] Top shape: 100 (100)
I0428 20:19:56.949092  1452 net.cpp:131] Top shape: 100 (100)
I0428 20:19:56.949098  1452 net.cpp:139] Memory required for data: 314800
I0428 20:19:56.949105  1452 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:56.949122  1452 net.cpp:86] Creating Layer conv0
I0428 20:19:56.949131  1452 net.cpp:408] conv0 <- data
I0428 20:19:56.949143  1452 net.cpp:382] conv0 -> conv0
I0428 20:19:56.950974  1452 net.cpp:124] Setting up conv0
I0428 20:19:56.950994  1452 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:56.951000  1452 net.cpp:139] Memory required for data: 11834800
I0428 20:19:56.951019  1452 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:56.951032  1452 net.cpp:86] Creating Layer pool0
I0428 20:19:56.951041  1452 net.cpp:408] pool0 <- conv0
I0428 20:19:56.951053  1452 net.cpp:382] pool0 -> pool0
I0428 20:19:56.951104  1452 net.cpp:124] Setting up pool0
I0428 20:19:56.951114  1452 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:56.951120  1452 net.cpp:139] Memory required for data: 14714800
I0428 20:19:56.951126  1452 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:56.951143  1452 net.cpp:86] Creating Layer conv1
I0428 20:19:56.951151  1452 net.cpp:408] conv1 <- pool0
I0428 20:19:56.951164  1452 net.cpp:382] conv1 -> conv1
I0428 20:19:56.953166  1452 net.cpp:124] Setting up conv1
I0428 20:19:56.953184  1452 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:56.953191  1452 net.cpp:139] Memory required for data: 15354800
I0428 20:19:56.953207  1452 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:56.953219  1452 net.cpp:86] Creating Layer pool1
I0428 20:19:56.953227  1452 net.cpp:408] pool1 <- conv1
I0428 20:19:56.953240  1452 net.cpp:382] pool1 -> pool1
I0428 20:19:56.953295  1452 net.cpp:124] Setting up pool1
I0428 20:19:56.953305  1452 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:56.953312  1452 net.cpp:139] Memory required for data: 15514800
I0428 20:19:56.953318  1452 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:56.953332  1452 net.cpp:86] Creating Layer ip1
I0428 20:19:56.953341  1452 net.cpp:408] ip1 <- pool1
I0428 20:19:56.953353  1452 net.cpp:382] ip1 -> ip1
I0428 20:19:56.953555  1452 net.cpp:124] Setting up ip1
I0428 20:19:56.953569  1452 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:56.953589  1452 net.cpp:139] Memory required for data: 15524800
I0428 20:19:56.953605  1452 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:56.953616  1452 net.cpp:86] Creating Layer relu1
I0428 20:19:56.953625  1452 net.cpp:408] relu1 <- ip1
I0428 20:19:56.953639  1452 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:56.953850  1452 net.cpp:124] Setting up relu1
I0428 20:19:56.953863  1452 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:56.953869  1452 net.cpp:139] Memory required for data: 15534800
I0428 20:19:56.953876  1452 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:56.953894  1452 net.cpp:86] Creating Layer ip2
I0428 20:19:56.953902  1452 net.cpp:408] ip2 <- ip1
I0428 20:19:56.953912  1452 net.cpp:382] ip2 -> ip2
I0428 20:19:56.954087  1452 net.cpp:124] Setting up ip2
I0428 20:19:56.954097  1452 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:56.954102  1452 net.cpp:139] Memory required for data: 15544800
I0428 20:19:56.954113  1452 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:56.954125  1452 net.cpp:86] Creating Layer relu2
I0428 20:19:56.954133  1452 net.cpp:408] relu2 <- ip2
I0428 20:19:56.954141  1452 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:56.954345  1452 net.cpp:124] Setting up relu2
I0428 20:19:56.954360  1452 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:56.954365  1452 net.cpp:139] Memory required for data: 15554800
I0428 20:19:56.954372  1452 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:56.954390  1452 net.cpp:86] Creating Layer ip3
I0428 20:19:56.954403  1452 net.cpp:408] ip3 <- ip2
I0428 20:19:56.954413  1452 net.cpp:382] ip3 -> ip3
I0428 20:19:56.954545  1452 net.cpp:124] Setting up ip3
I0428 20:19:56.954555  1452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:56.954562  1452 net.cpp:139] Memory required for data: 15558800
I0428 20:19:56.954577  1452 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:56.954589  1452 net.cpp:86] Creating Layer relu3
I0428 20:19:56.954597  1452 net.cpp:408] relu3 <- ip3
I0428 20:19:56.954607  1452 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:56.955550  1452 net.cpp:124] Setting up relu3
I0428 20:19:56.955566  1452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:56.955574  1452 net.cpp:139] Memory required for data: 15562800
I0428 20:19:56.955580  1452 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:56.955590  1452 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:56.955596  1452 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:56.955606  1452 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:56.955618  1452 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:56.955677  1452 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:56.955687  1452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:56.955694  1452 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:56.955699  1452 net.cpp:139] Memory required for data: 15570800
I0428 20:19:56.955706  1452 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:56.955724  1452 net.cpp:86] Creating Layer accuracy
I0428 20:19:56.955731  1452 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:56.955740  1452 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:56.955749  1452 net.cpp:382] accuracy -> accuracy
I0428 20:19:56.955762  1452 net.cpp:124] Setting up accuracy
I0428 20:19:56.955773  1452 net.cpp:131] Top shape: (1)
I0428 20:19:56.955780  1452 net.cpp:139] Memory required for data: 15570804
I0428 20:19:56.955785  1452 layer_factory.hpp:77] Creating layer loss
I0428 20:19:56.955799  1452 net.cpp:86] Creating Layer loss
I0428 20:19:56.955806  1452 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:56.955813  1452 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:56.955822  1452 net.cpp:382] loss -> loss
I0428 20:19:56.955834  1452 layer_factory.hpp:77] Creating layer loss
I0428 20:19:56.956136  1452 net.cpp:124] Setting up loss
I0428 20:19:56.956151  1452 net.cpp:131] Top shape: (1)
I0428 20:19:56.956157  1452 net.cpp:134]     with loss weight 1
I0428 20:19:56.956181  1452 net.cpp:139] Memory required for data: 15570808
I0428 20:19:56.956188  1452 net.cpp:200] loss needs backward computation.
I0428 20:19:56.956197  1452 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:56.956203  1452 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:56.956209  1452 net.cpp:200] relu3 needs backward computation.
I0428 20:19:56.956215  1452 net.cpp:200] ip3 needs backward computation.
I0428 20:19:56.956223  1452 net.cpp:200] relu2 needs backward computation.
I0428 20:19:56.956228  1452 net.cpp:200] ip2 needs backward computation.
I0428 20:19:56.956234  1452 net.cpp:200] relu1 needs backward computation.
I0428 20:19:56.956240  1452 net.cpp:200] ip1 needs backward computation.
I0428 20:19:56.956246  1452 net.cpp:200] pool1 needs backward computation.
I0428 20:19:56.956254  1452 net.cpp:200] conv1 needs backward computation.
I0428 20:19:56.956259  1452 net.cpp:200] pool0 needs backward computation.
I0428 20:19:56.956265  1452 net.cpp:200] conv0 needs backward computation.
I0428 20:19:56.956272  1452 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:56.956280  1452 net.cpp:202] mnist does not need backward computation.
I0428 20:19:56.956287  1452 net.cpp:244] This network produces output accuracy
I0428 20:19:56.956298  1452 net.cpp:244] This network produces output loss
I0428 20:19:56.956321  1452 net.cpp:257] Network initialization done.
I0428 20:19:56.956380  1452 solver.cpp:56] Solver scaffolding done.
I0428 20:19:56.956854  1452 caffe.cpp:248] Starting Optimization
I0428 20:19:56.956863  1452 solver.cpp:273] Solving LeNet
I0428 20:19:56.956869  1452 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:56.957777  1452 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:56.965373  1452 blocking_queue.cpp:49] Waiting for data
I0428 20:19:57.035928  1459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:57.036887  1452 solver.cpp:398]     Test net output #0: accuracy = 0.0573
I0428 20:19:57.036913  1452 solver.cpp:398]     Test net output #1: loss = 2.32669 (* 1 = 2.32669 loss)
I0428 20:19:57.041682  1452 solver.cpp:219] Iteration 0 (-5.35684e-37 iter/s, 0.0847727s/100 iters), loss = 2.30517
I0428 20:19:57.041716  1452 solver.cpp:238]     Train net output #0: loss = 2.30517 (* 1 = 2.30517 loss)
I0428 20:19:57.041738  1452 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:57.185047  1452 solver.cpp:219] Iteration 100 (697.764 iter/s, 0.143315s/100 iters), loss = 0.519817
I0428 20:19:57.185094  1452 solver.cpp:238]     Train net output #0: loss = 0.519817 (* 1 = 0.519817 loss)
I0428 20:19:57.185109  1452 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:57.333838  1452 solver.cpp:219] Iteration 200 (672.337 iter/s, 0.148735s/100 iters), loss = 0.224269
I0428 20:19:57.333890  1452 solver.cpp:238]     Train net output #0: loss = 0.224269 (* 1 = 0.224269 loss)
I0428 20:19:57.333907  1452 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:57.487920  1452 solver.cpp:219] Iteration 300 (649.263 iter/s, 0.154021s/100 iters), loss = 0.156889
I0428 20:19:57.487972  1452 solver.cpp:238]     Train net output #0: loss = 0.156889 (* 1 = 0.156889 loss)
I0428 20:19:57.487989  1452 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:57.643278  1452 solver.cpp:219] Iteration 400 (643.936 iter/s, 0.155295s/100 iters), loss = 0.0938267
I0428 20:19:57.643334  1452 solver.cpp:238]     Train net output #0: loss = 0.0938267 (* 1 = 0.0938267 loss)
I0428 20:19:57.643352  1452 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:57.795241  1452 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:57.869031  1459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:57.871469  1452 solver.cpp:398]     Test net output #0: accuracy = 0.9641
I0428 20:19:57.871496  1452 solver.cpp:398]     Test net output #1: loss = 0.112041 (* 1 = 0.112041 loss)
I0428 20:19:57.872789  1452 solver.cpp:219] Iteration 500 (435.831 iter/s, 0.229447s/100 iters), loss = 0.126848
I0428 20:19:57.872848  1452 solver.cpp:238]     Train net output #0: loss = 0.126848 (* 1 = 0.126848 loss)
I0428 20:19:57.872861  1452 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:58.030725  1452 solver.cpp:219] Iteration 600 (633.449 iter/s, 0.157866s/100 iters), loss = 0.0824333
I0428 20:19:58.030771  1452 solver.cpp:238]     Train net output #0: loss = 0.0824332 (* 1 = 0.0824332 loss)
I0428 20:19:58.030782  1452 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:58.186836  1452 solver.cpp:219] Iteration 700 (640.802 iter/s, 0.156055s/100 iters), loss = 0.124383
I0428 20:19:58.186878  1452 solver.cpp:238]     Train net output #0: loss = 0.124383 (* 1 = 0.124383 loss)
I0428 20:19:58.186888  1452 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:58.340243  1452 solver.cpp:219] Iteration 800 (652.089 iter/s, 0.153353s/100 iters), loss = 0.276757
I0428 20:19:58.340286  1452 solver.cpp:238]     Train net output #0: loss = 0.276757 (* 1 = 0.276757 loss)
I0428 20:19:58.340296  1452 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:58.493126  1452 solver.cpp:219] Iteration 900 (654.335 iter/s, 0.152827s/100 iters), loss = 0.103294
I0428 20:19:58.493170  1452 solver.cpp:238]     Train net output #0: loss = 0.103293 (* 1 = 0.103293 loss)
I0428 20:19:58.493180  1452 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:58.545177  1458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:58.647318  1452 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:58.649307  1452 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:58.650482  1452 solver.cpp:311] Iteration 1000, loss = 0.123979
I0428 20:19:58.650506  1452 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:58.722335  1459 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:58.724867  1452 solver.cpp:398]     Test net output #0: accuracy = 0.9708
I0428 20:19:58.724905  1452 solver.cpp:398]     Test net output #1: loss = 0.0848237 (* 1 = 0.0848237 loss)
I0428 20:19:58.724911  1452 solver.cpp:316] Optimization Done.
I0428 20:19:58.724926  1452 caffe.cpp:259] Optimization Done.
