I0428 20:32:42.198612  4138 caffe.cpp:218] Using GPUs 0
I0428 20:32:42.239569  4138 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:42.759546  4138 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1576.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:42.759683  4138 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1576.prototxt
I0428 20:32:42.760107  4138 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:42.760126  4138 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:42.760229  4138 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:42.760309  4138 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:42.760407  4138 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:42.760432  4138 net.cpp:86] Creating Layer mnist
I0428 20:32:42.760442  4138 net.cpp:382] mnist -> data
I0428 20:32:42.760463  4138 net.cpp:382] mnist -> label
I0428 20:32:42.761585  4138 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:42.764034  4138 net.cpp:124] Setting up mnist
I0428 20:32:42.764050  4138 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:42.764056  4138 net.cpp:131] Top shape: 64 (64)
I0428 20:32:42.764060  4138 net.cpp:139] Memory required for data: 200960
I0428 20:32:42.764067  4138 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:42.764117  4138 net.cpp:86] Creating Layer conv0
I0428 20:32:42.764137  4138 net.cpp:408] conv0 <- data
I0428 20:32:42.764153  4138 net.cpp:382] conv0 -> conv0
I0428 20:32:43.059103  4138 net.cpp:124] Setting up conv0
I0428 20:32:43.059134  4138 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:43.059139  4138 net.cpp:139] Memory required for data: 14946560
I0428 20:32:43.059156  4138 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:43.059171  4138 net.cpp:86] Creating Layer pool0
I0428 20:32:43.059176  4138 net.cpp:408] pool0 <- conv0
I0428 20:32:43.059182  4138 net.cpp:382] pool0 -> pool0
I0428 20:32:43.059239  4138 net.cpp:124] Setting up pool0
I0428 20:32:43.059247  4138 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:43.059250  4138 net.cpp:139] Memory required for data: 18632960
I0428 20:32:43.059254  4138 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:43.059267  4138 net.cpp:86] Creating Layer conv1
I0428 20:32:43.059272  4138 net.cpp:408] conv1 <- pool0
I0428 20:32:43.059278  4138 net.cpp:382] conv1 -> conv1
I0428 20:32:43.061878  4138 net.cpp:124] Setting up conv1
I0428 20:32:43.061895  4138 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:43.061900  4138 net.cpp:139] Memory required for data: 19042560
I0428 20:32:43.061913  4138 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:43.061921  4138 net.cpp:86] Creating Layer pool1
I0428 20:32:43.061926  4138 net.cpp:408] pool1 <- conv1
I0428 20:32:43.061933  4138 net.cpp:382] pool1 -> pool1
I0428 20:32:43.061980  4138 net.cpp:124] Setting up pool1
I0428 20:32:43.061986  4138 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:43.061990  4138 net.cpp:139] Memory required for data: 19144960
I0428 20:32:43.061993  4138 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:43.062002  4138 net.cpp:86] Creating Layer ip1
I0428 20:32:43.062005  4138 net.cpp:408] ip1 <- pool1
I0428 20:32:43.062012  4138 net.cpp:382] ip1 -> ip1
I0428 20:32:43.062172  4138 net.cpp:124] Setting up ip1
I0428 20:32:43.062182  4138 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:43.062186  4138 net.cpp:139] Memory required for data: 19147520
I0428 20:32:43.062194  4138 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:43.062203  4138 net.cpp:86] Creating Layer relu1
I0428 20:32:43.062207  4138 net.cpp:408] relu1 <- ip1
I0428 20:32:43.062212  4138 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:43.062419  4138 net.cpp:124] Setting up relu1
I0428 20:32:43.062430  4138 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:43.062433  4138 net.cpp:139] Memory required for data: 19150080
I0428 20:32:43.062438  4138 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:43.062448  4138 net.cpp:86] Creating Layer ip2
I0428 20:32:43.062451  4138 net.cpp:408] ip2 <- ip1
I0428 20:32:43.062458  4138 net.cpp:382] ip2 -> ip2
I0428 20:32:43.062575  4138 net.cpp:124] Setting up ip2
I0428 20:32:43.062584  4138 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:43.062588  4138 net.cpp:139] Memory required for data: 19156480
I0428 20:32:43.062594  4138 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:43.062603  4138 net.cpp:86] Creating Layer relu2
I0428 20:32:43.062608  4138 net.cpp:408] relu2 <- ip2
I0428 20:32:43.062613  4138 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:43.063467  4138 net.cpp:124] Setting up relu2
I0428 20:32:43.063482  4138 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:43.063485  4138 net.cpp:139] Memory required for data: 19162880
I0428 20:32:43.063489  4138 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:43.063498  4138 net.cpp:86] Creating Layer ip3
I0428 20:32:43.063503  4138 net.cpp:408] ip3 <- ip2
I0428 20:32:43.063510  4138 net.cpp:382] ip3 -> ip3
I0428 20:32:43.063629  4138 net.cpp:124] Setting up ip3
I0428 20:32:43.063639  4138 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:43.063643  4138 net.cpp:139] Memory required for data: 19165440
I0428 20:32:43.063652  4138 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:43.063659  4138 net.cpp:86] Creating Layer relu3
I0428 20:32:43.063663  4138 net.cpp:408] relu3 <- ip3
I0428 20:32:43.063668  4138 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:43.063868  4138 net.cpp:124] Setting up relu3
I0428 20:32:43.063879  4138 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:43.063882  4138 net.cpp:139] Memory required for data: 19168000
I0428 20:32:43.063886  4138 layer_factory.hpp:77] Creating layer loss
I0428 20:32:43.063894  4138 net.cpp:86] Creating Layer loss
I0428 20:32:43.063897  4138 net.cpp:408] loss <- ip3
I0428 20:32:43.063901  4138 net.cpp:408] loss <- label
I0428 20:32:43.063908  4138 net.cpp:382] loss -> loss
I0428 20:32:43.063925  4138 layer_factory.hpp:77] Creating layer loss
I0428 20:32:43.064190  4138 net.cpp:124] Setting up loss
I0428 20:32:43.064201  4138 net.cpp:131] Top shape: (1)
I0428 20:32:43.064205  4138 net.cpp:134]     with loss weight 1
I0428 20:32:43.064223  4138 net.cpp:139] Memory required for data: 19168004
I0428 20:32:43.064227  4138 net.cpp:200] loss needs backward computation.
I0428 20:32:43.064231  4138 net.cpp:200] relu3 needs backward computation.
I0428 20:32:43.064236  4138 net.cpp:200] ip3 needs backward computation.
I0428 20:32:43.064239  4138 net.cpp:200] relu2 needs backward computation.
I0428 20:32:43.064244  4138 net.cpp:200] ip2 needs backward computation.
I0428 20:32:43.064246  4138 net.cpp:200] relu1 needs backward computation.
I0428 20:32:43.064249  4138 net.cpp:200] ip1 needs backward computation.
I0428 20:32:43.064254  4138 net.cpp:200] pool1 needs backward computation.
I0428 20:32:43.064257  4138 net.cpp:200] conv1 needs backward computation.
I0428 20:32:43.064260  4138 net.cpp:200] pool0 needs backward computation.
I0428 20:32:43.064265  4138 net.cpp:200] conv0 needs backward computation.
I0428 20:32:43.064268  4138 net.cpp:202] mnist does not need backward computation.
I0428 20:32:43.064271  4138 net.cpp:244] This network produces output loss
I0428 20:32:43.064282  4138 net.cpp:257] Network initialization done.
I0428 20:32:43.064668  4138 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1576.prototxt
I0428 20:32:43.064699  4138 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:43.064815  4138 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:43.064913  4138 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:43.064966  4138 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:43.064981  4138 net.cpp:86] Creating Layer mnist
I0428 20:32:43.064986  4138 net.cpp:382] mnist -> data
I0428 20:32:43.064996  4138 net.cpp:382] mnist -> label
I0428 20:32:43.065099  4138 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:43.067288  4138 net.cpp:124] Setting up mnist
I0428 20:32:43.067304  4138 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:43.067311  4138 net.cpp:131] Top shape: 100 (100)
I0428 20:32:43.067314  4138 net.cpp:139] Memory required for data: 314000
I0428 20:32:43.067319  4138 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:43.067327  4138 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:43.067332  4138 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:43.067337  4138 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:43.067345  4138 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:43.067478  4138 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:43.067488  4138 net.cpp:131] Top shape: 100 (100)
I0428 20:32:43.067493  4138 net.cpp:131] Top shape: 100 (100)
I0428 20:32:43.067497  4138 net.cpp:139] Memory required for data: 314800
I0428 20:32:43.067500  4138 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:43.067512  4138 net.cpp:86] Creating Layer conv0
I0428 20:32:43.067515  4138 net.cpp:408] conv0 <- data
I0428 20:32:43.067522  4138 net.cpp:382] conv0 -> conv0
I0428 20:32:43.069373  4138 net.cpp:124] Setting up conv0
I0428 20:32:43.069391  4138 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:43.069396  4138 net.cpp:139] Memory required for data: 23354800
I0428 20:32:43.069407  4138 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:43.069414  4138 net.cpp:86] Creating Layer pool0
I0428 20:32:43.069418  4138 net.cpp:408] pool0 <- conv0
I0428 20:32:43.069424  4138 net.cpp:382] pool0 -> pool0
I0428 20:32:43.069466  4138 net.cpp:124] Setting up pool0
I0428 20:32:43.069473  4138 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:43.069478  4138 net.cpp:139] Memory required for data: 29114800
I0428 20:32:43.069480  4138 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:43.069491  4138 net.cpp:86] Creating Layer conv1
I0428 20:32:43.069495  4138 net.cpp:408] conv1 <- pool0
I0428 20:32:43.069501  4138 net.cpp:382] conv1 -> conv1
I0428 20:32:43.071662  4138 net.cpp:124] Setting up conv1
I0428 20:32:43.071677  4138 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:43.071683  4138 net.cpp:139] Memory required for data: 29754800
I0428 20:32:43.071694  4138 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:43.071702  4138 net.cpp:86] Creating Layer pool1
I0428 20:32:43.071707  4138 net.cpp:408] pool1 <- conv1
I0428 20:32:43.071720  4138 net.cpp:382] pool1 -> pool1
I0428 20:32:43.071763  4138 net.cpp:124] Setting up pool1
I0428 20:32:43.071769  4138 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:43.071772  4138 net.cpp:139] Memory required for data: 29914800
I0428 20:32:43.071777  4138 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:43.071784  4138 net.cpp:86] Creating Layer ip1
I0428 20:32:43.071789  4138 net.cpp:408] ip1 <- pool1
I0428 20:32:43.071794  4138 net.cpp:382] ip1 -> ip1
I0428 20:32:43.071931  4138 net.cpp:124] Setting up ip1
I0428 20:32:43.071954  4138 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:43.071959  4138 net.cpp:139] Memory required for data: 29918800
I0428 20:32:43.071967  4138 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:43.071974  4138 net.cpp:86] Creating Layer relu1
I0428 20:32:43.071979  4138 net.cpp:408] relu1 <- ip1
I0428 20:32:43.071991  4138 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:43.072180  4138 net.cpp:124] Setting up relu1
I0428 20:32:43.072190  4138 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:43.072194  4138 net.cpp:139] Memory required for data: 29922800
I0428 20:32:43.072198  4138 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:43.072207  4138 net.cpp:86] Creating Layer ip2
I0428 20:32:43.072212  4138 net.cpp:408] ip2 <- ip1
I0428 20:32:43.072218  4138 net.cpp:382] ip2 -> ip2
I0428 20:32:43.072337  4138 net.cpp:124] Setting up ip2
I0428 20:32:43.072347  4138 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:43.072351  4138 net.cpp:139] Memory required for data: 29932800
I0428 20:32:43.072360  4138 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:43.072365  4138 net.cpp:86] Creating Layer relu2
I0428 20:32:43.072369  4138 net.cpp:408] relu2 <- ip2
I0428 20:32:43.072374  4138 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:43.072549  4138 net.cpp:124] Setting up relu2
I0428 20:32:43.072558  4138 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:43.072563  4138 net.cpp:139] Memory required for data: 29942800
I0428 20:32:43.072566  4138 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:43.072573  4138 net.cpp:86] Creating Layer ip3
I0428 20:32:43.072584  4138 net.cpp:408] ip3 <- ip2
I0428 20:32:43.072590  4138 net.cpp:382] ip3 -> ip3
I0428 20:32:43.072701  4138 net.cpp:124] Setting up ip3
I0428 20:32:43.072710  4138 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:43.072713  4138 net.cpp:139] Memory required for data: 29946800
I0428 20:32:43.072722  4138 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:43.072728  4138 net.cpp:86] Creating Layer relu3
I0428 20:32:43.072732  4138 net.cpp:408] relu3 <- ip3
I0428 20:32:43.072736  4138 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:43.073670  4138 net.cpp:124] Setting up relu3
I0428 20:32:43.073685  4138 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:43.073689  4138 net.cpp:139] Memory required for data: 29950800
I0428 20:32:43.073694  4138 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:32:43.073700  4138 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:32:43.073705  4138 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:32:43.073711  4138 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:32:43.073719  4138 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:32:43.073767  4138 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:32:43.073774  4138 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:43.073778  4138 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:43.073782  4138 net.cpp:139] Memory required for data: 29958800
I0428 20:32:43.073786  4138 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:43.073792  4138 net.cpp:86] Creating Layer accuracy
I0428 20:32:43.073803  4138 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:32:43.073808  4138 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:43.073814  4138 net.cpp:382] accuracy -> accuracy
I0428 20:32:43.073823  4138 net.cpp:124] Setting up accuracy
I0428 20:32:43.073835  4138 net.cpp:131] Top shape: (1)
I0428 20:32:43.073838  4138 net.cpp:139] Memory required for data: 29958804
I0428 20:32:43.073843  4138 layer_factory.hpp:77] Creating layer loss
I0428 20:32:43.073848  4138 net.cpp:86] Creating Layer loss
I0428 20:32:43.073851  4138 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:32:43.073855  4138 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:43.073860  4138 net.cpp:382] loss -> loss
I0428 20:32:43.073874  4138 layer_factory.hpp:77] Creating layer loss
I0428 20:32:43.074142  4138 net.cpp:124] Setting up loss
I0428 20:32:43.074154  4138 net.cpp:131] Top shape: (1)
I0428 20:32:43.074158  4138 net.cpp:134]     with loss weight 1
I0428 20:32:43.074179  4138 net.cpp:139] Memory required for data: 29958808
I0428 20:32:43.074183  4138 net.cpp:200] loss needs backward computation.
I0428 20:32:43.074188  4138 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:43.074193  4138 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:32:43.074196  4138 net.cpp:200] relu3 needs backward computation.
I0428 20:32:43.074208  4138 net.cpp:200] ip3 needs backward computation.
I0428 20:32:43.074213  4138 net.cpp:200] relu2 needs backward computation.
I0428 20:32:43.074215  4138 net.cpp:200] ip2 needs backward computation.
I0428 20:32:43.074219  4138 net.cpp:200] relu1 needs backward computation.
I0428 20:32:43.074223  4138 net.cpp:200] ip1 needs backward computation.
I0428 20:32:43.074226  4138 net.cpp:200] pool1 needs backward computation.
I0428 20:32:43.074229  4138 net.cpp:200] conv1 needs backward computation.
I0428 20:32:43.074245  4138 net.cpp:200] pool0 needs backward computation.
I0428 20:32:43.074249  4138 net.cpp:200] conv0 needs backward computation.
I0428 20:32:43.074259  4138 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:43.074265  4138 net.cpp:202] mnist does not need backward computation.
I0428 20:32:43.074268  4138 net.cpp:244] This network produces output accuracy
I0428 20:32:43.074285  4138 net.cpp:244] This network produces output loss
I0428 20:32:43.074296  4138 net.cpp:257] Network initialization done.
I0428 20:32:43.074347  4138 solver.cpp:56] Solver scaffolding done.
I0428 20:32:43.074735  4138 caffe.cpp:248] Starting Optimization
I0428 20:32:43.074744  4138 solver.cpp:273] Solving LeNet
I0428 20:32:43.074748  4138 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:43.075079  4138 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:43.174690  4145 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:43.177177  4138 solver.cpp:398]     Test net output #0: accuracy = 0.0958
I0428 20:32:43.177201  4138 solver.cpp:398]     Test net output #1: loss = 2.33293 (* 1 = 2.33293 loss)
I0428 20:32:43.181711  4138 solver.cpp:219] Iteration 0 (0 iter/s, 0.106934s/100 iters), loss = 2.3263
I0428 20:32:43.181736  4138 solver.cpp:238]     Train net output #0: loss = 2.3263 (* 1 = 2.3263 loss)
I0428 20:32:43.181748  4138 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:43.402431  4138 solver.cpp:219] Iteration 100 (453.159 iter/s, 0.220673s/100 iters), loss = 0.751711
I0428 20:32:43.402480  4138 solver.cpp:238]     Train net output #0: loss = 0.751711 (* 1 = 0.751711 loss)
I0428 20:32:43.402493  4138 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:43.633131  4138 solver.cpp:219] Iteration 200 (433.59 iter/s, 0.230632s/100 iters), loss = 0.298729
I0428 20:32:43.633183  4138 solver.cpp:238]     Train net output #0: loss = 0.298729 (* 1 = 0.298729 loss)
I0428 20:32:43.633196  4138 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:43.862884  4138 solver.cpp:219] Iteration 300 (435.378 iter/s, 0.229685s/100 iters), loss = 0.33332
I0428 20:32:43.862931  4138 solver.cpp:238]     Train net output #0: loss = 0.33332 (* 1 = 0.33332 loss)
I0428 20:32:43.862944  4138 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:44.091583  4138 solver.cpp:219] Iteration 400 (437.381 iter/s, 0.228634s/100 iters), loss = 0.193222
I0428 20:32:44.091631  4138 solver.cpp:238]     Train net output #0: loss = 0.193222 (* 1 = 0.193222 loss)
I0428 20:32:44.091644  4138 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:44.318560  4138 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:44.423861  4145 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:44.426486  4138 solver.cpp:398]     Test net output #0: accuracy = 0.9595
I0428 20:32:44.426515  4138 solver.cpp:398]     Test net output #1: loss = 0.134501 (* 1 = 0.134501 loss)
I0428 20:32:44.428592  4138 solver.cpp:219] Iteration 500 (296.786 iter/s, 0.336943s/100 iters), loss = 0.181191
I0428 20:32:44.428620  4138 solver.cpp:238]     Train net output #0: loss = 0.181191 (* 1 = 0.181191 loss)
I0428 20:32:44.428647  4138 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:44.654420  4138 solver.cpp:219] Iteration 600 (442.918 iter/s, 0.225776s/100 iters), loss = 0.0819139
I0428 20:32:44.654481  4138 solver.cpp:238]     Train net output #0: loss = 0.0819139 (* 1 = 0.0819139 loss)
I0428 20:32:44.654500  4138 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:44.877315  4138 solver.cpp:219] Iteration 700 (448.794 iter/s, 0.222819s/100 iters), loss = 0.179403
I0428 20:32:44.877354  4138 solver.cpp:238]     Train net output #0: loss = 0.179403 (* 1 = 0.179403 loss)
I0428 20:32:44.877362  4138 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:45.088632  4138 solver.cpp:219] Iteration 800 (473.342 iter/s, 0.211264s/100 iters), loss = 0.490936
I0428 20:32:45.088661  4138 solver.cpp:238]     Train net output #0: loss = 0.490936 (* 1 = 0.490936 loss)
I0428 20:32:45.088670  4138 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:45.300457  4138 solver.cpp:219] Iteration 900 (472.187 iter/s, 0.211781s/100 iters), loss = 0.112916
I0428 20:32:45.300484  4138 solver.cpp:238]     Train net output #0: loss = 0.112916 (* 1 = 0.112916 loss)
I0428 20:32:45.300490  4138 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:45.371412  4144 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:45.511997  4138 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:45.515193  4138 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:45.517314  4138 solver.cpp:311] Iteration 1000, loss = 0.135103
I0428 20:32:45.517349  4138 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:45.529822  4138 blocking_queue.cpp:49] Waiting for data
I0428 20:32:45.641644  4145 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:45.643393  4138 solver.cpp:398]     Test net output #0: accuracy = 0.9712
I0428 20:32:45.643424  4138 solver.cpp:398]     Test net output #1: loss = 0.091913 (* 1 = 0.091913 loss)
I0428 20:32:45.643434  4138 solver.cpp:316] Optimization Done.
I0428 20:32:45.643443  4138 caffe.cpp:259] Optimization Done.
