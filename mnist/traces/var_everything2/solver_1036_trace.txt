I0428 20:06:44.529690 30940 caffe.cpp:218] Using GPUs 0
I0428 20:06:44.565251 30940 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:45.016935 30940 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1036.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:45.017098 30940 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1036.prototxt
I0428 20:06:45.017475 30940 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:45.017505 30940 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:45.017585 30940 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:45.017648 30940 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:45.017729 30940 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:45.017747 30940 net.cpp:86] Creating Layer mnist
I0428 20:06:45.017753 30940 net.cpp:382] mnist -> data
I0428 20:06:45.017772 30940 net.cpp:382] mnist -> label
I0428 20:06:45.018690 30940 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:45.020874 30940 net.cpp:124] Setting up mnist
I0428 20:06:45.020923 30940 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:45.020928 30940 net.cpp:131] Top shape: 64 (64)
I0428 20:06:45.020931 30940 net.cpp:139] Memory required for data: 200960
I0428 20:06:45.020936 30940 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:45.020951 30940 net.cpp:86] Creating Layer conv0
I0428 20:06:45.020967 30940 net.cpp:408] conv0 <- data
I0428 20:06:45.020977 30940 net.cpp:382] conv0 -> conv0
I0428 20:06:45.251752 30940 net.cpp:124] Setting up conv0
I0428 20:06:45.251778 30940 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:45.251783 30940 net.cpp:139] Memory required for data: 3887360
I0428 20:06:45.251798 30940 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:45.251811 30940 net.cpp:86] Creating Layer pool0
I0428 20:06:45.251816 30940 net.cpp:408] pool0 <- conv0
I0428 20:06:45.251821 30940 net.cpp:382] pool0 -> pool0
I0428 20:06:45.251878 30940 net.cpp:124] Setting up pool0
I0428 20:06:45.251884 30940 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:45.251886 30940 net.cpp:139] Memory required for data: 4808960
I0428 20:06:45.251889 30940 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:45.251901 30940 net.cpp:86] Creating Layer conv1
I0428 20:06:45.251904 30940 net.cpp:408] conv1 <- pool0
I0428 20:06:45.251909 30940 net.cpp:382] conv1 -> conv1
I0428 20:06:45.254739 30940 net.cpp:124] Setting up conv1
I0428 20:06:45.254770 30940 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:45.254773 30940 net.cpp:139] Memory required for data: 4890880
I0428 20:06:45.254781 30940 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:45.254788 30940 net.cpp:86] Creating Layer pool1
I0428 20:06:45.254791 30940 net.cpp:408] pool1 <- conv1
I0428 20:06:45.254796 30940 net.cpp:382] pool1 -> pool1
I0428 20:06:45.254860 30940 net.cpp:124] Setting up pool1
I0428 20:06:45.254865 30940 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:45.254868 30940 net.cpp:139] Memory required for data: 4911360
I0428 20:06:45.254870 30940 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:45.254878 30940 net.cpp:86] Creating Layer ip1
I0428 20:06:45.254880 30940 net.cpp:408] ip1 <- pool1
I0428 20:06:45.254884 30940 net.cpp:382] ip1 -> ip1
I0428 20:06:45.254986 30940 net.cpp:124] Setting up ip1
I0428 20:06:45.254993 30940 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:45.254997 30940 net.cpp:139] Memory required for data: 4917760
I0428 20:06:45.255003 30940 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:45.255008 30940 net.cpp:86] Creating Layer relu1
I0428 20:06:45.255012 30940 net.cpp:408] relu1 <- ip1
I0428 20:06:45.255015 30940 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:45.255167 30940 net.cpp:124] Setting up relu1
I0428 20:06:45.255174 30940 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:45.255177 30940 net.cpp:139] Memory required for data: 4924160
I0428 20:06:45.255180 30940 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:45.255187 30940 net.cpp:86] Creating Layer ip2
I0428 20:06:45.255189 30940 net.cpp:408] ip2 <- ip1
I0428 20:06:45.255193 30940 net.cpp:382] ip2 -> ip2
I0428 20:06:45.255278 30940 net.cpp:124] Setting up ip2
I0428 20:06:45.255285 30940 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:45.255287 30940 net.cpp:139] Memory required for data: 4926720
I0428 20:06:45.255292 30940 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:45.255298 30940 net.cpp:86] Creating Layer relu2
I0428 20:06:45.255301 30940 net.cpp:408] relu2 <- ip2
I0428 20:06:45.255304 30940 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:45.256088 30940 net.cpp:124] Setting up relu2
I0428 20:06:45.256100 30940 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:45.256119 30940 net.cpp:139] Memory required for data: 4929280
I0428 20:06:45.256122 30940 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:45.256129 30940 net.cpp:86] Creating Layer ip3
I0428 20:06:45.256134 30940 net.cpp:408] ip3 <- ip2
I0428 20:06:45.256139 30940 net.cpp:382] ip3 -> ip3
I0428 20:06:45.256233 30940 net.cpp:124] Setting up ip3
I0428 20:06:45.256242 30940 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:45.256244 30940 net.cpp:139] Memory required for data: 4931840
I0428 20:06:45.256252 30940 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:45.256256 30940 net.cpp:86] Creating Layer relu3
I0428 20:06:45.256259 30940 net.cpp:408] relu3 <- ip3
I0428 20:06:45.256263 30940 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:45.256419 30940 net.cpp:124] Setting up relu3
I0428 20:06:45.256428 30940 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:45.256431 30940 net.cpp:139] Memory required for data: 4934400
I0428 20:06:45.256434 30940 layer_factory.hpp:77] Creating layer loss
I0428 20:06:45.256439 30940 net.cpp:86] Creating Layer loss
I0428 20:06:45.256443 30940 net.cpp:408] loss <- ip3
I0428 20:06:45.256446 30940 net.cpp:408] loss <- label
I0428 20:06:45.256451 30940 net.cpp:382] loss -> loss
I0428 20:06:45.256469 30940 layer_factory.hpp:77] Creating layer loss
I0428 20:06:45.256706 30940 net.cpp:124] Setting up loss
I0428 20:06:45.256716 30940 net.cpp:131] Top shape: (1)
I0428 20:06:45.256719 30940 net.cpp:134]     with loss weight 1
I0428 20:06:45.256733 30940 net.cpp:139] Memory required for data: 4934404
I0428 20:06:45.256737 30940 net.cpp:200] loss needs backward computation.
I0428 20:06:45.256742 30940 net.cpp:200] relu3 needs backward computation.
I0428 20:06:45.256743 30940 net.cpp:200] ip3 needs backward computation.
I0428 20:06:45.256747 30940 net.cpp:200] relu2 needs backward computation.
I0428 20:06:45.256749 30940 net.cpp:200] ip2 needs backward computation.
I0428 20:06:45.256752 30940 net.cpp:200] relu1 needs backward computation.
I0428 20:06:45.256754 30940 net.cpp:200] ip1 needs backward computation.
I0428 20:06:45.256757 30940 net.cpp:200] pool1 needs backward computation.
I0428 20:06:45.256760 30940 net.cpp:200] conv1 needs backward computation.
I0428 20:06:45.256764 30940 net.cpp:200] pool0 needs backward computation.
I0428 20:06:45.256767 30940 net.cpp:200] conv0 needs backward computation.
I0428 20:06:45.256770 30940 net.cpp:202] mnist does not need backward computation.
I0428 20:06:45.256773 30940 net.cpp:244] This network produces output loss
I0428 20:06:45.256781 30940 net.cpp:257] Network initialization done.
I0428 20:06:45.257275 30940 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1036.prototxt
I0428 20:06:45.257320 30940 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:45.257408 30940 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:45.257503 30940 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:45.257544 30940 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:45.257557 30940 net.cpp:86] Creating Layer mnist
I0428 20:06:45.257561 30940 net.cpp:382] mnist -> data
I0428 20:06:45.257570 30940 net.cpp:382] mnist -> label
I0428 20:06:45.257648 30940 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:45.259905 30940 net.cpp:124] Setting up mnist
I0428 20:06:45.259951 30940 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:45.259956 30940 net.cpp:131] Top shape: 100 (100)
I0428 20:06:45.259959 30940 net.cpp:139] Memory required for data: 314000
I0428 20:06:45.259963 30940 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:45.259973 30940 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:45.259975 30940 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:45.259980 30940 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:45.259987 30940 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:45.260077 30940 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:45.260084 30940 net.cpp:131] Top shape: 100 (100)
I0428 20:06:45.260088 30940 net.cpp:131] Top shape: 100 (100)
I0428 20:06:45.260092 30940 net.cpp:139] Memory required for data: 314800
I0428 20:06:45.260094 30940 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:45.260102 30940 net.cpp:86] Creating Layer conv0
I0428 20:06:45.260105 30940 net.cpp:408] conv0 <- data
I0428 20:06:45.260110 30940 net.cpp:382] conv0 -> conv0
I0428 20:06:45.261678 30940 net.cpp:124] Setting up conv0
I0428 20:06:45.261708 30940 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:45.261711 30940 net.cpp:139] Memory required for data: 6074800
I0428 20:06:45.261720 30940 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:45.261726 30940 net.cpp:86] Creating Layer pool0
I0428 20:06:45.261729 30940 net.cpp:408] pool0 <- conv0
I0428 20:06:45.261734 30940 net.cpp:382] pool0 -> pool0
I0428 20:06:45.261788 30940 net.cpp:124] Setting up pool0
I0428 20:06:45.261793 30940 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:45.261796 30940 net.cpp:139] Memory required for data: 7514800
I0428 20:06:45.261801 30940 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:45.261808 30940 net.cpp:86] Creating Layer conv1
I0428 20:06:45.261811 30940 net.cpp:408] conv1 <- pool0
I0428 20:06:45.261816 30940 net.cpp:382] conv1 -> conv1
I0428 20:06:45.263914 30940 net.cpp:124] Setting up conv1
I0428 20:06:45.263927 30940 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:45.263931 30940 net.cpp:139] Memory required for data: 7642800
I0428 20:06:45.263939 30940 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:45.263945 30940 net.cpp:86] Creating Layer pool1
I0428 20:06:45.263948 30940 net.cpp:408] pool1 <- conv1
I0428 20:06:45.263953 30940 net.cpp:382] pool1 -> pool1
I0428 20:06:45.264009 30940 net.cpp:124] Setting up pool1
I0428 20:06:45.264015 30940 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:45.264017 30940 net.cpp:139] Memory required for data: 7674800
I0428 20:06:45.264020 30940 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:45.264026 30940 net.cpp:86] Creating Layer ip1
I0428 20:06:45.264029 30940 net.cpp:408] ip1 <- pool1
I0428 20:06:45.264034 30940 net.cpp:382] ip1 -> ip1
I0428 20:06:45.264153 30940 net.cpp:124] Setting up ip1
I0428 20:06:45.264163 30940 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:45.264178 30940 net.cpp:139] Memory required for data: 7684800
I0428 20:06:45.264185 30940 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:45.264190 30940 net.cpp:86] Creating Layer relu1
I0428 20:06:45.264194 30940 net.cpp:408] relu1 <- ip1
I0428 20:06:45.264199 30940 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:45.264385 30940 net.cpp:124] Setting up relu1
I0428 20:06:45.264395 30940 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:45.264400 30940 net.cpp:139] Memory required for data: 7694800
I0428 20:06:45.264403 30940 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:45.264410 30940 net.cpp:86] Creating Layer ip2
I0428 20:06:45.264413 30940 net.cpp:408] ip2 <- ip1
I0428 20:06:45.264420 30940 net.cpp:382] ip2 -> ip2
I0428 20:06:45.264518 30940 net.cpp:124] Setting up ip2
I0428 20:06:45.264526 30940 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:45.264531 30940 net.cpp:139] Memory required for data: 7698800
I0428 20:06:45.264538 30940 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:45.264542 30940 net.cpp:86] Creating Layer relu2
I0428 20:06:45.264545 30940 net.cpp:408] relu2 <- ip2
I0428 20:06:45.264549 30940 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:45.264791 30940 net.cpp:124] Setting up relu2
I0428 20:06:45.264799 30940 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:45.264803 30940 net.cpp:139] Memory required for data: 7702800
I0428 20:06:45.264806 30940 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:45.264834 30940 net.cpp:86] Creating Layer ip3
I0428 20:06:45.264839 30940 net.cpp:408] ip3 <- ip2
I0428 20:06:45.264849 30940 net.cpp:382] ip3 -> ip3
I0428 20:06:45.264997 30940 net.cpp:124] Setting up ip3
I0428 20:06:45.265004 30940 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:45.265008 30940 net.cpp:139] Memory required for data: 7706800
I0428 20:06:45.265017 30940 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:45.265022 30940 net.cpp:86] Creating Layer relu3
I0428 20:06:45.265027 30940 net.cpp:408] relu3 <- ip3
I0428 20:06:45.265031 30940 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:45.265887 30940 net.cpp:124] Setting up relu3
I0428 20:06:45.265899 30940 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:45.265918 30940 net.cpp:139] Memory required for data: 7710800
I0428 20:06:45.265921 30940 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:45.265926 30940 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:45.265929 30940 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:45.265935 30940 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:45.265941 30940 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:45.265977 30940 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:45.265982 30940 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:45.265986 30940 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:45.265990 30940 net.cpp:139] Memory required for data: 7718800
I0428 20:06:45.265991 30940 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:45.265996 30940 net.cpp:86] Creating Layer accuracy
I0428 20:06:45.266000 30940 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:45.266003 30940 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:45.266007 30940 net.cpp:382] accuracy -> accuracy
I0428 20:06:45.266014 30940 net.cpp:124] Setting up accuracy
I0428 20:06:45.266018 30940 net.cpp:131] Top shape: (1)
I0428 20:06:45.266021 30940 net.cpp:139] Memory required for data: 7718804
I0428 20:06:45.266023 30940 layer_factory.hpp:77] Creating layer loss
I0428 20:06:45.266027 30940 net.cpp:86] Creating Layer loss
I0428 20:06:45.266031 30940 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:45.266034 30940 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:45.266038 30940 net.cpp:382] loss -> loss
I0428 20:06:45.266043 30940 layer_factory.hpp:77] Creating layer loss
I0428 20:06:45.266302 30940 net.cpp:124] Setting up loss
I0428 20:06:45.266312 30940 net.cpp:131] Top shape: (1)
I0428 20:06:45.266315 30940 net.cpp:134]     with loss weight 1
I0428 20:06:45.266321 30940 net.cpp:139] Memory required for data: 7718808
I0428 20:06:45.266335 30940 net.cpp:200] loss needs backward computation.
I0428 20:06:45.266340 30940 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:45.266343 30940 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:45.266346 30940 net.cpp:200] relu3 needs backward computation.
I0428 20:06:45.266348 30940 net.cpp:200] ip3 needs backward computation.
I0428 20:06:45.266351 30940 net.cpp:200] relu2 needs backward computation.
I0428 20:06:45.266355 30940 net.cpp:200] ip2 needs backward computation.
I0428 20:06:45.266357 30940 net.cpp:200] relu1 needs backward computation.
I0428 20:06:45.266360 30940 net.cpp:200] ip1 needs backward computation.
I0428 20:06:45.266362 30940 net.cpp:200] pool1 needs backward computation.
I0428 20:06:45.266366 30940 net.cpp:200] conv1 needs backward computation.
I0428 20:06:45.266368 30940 net.cpp:200] pool0 needs backward computation.
I0428 20:06:45.266371 30940 net.cpp:200] conv0 needs backward computation.
I0428 20:06:45.266376 30940 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:45.266379 30940 net.cpp:202] mnist does not need backward computation.
I0428 20:06:45.266381 30940 net.cpp:244] This network produces output accuracy
I0428 20:06:45.266386 30940 net.cpp:244] This network produces output loss
I0428 20:06:45.266396 30940 net.cpp:257] Network initialization done.
I0428 20:06:45.266453 30940 solver.cpp:56] Solver scaffolding done.
I0428 20:06:45.266872 30940 caffe.cpp:248] Starting Optimization
I0428 20:06:45.266880 30940 solver.cpp:273] Solving LeNet
I0428 20:06:45.266898 30940 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:45.267666 30940 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:45.272686 30940 blocking_queue.cpp:49] Waiting for data
I0428 20:06:45.343663 30947 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:45.344280 30940 solver.cpp:398]     Test net output #0: accuracy = 0.1623
I0428 20:06:45.344317 30940 solver.cpp:398]     Test net output #1: loss = 2.30061 (* 1 = 2.30061 loss)
I0428 20:06:45.347986 30940 solver.cpp:219] Iteration 0 (0 iter/s, 0.0810629s/100 iters), loss = 2.2783
I0428 20:06:45.348024 30940 solver.cpp:238]     Train net output #0: loss = 2.2783 (* 1 = 2.2783 loss)
I0428 20:06:45.348036 30940 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:45.438208 30940 solver.cpp:219] Iteration 100 (1108.79 iter/s, 0.0901888s/100 iters), loss = 0.543796
I0428 20:06:45.438251 30940 solver.cpp:238]     Train net output #0: loss = 0.543796 (* 1 = 0.543796 loss)
I0428 20:06:45.438256 30940 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:45.526741 30940 solver.cpp:219] Iteration 200 (1129.98 iter/s, 0.0884972s/100 iters), loss = 0.380077
I0428 20:06:45.526780 30940 solver.cpp:238]     Train net output #0: loss = 0.380077 (* 1 = 0.380077 loss)
I0428 20:06:45.526787 30940 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:45.614320 30940 solver.cpp:219] Iteration 300 (1142.26 iter/s, 0.0875458s/100 iters), loss = 0.282256
I0428 20:06:45.614358 30940 solver.cpp:238]     Train net output #0: loss = 0.282256 (* 1 = 0.282256 loss)
I0428 20:06:45.614364 30940 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:45.702446 30940 solver.cpp:219] Iteration 400 (1135.15 iter/s, 0.0880938s/100 iters), loss = 0.199182
I0428 20:06:45.702484 30940 solver.cpp:238]     Train net output #0: loss = 0.199182 (* 1 = 0.199182 loss)
I0428 20:06:45.702507 30940 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:45.789958 30940 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:45.844553 30947 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:45.845204 30940 solver.cpp:398]     Test net output #0: accuracy = 0.9446
I0428 20:06:45.845238 30940 solver.cpp:398]     Test net output #1: loss = 0.179668 (* 1 = 0.179668 loss)
I0428 20:06:45.846194 30940 solver.cpp:219] Iteration 500 (695.831 iter/s, 0.143713s/100 iters), loss = 0.210428
I0428 20:06:45.846235 30940 solver.cpp:238]     Train net output #0: loss = 0.210428 (* 1 = 0.210428 loss)
I0428 20:06:45.846272 30940 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:45.932559 30940 solver.cpp:219] Iteration 600 (1158.35 iter/s, 0.0863293s/100 iters), loss = 0.0921747
I0428 20:06:45.932598 30940 solver.cpp:238]     Train net output #0: loss = 0.0921746 (* 1 = 0.0921746 loss)
I0428 20:06:45.932605 30940 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:46.018520 30940 solver.cpp:219] Iteration 700 (1163.75 iter/s, 0.085929s/100 iters), loss = 0.248858
I0428 20:06:46.018558 30940 solver.cpp:238]     Train net output #0: loss = 0.248858 (* 1 = 0.248858 loss)
I0428 20:06:46.018564 30940 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:46.106273 30940 solver.cpp:219] Iteration 800 (1139.99 iter/s, 0.08772s/100 iters), loss = 0.23428
I0428 20:06:46.106313 30940 solver.cpp:238]     Train net output #0: loss = 0.23428 (* 1 = 0.23428 loss)
I0428 20:06:46.106319 30940 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:46.193186 30940 solver.cpp:219] Iteration 900 (1151.03 iter/s, 0.0868784s/100 iters), loss = 0.147527
I0428 20:06:46.193226 30940 solver.cpp:238]     Train net output #0: loss = 0.147527 (* 1 = 0.147527 loss)
I0428 20:06:46.193233 30940 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:46.222095 30946 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:46.278827 30940 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:46.279683 30940 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:46.280320 30940 solver.cpp:311] Iteration 1000, loss = 0.106104
I0428 20:06:46.280336 30940 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:46.356302 30947 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:46.356894 30940 solver.cpp:398]     Test net output #0: accuracy = 0.9663
I0428 20:06:46.356930 30940 solver.cpp:398]     Test net output #1: loss = 0.108356 (* 1 = 0.108356 loss)
I0428 20:06:46.356935 30940 solver.cpp:316] Optimization Done.
I0428 20:06:46.356955 30940 caffe.cpp:259] Optimization Done.
