I0428 20:13:10.101052 32410 caffe.cpp:218] Using GPUs 0
I0428 20:13:10.138435 32410 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:10.651935 32410 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1194.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:10.652077 32410 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1194.prototxt
I0428 20:13:10.652501 32410 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:10.652520 32410 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:10.652632 32410 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:10.652711 32410 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:10.652818 32410 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:10.652842 32410 net.cpp:86] Creating Layer mnist
I0428 20:13:10.652853 32410 net.cpp:382] mnist -> data
I0428 20:13:10.652878 32410 net.cpp:382] mnist -> label
I0428 20:13:10.653985 32410 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:10.656692 32410 net.cpp:124] Setting up mnist
I0428 20:13:10.656710 32410 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:10.656716 32410 net.cpp:131] Top shape: 64 (64)
I0428 20:13:10.656719 32410 net.cpp:139] Memory required for data: 200960
I0428 20:13:10.656726 32410 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:10.656772 32410 net.cpp:86] Creating Layer conv0
I0428 20:13:10.656795 32410 net.cpp:408] conv0 <- data
I0428 20:13:10.656816 32410 net.cpp:382] conv0 -> conv0
I0428 20:13:10.942313 32410 net.cpp:124] Setting up conv0
I0428 20:13:10.942342 32410 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:10.942345 32410 net.cpp:139] Memory required for data: 3887360
I0428 20:13:10.942360 32410 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:10.942373 32410 net.cpp:86] Creating Layer pool0
I0428 20:13:10.942376 32410 net.cpp:408] pool0 <- conv0
I0428 20:13:10.942381 32410 net.cpp:382] pool0 -> pool0
I0428 20:13:10.942425 32410 net.cpp:124] Setting up pool0
I0428 20:13:10.942438 32410 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:10.942441 32410 net.cpp:139] Memory required for data: 4808960
I0428 20:13:10.942445 32410 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:10.942454 32410 net.cpp:86] Creating Layer conv1
I0428 20:13:10.942457 32410 net.cpp:408] conv1 <- pool0
I0428 20:13:10.942462 32410 net.cpp:382] conv1 -> conv1
I0428 20:13:10.944910 32410 net.cpp:124] Setting up conv1
I0428 20:13:10.944924 32410 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:10.944927 32410 net.cpp:139] Memory required for data: 6447360
I0428 20:13:10.944936 32410 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:10.944943 32410 net.cpp:86] Creating Layer pool1
I0428 20:13:10.944947 32410 net.cpp:408] pool1 <- conv1
I0428 20:13:10.944952 32410 net.cpp:382] pool1 -> pool1
I0428 20:13:10.944985 32410 net.cpp:124] Setting up pool1
I0428 20:13:10.944993 32410 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:10.944996 32410 net.cpp:139] Memory required for data: 6856960
I0428 20:13:10.944999 32410 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:10.945005 32410 net.cpp:86] Creating Layer ip1
I0428 20:13:10.945008 32410 net.cpp:408] ip1 <- pool1
I0428 20:13:10.945013 32410 net.cpp:382] ip1 -> ip1
I0428 20:13:10.945356 32410 net.cpp:124] Setting up ip1
I0428 20:13:10.945363 32410 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:10.945366 32410 net.cpp:139] Memory required for data: 6863360
I0428 20:13:10.945372 32410 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:10.945377 32410 net.cpp:86] Creating Layer relu1
I0428 20:13:10.945380 32410 net.cpp:408] relu1 <- ip1
I0428 20:13:10.945384 32410 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:10.945541 32410 net.cpp:124] Setting up relu1
I0428 20:13:10.945549 32410 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:10.945567 32410 net.cpp:139] Memory required for data: 6869760
I0428 20:13:10.945571 32410 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:10.945577 32410 net.cpp:86] Creating Layer ip2
I0428 20:13:10.945580 32410 net.cpp:408] ip2 <- ip1
I0428 20:13:10.945585 32410 net.cpp:382] ip2 -> ip2
I0428 20:13:10.945677 32410 net.cpp:124] Setting up ip2
I0428 20:13:10.945684 32410 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:10.945688 32410 net.cpp:139] Memory required for data: 6876160
I0428 20:13:10.945693 32410 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:10.945698 32410 net.cpp:86] Creating Layer relu2
I0428 20:13:10.945700 32410 net.cpp:408] relu2 <- ip2
I0428 20:13:10.945704 32410 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:10.946436 32410 net.cpp:124] Setting up relu2
I0428 20:13:10.946449 32410 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:10.946452 32410 net.cpp:139] Memory required for data: 6882560
I0428 20:13:10.946455 32410 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:10.946462 32410 net.cpp:86] Creating Layer ip3
I0428 20:13:10.946465 32410 net.cpp:408] ip3 <- ip2
I0428 20:13:10.946470 32410 net.cpp:382] ip3 -> ip3
I0428 20:13:10.946565 32410 net.cpp:124] Setting up ip3
I0428 20:13:10.946573 32410 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:10.946575 32410 net.cpp:139] Memory required for data: 6885120
I0428 20:13:10.946583 32410 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:10.946588 32410 net.cpp:86] Creating Layer relu3
I0428 20:13:10.946591 32410 net.cpp:408] relu3 <- ip3
I0428 20:13:10.946595 32410 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:10.946749 32410 net.cpp:124] Setting up relu3
I0428 20:13:10.946758 32410 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:10.946761 32410 net.cpp:139] Memory required for data: 6887680
I0428 20:13:10.946764 32410 layer_factory.hpp:77] Creating layer loss
I0428 20:13:10.946769 32410 net.cpp:86] Creating Layer loss
I0428 20:13:10.946772 32410 net.cpp:408] loss <- ip3
I0428 20:13:10.946791 32410 net.cpp:408] loss <- label
I0428 20:13:10.946797 32410 net.cpp:382] loss -> loss
I0428 20:13:10.946813 32410 layer_factory.hpp:77] Creating layer loss
I0428 20:13:10.947036 32410 net.cpp:124] Setting up loss
I0428 20:13:10.947044 32410 net.cpp:131] Top shape: (1)
I0428 20:13:10.947048 32410 net.cpp:134]     with loss weight 1
I0428 20:13:10.947062 32410 net.cpp:139] Memory required for data: 6887684
I0428 20:13:10.947064 32410 net.cpp:200] loss needs backward computation.
I0428 20:13:10.947068 32410 net.cpp:200] relu3 needs backward computation.
I0428 20:13:10.947072 32410 net.cpp:200] ip3 needs backward computation.
I0428 20:13:10.947074 32410 net.cpp:200] relu2 needs backward computation.
I0428 20:13:10.947077 32410 net.cpp:200] ip2 needs backward computation.
I0428 20:13:10.947079 32410 net.cpp:200] relu1 needs backward computation.
I0428 20:13:10.947082 32410 net.cpp:200] ip1 needs backward computation.
I0428 20:13:10.947084 32410 net.cpp:200] pool1 needs backward computation.
I0428 20:13:10.947088 32410 net.cpp:200] conv1 needs backward computation.
I0428 20:13:10.947090 32410 net.cpp:200] pool0 needs backward computation.
I0428 20:13:10.947093 32410 net.cpp:200] conv0 needs backward computation.
I0428 20:13:10.947098 32410 net.cpp:202] mnist does not need backward computation.
I0428 20:13:10.947099 32410 net.cpp:244] This network produces output loss
I0428 20:13:10.947108 32410 net.cpp:257] Network initialization done.
I0428 20:13:10.947415 32410 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1194.prototxt
I0428 20:13:10.947441 32410 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:10.947535 32410 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:10.947609 32410 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:10.947654 32410 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:10.947666 32410 net.cpp:86] Creating Layer mnist
I0428 20:13:10.947670 32410 net.cpp:382] mnist -> data
I0428 20:13:10.947679 32410 net.cpp:382] mnist -> label
I0428 20:13:10.947755 32410 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:10.949722 32410 net.cpp:124] Setting up mnist
I0428 20:13:10.949734 32410 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:10.949739 32410 net.cpp:131] Top shape: 100 (100)
I0428 20:13:10.949743 32410 net.cpp:139] Memory required for data: 314000
I0428 20:13:10.949746 32410 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:10.949753 32410 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:10.949755 32410 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:10.949760 32410 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:10.949766 32410 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:10.949801 32410 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:10.949806 32410 net.cpp:131] Top shape: 100 (100)
I0428 20:13:10.949810 32410 net.cpp:131] Top shape: 100 (100)
I0428 20:13:10.949812 32410 net.cpp:139] Memory required for data: 314800
I0428 20:13:10.949815 32410 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:10.949822 32410 net.cpp:86] Creating Layer conv0
I0428 20:13:10.949826 32410 net.cpp:408] conv0 <- data
I0428 20:13:10.949831 32410 net.cpp:382] conv0 -> conv0
I0428 20:13:10.951489 32410 net.cpp:124] Setting up conv0
I0428 20:13:10.951503 32410 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:10.951506 32410 net.cpp:139] Memory required for data: 6074800
I0428 20:13:10.951514 32410 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:10.951520 32410 net.cpp:86] Creating Layer pool0
I0428 20:13:10.951524 32410 net.cpp:408] pool0 <- conv0
I0428 20:13:10.951529 32410 net.cpp:382] pool0 -> pool0
I0428 20:13:10.951562 32410 net.cpp:124] Setting up pool0
I0428 20:13:10.951567 32410 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:10.951570 32410 net.cpp:139] Memory required for data: 7514800
I0428 20:13:10.951572 32410 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:10.951581 32410 net.cpp:86] Creating Layer conv1
I0428 20:13:10.951583 32410 net.cpp:408] conv1 <- pool0
I0428 20:13:10.951587 32410 net.cpp:382] conv1 -> conv1
I0428 20:13:10.953394 32410 net.cpp:124] Setting up conv1
I0428 20:13:10.953408 32410 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:10.953413 32410 net.cpp:139] Memory required for data: 10074800
I0428 20:13:10.953420 32410 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:10.953428 32410 net.cpp:86] Creating Layer pool1
I0428 20:13:10.953430 32410 net.cpp:408] pool1 <- conv1
I0428 20:13:10.953435 32410 net.cpp:382] pool1 -> pool1
I0428 20:13:10.953470 32410 net.cpp:124] Setting up pool1
I0428 20:13:10.953475 32410 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:10.953479 32410 net.cpp:139] Memory required for data: 10714800
I0428 20:13:10.953481 32410 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:10.953486 32410 net.cpp:86] Creating Layer ip1
I0428 20:13:10.953490 32410 net.cpp:408] ip1 <- pool1
I0428 20:13:10.953495 32410 net.cpp:382] ip1 -> ip1
I0428 20:13:10.953827 32410 net.cpp:124] Setting up ip1
I0428 20:13:10.953835 32410 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:10.953848 32410 net.cpp:139] Memory required for data: 10724800
I0428 20:13:10.953856 32410 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:10.953861 32410 net.cpp:86] Creating Layer relu1
I0428 20:13:10.953865 32410 net.cpp:408] relu1 <- ip1
I0428 20:13:10.953869 32410 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:10.954058 32410 net.cpp:124] Setting up relu1
I0428 20:13:10.954067 32410 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:10.954071 32410 net.cpp:139] Memory required for data: 10734800
I0428 20:13:10.954074 32410 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:10.954080 32410 net.cpp:86] Creating Layer ip2
I0428 20:13:10.954084 32410 net.cpp:408] ip2 <- ip1
I0428 20:13:10.954094 32410 net.cpp:382] ip2 -> ip2
I0428 20:13:10.954242 32410 net.cpp:124] Setting up ip2
I0428 20:13:10.954267 32410 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:10.954269 32410 net.cpp:139] Memory required for data: 10744800
I0428 20:13:10.954289 32410 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:10.954294 32410 net.cpp:86] Creating Layer relu2
I0428 20:13:10.954298 32410 net.cpp:408] relu2 <- ip2
I0428 20:13:10.954316 32410 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:10.954476 32410 net.cpp:124] Setting up relu2
I0428 20:13:10.954486 32410 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:10.954489 32410 net.cpp:139] Memory required for data: 10754800
I0428 20:13:10.954493 32410 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:10.954499 32410 net.cpp:86] Creating Layer ip3
I0428 20:13:10.954504 32410 net.cpp:408] ip3 <- ip2
I0428 20:13:10.954509 32410 net.cpp:382] ip3 -> ip3
I0428 20:13:10.954633 32410 net.cpp:124] Setting up ip3
I0428 20:13:10.954639 32410 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:10.954643 32410 net.cpp:139] Memory required for data: 10758800
I0428 20:13:10.954651 32410 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:10.954665 32410 net.cpp:86] Creating Layer relu3
I0428 20:13:10.954668 32410 net.cpp:408] relu3 <- ip3
I0428 20:13:10.954672 32410 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:10.955456 32410 net.cpp:124] Setting up relu3
I0428 20:13:10.955483 32410 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:10.955487 32410 net.cpp:139] Memory required for data: 10762800
I0428 20:13:10.955490 32410 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:10.955497 32410 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:10.955515 32410 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:10.955521 32410 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:10.955528 32410 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:10.955591 32410 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:10.955598 32410 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:10.955602 32410 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:10.955606 32410 net.cpp:139] Memory required for data: 10770800
I0428 20:13:10.955610 32410 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:10.955615 32410 net.cpp:86] Creating Layer accuracy
I0428 20:13:10.955622 32410 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:10.955628 32410 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:10.955633 32410 net.cpp:382] accuracy -> accuracy
I0428 20:13:10.955641 32410 net.cpp:124] Setting up accuracy
I0428 20:13:10.955646 32410 net.cpp:131] Top shape: (1)
I0428 20:13:10.955651 32410 net.cpp:139] Memory required for data: 10770804
I0428 20:13:10.955655 32410 layer_factory.hpp:77] Creating layer loss
I0428 20:13:10.955660 32410 net.cpp:86] Creating Layer loss
I0428 20:13:10.955664 32410 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:10.955669 32410 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:10.955674 32410 net.cpp:382] loss -> loss
I0428 20:13:10.955689 32410 layer_factory.hpp:77] Creating layer loss
I0428 20:13:10.955986 32410 net.cpp:124] Setting up loss
I0428 20:13:10.955994 32410 net.cpp:131] Top shape: (1)
I0428 20:13:10.955998 32410 net.cpp:134]     with loss weight 1
I0428 20:13:10.956014 32410 net.cpp:139] Memory required for data: 10770808
I0428 20:13:10.956017 32410 net.cpp:200] loss needs backward computation.
I0428 20:13:10.956022 32410 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:10.956024 32410 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:10.956027 32410 net.cpp:200] relu3 needs backward computation.
I0428 20:13:10.956032 32410 net.cpp:200] ip3 needs backward computation.
I0428 20:13:10.956033 32410 net.cpp:200] relu2 needs backward computation.
I0428 20:13:10.956037 32410 net.cpp:200] ip2 needs backward computation.
I0428 20:13:10.956045 32410 net.cpp:200] relu1 needs backward computation.
I0428 20:13:10.956048 32410 net.cpp:200] ip1 needs backward computation.
I0428 20:13:10.956051 32410 net.cpp:200] pool1 needs backward computation.
I0428 20:13:10.956054 32410 net.cpp:200] conv1 needs backward computation.
I0428 20:13:10.956058 32410 net.cpp:200] pool0 needs backward computation.
I0428 20:13:10.956065 32410 net.cpp:200] conv0 needs backward computation.
I0428 20:13:10.956073 32410 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:10.956076 32410 net.cpp:202] mnist does not need backward computation.
I0428 20:13:10.956079 32410 net.cpp:244] This network produces output accuracy
I0428 20:13:10.956082 32410 net.cpp:244] This network produces output loss
I0428 20:13:10.956092 32410 net.cpp:257] Network initialization done.
I0428 20:13:10.956130 32410 solver.cpp:56] Solver scaffolding done.
I0428 20:13:10.956436 32410 caffe.cpp:248] Starting Optimization
I0428 20:13:10.956444 32410 solver.cpp:273] Solving LeNet
I0428 20:13:10.956446 32410 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:10.957456 32410 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:10.964563 32410 blocking_queue.cpp:49] Waiting for data
I0428 20:13:11.037667 32417 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:11.038480 32410 solver.cpp:398]     Test net output #0: accuracy = 0.146
I0428 20:13:11.038516 32410 solver.cpp:398]     Test net output #1: loss = 2.30123 (* 1 = 2.30123 loss)
I0428 20:13:11.043365 32410 solver.cpp:219] Iteration 0 (0 iter/s, 0.0868905s/100 iters), loss = 2.29718
I0428 20:13:11.043418 32410 solver.cpp:238]     Train net output #0: loss = 2.29718 (* 1 = 2.29718 loss)
I0428 20:13:11.043431 32410 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:11.207134 32410 solver.cpp:219] Iteration 100 (610.867 iter/s, 0.163702s/100 iters), loss = 0.56075
I0428 20:13:11.207175 32410 solver.cpp:238]     Train net output #0: loss = 0.56075 (* 1 = 0.56075 loss)
I0428 20:13:11.207182 32410 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:11.368701 32410 solver.cpp:219] Iteration 200 (619.143 iter/s, 0.161513s/100 iters), loss = 0.432955
I0428 20:13:11.368741 32410 solver.cpp:238]     Train net output #0: loss = 0.432955 (* 1 = 0.432955 loss)
I0428 20:13:11.368746 32410 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:11.533780 32410 solver.cpp:219] Iteration 300 (605.909 iter/s, 0.165041s/100 iters), loss = 0.331766
I0428 20:13:11.533807 32410 solver.cpp:238]     Train net output #0: loss = 0.331766 (* 1 = 0.331766 loss)
I0428 20:13:11.533815 32410 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:11.742647 32410 solver.cpp:219] Iteration 400 (478.876 iter/s, 0.208822s/100 iters), loss = 0.20898
I0428 20:13:11.742681 32410 solver.cpp:238]     Train net output #0: loss = 0.20898 (* 1 = 0.20898 loss)
I0428 20:13:11.742689 32410 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:11.956944 32410 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:12.035447 32417 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:12.036583 32410 solver.cpp:398]     Test net output #0: accuracy = 0.8562
I0428 20:13:12.036612 32410 solver.cpp:398]     Test net output #1: loss = 0.363406 (* 1 = 0.363406 loss)
I0428 20:13:12.038645 32410 solver.cpp:219] Iteration 500 (337.902 iter/s, 0.295943s/100 iters), loss = 0.34635
I0428 20:13:12.038692 32410 solver.cpp:238]     Train net output #0: loss = 0.34635 (* 1 = 0.34635 loss)
I0428 20:13:12.038702 32410 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:12.237327 32410 solver.cpp:219] Iteration 600 (503.489 iter/s, 0.198614s/100 iters), loss = 0.477812
I0428 20:13:12.237381 32410 solver.cpp:238]     Train net output #0: loss = 0.477812 (* 1 = 0.477812 loss)
I0428 20:13:12.237396 32410 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:12.453269 32410 solver.cpp:219] Iteration 700 (463.234 iter/s, 0.215874s/100 iters), loss = 0.260243
I0428 20:13:12.453306 32410 solver.cpp:238]     Train net output #0: loss = 0.260243 (* 1 = 0.260243 loss)
I0428 20:13:12.453315 32410 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:12.665863 32410 solver.cpp:219] Iteration 800 (470.506 iter/s, 0.212537s/100 iters), loss = 0.34363
I0428 20:13:12.665916 32410 solver.cpp:238]     Train net output #0: loss = 0.34363 (* 1 = 0.34363 loss)
I0428 20:13:12.665927 32410 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:12.881929 32410 solver.cpp:219] Iteration 900 (462.957 iter/s, 0.216003s/100 iters), loss = 0.3995
I0428 20:13:12.881976 32410 solver.cpp:238]     Train net output #0: loss = 0.3995 (* 1 = 0.3995 loss)
I0428 20:13:12.881989 32410 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:12.953188 32416 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:13.092181 32410 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:13.095818 32410 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:13.097851 32410 solver.cpp:311] Iteration 1000, loss = 0.346711
I0428 20:13:13.097877 32410 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:13.176268 32417 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:13.177759 32410 solver.cpp:398]     Test net output #0: accuracy = 0.8683
I0428 20:13:13.177794 32410 solver.cpp:398]     Test net output #1: loss = 0.325353 (* 1 = 0.325353 loss)
I0428 20:13:13.177808 32410 solver.cpp:316] Optimization Done.
I0428 20:13:13.177819 32410 caffe.cpp:259] Optimization Done.
