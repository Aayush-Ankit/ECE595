I0428 20:34:49.042130  4529 caffe.cpp:218] Using GPUs 0
I0428 20:34:49.074599  4529 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:34:49.568147  4529 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1611.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:34:49.568302  4529 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1611.prototxt
I0428 20:34:49.568681  4529 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:34:49.568713  4529 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:34:49.568821  4529 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:34:49.568887  4529 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:49.568975  4529 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:34:49.568996  4529 net.cpp:86] Creating Layer mnist
I0428 20:34:49.569002  4529 net.cpp:382] mnist -> data
I0428 20:34:49.569022  4529 net.cpp:382] mnist -> label
I0428 20:34:49.570032  4529 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:34:49.572346  4529 net.cpp:124] Setting up mnist
I0428 20:34:49.572361  4529 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:34:49.572368  4529 net.cpp:131] Top shape: 64 (64)
I0428 20:34:49.572371  4529 net.cpp:139] Memory required for data: 200960
I0428 20:34:49.572377  4529 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:49.572391  4529 net.cpp:86] Creating Layer conv0
I0428 20:34:49.572407  4529 net.cpp:408] conv0 <- data
I0428 20:34:49.572418  4529 net.cpp:382] conv0 -> conv0
I0428 20:34:49.809170  4529 net.cpp:124] Setting up conv0
I0428 20:34:49.809196  4529 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:34:49.809201  4529 net.cpp:139] Memory required for data: 14946560
I0428 20:34:49.809216  4529 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:49.809244  4529 net.cpp:86] Creating Layer pool0
I0428 20:34:49.809249  4529 net.cpp:408] pool0 <- conv0
I0428 20:34:49.809254  4529 net.cpp:382] pool0 -> pool0
I0428 20:34:49.809301  4529 net.cpp:124] Setting up pool0
I0428 20:34:49.809309  4529 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:34:49.809312  4529 net.cpp:139] Memory required for data: 18632960
I0428 20:34:49.809315  4529 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:49.809326  4529 net.cpp:86] Creating Layer conv1
I0428 20:34:49.809329  4529 net.cpp:408] conv1 <- pool0
I0428 20:34:49.809334  4529 net.cpp:382] conv1 -> conv1
I0428 20:34:49.812788  4529 net.cpp:124] Setting up conv1
I0428 20:34:49.812803  4529 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:34:49.812806  4529 net.cpp:139] Memory required for data: 19452160
I0428 20:34:49.812851  4529 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:49.812860  4529 net.cpp:86] Creating Layer pool1
I0428 20:34:49.812865  4529 net.cpp:408] pool1 <- conv1
I0428 20:34:49.812870  4529 net.cpp:382] pool1 -> pool1
I0428 20:34:49.812906  4529 net.cpp:124] Setting up pool1
I0428 20:34:49.812913  4529 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:34:49.812917  4529 net.cpp:139] Memory required for data: 19656960
I0428 20:34:49.812919  4529 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:49.812942  4529 net.cpp:86] Creating Layer ip1
I0428 20:34:49.812944  4529 net.cpp:408] ip1 <- pool1
I0428 20:34:49.812949  4529 net.cpp:382] ip1 -> ip1
I0428 20:34:49.813971  4529 net.cpp:124] Setting up ip1
I0428 20:34:49.813998  4529 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:49.814002  4529 net.cpp:139] Memory required for data: 19659520
I0428 20:34:49.814012  4529 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:49.814018  4529 net.cpp:86] Creating Layer relu1
I0428 20:34:49.814021  4529 net.cpp:408] relu1 <- ip1
I0428 20:34:49.814026  4529 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:49.814231  4529 net.cpp:124] Setting up relu1
I0428 20:34:49.814240  4529 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:49.814244  4529 net.cpp:139] Memory required for data: 19662080
I0428 20:34:49.814246  4529 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:49.814254  4529 net.cpp:86] Creating Layer ip2
I0428 20:34:49.814257  4529 net.cpp:408] ip2 <- ip1
I0428 20:34:49.814262  4529 net.cpp:382] ip2 -> ip2
I0428 20:34:49.814357  4529 net.cpp:124] Setting up ip2
I0428 20:34:49.814364  4529 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:49.814368  4529 net.cpp:139] Memory required for data: 19664640
I0428 20:34:49.814373  4529 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:49.814378  4529 net.cpp:86] Creating Layer relu2
I0428 20:34:49.814381  4529 net.cpp:408] relu2 <- ip2
I0428 20:34:49.814384  4529 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:49.815152  4529 net.cpp:124] Setting up relu2
I0428 20:34:49.815165  4529 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:49.815183  4529 net.cpp:139] Memory required for data: 19667200
I0428 20:34:49.815187  4529 layer_factory.hpp:77] Creating layer ip3
I0428 20:34:49.815208  4529 net.cpp:86] Creating Layer ip3
I0428 20:34:49.815212  4529 net.cpp:408] ip3 <- ip2
I0428 20:34:49.815217  4529 net.cpp:382] ip3 -> ip3
I0428 20:34:49.815312  4529 net.cpp:124] Setting up ip3
I0428 20:34:49.815320  4529 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:49.815322  4529 net.cpp:139] Memory required for data: 19669760
I0428 20:34:49.815330  4529 layer_factory.hpp:77] Creating layer relu3
I0428 20:34:49.815335  4529 net.cpp:86] Creating Layer relu3
I0428 20:34:49.815337  4529 net.cpp:408] relu3 <- ip3
I0428 20:34:49.815342  4529 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:34:49.815522  4529 net.cpp:124] Setting up relu3
I0428 20:34:49.815531  4529 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:49.815536  4529 net.cpp:139] Memory required for data: 19672320
I0428 20:34:49.815538  4529 layer_factory.hpp:77] Creating layer loss
I0428 20:34:49.815543  4529 net.cpp:86] Creating Layer loss
I0428 20:34:49.815546  4529 net.cpp:408] loss <- ip3
I0428 20:34:49.815551  4529 net.cpp:408] loss <- label
I0428 20:34:49.815557  4529 net.cpp:382] loss -> loss
I0428 20:34:49.815589  4529 layer_factory.hpp:77] Creating layer loss
I0428 20:34:49.815834  4529 net.cpp:124] Setting up loss
I0428 20:34:49.815843  4529 net.cpp:131] Top shape: (1)
I0428 20:34:49.815847  4529 net.cpp:134]     with loss weight 1
I0428 20:34:49.815860  4529 net.cpp:139] Memory required for data: 19672324
I0428 20:34:49.815865  4529 net.cpp:200] loss needs backward computation.
I0428 20:34:49.815868  4529 net.cpp:200] relu3 needs backward computation.
I0428 20:34:49.815871  4529 net.cpp:200] ip3 needs backward computation.
I0428 20:34:49.815874  4529 net.cpp:200] relu2 needs backward computation.
I0428 20:34:49.815877  4529 net.cpp:200] ip2 needs backward computation.
I0428 20:34:49.815881  4529 net.cpp:200] relu1 needs backward computation.
I0428 20:34:49.815882  4529 net.cpp:200] ip1 needs backward computation.
I0428 20:34:49.815886  4529 net.cpp:200] pool1 needs backward computation.
I0428 20:34:49.815888  4529 net.cpp:200] conv1 needs backward computation.
I0428 20:34:49.815891  4529 net.cpp:200] pool0 needs backward computation.
I0428 20:34:49.815894  4529 net.cpp:200] conv0 needs backward computation.
I0428 20:34:49.815912  4529 net.cpp:202] mnist does not need backward computation.
I0428 20:34:49.815914  4529 net.cpp:244] This network produces output loss
I0428 20:34:49.815924  4529 net.cpp:257] Network initialization done.
I0428 20:34:49.816293  4529 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1611.prototxt
I0428 20:34:49.816349  4529 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:34:49.816435  4529 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:34:49.816514  4529 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:49.816558  4529 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:34:49.816570  4529 net.cpp:86] Creating Layer mnist
I0428 20:34:49.816576  4529 net.cpp:382] mnist -> data
I0428 20:34:49.816581  4529 net.cpp:382] mnist -> label
I0428 20:34:49.816663  4529 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:34:49.817940  4529 net.cpp:124] Setting up mnist
I0428 20:34:49.817968  4529 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:34:49.817973  4529 net.cpp:131] Top shape: 100 (100)
I0428 20:34:49.817976  4529 net.cpp:139] Memory required for data: 314000
I0428 20:34:49.817981  4529 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:34:49.818011  4529 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:34:49.818015  4529 net.cpp:408] label_mnist_1_split <- label
I0428 20:34:49.818020  4529 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:34:49.818027  4529 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:34:49.818084  4529 net.cpp:124] Setting up label_mnist_1_split
I0428 20:34:49.818090  4529 net.cpp:131] Top shape: 100 (100)
I0428 20:34:49.818094  4529 net.cpp:131] Top shape: 100 (100)
I0428 20:34:49.818096  4529 net.cpp:139] Memory required for data: 314800
I0428 20:34:49.818099  4529 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:49.818107  4529 net.cpp:86] Creating Layer conv0
I0428 20:34:49.818110  4529 net.cpp:408] conv0 <- data
I0428 20:34:49.818116  4529 net.cpp:382] conv0 -> conv0
I0428 20:34:49.819890  4529 net.cpp:124] Setting up conv0
I0428 20:34:49.819903  4529 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:34:49.819907  4529 net.cpp:139] Memory required for data: 23354800
I0428 20:34:49.819916  4529 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:49.819936  4529 net.cpp:86] Creating Layer pool0
I0428 20:34:49.819939  4529 net.cpp:408] pool0 <- conv0
I0428 20:34:49.819959  4529 net.cpp:382] pool0 -> pool0
I0428 20:34:49.819995  4529 net.cpp:124] Setting up pool0
I0428 20:34:49.820004  4529 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:34:49.820008  4529 net.cpp:139] Memory required for data: 29114800
I0428 20:34:49.820010  4529 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:49.820020  4529 net.cpp:86] Creating Layer conv1
I0428 20:34:49.820024  4529 net.cpp:408] conv1 <- pool0
I0428 20:34:49.820029  4529 net.cpp:382] conv1 -> conv1
I0428 20:34:49.823223  4529 net.cpp:124] Setting up conv1
I0428 20:34:49.823240  4529 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:34:49.823251  4529 net.cpp:139] Memory required for data: 30394800
I0428 20:34:49.823276  4529 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:49.823283  4529 net.cpp:86] Creating Layer pool1
I0428 20:34:49.823287  4529 net.cpp:408] pool1 <- conv1
I0428 20:34:49.823292  4529 net.cpp:382] pool1 -> pool1
I0428 20:34:49.823345  4529 net.cpp:124] Setting up pool1
I0428 20:34:49.823352  4529 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:34:49.823355  4529 net.cpp:139] Memory required for data: 30714800
I0428 20:34:49.823359  4529 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:49.823379  4529 net.cpp:86] Creating Layer ip1
I0428 20:34:49.823381  4529 net.cpp:408] ip1 <- pool1
I0428 20:34:49.823386  4529 net.cpp:382] ip1 -> ip1
I0428 20:34:49.823542  4529 net.cpp:124] Setting up ip1
I0428 20:34:49.823560  4529 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:49.823563  4529 net.cpp:139] Memory required for data: 30718800
I0428 20:34:49.823570  4529 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:49.823582  4529 net.cpp:86] Creating Layer relu1
I0428 20:34:49.823585  4529 net.cpp:408] relu1 <- ip1
I0428 20:34:49.823591  4529 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:49.823745  4529 net.cpp:124] Setting up relu1
I0428 20:34:49.823755  4529 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:49.823757  4529 net.cpp:139] Memory required for data: 30722800
I0428 20:34:49.823760  4529 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:49.823768  4529 net.cpp:86] Creating Layer ip2
I0428 20:34:49.823771  4529 net.cpp:408] ip2 <- ip1
I0428 20:34:49.823776  4529 net.cpp:382] ip2 -> ip2
I0428 20:34:49.823874  4529 net.cpp:124] Setting up ip2
I0428 20:34:49.823881  4529 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:49.823884  4529 net.cpp:139] Memory required for data: 30726800
I0428 20:34:49.823889  4529 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:49.823911  4529 net.cpp:86] Creating Layer relu2
I0428 20:34:49.823915  4529 net.cpp:408] relu2 <- ip2
I0428 20:34:49.823933  4529 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:49.824184  4529 net.cpp:124] Setting up relu2
I0428 20:34:49.824193  4529 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:49.824196  4529 net.cpp:139] Memory required for data: 30730800
I0428 20:34:49.824204  4529 layer_factory.hpp:77] Creating layer ip3
I0428 20:34:49.824211  4529 net.cpp:86] Creating Layer ip3
I0428 20:34:49.824214  4529 net.cpp:408] ip3 <- ip2
I0428 20:34:49.824218  4529 net.cpp:382] ip3 -> ip3
I0428 20:34:49.824400  4529 net.cpp:124] Setting up ip3
I0428 20:34:49.824415  4529 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:49.824419  4529 net.cpp:139] Memory required for data: 30734800
I0428 20:34:49.824427  4529 layer_factory.hpp:77] Creating layer relu3
I0428 20:34:49.824440  4529 net.cpp:86] Creating Layer relu3
I0428 20:34:49.824443  4529 net.cpp:408] relu3 <- ip3
I0428 20:34:49.824448  4529 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:34:49.825327  4529 net.cpp:124] Setting up relu3
I0428 20:34:49.825340  4529 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:49.825343  4529 net.cpp:139] Memory required for data: 30738800
I0428 20:34:49.825346  4529 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:34:49.825352  4529 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:34:49.825356  4529 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:34:49.825359  4529 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:34:49.825366  4529 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:34:49.825425  4529 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:34:49.825433  4529 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:49.825436  4529 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:49.825439  4529 net.cpp:139] Memory required for data: 30746800
I0428 20:34:49.825441  4529 layer_factory.hpp:77] Creating layer accuracy
I0428 20:34:49.825448  4529 net.cpp:86] Creating Layer accuracy
I0428 20:34:49.825450  4529 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:34:49.825455  4529 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:34:49.825460  4529 net.cpp:382] accuracy -> accuracy
I0428 20:34:49.825466  4529 net.cpp:124] Setting up accuracy
I0428 20:34:49.825470  4529 net.cpp:131] Top shape: (1)
I0428 20:34:49.825474  4529 net.cpp:139] Memory required for data: 30746804
I0428 20:34:49.825476  4529 layer_factory.hpp:77] Creating layer loss
I0428 20:34:49.825481  4529 net.cpp:86] Creating Layer loss
I0428 20:34:49.825485  4529 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:34:49.825489  4529 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:34:49.825492  4529 net.cpp:382] loss -> loss
I0428 20:34:49.825498  4529 layer_factory.hpp:77] Creating layer loss
I0428 20:34:49.825763  4529 net.cpp:124] Setting up loss
I0428 20:34:49.825773  4529 net.cpp:131] Top shape: (1)
I0428 20:34:49.825775  4529 net.cpp:134]     with loss weight 1
I0428 20:34:49.825793  4529 net.cpp:139] Memory required for data: 30746808
I0428 20:34:49.825795  4529 net.cpp:200] loss needs backward computation.
I0428 20:34:49.825799  4529 net.cpp:202] accuracy does not need backward computation.
I0428 20:34:49.825803  4529 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:34:49.825805  4529 net.cpp:200] relu3 needs backward computation.
I0428 20:34:49.825809  4529 net.cpp:200] ip3 needs backward computation.
I0428 20:34:49.825810  4529 net.cpp:200] relu2 needs backward computation.
I0428 20:34:49.825814  4529 net.cpp:200] ip2 needs backward computation.
I0428 20:34:49.825815  4529 net.cpp:200] relu1 needs backward computation.
I0428 20:34:49.825826  4529 net.cpp:200] ip1 needs backward computation.
I0428 20:34:49.825829  4529 net.cpp:200] pool1 needs backward computation.
I0428 20:34:49.825832  4529 net.cpp:200] conv1 needs backward computation.
I0428 20:34:49.825835  4529 net.cpp:200] pool0 needs backward computation.
I0428 20:34:49.825839  4529 net.cpp:200] conv0 needs backward computation.
I0428 20:34:49.825842  4529 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:34:49.825845  4529 net.cpp:202] mnist does not need backward computation.
I0428 20:34:49.825847  4529 net.cpp:244] This network produces output accuracy
I0428 20:34:49.825856  4529 net.cpp:244] This network produces output loss
I0428 20:34:49.825868  4529 net.cpp:257] Network initialization done.
I0428 20:34:49.825909  4529 solver.cpp:56] Solver scaffolding done.
I0428 20:34:49.826243  4529 caffe.cpp:248] Starting Optimization
I0428 20:34:49.826251  4529 solver.cpp:273] Solving LeNet
I0428 20:34:49.826253  4529 solver.cpp:274] Learning Rate Policy: inv
I0428 20:34:49.826437  4529 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:34:49.935904  4536 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:49.938652  4529 solver.cpp:398]     Test net output #0: accuracy = 0.0869
I0428 20:34:49.938681  4529 solver.cpp:398]     Test net output #1: loss = 2.32746 (* 1 = 2.32746 loss)
I0428 20:34:49.943256  4529 solver.cpp:219] Iteration 0 (-6.75645e-31 iter/s, 0.116974s/100 iters), loss = 2.31422
I0428 20:34:49.943295  4529 solver.cpp:238]     Train net output #0: loss = 2.31422 (* 1 = 2.31422 loss)
I0428 20:34:49.943305  4529 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:34:50.179834  4529 solver.cpp:219] Iteration 100 (422.787 iter/s, 0.236526s/100 iters), loss = 1.43358
I0428 20:34:50.179888  4529 solver.cpp:238]     Train net output #0: loss = 1.43358 (* 1 = 1.43358 loss)
I0428 20:34:50.179904  4529 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:34:50.436576  4529 solver.cpp:219] Iteration 200 (389.607 iter/s, 0.256669s/100 iters), loss = 0.832354
I0428 20:34:50.436633  4529 solver.cpp:238]     Train net output #0: loss = 0.832354 (* 1 = 0.832354 loss)
I0428 20:34:50.436647  4529 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:34:50.692612  4529 solver.cpp:219] Iteration 300 (390.683 iter/s, 0.255962s/100 iters), loss = 0.414155
I0428 20:34:50.692667  4529 solver.cpp:238]     Train net output #0: loss = 0.414155 (* 1 = 0.414155 loss)
I0428 20:34:50.692688  4529 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:34:50.950110  4529 solver.cpp:219] Iteration 400 (388.461 iter/s, 0.257426s/100 iters), loss = 0.688968
I0428 20:34:50.950161  4529 solver.cpp:238]     Train net output #0: loss = 0.688968 (* 1 = 0.688968 loss)
I0428 20:34:50.950175  4529 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:34:51.198653  4529 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:34:51.313539  4536 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:51.316638  4529 solver.cpp:398]     Test net output #0: accuracy = 0.9469
I0428 20:34:51.316665  4529 solver.cpp:398]     Test net output #1: loss = 0.186561 (* 1 = 0.186561 loss)
I0428 20:34:51.318887  4529 solver.cpp:219] Iteration 500 (271.217 iter/s, 0.368709s/100 iters), loss = 0.190017
I0428 20:34:51.318915  4529 solver.cpp:238]     Train net output #0: loss = 0.190017 (* 1 = 0.190017 loss)
I0428 20:34:51.318943  4529 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:51.560202  4529 solver.cpp:219] Iteration 600 (414.479 iter/s, 0.241267s/100 iters), loss = 0.124561
I0428 20:34:51.560248  4529 solver.cpp:238]     Train net output #0: loss = 0.124561 (* 1 = 0.124561 loss)
I0428 20:34:51.560259  4529 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:51.807207  4529 solver.cpp:219] Iteration 700 (404.954 iter/s, 0.246942s/100 iters), loss = 0.250693
I0428 20:34:51.807255  4529 solver.cpp:238]     Train net output #0: loss = 0.250694 (* 1 = 0.250694 loss)
I0428 20:34:51.807267  4529 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:52.053498  4529 solver.cpp:219] Iteration 800 (406.131 iter/s, 0.246226s/100 iters), loss = 0.409765
I0428 20:34:52.053537  4529 solver.cpp:238]     Train net output #0: loss = 0.409765 (* 1 = 0.409765 loss)
I0428 20:34:52.053549  4529 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:52.297397  4529 solver.cpp:219] Iteration 900 (410.1 iter/s, 0.243843s/100 iters), loss = 0.133844
I0428 20:34:52.297441  4529 solver.cpp:238]     Train net output #0: loss = 0.133844 (* 1 = 0.133844 loss)
I0428 20:34:52.297451  4529 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:52.380005  4535 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:52.541069  4529 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:52.546044  4529 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:52.548334  4529 solver.cpp:311] Iteration 1000, loss = 0.117496
I0428 20:34:52.548357  4529 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:52.579293  4529 blocking_queue.cpp:49] Waiting for data
I0428 20:34:52.660881  4536 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:52.662571  4529 solver.cpp:398]     Test net output #0: accuracy = 0.9713
I0428 20:34:52.662595  4529 solver.cpp:398]     Test net output #1: loss = 0.0965317 (* 1 = 0.0965317 loss)
I0428 20:34:52.662602  4529 solver.cpp:316] Optimization Done.
I0428 20:34:52.662606  4529 caffe.cpp:259] Optimization Done.
