I0428 20:38:39.438452  5150 caffe.cpp:218] Using GPUs 0
I0428 20:38:39.476007  5150 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:39.931972  5150 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1668.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:39.932099  5150 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1668.prototxt
I0428 20:38:39.932451  5150 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:39.932479  5150 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:39.932591  5150 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:39.932656  5150 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:39.932737  5150 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:39.932756  5150 net.cpp:86] Creating Layer mnist
I0428 20:38:39.932761  5150 net.cpp:382] mnist -> data
I0428 20:38:39.932780  5150 net.cpp:382] mnist -> label
I0428 20:38:39.933832  5150 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:39.936015  5150 net.cpp:124] Setting up mnist
I0428 20:38:39.936048  5150 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:39.936054  5150 net.cpp:131] Top shape: 64 (64)
I0428 20:38:39.936058  5150 net.cpp:139] Memory required for data: 200960
I0428 20:38:39.936065  5150 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:39.936084  5150 net.cpp:86] Creating Layer conv0
I0428 20:38:39.936101  5150 net.cpp:408] conv0 <- data
I0428 20:38:39.936111  5150 net.cpp:382] conv0 -> conv0
I0428 20:38:40.165372  5150 net.cpp:124] Setting up conv0
I0428 20:38:40.165400  5150 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:40.165403  5150 net.cpp:139] Memory required for data: 14946560
I0428 20:38:40.165416  5150 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:40.165428  5150 net.cpp:86] Creating Layer pool0
I0428 20:38:40.165431  5150 net.cpp:408] pool0 <- conv0
I0428 20:38:40.165436  5150 net.cpp:382] pool0 -> pool0
I0428 20:38:40.165495  5150 net.cpp:124] Setting up pool0
I0428 20:38:40.165500  5150 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:40.165503  5150 net.cpp:139] Memory required for data: 18632960
I0428 20:38:40.165505  5150 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:40.165516  5150 net.cpp:86] Creating Layer conv1
I0428 20:38:40.165519  5150 net.cpp:408] conv1 <- pool0
I0428 20:38:40.165524  5150 net.cpp:382] conv1 -> conv1
I0428 20:38:40.169613  5150 net.cpp:124] Setting up conv1
I0428 20:38:40.169627  5150 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:40.169631  5150 net.cpp:139] Memory required for data: 20271360
I0428 20:38:40.169637  5150 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:40.169646  5150 net.cpp:86] Creating Layer pool1
I0428 20:38:40.169649  5150 net.cpp:408] pool1 <- conv1
I0428 20:38:40.169654  5150 net.cpp:382] pool1 -> pool1
I0428 20:38:40.169704  5150 net.cpp:124] Setting up pool1
I0428 20:38:40.169709  5150 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:40.169711  5150 net.cpp:139] Memory required for data: 20680960
I0428 20:38:40.169714  5150 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:40.169723  5150 net.cpp:86] Creating Layer ip1
I0428 20:38:40.169725  5150 net.cpp:408] ip1 <- pool1
I0428 20:38:40.169729  5150 net.cpp:382] ip1 -> ip1
I0428 20:38:40.170238  5150 net.cpp:124] Setting up ip1
I0428 20:38:40.170244  5150 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:40.170261  5150 net.cpp:139] Memory required for data: 20693760
I0428 20:38:40.170269  5150 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:40.170274  5150 net.cpp:86] Creating Layer relu1
I0428 20:38:40.170277  5150 net.cpp:408] relu1 <- ip1
I0428 20:38:40.170281  5150 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:40.170465  5150 net.cpp:124] Setting up relu1
I0428 20:38:40.170475  5150 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:40.170477  5150 net.cpp:139] Memory required for data: 20706560
I0428 20:38:40.170480  5150 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:40.170487  5150 net.cpp:86] Creating Layer ip2
I0428 20:38:40.170490  5150 net.cpp:408] ip2 <- ip1
I0428 20:38:40.170495  5150 net.cpp:382] ip2 -> ip2
I0428 20:38:40.170591  5150 net.cpp:124] Setting up ip2
I0428 20:38:40.170598  5150 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:40.170601  5150 net.cpp:139] Memory required for data: 20709120
I0428 20:38:40.170606  5150 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:40.170613  5150 net.cpp:86] Creating Layer relu2
I0428 20:38:40.170615  5150 net.cpp:408] relu2 <- ip2
I0428 20:38:40.170619  5150 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:40.171409  5150 net.cpp:124] Setting up relu2
I0428 20:38:40.171421  5150 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:40.171439  5150 net.cpp:139] Memory required for data: 20711680
I0428 20:38:40.171442  5150 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:40.171449  5150 net.cpp:86] Creating Layer ip3
I0428 20:38:40.171452  5150 net.cpp:408] ip3 <- ip2
I0428 20:38:40.171458  5150 net.cpp:382] ip3 -> ip3
I0428 20:38:40.171579  5150 net.cpp:124] Setting up ip3
I0428 20:38:40.171587  5150 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:40.171591  5150 net.cpp:139] Memory required for data: 20714240
I0428 20:38:40.171598  5150 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:40.171603  5150 net.cpp:86] Creating Layer relu3
I0428 20:38:40.171607  5150 net.cpp:408] relu3 <- ip3
I0428 20:38:40.171625  5150 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:40.171782  5150 net.cpp:124] Setting up relu3
I0428 20:38:40.171804  5150 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:40.171808  5150 net.cpp:139] Memory required for data: 20716800
I0428 20:38:40.171810  5150 layer_factory.hpp:77] Creating layer loss
I0428 20:38:40.171816  5150 net.cpp:86] Creating Layer loss
I0428 20:38:40.171819  5150 net.cpp:408] loss <- ip3
I0428 20:38:40.171823  5150 net.cpp:408] loss <- label
I0428 20:38:40.171828  5150 net.cpp:382] loss -> loss
I0428 20:38:40.171841  5150 layer_factory.hpp:77] Creating layer loss
I0428 20:38:40.172106  5150 net.cpp:124] Setting up loss
I0428 20:38:40.172116  5150 net.cpp:131] Top shape: (1)
I0428 20:38:40.172119  5150 net.cpp:134]     with loss weight 1
I0428 20:38:40.172133  5150 net.cpp:139] Memory required for data: 20716804
I0428 20:38:40.172137  5150 net.cpp:200] loss needs backward computation.
I0428 20:38:40.172140  5150 net.cpp:200] relu3 needs backward computation.
I0428 20:38:40.172143  5150 net.cpp:200] ip3 needs backward computation.
I0428 20:38:40.172147  5150 net.cpp:200] relu2 needs backward computation.
I0428 20:38:40.172149  5150 net.cpp:200] ip2 needs backward computation.
I0428 20:38:40.172152  5150 net.cpp:200] relu1 needs backward computation.
I0428 20:38:40.172155  5150 net.cpp:200] ip1 needs backward computation.
I0428 20:38:40.172158  5150 net.cpp:200] pool1 needs backward computation.
I0428 20:38:40.172161  5150 net.cpp:200] conv1 needs backward computation.
I0428 20:38:40.172163  5150 net.cpp:200] pool0 needs backward computation.
I0428 20:38:40.172166  5150 net.cpp:200] conv0 needs backward computation.
I0428 20:38:40.172169  5150 net.cpp:202] mnist does not need backward computation.
I0428 20:38:40.172173  5150 net.cpp:244] This network produces output loss
I0428 20:38:40.172183  5150 net.cpp:257] Network initialization done.
I0428 20:38:40.172540  5150 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1668.prototxt
I0428 20:38:40.172597  5150 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:40.172703  5150 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:40.172797  5150 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:40.172863  5150 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:40.172879  5150 net.cpp:86] Creating Layer mnist
I0428 20:38:40.172884  5150 net.cpp:382] mnist -> data
I0428 20:38:40.172894  5150 net.cpp:382] mnist -> label
I0428 20:38:40.172992  5150 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:40.175035  5150 net.cpp:124] Setting up mnist
I0428 20:38:40.175063  5150 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:40.175068  5150 net.cpp:131] Top shape: 100 (100)
I0428 20:38:40.175071  5150 net.cpp:139] Memory required for data: 314000
I0428 20:38:40.175076  5150 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:40.175120  5150 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:40.175125  5150 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:40.175130  5150 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:40.175137  5150 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:40.175194  5150 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:40.175199  5150 net.cpp:131] Top shape: 100 (100)
I0428 20:38:40.175202  5150 net.cpp:131] Top shape: 100 (100)
I0428 20:38:40.175205  5150 net.cpp:139] Memory required for data: 314800
I0428 20:38:40.175209  5150 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:40.175218  5150 net.cpp:86] Creating Layer conv0
I0428 20:38:40.175221  5150 net.cpp:408] conv0 <- data
I0428 20:38:40.175227  5150 net.cpp:382] conv0 -> conv0
I0428 20:38:40.177003  5150 net.cpp:124] Setting up conv0
I0428 20:38:40.177018  5150 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:40.177022  5150 net.cpp:139] Memory required for data: 23354800
I0428 20:38:40.177033  5150 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:40.177039  5150 net.cpp:86] Creating Layer pool0
I0428 20:38:40.177043  5150 net.cpp:408] pool0 <- conv0
I0428 20:38:40.177048  5150 net.cpp:382] pool0 -> pool0
I0428 20:38:40.177088  5150 net.cpp:124] Setting up pool0
I0428 20:38:40.177094  5150 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:40.177098  5150 net.cpp:139] Memory required for data: 29114800
I0428 20:38:40.177100  5150 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:40.177110  5150 net.cpp:86] Creating Layer conv1
I0428 20:38:40.177114  5150 net.cpp:408] conv1 <- pool0
I0428 20:38:40.177119  5150 net.cpp:382] conv1 -> conv1
I0428 20:38:40.180119  5150 net.cpp:124] Setting up conv1
I0428 20:38:40.180131  5150 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:40.180135  5150 net.cpp:139] Memory required for data: 31674800
I0428 20:38:40.180142  5150 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:40.180150  5150 net.cpp:86] Creating Layer pool1
I0428 20:38:40.180167  5150 net.cpp:408] pool1 <- conv1
I0428 20:38:40.180172  5150 net.cpp:382] pool1 -> pool1
I0428 20:38:40.180207  5150 net.cpp:124] Setting up pool1
I0428 20:38:40.180212  5150 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:40.180215  5150 net.cpp:139] Memory required for data: 32314800
I0428 20:38:40.180223  5150 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:40.180228  5150 net.cpp:86] Creating Layer ip1
I0428 20:38:40.180232  5150 net.cpp:408] ip1 <- pool1
I0428 20:38:40.180238  5150 net.cpp:382] ip1 -> ip1
I0428 20:38:40.180773  5150 net.cpp:124] Setting up ip1
I0428 20:38:40.180791  5150 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:40.180794  5150 net.cpp:139] Memory required for data: 32334800
I0428 20:38:40.180801  5150 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:40.180806  5150 net.cpp:86] Creating Layer relu1
I0428 20:38:40.180814  5150 net.cpp:408] relu1 <- ip1
I0428 20:38:40.180842  5150 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:40.181000  5150 net.cpp:124] Setting up relu1
I0428 20:38:40.181008  5150 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:40.181011  5150 net.cpp:139] Memory required for data: 32354800
I0428 20:38:40.181015  5150 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:40.181022  5150 net.cpp:86] Creating Layer ip2
I0428 20:38:40.181025  5150 net.cpp:408] ip2 <- ip1
I0428 20:38:40.181030  5150 net.cpp:382] ip2 -> ip2
I0428 20:38:40.181130  5150 net.cpp:124] Setting up ip2
I0428 20:38:40.181138  5150 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:40.181154  5150 net.cpp:139] Memory required for data: 32358800
I0428 20:38:40.181159  5150 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:40.181164  5150 net.cpp:86] Creating Layer relu2
I0428 20:38:40.181166  5150 net.cpp:408] relu2 <- ip2
I0428 20:38:40.181170  5150 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:40.181380  5150 net.cpp:124] Setting up relu2
I0428 20:38:40.181387  5150 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:40.181391  5150 net.cpp:139] Memory required for data: 32362800
I0428 20:38:40.181393  5150 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:40.181401  5150 net.cpp:86] Creating Layer ip3
I0428 20:38:40.181403  5150 net.cpp:408] ip3 <- ip2
I0428 20:38:40.181407  5150 net.cpp:382] ip3 -> ip3
I0428 20:38:40.181536  5150 net.cpp:124] Setting up ip3
I0428 20:38:40.181543  5150 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:40.181547  5150 net.cpp:139] Memory required for data: 32366800
I0428 20:38:40.181555  5150 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:40.181560  5150 net.cpp:86] Creating Layer relu3
I0428 20:38:40.181562  5150 net.cpp:408] relu3 <- ip3
I0428 20:38:40.181566  5150 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:40.182294  5150 net.cpp:124] Setting up relu3
I0428 20:38:40.182307  5150 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:40.182323  5150 net.cpp:139] Memory required for data: 32370800
I0428 20:38:40.182327  5150 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:40.182332  5150 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:40.182341  5150 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:40.182345  5150 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:40.182351  5150 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:40.182400  5150 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:40.182415  5150 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:40.182425  5150 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:40.182427  5150 net.cpp:139] Memory required for data: 32378800
I0428 20:38:40.182430  5150 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:40.182436  5150 net.cpp:86] Creating Layer accuracy
I0428 20:38:40.182445  5150 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:40.182448  5150 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:40.182452  5150 net.cpp:382] accuracy -> accuracy
I0428 20:38:40.182459  5150 net.cpp:124] Setting up accuracy
I0428 20:38:40.182463  5150 net.cpp:131] Top shape: (1)
I0428 20:38:40.182466  5150 net.cpp:139] Memory required for data: 32378804
I0428 20:38:40.182473  5150 layer_factory.hpp:77] Creating layer loss
I0428 20:38:40.182478  5150 net.cpp:86] Creating Layer loss
I0428 20:38:40.182481  5150 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:40.182484  5150 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:40.182489  5150 net.cpp:382] loss -> loss
I0428 20:38:40.182494  5150 layer_factory.hpp:77] Creating layer loss
I0428 20:38:40.182731  5150 net.cpp:124] Setting up loss
I0428 20:38:40.182739  5150 net.cpp:131] Top shape: (1)
I0428 20:38:40.182742  5150 net.cpp:134]     with loss weight 1
I0428 20:38:40.182757  5150 net.cpp:139] Memory required for data: 32378808
I0428 20:38:40.182760  5150 net.cpp:200] loss needs backward computation.
I0428 20:38:40.182765  5150 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:40.182767  5150 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:40.182770  5150 net.cpp:200] relu3 needs backward computation.
I0428 20:38:40.182773  5150 net.cpp:200] ip3 needs backward computation.
I0428 20:38:40.182775  5150 net.cpp:200] relu2 needs backward computation.
I0428 20:38:40.182778  5150 net.cpp:200] ip2 needs backward computation.
I0428 20:38:40.182780  5150 net.cpp:200] relu1 needs backward computation.
I0428 20:38:40.182783  5150 net.cpp:200] ip1 needs backward computation.
I0428 20:38:40.182785  5150 net.cpp:200] pool1 needs backward computation.
I0428 20:38:40.182788  5150 net.cpp:200] conv1 needs backward computation.
I0428 20:38:40.182791  5150 net.cpp:200] pool0 needs backward computation.
I0428 20:38:40.182795  5150 net.cpp:200] conv0 needs backward computation.
I0428 20:38:40.182797  5150 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:40.182801  5150 net.cpp:202] mnist does not need backward computation.
I0428 20:38:40.182803  5150 net.cpp:244] This network produces output accuracy
I0428 20:38:40.182806  5150 net.cpp:244] This network produces output loss
I0428 20:38:40.182816  5150 net.cpp:257] Network initialization done.
I0428 20:38:40.182857  5150 solver.cpp:56] Solver scaffolding done.
I0428 20:38:40.183182  5150 caffe.cpp:248] Starting Optimization
I0428 20:38:40.183187  5150 solver.cpp:273] Solving LeNet
I0428 20:38:40.183190  5150 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:40.184581  5150 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:40.317425  5157 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:40.320514  5150 solver.cpp:398]     Test net output #0: accuracy = 0.0964
I0428 20:38:40.320534  5150 solver.cpp:398]     Test net output #1: loss = 2.30442 (* 1 = 2.30442 loss)
I0428 20:38:40.325657  5150 solver.cpp:219] Iteration 0 (0 iter/s, 0.142435s/100 iters), loss = 2.31333
I0428 20:38:40.325695  5150 solver.cpp:238]     Train net output #0: loss = 2.31333 (* 1 = 2.31333 loss)
I0428 20:38:40.325706  5150 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:40.599606  5150 solver.cpp:219] Iteration 100 (365.092 iter/s, 0.273904s/100 iters), loss = 0.239429
I0428 20:38:40.599632  5150 solver.cpp:238]     Train net output #0: loss = 0.239429 (* 1 = 0.239429 loss)
I0428 20:38:40.599638  5150 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:40.872695  5150 solver.cpp:219] Iteration 200 (366.242 iter/s, 0.273043s/100 iters), loss = 0.181818
I0428 20:38:40.872721  5150 solver.cpp:238]     Train net output #0: loss = 0.181818 (* 1 = 0.181818 loss)
I0428 20:38:40.872728  5150 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:41.149019  5150 solver.cpp:219] Iteration 300 (361.955 iter/s, 0.276277s/100 iters), loss = 0.340657
I0428 20:38:41.149044  5150 solver.cpp:238]     Train net output #0: loss = 0.340657 (* 1 = 0.340657 loss)
I0428 20:38:41.149050  5150 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:41.426522  5150 solver.cpp:219] Iteration 400 (360.411 iter/s, 0.277461s/100 iters), loss = 0.0641691
I0428 20:38:41.426563  5150 solver.cpp:238]     Train net output #0: loss = 0.0641691 (* 1 = 0.0641691 loss)
I0428 20:38:41.426570  5150 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:41.702538  5150 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:41.832144  5157 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:41.835523  5150 solver.cpp:398]     Test net output #0: accuracy = 0.963
I0428 20:38:41.835544  5150 solver.cpp:398]     Test net output #1: loss = 0.119175 (* 1 = 0.119175 loss)
I0428 20:38:41.838306  5150 solver.cpp:219] Iteration 500 (242.875 iter/s, 0.411734s/100 iters), loss = 0.0701857
I0428 20:38:41.838330  5150 solver.cpp:238]     Train net output #0: loss = 0.0701856 (* 1 = 0.0701856 loss)
I0428 20:38:41.838369  5150 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:42.129323  5150 solver.cpp:219] Iteration 600 (343.672 iter/s, 0.290975s/100 iters), loss = 0.109388
I0428 20:38:42.129364  5150 solver.cpp:238]     Train net output #0: loss = 0.109388 (* 1 = 0.109388 loss)
I0428 20:38:42.129370  5150 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:42.416662  5150 solver.cpp:219] Iteration 700 (348.076 iter/s, 0.287294s/100 iters), loss = 0.0587785
I0428 20:38:42.416703  5150 solver.cpp:238]     Train net output #0: loss = 0.0587784 (* 1 = 0.0587784 loss)
I0428 20:38:42.416710  5150 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:42.698024  5150 solver.cpp:219] Iteration 800 (355.492 iter/s, 0.2813s/100 iters), loss = 0.219305
I0428 20:38:42.698071  5150 solver.cpp:238]     Train net output #0: loss = 0.219305 (* 1 = 0.219305 loss)
I0428 20:38:42.698078  5150 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:42.974086  5150 solver.cpp:219] Iteration 900 (362.323 iter/s, 0.275997s/100 iters), loss = 0.0810916
I0428 20:38:42.974128  5150 solver.cpp:238]     Train net output #0: loss = 0.0810915 (* 1 = 0.0810915 loss)
I0428 20:38:42.974134  5150 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:43.066802  5156 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:43.250828  5150 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:43.256672  5150 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:43.260226  5150 solver.cpp:311] Iteration 1000, loss = 0.0483836
I0428 20:38:43.260242  5150 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:43.389597  5157 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:43.392940  5150 solver.cpp:398]     Test net output #0: accuracy = 0.9793
I0428 20:38:43.392963  5150 solver.cpp:398]     Test net output #1: loss = 0.0652105 (* 1 = 0.0652105 loss)
I0428 20:38:43.392968  5150 solver.cpp:316] Optimization Done.
I0428 20:38:43.392971  5150 caffe.cpp:259] Optimization Done.
