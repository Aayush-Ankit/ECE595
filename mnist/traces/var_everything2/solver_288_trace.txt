I0428 19:38:54.454829 24164 caffe.cpp:218] Using GPUs 0
I0428 19:38:54.493373 24164 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:55.008853 24164 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test288.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:55.008998 24164 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test288.prototxt
I0428 19:38:55.009416 24164 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:55.009435 24164 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:55.009538 24164 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:55.009620 24164 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:55.009719 24164 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:55.009747 24164 net.cpp:86] Creating Layer mnist
I0428 19:38:55.009759 24164 net.cpp:382] mnist -> data
I0428 19:38:55.009783 24164 net.cpp:382] mnist -> label
I0428 19:38:55.010874 24164 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:55.013330 24164 net.cpp:124] Setting up mnist
I0428 19:38:55.013350 24164 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:55.013356 24164 net.cpp:131] Top shape: 64 (64)
I0428 19:38:55.013360 24164 net.cpp:139] Memory required for data: 200960
I0428 19:38:55.013366 24164 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:55.013417 24164 net.cpp:86] Creating Layer conv0
I0428 19:38:55.013439 24164 net.cpp:408] conv0 <- data
I0428 19:38:55.013455 24164 net.cpp:382] conv0 -> conv0
I0428 19:38:55.303159 24164 net.cpp:124] Setting up conv0
I0428 19:38:55.303191 24164 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:38:55.303197 24164 net.cpp:139] Memory required for data: 495872
I0428 19:38:55.303215 24164 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:55.303231 24164 net.cpp:86] Creating Layer pool0
I0428 19:38:55.303236 24164 net.cpp:408] pool0 <- conv0
I0428 19:38:55.303241 24164 net.cpp:382] pool0 -> pool0
I0428 19:38:55.303299 24164 net.cpp:124] Setting up pool0
I0428 19:38:55.303306 24164 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:38:55.303310 24164 net.cpp:139] Memory required for data: 569600
I0428 19:38:55.303314 24164 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:55.303326 24164 net.cpp:86] Creating Layer conv1
I0428 19:38:55.303330 24164 net.cpp:408] conv1 <- pool0
I0428 19:38:55.303336 24164 net.cpp:382] conv1 -> conv1
I0428 19:38:55.305620 24164 net.cpp:124] Setting up conv1
I0428 19:38:55.305637 24164 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:38:55.305642 24164 net.cpp:139] Memory required for data: 602368
I0428 19:38:55.305652 24164 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:55.305662 24164 net.cpp:86] Creating Layer pool1
I0428 19:38:55.305667 24164 net.cpp:408] pool1 <- conv1
I0428 19:38:55.305673 24164 net.cpp:382] pool1 -> pool1
I0428 19:38:55.305717 24164 net.cpp:124] Setting up pool1
I0428 19:38:55.305724 24164 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:38:55.305728 24164 net.cpp:139] Memory required for data: 610560
I0428 19:38:55.305732 24164 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:55.305745 24164 net.cpp:86] Creating Layer ip1
I0428 19:38:55.305749 24164 net.cpp:408] ip1 <- pool1
I0428 19:38:55.305755 24164 net.cpp:382] ip1 -> ip1
I0428 19:38:55.305869 24164 net.cpp:124] Setting up ip1
I0428 19:38:55.305879 24164 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:55.305882 24164 net.cpp:139] Memory required for data: 613120
I0428 19:38:55.305893 24164 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:55.305899 24164 net.cpp:86] Creating Layer relu1
I0428 19:38:55.305903 24164 net.cpp:408] relu1 <- ip1
I0428 19:38:55.305908 24164 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:55.306120 24164 net.cpp:124] Setting up relu1
I0428 19:38:55.306130 24164 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:55.306134 24164 net.cpp:139] Memory required for data: 615680
I0428 19:38:55.306138 24164 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:55.306145 24164 net.cpp:86] Creating Layer ip2
I0428 19:38:55.306149 24164 net.cpp:408] ip2 <- ip1
I0428 19:38:55.306155 24164 net.cpp:382] ip2 -> ip2
I0428 19:38:55.306267 24164 net.cpp:124] Setting up ip2
I0428 19:38:55.306274 24164 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:38:55.306278 24164 net.cpp:139] Memory required for data: 622080
I0428 19:38:55.306285 24164 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:55.306293 24164 net.cpp:86] Creating Layer relu2
I0428 19:38:55.306296 24164 net.cpp:408] relu2 <- ip2
I0428 19:38:55.306301 24164 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:55.307137 24164 net.cpp:124] Setting up relu2
I0428 19:38:55.307152 24164 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:38:55.307157 24164 net.cpp:139] Memory required for data: 628480
I0428 19:38:55.307160 24164 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:55.307169 24164 net.cpp:86] Creating Layer ip3
I0428 19:38:55.307173 24164 net.cpp:408] ip3 <- ip2
I0428 19:38:55.307180 24164 net.cpp:382] ip3 -> ip3
I0428 19:38:55.307294 24164 net.cpp:124] Setting up ip3
I0428 19:38:55.307304 24164 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:55.307307 24164 net.cpp:139] Memory required for data: 631040
I0428 19:38:55.307317 24164 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:55.307323 24164 net.cpp:86] Creating Layer relu3
I0428 19:38:55.307327 24164 net.cpp:408] relu3 <- ip3
I0428 19:38:55.307332 24164 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:55.307528 24164 net.cpp:124] Setting up relu3
I0428 19:38:55.307538 24164 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:55.307543 24164 net.cpp:139] Memory required for data: 633600
I0428 19:38:55.307546 24164 layer_factory.hpp:77] Creating layer loss
I0428 19:38:55.307554 24164 net.cpp:86] Creating Layer loss
I0428 19:38:55.307557 24164 net.cpp:408] loss <- ip3
I0428 19:38:55.307562 24164 net.cpp:408] loss <- label
I0428 19:38:55.307569 24164 net.cpp:382] loss -> loss
I0428 19:38:55.307591 24164 layer_factory.hpp:77] Creating layer loss
I0428 19:38:55.307853 24164 net.cpp:124] Setting up loss
I0428 19:38:55.307864 24164 net.cpp:131] Top shape: (1)
I0428 19:38:55.307868 24164 net.cpp:134]     with loss weight 1
I0428 19:38:55.307884 24164 net.cpp:139] Memory required for data: 633604
I0428 19:38:55.307888 24164 net.cpp:200] loss needs backward computation.
I0428 19:38:55.307901 24164 net.cpp:200] relu3 needs backward computation.
I0428 19:38:55.307904 24164 net.cpp:200] ip3 needs backward computation.
I0428 19:38:55.307909 24164 net.cpp:200] relu2 needs backward computation.
I0428 19:38:55.307912 24164 net.cpp:200] ip2 needs backward computation.
I0428 19:38:55.307915 24164 net.cpp:200] relu1 needs backward computation.
I0428 19:38:55.307920 24164 net.cpp:200] ip1 needs backward computation.
I0428 19:38:55.307924 24164 net.cpp:200] pool1 needs backward computation.
I0428 19:38:55.307927 24164 net.cpp:200] conv1 needs backward computation.
I0428 19:38:55.307931 24164 net.cpp:200] pool0 needs backward computation.
I0428 19:38:55.307935 24164 net.cpp:200] conv0 needs backward computation.
I0428 19:38:55.307940 24164 net.cpp:202] mnist does not need backward computation.
I0428 19:38:55.307943 24164 net.cpp:244] This network produces output loss
I0428 19:38:55.307955 24164 net.cpp:257] Network initialization done.
I0428 19:38:55.308334 24164 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test288.prototxt
I0428 19:38:55.308367 24164 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:55.308473 24164 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:55.308567 24164 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:55.308619 24164 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:55.308634 24164 net.cpp:86] Creating Layer mnist
I0428 19:38:55.308639 24164 net.cpp:382] mnist -> data
I0428 19:38:55.308647 24164 net.cpp:382] mnist -> label
I0428 19:38:55.308748 24164 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:55.311020 24164 net.cpp:124] Setting up mnist
I0428 19:38:55.311038 24164 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:55.311044 24164 net.cpp:131] Top shape: 100 (100)
I0428 19:38:55.311048 24164 net.cpp:139] Memory required for data: 314000
I0428 19:38:55.311053 24164 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:55.311065 24164 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:55.311069 24164 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:55.311075 24164 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:55.311084 24164 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:55.311141 24164 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:55.311148 24164 net.cpp:131] Top shape: 100 (100)
I0428 19:38:55.311153 24164 net.cpp:131] Top shape: 100 (100)
I0428 19:38:55.311156 24164 net.cpp:139] Memory required for data: 314800
I0428 19:38:55.311161 24164 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:55.311170 24164 net.cpp:86] Creating Layer conv0
I0428 19:38:55.311174 24164 net.cpp:408] conv0 <- data
I0428 19:38:55.311180 24164 net.cpp:382] conv0 -> conv0
I0428 19:38:55.313060 24164 net.cpp:124] Setting up conv0
I0428 19:38:55.313077 24164 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:38:55.313082 24164 net.cpp:139] Memory required for data: 775600
I0428 19:38:55.313093 24164 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:55.313102 24164 net.cpp:86] Creating Layer pool0
I0428 19:38:55.313105 24164 net.cpp:408] pool0 <- conv0
I0428 19:38:55.313112 24164 net.cpp:382] pool0 -> pool0
I0428 19:38:55.313154 24164 net.cpp:124] Setting up pool0
I0428 19:38:55.313161 24164 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:38:55.313165 24164 net.cpp:139] Memory required for data: 890800
I0428 19:38:55.313169 24164 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:55.313179 24164 net.cpp:86] Creating Layer conv1
I0428 19:38:55.313184 24164 net.cpp:408] conv1 <- pool0
I0428 19:38:55.313189 24164 net.cpp:382] conv1 -> conv1
I0428 19:38:55.315003 24164 net.cpp:124] Setting up conv1
I0428 19:38:55.315018 24164 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:38:55.315023 24164 net.cpp:139] Memory required for data: 942000
I0428 19:38:55.315033 24164 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:55.315042 24164 net.cpp:86] Creating Layer pool1
I0428 19:38:55.315045 24164 net.cpp:408] pool1 <- conv1
I0428 19:38:55.315052 24164 net.cpp:382] pool1 -> pool1
I0428 19:38:55.315096 24164 net.cpp:124] Setting up pool1
I0428 19:38:55.315102 24164 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:38:55.315112 24164 net.cpp:139] Memory required for data: 954800
I0428 19:38:55.315121 24164 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:55.315129 24164 net.cpp:86] Creating Layer ip1
I0428 19:38:55.315134 24164 net.cpp:408] ip1 <- pool1
I0428 19:38:55.315140 24164 net.cpp:382] ip1 -> ip1
I0428 19:38:55.315254 24164 net.cpp:124] Setting up ip1
I0428 19:38:55.315264 24164 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:55.315284 24164 net.cpp:139] Memory required for data: 958800
I0428 19:38:55.315294 24164 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:55.315301 24164 net.cpp:86] Creating Layer relu1
I0428 19:38:55.315305 24164 net.cpp:408] relu1 <- ip1
I0428 19:38:55.315311 24164 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:55.315495 24164 net.cpp:124] Setting up relu1
I0428 19:38:55.315505 24164 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:55.315510 24164 net.cpp:139] Memory required for data: 962800
I0428 19:38:55.315513 24164 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:55.315528 24164 net.cpp:86] Creating Layer ip2
I0428 19:38:55.315533 24164 net.cpp:408] ip2 <- ip1
I0428 19:38:55.315539 24164 net.cpp:382] ip2 -> ip2
I0428 19:38:55.315651 24164 net.cpp:124] Setting up ip2
I0428 19:38:55.315660 24164 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:38:55.315665 24164 net.cpp:139] Memory required for data: 972800
I0428 19:38:55.315671 24164 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:55.315676 24164 net.cpp:86] Creating Layer relu2
I0428 19:38:55.315680 24164 net.cpp:408] relu2 <- ip2
I0428 19:38:55.315685 24164 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:55.315954 24164 net.cpp:124] Setting up relu2
I0428 19:38:55.315964 24164 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:38:55.315974 24164 net.cpp:139] Memory required for data: 982800
I0428 19:38:55.315979 24164 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:55.315985 24164 net.cpp:86] Creating Layer ip3
I0428 19:38:55.315989 24164 net.cpp:408] ip3 <- ip2
I0428 19:38:55.315995 24164 net.cpp:382] ip3 -> ip3
I0428 19:38:55.316107 24164 net.cpp:124] Setting up ip3
I0428 19:38:55.316117 24164 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:55.316120 24164 net.cpp:139] Memory required for data: 986800
I0428 19:38:55.316129 24164 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:55.316135 24164 net.cpp:86] Creating Layer relu3
I0428 19:38:55.316138 24164 net.cpp:408] relu3 <- ip3
I0428 19:38:55.316144 24164 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:55.317065 24164 net.cpp:124] Setting up relu3
I0428 19:38:55.317078 24164 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:55.317083 24164 net.cpp:139] Memory required for data: 990800
I0428 19:38:55.317087 24164 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:38:55.317095 24164 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:38:55.317098 24164 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:38:55.317104 24164 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:38:55.317113 24164 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:38:55.317158 24164 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:38:55.317165 24164 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:55.317170 24164 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:55.317173 24164 net.cpp:139] Memory required for data: 998800
I0428 19:38:55.317178 24164 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:55.317183 24164 net.cpp:86] Creating Layer accuracy
I0428 19:38:55.317188 24164 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:38:55.317193 24164 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:55.317199 24164 net.cpp:382] accuracy -> accuracy
I0428 19:38:55.317207 24164 net.cpp:124] Setting up accuracy
I0428 19:38:55.317212 24164 net.cpp:131] Top shape: (1)
I0428 19:38:55.317215 24164 net.cpp:139] Memory required for data: 998804
I0428 19:38:55.317219 24164 layer_factory.hpp:77] Creating layer loss
I0428 19:38:55.317224 24164 net.cpp:86] Creating Layer loss
I0428 19:38:55.317229 24164 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:38:55.317234 24164 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:55.317239 24164 net.cpp:382] loss -> loss
I0428 19:38:55.317245 24164 layer_factory.hpp:77] Creating layer loss
I0428 19:38:55.317512 24164 net.cpp:124] Setting up loss
I0428 19:38:55.317524 24164 net.cpp:131] Top shape: (1)
I0428 19:38:55.317528 24164 net.cpp:134]     with loss weight 1
I0428 19:38:55.317538 24164 net.cpp:139] Memory required for data: 998808
I0428 19:38:55.317560 24164 net.cpp:200] loss needs backward computation.
I0428 19:38:55.317566 24164 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:55.317571 24164 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:38:55.317576 24164 net.cpp:200] relu3 needs backward computation.
I0428 19:38:55.317579 24164 net.cpp:200] ip3 needs backward computation.
I0428 19:38:55.317584 24164 net.cpp:200] relu2 needs backward computation.
I0428 19:38:55.317587 24164 net.cpp:200] ip2 needs backward computation.
I0428 19:38:55.317596 24164 net.cpp:200] relu1 needs backward computation.
I0428 19:38:55.317600 24164 net.cpp:200] ip1 needs backward computation.
I0428 19:38:55.317605 24164 net.cpp:200] pool1 needs backward computation.
I0428 19:38:55.317607 24164 net.cpp:200] conv1 needs backward computation.
I0428 19:38:55.317612 24164 net.cpp:200] pool0 needs backward computation.
I0428 19:38:55.317615 24164 net.cpp:200] conv0 needs backward computation.
I0428 19:38:55.317620 24164 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:55.317625 24164 net.cpp:202] mnist does not need backward computation.
I0428 19:38:55.317628 24164 net.cpp:244] This network produces output accuracy
I0428 19:38:55.317632 24164 net.cpp:244] This network produces output loss
I0428 19:38:55.317646 24164 net.cpp:257] Network initialization done.
I0428 19:38:55.317695 24164 solver.cpp:56] Solver scaffolding done.
I0428 19:38:55.318112 24164 caffe.cpp:248] Starting Optimization
I0428 19:38:55.318120 24164 solver.cpp:273] Solving LeNet
I0428 19:38:55.318123 24164 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:55.318984 24164 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:55.321765 24164 blocking_queue.cpp:49] Waiting for data
I0428 19:38:55.391940 24173 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:55.392393 24164 solver.cpp:398]     Test net output #0: accuracy = 0.05
I0428 19:38:55.392416 24164 solver.cpp:398]     Test net output #1: loss = 2.31683 (* 1 = 2.31683 loss)
I0428 19:38:55.394343 24164 solver.cpp:219] Iteration 0 (0 iter/s, 0.0761897s/100 iters), loss = 2.31272
I0428 19:38:55.394371 24164 solver.cpp:238]     Train net output #0: loss = 2.31272 (* 1 = 2.31272 loss)
I0428 19:38:55.394384 24164 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:55.469791 24164 solver.cpp:219] Iteration 100 (1326.08 iter/s, 0.0754104s/100 iters), loss = 1.05591
I0428 19:38:55.469820 24164 solver.cpp:238]     Train net output #0: loss = 1.05591 (* 1 = 1.05591 loss)
I0428 19:38:55.469828 24164 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:55.542022 24164 solver.cpp:219] Iteration 200 (1385.18 iter/s, 0.072193s/100 iters), loss = 0.816541
I0428 19:38:55.542059 24164 solver.cpp:238]     Train net output #0: loss = 0.816541 (* 1 = 0.816541 loss)
I0428 19:38:55.542073 24164 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:55.616871 24164 solver.cpp:219] Iteration 300 (1336.95 iter/s, 0.074797s/100 iters), loss = 0.362193
I0428 19:38:55.616897 24164 solver.cpp:238]     Train net output #0: loss = 0.362193 (* 1 = 0.362193 loss)
I0428 19:38:55.616904 24164 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:55.687124 24164 solver.cpp:219] Iteration 400 (1424.18 iter/s, 0.0702157s/100 iters), loss = 0.386891
I0428 19:38:55.687146 24164 solver.cpp:238]     Train net output #0: loss = 0.386891 (* 1 = 0.386891 loss)
I0428 19:38:55.687153 24164 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:55.752708 24164 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:55.827561 24173 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:55.828160 24164 solver.cpp:398]     Test net output #0: accuracy = 0.8621
I0428 19:38:55.828193 24164 solver.cpp:398]     Test net output #1: loss = 0.431865 (* 1 = 0.431865 loss)
I0428 19:38:55.829192 24164 solver.cpp:219] Iteration 500 (704.088 iter/s, 0.142028s/100 iters), loss = 0.483322
I0428 19:38:55.829228 24164 solver.cpp:238]     Train net output #0: loss = 0.483322 (* 1 = 0.483322 loss)
I0428 19:38:55.829259 24164 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:55.914053 24164 solver.cpp:219] Iteration 600 (1179.01 iter/s, 0.0848172s/100 iters), loss = 0.201551
I0428 19:38:55.914083 24164 solver.cpp:238]     Train net output #0: loss = 0.201551 (* 1 = 0.201551 loss)
I0428 19:38:55.914091 24164 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:55.988628 24164 solver.cpp:219] Iteration 700 (1341.65 iter/s, 0.0745349s/100 iters), loss = 0.348908
I0428 19:38:55.988658 24164 solver.cpp:238]     Train net output #0: loss = 0.348908 (* 1 = 0.348908 loss)
I0428 19:38:55.988667 24164 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:56.063109 24164 solver.cpp:219] Iteration 800 (1343.33 iter/s, 0.0744417s/100 iters), loss = 0.400544
I0428 19:38:56.063138 24164 solver.cpp:238]     Train net output #0: loss = 0.400544 (* 1 = 0.400544 loss)
I0428 19:38:56.063145 24164 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:38:56.135948 24164 solver.cpp:219] Iteration 900 (1373.59 iter/s, 0.0728021s/100 iters), loss = 0.297222
I0428 19:38:56.135972 24164 solver.cpp:238]     Train net output #0: loss = 0.297222 (* 1 = 0.297222 loss)
I0428 19:38:56.135979 24164 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:38:56.158527 24172 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:56.203894 24164 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:38:56.204538 24164 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:38:56.204993 24164 solver.cpp:311] Iteration 1000, loss = 0.134566
I0428 19:38:56.205008 24164 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:38:56.268302 24173 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:56.268900 24164 solver.cpp:398]     Test net output #0: accuracy = 0.9185
I0428 19:38:56.268936 24164 solver.cpp:398]     Test net output #1: loss = 0.267156 (* 1 = 0.267156 loss)
I0428 19:38:56.268947 24164 solver.cpp:316] Optimization Done.
I0428 19:38:56.268952 24164 caffe.cpp:259] Optimization Done.
