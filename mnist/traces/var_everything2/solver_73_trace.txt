I0428 19:29:53.513792 22142 caffe.cpp:218] Using GPUs 0
I0428 19:29:53.548380 22142 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:54.035984 22142 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test73.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:54.036157 22142 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test73.prototxt
I0428 19:29:54.036484 22142 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:54.036497 22142 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:54.036581 22142 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:54.036656 22142 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:54.036737 22142 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:54.036756 22142 net.cpp:86] Creating Layer mnist
I0428 19:29:54.036762 22142 net.cpp:382] mnist -> data
I0428 19:29:54.036782 22142 net.cpp:382] mnist -> label
I0428 19:29:54.037869 22142 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:54.040094 22142 net.cpp:124] Setting up mnist
I0428 19:29:54.040124 22142 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:54.040129 22142 net.cpp:131] Top shape: 64 (64)
I0428 19:29:54.040132 22142 net.cpp:139] Memory required for data: 200960
I0428 19:29:54.040138 22142 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:54.040184 22142 net.cpp:86] Creating Layer conv0
I0428 19:29:54.040189 22142 net.cpp:408] conv0 <- data
I0428 19:29:54.040199 22142 net.cpp:382] conv0 -> conv0
I0428 19:29:54.269456 22142 net.cpp:124] Setting up conv0
I0428 19:29:54.269485 22142 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:54.269490 22142 net.cpp:139] Memory required for data: 495872
I0428 19:29:54.269537 22142 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:54.269551 22142 net.cpp:86] Creating Layer pool0
I0428 19:29:54.269573 22142 net.cpp:408] pool0 <- conv0
I0428 19:29:54.269580 22142 net.cpp:382] pool0 -> pool0
I0428 19:29:54.269635 22142 net.cpp:124] Setting up pool0
I0428 19:29:54.269644 22142 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:54.269649 22142 net.cpp:139] Memory required for data: 569600
I0428 19:29:54.269651 22142 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:54.269659 22142 net.cpp:86] Creating Layer ip1
I0428 19:29:54.269662 22142 net.cpp:408] ip1 <- pool0
I0428 19:29:54.269667 22142 net.cpp:382] ip1 -> ip1
I0428 19:29:54.270699 22142 net.cpp:124] Setting up ip1
I0428 19:29:54.270727 22142 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:54.270730 22142 net.cpp:139] Memory required for data: 582400
I0428 19:29:54.270738 22142 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:54.270745 22142 net.cpp:86] Creating Layer relu1
I0428 19:29:54.270748 22142 net.cpp:408] relu1 <- ip1
I0428 19:29:54.270752 22142 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:54.270922 22142 net.cpp:124] Setting up relu1
I0428 19:29:54.270931 22142 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:54.270933 22142 net.cpp:139] Memory required for data: 595200
I0428 19:29:54.270937 22142 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:54.270943 22142 net.cpp:86] Creating Layer ip2
I0428 19:29:54.270946 22142 net.cpp:408] ip2 <- ip1
I0428 19:29:54.270951 22142 net.cpp:382] ip2 -> ip2
I0428 19:29:54.271847 22142 net.cpp:124] Setting up ip2
I0428 19:29:54.271857 22142 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:54.271877 22142 net.cpp:139] Memory required for data: 601600
I0428 19:29:54.271884 22142 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:54.271889 22142 net.cpp:86] Creating Layer relu2
I0428 19:29:54.271893 22142 net.cpp:408] relu2 <- ip2
I0428 19:29:54.271896 22142 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:54.272611 22142 net.cpp:124] Setting up relu2
I0428 19:29:54.272622 22142 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:54.272641 22142 net.cpp:139] Memory required for data: 608000
I0428 19:29:54.272644 22142 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:54.272650 22142 net.cpp:86] Creating Layer ip3
I0428 19:29:54.272653 22142 net.cpp:408] ip3 <- ip2
I0428 19:29:54.272658 22142 net.cpp:382] ip3 -> ip3
I0428 19:29:54.272749 22142 net.cpp:124] Setting up ip3
I0428 19:29:54.272756 22142 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:54.272758 22142 net.cpp:139] Memory required for data: 610560
I0428 19:29:54.272764 22142 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:54.272769 22142 net.cpp:86] Creating Layer relu3
I0428 19:29:54.272773 22142 net.cpp:408] relu3 <- ip3
I0428 19:29:54.272776 22142 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:54.272955 22142 net.cpp:124] Setting up relu3
I0428 19:29:54.272964 22142 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:54.272966 22142 net.cpp:139] Memory required for data: 613120
I0428 19:29:54.272969 22142 layer_factory.hpp:77] Creating layer loss
I0428 19:29:54.272975 22142 net.cpp:86] Creating Layer loss
I0428 19:29:54.272979 22142 net.cpp:408] loss <- ip3
I0428 19:29:54.272982 22142 net.cpp:408] loss <- label
I0428 19:29:54.272987 22142 net.cpp:382] loss -> loss
I0428 19:29:54.273005 22142 layer_factory.hpp:77] Creating layer loss
I0428 19:29:54.273268 22142 net.cpp:124] Setting up loss
I0428 19:29:54.273277 22142 net.cpp:131] Top shape: (1)
I0428 19:29:54.273280 22142 net.cpp:134]     with loss weight 1
I0428 19:29:54.273293 22142 net.cpp:139] Memory required for data: 613124
I0428 19:29:54.273298 22142 net.cpp:200] loss needs backward computation.
I0428 19:29:54.273300 22142 net.cpp:200] relu3 needs backward computation.
I0428 19:29:54.273303 22142 net.cpp:200] ip3 needs backward computation.
I0428 19:29:54.273306 22142 net.cpp:200] relu2 needs backward computation.
I0428 19:29:54.273308 22142 net.cpp:200] ip2 needs backward computation.
I0428 19:29:54.273311 22142 net.cpp:200] relu1 needs backward computation.
I0428 19:29:54.273314 22142 net.cpp:200] ip1 needs backward computation.
I0428 19:29:54.273326 22142 net.cpp:200] pool0 needs backward computation.
I0428 19:29:54.273329 22142 net.cpp:200] conv0 needs backward computation.
I0428 19:29:54.273332 22142 net.cpp:202] mnist does not need backward computation.
I0428 19:29:54.273335 22142 net.cpp:244] This network produces output loss
I0428 19:29:54.273344 22142 net.cpp:257] Network initialization done.
I0428 19:29:54.273636 22142 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test73.prototxt
I0428 19:29:54.273661 22142 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:54.273739 22142 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:54.273798 22142 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:54.273840 22142 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:54.273854 22142 net.cpp:86] Creating Layer mnist
I0428 19:29:54.273857 22142 net.cpp:382] mnist -> data
I0428 19:29:54.273864 22142 net.cpp:382] mnist -> label
I0428 19:29:54.273957 22142 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:54.275773 22142 net.cpp:124] Setting up mnist
I0428 19:29:54.275800 22142 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:54.275805 22142 net.cpp:131] Top shape: 100 (100)
I0428 19:29:54.275809 22142 net.cpp:139] Memory required for data: 314000
I0428 19:29:54.275811 22142 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:54.275821 22142 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:54.275825 22142 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:54.275830 22142 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:54.275835 22142 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:54.275871 22142 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:54.275876 22142 net.cpp:131] Top shape: 100 (100)
I0428 19:29:54.275878 22142 net.cpp:131] Top shape: 100 (100)
I0428 19:29:54.275882 22142 net.cpp:139] Memory required for data: 314800
I0428 19:29:54.275892 22142 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:54.275900 22142 net.cpp:86] Creating Layer conv0
I0428 19:29:54.275903 22142 net.cpp:408] conv0 <- data
I0428 19:29:54.275908 22142 net.cpp:382] conv0 -> conv0
I0428 19:29:54.277674 22142 net.cpp:124] Setting up conv0
I0428 19:29:54.277690 22142 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:54.277694 22142 net.cpp:139] Memory required for data: 775600
I0428 19:29:54.277704 22142 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:54.277712 22142 net.cpp:86] Creating Layer pool0
I0428 19:29:54.277716 22142 net.cpp:408] pool0 <- conv0
I0428 19:29:54.277722 22142 net.cpp:382] pool0 -> pool0
I0428 19:29:54.277762 22142 net.cpp:124] Setting up pool0
I0428 19:29:54.277768 22142 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:54.277771 22142 net.cpp:139] Memory required for data: 890800
I0428 19:29:54.277776 22142 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:54.277782 22142 net.cpp:86] Creating Layer ip1
I0428 19:29:54.277786 22142 net.cpp:408] ip1 <- pool0
I0428 19:29:54.277792 22142 net.cpp:382] ip1 -> ip1
I0428 19:29:54.277988 22142 net.cpp:124] Setting up ip1
I0428 19:29:54.277997 22142 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:54.278000 22142 net.cpp:139] Memory required for data: 910800
I0428 19:29:54.278008 22142 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:54.278012 22142 net.cpp:86] Creating Layer relu1
I0428 19:29:54.278017 22142 net.cpp:408] relu1 <- ip1
I0428 19:29:54.278022 22142 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:54.278200 22142 net.cpp:124] Setting up relu1
I0428 19:29:54.278209 22142 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:54.278213 22142 net.cpp:139] Memory required for data: 930800
I0428 19:29:54.278216 22142 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:54.278223 22142 net.cpp:86] Creating Layer ip2
I0428 19:29:54.278226 22142 net.cpp:408] ip2 <- ip1
I0428 19:29:54.278231 22142 net.cpp:382] ip2 -> ip2
I0428 19:29:54.278352 22142 net.cpp:124] Setting up ip2
I0428 19:29:54.278360 22142 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:54.278363 22142 net.cpp:139] Memory required for data: 940800
I0428 19:29:54.278370 22142 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:54.278378 22142 net.cpp:86] Creating Layer relu2
I0428 19:29:54.278380 22142 net.cpp:408] relu2 <- ip2
I0428 19:29:54.278384 22142 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:54.279263 22142 net.cpp:124] Setting up relu2
I0428 19:29:54.279276 22142 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:54.279280 22142 net.cpp:139] Memory required for data: 950800
I0428 19:29:54.279284 22142 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:54.279294 22142 net.cpp:86] Creating Layer ip3
I0428 19:29:54.279296 22142 net.cpp:408] ip3 <- ip2
I0428 19:29:54.279304 22142 net.cpp:382] ip3 -> ip3
I0428 19:29:54.279446 22142 net.cpp:124] Setting up ip3
I0428 19:29:54.279455 22142 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:54.279458 22142 net.cpp:139] Memory required for data: 954800
I0428 19:29:54.279464 22142 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:54.279469 22142 net.cpp:86] Creating Layer relu3
I0428 19:29:54.279474 22142 net.cpp:408] relu3 <- ip3
I0428 19:29:54.279479 22142 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:54.279677 22142 net.cpp:124] Setting up relu3
I0428 19:29:54.279686 22142 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:54.279690 22142 net.cpp:139] Memory required for data: 958800
I0428 19:29:54.279700 22142 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:54.279706 22142 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:54.279708 22142 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:54.279721 22142 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:54.279726 22142 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:54.279770 22142 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:54.279778 22142 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:54.279781 22142 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:54.279795 22142 net.cpp:139] Memory required for data: 966800
I0428 19:29:54.279798 22142 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:54.279804 22142 net.cpp:86] Creating Layer accuracy
I0428 19:29:54.279808 22142 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:54.279813 22142 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:54.279816 22142 net.cpp:382] accuracy -> accuracy
I0428 19:29:54.279825 22142 net.cpp:124] Setting up accuracy
I0428 19:29:54.279829 22142 net.cpp:131] Top shape: (1)
I0428 19:29:54.279832 22142 net.cpp:139] Memory required for data: 966804
I0428 19:29:54.279841 22142 layer_factory.hpp:77] Creating layer loss
I0428 19:29:54.279848 22142 net.cpp:86] Creating Layer loss
I0428 19:29:54.279851 22142 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:54.279856 22142 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:54.279865 22142 net.cpp:382] loss -> loss
I0428 19:29:54.279873 22142 layer_factory.hpp:77] Creating layer loss
I0428 19:29:54.280146 22142 net.cpp:124] Setting up loss
I0428 19:29:54.280155 22142 net.cpp:131] Top shape: (1)
I0428 19:29:54.280159 22142 net.cpp:134]     with loss weight 1
I0428 19:29:54.280166 22142 net.cpp:139] Memory required for data: 966808
I0428 19:29:54.280169 22142 net.cpp:200] loss needs backward computation.
I0428 19:29:54.280174 22142 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:54.280177 22142 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:54.280180 22142 net.cpp:200] relu3 needs backward computation.
I0428 19:29:54.280184 22142 net.cpp:200] ip3 needs backward computation.
I0428 19:29:54.280186 22142 net.cpp:200] relu2 needs backward computation.
I0428 19:29:54.280189 22142 net.cpp:200] ip2 needs backward computation.
I0428 19:29:54.280192 22142 net.cpp:200] relu1 needs backward computation.
I0428 19:29:54.280195 22142 net.cpp:200] ip1 needs backward computation.
I0428 19:29:54.280205 22142 net.cpp:200] pool0 needs backward computation.
I0428 19:29:54.280208 22142 net.cpp:200] conv0 needs backward computation.
I0428 19:29:54.280212 22142 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:54.280216 22142 net.cpp:202] mnist does not need backward computation.
I0428 19:29:54.280218 22142 net.cpp:244] This network produces output accuracy
I0428 19:29:54.280222 22142 net.cpp:244] This network produces output loss
I0428 19:29:54.280233 22142 net.cpp:257] Network initialization done.
I0428 19:29:54.280273 22142 solver.cpp:56] Solver scaffolding done.
I0428 19:29:54.280612 22142 caffe.cpp:248] Starting Optimization
I0428 19:29:54.280619 22142 solver.cpp:273] Solving LeNet
I0428 19:29:54.280622 22142 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:54.281539 22142 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:54.283609 22142 blocking_queue.cpp:49] Waiting for data
I0428 19:29:54.360450 22149 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:54.360908 22142 solver.cpp:398]     Test net output #0: accuracy = 0.0719
I0428 19:29:54.360925 22142 solver.cpp:398]     Test net output #1: loss = 2.32253 (* 1 = 2.32253 loss)
I0428 19:29:54.362521 22142 solver.cpp:219] Iteration 0 (0 iter/s, 0.0818688s/100 iters), loss = 2.318
I0428 19:29:54.362588 22142 solver.cpp:238]     Train net output #0: loss = 2.318 (* 1 = 2.318 loss)
I0428 19:29:54.362615 22142 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:54.421156 22142 solver.cpp:219] Iteration 100 (1707.69 iter/s, 0.0585587s/100 iters), loss = 0.876596
I0428 19:29:54.421196 22142 solver.cpp:238]     Train net output #0: loss = 0.876596 (* 1 = 0.876596 loss)
I0428 19:29:54.421202 22142 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:54.478314 22142 solver.cpp:219] Iteration 200 (1750.99 iter/s, 0.0571105s/100 iters), loss = 0.280466
I0428 19:29:54.478337 22142 solver.cpp:238]     Train net output #0: loss = 0.280466 (* 1 = 0.280466 loss)
I0428 19:29:54.478358 22142 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:54.533871 22142 solver.cpp:219] Iteration 300 (1800.94 iter/s, 0.0555265s/100 iters), loss = 0.299352
I0428 19:29:54.533905 22142 solver.cpp:238]     Train net output #0: loss = 0.299352 (* 1 = 0.299352 loss)
I0428 19:29:54.533929 22142 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:54.588752 22142 solver.cpp:219] Iteration 400 (1823.55 iter/s, 0.0548382s/100 iters), loss = 0.190075
I0428 19:29:54.588789 22142 solver.cpp:238]     Train net output #0: loss = 0.190075 (* 1 = 0.190075 loss)
I0428 19:29:54.588794 22142 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:54.646584 22142 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:54.701436 22149 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:54.701853 22142 solver.cpp:398]     Test net output #0: accuracy = 0.9382
I0428 19:29:54.701874 22142 solver.cpp:398]     Test net output #1: loss = 0.207703 (* 1 = 0.207703 loss)
I0428 19:29:54.702471 22142 solver.cpp:219] Iteration 500 (879.604 iter/s, 0.113688s/100 iters), loss = 0.265153
I0428 19:29:54.702493 22142 solver.cpp:238]     Train net output #0: loss = 0.265153 (* 1 = 0.265153 loss)
I0428 19:29:54.702500 22142 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:54.760406 22142 solver.cpp:219] Iteration 600 (1727.02 iter/s, 0.0579032s/100 iters), loss = 0.23337
I0428 19:29:54.760429 22142 solver.cpp:238]     Train net output #0: loss = 0.23337 (* 1 = 0.23337 loss)
I0428 19:29:54.760450 22142 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:54.817750 22142 solver.cpp:219] Iteration 700 (1744.8 iter/s, 0.0573133s/100 iters), loss = 0.349982
I0428 19:29:54.817775 22142 solver.cpp:238]     Train net output #0: loss = 0.349982 (* 1 = 0.349982 loss)
I0428 19:29:54.817780 22142 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:54.872293 22142 solver.cpp:219] Iteration 800 (1834.47 iter/s, 0.0545116s/100 iters), loss = 0.314586
I0428 19:29:54.872316 22142 solver.cpp:238]     Train net output #0: loss = 0.314586 (* 1 = 0.314586 loss)
I0428 19:29:54.872339 22142 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:54.927594 22142 solver.cpp:219] Iteration 900 (1809.32 iter/s, 0.0552694s/100 iters), loss = 0.194169
I0428 19:29:54.927615 22142 solver.cpp:238]     Train net output #0: loss = 0.194169 (* 1 = 0.194169 loss)
I0428 19:29:54.927639 22142 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:54.945963 22148 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:54.982264 22142 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:54.983006 22142 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:54.983523 22142 solver.cpp:311] Iteration 1000, loss = 0.272434
I0428 19:29:54.983541 22142 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:55.036310 22149 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:55.036835 22142 solver.cpp:398]     Test net output #0: accuracy = 0.9547
I0428 19:29:55.036870 22142 solver.cpp:398]     Test net output #1: loss = 0.141672 (* 1 = 0.141672 loss)
I0428 19:29:55.036890 22142 solver.cpp:316] Optimization Done.
I0428 19:29:55.036895 22142 caffe.cpp:259] Optimization Done.
