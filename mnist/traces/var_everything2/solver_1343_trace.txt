I0428 20:19:30.497354  1376 caffe.cpp:218] Using GPUs 0
I0428 20:19:30.534132  1376 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:31.045845  1376 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1343.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:31.045984  1376 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1343.prototxt
I0428 20:19:31.046387  1376 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:31.046406  1376 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:31.046502  1376 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:31.046576  1376 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:31.046680  1376 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:31.046705  1376 net.cpp:86] Creating Layer mnist
I0428 20:19:31.046712  1376 net.cpp:382] mnist -> data
I0428 20:19:31.046735  1376 net.cpp:382] mnist -> label
I0428 20:19:31.047828  1376 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:31.050272  1376 net.cpp:124] Setting up mnist
I0428 20:19:31.050290  1376 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:31.050297  1376 net.cpp:131] Top shape: 64 (64)
I0428 20:19:31.050300  1376 net.cpp:139] Memory required for data: 200960
I0428 20:19:31.050307  1376 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:31.050323  1376 net.cpp:86] Creating Layer conv0
I0428 20:19:31.050344  1376 net.cpp:408] conv0 <- data
I0428 20:19:31.050356  1376 net.cpp:382] conv0 -> conv0
I0428 20:19:31.338759  1376 net.cpp:124] Setting up conv0
I0428 20:19:31.338786  1376 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:31.338790  1376 net.cpp:139] Memory required for data: 7573760
I0428 20:19:31.338806  1376 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:31.338821  1376 net.cpp:86] Creating Layer pool0
I0428 20:19:31.338825  1376 net.cpp:408] pool0 <- conv0
I0428 20:19:31.338830  1376 net.cpp:382] pool0 -> pool0
I0428 20:19:31.338878  1376 net.cpp:124] Setting up pool0
I0428 20:19:31.338884  1376 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:31.338887  1376 net.cpp:139] Memory required for data: 9416960
I0428 20:19:31.338891  1376 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:31.338901  1376 net.cpp:86] Creating Layer conv1
I0428 20:19:31.338904  1376 net.cpp:408] conv1 <- pool0
I0428 20:19:31.338909  1376 net.cpp:382] conv1 -> conv1
I0428 20:19:31.340947  1376 net.cpp:124] Setting up conv1
I0428 20:19:31.340977  1376 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:31.340981  1376 net.cpp:139] Memory required for data: 9826560
I0428 20:19:31.340991  1376 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:31.340999  1376 net.cpp:86] Creating Layer pool1
I0428 20:19:31.341002  1376 net.cpp:408] pool1 <- conv1
I0428 20:19:31.341008  1376 net.cpp:382] pool1 -> pool1
I0428 20:19:31.341047  1376 net.cpp:124] Setting up pool1
I0428 20:19:31.341051  1376 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:31.341054  1376 net.cpp:139] Memory required for data: 9928960
I0428 20:19:31.341058  1376 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:31.341064  1376 net.cpp:86] Creating Layer ip1
I0428 20:19:31.341068  1376 net.cpp:408] ip1 <- pool1
I0428 20:19:31.341073  1376 net.cpp:382] ip1 -> ip1
I0428 20:19:31.341238  1376 net.cpp:124] Setting up ip1
I0428 20:19:31.341248  1376 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:31.341250  1376 net.cpp:139] Memory required for data: 9931520
I0428 20:19:31.341258  1376 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:31.341264  1376 net.cpp:86] Creating Layer relu1
I0428 20:19:31.341266  1376 net.cpp:408] relu1 <- ip1
I0428 20:19:31.341270  1376 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:31.341434  1376 net.cpp:124] Setting up relu1
I0428 20:19:31.341444  1376 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:31.341446  1376 net.cpp:139] Memory required for data: 9934080
I0428 20:19:31.341449  1376 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:31.341455  1376 net.cpp:86] Creating Layer ip2
I0428 20:19:31.341459  1376 net.cpp:408] ip2 <- ip1
I0428 20:19:31.341464  1376 net.cpp:382] ip2 -> ip2
I0428 20:19:31.341557  1376 net.cpp:124] Setting up ip2
I0428 20:19:31.341563  1376 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:31.341567  1376 net.cpp:139] Memory required for data: 9940480
I0428 20:19:31.341572  1376 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:31.341578  1376 net.cpp:86] Creating Layer relu2
I0428 20:19:31.341581  1376 net.cpp:408] relu2 <- ip2
I0428 20:19:31.341585  1376 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:31.342309  1376 net.cpp:124] Setting up relu2
I0428 20:19:31.342321  1376 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:31.342325  1376 net.cpp:139] Memory required for data: 9946880
I0428 20:19:31.342329  1376 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:31.342335  1376 net.cpp:86] Creating Layer ip3
I0428 20:19:31.342339  1376 net.cpp:408] ip3 <- ip2
I0428 20:19:31.342344  1376 net.cpp:382] ip3 -> ip3
I0428 20:19:31.342443  1376 net.cpp:124] Setting up ip3
I0428 20:19:31.342450  1376 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:31.342454  1376 net.cpp:139] Memory required for data: 9949440
I0428 20:19:31.342463  1376 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:31.342468  1376 net.cpp:86] Creating Layer relu3
I0428 20:19:31.342470  1376 net.cpp:408] relu3 <- ip3
I0428 20:19:31.342474  1376 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:31.342643  1376 net.cpp:124] Setting up relu3
I0428 20:19:31.342650  1376 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:31.342654  1376 net.cpp:139] Memory required for data: 9952000
I0428 20:19:31.342658  1376 layer_factory.hpp:77] Creating layer loss
I0428 20:19:31.342664  1376 net.cpp:86] Creating Layer loss
I0428 20:19:31.342666  1376 net.cpp:408] loss <- ip3
I0428 20:19:31.342670  1376 net.cpp:408] loss <- label
I0428 20:19:31.342675  1376 net.cpp:382] loss -> loss
I0428 20:19:31.342692  1376 layer_factory.hpp:77] Creating layer loss
I0428 20:19:31.342917  1376 net.cpp:124] Setting up loss
I0428 20:19:31.342926  1376 net.cpp:131] Top shape: (1)
I0428 20:19:31.342931  1376 net.cpp:134]     with loss weight 1
I0428 20:19:31.342943  1376 net.cpp:139] Memory required for data: 9952004
I0428 20:19:31.342948  1376 net.cpp:200] loss needs backward computation.
I0428 20:19:31.342952  1376 net.cpp:200] relu3 needs backward computation.
I0428 20:19:31.342954  1376 net.cpp:200] ip3 needs backward computation.
I0428 20:19:31.342957  1376 net.cpp:200] relu2 needs backward computation.
I0428 20:19:31.342960  1376 net.cpp:200] ip2 needs backward computation.
I0428 20:19:31.342963  1376 net.cpp:200] relu1 needs backward computation.
I0428 20:19:31.342967  1376 net.cpp:200] ip1 needs backward computation.
I0428 20:19:31.342969  1376 net.cpp:200] pool1 needs backward computation.
I0428 20:19:31.342972  1376 net.cpp:200] conv1 needs backward computation.
I0428 20:19:31.342975  1376 net.cpp:200] pool0 needs backward computation.
I0428 20:19:31.342978  1376 net.cpp:200] conv0 needs backward computation.
I0428 20:19:31.342983  1376 net.cpp:202] mnist does not need backward computation.
I0428 20:19:31.342985  1376 net.cpp:244] This network produces output loss
I0428 20:19:31.342994  1376 net.cpp:257] Network initialization done.
I0428 20:19:31.343318  1376 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1343.prototxt
I0428 20:19:31.343346  1376 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:31.343437  1376 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:31.343518  1376 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:31.343560  1376 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:31.343575  1376 net.cpp:86] Creating Layer mnist
I0428 20:19:31.343580  1376 net.cpp:382] mnist -> data
I0428 20:19:31.343586  1376 net.cpp:382] mnist -> label
I0428 20:19:31.343673  1376 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:31.345584  1376 net.cpp:124] Setting up mnist
I0428 20:19:31.345614  1376 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:31.345620  1376 net.cpp:131] Top shape: 100 (100)
I0428 20:19:31.345623  1376 net.cpp:139] Memory required for data: 314000
I0428 20:19:31.345628  1376 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:31.345634  1376 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:31.345638  1376 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:31.345643  1376 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:31.345649  1376 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:31.345700  1376 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:31.345705  1376 net.cpp:131] Top shape: 100 (100)
I0428 20:19:31.345710  1376 net.cpp:131] Top shape: 100 (100)
I0428 20:19:31.345712  1376 net.cpp:139] Memory required for data: 314800
I0428 20:19:31.345715  1376 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:31.345723  1376 net.cpp:86] Creating Layer conv0
I0428 20:19:31.345726  1376 net.cpp:408] conv0 <- data
I0428 20:19:31.345731  1376 net.cpp:382] conv0 -> conv0
I0428 20:19:31.347399  1376 net.cpp:124] Setting up conv0
I0428 20:19:31.347412  1376 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:31.347416  1376 net.cpp:139] Memory required for data: 11834800
I0428 20:19:31.347425  1376 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:31.347431  1376 net.cpp:86] Creating Layer pool0
I0428 20:19:31.347435  1376 net.cpp:408] pool0 <- conv0
I0428 20:19:31.347440  1376 net.cpp:382] pool0 -> pool0
I0428 20:19:31.347474  1376 net.cpp:124] Setting up pool0
I0428 20:19:31.347479  1376 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:31.347482  1376 net.cpp:139] Memory required for data: 14714800
I0428 20:19:31.347486  1376 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:31.347493  1376 net.cpp:86] Creating Layer conv1
I0428 20:19:31.347496  1376 net.cpp:408] conv1 <- pool0
I0428 20:19:31.347501  1376 net.cpp:382] conv1 -> conv1
I0428 20:19:31.349143  1376 net.cpp:124] Setting up conv1
I0428 20:19:31.349185  1376 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:31.349189  1376 net.cpp:139] Memory required for data: 15354800
I0428 20:19:31.349198  1376 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:31.349205  1376 net.cpp:86] Creating Layer pool1
I0428 20:19:31.349207  1376 net.cpp:408] pool1 <- conv1
I0428 20:19:31.349213  1376 net.cpp:382] pool1 -> pool1
I0428 20:19:31.349248  1376 net.cpp:124] Setting up pool1
I0428 20:19:31.349254  1376 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:31.349257  1376 net.cpp:139] Memory required for data: 15514800
I0428 20:19:31.349261  1376 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:31.349265  1376 net.cpp:86] Creating Layer ip1
I0428 20:19:31.349275  1376 net.cpp:408] ip1 <- pool1
I0428 20:19:31.349280  1376 net.cpp:382] ip1 -> ip1
I0428 20:19:31.349438  1376 net.cpp:124] Setting up ip1
I0428 20:19:31.349447  1376 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:31.349462  1376 net.cpp:139] Memory required for data: 15518800
I0428 20:19:31.349469  1376 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:31.349483  1376 net.cpp:86] Creating Layer relu1
I0428 20:19:31.349485  1376 net.cpp:408] relu1 <- ip1
I0428 20:19:31.349490  1376 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:31.349668  1376 net.cpp:124] Setting up relu1
I0428 20:19:31.349675  1376 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:31.349679  1376 net.cpp:139] Memory required for data: 15522800
I0428 20:19:31.349683  1376 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:31.349689  1376 net.cpp:86] Creating Layer ip2
I0428 20:19:31.349692  1376 net.cpp:408] ip2 <- ip1
I0428 20:19:31.349697  1376 net.cpp:382] ip2 -> ip2
I0428 20:19:31.349804  1376 net.cpp:124] Setting up ip2
I0428 20:19:31.349812  1376 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:31.349814  1376 net.cpp:139] Memory required for data: 15532800
I0428 20:19:31.349819  1376 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:31.349824  1376 net.cpp:86] Creating Layer relu2
I0428 20:19:31.349828  1376 net.cpp:408] relu2 <- ip2
I0428 20:19:31.349831  1376 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:31.349990  1376 net.cpp:124] Setting up relu2
I0428 20:19:31.349998  1376 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:31.350002  1376 net.cpp:139] Memory required for data: 15542800
I0428 20:19:31.350004  1376 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:31.350009  1376 net.cpp:86] Creating Layer ip3
I0428 20:19:31.350013  1376 net.cpp:408] ip3 <- ip2
I0428 20:19:31.350018  1376 net.cpp:382] ip3 -> ip3
I0428 20:19:31.350109  1376 net.cpp:124] Setting up ip3
I0428 20:19:31.350117  1376 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:31.350121  1376 net.cpp:139] Memory required for data: 15546800
I0428 20:19:31.350128  1376 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:31.350133  1376 net.cpp:86] Creating Layer relu3
I0428 20:19:31.350143  1376 net.cpp:408] relu3 <- ip3
I0428 20:19:31.350147  1376 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:31.350978  1376 net.cpp:124] Setting up relu3
I0428 20:19:31.350989  1376 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:31.350993  1376 net.cpp:139] Memory required for data: 15550800
I0428 20:19:31.350996  1376 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:31.351002  1376 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:31.351006  1376 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:31.351011  1376 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:31.351032  1376 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:31.351069  1376 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:31.351074  1376 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:31.351078  1376 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:31.351081  1376 net.cpp:139] Memory required for data: 15558800
I0428 20:19:31.351084  1376 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:31.351089  1376 net.cpp:86] Creating Layer accuracy
I0428 20:19:31.351114  1376 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:31.351119  1376 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:31.351122  1376 net.cpp:382] accuracy -> accuracy
I0428 20:19:31.351130  1376 net.cpp:124] Setting up accuracy
I0428 20:19:31.351133  1376 net.cpp:131] Top shape: (1)
I0428 20:19:31.351136  1376 net.cpp:139] Memory required for data: 15558804
I0428 20:19:31.351140  1376 layer_factory.hpp:77] Creating layer loss
I0428 20:19:31.351143  1376 net.cpp:86] Creating Layer loss
I0428 20:19:31.351152  1376 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:31.351156  1376 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:31.351161  1376 net.cpp:382] loss -> loss
I0428 20:19:31.351173  1376 layer_factory.hpp:77] Creating layer loss
I0428 20:19:31.351393  1376 net.cpp:124] Setting up loss
I0428 20:19:31.351402  1376 net.cpp:131] Top shape: (1)
I0428 20:19:31.351407  1376 net.cpp:134]     with loss weight 1
I0428 20:19:31.351423  1376 net.cpp:139] Memory required for data: 15558808
I0428 20:19:31.351425  1376 net.cpp:200] loss needs backward computation.
I0428 20:19:31.351429  1376 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:31.351433  1376 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:31.351449  1376 net.cpp:200] relu3 needs backward computation.
I0428 20:19:31.351451  1376 net.cpp:200] ip3 needs backward computation.
I0428 20:19:31.351454  1376 net.cpp:200] relu2 needs backward computation.
I0428 20:19:31.351457  1376 net.cpp:200] ip2 needs backward computation.
I0428 20:19:31.351460  1376 net.cpp:200] relu1 needs backward computation.
I0428 20:19:31.351464  1376 net.cpp:200] ip1 needs backward computation.
I0428 20:19:31.351466  1376 net.cpp:200] pool1 needs backward computation.
I0428 20:19:31.351469  1376 net.cpp:200] conv1 needs backward computation.
I0428 20:19:31.351472  1376 net.cpp:200] pool0 needs backward computation.
I0428 20:19:31.351475  1376 net.cpp:200] conv0 needs backward computation.
I0428 20:19:31.351485  1376 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:31.351488  1376 net.cpp:202] mnist does not need backward computation.
I0428 20:19:31.351496  1376 net.cpp:244] This network produces output accuracy
I0428 20:19:31.351500  1376 net.cpp:244] This network produces output loss
I0428 20:19:31.351510  1376 net.cpp:257] Network initialization done.
I0428 20:19:31.351550  1376 solver.cpp:56] Solver scaffolding done.
I0428 20:19:31.351867  1376 caffe.cpp:248] Starting Optimization
I0428 20:19:31.351874  1376 solver.cpp:273] Solving LeNet
I0428 20:19:31.351877  1376 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:31.352043  1376 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:31.358403  1376 blocking_queue.cpp:49] Waiting for data
I0428 20:19:31.431831  1383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:31.432606  1376 solver.cpp:398]     Test net output #0: accuracy = 0.0978
I0428 20:19:31.432623  1376 solver.cpp:398]     Test net output #1: loss = 2.32349 (* 1 = 2.32349 loss)
I0428 20:19:31.437088  1376 solver.cpp:219] Iteration 0 (0 iter/s, 0.0851865s/100 iters), loss = 2.31741
I0428 20:19:31.437111  1376 solver.cpp:238]     Train net output #0: loss = 2.31741 (* 1 = 2.31741 loss)
I0428 20:19:31.437139  1376 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:31.580133  1376 solver.cpp:219] Iteration 100 (699.278 iter/s, 0.143005s/100 iters), loss = 1.37398
I0428 20:19:31.580178  1376 solver.cpp:238]     Train net output #0: loss = 1.37398 (* 1 = 1.37398 loss)
I0428 20:19:31.580193  1376 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:31.731464  1376 solver.cpp:219] Iteration 200 (661.05 iter/s, 0.151274s/100 iters), loss = 0.913323
I0428 20:19:31.731505  1376 solver.cpp:238]     Train net output #0: loss = 0.913323 (* 1 = 0.913323 loss)
I0428 20:19:31.731515  1376 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:31.880102  1376 solver.cpp:219] Iteration 300 (673.018 iter/s, 0.148584s/100 iters), loss = 0.60554
I0428 20:19:31.880138  1376 solver.cpp:238]     Train net output #0: loss = 0.60554 (* 1 = 0.60554 loss)
I0428 20:19:31.880148  1376 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:32.032941  1376 solver.cpp:219] Iteration 400 (654.498 iter/s, 0.152789s/100 iters), loss = 0.293711
I0428 20:19:32.032984  1376 solver.cpp:238]     Train net output #0: loss = 0.293711 (* 1 = 0.293711 loss)
I0428 20:19:32.032995  1376 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:32.185310  1376 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:32.265947  1383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:32.266829  1376 solver.cpp:398]     Test net output #0: accuracy = 0.933
I0428 20:19:32.266856  1376 solver.cpp:398]     Test net output #1: loss = 0.228829 (* 1 = 0.228829 loss)
I0428 20:19:32.268254  1376 solver.cpp:219] Iteration 500 (425.071 iter/s, 0.235255s/100 iters), loss = 0.16106
I0428 20:19:32.268301  1376 solver.cpp:238]     Train net output #0: loss = 0.16106 (* 1 = 0.16106 loss)
I0428 20:19:32.268311  1376 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:32.410584  1376 solver.cpp:219] Iteration 600 (702.885 iter/s, 0.142271s/100 iters), loss = 0.113981
I0428 20:19:32.410615  1376 solver.cpp:238]     Train net output #0: loss = 0.113981 (* 1 = 0.113981 loss)
I0428 20:19:32.410624  1376 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:32.553648  1376 solver.cpp:219] Iteration 700 (699.208 iter/s, 0.143019s/100 iters), loss = 0.169848
I0428 20:19:32.553685  1376 solver.cpp:238]     Train net output #0: loss = 0.169848 (* 1 = 0.169848 loss)
I0428 20:19:32.553695  1376 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:32.693632  1376 solver.cpp:219] Iteration 800 (714.619 iter/s, 0.139935s/100 iters), loss = 0.376825
I0428 20:19:32.693665  1376 solver.cpp:238]     Train net output #0: loss = 0.376825 (* 1 = 0.376825 loss)
I0428 20:19:32.693672  1376 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:32.836411  1376 solver.cpp:219] Iteration 900 (700.607 iter/s, 0.142733s/100 iters), loss = 0.183577
I0428 20:19:32.836447  1376 solver.cpp:238]     Train net output #0: loss = 0.183577 (* 1 = 0.183577 loss)
I0428 20:19:32.836457  1376 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:32.883999  1382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:32.975888  1376 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:32.977461  1376 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:32.978488  1376 solver.cpp:311] Iteration 1000, loss = 0.115269
I0428 20:19:32.978508  1376 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:33.048221  1383 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:33.050559  1376 solver.cpp:398]     Test net output #0: accuracy = 0.9679
I0428 20:19:33.050581  1376 solver.cpp:398]     Test net output #1: loss = 0.100852 (* 1 = 0.100852 loss)
I0428 20:19:33.050587  1376 solver.cpp:316] Optimization Done.
I0428 20:19:33.050590  1376 caffe.cpp:259] Optimization Done.
