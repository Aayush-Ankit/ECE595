I0428 19:48:43.682593 26556 caffe.cpp:218] Using GPUs 0
I0428 19:48:43.722487 26556 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:44.168803 26556 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test553.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:44.168948 26556 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test553.prototxt
I0428 19:48:44.169258 26556 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:44.169272 26556 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:44.169340 26556 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:48:44.169394 26556 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:44.169492 26556 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:44.169510 26556 net.cpp:86] Creating Layer mnist
I0428 19:48:44.169517 26556 net.cpp:382] mnist -> data
I0428 19:48:44.169535 26556 net.cpp:382] mnist -> label
I0428 19:48:44.170522 26556 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:44.172703 26556 net.cpp:124] Setting up mnist
I0428 19:48:44.172731 26556 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:44.172736 26556 net.cpp:131] Top shape: 64 (64)
I0428 19:48:44.172740 26556 net.cpp:139] Memory required for data: 200960
I0428 19:48:44.172746 26556 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:44.172775 26556 net.cpp:86] Creating Layer conv0
I0428 19:48:44.172778 26556 net.cpp:408] conv0 <- data
I0428 19:48:44.172787 26556 net.cpp:382] conv0 -> conv0
I0428 19:48:44.404203 26556 net.cpp:124] Setting up conv0
I0428 19:48:44.404244 26556 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:44.404249 26556 net.cpp:139] Memory required for data: 938240
I0428 19:48:44.404281 26556 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:44.404309 26556 net.cpp:86] Creating Layer pool0
I0428 19:48:44.404314 26556 net.cpp:408] pool0 <- conv0
I0428 19:48:44.404319 26556 net.cpp:382] pool0 -> pool0
I0428 19:48:44.404364 26556 net.cpp:124] Setting up pool0
I0428 19:48:44.404381 26556 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:44.404383 26556 net.cpp:139] Memory required for data: 1122560
I0428 19:48:44.404386 26556 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:44.404397 26556 net.cpp:86] Creating Layer conv1
I0428 19:48:44.404399 26556 net.cpp:408] conv1 <- pool0
I0428 19:48:44.404404 26556 net.cpp:382] conv1 -> conv1
I0428 19:48:44.406275 26556 net.cpp:124] Setting up conv1
I0428 19:48:44.406304 26556 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:48:44.406308 26556 net.cpp:139] Memory required for data: 1204480
I0428 19:48:44.406317 26556 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:44.406324 26556 net.cpp:86] Creating Layer pool1
I0428 19:48:44.406328 26556 net.cpp:408] pool1 <- conv1
I0428 19:48:44.406332 26556 net.cpp:382] pool1 -> pool1
I0428 19:48:44.406369 26556 net.cpp:124] Setting up pool1
I0428 19:48:44.406375 26556 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:48:44.406378 26556 net.cpp:139] Memory required for data: 1224960
I0428 19:48:44.406381 26556 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:44.406388 26556 net.cpp:86] Creating Layer ip1
I0428 19:48:44.406391 26556 net.cpp:408] ip1 <- pool1
I0428 19:48:44.406395 26556 net.cpp:382] ip1 -> ip1
I0428 19:48:44.407374 26556 net.cpp:124] Setting up ip1
I0428 19:48:44.407402 26556 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:44.407407 26556 net.cpp:139] Memory required for data: 1231360
I0428 19:48:44.407415 26556 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:44.407421 26556 net.cpp:86] Creating Layer relu1
I0428 19:48:44.407425 26556 net.cpp:408] relu1 <- ip1
I0428 19:48:44.407429 26556 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:44.407625 26556 net.cpp:124] Setting up relu1
I0428 19:48:44.407634 26556 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:44.407637 26556 net.cpp:139] Memory required for data: 1237760
I0428 19:48:44.407640 26556 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:44.407647 26556 net.cpp:86] Creating Layer ip2
I0428 19:48:44.407650 26556 net.cpp:408] ip2 <- ip1
I0428 19:48:44.407655 26556 net.cpp:382] ip2 -> ip2
I0428 19:48:44.407745 26556 net.cpp:124] Setting up ip2
I0428 19:48:44.407752 26556 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:44.407755 26556 net.cpp:139] Memory required for data: 1240320
I0428 19:48:44.407760 26556 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:44.407766 26556 net.cpp:86] Creating Layer relu2
I0428 19:48:44.407769 26556 net.cpp:408] relu2 <- ip2
I0428 19:48:44.407788 26556 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:44.408550 26556 net.cpp:124] Setting up relu2
I0428 19:48:44.408587 26556 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:44.408591 26556 net.cpp:139] Memory required for data: 1242880
I0428 19:48:44.408609 26556 layer_factory.hpp:77] Creating layer loss
I0428 19:48:44.408615 26556 net.cpp:86] Creating Layer loss
I0428 19:48:44.408618 26556 net.cpp:408] loss <- ip2
I0428 19:48:44.408622 26556 net.cpp:408] loss <- label
I0428 19:48:44.408628 26556 net.cpp:382] loss -> loss
I0428 19:48:44.408643 26556 layer_factory.hpp:77] Creating layer loss
I0428 19:48:44.408892 26556 net.cpp:124] Setting up loss
I0428 19:48:44.408902 26556 net.cpp:131] Top shape: (1)
I0428 19:48:44.408906 26556 net.cpp:134]     with loss weight 1
I0428 19:48:44.408936 26556 net.cpp:139] Memory required for data: 1242884
I0428 19:48:44.408939 26556 net.cpp:200] loss needs backward computation.
I0428 19:48:44.408943 26556 net.cpp:200] relu2 needs backward computation.
I0428 19:48:44.408962 26556 net.cpp:200] ip2 needs backward computation.
I0428 19:48:44.408965 26556 net.cpp:200] relu1 needs backward computation.
I0428 19:48:44.408968 26556 net.cpp:200] ip1 needs backward computation.
I0428 19:48:44.408972 26556 net.cpp:200] pool1 needs backward computation.
I0428 19:48:44.408987 26556 net.cpp:200] conv1 needs backward computation.
I0428 19:48:44.408990 26556 net.cpp:200] pool0 needs backward computation.
I0428 19:48:44.408994 26556 net.cpp:200] conv0 needs backward computation.
I0428 19:48:44.408998 26556 net.cpp:202] mnist does not need backward computation.
I0428 19:48:44.409000 26556 net.cpp:244] This network produces output loss
I0428 19:48:44.409009 26556 net.cpp:257] Network initialization done.
I0428 19:48:44.409351 26556 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test553.prototxt
I0428 19:48:44.409392 26556 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:44.409476 26556 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:48:44.409540 26556 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:44.409585 26556 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:44.409600 26556 net.cpp:86] Creating Layer mnist
I0428 19:48:44.409603 26556 net.cpp:382] mnist -> data
I0428 19:48:44.409611 26556 net.cpp:382] mnist -> label
I0428 19:48:44.409723 26556 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:44.411758 26556 net.cpp:124] Setting up mnist
I0428 19:48:44.411787 26556 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:44.411792 26556 net.cpp:131] Top shape: 100 (100)
I0428 19:48:44.411794 26556 net.cpp:139] Memory required for data: 314000
I0428 19:48:44.411798 26556 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:44.411805 26556 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:44.411808 26556 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:44.411813 26556 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:44.411834 26556 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:44.411882 26556 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:44.411898 26556 net.cpp:131] Top shape: 100 (100)
I0428 19:48:44.411901 26556 net.cpp:131] Top shape: 100 (100)
I0428 19:48:44.411905 26556 net.cpp:139] Memory required for data: 314800
I0428 19:48:44.411907 26556 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:44.411916 26556 net.cpp:86] Creating Layer conv0
I0428 19:48:44.411918 26556 net.cpp:408] conv0 <- data
I0428 19:48:44.411924 26556 net.cpp:382] conv0 -> conv0
I0428 19:48:44.413679 26556 net.cpp:124] Setting up conv0
I0428 19:48:44.413692 26556 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:44.413697 26556 net.cpp:139] Memory required for data: 1466800
I0428 19:48:44.413705 26556 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:44.413712 26556 net.cpp:86] Creating Layer pool0
I0428 19:48:44.413725 26556 net.cpp:408] pool0 <- conv0
I0428 19:48:44.413729 26556 net.cpp:382] pool0 -> pool0
I0428 19:48:44.413763 26556 net.cpp:124] Setting up pool0
I0428 19:48:44.413769 26556 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:44.413771 26556 net.cpp:139] Memory required for data: 1754800
I0428 19:48:44.413774 26556 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:44.413782 26556 net.cpp:86] Creating Layer conv1
I0428 19:48:44.413785 26556 net.cpp:408] conv1 <- pool0
I0428 19:48:44.413789 26556 net.cpp:382] conv1 -> conv1
I0428 19:48:44.415802 26556 net.cpp:124] Setting up conv1
I0428 19:48:44.415814 26556 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:48:44.415818 26556 net.cpp:139] Memory required for data: 1882800
I0428 19:48:44.415841 26556 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:44.415848 26556 net.cpp:86] Creating Layer pool1
I0428 19:48:44.415851 26556 net.cpp:408] pool1 <- conv1
I0428 19:48:44.415855 26556 net.cpp:382] pool1 -> pool1
I0428 19:48:44.415908 26556 net.cpp:124] Setting up pool1
I0428 19:48:44.415915 26556 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:48:44.415918 26556 net.cpp:139] Memory required for data: 1914800
I0428 19:48:44.415921 26556 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:44.415926 26556 net.cpp:86] Creating Layer ip1
I0428 19:48:44.415937 26556 net.cpp:408] ip1 <- pool1
I0428 19:48:44.415942 26556 net.cpp:382] ip1 -> ip1
I0428 19:48:44.416054 26556 net.cpp:124] Setting up ip1
I0428 19:48:44.416061 26556 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:44.416071 26556 net.cpp:139] Memory required for data: 1924800
I0428 19:48:44.416079 26556 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:44.416084 26556 net.cpp:86] Creating Layer relu1
I0428 19:48:44.416086 26556 net.cpp:408] relu1 <- ip1
I0428 19:48:44.416091 26556 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:44.416262 26556 net.cpp:124] Setting up relu1
I0428 19:48:44.416270 26556 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:44.416273 26556 net.cpp:139] Memory required for data: 1934800
I0428 19:48:44.416276 26556 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:44.416290 26556 net.cpp:86] Creating Layer ip2
I0428 19:48:44.416293 26556 net.cpp:408] ip2 <- ip1
I0428 19:48:44.416297 26556 net.cpp:382] ip2 -> ip2
I0428 19:48:44.416391 26556 net.cpp:124] Setting up ip2
I0428 19:48:44.416399 26556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:44.416402 26556 net.cpp:139] Memory required for data: 1938800
I0428 19:48:44.416407 26556 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:44.416411 26556 net.cpp:86] Creating Layer relu2
I0428 19:48:44.416414 26556 net.cpp:408] relu2 <- ip2
I0428 19:48:44.416419 26556 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:44.416563 26556 net.cpp:124] Setting up relu2
I0428 19:48:44.416573 26556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:44.416575 26556 net.cpp:139] Memory required for data: 1942800
I0428 19:48:44.416579 26556 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:48:44.416584 26556 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:48:44.416586 26556 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:48:44.416590 26556 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:48:44.416618 26556 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:48:44.416652 26556 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:48:44.416657 26556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:44.416661 26556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:44.416664 26556 net.cpp:139] Memory required for data: 1950800
I0428 19:48:44.416682 26556 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:44.416692 26556 net.cpp:86] Creating Layer accuracy
I0428 19:48:44.416695 26556 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:48:44.416699 26556 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:44.416703 26556 net.cpp:382] accuracy -> accuracy
I0428 19:48:44.416710 26556 net.cpp:124] Setting up accuracy
I0428 19:48:44.416714 26556 net.cpp:131] Top shape: (1)
I0428 19:48:44.416716 26556 net.cpp:139] Memory required for data: 1950804
I0428 19:48:44.416720 26556 layer_factory.hpp:77] Creating layer loss
I0428 19:48:44.416724 26556 net.cpp:86] Creating Layer loss
I0428 19:48:44.416728 26556 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:48:44.416738 26556 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:44.416741 26556 net.cpp:382] loss -> loss
I0428 19:48:44.416746 26556 layer_factory.hpp:77] Creating layer loss
I0428 19:48:44.417054 26556 net.cpp:124] Setting up loss
I0428 19:48:44.417064 26556 net.cpp:131] Top shape: (1)
I0428 19:48:44.417068 26556 net.cpp:134]     with loss weight 1
I0428 19:48:44.417075 26556 net.cpp:139] Memory required for data: 1950808
I0428 19:48:44.417078 26556 net.cpp:200] loss needs backward computation.
I0428 19:48:44.417083 26556 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:44.417088 26556 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:48:44.417090 26556 net.cpp:200] relu2 needs backward computation.
I0428 19:48:44.417093 26556 net.cpp:200] ip2 needs backward computation.
I0428 19:48:44.417096 26556 net.cpp:200] relu1 needs backward computation.
I0428 19:48:44.417099 26556 net.cpp:200] ip1 needs backward computation.
I0428 19:48:44.417102 26556 net.cpp:200] pool1 needs backward computation.
I0428 19:48:44.417106 26556 net.cpp:200] conv1 needs backward computation.
I0428 19:48:44.417109 26556 net.cpp:200] pool0 needs backward computation.
I0428 19:48:44.417112 26556 net.cpp:200] conv0 needs backward computation.
I0428 19:48:44.417116 26556 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:44.417120 26556 net.cpp:202] mnist does not need backward computation.
I0428 19:48:44.417124 26556 net.cpp:244] This network produces output accuracy
I0428 19:48:44.417127 26556 net.cpp:244] This network produces output loss
I0428 19:48:44.417137 26556 net.cpp:257] Network initialization done.
I0428 19:48:44.417206 26556 solver.cpp:56] Solver scaffolding done.
I0428 19:48:44.417582 26556 caffe.cpp:248] Starting Optimization
I0428 19:48:44.417588 26556 solver.cpp:273] Solving LeNet
I0428 19:48:44.417590 26556 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:44.418387 26556 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:44.421049 26556 blocking_queue.cpp:49] Waiting for data
I0428 19:48:44.497069 26563 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:44.497611 26556 solver.cpp:398]     Test net output #0: accuracy = 0.0465
I0428 19:48:44.497649 26556 solver.cpp:398]     Test net output #1: loss = 2.36187 (* 1 = 2.36187 loss)
I0428 19:48:44.499492 26556 solver.cpp:219] Iteration 0 (-2.3383e-31 iter/s, 0.0818777s/100 iters), loss = 2.37063
I0428 19:48:44.499549 26556 solver.cpp:238]     Train net output #0: loss = 2.37063 (* 1 = 2.37063 loss)
I0428 19:48:44.499572 26556 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:44.581678 26556 solver.cpp:219] Iteration 100 (1217.64 iter/s, 0.082126s/100 iters), loss = 0.872249
I0428 19:48:44.581739 26556 solver.cpp:238]     Train net output #0: loss = 0.872249 (* 1 = 0.872249 loss)
I0428 19:48:44.581753 26556 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:44.662031 26556 solver.cpp:219] Iteration 200 (1245.55 iter/s, 0.0802857s/100 iters), loss = 0.201241
I0428 19:48:44.662087 26556 solver.cpp:238]     Train net output #0: loss = 0.201241 (* 1 = 0.201241 loss)
I0428 19:48:44.662096 26556 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:44.727180 26556 solver.cpp:219] Iteration 300 (1536.47 iter/s, 0.0650844s/100 iters), loss = 0.268885
I0428 19:48:44.727210 26556 solver.cpp:238]     Train net output #0: loss = 0.268885 (* 1 = 0.268885 loss)
I0428 19:48:44.727216 26556 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:44.806543 26556 solver.cpp:219] Iteration 400 (1260.7 iter/s, 0.0793211s/100 iters), loss = 0.197587
I0428 19:48:44.806582 26556 solver.cpp:238]     Train net output #0: loss = 0.197587 (* 1 = 0.197587 loss)
I0428 19:48:44.806591 26556 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:44.875946 26556 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:44.951156 26563 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:44.951647 26556 solver.cpp:398]     Test net output #0: accuracy = 0.9422
I0428 19:48:44.951674 26556 solver.cpp:398]     Test net output #1: loss = 0.18627 (* 1 = 0.18627 loss)
I0428 19:48:44.952435 26556 solver.cpp:219] Iteration 500 (685.678 iter/s, 0.145841s/100 iters), loss = 0.240909
I0428 19:48:44.952463 26556 solver.cpp:238]     Train net output #0: loss = 0.240909 (* 1 = 0.240909 loss)
I0428 19:48:44.952471 26556 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:45.022917 26556 solver.cpp:219] Iteration 600 (1419.59 iter/s, 0.070443s/100 iters), loss = 0.222016
I0428 19:48:45.022946 26556 solver.cpp:238]     Train net output #0: loss = 0.222016 (* 1 = 0.222016 loss)
I0428 19:48:45.022954 26556 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:45.090775 26556 solver.cpp:219] Iteration 700 (1474.48 iter/s, 0.0678205s/100 iters), loss = 0.183906
I0428 19:48:45.090806 26556 solver.cpp:238]     Train net output #0: loss = 0.183906 (* 1 = 0.183906 loss)
I0428 19:48:45.090813 26556 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:45.159334 26556 solver.cpp:219] Iteration 800 (1459.41 iter/s, 0.068521s/100 iters), loss = 0.220368
I0428 19:48:45.159364 26556 solver.cpp:238]     Train net output #0: loss = 0.220368 (* 1 = 0.220368 loss)
I0428 19:48:45.159371 26556 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:45.227893 26556 solver.cpp:219] Iteration 900 (1459.43 iter/s, 0.06852s/100 iters), loss = 0.25706
I0428 19:48:45.227923 26556 solver.cpp:238]     Train net output #0: loss = 0.25706 (* 1 = 0.25706 loss)
I0428 19:48:45.227931 26556 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:45.250881 26562 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:45.295513 26556 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:45.296192 26556 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:45.296617 26556 solver.cpp:311] Iteration 1000, loss = 0.187238
I0428 19:48:45.296638 26556 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:45.371953 26563 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:45.372597 26556 solver.cpp:398]     Test net output #0: accuracy = 0.961
I0428 19:48:45.372638 26556 solver.cpp:398]     Test net output #1: loss = 0.132646 (* 1 = 0.132646 loss)
I0428 19:48:45.372648 26556 solver.cpp:316] Optimization Done.
I0428 19:48:45.372654 26556 caffe.cpp:259] Optimization Done.
