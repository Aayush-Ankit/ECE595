I0428 20:33:18.349128  4273 caffe.cpp:218] Using GPUs 0
I0428 20:33:18.381458  4273 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:18.831679  4273 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1586.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:18.831805  4273 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1586.prototxt
I0428 20:33:18.832116  4273 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:18.832145  4273 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:18.832236  4273 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:18.832298  4273 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:18.832378  4273 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:18.832397  4273 net.cpp:86] Creating Layer mnist
I0428 20:33:18.832403  4273 net.cpp:382] mnist -> data
I0428 20:33:18.832422  4273 net.cpp:382] mnist -> label
I0428 20:33:18.833427  4273 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:18.835747  4273 net.cpp:124] Setting up mnist
I0428 20:33:18.835788  4273 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:18.835793  4273 net.cpp:131] Top shape: 64 (64)
I0428 20:33:18.835796  4273 net.cpp:139] Memory required for data: 200960
I0428 20:33:18.835803  4273 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:18.835814  4273 net.cpp:86] Creating Layer conv0
I0428 20:33:18.835831  4273 net.cpp:408] conv0 <- data
I0428 20:33:18.835841  4273 net.cpp:382] conv0 -> conv0
I0428 20:33:19.062093  4273 net.cpp:124] Setting up conv0
I0428 20:33:19.062134  4273 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:19.062139  4273 net.cpp:139] Memory required for data: 14946560
I0428 20:33:19.062152  4273 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:19.062165  4273 net.cpp:86] Creating Layer pool0
I0428 20:33:19.062168  4273 net.cpp:408] pool0 <- conv0
I0428 20:33:19.062189  4273 net.cpp:382] pool0 -> pool0
I0428 20:33:19.062235  4273 net.cpp:124] Setting up pool0
I0428 20:33:19.062240  4273 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:19.062244  4273 net.cpp:139] Memory required for data: 18632960
I0428 20:33:19.062247  4273 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:19.062258  4273 net.cpp:86] Creating Layer conv1
I0428 20:33:19.062260  4273 net.cpp:408] conv1 <- pool0
I0428 20:33:19.062265  4273 net.cpp:382] conv1 -> conv1
I0428 20:33:19.064615  4273 net.cpp:124] Setting up conv1
I0428 20:33:19.064646  4273 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:19.064649  4273 net.cpp:139] Memory required for data: 19042560
I0428 20:33:19.064657  4273 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:19.064666  4273 net.cpp:86] Creating Layer pool1
I0428 20:33:19.064668  4273 net.cpp:408] pool1 <- conv1
I0428 20:33:19.064673  4273 net.cpp:382] pool1 -> pool1
I0428 20:33:19.064725  4273 net.cpp:124] Setting up pool1
I0428 20:33:19.064731  4273 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:19.064734  4273 net.cpp:139] Memory required for data: 19144960
I0428 20:33:19.064738  4273 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:19.064744  4273 net.cpp:86] Creating Layer ip1
I0428 20:33:19.064748  4273 net.cpp:408] ip1 <- pool1
I0428 20:33:19.064752  4273 net.cpp:382] ip1 -> ip1
I0428 20:33:19.065876  4273 net.cpp:124] Setting up ip1
I0428 20:33:19.065888  4273 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:19.065909  4273 net.cpp:139] Memory required for data: 19151360
I0428 20:33:19.065918  4273 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:19.065924  4273 net.cpp:86] Creating Layer relu1
I0428 20:33:19.065928  4273 net.cpp:408] relu1 <- ip1
I0428 20:33:19.065933  4273 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:19.066140  4273 net.cpp:124] Setting up relu1
I0428 20:33:19.066164  4273 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:19.066167  4273 net.cpp:139] Memory required for data: 19157760
I0428 20:33:19.066170  4273 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:19.066176  4273 net.cpp:86] Creating Layer ip2
I0428 20:33:19.066179  4273 net.cpp:408] ip2 <- ip1
I0428 20:33:19.066184  4273 net.cpp:382] ip2 -> ip2
I0428 20:33:19.066278  4273 net.cpp:124] Setting up ip2
I0428 20:33:19.066285  4273 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:19.066288  4273 net.cpp:139] Memory required for data: 19164160
I0428 20:33:19.066293  4273 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:19.066299  4273 net.cpp:86] Creating Layer relu2
I0428 20:33:19.066303  4273 net.cpp:408] relu2 <- ip2
I0428 20:33:19.066306  4273 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:19.067101  4273 net.cpp:124] Setting up relu2
I0428 20:33:19.067112  4273 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:19.067132  4273 net.cpp:139] Memory required for data: 19170560
I0428 20:33:19.067136  4273 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:19.067157  4273 net.cpp:86] Creating Layer ip3
I0428 20:33:19.067160  4273 net.cpp:408] ip3 <- ip2
I0428 20:33:19.067167  4273 net.cpp:382] ip3 -> ip3
I0428 20:33:19.067263  4273 net.cpp:124] Setting up ip3
I0428 20:33:19.067271  4273 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:19.067275  4273 net.cpp:139] Memory required for data: 19173120
I0428 20:33:19.067281  4273 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:19.067286  4273 net.cpp:86] Creating Layer relu3
I0428 20:33:19.067289  4273 net.cpp:408] relu3 <- ip3
I0428 20:33:19.067307  4273 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:19.067473  4273 net.cpp:124] Setting up relu3
I0428 20:33:19.067482  4273 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:19.067487  4273 net.cpp:139] Memory required for data: 19175680
I0428 20:33:19.067489  4273 layer_factory.hpp:77] Creating layer loss
I0428 20:33:19.067495  4273 net.cpp:86] Creating Layer loss
I0428 20:33:19.067498  4273 net.cpp:408] loss <- ip3
I0428 20:33:19.067502  4273 net.cpp:408] loss <- label
I0428 20:33:19.067508  4273 net.cpp:382] loss -> loss
I0428 20:33:19.067525  4273 layer_factory.hpp:77] Creating layer loss
I0428 20:33:19.067762  4273 net.cpp:124] Setting up loss
I0428 20:33:19.067771  4273 net.cpp:131] Top shape: (1)
I0428 20:33:19.067775  4273 net.cpp:134]     with loss weight 1
I0428 20:33:19.067788  4273 net.cpp:139] Memory required for data: 19175684
I0428 20:33:19.067791  4273 net.cpp:200] loss needs backward computation.
I0428 20:33:19.067795  4273 net.cpp:200] relu3 needs backward computation.
I0428 20:33:19.067798  4273 net.cpp:200] ip3 needs backward computation.
I0428 20:33:19.067801  4273 net.cpp:200] relu2 needs backward computation.
I0428 20:33:19.067803  4273 net.cpp:200] ip2 needs backward computation.
I0428 20:33:19.067806  4273 net.cpp:200] relu1 needs backward computation.
I0428 20:33:19.067809  4273 net.cpp:200] ip1 needs backward computation.
I0428 20:33:19.067812  4273 net.cpp:200] pool1 needs backward computation.
I0428 20:33:19.067816  4273 net.cpp:200] conv1 needs backward computation.
I0428 20:33:19.067818  4273 net.cpp:200] pool0 needs backward computation.
I0428 20:33:19.067821  4273 net.cpp:200] conv0 needs backward computation.
I0428 20:33:19.067824  4273 net.cpp:202] mnist does not need backward computation.
I0428 20:33:19.067827  4273 net.cpp:244] This network produces output loss
I0428 20:33:19.067836  4273 net.cpp:257] Network initialization done.
I0428 20:33:19.068253  4273 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1586.prototxt
I0428 20:33:19.068325  4273 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:19.068411  4273 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:19.068488  4273 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:19.068532  4273 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:19.068560  4273 net.cpp:86] Creating Layer mnist
I0428 20:33:19.068565  4273 net.cpp:382] mnist -> data
I0428 20:33:19.068572  4273 net.cpp:382] mnist -> label
I0428 20:33:19.068660  4273 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:19.070997  4273 net.cpp:124] Setting up mnist
I0428 20:33:19.071027  4273 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:19.071032  4273 net.cpp:131] Top shape: 100 (100)
I0428 20:33:19.071034  4273 net.cpp:139] Memory required for data: 314000
I0428 20:33:19.071038  4273 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:19.071049  4273 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:19.071053  4273 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:19.071058  4273 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:19.071063  4273 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:19.071188  4273 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:19.071197  4273 net.cpp:131] Top shape: 100 (100)
I0428 20:33:19.071200  4273 net.cpp:131] Top shape: 100 (100)
I0428 20:33:19.071202  4273 net.cpp:139] Memory required for data: 314800
I0428 20:33:19.071207  4273 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:19.071214  4273 net.cpp:86] Creating Layer conv0
I0428 20:33:19.071218  4273 net.cpp:408] conv0 <- data
I0428 20:33:19.071239  4273 net.cpp:382] conv0 -> conv0
I0428 20:33:19.073057  4273 net.cpp:124] Setting up conv0
I0428 20:33:19.073088  4273 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:19.073092  4273 net.cpp:139] Memory required for data: 23354800
I0428 20:33:19.073103  4273 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:19.073110  4273 net.cpp:86] Creating Layer pool0
I0428 20:33:19.073113  4273 net.cpp:408] pool0 <- conv0
I0428 20:33:19.073118  4273 net.cpp:382] pool0 -> pool0
I0428 20:33:19.073169  4273 net.cpp:124] Setting up pool0
I0428 20:33:19.073195  4273 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:19.073197  4273 net.cpp:139] Memory required for data: 29114800
I0428 20:33:19.073215  4273 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:19.073225  4273 net.cpp:86] Creating Layer conv1
I0428 20:33:19.073227  4273 net.cpp:408] conv1 <- pool0
I0428 20:33:19.073233  4273 net.cpp:382] conv1 -> conv1
I0428 20:33:19.075264  4273 net.cpp:124] Setting up conv1
I0428 20:33:19.075278  4273 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:19.075280  4273 net.cpp:139] Memory required for data: 29754800
I0428 20:33:19.075289  4273 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:19.075295  4273 net.cpp:86] Creating Layer pool1
I0428 20:33:19.075314  4273 net.cpp:408] pool1 <- conv1
I0428 20:33:19.075320  4273 net.cpp:382] pool1 -> pool1
I0428 20:33:19.075376  4273 net.cpp:124] Setting up pool1
I0428 20:33:19.075384  4273 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:19.075388  4273 net.cpp:139] Memory required for data: 29914800
I0428 20:33:19.075392  4273 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:19.075398  4273 net.cpp:86] Creating Layer ip1
I0428 20:33:19.075402  4273 net.cpp:408] ip1 <- pool1
I0428 20:33:19.075407  4273 net.cpp:382] ip1 -> ip1
I0428 20:33:19.075582  4273 net.cpp:124] Setting up ip1
I0428 20:33:19.075613  4273 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:19.075616  4273 net.cpp:139] Memory required for data: 29924800
I0428 20:33:19.075623  4273 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:19.075631  4273 net.cpp:86] Creating Layer relu1
I0428 20:33:19.075634  4273 net.cpp:408] relu1 <- ip1
I0428 20:33:19.075640  4273 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:19.075805  4273 net.cpp:124] Setting up relu1
I0428 20:33:19.075814  4273 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:19.075819  4273 net.cpp:139] Memory required for data: 29934800
I0428 20:33:19.075821  4273 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:19.075829  4273 net.cpp:86] Creating Layer ip2
I0428 20:33:19.075834  4273 net.cpp:408] ip2 <- ip1
I0428 20:33:19.075837  4273 net.cpp:382] ip2 -> ip2
I0428 20:33:19.075953  4273 net.cpp:124] Setting up ip2
I0428 20:33:19.075960  4273 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:19.075964  4273 net.cpp:139] Memory required for data: 29944800
I0428 20:33:19.075969  4273 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:19.075974  4273 net.cpp:86] Creating Layer relu2
I0428 20:33:19.075978  4273 net.cpp:408] relu2 <- ip2
I0428 20:33:19.075983  4273 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:19.076159  4273 net.cpp:124] Setting up relu2
I0428 20:33:19.076167  4273 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:19.076170  4273 net.cpp:139] Memory required for data: 29954800
I0428 20:33:19.076174  4273 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:19.076179  4273 net.cpp:86] Creating Layer ip3
I0428 20:33:19.076182  4273 net.cpp:408] ip3 <- ip2
I0428 20:33:19.076186  4273 net.cpp:382] ip3 -> ip3
I0428 20:33:19.076309  4273 net.cpp:124] Setting up ip3
I0428 20:33:19.076316  4273 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:19.076320  4273 net.cpp:139] Memory required for data: 29958800
I0428 20:33:19.076328  4273 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:19.076335  4273 net.cpp:86] Creating Layer relu3
I0428 20:33:19.076337  4273 net.cpp:408] relu3 <- ip3
I0428 20:33:19.076341  4273 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:19.077246  4273 net.cpp:124] Setting up relu3
I0428 20:33:19.077258  4273 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:19.077262  4273 net.cpp:139] Memory required for data: 29962800
I0428 20:33:19.077267  4273 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:19.077273  4273 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:19.077277  4273 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:19.077282  4273 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:19.077288  4273 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:19.077329  4273 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:19.077337  4273 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:19.077340  4273 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:19.077343  4273 net.cpp:139] Memory required for data: 29970800
I0428 20:33:19.077347  4273 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:19.077352  4273 net.cpp:86] Creating Layer accuracy
I0428 20:33:19.077354  4273 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:19.077358  4273 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:19.077363  4273 net.cpp:382] accuracy -> accuracy
I0428 20:33:19.077370  4273 net.cpp:124] Setting up accuracy
I0428 20:33:19.077374  4273 net.cpp:131] Top shape: (1)
I0428 20:33:19.077378  4273 net.cpp:139] Memory required for data: 29970804
I0428 20:33:19.077380  4273 layer_factory.hpp:77] Creating layer loss
I0428 20:33:19.077384  4273 net.cpp:86] Creating Layer loss
I0428 20:33:19.077388  4273 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:19.077391  4273 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:19.077397  4273 net.cpp:382] loss -> loss
I0428 20:33:19.077402  4273 layer_factory.hpp:77] Creating layer loss
I0428 20:33:19.077666  4273 net.cpp:124] Setting up loss
I0428 20:33:19.077675  4273 net.cpp:131] Top shape: (1)
I0428 20:33:19.077694  4273 net.cpp:134]     with loss weight 1
I0428 20:33:19.077713  4273 net.cpp:139] Memory required for data: 29970808
I0428 20:33:19.077718  4273 net.cpp:200] loss needs backward computation.
I0428 20:33:19.077723  4273 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:19.077728  4273 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:19.077730  4273 net.cpp:200] relu3 needs backward computation.
I0428 20:33:19.077734  4273 net.cpp:200] ip3 needs backward computation.
I0428 20:33:19.077738  4273 net.cpp:200] relu2 needs backward computation.
I0428 20:33:19.077739  4273 net.cpp:200] ip2 needs backward computation.
I0428 20:33:19.077742  4273 net.cpp:200] relu1 needs backward computation.
I0428 20:33:19.077745  4273 net.cpp:200] ip1 needs backward computation.
I0428 20:33:19.077749  4273 net.cpp:200] pool1 needs backward computation.
I0428 20:33:19.077751  4273 net.cpp:200] conv1 needs backward computation.
I0428 20:33:19.077762  4273 net.cpp:200] pool0 needs backward computation.
I0428 20:33:19.077765  4273 net.cpp:200] conv0 needs backward computation.
I0428 20:33:19.077769  4273 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:19.077774  4273 net.cpp:202] mnist does not need backward computation.
I0428 20:33:19.077782  4273 net.cpp:244] This network produces output accuracy
I0428 20:33:19.077785  4273 net.cpp:244] This network produces output loss
I0428 20:33:19.077798  4273 net.cpp:257] Network initialization done.
I0428 20:33:19.077841  4273 solver.cpp:56] Solver scaffolding done.
I0428 20:33:19.078281  4273 caffe.cpp:248] Starting Optimization
I0428 20:33:19.078287  4273 solver.cpp:273] Solving LeNet
I0428 20:33:19.078290  4273 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:19.079188  4273 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:19.119860  4273 blocking_queue.cpp:49] Waiting for data
I0428 20:33:19.182221  4281 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:19.183365  4273 solver.cpp:398]     Test net output #0: accuracy = 0.1183
I0428 20:33:19.183393  4273 solver.cpp:398]     Test net output #1: loss = 2.29474 (* 1 = 2.29474 loss)
I0428 20:33:19.188275  4273 solver.cpp:219] Iteration 0 (-1.78626e-31 iter/s, 0.109947s/100 iters), loss = 2.30504
I0428 20:33:19.188329  4273 solver.cpp:238]     Train net output #0: loss = 2.30504 (* 1 = 2.30504 loss)
I0428 20:33:19.188340  4273 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:19.400987  4273 solver.cpp:219] Iteration 100 (470.245 iter/s, 0.212655s/100 iters), loss = 0.257161
I0428 20:33:19.401011  4273 solver.cpp:238]     Train net output #0: loss = 0.257161 (* 1 = 0.257161 loss)
I0428 20:33:19.401017  4273 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:19.609622  4273 solver.cpp:219] Iteration 200 (479.4 iter/s, 0.208594s/100 iters), loss = 0.124386
I0428 20:33:19.609645  4273 solver.cpp:238]     Train net output #0: loss = 0.124386 (* 1 = 0.124386 loss)
I0428 20:33:19.609650  4273 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:19.817443  4273 solver.cpp:219] Iteration 300 (481.272 iter/s, 0.207783s/100 iters), loss = 0.192966
I0428 20:33:19.817466  4273 solver.cpp:238]     Train net output #0: loss = 0.192966 (* 1 = 0.192966 loss)
I0428 20:33:19.817471  4273 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:20.027468  4273 solver.cpp:219] Iteration 400 (476.219 iter/s, 0.209988s/100 iters), loss = 0.0581026
I0428 20:33:20.027523  4273 solver.cpp:238]     Train net output #0: loss = 0.0581027 (* 1 = 0.0581027 loss)
I0428 20:33:20.027529  4273 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:20.248333  4273 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:20.358732  4281 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:20.361933  4273 solver.cpp:398]     Test net output #0: accuracy = 0.9658
I0428 20:33:20.361970  4273 solver.cpp:398]     Test net output #1: loss = 0.108425 (* 1 = 0.108425 loss)
I0428 20:33:20.364122  4273 solver.cpp:219] Iteration 500 (297.11 iter/s, 0.336576s/100 iters), loss = 0.160755
I0428 20:33:20.364189  4273 solver.cpp:238]     Train net output #0: loss = 0.160755 (* 1 = 0.160755 loss)
I0428 20:33:20.364202  4273 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:20.585275  4273 solver.cpp:219] Iteration 600 (452.341 iter/s, 0.221072s/100 iters), loss = 0.0540101
I0428 20:33:20.585311  4273 solver.cpp:238]     Train net output #0: loss = 0.0540101 (* 1 = 0.0540101 loss)
I0428 20:33:20.585320  4273 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:20.808459  4273 solver.cpp:219] Iteration 700 (448.172 iter/s, 0.223128s/100 iters), loss = 0.13516
I0428 20:33:20.808504  4273 solver.cpp:238]     Train net output #0: loss = 0.13516 (* 1 = 0.13516 loss)
I0428 20:33:20.808516  4273 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:21.039232  4273 solver.cpp:219] Iteration 800 (433.452 iter/s, 0.230706s/100 iters), loss = 0.236971
I0428 20:33:21.039278  4273 solver.cpp:238]     Train net output #0: loss = 0.236971 (* 1 = 0.236971 loss)
I0428 20:33:21.039290  4273 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:21.271215  4273 solver.cpp:219] Iteration 900 (431.186 iter/s, 0.231919s/100 iters), loss = 0.151391
I0428 20:33:21.271262  4273 solver.cpp:238]     Train net output #0: loss = 0.151391 (* 1 = 0.151391 loss)
I0428 20:33:21.271273  4273 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:21.344291  4280 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:21.482899  4273 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:21.485592  4273 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:21.487135  4273 solver.cpp:311] Iteration 1000, loss = 0.0954554
I0428 20:33:21.487154  4273 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:21.586693  4281 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:21.589259  4273 solver.cpp:398]     Test net output #0: accuracy = 0.9805
I0428 20:33:21.589284  4273 solver.cpp:398]     Test net output #1: loss = 0.0643096 (* 1 = 0.0643096 loss)
I0428 20:33:21.589293  4273 solver.cpp:316] Optimization Done.
I0428 20:33:21.589298  4273 caffe.cpp:259] Optimization Done.
