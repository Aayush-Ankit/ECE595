I0428 20:21:29.099289  1770 caffe.cpp:218] Using GPUs 0
I0428 20:21:29.131906  1770 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:29.639078  1770 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1385.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:29.639205  1770 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1385.prototxt
I0428 20:21:29.639564  1770 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:29.639580  1770 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:29.639668  1770 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:29.639739  1770 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:29.639825  1770 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:29.639847  1770 net.cpp:86] Creating Layer mnist
I0428 20:21:29.639854  1770 net.cpp:382] mnist -> data
I0428 20:21:29.639873  1770 net.cpp:382] mnist -> label
I0428 20:21:29.640837  1770 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:29.643208  1770 net.cpp:124] Setting up mnist
I0428 20:21:29.643225  1770 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:29.643230  1770 net.cpp:131] Top shape: 64 (64)
I0428 20:21:29.643234  1770 net.cpp:139] Memory required for data: 200960
I0428 20:21:29.643240  1770 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:29.643275  1770 net.cpp:86] Creating Layer conv0
I0428 20:21:29.643301  1770 net.cpp:408] conv0 <- data
I0428 20:21:29.643312  1770 net.cpp:382] conv0 -> conv0
I0428 20:21:29.876184  1770 net.cpp:124] Setting up conv0
I0428 20:21:29.876209  1770 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:29.876214  1770 net.cpp:139] Memory required for data: 7573760
I0428 20:21:29.876230  1770 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:29.876241  1770 net.cpp:86] Creating Layer pool0
I0428 20:21:29.876245  1770 net.cpp:408] pool0 <- conv0
I0428 20:21:29.876250  1770 net.cpp:382] pool0 -> pool0
I0428 20:21:29.876312  1770 net.cpp:124] Setting up pool0
I0428 20:21:29.876319  1770 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:29.876322  1770 net.cpp:139] Memory required for data: 9416960
I0428 20:21:29.876325  1770 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:29.876338  1770 net.cpp:86] Creating Layer conv1
I0428 20:21:29.876340  1770 net.cpp:408] conv1 <- pool0
I0428 20:21:29.876348  1770 net.cpp:382] conv1 -> conv1
I0428 20:21:29.878635  1770 net.cpp:124] Setting up conv1
I0428 20:21:29.878665  1770 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:29.878669  1770 net.cpp:139] Memory required for data: 10236160
I0428 20:21:29.878676  1770 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:29.878684  1770 net.cpp:86] Creating Layer pool1
I0428 20:21:29.878687  1770 net.cpp:408] pool1 <- conv1
I0428 20:21:29.878707  1770 net.cpp:382] pool1 -> pool1
I0428 20:21:29.878742  1770 net.cpp:124] Setting up pool1
I0428 20:21:29.878749  1770 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:29.878752  1770 net.cpp:139] Memory required for data: 10440960
I0428 20:21:29.878756  1770 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:29.878762  1770 net.cpp:86] Creating Layer ip1
I0428 20:21:29.878765  1770 net.cpp:408] ip1 <- pool1
I0428 20:21:29.878769  1770 net.cpp:382] ip1 -> ip1
I0428 20:21:29.879814  1770 net.cpp:124] Setting up ip1
I0428 20:21:29.879827  1770 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:29.879845  1770 net.cpp:139] Memory required for data: 10443520
I0428 20:21:29.879853  1770 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:29.879859  1770 net.cpp:86] Creating Layer relu1
I0428 20:21:29.879863  1770 net.cpp:408] relu1 <- ip1
I0428 20:21:29.879868  1770 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:29.880064  1770 net.cpp:124] Setting up relu1
I0428 20:21:29.880072  1770 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:29.880076  1770 net.cpp:139] Memory required for data: 10446080
I0428 20:21:29.880079  1770 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:29.880085  1770 net.cpp:86] Creating Layer ip2
I0428 20:21:29.880089  1770 net.cpp:408] ip2 <- ip1
I0428 20:21:29.880094  1770 net.cpp:382] ip2 -> ip2
I0428 20:21:29.880201  1770 net.cpp:124] Setting up ip2
I0428 20:21:29.880209  1770 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:29.880213  1770 net.cpp:139] Memory required for data: 10458880
I0428 20:21:29.880218  1770 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:29.880224  1770 net.cpp:86] Creating Layer relu2
I0428 20:21:29.880228  1770 net.cpp:408] relu2 <- ip2
I0428 20:21:29.880231  1770 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:29.880992  1770 net.cpp:124] Setting up relu2
I0428 20:21:29.881006  1770 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:29.881027  1770 net.cpp:139] Memory required for data: 10471680
I0428 20:21:29.881031  1770 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:29.881037  1770 net.cpp:86] Creating Layer ip3
I0428 20:21:29.881041  1770 net.cpp:408] ip3 <- ip2
I0428 20:21:29.881045  1770 net.cpp:382] ip3 -> ip3
I0428 20:21:29.881175  1770 net.cpp:124] Setting up ip3
I0428 20:21:29.881182  1770 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:29.881186  1770 net.cpp:139] Memory required for data: 10474240
I0428 20:21:29.881192  1770 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:29.881197  1770 net.cpp:86] Creating Layer relu3
I0428 20:21:29.881201  1770 net.cpp:408] relu3 <- ip3
I0428 20:21:29.881204  1770 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:29.881386  1770 net.cpp:124] Setting up relu3
I0428 20:21:29.881395  1770 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:29.881399  1770 net.cpp:139] Memory required for data: 10476800
I0428 20:21:29.881402  1770 layer_factory.hpp:77] Creating layer loss
I0428 20:21:29.881408  1770 net.cpp:86] Creating Layer loss
I0428 20:21:29.881412  1770 net.cpp:408] loss <- ip3
I0428 20:21:29.881415  1770 net.cpp:408] loss <- label
I0428 20:21:29.881420  1770 net.cpp:382] loss -> loss
I0428 20:21:29.881434  1770 layer_factory.hpp:77] Creating layer loss
I0428 20:21:29.881664  1770 net.cpp:124] Setting up loss
I0428 20:21:29.881674  1770 net.cpp:131] Top shape: (1)
I0428 20:21:29.881677  1770 net.cpp:134]     with loss weight 1
I0428 20:21:29.881691  1770 net.cpp:139] Memory required for data: 10476804
I0428 20:21:29.881695  1770 net.cpp:200] loss needs backward computation.
I0428 20:21:29.881700  1770 net.cpp:200] relu3 needs backward computation.
I0428 20:21:29.881702  1770 net.cpp:200] ip3 needs backward computation.
I0428 20:21:29.881705  1770 net.cpp:200] relu2 needs backward computation.
I0428 20:21:29.881707  1770 net.cpp:200] ip2 needs backward computation.
I0428 20:21:29.881711  1770 net.cpp:200] relu1 needs backward computation.
I0428 20:21:29.881712  1770 net.cpp:200] ip1 needs backward computation.
I0428 20:21:29.881716  1770 net.cpp:200] pool1 needs backward computation.
I0428 20:21:29.881718  1770 net.cpp:200] conv1 needs backward computation.
I0428 20:21:29.881721  1770 net.cpp:200] pool0 needs backward computation.
I0428 20:21:29.881724  1770 net.cpp:200] conv0 needs backward computation.
I0428 20:21:29.881727  1770 net.cpp:202] mnist does not need backward computation.
I0428 20:21:29.881731  1770 net.cpp:244] This network produces output loss
I0428 20:21:29.881753  1770 net.cpp:257] Network initialization done.
I0428 20:21:29.882077  1770 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1385.prototxt
I0428 20:21:29.882135  1770 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:29.882244  1770 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:29.882323  1770 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:29.882369  1770 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:29.882397  1770 net.cpp:86] Creating Layer mnist
I0428 20:21:29.882411  1770 net.cpp:382] mnist -> data
I0428 20:21:29.882419  1770 net.cpp:382] mnist -> label
I0428 20:21:29.882514  1770 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:29.884496  1770 net.cpp:124] Setting up mnist
I0428 20:21:29.884526  1770 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:29.884531  1770 net.cpp:131] Top shape: 100 (100)
I0428 20:21:29.884534  1770 net.cpp:139] Memory required for data: 314000
I0428 20:21:29.884538  1770 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:29.884546  1770 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:29.884549  1770 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:29.884553  1770 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:29.884560  1770 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:29.884647  1770 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:29.884655  1770 net.cpp:131] Top shape: 100 (100)
I0428 20:21:29.884660  1770 net.cpp:131] Top shape: 100 (100)
I0428 20:21:29.884663  1770 net.cpp:139] Memory required for data: 314800
I0428 20:21:29.884666  1770 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:29.884675  1770 net.cpp:86] Creating Layer conv0
I0428 20:21:29.884678  1770 net.cpp:408] conv0 <- data
I0428 20:21:29.884683  1770 net.cpp:382] conv0 -> conv0
I0428 20:21:29.886333  1770 net.cpp:124] Setting up conv0
I0428 20:21:29.886363  1770 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:29.886368  1770 net.cpp:139] Memory required for data: 11834800
I0428 20:21:29.886376  1770 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:29.886384  1770 net.cpp:86] Creating Layer pool0
I0428 20:21:29.886387  1770 net.cpp:408] pool0 <- conv0
I0428 20:21:29.886392  1770 net.cpp:382] pool0 -> pool0
I0428 20:21:29.886427  1770 net.cpp:124] Setting up pool0
I0428 20:21:29.886432  1770 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:29.886435  1770 net.cpp:139] Memory required for data: 14714800
I0428 20:21:29.886438  1770 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:29.886446  1770 net.cpp:86] Creating Layer conv1
I0428 20:21:29.886451  1770 net.cpp:408] conv1 <- pool0
I0428 20:21:29.886456  1770 net.cpp:382] conv1 -> conv1
I0428 20:21:29.888386  1770 net.cpp:124] Setting up conv1
I0428 20:21:29.888413  1770 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:29.888417  1770 net.cpp:139] Memory required for data: 15994800
I0428 20:21:29.888424  1770 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:29.888430  1770 net.cpp:86] Creating Layer pool1
I0428 20:21:29.888433  1770 net.cpp:408] pool1 <- conv1
I0428 20:21:29.888439  1770 net.cpp:382] pool1 -> pool1
I0428 20:21:29.888489  1770 net.cpp:124] Setting up pool1
I0428 20:21:29.888500  1770 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:29.888504  1770 net.cpp:139] Memory required for data: 16314800
I0428 20:21:29.888506  1770 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:29.888511  1770 net.cpp:86] Creating Layer ip1
I0428 20:21:29.888514  1770 net.cpp:408] ip1 <- pool1
I0428 20:21:29.888520  1770 net.cpp:382] ip1 -> ip1
I0428 20:21:29.888653  1770 net.cpp:124] Setting up ip1
I0428 20:21:29.888660  1770 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:29.888681  1770 net.cpp:139] Memory required for data: 16318800
I0428 20:21:29.888689  1770 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:29.888695  1770 net.cpp:86] Creating Layer relu1
I0428 20:21:29.888697  1770 net.cpp:408] relu1 <- ip1
I0428 20:21:29.888701  1770 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:29.888891  1770 net.cpp:124] Setting up relu1
I0428 20:21:29.888901  1770 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:29.888914  1770 net.cpp:139] Memory required for data: 16322800
I0428 20:21:29.888917  1770 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:29.888924  1770 net.cpp:86] Creating Layer ip2
I0428 20:21:29.888928  1770 net.cpp:408] ip2 <- ip1
I0428 20:21:29.888933  1770 net.cpp:382] ip2 -> ip2
I0428 20:21:29.889034  1770 net.cpp:124] Setting up ip2
I0428 20:21:29.889042  1770 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:29.889045  1770 net.cpp:139] Memory required for data: 16342800
I0428 20:21:29.889050  1770 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:29.889055  1770 net.cpp:86] Creating Layer relu2
I0428 20:21:29.889058  1770 net.cpp:408] relu2 <- ip2
I0428 20:21:29.889062  1770 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:29.889283  1770 net.cpp:124] Setting up relu2
I0428 20:21:29.889292  1770 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:29.889297  1770 net.cpp:139] Memory required for data: 16362800
I0428 20:21:29.889300  1770 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:29.889307  1770 net.cpp:86] Creating Layer ip3
I0428 20:21:29.889309  1770 net.cpp:408] ip3 <- ip2
I0428 20:21:29.889314  1770 net.cpp:382] ip3 -> ip3
I0428 20:21:29.889441  1770 net.cpp:124] Setting up ip3
I0428 20:21:29.889449  1770 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:29.889453  1770 net.cpp:139] Memory required for data: 16366800
I0428 20:21:29.889461  1770 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:29.889467  1770 net.cpp:86] Creating Layer relu3
I0428 20:21:29.889469  1770 net.cpp:408] relu3 <- ip3
I0428 20:21:29.889474  1770 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:29.890316  1770 net.cpp:124] Setting up relu3
I0428 20:21:29.890344  1770 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:29.890348  1770 net.cpp:139] Memory required for data: 16370800
I0428 20:21:29.890352  1770 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:29.890362  1770 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:29.890370  1770 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:29.890377  1770 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:29.890383  1770 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:29.890434  1770 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:29.890439  1770 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:29.890444  1770 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:29.890446  1770 net.cpp:139] Memory required for data: 16378800
I0428 20:21:29.890450  1770 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:29.890455  1770 net.cpp:86] Creating Layer accuracy
I0428 20:21:29.890458  1770 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:29.890462  1770 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:29.890482  1770 net.cpp:382] accuracy -> accuracy
I0428 20:21:29.890489  1770 net.cpp:124] Setting up accuracy
I0428 20:21:29.890493  1770 net.cpp:131] Top shape: (1)
I0428 20:21:29.890496  1770 net.cpp:139] Memory required for data: 16378804
I0428 20:21:29.890498  1770 layer_factory.hpp:77] Creating layer loss
I0428 20:21:29.890503  1770 net.cpp:86] Creating Layer loss
I0428 20:21:29.890507  1770 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:29.890511  1770 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:29.890521  1770 net.cpp:382] loss -> loss
I0428 20:21:29.890527  1770 layer_factory.hpp:77] Creating layer loss
I0428 20:21:29.890753  1770 net.cpp:124] Setting up loss
I0428 20:21:29.890763  1770 net.cpp:131] Top shape: (1)
I0428 20:21:29.890768  1770 net.cpp:134]     with loss weight 1
I0428 20:21:29.890806  1770 net.cpp:139] Memory required for data: 16378808
I0428 20:21:29.890811  1770 net.cpp:200] loss needs backward computation.
I0428 20:21:29.890816  1770 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:29.890820  1770 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:29.890825  1770 net.cpp:200] relu3 needs backward computation.
I0428 20:21:29.890826  1770 net.cpp:200] ip3 needs backward computation.
I0428 20:21:29.890830  1770 net.cpp:200] relu2 needs backward computation.
I0428 20:21:29.890846  1770 net.cpp:200] ip2 needs backward computation.
I0428 20:21:29.890849  1770 net.cpp:200] relu1 needs backward computation.
I0428 20:21:29.890852  1770 net.cpp:200] ip1 needs backward computation.
I0428 20:21:29.890861  1770 net.cpp:200] pool1 needs backward computation.
I0428 20:21:29.890864  1770 net.cpp:200] conv1 needs backward computation.
I0428 20:21:29.890867  1770 net.cpp:200] pool0 needs backward computation.
I0428 20:21:29.890871  1770 net.cpp:200] conv0 needs backward computation.
I0428 20:21:29.890874  1770 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:29.890877  1770 net.cpp:202] mnist does not need backward computation.
I0428 20:21:29.890880  1770 net.cpp:244] This network produces output accuracy
I0428 20:21:29.890883  1770 net.cpp:244] This network produces output loss
I0428 20:21:29.890893  1770 net.cpp:257] Network initialization done.
I0428 20:21:29.890933  1770 solver.cpp:56] Solver scaffolding done.
I0428 20:21:29.891307  1770 caffe.cpp:248] Starting Optimization
I0428 20:21:29.891314  1770 solver.cpp:273] Solving LeNet
I0428 20:21:29.891331  1770 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:29.892248  1770 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:29.899794  1770 blocking_queue.cpp:49] Waiting for data
I0428 20:21:29.978092  1777 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:29.979377  1770 solver.cpp:398]     Test net output #0: accuracy = 0.0398
I0428 20:21:29.979415  1770 solver.cpp:398]     Test net output #1: loss = 2.33024 (* 1 = 2.33024 loss)
I0428 20:21:29.984797  1770 solver.cpp:219] Iteration 0 (-2.24912e-31 iter/s, 0.0934185s/100 iters), loss = 2.34076
I0428 20:21:29.984839  1770 solver.cpp:238]     Train net output #0: loss = 2.34076 (* 1 = 2.34076 loss)
I0428 20:21:29.984854  1770 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:30.144955  1770 solver.cpp:219] Iteration 100 (624.6 iter/s, 0.160102s/100 iters), loss = 1.34781
I0428 20:21:30.144996  1770 solver.cpp:238]     Train net output #0: loss = 1.34781 (* 1 = 1.34781 loss)
I0428 20:21:30.145004  1770 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:30.303656  1770 solver.cpp:219] Iteration 200 (630.297 iter/s, 0.158655s/100 iters), loss = 1.14348
I0428 20:21:30.303689  1770 solver.cpp:238]     Train net output #0: loss = 1.14348 (* 1 = 1.14348 loss)
I0428 20:21:30.303696  1770 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:30.462338  1770 solver.cpp:219] Iteration 300 (630.374 iter/s, 0.158636s/100 iters), loss = 0.879655
I0428 20:21:30.462369  1770 solver.cpp:238]     Train net output #0: loss = 0.879655 (* 1 = 0.879655 loss)
I0428 20:21:30.462376  1770 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:30.628656  1770 solver.cpp:219] Iteration 400 (601.428 iter/s, 0.166271s/100 iters), loss = 1.08405
I0428 20:21:30.628700  1770 solver.cpp:238]     Train net output #0: loss = 1.08405 (* 1 = 1.08405 loss)
I0428 20:21:30.628710  1770 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:30.804116  1770 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:30.885699  1777 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:30.886831  1770 solver.cpp:398]     Test net output #0: accuracy = 0.6789
I0428 20:21:30.886853  1770 solver.cpp:398]     Test net output #1: loss = 0.992912 (* 1 = 0.992912 loss)
I0428 20:21:30.888447  1770 solver.cpp:219] Iteration 500 (385.013 iter/s, 0.259731s/100 iters), loss = 1.08422
I0428 20:21:30.888495  1770 solver.cpp:238]     Train net output #0: loss = 1.08422 (* 1 = 1.08422 loss)
I0428 20:21:30.888504  1770 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:31.050340  1770 solver.cpp:219] Iteration 600 (617.917 iter/s, 0.161834s/100 iters), loss = 0.957425
I0428 20:21:31.050370  1770 solver.cpp:238]     Train net output #0: loss = 0.957425 (* 1 = 0.957425 loss)
I0428 20:21:31.050379  1770 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:31.216073  1770 solver.cpp:219] Iteration 700 (603.547 iter/s, 0.165687s/100 iters), loss = 1.22443
I0428 20:21:31.216117  1770 solver.cpp:238]     Train net output #0: loss = 1.22443 (* 1 = 1.22443 loss)
I0428 20:21:31.216128  1770 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:31.394528  1770 solver.cpp:219] Iteration 800 (560.537 iter/s, 0.1784s/100 iters), loss = 1.15325
I0428 20:21:31.394567  1770 solver.cpp:238]     Train net output #0: loss = 1.15325 (* 1 = 1.15325 loss)
I0428 20:21:31.394577  1770 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:31.571316  1770 solver.cpp:219] Iteration 900 (565.825 iter/s, 0.176733s/100 iters), loss = 0.833731
I0428 20:21:31.571357  1770 solver.cpp:238]     Train net output #0: loss = 0.833731 (* 1 = 0.833731 loss)
I0428 20:21:31.571368  1770 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:31.630759  1776 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:31.750957  1770 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:31.753499  1770 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:31.755134  1770 solver.cpp:311] Iteration 1000, loss = 1.10186
I0428 20:21:31.755161  1770 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:31.835220  1777 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:31.836238  1770 solver.cpp:398]     Test net output #0: accuracy = 0.6964
I0428 20:21:31.836274  1770 solver.cpp:398]     Test net output #1: loss = 0.945304 (* 1 = 0.945304 loss)
I0428 20:21:31.836282  1770 solver.cpp:316] Optimization Done.
I0428 20:21:31.836284  1770 caffe.cpp:259] Optimization Done.
