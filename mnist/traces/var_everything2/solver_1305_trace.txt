I0428 20:17:52.758196  1007 caffe.cpp:218] Using GPUs 0
I0428 20:17:52.793994  1007 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:53.248775  1007 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1305.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:53.248965  1007 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1305.prototxt
I0428 20:17:53.249377  1007 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:53.249409  1007 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:53.249487  1007 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:53.249550  1007 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:53.249629  1007 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:53.249647  1007 net.cpp:86] Creating Layer mnist
I0428 20:17:53.249655  1007 net.cpp:382] mnist -> data
I0428 20:17:53.249672  1007 net.cpp:382] mnist -> label
I0428 20:17:53.250587  1007 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:53.252954  1007 net.cpp:124] Setting up mnist
I0428 20:17:53.252985  1007 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:53.252990  1007 net.cpp:131] Top shape: 64 (64)
I0428 20:17:53.252993  1007 net.cpp:139] Memory required for data: 200960
I0428 20:17:53.253000  1007 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:53.253013  1007 net.cpp:86] Creating Layer conv0
I0428 20:17:53.253031  1007 net.cpp:408] conv0 <- data
I0428 20:17:53.253041  1007 net.cpp:382] conv0 -> conv0
I0428 20:17:53.489327  1007 net.cpp:124] Setting up conv0
I0428 20:17:53.489353  1007 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:53.489357  1007 net.cpp:139] Memory required for data: 7573760
I0428 20:17:53.489372  1007 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:53.489383  1007 net.cpp:86] Creating Layer pool0
I0428 20:17:53.489387  1007 net.cpp:408] pool0 <- conv0
I0428 20:17:53.489393  1007 net.cpp:382] pool0 -> pool0
I0428 20:17:53.489455  1007 net.cpp:124] Setting up pool0
I0428 20:17:53.489462  1007 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:53.489465  1007 net.cpp:139] Memory required for data: 9416960
I0428 20:17:53.489467  1007 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:53.489478  1007 net.cpp:86] Creating Layer conv1
I0428 20:17:53.489481  1007 net.cpp:408] conv1 <- pool0
I0428 20:17:53.489488  1007 net.cpp:382] conv1 -> conv1
I0428 20:17:53.492477  1007 net.cpp:124] Setting up conv1
I0428 20:17:53.492507  1007 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:53.492511  1007 net.cpp:139] Memory required for data: 9580800
I0428 20:17:53.492519  1007 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:53.492528  1007 net.cpp:86] Creating Layer pool1
I0428 20:17:53.492532  1007 net.cpp:408] pool1 <- conv1
I0428 20:17:53.492537  1007 net.cpp:382] pool1 -> pool1
I0428 20:17:53.492591  1007 net.cpp:124] Setting up pool1
I0428 20:17:53.492597  1007 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:53.492600  1007 net.cpp:139] Memory required for data: 9621760
I0428 20:17:53.492604  1007 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:53.492611  1007 net.cpp:86] Creating Layer ip1
I0428 20:17:53.492615  1007 net.cpp:408] ip1 <- pool1
I0428 20:17:53.492619  1007 net.cpp:382] ip1 -> ip1
I0428 20:17:53.492733  1007 net.cpp:124] Setting up ip1
I0428 20:17:53.492740  1007 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:53.492743  1007 net.cpp:139] Memory required for data: 9624320
I0428 20:17:53.492750  1007 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:53.492756  1007 net.cpp:86] Creating Layer relu1
I0428 20:17:53.492760  1007 net.cpp:408] relu1 <- ip1
I0428 20:17:53.492765  1007 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:53.492980  1007 net.cpp:124] Setting up relu1
I0428 20:17:53.492990  1007 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:53.492993  1007 net.cpp:139] Memory required for data: 9626880
I0428 20:17:53.492996  1007 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:53.493005  1007 net.cpp:86] Creating Layer ip2
I0428 20:17:53.493007  1007 net.cpp:408] ip2 <- ip1
I0428 20:17:53.493012  1007 net.cpp:382] ip2 -> ip2
I0428 20:17:53.493119  1007 net.cpp:124] Setting up ip2
I0428 20:17:53.493125  1007 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:53.493129  1007 net.cpp:139] Memory required for data: 9639680
I0428 20:17:53.493134  1007 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:53.493141  1007 net.cpp:86] Creating Layer relu2
I0428 20:17:53.493145  1007 net.cpp:408] relu2 <- ip2
I0428 20:17:53.493149  1007 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:53.493885  1007 net.cpp:124] Setting up relu2
I0428 20:17:53.493916  1007 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:53.493919  1007 net.cpp:139] Memory required for data: 9652480
I0428 20:17:53.493922  1007 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:53.493929  1007 net.cpp:86] Creating Layer ip3
I0428 20:17:53.493932  1007 net.cpp:408] ip3 <- ip2
I0428 20:17:53.493938  1007 net.cpp:382] ip3 -> ip3
I0428 20:17:53.494045  1007 net.cpp:124] Setting up ip3
I0428 20:17:53.494068  1007 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:53.494086  1007 net.cpp:139] Memory required for data: 9655040
I0428 20:17:53.494096  1007 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:53.494102  1007 net.cpp:86] Creating Layer relu3
I0428 20:17:53.494104  1007 net.cpp:408] relu3 <- ip3
I0428 20:17:53.494109  1007 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:53.494316  1007 net.cpp:124] Setting up relu3
I0428 20:17:53.494326  1007 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:53.494330  1007 net.cpp:139] Memory required for data: 9657600
I0428 20:17:53.494333  1007 layer_factory.hpp:77] Creating layer loss
I0428 20:17:53.494340  1007 net.cpp:86] Creating Layer loss
I0428 20:17:53.494343  1007 net.cpp:408] loss <- ip3
I0428 20:17:53.494348  1007 net.cpp:408] loss <- label
I0428 20:17:53.494354  1007 net.cpp:382] loss -> loss
I0428 20:17:53.494369  1007 layer_factory.hpp:77] Creating layer loss
I0428 20:17:53.494652  1007 net.cpp:124] Setting up loss
I0428 20:17:53.494660  1007 net.cpp:131] Top shape: (1)
I0428 20:17:53.494663  1007 net.cpp:134]     with loss weight 1
I0428 20:17:53.494676  1007 net.cpp:139] Memory required for data: 9657604
I0428 20:17:53.494680  1007 net.cpp:200] loss needs backward computation.
I0428 20:17:53.494683  1007 net.cpp:200] relu3 needs backward computation.
I0428 20:17:53.494686  1007 net.cpp:200] ip3 needs backward computation.
I0428 20:17:53.494688  1007 net.cpp:200] relu2 needs backward computation.
I0428 20:17:53.494691  1007 net.cpp:200] ip2 needs backward computation.
I0428 20:17:53.494694  1007 net.cpp:200] relu1 needs backward computation.
I0428 20:17:53.494696  1007 net.cpp:200] ip1 needs backward computation.
I0428 20:17:53.494699  1007 net.cpp:200] pool1 needs backward computation.
I0428 20:17:53.494702  1007 net.cpp:200] conv1 needs backward computation.
I0428 20:17:53.494705  1007 net.cpp:200] pool0 needs backward computation.
I0428 20:17:53.494707  1007 net.cpp:200] conv0 needs backward computation.
I0428 20:17:53.494711  1007 net.cpp:202] mnist does not need backward computation.
I0428 20:17:53.494714  1007 net.cpp:244] This network produces output loss
I0428 20:17:53.494724  1007 net.cpp:257] Network initialization done.
I0428 20:17:53.495110  1007 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1305.prototxt
I0428 20:17:53.495153  1007 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:53.495254  1007 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:53.495345  1007 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:53.495390  1007 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:53.495404  1007 net.cpp:86] Creating Layer mnist
I0428 20:17:53.495409  1007 net.cpp:382] mnist -> data
I0428 20:17:53.495432  1007 net.cpp:382] mnist -> label
I0428 20:17:53.495550  1007 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:53.497599  1007 net.cpp:124] Setting up mnist
I0428 20:17:53.497628  1007 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:53.497633  1007 net.cpp:131] Top shape: 100 (100)
I0428 20:17:53.497637  1007 net.cpp:139] Memory required for data: 314000
I0428 20:17:53.497640  1007 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:53.497650  1007 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:53.497653  1007 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:53.497659  1007 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:53.497665  1007 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:53.497769  1007 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:53.497777  1007 net.cpp:131] Top shape: 100 (100)
I0428 20:17:53.497781  1007 net.cpp:131] Top shape: 100 (100)
I0428 20:17:53.497784  1007 net.cpp:139] Memory required for data: 314800
I0428 20:17:53.497787  1007 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:53.497797  1007 net.cpp:86] Creating Layer conv0
I0428 20:17:53.497802  1007 net.cpp:408] conv0 <- data
I0428 20:17:53.497807  1007 net.cpp:382] conv0 -> conv0
I0428 20:17:53.499528  1007 net.cpp:124] Setting up conv0
I0428 20:17:53.499541  1007 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:53.499560  1007 net.cpp:139] Memory required for data: 11834800
I0428 20:17:53.499585  1007 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:53.499593  1007 net.cpp:86] Creating Layer pool0
I0428 20:17:53.499595  1007 net.cpp:408] pool0 <- conv0
I0428 20:17:53.499599  1007 net.cpp:382] pool0 -> pool0
I0428 20:17:53.499675  1007 net.cpp:124] Setting up pool0
I0428 20:17:53.499683  1007 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:53.499687  1007 net.cpp:139] Memory required for data: 14714800
I0428 20:17:53.499691  1007 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:53.499699  1007 net.cpp:86] Creating Layer conv1
I0428 20:17:53.499703  1007 net.cpp:408] conv1 <- pool0
I0428 20:17:53.499709  1007 net.cpp:382] conv1 -> conv1
I0428 20:17:53.501456  1007 net.cpp:124] Setting up conv1
I0428 20:17:53.501485  1007 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:53.501488  1007 net.cpp:139] Memory required for data: 14970800
I0428 20:17:53.501497  1007 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:53.501503  1007 net.cpp:86] Creating Layer pool1
I0428 20:17:53.501508  1007 net.cpp:408] pool1 <- conv1
I0428 20:17:53.501514  1007 net.cpp:382] pool1 -> pool1
I0428 20:17:53.501567  1007 net.cpp:124] Setting up pool1
I0428 20:17:53.501574  1007 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:53.501577  1007 net.cpp:139] Memory required for data: 15034800
I0428 20:17:53.501580  1007 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:53.501586  1007 net.cpp:86] Creating Layer ip1
I0428 20:17:53.501590  1007 net.cpp:408] ip1 <- pool1
I0428 20:17:53.501595  1007 net.cpp:382] ip1 -> ip1
I0428 20:17:53.501710  1007 net.cpp:124] Setting up ip1
I0428 20:17:53.501718  1007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:53.501732  1007 net.cpp:139] Memory required for data: 15038800
I0428 20:17:53.501740  1007 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:53.501745  1007 net.cpp:86] Creating Layer relu1
I0428 20:17:53.501749  1007 net.cpp:408] relu1 <- ip1
I0428 20:17:53.501754  1007 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:53.501971  1007 net.cpp:124] Setting up relu1
I0428 20:17:53.501979  1007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:53.501983  1007 net.cpp:139] Memory required for data: 15042800
I0428 20:17:53.501986  1007 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:53.501993  1007 net.cpp:86] Creating Layer ip2
I0428 20:17:53.501997  1007 net.cpp:408] ip2 <- ip1
I0428 20:17:53.502002  1007 net.cpp:382] ip2 -> ip2
I0428 20:17:53.502148  1007 net.cpp:124] Setting up ip2
I0428 20:17:53.502156  1007 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:53.502158  1007 net.cpp:139] Memory required for data: 15062800
I0428 20:17:53.502164  1007 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:53.502169  1007 net.cpp:86] Creating Layer relu2
I0428 20:17:53.502172  1007 net.cpp:408] relu2 <- ip2
I0428 20:17:53.502177  1007 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:53.502389  1007 net.cpp:124] Setting up relu2
I0428 20:17:53.502398  1007 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:53.502403  1007 net.cpp:139] Memory required for data: 15082800
I0428 20:17:53.502420  1007 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:53.502427  1007 net.cpp:86] Creating Layer ip3
I0428 20:17:53.502430  1007 net.cpp:408] ip3 <- ip2
I0428 20:17:53.502455  1007 net.cpp:382] ip3 -> ip3
I0428 20:17:53.502578  1007 net.cpp:124] Setting up ip3
I0428 20:17:53.502586  1007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:53.502589  1007 net.cpp:139] Memory required for data: 15086800
I0428 20:17:53.502599  1007 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:53.502604  1007 net.cpp:86] Creating Layer relu3
I0428 20:17:53.502606  1007 net.cpp:408] relu3 <- ip3
I0428 20:17:53.502610  1007 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:53.503504  1007 net.cpp:124] Setting up relu3
I0428 20:17:53.503515  1007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:53.503533  1007 net.cpp:139] Memory required for data: 15090800
I0428 20:17:53.503536  1007 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:17:53.503543  1007 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:17:53.503546  1007 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:17:53.503551  1007 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:17:53.503557  1007 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:17:53.503602  1007 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:17:53.503607  1007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:53.503610  1007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:53.503613  1007 net.cpp:139] Memory required for data: 15098800
I0428 20:17:53.503617  1007 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:53.503623  1007 net.cpp:86] Creating Layer accuracy
I0428 20:17:53.503626  1007 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:17:53.503630  1007 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:53.503635  1007 net.cpp:382] accuracy -> accuracy
I0428 20:17:53.503643  1007 net.cpp:124] Setting up accuracy
I0428 20:17:53.503646  1007 net.cpp:131] Top shape: (1)
I0428 20:17:53.503649  1007 net.cpp:139] Memory required for data: 15098804
I0428 20:17:53.503653  1007 layer_factory.hpp:77] Creating layer loss
I0428 20:17:53.503657  1007 net.cpp:86] Creating Layer loss
I0428 20:17:53.503660  1007 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:17:53.503664  1007 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:53.503669  1007 net.cpp:382] loss -> loss
I0428 20:17:53.503675  1007 layer_factory.hpp:77] Creating layer loss
I0428 20:17:53.503947  1007 net.cpp:124] Setting up loss
I0428 20:17:53.503955  1007 net.cpp:131] Top shape: (1)
I0428 20:17:53.503958  1007 net.cpp:134]     with loss weight 1
I0428 20:17:53.503990  1007 net.cpp:139] Memory required for data: 15098808
I0428 20:17:53.503994  1007 net.cpp:200] loss needs backward computation.
I0428 20:17:53.503998  1007 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:53.504003  1007 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:17:53.504005  1007 net.cpp:200] relu3 needs backward computation.
I0428 20:17:53.504009  1007 net.cpp:200] ip3 needs backward computation.
I0428 20:17:53.504017  1007 net.cpp:200] relu2 needs backward computation.
I0428 20:17:53.504020  1007 net.cpp:200] ip2 needs backward computation.
I0428 20:17:53.504022  1007 net.cpp:200] relu1 needs backward computation.
I0428 20:17:53.504026  1007 net.cpp:200] ip1 needs backward computation.
I0428 20:17:53.504029  1007 net.cpp:200] pool1 needs backward computation.
I0428 20:17:53.504032  1007 net.cpp:200] conv1 needs backward computation.
I0428 20:17:53.504035  1007 net.cpp:200] pool0 needs backward computation.
I0428 20:17:53.504039  1007 net.cpp:200] conv0 needs backward computation.
I0428 20:17:53.504042  1007 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:53.504046  1007 net.cpp:202] mnist does not need backward computation.
I0428 20:17:53.504048  1007 net.cpp:244] This network produces output accuracy
I0428 20:17:53.504052  1007 net.cpp:244] This network produces output loss
I0428 20:17:53.504063  1007 net.cpp:257] Network initialization done.
I0428 20:17:53.504106  1007 solver.cpp:56] Solver scaffolding done.
I0428 20:17:53.504494  1007 caffe.cpp:248] Starting Optimization
I0428 20:17:53.504499  1007 solver.cpp:273] Solving LeNet
I0428 20:17:53.504503  1007 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:53.505389  1007 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:53.513644  1007 blocking_queue.cpp:49] Waiting for data
I0428 20:17:53.574371  1014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:53.575354  1007 solver.cpp:398]     Test net output #0: accuracy = 0.1178
I0428 20:17:53.575387  1007 solver.cpp:398]     Test net output #1: loss = 2.31069 (* 1 = 2.31069 loss)
I0428 20:17:53.579797  1007 solver.cpp:219] Iteration 0 (0 iter/s, 0.0752507s/100 iters), loss = 2.31316
I0428 20:17:53.579835  1007 solver.cpp:238]     Train net output #0: loss = 2.31316 (* 1 = 2.31316 loss)
I0428 20:17:53.579848  1007 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:53.698320  1007 solver.cpp:219] Iteration 100 (843.981 iter/s, 0.118486s/100 iters), loss = 0.821129
I0428 20:17:53.698359  1007 solver.cpp:238]     Train net output #0: loss = 0.821129 (* 1 = 0.821129 loss)
I0428 20:17:53.698365  1007 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:53.817840  1007 solver.cpp:219] Iteration 200 (836.922 iter/s, 0.119485s/100 iters), loss = 0.583509
I0428 20:17:53.817879  1007 solver.cpp:238]     Train net output #0: loss = 0.583509 (* 1 = 0.583509 loss)
I0428 20:17:53.817885  1007 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:53.937196  1007 solver.cpp:219] Iteration 300 (838.078 iter/s, 0.119321s/100 iters), loss = 0.427712
I0428 20:17:53.937250  1007 solver.cpp:238]     Train net output #0: loss = 0.427712 (* 1 = 0.427712 loss)
I0428 20:17:53.937258  1007 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:54.054903  1007 solver.cpp:219] Iteration 400 (849.931 iter/s, 0.117657s/100 iters), loss = 0.336464
I0428 20:17:54.054942  1007 solver.cpp:238]     Train net output #0: loss = 0.336464 (* 1 = 0.336464 loss)
I0428 20:17:54.054949  1007 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:54.173171  1007 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:54.244843  1014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:54.246052  1007 solver.cpp:398]     Test net output #0: accuracy = 0.8363
I0428 20:17:54.246073  1007 solver.cpp:398]     Test net output #1: loss = 0.444743 (* 1 = 0.444743 loss)
I0428 20:17:54.247341  1007 solver.cpp:219] Iteration 500 (519.752 iter/s, 0.192399s/100 iters), loss = 0.418364
I0428 20:17:54.247396  1007 solver.cpp:238]     Train net output #0: loss = 0.418364 (* 1 = 0.418364 loss)
I0428 20:17:54.247403  1007 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:54.366557  1007 solver.cpp:219] Iteration 600 (839.159 iter/s, 0.119167s/100 iters), loss = 0.492396
I0428 20:17:54.366600  1007 solver.cpp:238]     Train net output #0: loss = 0.492396 (* 1 = 0.492396 loss)
I0428 20:17:54.366606  1007 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:54.489959  1007 solver.cpp:219] Iteration 700 (810.613 iter/s, 0.123363s/100 iters), loss = 0.458841
I0428 20:17:54.490002  1007 solver.cpp:238]     Train net output #0: loss = 0.458841 (* 1 = 0.458841 loss)
I0428 20:17:54.490010  1007 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:54.616137  1007 solver.cpp:219] Iteration 800 (792.78 iter/s, 0.126138s/100 iters), loss = 0.510882
I0428 20:17:54.616163  1007 solver.cpp:238]     Train net output #0: loss = 0.510882 (* 1 = 0.510882 loss)
I0428 20:17:54.616170  1007 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:54.740438  1007 solver.cpp:219] Iteration 900 (804.742 iter/s, 0.124263s/100 iters), loss = 0.533156
I0428 20:17:54.740466  1007 solver.cpp:238]     Train net output #0: loss = 0.533156 (* 1 = 0.533156 loss)
I0428 20:17:54.740473  1007 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:54.782007  1013 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:54.863427  1007 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:54.864516  1007 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:54.865296  1007 solver.cpp:311] Iteration 1000, loss = 0.366052
I0428 20:17:54.865314  1007 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:54.930795  1014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:54.933135  1007 solver.cpp:398]     Test net output #0: accuracy = 0.8602
I0428 20:17:54.933154  1007 solver.cpp:398]     Test net output #1: loss = 0.346265 (* 1 = 0.346265 loss)
I0428 20:17:54.933159  1007 solver.cpp:316] Optimization Done.
I0428 20:17:54.933162  1007 caffe.cpp:259] Optimization Done.
