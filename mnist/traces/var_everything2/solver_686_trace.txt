I0428 19:53:23.181221 27756 caffe.cpp:218] Using GPUs 0
I0428 19:53:23.217414 27756 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:23.728129 27756 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test686.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:23.728268 27756 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test686.prototxt
I0428 19:53:23.728680 27756 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:23.728701 27756 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:23.728804 27756 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:23.728893 27756 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:23.728992 27756 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:23.729017 27756 net.cpp:86] Creating Layer mnist
I0428 19:53:23.729025 27756 net.cpp:382] mnist -> data
I0428 19:53:23.729048 27756 net.cpp:382] mnist -> label
I0428 19:53:23.730190 27756 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:23.732753 27756 net.cpp:124] Setting up mnist
I0428 19:53:23.732770 27756 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:23.732776 27756 net.cpp:131] Top shape: 64 (64)
I0428 19:53:23.732779 27756 net.cpp:139] Memory required for data: 200960
I0428 19:53:23.732786 27756 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:23.732803 27756 net.cpp:86] Creating Layer conv0
I0428 19:53:23.732832 27756 net.cpp:408] conv0 <- data
I0428 19:53:23.732846 27756 net.cpp:382] conv0 -> conv0
I0428 19:53:24.007995 27756 net.cpp:124] Setting up conv0
I0428 19:53:24.008038 27756 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:24.008043 27756 net.cpp:139] Memory required for data: 938240
I0428 19:53:24.008059 27756 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:24.008086 27756 net.cpp:86] Creating Layer pool0
I0428 19:53:24.008091 27756 net.cpp:408] pool0 <- conv0
I0428 19:53:24.008096 27756 net.cpp:382] pool0 -> pool0
I0428 19:53:24.008152 27756 net.cpp:124] Setting up pool0
I0428 19:53:24.008158 27756 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:24.008162 27756 net.cpp:139] Memory required for data: 1122560
I0428 19:53:24.008165 27756 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:24.008175 27756 net.cpp:86] Creating Layer conv1
I0428 19:53:24.008178 27756 net.cpp:408] conv1 <- pool0
I0428 19:53:24.008183 27756 net.cpp:382] conv1 -> conv1
I0428 19:53:24.011059 27756 net.cpp:124] Setting up conv1
I0428 19:53:24.011088 27756 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:24.011092 27756 net.cpp:139] Memory required for data: 1941760
I0428 19:53:24.011101 27756 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:24.011109 27756 net.cpp:86] Creating Layer pool1
I0428 19:53:24.011128 27756 net.cpp:408] pool1 <- conv1
I0428 19:53:24.011134 27756 net.cpp:382] pool1 -> pool1
I0428 19:53:24.011181 27756 net.cpp:124] Setting up pool1
I0428 19:53:24.011190 27756 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:24.011193 27756 net.cpp:139] Memory required for data: 2146560
I0428 19:53:24.011196 27756 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:24.011204 27756 net.cpp:86] Creating Layer ip1
I0428 19:53:24.011207 27756 net.cpp:408] ip1 <- pool1
I0428 19:53:24.011212 27756 net.cpp:382] ip1 -> ip1
I0428 19:53:24.011441 27756 net.cpp:124] Setting up ip1
I0428 19:53:24.011448 27756 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:24.011451 27756 net.cpp:139] Memory required for data: 2152960
I0428 19:53:24.011458 27756 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:24.011464 27756 net.cpp:86] Creating Layer relu1
I0428 19:53:24.011467 27756 net.cpp:408] relu1 <- ip1
I0428 19:53:24.011472 27756 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:24.011644 27756 net.cpp:124] Setting up relu1
I0428 19:53:24.011653 27756 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:24.011656 27756 net.cpp:139] Memory required for data: 2159360
I0428 19:53:24.011659 27756 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:24.011667 27756 net.cpp:86] Creating Layer ip2
I0428 19:53:24.011670 27756 net.cpp:408] ip2 <- ip1
I0428 19:53:24.011675 27756 net.cpp:382] ip2 -> ip2
I0428 19:53:24.011771 27756 net.cpp:124] Setting up ip2
I0428 19:53:24.011778 27756 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:24.011780 27756 net.cpp:139] Memory required for data: 2161920
I0428 19:53:24.011785 27756 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:24.011792 27756 net.cpp:86] Creating Layer relu2
I0428 19:53:24.011795 27756 net.cpp:408] relu2 <- ip2
I0428 19:53:24.011801 27756 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:24.012555 27756 net.cpp:124] Setting up relu2
I0428 19:53:24.012567 27756 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:24.012588 27756 net.cpp:139] Memory required for data: 2164480
I0428 19:53:24.012590 27756 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:24.012599 27756 net.cpp:86] Creating Layer ip3
I0428 19:53:24.012604 27756 net.cpp:408] ip3 <- ip2
I0428 19:53:24.012612 27756 net.cpp:382] ip3 -> ip3
I0428 19:53:24.012740 27756 net.cpp:124] Setting up ip3
I0428 19:53:24.012749 27756 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:24.012753 27756 net.cpp:139] Memory required for data: 2167040
I0428 19:53:24.012760 27756 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:24.012768 27756 net.cpp:86] Creating Layer relu3
I0428 19:53:24.012774 27756 net.cpp:408] relu3 <- ip3
I0428 19:53:24.012779 27756 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:24.013007 27756 net.cpp:124] Setting up relu3
I0428 19:53:24.013017 27756 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:24.013021 27756 net.cpp:139] Memory required for data: 2169600
I0428 19:53:24.013025 27756 layer_factory.hpp:77] Creating layer loss
I0428 19:53:24.013031 27756 net.cpp:86] Creating Layer loss
I0428 19:53:24.013034 27756 net.cpp:408] loss <- ip3
I0428 19:53:24.013039 27756 net.cpp:408] loss <- label
I0428 19:53:24.013044 27756 net.cpp:382] loss -> loss
I0428 19:53:24.013062 27756 layer_factory.hpp:77] Creating layer loss
I0428 19:53:24.013373 27756 net.cpp:124] Setting up loss
I0428 19:53:24.013382 27756 net.cpp:131] Top shape: (1)
I0428 19:53:24.013402 27756 net.cpp:134]     with loss weight 1
I0428 19:53:24.013420 27756 net.cpp:139] Memory required for data: 2169604
I0428 19:53:24.013423 27756 net.cpp:200] loss needs backward computation.
I0428 19:53:24.013427 27756 net.cpp:200] relu3 needs backward computation.
I0428 19:53:24.013430 27756 net.cpp:200] ip3 needs backward computation.
I0428 19:53:24.013433 27756 net.cpp:200] relu2 needs backward computation.
I0428 19:53:24.013437 27756 net.cpp:200] ip2 needs backward computation.
I0428 19:53:24.013440 27756 net.cpp:200] relu1 needs backward computation.
I0428 19:53:24.013444 27756 net.cpp:200] ip1 needs backward computation.
I0428 19:53:24.013448 27756 net.cpp:200] pool1 needs backward computation.
I0428 19:53:24.013470 27756 net.cpp:200] conv1 needs backward computation.
I0428 19:53:24.013476 27756 net.cpp:200] pool0 needs backward computation.
I0428 19:53:24.013495 27756 net.cpp:200] conv0 needs backward computation.
I0428 19:53:24.013501 27756 net.cpp:202] mnist does not need backward computation.
I0428 19:53:24.013505 27756 net.cpp:244] This network produces output loss
I0428 19:53:24.013520 27756 net.cpp:257] Network initialization done.
I0428 19:53:24.013891 27756 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test686.prototxt
I0428 19:53:24.013934 27756 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:24.014026 27756 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:24.014107 27756 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:24.014156 27756 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:24.014168 27756 net.cpp:86] Creating Layer mnist
I0428 19:53:24.014175 27756 net.cpp:382] mnist -> data
I0428 19:53:24.014183 27756 net.cpp:382] mnist -> label
I0428 19:53:24.014286 27756 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:24.016528 27756 net.cpp:124] Setting up mnist
I0428 19:53:24.016558 27756 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:24.016564 27756 net.cpp:131] Top shape: 100 (100)
I0428 19:53:24.016567 27756 net.cpp:139] Memory required for data: 314000
I0428 19:53:24.016571 27756 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:24.016597 27756 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:24.016600 27756 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:24.016607 27756 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:24.016629 27756 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:24.016727 27756 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:24.016736 27756 net.cpp:131] Top shape: 100 (100)
I0428 19:53:24.016739 27756 net.cpp:131] Top shape: 100 (100)
I0428 19:53:24.016742 27756 net.cpp:139] Memory required for data: 314800
I0428 19:53:24.016759 27756 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:24.016770 27756 net.cpp:86] Creating Layer conv0
I0428 19:53:24.016773 27756 net.cpp:408] conv0 <- data
I0428 19:53:24.016778 27756 net.cpp:382] conv0 -> conv0
I0428 19:53:24.018389 27756 net.cpp:124] Setting up conv0
I0428 19:53:24.018404 27756 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:24.018409 27756 net.cpp:139] Memory required for data: 1466800
I0428 19:53:24.018417 27756 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:24.018424 27756 net.cpp:86] Creating Layer pool0
I0428 19:53:24.018429 27756 net.cpp:408] pool0 <- conv0
I0428 19:53:24.018434 27756 net.cpp:382] pool0 -> pool0
I0428 19:53:24.018476 27756 net.cpp:124] Setting up pool0
I0428 19:53:24.018482 27756 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:24.018484 27756 net.cpp:139] Memory required for data: 1754800
I0428 19:53:24.018487 27756 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:24.018497 27756 net.cpp:86] Creating Layer conv1
I0428 19:53:24.018501 27756 net.cpp:408] conv1 <- pool0
I0428 19:53:24.018507 27756 net.cpp:382] conv1 -> conv1
I0428 19:53:24.020243 27756 net.cpp:124] Setting up conv1
I0428 19:53:24.020259 27756 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:24.020262 27756 net.cpp:139] Memory required for data: 3034800
I0428 19:53:24.020288 27756 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:24.020295 27756 net.cpp:86] Creating Layer pool1
I0428 19:53:24.020298 27756 net.cpp:408] pool1 <- conv1
I0428 19:53:24.020305 27756 net.cpp:382] pool1 -> pool1
I0428 19:53:24.020341 27756 net.cpp:124] Setting up pool1
I0428 19:53:24.020349 27756 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:24.020352 27756 net.cpp:139] Memory required for data: 3354800
I0428 19:53:24.020355 27756 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:24.020361 27756 net.cpp:86] Creating Layer ip1
I0428 19:53:24.020365 27756 net.cpp:408] ip1 <- pool1
I0428 19:53:24.020375 27756 net.cpp:382] ip1 -> ip1
I0428 19:53:24.020591 27756 net.cpp:124] Setting up ip1
I0428 19:53:24.020599 27756 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:24.020612 27756 net.cpp:139] Memory required for data: 3364800
I0428 19:53:24.020619 27756 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:24.020627 27756 net.cpp:86] Creating Layer relu1
I0428 19:53:24.020629 27756 net.cpp:408] relu1 <- ip1
I0428 19:53:24.020637 27756 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:24.020956 27756 net.cpp:124] Setting up relu1
I0428 19:53:24.020967 27756 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:24.020970 27756 net.cpp:139] Memory required for data: 3374800
I0428 19:53:24.020974 27756 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:24.020983 27756 net.cpp:86] Creating Layer ip2
I0428 19:53:24.020987 27756 net.cpp:408] ip2 <- ip1
I0428 19:53:24.020994 27756 net.cpp:382] ip2 -> ip2
I0428 19:53:24.021114 27756 net.cpp:124] Setting up ip2
I0428 19:53:24.021122 27756 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:24.021126 27756 net.cpp:139] Memory required for data: 3378800
I0428 19:53:24.021131 27756 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:24.021136 27756 net.cpp:86] Creating Layer relu2
I0428 19:53:24.021140 27756 net.cpp:408] relu2 <- ip2
I0428 19:53:24.021144 27756 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:24.021378 27756 net.cpp:124] Setting up relu2
I0428 19:53:24.021389 27756 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:24.021392 27756 net.cpp:139] Memory required for data: 3382800
I0428 19:53:24.021395 27756 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:24.021401 27756 net.cpp:86] Creating Layer ip3
I0428 19:53:24.021404 27756 net.cpp:408] ip3 <- ip2
I0428 19:53:24.021410 27756 net.cpp:382] ip3 -> ip3
I0428 19:53:24.021523 27756 net.cpp:124] Setting up ip3
I0428 19:53:24.021531 27756 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:24.021534 27756 net.cpp:139] Memory required for data: 3386800
I0428 19:53:24.021543 27756 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:24.021546 27756 net.cpp:86] Creating Layer relu3
I0428 19:53:24.021559 27756 net.cpp:408] relu3 <- ip3
I0428 19:53:24.021564 27756 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:24.022413 27756 net.cpp:124] Setting up relu3
I0428 19:53:24.022433 27756 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:24.022438 27756 net.cpp:139] Memory required for data: 3390800
I0428 19:53:24.022440 27756 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:24.022445 27756 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:24.022449 27756 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:24.022454 27756 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:24.022460 27756 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:24.022511 27756 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:24.022516 27756 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:24.022519 27756 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:24.022522 27756 net.cpp:139] Memory required for data: 3398800
I0428 19:53:24.022526 27756 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:24.022531 27756 net.cpp:86] Creating Layer accuracy
I0428 19:53:24.022534 27756 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:24.022538 27756 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:24.022544 27756 net.cpp:382] accuracy -> accuracy
I0428 19:53:24.022555 27756 net.cpp:124] Setting up accuracy
I0428 19:53:24.022578 27756 net.cpp:131] Top shape: (1)
I0428 19:53:24.022583 27756 net.cpp:139] Memory required for data: 3398804
I0428 19:53:24.022588 27756 layer_factory.hpp:77] Creating layer loss
I0428 19:53:24.022595 27756 net.cpp:86] Creating Layer loss
I0428 19:53:24.022600 27756 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:24.022606 27756 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:24.022619 27756 net.cpp:382] loss -> loss
I0428 19:53:24.022644 27756 layer_factory.hpp:77] Creating layer loss
I0428 19:53:24.022909 27756 net.cpp:124] Setting up loss
I0428 19:53:24.022920 27756 net.cpp:131] Top shape: (1)
I0428 19:53:24.022923 27756 net.cpp:134]     with loss weight 1
I0428 19:53:24.022929 27756 net.cpp:139] Memory required for data: 3398808
I0428 19:53:24.022943 27756 net.cpp:200] loss needs backward computation.
I0428 19:53:24.022948 27756 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:24.022950 27756 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:24.022953 27756 net.cpp:200] relu3 needs backward computation.
I0428 19:53:24.022956 27756 net.cpp:200] ip3 needs backward computation.
I0428 19:53:24.022966 27756 net.cpp:200] relu2 needs backward computation.
I0428 19:53:24.022969 27756 net.cpp:200] ip2 needs backward computation.
I0428 19:53:24.022972 27756 net.cpp:200] relu1 needs backward computation.
I0428 19:53:24.022974 27756 net.cpp:200] ip1 needs backward computation.
I0428 19:53:24.022977 27756 net.cpp:200] pool1 needs backward computation.
I0428 19:53:24.022980 27756 net.cpp:200] conv1 needs backward computation.
I0428 19:53:24.022984 27756 net.cpp:200] pool0 needs backward computation.
I0428 19:53:24.022986 27756 net.cpp:200] conv0 needs backward computation.
I0428 19:53:24.022995 27756 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:24.023000 27756 net.cpp:202] mnist does not need backward computation.
I0428 19:53:24.023001 27756 net.cpp:244] This network produces output accuracy
I0428 19:53:24.023005 27756 net.cpp:244] This network produces output loss
I0428 19:53:24.023032 27756 net.cpp:257] Network initialization done.
I0428 19:53:24.023074 27756 solver.cpp:56] Solver scaffolding done.
I0428 19:53:24.023453 27756 caffe.cpp:248] Starting Optimization
I0428 19:53:24.023461 27756 solver.cpp:273] Solving LeNet
I0428 19:53:24.023471 27756 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:24.023699 27756 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:24.028475 27756 blocking_queue.cpp:49] Waiting for data
I0428 19:53:24.100153 27763 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:24.100702 27756 solver.cpp:398]     Test net output #0: accuracy = 0.1702
I0428 19:53:24.100726 27756 solver.cpp:398]     Test net output #1: loss = 2.30241 (* 1 = 2.30241 loss)
I0428 19:53:24.103967 27756 solver.cpp:219] Iteration 0 (0 iter/s, 0.08047s/100 iters), loss = 2.30285
I0428 19:53:24.103991 27756 solver.cpp:238]     Train net output #0: loss = 2.30285 (* 1 = 2.30285 loss)
I0428 19:53:24.104017 27756 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:24.208451 27756 solver.cpp:219] Iteration 100 (957.432 iter/s, 0.104446s/100 iters), loss = 1.15071
I0428 19:53:24.208477 27756 solver.cpp:238]     Train net output #0: loss = 1.15071 (* 1 = 1.15071 loss)
I0428 19:53:24.208484 27756 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:24.309759 27756 solver.cpp:219] Iteration 200 (987.453 iter/s, 0.101271s/100 iters), loss = 0.745898
I0428 19:53:24.309783 27756 solver.cpp:238]     Train net output #0: loss = 0.745898 (* 1 = 0.745898 loss)
I0428 19:53:24.309804 27756 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:24.422520 27756 solver.cpp:219] Iteration 300 (887.131 iter/s, 0.112723s/100 iters), loss = 0.668602
I0428 19:53:24.422557 27756 solver.cpp:238]     Train net output #0: loss = 0.668602 (* 1 = 0.668602 loss)
I0428 19:53:24.422566 27756 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:24.527014 27756 solver.cpp:219] Iteration 400 (957.414 iter/s, 0.104448s/100 iters), loss = 0.383477
I0428 19:53:24.527041 27756 solver.cpp:238]     Train net output #0: loss = 0.383477 (* 1 = 0.383477 loss)
I0428 19:53:24.527050 27756 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:24.637784 27756 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:24.712167 27763 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:24.712708 27756 solver.cpp:398]     Test net output #0: accuracy = 0.9396
I0428 19:53:24.712735 27756 solver.cpp:398]     Test net output #1: loss = 0.212283 (* 1 = 0.212283 loss)
I0428 19:53:24.713932 27756 solver.cpp:219] Iteration 500 (535.126 iter/s, 0.186872s/100 iters), loss = 0.203724
I0428 19:53:24.713964 27756 solver.cpp:238]     Train net output #0: loss = 0.203724 (* 1 = 0.203724 loss)
I0428 19:53:24.714000 27756 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:24.823506 27756 solver.cpp:219] Iteration 600 (912.958 iter/s, 0.109534s/100 iters), loss = 0.120279
I0428 19:53:24.823532 27756 solver.cpp:238]     Train net output #0: loss = 0.120279 (* 1 = 0.120279 loss)
I0428 19:53:24.823539 27756 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:24.929800 27756 solver.cpp:219] Iteration 700 (941.111 iter/s, 0.106257s/100 iters), loss = 0.10005
I0428 19:53:24.929826 27756 solver.cpp:238]     Train net output #0: loss = 0.10005 (* 1 = 0.10005 loss)
I0428 19:53:24.929833 27756 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:25.034698 27756 solver.cpp:219] Iteration 800 (953.628 iter/s, 0.104863s/100 iters), loss = 0.336078
I0428 19:53:25.034734 27756 solver.cpp:238]     Train net output #0: loss = 0.336078 (* 1 = 0.336078 loss)
I0428 19:53:25.034740 27756 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:25.152276 27756 solver.cpp:219] Iteration 900 (850.776 iter/s, 0.11754s/100 iters), loss = 0.173145
I0428 19:53:25.152309 27756 solver.cpp:238]     Train net output #0: loss = 0.173145 (* 1 = 0.173145 loss)
I0428 19:53:25.152318 27756 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:25.189116 27762 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:25.259512 27756 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:25.260972 27756 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:25.261690 27756 solver.cpp:311] Iteration 1000, loss = 0.132474
I0428 19:53:25.261713 27756 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:25.337357 27763 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:25.337889 27756 solver.cpp:398]     Test net output #0: accuracy = 0.9681
I0428 19:53:25.337911 27756 solver.cpp:398]     Test net output #1: loss = 0.103387 (* 1 = 0.103387 loss)
I0428 19:53:25.337918 27756 solver.cpp:316] Optimization Done.
I0428 19:53:25.337923 27756 caffe.cpp:259] Optimization Done.
