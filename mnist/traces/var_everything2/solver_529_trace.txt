I0428 19:47:54.797127 26354 caffe.cpp:218] Using GPUs 0
I0428 19:47:54.829146 26354 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:55.271487 26354 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test529.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:55.271625 26354 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test529.prototxt
I0428 19:47:55.271975 26354 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:55.272008 26354 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:55.272094 26354 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:55.272182 26354 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:55.272285 26354 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:55.272312 26354 net.cpp:86] Creating Layer mnist
I0428 19:47:55.272322 26354 net.cpp:382] mnist -> data
I0428 19:47:55.272347 26354 net.cpp:382] mnist -> label
I0428 19:47:55.273564 26354 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:55.275744 26354 net.cpp:124] Setting up mnist
I0428 19:47:55.275776 26354 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:55.275784 26354 net.cpp:131] Top shape: 64 (64)
I0428 19:47:55.275789 26354 net.cpp:139] Memory required for data: 200960
I0428 19:47:55.275799 26354 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:55.275820 26354 net.cpp:86] Creating Layer conv0
I0428 19:47:55.275841 26354 net.cpp:408] conv0 <- data
I0428 19:47:55.275857 26354 net.cpp:382] conv0 -> conv0
I0428 19:47:55.507719 26354 net.cpp:124] Setting up conv0
I0428 19:47:55.507745 26354 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:55.507750 26354 net.cpp:139] Memory required for data: 938240
I0428 19:47:55.507786 26354 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:55.507802 26354 net.cpp:86] Creating Layer pool0
I0428 19:47:55.507813 26354 net.cpp:408] pool0 <- conv0
I0428 19:47:55.507822 26354 net.cpp:382] pool0 -> pool0
I0428 19:47:55.507877 26354 net.cpp:124] Setting up pool0
I0428 19:47:55.507886 26354 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:55.507891 26354 net.cpp:139] Memory required for data: 1122560
I0428 19:47:55.507896 26354 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:55.507911 26354 net.cpp:86] Creating Layer conv1
I0428 19:47:55.507917 26354 net.cpp:408] conv1 <- pool0
I0428 19:47:55.507926 26354 net.cpp:382] conv1 -> conv1
I0428 19:47:55.509889 26354 net.cpp:124] Setting up conv1
I0428 19:47:55.509907 26354 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:55.509912 26354 net.cpp:139] Memory required for data: 1155328
I0428 19:47:55.509927 26354 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:55.509938 26354 net.cpp:86] Creating Layer pool1
I0428 19:47:55.509946 26354 net.cpp:408] pool1 <- conv1
I0428 19:47:55.509955 26354 net.cpp:382] pool1 -> pool1
I0428 19:47:55.510015 26354 net.cpp:124] Setting up pool1
I0428 19:47:55.510025 26354 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:55.510030 26354 net.cpp:139] Memory required for data: 1163520
I0428 19:47:55.510035 26354 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:55.510061 26354 net.cpp:86] Creating Layer ip1
I0428 19:47:55.510066 26354 net.cpp:408] ip1 <- pool1
I0428 19:47:55.510074 26354 net.cpp:382] ip1 -> ip1
I0428 19:47:55.510179 26354 net.cpp:124] Setting up ip1
I0428 19:47:55.510188 26354 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:55.510193 26354 net.cpp:139] Memory required for data: 1169920
I0428 19:47:55.510205 26354 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:55.510215 26354 net.cpp:86] Creating Layer relu1
I0428 19:47:55.510223 26354 net.cpp:408] relu1 <- ip1
I0428 19:47:55.510231 26354 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:55.510397 26354 net.cpp:124] Setting up relu1
I0428 19:47:55.510407 26354 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:55.510412 26354 net.cpp:139] Memory required for data: 1176320
I0428 19:47:55.510417 26354 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:55.510427 26354 net.cpp:86] Creating Layer ip2
I0428 19:47:55.510434 26354 net.cpp:408] ip2 <- ip1
I0428 19:47:55.510442 26354 net.cpp:382] ip2 -> ip2
I0428 19:47:55.510540 26354 net.cpp:124] Setting up ip2
I0428 19:47:55.510550 26354 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:55.510555 26354 net.cpp:139] Memory required for data: 1178880
I0428 19:47:55.510563 26354 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:55.510572 26354 net.cpp:86] Creating Layer relu2
I0428 19:47:55.510578 26354 net.cpp:408] relu2 <- ip2
I0428 19:47:55.510586 26354 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:55.511380 26354 net.cpp:124] Setting up relu2
I0428 19:47:55.511394 26354 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:55.511399 26354 net.cpp:139] Memory required for data: 1181440
I0428 19:47:55.511405 26354 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:55.511416 26354 net.cpp:86] Creating Layer ip3
I0428 19:47:55.511422 26354 net.cpp:408] ip3 <- ip2
I0428 19:47:55.511431 26354 net.cpp:382] ip3 -> ip3
I0428 19:47:55.511546 26354 net.cpp:124] Setting up ip3
I0428 19:47:55.511556 26354 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:55.511561 26354 net.cpp:139] Memory required for data: 1184000
I0428 19:47:55.511574 26354 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:55.511584 26354 net.cpp:86] Creating Layer relu3
I0428 19:47:55.511590 26354 net.cpp:408] relu3 <- ip3
I0428 19:47:55.511596 26354 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:55.511761 26354 net.cpp:124] Setting up relu3
I0428 19:47:55.511770 26354 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:55.511776 26354 net.cpp:139] Memory required for data: 1186560
I0428 19:47:55.511780 26354 layer_factory.hpp:77] Creating layer loss
I0428 19:47:55.511790 26354 net.cpp:86] Creating Layer loss
I0428 19:47:55.511795 26354 net.cpp:408] loss <- ip3
I0428 19:47:55.511801 26354 net.cpp:408] loss <- label
I0428 19:47:55.511809 26354 net.cpp:382] loss -> loss
I0428 19:47:55.511831 26354 layer_factory.hpp:77] Creating layer loss
I0428 19:47:55.512089 26354 net.cpp:124] Setting up loss
I0428 19:47:55.512100 26354 net.cpp:131] Top shape: (1)
I0428 19:47:55.512105 26354 net.cpp:134]     with loss weight 1
I0428 19:47:55.512125 26354 net.cpp:139] Memory required for data: 1186564
I0428 19:47:55.512132 26354 net.cpp:200] loss needs backward computation.
I0428 19:47:55.512138 26354 net.cpp:200] relu3 needs backward computation.
I0428 19:47:55.512143 26354 net.cpp:200] ip3 needs backward computation.
I0428 19:47:55.512148 26354 net.cpp:200] relu2 needs backward computation.
I0428 19:47:55.512153 26354 net.cpp:200] ip2 needs backward computation.
I0428 19:47:55.512157 26354 net.cpp:200] relu1 needs backward computation.
I0428 19:47:55.512162 26354 net.cpp:200] ip1 needs backward computation.
I0428 19:47:55.512167 26354 net.cpp:200] pool1 needs backward computation.
I0428 19:47:55.512172 26354 net.cpp:200] conv1 needs backward computation.
I0428 19:47:55.512177 26354 net.cpp:200] pool0 needs backward computation.
I0428 19:47:55.512182 26354 net.cpp:200] conv0 needs backward computation.
I0428 19:47:55.512188 26354 net.cpp:202] mnist does not need backward computation.
I0428 19:47:55.512193 26354 net.cpp:244] This network produces output loss
I0428 19:47:55.512212 26354 net.cpp:257] Network initialization done.
I0428 19:47:55.512567 26354 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test529.prototxt
I0428 19:47:55.512599 26354 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:55.512696 26354 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:55.512853 26354 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:55.512938 26354 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:55.512959 26354 net.cpp:86] Creating Layer mnist
I0428 19:47:55.512967 26354 net.cpp:382] mnist -> data
I0428 19:47:55.512981 26354 net.cpp:382] mnist -> label
I0428 19:47:55.513120 26354 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:55.515347 26354 net.cpp:124] Setting up mnist
I0428 19:47:55.515391 26354 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:55.515400 26354 net.cpp:131] Top shape: 100 (100)
I0428 19:47:55.515420 26354 net.cpp:139] Memory required for data: 314000
I0428 19:47:55.515427 26354 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:55.515437 26354 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:55.515442 26354 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:55.515450 26354 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:55.515463 26354 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:55.515547 26354 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:55.515555 26354 net.cpp:131] Top shape: 100 (100)
I0428 19:47:55.515561 26354 net.cpp:131] Top shape: 100 (100)
I0428 19:47:55.515566 26354 net.cpp:139] Memory required for data: 314800
I0428 19:47:55.515573 26354 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:55.515588 26354 net.cpp:86] Creating Layer conv0
I0428 19:47:55.515595 26354 net.cpp:408] conv0 <- data
I0428 19:47:55.515604 26354 net.cpp:382] conv0 -> conv0
I0428 19:47:55.517365 26354 net.cpp:124] Setting up conv0
I0428 19:47:55.517382 26354 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:55.517388 26354 net.cpp:139] Memory required for data: 1466800
I0428 19:47:55.517406 26354 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:55.517416 26354 net.cpp:86] Creating Layer pool0
I0428 19:47:55.517422 26354 net.cpp:408] pool0 <- conv0
I0428 19:47:55.517433 26354 net.cpp:382] pool0 -> pool0
I0428 19:47:55.517479 26354 net.cpp:124] Setting up pool0
I0428 19:47:55.517503 26354 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:55.517508 26354 net.cpp:139] Memory required for data: 1754800
I0428 19:47:55.517513 26354 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:55.517529 26354 net.cpp:86] Creating Layer conv1
I0428 19:47:55.517536 26354 net.cpp:408] conv1 <- pool0
I0428 19:47:55.517545 26354 net.cpp:382] conv1 -> conv1
I0428 19:47:55.519819 26354 net.cpp:124] Setting up conv1
I0428 19:47:55.519832 26354 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:55.519839 26354 net.cpp:139] Memory required for data: 1806000
I0428 19:47:55.519867 26354 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:55.519896 26354 net.cpp:86] Creating Layer pool1
I0428 19:47:55.519901 26354 net.cpp:408] pool1 <- conv1
I0428 19:47:55.519912 26354 net.cpp:382] pool1 -> pool1
I0428 19:47:55.519991 26354 net.cpp:124] Setting up pool1
I0428 19:47:55.520000 26354 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:55.520005 26354 net.cpp:139] Memory required for data: 1818800
I0428 19:47:55.520010 26354 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:55.520020 26354 net.cpp:86] Creating Layer ip1
I0428 19:47:55.520026 26354 net.cpp:408] ip1 <- pool1
I0428 19:47:55.520037 26354 net.cpp:382] ip1 -> ip1
I0428 19:47:55.520174 26354 net.cpp:124] Setting up ip1
I0428 19:47:55.520186 26354 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:55.520217 26354 net.cpp:139] Memory required for data: 1828800
I0428 19:47:55.520231 26354 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:55.520241 26354 net.cpp:86] Creating Layer relu1
I0428 19:47:55.520246 26354 net.cpp:408] relu1 <- ip1
I0428 19:47:55.520256 26354 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:55.520439 26354 net.cpp:124] Setting up relu1
I0428 19:47:55.520448 26354 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:55.520453 26354 net.cpp:139] Memory required for data: 1838800
I0428 19:47:55.520458 26354 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:55.520472 26354 net.cpp:86] Creating Layer ip2
I0428 19:47:55.520478 26354 net.cpp:408] ip2 <- ip1
I0428 19:47:55.520486 26354 net.cpp:382] ip2 -> ip2
I0428 19:47:55.520591 26354 net.cpp:124] Setting up ip2
I0428 19:47:55.520599 26354 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:55.520604 26354 net.cpp:139] Memory required for data: 1842800
I0428 19:47:55.520614 26354 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:55.520622 26354 net.cpp:86] Creating Layer relu2
I0428 19:47:55.520627 26354 net.cpp:408] relu2 <- ip2
I0428 19:47:55.520635 26354 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:55.520807 26354 net.cpp:124] Setting up relu2
I0428 19:47:55.520841 26354 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:55.520848 26354 net.cpp:139] Memory required for data: 1846800
I0428 19:47:55.520853 26354 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:55.520881 26354 net.cpp:86] Creating Layer ip3
I0428 19:47:55.520887 26354 net.cpp:408] ip3 <- ip2
I0428 19:47:55.520896 26354 net.cpp:382] ip3 -> ip3
I0428 19:47:55.521028 26354 net.cpp:124] Setting up ip3
I0428 19:47:55.521037 26354 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:55.521042 26354 net.cpp:139] Memory required for data: 1850800
I0428 19:47:55.521057 26354 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:55.521066 26354 net.cpp:86] Creating Layer relu3
I0428 19:47:55.521071 26354 net.cpp:408] relu3 <- ip3
I0428 19:47:55.521078 26354 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:55.521934 26354 net.cpp:124] Setting up relu3
I0428 19:47:55.521948 26354 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:55.521953 26354 net.cpp:139] Memory required for data: 1854800
I0428 19:47:55.521958 26354 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:55.521970 26354 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:55.521975 26354 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:55.521982 26354 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:55.521992 26354 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:55.522073 26354 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:55.522083 26354 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:55.522104 26354 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:55.522109 26354 net.cpp:139] Memory required for data: 1862800
I0428 19:47:55.522114 26354 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:55.522123 26354 net.cpp:86] Creating Layer accuracy
I0428 19:47:55.522130 26354 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:55.522136 26354 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:55.522145 26354 net.cpp:382] accuracy -> accuracy
I0428 19:47:55.522156 26354 net.cpp:124] Setting up accuracy
I0428 19:47:55.522181 26354 net.cpp:131] Top shape: (1)
I0428 19:47:55.522187 26354 net.cpp:139] Memory required for data: 1862804
I0428 19:47:55.522192 26354 layer_factory.hpp:77] Creating layer loss
I0428 19:47:55.522200 26354 net.cpp:86] Creating Layer loss
I0428 19:47:55.522207 26354 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:55.522212 26354 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:55.522222 26354 net.cpp:382] loss -> loss
I0428 19:47:55.522233 26354 layer_factory.hpp:77] Creating layer loss
I0428 19:47:55.522536 26354 net.cpp:124] Setting up loss
I0428 19:47:55.522547 26354 net.cpp:131] Top shape: (1)
I0428 19:47:55.522552 26354 net.cpp:134]     with loss weight 1
I0428 19:47:55.522560 26354 net.cpp:139] Memory required for data: 1862808
I0428 19:47:55.522579 26354 net.cpp:200] loss needs backward computation.
I0428 19:47:55.522588 26354 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:55.522594 26354 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:55.522599 26354 net.cpp:200] relu3 needs backward computation.
I0428 19:47:55.522604 26354 net.cpp:200] ip3 needs backward computation.
I0428 19:47:55.522610 26354 net.cpp:200] relu2 needs backward computation.
I0428 19:47:55.522614 26354 net.cpp:200] ip2 needs backward computation.
I0428 19:47:55.522624 26354 net.cpp:200] relu1 needs backward computation.
I0428 19:47:55.522629 26354 net.cpp:200] ip1 needs backward computation.
I0428 19:47:55.522634 26354 net.cpp:200] pool1 needs backward computation.
I0428 19:47:55.522639 26354 net.cpp:200] conv1 needs backward computation.
I0428 19:47:55.522644 26354 net.cpp:200] pool0 needs backward computation.
I0428 19:47:55.522650 26354 net.cpp:200] conv0 needs backward computation.
I0428 19:47:55.522656 26354 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:55.522662 26354 net.cpp:202] mnist does not need backward computation.
I0428 19:47:55.522667 26354 net.cpp:244] This network produces output accuracy
I0428 19:47:55.522673 26354 net.cpp:244] This network produces output loss
I0428 19:47:55.522691 26354 net.cpp:257] Network initialization done.
I0428 19:47:55.522742 26354 solver.cpp:56] Solver scaffolding done.
I0428 19:47:55.523113 26354 caffe.cpp:248] Starting Optimization
I0428 19:47:55.523119 26354 solver.cpp:273] Solving LeNet
I0428 19:47:55.523124 26354 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:55.523912 26354 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:55.527428 26354 blocking_queue.cpp:49] Waiting for data
I0428 19:47:55.597697 26361 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:55.598182 26354 solver.cpp:398]     Test net output #0: accuracy = 0.0967
I0428 19:47:55.598201 26354 solver.cpp:398]     Test net output #1: loss = 2.35583 (* 1 = 2.35583 loss)
I0428 19:47:55.600028 26354 solver.cpp:219] Iteration 0 (-8.76524e-31 iter/s, 0.0768625s/100 iters), loss = 2.38213
I0428 19:47:55.600085 26354 solver.cpp:238]     Train net output #0: loss = 2.38213 (* 1 = 2.38213 loss)
I0428 19:47:55.600102 26354 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:55.674710 26354 solver.cpp:219] Iteration 100 (1339.82 iter/s, 0.0746368s/100 iters), loss = 1.37399
I0428 19:47:55.674738 26354 solver.cpp:238]     Train net output #0: loss = 1.37399 (* 1 = 1.37399 loss)
I0428 19:47:55.674763 26354 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:55.744931 26354 solver.cpp:219] Iteration 200 (1424.79 iter/s, 0.070186s/100 iters), loss = 0.656499
I0428 19:47:55.744973 26354 solver.cpp:238]     Train net output #0: loss = 0.656499 (* 1 = 0.656499 loss)
I0428 19:47:55.744983 26354 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:55.815001 26354 solver.cpp:219] Iteration 300 (1427.81 iter/s, 0.0700375s/100 iters), loss = 0.349056
I0428 19:47:55.815027 26354 solver.cpp:238]     Train net output #0: loss = 0.349056 (* 1 = 0.349056 loss)
I0428 19:47:55.815053 26354 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:55.883334 26354 solver.cpp:219] Iteration 400 (1464.11 iter/s, 0.0683008s/100 iters), loss = 0.357007
I0428 19:47:55.883361 26354 solver.cpp:238]     Train net output #0: loss = 0.357007 (* 1 = 0.357007 loss)
I0428 19:47:55.883386 26354 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:55.949323 26354 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:56.026482 26361 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:56.026965 26354 solver.cpp:398]     Test net output #0: accuracy = 0.8998
I0428 19:47:56.026985 26354 solver.cpp:398]     Test net output #1: loss = 0.329899 (* 1 = 0.329899 loss)
I0428 19:47:56.027878 26354 solver.cpp:219] Iteration 500 (692.018 iter/s, 0.144505s/100 iters), loss = 0.302241
I0428 19:47:56.027907 26354 solver.cpp:238]     Train net output #0: loss = 0.302241 (* 1 = 0.302241 loss)
I0428 19:47:56.027936 26354 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:56.097632 26354 solver.cpp:219] Iteration 600 (1434.31 iter/s, 0.06972s/100 iters), loss = 0.328331
I0428 19:47:56.097659 26354 solver.cpp:238]     Train net output #0: loss = 0.328331 (* 1 = 0.328331 loss)
I0428 19:47:56.097684 26354 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:56.167548 26354 solver.cpp:219] Iteration 700 (1430.97 iter/s, 0.0698829s/100 iters), loss = 0.36781
I0428 19:47:56.167574 26354 solver.cpp:238]     Train net output #0: loss = 0.36781 (* 1 = 0.36781 loss)
I0428 19:47:56.167599 26354 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:56.236264 26354 solver.cpp:219] Iteration 800 (1455.97 iter/s, 0.0686828s/100 iters), loss = 0.442847
I0428 19:47:56.236290 26354 solver.cpp:238]     Train net output #0: loss = 0.442847 (* 1 = 0.442847 loss)
I0428 19:47:56.236315 26354 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:56.305474 26354 solver.cpp:219] Iteration 900 (1445.56 iter/s, 0.0691773s/100 iters), loss = 0.247917
I0428 19:47:56.305500 26354 solver.cpp:238]     Train net output #0: loss = 0.247917 (* 1 = 0.247917 loss)
I0428 19:47:56.305526 26354 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:56.328562 26360 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:56.373142 26354 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:56.373776 26354 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:56.374177 26354 solver.cpp:311] Iteration 1000, loss = 0.192531
I0428 19:47:56.374207 26354 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:56.448518 26361 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:56.449023 26354 solver.cpp:398]     Test net output #0: accuracy = 0.9343
I0428 19:47:56.449043 26354 solver.cpp:398]     Test net output #1: loss = 0.222487 (* 1 = 0.222487 loss)
I0428 19:47:56.449050 26354 solver.cpp:316] Optimization Done.
I0428 19:47:56.449055 26354 caffe.cpp:259] Optimization Done.
