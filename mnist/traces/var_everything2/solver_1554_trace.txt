I0428 20:31:22.411798  3944 caffe.cpp:218] Using GPUs 0
I0428 20:31:22.451146  3944 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:22.968384  3944 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1554.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:22.968526  3944 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1554.prototxt
I0428 20:31:22.968952  3944 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:22.968977  3944 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:22.969079  3944 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:22.969159  3944 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:22.969257  3944 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:22.969280  3944 net.cpp:86] Creating Layer mnist
I0428 20:31:22.969290  3944 net.cpp:382] mnist -> data
I0428 20:31:22.969311  3944 net.cpp:382] mnist -> label
I0428 20:31:22.970408  3944 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:22.972862  3944 net.cpp:124] Setting up mnist
I0428 20:31:22.972879  3944 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:22.972885  3944 net.cpp:131] Top shape: 64 (64)
I0428 20:31:22.972888  3944 net.cpp:139] Memory required for data: 200960
I0428 20:31:22.972895  3944 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:22.972913  3944 net.cpp:86] Creating Layer conv0
I0428 20:31:22.972934  3944 net.cpp:408] conv0 <- data
I0428 20:31:22.972947  3944 net.cpp:382] conv0 -> conv0
I0428 20:31:23.261274  3944 net.cpp:124] Setting up conv0
I0428 20:31:23.261302  3944 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:23.261307  3944 net.cpp:139] Memory required for data: 14946560
I0428 20:31:23.261322  3944 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:23.261335  3944 net.cpp:86] Creating Layer pool0
I0428 20:31:23.261339  3944 net.cpp:408] pool0 <- conv0
I0428 20:31:23.261344  3944 net.cpp:382] pool0 -> pool0
I0428 20:31:23.261392  3944 net.cpp:124] Setting up pool0
I0428 20:31:23.261399  3944 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:23.261401  3944 net.cpp:139] Memory required for data: 18632960
I0428 20:31:23.261404  3944 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:23.261415  3944 net.cpp:86] Creating Layer conv1
I0428 20:31:23.261420  3944 net.cpp:408] conv1 <- pool0
I0428 20:31:23.261425  3944 net.cpp:382] conv1 -> conv1
I0428 20:31:23.263407  3944 net.cpp:124] Setting up conv1
I0428 20:31:23.263424  3944 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:23.263429  3944 net.cpp:139] Memory required for data: 18796800
I0428 20:31:23.263437  3944 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:23.263445  3944 net.cpp:86] Creating Layer pool1
I0428 20:31:23.263448  3944 net.cpp:408] pool1 <- conv1
I0428 20:31:23.263455  3944 net.cpp:382] pool1 -> pool1
I0428 20:31:23.263505  3944 net.cpp:124] Setting up pool1
I0428 20:31:23.263512  3944 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:23.263515  3944 net.cpp:139] Memory required for data: 18837760
I0428 20:31:23.263519  3944 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:23.263525  3944 net.cpp:86] Creating Layer ip1
I0428 20:31:23.263528  3944 net.cpp:408] ip1 <- pool1
I0428 20:31:23.263535  3944 net.cpp:382] ip1 -> ip1
I0428 20:31:23.264554  3944 net.cpp:124] Setting up ip1
I0428 20:31:23.264585  3944 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:23.264587  3944 net.cpp:139] Memory required for data: 18850560
I0428 20:31:23.264596  3944 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:23.264603  3944 net.cpp:86] Creating Layer relu1
I0428 20:31:23.264606  3944 net.cpp:408] relu1 <- ip1
I0428 20:31:23.264611  3944 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:23.264816  3944 net.cpp:124] Setting up relu1
I0428 20:31:23.264825  3944 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:23.264829  3944 net.cpp:139] Memory required for data: 18863360
I0428 20:31:23.264832  3944 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:23.264842  3944 net.cpp:86] Creating Layer ip2
I0428 20:31:23.264845  3944 net.cpp:408] ip2 <- ip1
I0428 20:31:23.264852  3944 net.cpp:382] ip2 -> ip2
I0428 20:31:23.264966  3944 net.cpp:124] Setting up ip2
I0428 20:31:23.264972  3944 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:31:23.264976  3944 net.cpp:139] Memory required for data: 18869760
I0428 20:31:23.264981  3944 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:23.264987  3944 net.cpp:86] Creating Layer relu2
I0428 20:31:23.264991  3944 net.cpp:408] relu2 <- ip2
I0428 20:31:23.264995  3944 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:23.265768  3944 net.cpp:124] Setting up relu2
I0428 20:31:23.265779  3944 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:31:23.265784  3944 net.cpp:139] Memory required for data: 18876160
I0428 20:31:23.265786  3944 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:23.265794  3944 net.cpp:86] Creating Layer ip3
I0428 20:31:23.265799  3944 net.cpp:408] ip3 <- ip2
I0428 20:31:23.265803  3944 net.cpp:382] ip3 -> ip3
I0428 20:31:23.265908  3944 net.cpp:124] Setting up ip3
I0428 20:31:23.265915  3944 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:23.265918  3944 net.cpp:139] Memory required for data: 18878720
I0428 20:31:23.265926  3944 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:23.265933  3944 net.cpp:86] Creating Layer relu3
I0428 20:31:23.265935  3944 net.cpp:408] relu3 <- ip3
I0428 20:31:23.265939  3944 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:23.266113  3944 net.cpp:124] Setting up relu3
I0428 20:31:23.266122  3944 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:23.266126  3944 net.cpp:139] Memory required for data: 18881280
I0428 20:31:23.266129  3944 layer_factory.hpp:77] Creating layer loss
I0428 20:31:23.266135  3944 net.cpp:86] Creating Layer loss
I0428 20:31:23.266139  3944 net.cpp:408] loss <- ip3
I0428 20:31:23.266144  3944 net.cpp:408] loss <- label
I0428 20:31:23.266149  3944 net.cpp:382] loss -> loss
I0428 20:31:23.266165  3944 layer_factory.hpp:77] Creating layer loss
I0428 20:31:23.266407  3944 net.cpp:124] Setting up loss
I0428 20:31:23.266417  3944 net.cpp:131] Top shape: (1)
I0428 20:31:23.266419  3944 net.cpp:134]     with loss weight 1
I0428 20:31:23.266433  3944 net.cpp:139] Memory required for data: 18881284
I0428 20:31:23.266436  3944 net.cpp:200] loss needs backward computation.
I0428 20:31:23.266440  3944 net.cpp:200] relu3 needs backward computation.
I0428 20:31:23.266443  3944 net.cpp:200] ip3 needs backward computation.
I0428 20:31:23.266445  3944 net.cpp:200] relu2 needs backward computation.
I0428 20:31:23.266448  3944 net.cpp:200] ip2 needs backward computation.
I0428 20:31:23.266451  3944 net.cpp:200] relu1 needs backward computation.
I0428 20:31:23.266453  3944 net.cpp:200] ip1 needs backward computation.
I0428 20:31:23.266456  3944 net.cpp:200] pool1 needs backward computation.
I0428 20:31:23.266459  3944 net.cpp:200] conv1 needs backward computation.
I0428 20:31:23.266463  3944 net.cpp:200] pool0 needs backward computation.
I0428 20:31:23.266465  3944 net.cpp:200] conv0 needs backward computation.
I0428 20:31:23.266469  3944 net.cpp:202] mnist does not need backward computation.
I0428 20:31:23.266471  3944 net.cpp:244] This network produces output loss
I0428 20:31:23.266481  3944 net.cpp:257] Network initialization done.
I0428 20:31:23.266815  3944 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1554.prototxt
I0428 20:31:23.266842  3944 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:23.266935  3944 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:23.267020  3944 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:23.267063  3944 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:23.267076  3944 net.cpp:86] Creating Layer mnist
I0428 20:31:23.267081  3944 net.cpp:382] mnist -> data
I0428 20:31:23.267088  3944 net.cpp:382] mnist -> label
I0428 20:31:23.267177  3944 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:23.269086  3944 net.cpp:124] Setting up mnist
I0428 20:31:23.269100  3944 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:23.269121  3944 net.cpp:131] Top shape: 100 (100)
I0428 20:31:23.269124  3944 net.cpp:139] Memory required for data: 314000
I0428 20:31:23.269127  3944 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:23.269152  3944 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:23.269156  3944 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:23.269162  3944 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:23.269170  3944 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:23.269282  3944 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:23.269290  3944 net.cpp:131] Top shape: 100 (100)
I0428 20:31:23.269294  3944 net.cpp:131] Top shape: 100 (100)
I0428 20:31:23.269297  3944 net.cpp:139] Memory required for data: 314800
I0428 20:31:23.269300  3944 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:23.269311  3944 net.cpp:86] Creating Layer conv0
I0428 20:31:23.269315  3944 net.cpp:408] conv0 <- data
I0428 20:31:23.269320  3944 net.cpp:382] conv0 -> conv0
I0428 20:31:23.270874  3944 net.cpp:124] Setting up conv0
I0428 20:31:23.270889  3944 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:23.270892  3944 net.cpp:139] Memory required for data: 23354800
I0428 20:31:23.270901  3944 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:23.270908  3944 net.cpp:86] Creating Layer pool0
I0428 20:31:23.270911  3944 net.cpp:408] pool0 <- conv0
I0428 20:31:23.270917  3944 net.cpp:382] pool0 -> pool0
I0428 20:31:23.270954  3944 net.cpp:124] Setting up pool0
I0428 20:31:23.270961  3944 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:23.270963  3944 net.cpp:139] Memory required for data: 29114800
I0428 20:31:23.270967  3944 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:23.270975  3944 net.cpp:86] Creating Layer conv1
I0428 20:31:23.270979  3944 net.cpp:408] conv1 <- pool0
I0428 20:31:23.270984  3944 net.cpp:382] conv1 -> conv1
I0428 20:31:23.272697  3944 net.cpp:124] Setting up conv1
I0428 20:31:23.272711  3944 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:23.272714  3944 net.cpp:139] Memory required for data: 29370800
I0428 20:31:23.272723  3944 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:23.272732  3944 net.cpp:86] Creating Layer pool1
I0428 20:31:23.272735  3944 net.cpp:408] pool1 <- conv1
I0428 20:31:23.272740  3944 net.cpp:382] pool1 -> pool1
I0428 20:31:23.272788  3944 net.cpp:124] Setting up pool1
I0428 20:31:23.272792  3944 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:23.272796  3944 net.cpp:139] Memory required for data: 29434800
I0428 20:31:23.272799  3944 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:23.272819  3944 net.cpp:86] Creating Layer ip1
I0428 20:31:23.272822  3944 net.cpp:408] ip1 <- pool1
I0428 20:31:23.272827  3944 net.cpp:382] ip1 -> ip1
I0428 20:31:23.273017  3944 net.cpp:124] Setting up ip1
I0428 20:31:23.273037  3944 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:23.273041  3944 net.cpp:139] Memory required for data: 29454800
I0428 20:31:23.273051  3944 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:23.273056  3944 net.cpp:86] Creating Layer relu1
I0428 20:31:23.273059  3944 net.cpp:408] relu1 <- ip1
I0428 20:31:23.273066  3944 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:23.273260  3944 net.cpp:124] Setting up relu1
I0428 20:31:23.273269  3944 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:23.273288  3944 net.cpp:139] Memory required for data: 29474800
I0428 20:31:23.273290  3944 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:23.273298  3944 net.cpp:86] Creating Layer ip2
I0428 20:31:23.273301  3944 net.cpp:408] ip2 <- ip1
I0428 20:31:23.273308  3944 net.cpp:382] ip2 -> ip2
I0428 20:31:23.273433  3944 net.cpp:124] Setting up ip2
I0428 20:31:23.273440  3944 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:31:23.273443  3944 net.cpp:139] Memory required for data: 29484800
I0428 20:31:23.273448  3944 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:23.273454  3944 net.cpp:86] Creating Layer relu2
I0428 20:31:23.273458  3944 net.cpp:408] relu2 <- ip2
I0428 20:31:23.273461  3944 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:23.273658  3944 net.cpp:124] Setting up relu2
I0428 20:31:23.273669  3944 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:31:23.273671  3944 net.cpp:139] Memory required for data: 29494800
I0428 20:31:23.273674  3944 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:23.273680  3944 net.cpp:86] Creating Layer ip3
I0428 20:31:23.273684  3944 net.cpp:408] ip3 <- ip2
I0428 20:31:23.273689  3944 net.cpp:382] ip3 -> ip3
I0428 20:31:23.273797  3944 net.cpp:124] Setting up ip3
I0428 20:31:23.273804  3944 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:23.273808  3944 net.cpp:139] Memory required for data: 29498800
I0428 20:31:23.273830  3944 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:23.273864  3944 net.cpp:86] Creating Layer relu3
I0428 20:31:23.273866  3944 net.cpp:408] relu3 <- ip3
I0428 20:31:23.273871  3944 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:23.274672  3944 net.cpp:124] Setting up relu3
I0428 20:31:23.274683  3944 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:23.274688  3944 net.cpp:139] Memory required for data: 29502800
I0428 20:31:23.274690  3944 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:23.274695  3944 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:23.274699  3944 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:23.274703  3944 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:23.274711  3944 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:23.274755  3944 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:23.274760  3944 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:23.274763  3944 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:23.274765  3944 net.cpp:139] Memory required for data: 29510800
I0428 20:31:23.274768  3944 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:23.274775  3944 net.cpp:86] Creating Layer accuracy
I0428 20:31:23.274777  3944 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:23.274781  3944 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:23.274785  3944 net.cpp:382] accuracy -> accuracy
I0428 20:31:23.274792  3944 net.cpp:124] Setting up accuracy
I0428 20:31:23.274796  3944 net.cpp:131] Top shape: (1)
I0428 20:31:23.274799  3944 net.cpp:139] Memory required for data: 29510804
I0428 20:31:23.274802  3944 layer_factory.hpp:77] Creating layer loss
I0428 20:31:23.274807  3944 net.cpp:86] Creating Layer loss
I0428 20:31:23.274811  3944 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:23.274814  3944 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:23.274818  3944 net.cpp:382] loss -> loss
I0428 20:31:23.274824  3944 layer_factory.hpp:77] Creating layer loss
I0428 20:31:23.275068  3944 net.cpp:124] Setting up loss
I0428 20:31:23.275079  3944 net.cpp:131] Top shape: (1)
I0428 20:31:23.275081  3944 net.cpp:134]     with loss weight 1
I0428 20:31:23.275097  3944 net.cpp:139] Memory required for data: 29510808
I0428 20:31:23.275101  3944 net.cpp:200] loss needs backward computation.
I0428 20:31:23.275105  3944 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:23.275110  3944 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:23.275112  3944 net.cpp:200] relu3 needs backward computation.
I0428 20:31:23.275115  3944 net.cpp:200] ip3 needs backward computation.
I0428 20:31:23.275126  3944 net.cpp:200] relu2 needs backward computation.
I0428 20:31:23.275128  3944 net.cpp:200] ip2 needs backward computation.
I0428 20:31:23.275131  3944 net.cpp:200] relu1 needs backward computation.
I0428 20:31:23.275135  3944 net.cpp:200] ip1 needs backward computation.
I0428 20:31:23.275137  3944 net.cpp:200] pool1 needs backward computation.
I0428 20:31:23.275141  3944 net.cpp:200] conv1 needs backward computation.
I0428 20:31:23.275143  3944 net.cpp:200] pool0 needs backward computation.
I0428 20:31:23.275147  3944 net.cpp:200] conv0 needs backward computation.
I0428 20:31:23.275151  3944 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:23.275154  3944 net.cpp:202] mnist does not need backward computation.
I0428 20:31:23.275158  3944 net.cpp:244] This network produces output accuracy
I0428 20:31:23.275162  3944 net.cpp:244] This network produces output loss
I0428 20:31:23.275172  3944 net.cpp:257] Network initialization done.
I0428 20:31:23.275219  3944 solver.cpp:56] Solver scaffolding done.
I0428 20:31:23.275593  3944 caffe.cpp:248] Starting Optimization
I0428 20:31:23.275600  3944 solver.cpp:273] Solving LeNet
I0428 20:31:23.275604  3944 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:23.275864  3944 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:23.371598  3953 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:23.374136  3944 solver.cpp:398]     Test net output #0: accuracy = 0.0684
I0428 20:31:23.374173  3944 solver.cpp:398]     Test net output #1: loss = 2.32208 (* 1 = 2.32208 loss)
I0428 20:31:23.378726  3944 solver.cpp:219] Iteration 0 (-8.36768e-32 iter/s, 0.103097s/100 iters), loss = 2.31305
I0428 20:31:23.378767  3944 solver.cpp:238]     Train net output #0: loss = 2.31305 (* 1 = 2.31305 loss)
I0428 20:31:23.378778  3944 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:23.581408  3944 solver.cpp:219] Iteration 100 (493.552 iter/s, 0.202613s/100 iters), loss = 1.40139
I0428 20:31:23.581462  3944 solver.cpp:238]     Train net output #0: loss = 1.40139 (* 1 = 1.40139 loss)
I0428 20:31:23.581477  3944 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:23.795011  3944 solver.cpp:219] Iteration 200 (468.308 iter/s, 0.213535s/100 iters), loss = 1.4776
I0428 20:31:23.795043  3944 solver.cpp:238]     Train net output #0: loss = 1.4776 (* 1 = 1.4776 loss)
I0428 20:31:23.795053  3944 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:24.015147  3944 solver.cpp:219] Iteration 300 (454.369 iter/s, 0.220085s/100 iters), loss = 1.11256
I0428 20:31:24.015189  3944 solver.cpp:238]     Train net output #0: loss = 1.11256 (* 1 = 1.11256 loss)
I0428 20:31:24.015200  3944 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:24.230468  3944 solver.cpp:219] Iteration 400 (464.55 iter/s, 0.215262s/100 iters), loss = 0.831902
I0428 20:31:24.230510  3944 solver.cpp:238]     Train net output #0: loss = 0.831902 (* 1 = 0.831902 loss)
I0428 20:31:24.230520  3944 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:24.446893  3944 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:24.550845  3953 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:24.553664  3944 solver.cpp:398]     Test net output #0: accuracy = 0.5908
I0428 20:31:24.553694  3944 solver.cpp:398]     Test net output #1: loss = 1.01954 (* 1 = 1.01954 loss)
I0428 20:31:24.555860  3944 solver.cpp:219] Iteration 500 (307.381 iter/s, 0.325329s/100 iters), loss = 0.953799
I0428 20:31:24.555902  3944 solver.cpp:238]     Train net output #0: loss = 0.953799 (* 1 = 0.953799 loss)
I0428 20:31:24.555935  3944 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:24.765553  3944 solver.cpp:219] Iteration 600 (477.028 iter/s, 0.209631s/100 iters), loss = 0.998613
I0428 20:31:24.765611  3944 solver.cpp:238]     Train net output #0: loss = 0.998613 (* 1 = 0.998613 loss)
I0428 20:31:24.765627  3944 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:24.990499  3944 solver.cpp:219] Iteration 700 (444.697 iter/s, 0.224872s/100 iters), loss = 1.16296
I0428 20:31:24.990543  3944 solver.cpp:238]     Train net output #0: loss = 1.16296 (* 1 = 1.16296 loss)
I0428 20:31:24.990555  3944 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:25.204100  3944 solver.cpp:219] Iteration 800 (468.292 iter/s, 0.213542s/100 iters), loss = 0.981117
I0428 20:31:25.204135  3944 solver.cpp:238]     Train net output #0: loss = 0.981117 (* 1 = 0.981117 loss)
I0428 20:31:25.204144  3944 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:25.423146  3944 solver.cpp:219] Iteration 900 (456.638 iter/s, 0.218992s/100 iters), loss = 1.08031
I0428 20:31:25.423187  3944 solver.cpp:238]     Train net output #0: loss = 1.08031 (* 1 = 1.08031 loss)
I0428 20:31:25.423197  3944 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:25.494699  3950 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:25.635713  3944 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:25.637840  3944 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:25.639228  3944 solver.cpp:311] Iteration 1000, loss = 0.922955
I0428 20:31:25.639266  3944 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:25.663417  3944 blocking_queue.cpp:49] Waiting for data
I0428 20:31:25.770140  3953 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:25.773277  3944 solver.cpp:398]     Test net output #0: accuracy = 0.6848
I0428 20:31:25.773306  3944 solver.cpp:398]     Test net output #1: loss = 0.77225 (* 1 = 0.77225 loss)
I0428 20:31:25.773315  3944 solver.cpp:316] Optimization Done.
I0428 20:31:25.773320  3944 caffe.cpp:259] Optimization Done.
