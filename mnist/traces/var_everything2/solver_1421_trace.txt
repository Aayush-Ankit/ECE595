I0428 20:23:26.182306  2237 caffe.cpp:218] Using GPUs 0
I0428 20:23:26.214557  2237 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:26.683003  2237 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1421.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:26.683151  2237 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1421.prototxt
I0428 20:23:26.683501  2237 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:26.683532  2237 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:26.683614  2237 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:26.683679  2237 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:26.683763  2237 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:26.683781  2237 net.cpp:86] Creating Layer mnist
I0428 20:23:26.683789  2237 net.cpp:382] mnist -> data
I0428 20:23:26.683806  2237 net.cpp:382] mnist -> label
I0428 20:23:26.684850  2237 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:26.687124  2237 net.cpp:124] Setting up mnist
I0428 20:23:26.687155  2237 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:26.687160  2237 net.cpp:131] Top shape: 64 (64)
I0428 20:23:26.687163  2237 net.cpp:139] Memory required for data: 200960
I0428 20:23:26.687170  2237 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:26.687183  2237 net.cpp:86] Creating Layer conv0
I0428 20:23:26.687201  2237 net.cpp:408] conv0 <- data
I0428 20:23:26.687212  2237 net.cpp:382] conv0 -> conv0
I0428 20:23:26.917968  2237 net.cpp:124] Setting up conv0
I0428 20:23:26.918009  2237 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:26.918014  2237 net.cpp:139] Memory required for data: 7573760
I0428 20:23:26.918028  2237 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:26.918056  2237 net.cpp:86] Creating Layer pool0
I0428 20:23:26.918061  2237 net.cpp:408] pool0 <- conv0
I0428 20:23:26.918066  2237 net.cpp:382] pool0 -> pool0
I0428 20:23:26.918110  2237 net.cpp:124] Setting up pool0
I0428 20:23:26.918118  2237 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:26.918121  2237 net.cpp:139] Memory required for data: 9416960
I0428 20:23:26.918123  2237 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:26.918134  2237 net.cpp:86] Creating Layer conv1
I0428 20:23:26.918138  2237 net.cpp:408] conv1 <- pool0
I0428 20:23:26.918143  2237 net.cpp:382] conv1 -> conv1
I0428 20:23:26.921672  2237 net.cpp:124] Setting up conv1
I0428 20:23:26.921702  2237 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:26.921706  2237 net.cpp:139] Memory required for data: 11055360
I0428 20:23:26.921715  2237 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:26.921722  2237 net.cpp:86] Creating Layer pool1
I0428 20:23:26.921725  2237 net.cpp:408] pool1 <- conv1
I0428 20:23:26.921746  2237 net.cpp:382] pool1 -> pool1
I0428 20:23:26.921782  2237 net.cpp:124] Setting up pool1
I0428 20:23:26.921788  2237 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:26.921792  2237 net.cpp:139] Memory required for data: 11464960
I0428 20:23:26.921794  2237 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:26.921802  2237 net.cpp:86] Creating Layer ip1
I0428 20:23:26.921803  2237 net.cpp:408] ip1 <- pool1
I0428 20:23:26.921808  2237 net.cpp:382] ip1 -> ip1
I0428 20:23:26.922821  2237 net.cpp:124] Setting up ip1
I0428 20:23:26.922848  2237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:26.922852  2237 net.cpp:139] Memory required for data: 11467520
I0428 20:23:26.922860  2237 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:26.922868  2237 net.cpp:86] Creating Layer relu1
I0428 20:23:26.922870  2237 net.cpp:408] relu1 <- ip1
I0428 20:23:26.922875  2237 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:26.923048  2237 net.cpp:124] Setting up relu1
I0428 20:23:26.923056  2237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:26.923059  2237 net.cpp:139] Memory required for data: 11470080
I0428 20:23:26.923077  2237 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:26.923084  2237 net.cpp:86] Creating Layer ip2
I0428 20:23:26.923087  2237 net.cpp:408] ip2 <- ip1
I0428 20:23:26.923091  2237 net.cpp:382] ip2 -> ip2
I0428 20:23:26.923200  2237 net.cpp:124] Setting up ip2
I0428 20:23:26.923207  2237 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:26.923210  2237 net.cpp:139] Memory required for data: 11476480
I0428 20:23:26.923215  2237 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:26.923221  2237 net.cpp:86] Creating Layer relu2
I0428 20:23:26.923224  2237 net.cpp:408] relu2 <- ip2
I0428 20:23:26.923228  2237 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:26.923979  2237 net.cpp:124] Setting up relu2
I0428 20:23:26.923992  2237 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:26.923996  2237 net.cpp:139] Memory required for data: 11482880
I0428 20:23:26.924000  2237 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:26.924007  2237 net.cpp:86] Creating Layer ip3
I0428 20:23:26.924010  2237 net.cpp:408] ip3 <- ip2
I0428 20:23:26.924016  2237 net.cpp:382] ip3 -> ip3
I0428 20:23:26.924118  2237 net.cpp:124] Setting up ip3
I0428 20:23:26.924125  2237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:26.924129  2237 net.cpp:139] Memory required for data: 11485440
I0428 20:23:26.924137  2237 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:26.924142  2237 net.cpp:86] Creating Layer relu3
I0428 20:23:26.924145  2237 net.cpp:408] relu3 <- ip3
I0428 20:23:26.924166  2237 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:26.924346  2237 net.cpp:124] Setting up relu3
I0428 20:23:26.924355  2237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:26.924357  2237 net.cpp:139] Memory required for data: 11488000
I0428 20:23:26.924360  2237 layer_factory.hpp:77] Creating layer loss
I0428 20:23:26.924365  2237 net.cpp:86] Creating Layer loss
I0428 20:23:26.924368  2237 net.cpp:408] loss <- ip3
I0428 20:23:26.924371  2237 net.cpp:408] loss <- label
I0428 20:23:26.924378  2237 net.cpp:382] loss -> loss
I0428 20:23:26.924394  2237 layer_factory.hpp:77] Creating layer loss
I0428 20:23:26.924651  2237 net.cpp:124] Setting up loss
I0428 20:23:26.924660  2237 net.cpp:131] Top shape: (1)
I0428 20:23:26.924664  2237 net.cpp:134]     with loss weight 1
I0428 20:23:26.924677  2237 net.cpp:139] Memory required for data: 11488004
I0428 20:23:26.924681  2237 net.cpp:200] loss needs backward computation.
I0428 20:23:26.924685  2237 net.cpp:200] relu3 needs backward computation.
I0428 20:23:26.924687  2237 net.cpp:200] ip3 needs backward computation.
I0428 20:23:26.924690  2237 net.cpp:200] relu2 needs backward computation.
I0428 20:23:26.924692  2237 net.cpp:200] ip2 needs backward computation.
I0428 20:23:26.924695  2237 net.cpp:200] relu1 needs backward computation.
I0428 20:23:26.924697  2237 net.cpp:200] ip1 needs backward computation.
I0428 20:23:26.924700  2237 net.cpp:200] pool1 needs backward computation.
I0428 20:23:26.924703  2237 net.cpp:200] conv1 needs backward computation.
I0428 20:23:26.924706  2237 net.cpp:200] pool0 needs backward computation.
I0428 20:23:26.924710  2237 net.cpp:200] conv0 needs backward computation.
I0428 20:23:26.924712  2237 net.cpp:202] mnist does not need backward computation.
I0428 20:23:26.924715  2237 net.cpp:244] This network produces output loss
I0428 20:23:26.924724  2237 net.cpp:257] Network initialization done.
I0428 20:23:26.925127  2237 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1421.prototxt
I0428 20:23:26.925170  2237 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:26.925312  2237 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:26.925391  2237 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:26.925433  2237 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:26.925447  2237 net.cpp:86] Creating Layer mnist
I0428 20:23:26.925451  2237 net.cpp:382] mnist -> data
I0428 20:23:26.925458  2237 net.cpp:382] mnist -> label
I0428 20:23:26.925544  2237 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:26.926887  2237 net.cpp:124] Setting up mnist
I0428 20:23:26.926930  2237 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:26.926935  2237 net.cpp:131] Top shape: 100 (100)
I0428 20:23:26.926937  2237 net.cpp:139] Memory required for data: 314000
I0428 20:23:26.926941  2237 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:26.926949  2237 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:26.926952  2237 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:26.926957  2237 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:26.926964  2237 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:26.927075  2237 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:26.927083  2237 net.cpp:131] Top shape: 100 (100)
I0428 20:23:26.927085  2237 net.cpp:131] Top shape: 100 (100)
I0428 20:23:26.927088  2237 net.cpp:139] Memory required for data: 314800
I0428 20:23:26.927091  2237 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:26.927100  2237 net.cpp:86] Creating Layer conv0
I0428 20:23:26.927103  2237 net.cpp:408] conv0 <- data
I0428 20:23:26.927109  2237 net.cpp:382] conv0 -> conv0
I0428 20:23:26.928941  2237 net.cpp:124] Setting up conv0
I0428 20:23:26.928970  2237 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:26.928975  2237 net.cpp:139] Memory required for data: 11834800
I0428 20:23:26.928984  2237 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:26.928990  2237 net.cpp:86] Creating Layer pool0
I0428 20:23:26.928993  2237 net.cpp:408] pool0 <- conv0
I0428 20:23:26.929013  2237 net.cpp:382] pool0 -> pool0
I0428 20:23:26.929052  2237 net.cpp:124] Setting up pool0
I0428 20:23:26.929059  2237 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:26.929062  2237 net.cpp:139] Memory required for data: 14714800
I0428 20:23:26.929064  2237 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:26.929074  2237 net.cpp:86] Creating Layer conv1
I0428 20:23:26.929076  2237 net.cpp:408] conv1 <- pool0
I0428 20:23:26.929082  2237 net.cpp:382] conv1 -> conv1
I0428 20:23:26.932265  2237 net.cpp:124] Setting up conv1
I0428 20:23:26.932276  2237 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:26.932296  2237 net.cpp:139] Memory required for data: 17274800
I0428 20:23:26.932303  2237 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:26.932309  2237 net.cpp:86] Creating Layer pool1
I0428 20:23:26.932312  2237 net.cpp:408] pool1 <- conv1
I0428 20:23:26.932333  2237 net.cpp:382] pool1 -> pool1
I0428 20:23:26.932368  2237 net.cpp:124] Setting up pool1
I0428 20:23:26.932376  2237 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:26.932379  2237 net.cpp:139] Memory required for data: 17914800
I0428 20:23:26.932381  2237 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:26.932390  2237 net.cpp:86] Creating Layer ip1
I0428 20:23:26.932394  2237 net.cpp:408] ip1 <- pool1
I0428 20:23:26.932399  2237 net.cpp:382] ip1 -> ip1
I0428 20:23:26.932577  2237 net.cpp:124] Setting up ip1
I0428 20:23:26.932595  2237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:26.932598  2237 net.cpp:139] Memory required for data: 17918800
I0428 20:23:26.932605  2237 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:26.932610  2237 net.cpp:86] Creating Layer relu1
I0428 20:23:26.932613  2237 net.cpp:408] relu1 <- ip1
I0428 20:23:26.932617  2237 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:26.932796  2237 net.cpp:124] Setting up relu1
I0428 20:23:26.932804  2237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:26.932807  2237 net.cpp:139] Memory required for data: 17922800
I0428 20:23:26.932832  2237 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:26.932839  2237 net.cpp:86] Creating Layer ip2
I0428 20:23:26.932842  2237 net.cpp:408] ip2 <- ip1
I0428 20:23:26.932848  2237 net.cpp:382] ip2 -> ip2
I0428 20:23:26.932973  2237 net.cpp:124] Setting up ip2
I0428 20:23:26.932981  2237 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:26.932983  2237 net.cpp:139] Memory required for data: 17932800
I0428 20:23:26.932988  2237 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:26.932993  2237 net.cpp:86] Creating Layer relu2
I0428 20:23:26.932997  2237 net.cpp:408] relu2 <- ip2
I0428 20:23:26.933002  2237 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:26.933202  2237 net.cpp:124] Setting up relu2
I0428 20:23:26.933210  2237 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:26.933213  2237 net.cpp:139] Memory required for data: 17942800
I0428 20:23:26.933217  2237 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:26.933223  2237 net.cpp:86] Creating Layer ip3
I0428 20:23:26.933225  2237 net.cpp:408] ip3 <- ip2
I0428 20:23:26.933230  2237 net.cpp:382] ip3 -> ip3
I0428 20:23:26.933400  2237 net.cpp:124] Setting up ip3
I0428 20:23:26.933408  2237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:26.933410  2237 net.cpp:139] Memory required for data: 17946800
I0428 20:23:26.933434  2237 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:26.933440  2237 net.cpp:86] Creating Layer relu3
I0428 20:23:26.933444  2237 net.cpp:408] relu3 <- ip3
I0428 20:23:26.933449  2237 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:26.934286  2237 net.cpp:124] Setting up relu3
I0428 20:23:26.934298  2237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:26.934301  2237 net.cpp:139] Memory required for data: 17950800
I0428 20:23:26.934305  2237 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:26.934311  2237 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:26.934314  2237 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:26.934319  2237 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:26.934325  2237 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:26.934366  2237 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:26.934373  2237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:26.934377  2237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:26.934379  2237 net.cpp:139] Memory required for data: 17958800
I0428 20:23:26.934382  2237 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:26.934387  2237 net.cpp:86] Creating Layer accuracy
I0428 20:23:26.934391  2237 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:26.934394  2237 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:26.934399  2237 net.cpp:382] accuracy -> accuracy
I0428 20:23:26.934406  2237 net.cpp:124] Setting up accuracy
I0428 20:23:26.934412  2237 net.cpp:131] Top shape: (1)
I0428 20:23:26.934413  2237 net.cpp:139] Memory required for data: 17958804
I0428 20:23:26.934434  2237 layer_factory.hpp:77] Creating layer loss
I0428 20:23:26.934438  2237 net.cpp:86] Creating Layer loss
I0428 20:23:26.934442  2237 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:26.934445  2237 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:26.934451  2237 net.cpp:382] loss -> loss
I0428 20:23:26.934456  2237 layer_factory.hpp:77] Creating layer loss
I0428 20:23:26.934715  2237 net.cpp:124] Setting up loss
I0428 20:23:26.934725  2237 net.cpp:131] Top shape: (1)
I0428 20:23:26.934728  2237 net.cpp:134]     with loss weight 1
I0428 20:23:26.934743  2237 net.cpp:139] Memory required for data: 17958808
I0428 20:23:26.934747  2237 net.cpp:200] loss needs backward computation.
I0428 20:23:26.934751  2237 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:26.934756  2237 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:26.934758  2237 net.cpp:200] relu3 needs backward computation.
I0428 20:23:26.934762  2237 net.cpp:200] ip3 needs backward computation.
I0428 20:23:26.934764  2237 net.cpp:200] relu2 needs backward computation.
I0428 20:23:26.934767  2237 net.cpp:200] ip2 needs backward computation.
I0428 20:23:26.934770  2237 net.cpp:200] relu1 needs backward computation.
I0428 20:23:26.934773  2237 net.cpp:200] ip1 needs backward computation.
I0428 20:23:26.934777  2237 net.cpp:200] pool1 needs backward computation.
I0428 20:23:26.934779  2237 net.cpp:200] conv1 needs backward computation.
I0428 20:23:26.934788  2237 net.cpp:200] pool0 needs backward computation.
I0428 20:23:26.934797  2237 net.cpp:200] conv0 needs backward computation.
I0428 20:23:26.934800  2237 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:26.934809  2237 net.cpp:202] mnist does not need backward computation.
I0428 20:23:26.934813  2237 net.cpp:244] This network produces output accuracy
I0428 20:23:26.934819  2237 net.cpp:244] This network produces output loss
I0428 20:23:26.934869  2237 net.cpp:257] Network initialization done.
I0428 20:23:26.934927  2237 solver.cpp:56] Solver scaffolding done.
I0428 20:23:26.935339  2237 caffe.cpp:248] Starting Optimization
I0428 20:23:26.935345  2237 solver.cpp:273] Solving LeNet
I0428 20:23:26.935348  2237 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:26.935533  2237 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:26.949843  2237 blocking_queue.cpp:49] Waiting for data
I0428 20:23:27.025811  2244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:27.027274  2237 solver.cpp:398]     Test net output #0: accuracy = 0.0895
I0428 20:23:27.027309  2237 solver.cpp:398]     Test net output #1: loss = 2.30732 (* 1 = 2.30732 loss)
I0428 20:23:27.034507  2237 solver.cpp:219] Iteration 0 (-1.52117e-31 iter/s, 0.0990976s/100 iters), loss = 2.30552
I0428 20:23:27.034546  2237 solver.cpp:238]     Train net output #0: loss = 2.30552 (* 1 = 2.30552 loss)
I0428 20:23:27.034572  2237 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:27.258385  2237 solver.cpp:219] Iteration 100 (446.792 iter/s, 0.223818s/100 iters), loss = 1.19017
I0428 20:23:27.258417  2237 solver.cpp:238]     Train net output #0: loss = 1.19017 (* 1 = 1.19017 loss)
I0428 20:23:27.258425  2237 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:27.476378  2237 solver.cpp:219] Iteration 200 (458.831 iter/s, 0.217945s/100 iters), loss = 0.893015
I0428 20:23:27.476416  2237 solver.cpp:238]     Train net output #0: loss = 0.893015 (* 1 = 0.893015 loss)
I0428 20:23:27.476425  2237 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:27.696501  2237 solver.cpp:219] Iteration 300 (454.414 iter/s, 0.220064s/100 iters), loss = 0.988969
I0428 20:23:27.696560  2237 solver.cpp:238]     Train net output #0: loss = 0.988969 (* 1 = 0.988969 loss)
I0428 20:23:27.696574  2237 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:27.927119  2237 solver.cpp:219] Iteration 400 (433.75 iter/s, 0.230547s/100 iters), loss = 1.01636
I0428 20:23:27.927155  2237 solver.cpp:238]     Train net output #0: loss = 1.01636 (* 1 = 1.01636 loss)
I0428 20:23:27.927162  2237 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:28.153070  2237 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:28.242660  2244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:28.245937  2237 solver.cpp:398]     Test net output #0: accuracy = 0.7394
I0428 20:23:28.245973  2237 solver.cpp:398]     Test net output #1: loss = 0.835564 (* 1 = 0.835564 loss)
I0428 20:23:28.248127  2237 solver.cpp:219] Iteration 500 (311.571 iter/s, 0.320954s/100 iters), loss = 0.827202
I0428 20:23:28.248169  2237 solver.cpp:238]     Train net output #0: loss = 0.827202 (* 1 = 0.827202 loss)
I0428 20:23:28.248178  2237 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:28.478358  2237 solver.cpp:219] Iteration 600 (434.458 iter/s, 0.230172s/100 iters), loss = 0.702125
I0428 20:23:28.478399  2237 solver.cpp:238]     Train net output #0: loss = 0.702125 (* 1 = 0.702125 loss)
I0428 20:23:28.478407  2237 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:28.708777  2237 solver.cpp:219] Iteration 700 (434.097 iter/s, 0.230363s/100 iters), loss = 1.0979
I0428 20:23:28.708817  2237 solver.cpp:238]     Train net output #0: loss = 1.0979 (* 1 = 1.0979 loss)
I0428 20:23:28.708824  2237 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:28.932653  2237 solver.cpp:219] Iteration 800 (446.772 iter/s, 0.223828s/100 iters), loss = 0.884852
I0428 20:23:28.932684  2237 solver.cpp:238]     Train net output #0: loss = 0.884852 (* 1 = 0.884852 loss)
I0428 20:23:28.932693  2237 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:29.147351  2237 solver.cpp:219] Iteration 900 (465.875 iter/s, 0.21465s/100 iters), loss = 0.707238
I0428 20:23:29.147393  2237 solver.cpp:238]     Train net output #0: loss = 0.707238 (* 1 = 0.707238 loss)
I0428 20:23:29.147400  2237 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:29.214875  2243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:29.363883  2237 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:29.369247  2237 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:29.371352  2237 solver.cpp:311] Iteration 1000, loss = 0.937297
I0428 20:23:29.371373  2237 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:29.459532  2244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:29.462697  2237 solver.cpp:398]     Test net output #0: accuracy = 0.7854
I0428 20:23:29.462726  2237 solver.cpp:398]     Test net output #1: loss = 0.743743 (* 1 = 0.743743 loss)
I0428 20:23:29.462736  2237 solver.cpp:316] Optimization Done.
I0428 20:23:29.462743  2237 caffe.cpp:259] Optimization Done.
