I0428 19:57:51.182270 28827 caffe.cpp:218] Using GPUs 0
I0428 19:57:51.220051 28827 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:57:51.679847 28827 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test801.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:57:51.679999 28827 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test801.prototxt
I0428 19:57:51.680331 28827 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:57:51.680349 28827 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:57:51.680433 28827 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:57:51.680513 28827 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:51.680620 28827 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:57:51.680647 28827 net.cpp:86] Creating Layer mnist
I0428 19:57:51.680656 28827 net.cpp:382] mnist -> data
I0428 19:57:51.680680 28827 net.cpp:382] mnist -> label
I0428 19:57:51.681885 28827 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:57:51.684092 28827 net.cpp:124] Setting up mnist
I0428 19:57:51.684124 28827 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:57:51.684131 28827 net.cpp:131] Top shape: 64 (64)
I0428 19:57:51.684136 28827 net.cpp:139] Memory required for data: 200960
I0428 19:57:51.684145 28827 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:51.684164 28827 net.cpp:86] Creating Layer conv0
I0428 19:57:51.684182 28827 net.cpp:408] conv0 <- data
I0428 19:57:51.684197 28827 net.cpp:382] conv0 -> conv0
I0428 19:57:51.919143 28827 net.cpp:124] Setting up conv0
I0428 19:57:51.919172 28827 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:57:51.919178 28827 net.cpp:139] Memory required for data: 1675520
I0428 19:57:51.919212 28827 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:51.919229 28827 net.cpp:86] Creating Layer pool0
I0428 19:57:51.919242 28827 net.cpp:408] pool0 <- conv0
I0428 19:57:51.919251 28827 net.cpp:382] pool0 -> pool0
I0428 19:57:51.919307 28827 net.cpp:124] Setting up pool0
I0428 19:57:51.919317 28827 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:57:51.919322 28827 net.cpp:139] Memory required for data: 2044160
I0428 19:57:51.919327 28827 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:51.919342 28827 net.cpp:86] Creating Layer conv1
I0428 19:57:51.919348 28827 net.cpp:408] conv1 <- pool0
I0428 19:57:51.919358 28827 net.cpp:382] conv1 -> conv1
I0428 19:57:51.922258 28827 net.cpp:124] Setting up conv1
I0428 19:57:51.922274 28827 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:57:51.922279 28827 net.cpp:139] Memory required for data: 2126080
I0428 19:57:51.922307 28827 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:51.922318 28827 net.cpp:86] Creating Layer pool1
I0428 19:57:51.922323 28827 net.cpp:408] pool1 <- conv1
I0428 19:57:51.922334 28827 net.cpp:382] pool1 -> pool1
I0428 19:57:51.922379 28827 net.cpp:124] Setting up pool1
I0428 19:57:51.922389 28827 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:57:51.922394 28827 net.cpp:139] Memory required for data: 2146560
I0428 19:57:51.922399 28827 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:51.922410 28827 net.cpp:86] Creating Layer ip1
I0428 19:57:51.922418 28827 net.cpp:408] ip1 <- pool1
I0428 19:57:51.922428 28827 net.cpp:382] ip1 -> ip1
I0428 19:57:51.922552 28827 net.cpp:124] Setting up ip1
I0428 19:57:51.922561 28827 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:57:51.922565 28827 net.cpp:139] Memory required for data: 2152960
I0428 19:57:51.922577 28827 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:51.922590 28827 net.cpp:86] Creating Layer relu1
I0428 19:57:51.922595 28827 net.cpp:408] relu1 <- ip1
I0428 19:57:51.922602 28827 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:51.922791 28827 net.cpp:124] Setting up relu1
I0428 19:57:51.922801 28827 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:57:51.922806 28827 net.cpp:139] Memory required for data: 2159360
I0428 19:57:51.922811 28827 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:51.922822 28827 net.cpp:86] Creating Layer ip2
I0428 19:57:51.922828 28827 net.cpp:408] ip2 <- ip1
I0428 19:57:51.922837 28827 net.cpp:382] ip2 -> ip2
I0428 19:57:51.922955 28827 net.cpp:124] Setting up ip2
I0428 19:57:51.922965 28827 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:51.922969 28827 net.cpp:139] Memory required for data: 2161920
I0428 19:57:51.922978 28827 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:51.922987 28827 net.cpp:86] Creating Layer relu2
I0428 19:57:51.922993 28827 net.cpp:408] relu2 <- ip2
I0428 19:57:51.923002 28827 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:51.923799 28827 net.cpp:124] Setting up relu2
I0428 19:57:51.923825 28827 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:51.923830 28827 net.cpp:139] Memory required for data: 2164480
I0428 19:57:51.923835 28827 layer_factory.hpp:77] Creating layer ip3
I0428 19:57:51.923847 28827 net.cpp:86] Creating Layer ip3
I0428 19:57:51.923853 28827 net.cpp:408] ip3 <- ip2
I0428 19:57:51.923861 28827 net.cpp:382] ip3 -> ip3
I0428 19:57:51.923988 28827 net.cpp:124] Setting up ip3
I0428 19:57:51.923998 28827 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:51.924003 28827 net.cpp:139] Memory required for data: 2167040
I0428 19:57:51.924016 28827 layer_factory.hpp:77] Creating layer relu3
I0428 19:57:51.924028 28827 net.cpp:86] Creating Layer relu3
I0428 19:57:51.924036 28827 net.cpp:408] relu3 <- ip3
I0428 19:57:51.924042 28827 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:57:51.924247 28827 net.cpp:124] Setting up relu3
I0428 19:57:51.924257 28827 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:51.924263 28827 net.cpp:139] Memory required for data: 2169600
I0428 19:57:51.924268 28827 layer_factory.hpp:77] Creating layer loss
I0428 19:57:51.924278 28827 net.cpp:86] Creating Layer loss
I0428 19:57:51.924283 28827 net.cpp:408] loss <- ip3
I0428 19:57:51.924289 28827 net.cpp:408] loss <- label
I0428 19:57:51.924296 28827 net.cpp:382] loss -> loss
I0428 19:57:51.924316 28827 layer_factory.hpp:77] Creating layer loss
I0428 19:57:51.924552 28827 net.cpp:124] Setting up loss
I0428 19:57:51.924563 28827 net.cpp:131] Top shape: (1)
I0428 19:57:51.924567 28827 net.cpp:134]     with loss weight 1
I0428 19:57:51.924587 28827 net.cpp:139] Memory required for data: 2169604
I0428 19:57:51.924592 28827 net.cpp:200] loss needs backward computation.
I0428 19:57:51.924598 28827 net.cpp:200] relu3 needs backward computation.
I0428 19:57:51.924603 28827 net.cpp:200] ip3 needs backward computation.
I0428 19:57:51.924607 28827 net.cpp:200] relu2 needs backward computation.
I0428 19:57:51.924612 28827 net.cpp:200] ip2 needs backward computation.
I0428 19:57:51.924618 28827 net.cpp:200] relu1 needs backward computation.
I0428 19:57:51.924621 28827 net.cpp:200] ip1 needs backward computation.
I0428 19:57:51.924626 28827 net.cpp:200] pool1 needs backward computation.
I0428 19:57:51.924633 28827 net.cpp:200] conv1 needs backward computation.
I0428 19:57:51.924638 28827 net.cpp:200] pool0 needs backward computation.
I0428 19:57:51.924643 28827 net.cpp:200] conv0 needs backward computation.
I0428 19:57:51.924649 28827 net.cpp:202] mnist does not need backward computation.
I0428 19:57:51.924654 28827 net.cpp:244] This network produces output loss
I0428 19:57:51.924682 28827 net.cpp:257] Network initialization done.
I0428 19:57:51.925081 28827 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test801.prototxt
I0428 19:57:51.925132 28827 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:57:51.925246 28827 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:57:51.925365 28827 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:51.925439 28827 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:57:51.925457 28827 net.cpp:86] Creating Layer mnist
I0428 19:57:51.925467 28827 net.cpp:382] mnist -> data
I0428 19:57:51.925478 28827 net.cpp:382] mnist -> label
I0428 19:57:51.925598 28827 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:57:51.927880 28827 net.cpp:124] Setting up mnist
I0428 19:57:51.927894 28827 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:57:51.927901 28827 net.cpp:131] Top shape: 100 (100)
I0428 19:57:51.927906 28827 net.cpp:139] Memory required for data: 314000
I0428 19:57:51.927927 28827 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:57:51.927953 28827 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:57:51.927958 28827 net.cpp:408] label_mnist_1_split <- label
I0428 19:57:51.927969 28827 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:57:51.927981 28827 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:57:51.928094 28827 net.cpp:124] Setting up label_mnist_1_split
I0428 19:57:51.928104 28827 net.cpp:131] Top shape: 100 (100)
I0428 19:57:51.928110 28827 net.cpp:131] Top shape: 100 (100)
I0428 19:57:51.928115 28827 net.cpp:139] Memory required for data: 314800
I0428 19:57:51.928122 28827 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:51.928139 28827 net.cpp:86] Creating Layer conv0
I0428 19:57:51.928148 28827 net.cpp:408] conv0 <- data
I0428 19:57:51.928158 28827 net.cpp:382] conv0 -> conv0
I0428 19:57:51.929837 28827 net.cpp:124] Setting up conv0
I0428 19:57:51.929853 28827 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:57:51.929858 28827 net.cpp:139] Memory required for data: 2618800
I0428 19:57:51.929872 28827 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:51.929898 28827 net.cpp:86] Creating Layer pool0
I0428 19:57:51.929904 28827 net.cpp:408] pool0 <- conv0
I0428 19:57:51.929913 28827 net.cpp:382] pool0 -> pool0
I0428 19:57:51.929953 28827 net.cpp:124] Setting up pool0
I0428 19:57:51.929962 28827 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:57:51.929966 28827 net.cpp:139] Memory required for data: 3194800
I0428 19:57:51.929971 28827 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:51.929985 28827 net.cpp:86] Creating Layer conv1
I0428 19:57:51.929991 28827 net.cpp:408] conv1 <- pool0
I0428 19:57:51.930022 28827 net.cpp:382] conv1 -> conv1
I0428 19:57:51.932296 28827 net.cpp:124] Setting up conv1
I0428 19:57:51.932312 28827 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:57:51.932318 28827 net.cpp:139] Memory required for data: 3322800
I0428 19:57:51.932348 28827 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:51.932356 28827 net.cpp:86] Creating Layer pool1
I0428 19:57:51.932376 28827 net.cpp:408] pool1 <- conv1
I0428 19:57:51.932384 28827 net.cpp:382] pool1 -> pool1
I0428 19:57:51.932472 28827 net.cpp:124] Setting up pool1
I0428 19:57:51.932482 28827 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:57:51.932487 28827 net.cpp:139] Memory required for data: 3354800
I0428 19:57:51.932492 28827 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:51.932505 28827 net.cpp:86] Creating Layer ip1
I0428 19:57:51.932512 28827 net.cpp:408] ip1 <- pool1
I0428 19:57:51.932521 28827 net.cpp:382] ip1 -> ip1
I0428 19:57:51.932652 28827 net.cpp:124] Setting up ip1
I0428 19:57:51.932663 28827 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:57:51.932679 28827 net.cpp:139] Memory required for data: 3364800
I0428 19:57:51.932693 28827 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:51.932703 28827 net.cpp:86] Creating Layer relu1
I0428 19:57:51.932708 28827 net.cpp:408] relu1 <- ip1
I0428 19:57:51.932718 28827 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:51.933017 28827 net.cpp:124] Setting up relu1
I0428 19:57:51.933030 28827 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:57:51.933037 28827 net.cpp:139] Memory required for data: 3374800
I0428 19:57:51.933043 28827 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:51.933054 28827 net.cpp:86] Creating Layer ip2
I0428 19:57:51.933060 28827 net.cpp:408] ip2 <- ip1
I0428 19:57:51.933071 28827 net.cpp:382] ip2 -> ip2
I0428 19:57:51.933213 28827 net.cpp:124] Setting up ip2
I0428 19:57:51.933223 28827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:51.933228 28827 net.cpp:139] Memory required for data: 3378800
I0428 19:57:51.933236 28827 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:51.933244 28827 net.cpp:86] Creating Layer relu2
I0428 19:57:51.933249 28827 net.cpp:408] relu2 <- ip2
I0428 19:57:51.933255 28827 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:51.933444 28827 net.cpp:124] Setting up relu2
I0428 19:57:51.933455 28827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:51.933461 28827 net.cpp:139] Memory required for data: 3382800
I0428 19:57:51.933466 28827 layer_factory.hpp:77] Creating layer ip3
I0428 19:57:51.933490 28827 net.cpp:86] Creating Layer ip3
I0428 19:57:51.933495 28827 net.cpp:408] ip3 <- ip2
I0428 19:57:51.933521 28827 net.cpp:382] ip3 -> ip3
I0428 19:57:51.933634 28827 net.cpp:124] Setting up ip3
I0428 19:57:51.933643 28827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:51.933650 28827 net.cpp:139] Memory required for data: 3386800
I0428 19:57:51.933662 28827 layer_factory.hpp:77] Creating layer relu3
I0428 19:57:51.933673 28827 net.cpp:86] Creating Layer relu3
I0428 19:57:51.933681 28827 net.cpp:408] relu3 <- ip3
I0428 19:57:51.933689 28827 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:57:51.934552 28827 net.cpp:124] Setting up relu3
I0428 19:57:51.934581 28827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:51.934587 28827 net.cpp:139] Memory required for data: 3390800
I0428 19:57:51.934592 28827 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:57:51.934614 28827 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:57:51.934623 28827 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:57:51.934630 28827 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:57:51.934640 28827 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:57:51.934701 28827 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:57:51.934711 28827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:51.934718 28827 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:51.934723 28827 net.cpp:139] Memory required for data: 3398800
I0428 19:57:51.934728 28827 layer_factory.hpp:77] Creating layer accuracy
I0428 19:57:51.934751 28827 net.cpp:86] Creating Layer accuracy
I0428 19:57:51.934765 28827 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:57:51.934773 28827 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:57:51.934788 28827 net.cpp:382] accuracy -> accuracy
I0428 19:57:51.934803 28827 net.cpp:124] Setting up accuracy
I0428 19:57:51.934811 28827 net.cpp:131] Top shape: (1)
I0428 19:57:51.934816 28827 net.cpp:139] Memory required for data: 3398804
I0428 19:57:51.934823 28827 layer_factory.hpp:77] Creating layer loss
I0428 19:57:51.934835 28827 net.cpp:86] Creating Layer loss
I0428 19:57:51.934842 28827 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:57:51.934849 28827 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:57:51.934857 28827 net.cpp:382] loss -> loss
I0428 19:57:51.934869 28827 layer_factory.hpp:77] Creating layer loss
I0428 19:57:51.935159 28827 net.cpp:124] Setting up loss
I0428 19:57:51.935170 28827 net.cpp:131] Top shape: (1)
I0428 19:57:51.935174 28827 net.cpp:134]     with loss weight 1
I0428 19:57:51.935184 28827 net.cpp:139] Memory required for data: 3398808
I0428 19:57:51.935201 28827 net.cpp:200] loss needs backward computation.
I0428 19:57:51.935207 28827 net.cpp:202] accuracy does not need backward computation.
I0428 19:57:51.935214 28827 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:57:51.935219 28827 net.cpp:200] relu3 needs backward computation.
I0428 19:57:51.935223 28827 net.cpp:200] ip3 needs backward computation.
I0428 19:57:51.935228 28827 net.cpp:200] relu2 needs backward computation.
I0428 19:57:51.935233 28827 net.cpp:200] ip2 needs backward computation.
I0428 19:57:51.935240 28827 net.cpp:200] relu1 needs backward computation.
I0428 19:57:51.935245 28827 net.cpp:200] ip1 needs backward computation.
I0428 19:57:51.935250 28827 net.cpp:200] pool1 needs backward computation.
I0428 19:57:51.935256 28827 net.cpp:200] conv1 needs backward computation.
I0428 19:57:51.935261 28827 net.cpp:200] pool0 needs backward computation.
I0428 19:57:51.935266 28827 net.cpp:200] conv0 needs backward computation.
I0428 19:57:51.935271 28827 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:57:51.935277 28827 net.cpp:202] mnist does not need backward computation.
I0428 19:57:51.935282 28827 net.cpp:244] This network produces output accuracy
I0428 19:57:51.935287 28827 net.cpp:244] This network produces output loss
I0428 19:57:51.935304 28827 net.cpp:257] Network initialization done.
I0428 19:57:51.935350 28827 solver.cpp:56] Solver scaffolding done.
I0428 19:57:51.935755 28827 caffe.cpp:248] Starting Optimization
I0428 19:57:51.935762 28827 solver.cpp:273] Solving LeNet
I0428 19:57:51.935767 28827 solver.cpp:274] Learning Rate Policy: inv
I0428 19:57:51.935967 28827 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:57:51.940312 28827 blocking_queue.cpp:49] Waiting for data
I0428 19:57:52.014003 28834 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:52.014509 28827 solver.cpp:398]     Test net output #0: accuracy = 0.0741
I0428 19:57:52.014533 28827 solver.cpp:398]     Test net output #1: loss = 2.34366 (* 1 = 2.34366 loss)
I0428 19:57:52.017050 28827 solver.cpp:219] Iteration 0 (0 iter/s, 0.0812462s/100 iters), loss = 2.35895
I0428 19:57:52.017078 28827 solver.cpp:238]     Train net output #0: loss = 2.35895 (* 1 = 2.35895 loss)
I0428 19:57:52.017096 28827 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:57:52.093930 28827 solver.cpp:219] Iteration 100 (1301.35 iter/s, 0.076843s/100 iters), loss = 1.69107
I0428 19:57:52.093958 28827 solver.cpp:238]     Train net output #0: loss = 1.69107 (* 1 = 1.69107 loss)
I0428 19:57:52.093982 28827 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:57:52.172299 28827 solver.cpp:219] Iteration 200 (1276.59 iter/s, 0.078334s/100 iters), loss = 0.757607
I0428 19:57:52.172327 28827 solver.cpp:238]     Train net output #0: loss = 0.757607 (* 1 = 0.757607 loss)
I0428 19:57:52.172348 28827 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:57:52.250049 28827 solver.cpp:219] Iteration 300 (1286.8 iter/s, 0.0777124s/100 iters), loss = 0.664189
I0428 19:57:52.250092 28827 solver.cpp:238]     Train net output #0: loss = 0.664189 (* 1 = 0.664189 loss)
I0428 19:57:52.250108 28827 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:57:52.330121 28827 solver.cpp:219] Iteration 400 (1249.6 iter/s, 0.0800254s/100 iters), loss = 0.47401
I0428 19:57:52.330153 28827 solver.cpp:238]     Train net output #0: loss = 0.47401 (* 1 = 0.47401 loss)
I0428 19:57:52.330165 28827 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:57:52.403759 28827 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:57:52.456269 28834 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:52.456776 28827 solver.cpp:398]     Test net output #0: accuracy = 0.9196
I0428 19:57:52.456800 28827 solver.cpp:398]     Test net output #1: loss = 0.290996 (* 1 = 0.290996 loss)
I0428 19:57:52.457602 28827 solver.cpp:219] Iteration 500 (784.683 iter/s, 0.12744s/100 iters), loss = 0.337001
I0428 19:57:52.457633 28827 solver.cpp:238]     Train net output #0: loss = 0.337001 (* 1 = 0.337001 loss)
I0428 19:57:52.457659 28827 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:57:52.532938 28827 solver.cpp:219] Iteration 600 (1328.04 iter/s, 0.0752988s/100 iters), loss = 0.215042
I0428 19:57:52.532964 28827 solver.cpp:238]     Train net output #0: loss = 0.215042 (* 1 = 0.215042 loss)
I0428 19:57:52.532974 28827 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:57:52.609975 28827 solver.cpp:219] Iteration 700 (1298.74 iter/s, 0.0769977s/100 iters), loss = 0.279695
I0428 19:57:52.610041 28827 solver.cpp:238]     Train net output #0: loss = 0.279695 (* 1 = 0.279695 loss)
I0428 19:57:52.610056 28827 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:57:52.702888 28827 solver.cpp:219] Iteration 800 (1076.96 iter/s, 0.0928543s/100 iters), loss = 0.452838
I0428 19:57:52.702924 28827 solver.cpp:238]     Train net output #0: loss = 0.452838 (* 1 = 0.452838 loss)
I0428 19:57:52.702932 28827 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:57:52.794596 28827 solver.cpp:219] Iteration 900 (1090.99 iter/s, 0.0916603s/100 iters), loss = 0.260935
I0428 19:57:52.794651 28827 solver.cpp:238]     Train net output #0: loss = 0.260935 (* 1 = 0.260935 loss)
I0428 19:57:52.794663 28827 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:57:52.824205 28833 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:52.876711 28827 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:57:52.877528 28827 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:57:52.878042 28827 solver.cpp:311] Iteration 1000, loss = 0.177364
I0428 19:57:52.878070 28827 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:57:52.925335 28834 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:52.926043 28827 solver.cpp:398]     Test net output #0: accuracy = 0.9525
I0428 19:57:52.926066 28827 solver.cpp:398]     Test net output #1: loss = 0.155965 (* 1 = 0.155965 loss)
I0428 19:57:52.926084 28827 solver.cpp:316] Optimization Done.
I0428 19:57:52.926090 28827 caffe.cpp:259] Optimization Done.
