I0428 20:00:21.668264 29460 caffe.cpp:218] Using GPUs 0
I0428 20:00:21.705791 29460 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:22.157575 29460 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test874.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:22.157762 29460 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test874.prototxt
I0428 20:00:22.158145 29460 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:22.158175 29460 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:22.158273 29460 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:22.158335 29460 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:22.158416 29460 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:22.158437 29460 net.cpp:86] Creating Layer mnist
I0428 20:00:22.158442 29460 net.cpp:382] mnist -> data
I0428 20:00:22.158462 29460 net.cpp:382] mnist -> label
I0428 20:00:22.159446 29460 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:22.161607 29460 net.cpp:124] Setting up mnist
I0428 20:00:22.161636 29460 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:22.161643 29460 net.cpp:131] Top shape: 64 (64)
I0428 20:00:22.161645 29460 net.cpp:139] Memory required for data: 200960
I0428 20:00:22.161650 29460 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:22.161662 29460 net.cpp:86] Creating Layer conv0
I0428 20:00:22.161681 29460 net.cpp:408] conv0 <- data
I0428 20:00:22.161692 29460 net.cpp:382] conv0 -> conv0
I0428 20:00:22.388520 29460 net.cpp:124] Setting up conv0
I0428 20:00:22.388545 29460 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:22.388548 29460 net.cpp:139] Memory required for data: 1675520
I0428 20:00:22.388562 29460 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:22.388574 29460 net.cpp:86] Creating Layer pool0
I0428 20:00:22.388581 29460 net.cpp:408] pool0 <- conv0
I0428 20:00:22.388584 29460 net.cpp:382] pool0 -> pool0
I0428 20:00:22.388645 29460 net.cpp:124] Setting up pool0
I0428 20:00:22.388651 29460 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:22.388653 29460 net.cpp:139] Memory required for data: 2044160
I0428 20:00:22.388656 29460 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:22.388667 29460 net.cpp:86] Creating Layer conv1
I0428 20:00:22.388669 29460 net.cpp:408] conv1 <- pool0
I0428 20:00:22.388674 29460 net.cpp:382] conv1 -> conv1
I0428 20:00:22.391407 29460 net.cpp:124] Setting up conv1
I0428 20:00:22.391438 29460 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:22.391441 29460 net.cpp:139] Memory required for data: 2453760
I0428 20:00:22.391449 29460 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:22.391458 29460 net.cpp:86] Creating Layer pool1
I0428 20:00:22.391460 29460 net.cpp:408] pool1 <- conv1
I0428 20:00:22.391465 29460 net.cpp:382] pool1 -> pool1
I0428 20:00:22.391518 29460 net.cpp:124] Setting up pool1
I0428 20:00:22.391525 29460 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:22.391527 29460 net.cpp:139] Memory required for data: 2556160
I0428 20:00:22.391530 29460 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:22.391536 29460 net.cpp:86] Creating Layer ip1
I0428 20:00:22.391540 29460 net.cpp:408] ip1 <- pool1
I0428 20:00:22.391544 29460 net.cpp:382] ip1 -> ip1
I0428 20:00:22.392554 29460 net.cpp:124] Setting up ip1
I0428 20:00:22.392565 29460 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:22.392585 29460 net.cpp:139] Memory required for data: 2558720
I0428 20:00:22.392592 29460 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:22.392598 29460 net.cpp:86] Creating Layer relu1
I0428 20:00:22.392602 29460 net.cpp:408] relu1 <- ip1
I0428 20:00:22.392607 29460 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:22.392772 29460 net.cpp:124] Setting up relu1
I0428 20:00:22.392782 29460 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:22.392786 29460 net.cpp:139] Memory required for data: 2561280
I0428 20:00:22.392788 29460 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:22.392794 29460 net.cpp:86] Creating Layer ip2
I0428 20:00:22.392798 29460 net.cpp:408] ip2 <- ip1
I0428 20:00:22.392822 29460 net.cpp:382] ip2 -> ip2
I0428 20:00:22.392976 29460 net.cpp:124] Setting up ip2
I0428 20:00:22.392983 29460 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:22.392987 29460 net.cpp:139] Memory required for data: 2567680
I0428 20:00:22.392992 29460 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:22.392998 29460 net.cpp:86] Creating Layer relu2
I0428 20:00:22.393002 29460 net.cpp:408] relu2 <- ip2
I0428 20:00:22.393007 29460 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:22.393800 29460 net.cpp:124] Setting up relu2
I0428 20:00:22.393829 29460 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:22.393836 29460 net.cpp:139] Memory required for data: 2574080
I0428 20:00:22.393841 29460 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:22.393867 29460 net.cpp:86] Creating Layer ip3
I0428 20:00:22.393872 29460 net.cpp:408] ip3 <- ip2
I0428 20:00:22.393879 29460 net.cpp:382] ip3 -> ip3
I0428 20:00:22.394012 29460 net.cpp:124] Setting up ip3
I0428 20:00:22.394021 29460 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:22.394023 29460 net.cpp:139] Memory required for data: 2576640
I0428 20:00:22.394032 29460 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:22.394037 29460 net.cpp:86] Creating Layer relu3
I0428 20:00:22.394042 29460 net.cpp:408] relu3 <- ip3
I0428 20:00:22.394045 29460 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:22.394227 29460 net.cpp:124] Setting up relu3
I0428 20:00:22.394235 29460 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:22.394238 29460 net.cpp:139] Memory required for data: 2579200
I0428 20:00:22.394243 29460 layer_factory.hpp:77] Creating layer loss
I0428 20:00:22.394248 29460 net.cpp:86] Creating Layer loss
I0428 20:00:22.394250 29460 net.cpp:408] loss <- ip3
I0428 20:00:22.394254 29460 net.cpp:408] loss <- label
I0428 20:00:22.394259 29460 net.cpp:382] loss -> loss
I0428 20:00:22.394292 29460 layer_factory.hpp:77] Creating layer loss
I0428 20:00:22.394500 29460 net.cpp:124] Setting up loss
I0428 20:00:22.394510 29460 net.cpp:131] Top shape: (1)
I0428 20:00:22.394512 29460 net.cpp:134]     with loss weight 1
I0428 20:00:22.394526 29460 net.cpp:139] Memory required for data: 2579204
I0428 20:00:22.394531 29460 net.cpp:200] loss needs backward computation.
I0428 20:00:22.394533 29460 net.cpp:200] relu3 needs backward computation.
I0428 20:00:22.394536 29460 net.cpp:200] ip3 needs backward computation.
I0428 20:00:22.394539 29460 net.cpp:200] relu2 needs backward computation.
I0428 20:00:22.394542 29460 net.cpp:200] ip2 needs backward computation.
I0428 20:00:22.394546 29460 net.cpp:200] relu1 needs backward computation.
I0428 20:00:22.394547 29460 net.cpp:200] ip1 needs backward computation.
I0428 20:00:22.394551 29460 net.cpp:200] pool1 needs backward computation.
I0428 20:00:22.394553 29460 net.cpp:200] conv1 needs backward computation.
I0428 20:00:22.394556 29460 net.cpp:200] pool0 needs backward computation.
I0428 20:00:22.394559 29460 net.cpp:200] conv0 needs backward computation.
I0428 20:00:22.394578 29460 net.cpp:202] mnist does not need backward computation.
I0428 20:00:22.394582 29460 net.cpp:244] This network produces output loss
I0428 20:00:22.394590 29460 net.cpp:257] Network initialization done.
I0428 20:00:22.394932 29460 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test874.prototxt
I0428 20:00:22.394974 29460 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:22.395061 29460 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:22.395139 29460 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:22.395184 29460 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:22.395196 29460 net.cpp:86] Creating Layer mnist
I0428 20:00:22.395201 29460 net.cpp:382] mnist -> data
I0428 20:00:22.395210 29460 net.cpp:382] mnist -> label
I0428 20:00:22.395292 29460 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:22.397264 29460 net.cpp:124] Setting up mnist
I0428 20:00:22.397292 29460 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:22.397297 29460 net.cpp:131] Top shape: 100 (100)
I0428 20:00:22.397300 29460 net.cpp:139] Memory required for data: 314000
I0428 20:00:22.397305 29460 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:22.397339 29460 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:22.397343 29460 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:22.397348 29460 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:22.397356 29460 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:22.397395 29460 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:22.397400 29460 net.cpp:131] Top shape: 100 (100)
I0428 20:00:22.397404 29460 net.cpp:131] Top shape: 100 (100)
I0428 20:00:22.397408 29460 net.cpp:139] Memory required for data: 314800
I0428 20:00:22.397409 29460 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:22.397418 29460 net.cpp:86] Creating Layer conv0
I0428 20:00:22.397420 29460 net.cpp:408] conv0 <- data
I0428 20:00:22.397425 29460 net.cpp:382] conv0 -> conv0
I0428 20:00:22.398960 29460 net.cpp:124] Setting up conv0
I0428 20:00:22.398973 29460 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:22.398977 29460 net.cpp:139] Memory required for data: 2618800
I0428 20:00:22.398985 29460 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:22.399008 29460 net.cpp:86] Creating Layer pool0
I0428 20:00:22.399013 29460 net.cpp:408] pool0 <- conv0
I0428 20:00:22.399018 29460 net.cpp:382] pool0 -> pool0
I0428 20:00:22.399052 29460 net.cpp:124] Setting up pool0
I0428 20:00:22.399058 29460 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:22.399061 29460 net.cpp:139] Memory required for data: 3194800
I0428 20:00:22.399063 29460 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:22.399072 29460 net.cpp:86] Creating Layer conv1
I0428 20:00:22.399075 29460 net.cpp:408] conv1 <- pool0
I0428 20:00:22.399080 29460 net.cpp:382] conv1 -> conv1
I0428 20:00:22.401288 29460 net.cpp:124] Setting up conv1
I0428 20:00:22.401300 29460 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:22.401304 29460 net.cpp:139] Memory required for data: 3834800
I0428 20:00:22.401314 29460 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:22.401319 29460 net.cpp:86] Creating Layer pool1
I0428 20:00:22.401338 29460 net.cpp:408] pool1 <- conv1
I0428 20:00:22.401345 29460 net.cpp:382] pool1 -> pool1
I0428 20:00:22.401396 29460 net.cpp:124] Setting up pool1
I0428 20:00:22.401402 29460 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:22.401404 29460 net.cpp:139] Memory required for data: 3994800
I0428 20:00:22.401407 29460 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:22.401413 29460 net.cpp:86] Creating Layer ip1
I0428 20:00:22.401417 29460 net.cpp:408] ip1 <- pool1
I0428 20:00:22.401420 29460 net.cpp:382] ip1 -> ip1
I0428 20:00:22.401530 29460 net.cpp:124] Setting up ip1
I0428 20:00:22.401537 29460 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:22.401551 29460 net.cpp:139] Memory required for data: 3998800
I0428 20:00:22.401557 29460 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:22.401563 29460 net.cpp:86] Creating Layer relu1
I0428 20:00:22.401566 29460 net.cpp:408] relu1 <- ip1
I0428 20:00:22.401571 29460 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:22.401726 29460 net.cpp:124] Setting up relu1
I0428 20:00:22.401733 29460 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:22.401736 29460 net.cpp:139] Memory required for data: 4002800
I0428 20:00:22.401741 29460 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:22.401747 29460 net.cpp:86] Creating Layer ip2
I0428 20:00:22.401767 29460 net.cpp:408] ip2 <- ip1
I0428 20:00:22.401778 29460 net.cpp:382] ip2 -> ip2
I0428 20:00:22.401872 29460 net.cpp:124] Setting up ip2
I0428 20:00:22.401880 29460 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:22.401883 29460 net.cpp:139] Memory required for data: 4012800
I0428 20:00:22.401888 29460 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:22.401899 29460 net.cpp:86] Creating Layer relu2
I0428 20:00:22.401902 29460 net.cpp:408] relu2 <- ip2
I0428 20:00:22.401906 29460 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:22.402060 29460 net.cpp:124] Setting up relu2
I0428 20:00:22.402068 29460 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:22.402071 29460 net.cpp:139] Memory required for data: 4022800
I0428 20:00:22.402074 29460 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:22.402079 29460 net.cpp:86] Creating Layer ip3
I0428 20:00:22.402082 29460 net.cpp:408] ip3 <- ip2
I0428 20:00:22.402086 29460 net.cpp:382] ip3 -> ip3
I0428 20:00:22.402186 29460 net.cpp:124] Setting up ip3
I0428 20:00:22.402194 29460 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:22.402197 29460 net.cpp:139] Memory required for data: 4026800
I0428 20:00:22.402204 29460 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:22.402209 29460 net.cpp:86] Creating Layer relu3
I0428 20:00:22.402214 29460 net.cpp:408] relu3 <- ip3
I0428 20:00:22.402217 29460 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:22.403009 29460 net.cpp:124] Setting up relu3
I0428 20:00:22.403022 29460 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:22.403025 29460 net.cpp:139] Memory required for data: 4030800
I0428 20:00:22.403028 29460 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:22.403033 29460 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:22.403036 29460 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:22.403043 29460 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:22.403048 29460 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:22.403087 29460 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:22.403092 29460 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:22.403096 29460 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:22.403106 29460 net.cpp:139] Memory required for data: 4038800
I0428 20:00:22.403110 29460 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:22.403115 29460 net.cpp:86] Creating Layer accuracy
I0428 20:00:22.403117 29460 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:22.403121 29460 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:22.403126 29460 net.cpp:382] accuracy -> accuracy
I0428 20:00:22.403132 29460 net.cpp:124] Setting up accuracy
I0428 20:00:22.403136 29460 net.cpp:131] Top shape: (1)
I0428 20:00:22.403139 29460 net.cpp:139] Memory required for data: 4038804
I0428 20:00:22.403142 29460 layer_factory.hpp:77] Creating layer loss
I0428 20:00:22.403146 29460 net.cpp:86] Creating Layer loss
I0428 20:00:22.403149 29460 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:22.403152 29460 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:22.403157 29460 net.cpp:382] loss -> loss
I0428 20:00:22.403162 29460 layer_factory.hpp:77] Creating layer loss
I0428 20:00:22.403414 29460 net.cpp:124] Setting up loss
I0428 20:00:22.403424 29460 net.cpp:131] Top shape: (1)
I0428 20:00:22.403429 29460 net.cpp:134]     with loss weight 1
I0428 20:00:22.403450 29460 net.cpp:139] Memory required for data: 4038808
I0428 20:00:22.403453 29460 net.cpp:200] loss needs backward computation.
I0428 20:00:22.403457 29460 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:22.403462 29460 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:22.403470 29460 net.cpp:200] relu3 needs backward computation.
I0428 20:00:22.403473 29460 net.cpp:200] ip3 needs backward computation.
I0428 20:00:22.403476 29460 net.cpp:200] relu2 needs backward computation.
I0428 20:00:22.403479 29460 net.cpp:200] ip2 needs backward computation.
I0428 20:00:22.403487 29460 net.cpp:200] relu1 needs backward computation.
I0428 20:00:22.403491 29460 net.cpp:200] ip1 needs backward computation.
I0428 20:00:22.403493 29460 net.cpp:200] pool1 needs backward computation.
I0428 20:00:22.403496 29460 net.cpp:200] conv1 needs backward computation.
I0428 20:00:22.403506 29460 net.cpp:200] pool0 needs backward computation.
I0428 20:00:22.403508 29460 net.cpp:200] conv0 needs backward computation.
I0428 20:00:22.403522 29460 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:22.403527 29460 net.cpp:202] mnist does not need backward computation.
I0428 20:00:22.403528 29460 net.cpp:244] This network produces output accuracy
I0428 20:00:22.403532 29460 net.cpp:244] This network produces output loss
I0428 20:00:22.403542 29460 net.cpp:257] Network initialization done.
I0428 20:00:22.403581 29460 solver.cpp:56] Solver scaffolding done.
I0428 20:00:22.403945 29460 caffe.cpp:248] Starting Optimization
I0428 20:00:22.403952 29460 solver.cpp:273] Solving LeNet
I0428 20:00:22.403966 29460 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:22.404114 29460 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:22.408643 29460 blocking_queue.cpp:49] Waiting for data
I0428 20:00:22.486276 29467 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:22.486861 29460 solver.cpp:398]     Test net output #0: accuracy = 0.129
I0428 20:00:22.486913 29460 solver.cpp:398]     Test net output #1: loss = 2.28993 (* 1 = 2.28993 loss)
I0428 20:00:22.489316 29460 solver.cpp:219] Iteration 0 (0 iter/s, 0.0853248s/100 iters), loss = 2.29804
I0428 20:00:22.489361 29460 solver.cpp:238]     Train net output #0: loss = 2.29804 (* 1 = 2.29804 loss)
I0428 20:00:22.489372 29460 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:22.585417 29460 solver.cpp:219] Iteration 100 (1041.15 iter/s, 0.0960473s/100 iters), loss = 1.40516
I0428 20:00:22.585443 29460 solver.cpp:238]     Train net output #0: loss = 1.40516 (* 1 = 1.40516 loss)
I0428 20:00:22.585448 29460 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:22.674986 29460 solver.cpp:219] Iteration 200 (1116.89 iter/s, 0.0895345s/100 iters), loss = 1.26238
I0428 20:00:22.675009 29460 solver.cpp:238]     Train net output #0: loss = 1.26238 (* 1 = 1.26238 loss)
I0428 20:00:22.675015 29460 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:22.761848 29460 solver.cpp:219] Iteration 300 (1151.69 iter/s, 0.0868291s/100 iters), loss = 1.31543
I0428 20:00:22.761871 29460 solver.cpp:238]     Train net output #0: loss = 1.31543 (* 1 = 1.31543 loss)
I0428 20:00:22.761878 29460 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:22.848623 29460 solver.cpp:219] Iteration 400 (1152.83 iter/s, 0.086743s/100 iters), loss = 0.960531
I0428 20:00:22.848647 29460 solver.cpp:238]     Train net output #0: loss = 0.960531 (* 1 = 0.960531 loss)
I0428 20:00:22.848654 29460 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:22.935437 29460 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:23.011126 29467 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:23.011663 29460 solver.cpp:398]     Test net output #0: accuracy = 0.4974
I0428 20:00:23.011682 29460 solver.cpp:398]     Test net output #1: loss = 1.22956 (* 1 = 1.22956 loss)
I0428 20:00:23.012612 29460 solver.cpp:219] Iteration 500 (609.936 iter/s, 0.163952s/100 iters), loss = 1.2122
I0428 20:00:23.012670 29460 solver.cpp:238]     Train net output #0: loss = 1.2122 (* 1 = 1.2122 loss)
I0428 20:00:23.012708 29460 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:23.111212 29460 solver.cpp:219] Iteration 600 (1014.9 iter/s, 0.0985319s/100 iters), loss = 1.12837
I0428 20:00:23.111234 29460 solver.cpp:238]     Train net output #0: loss = 1.12837 (* 1 = 1.12837 loss)
I0428 20:00:23.111240 29460 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:23.201376 29460 solver.cpp:219] Iteration 700 (1109.49 iter/s, 0.0901315s/100 iters), loss = 1.24628
I0428 20:00:23.201400 29460 solver.cpp:238]     Train net output #0: loss = 1.24628 (* 1 = 1.24628 loss)
I0428 20:00:23.201406 29460 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:23.288483 29460 solver.cpp:219] Iteration 800 (1148.45 iter/s, 0.0870738s/100 iters), loss = 1.15274
I0428 20:00:23.288506 29460 solver.cpp:238]     Train net output #0: loss = 1.15274 (* 1 = 1.15274 loss)
I0428 20:00:23.288512 29460 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:23.375619 29460 solver.cpp:219] Iteration 900 (1148.07 iter/s, 0.0871025s/100 iters), loss = 0.857324
I0428 20:00:23.375643 29460 solver.cpp:238]     Train net output #0: loss = 0.857324 (* 1 = 0.857324 loss)
I0428 20:00:23.375648 29460 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:23.404619 29466 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:23.461868 29460 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:23.462699 29460 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:23.463234 29460 solver.cpp:311] Iteration 1000, loss = 1.08705
I0428 20:00:23.463249 29460 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:23.535886 29467 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:23.536492 29460 solver.cpp:398]     Test net output #0: accuracy = 0.6026
I0428 20:00:23.536520 29460 solver.cpp:398]     Test net output #1: loss = 0.959077 (* 1 = 0.959077 loss)
I0428 20:00:23.536527 29460 solver.cpp:316] Optimization Done.
I0428 20:00:23.536533 29460 caffe.cpp:259] Optimization Done.
