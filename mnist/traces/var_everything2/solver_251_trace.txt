I0428 19:36:58.135512 23754 caffe.cpp:218] Using GPUs 0
I0428 19:36:58.170465 23754 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:36:58.677896 23754 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test251.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:36:58.678041 23754 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test251.prototxt
I0428 19:36:58.678411 23754 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:36:58.678433 23754 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:36:58.678527 23754 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:58.678606 23754 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:58.678699 23754 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:36:58.678719 23754 net.cpp:86] Creating Layer mnist
I0428 19:36:58.678728 23754 net.cpp:382] mnist -> data
I0428 19:36:58.678750 23754 net.cpp:382] mnist -> label
I0428 19:36:58.679813 23754 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:36:58.682240 23754 net.cpp:124] Setting up mnist
I0428 19:36:58.682256 23754 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:36:58.682262 23754 net.cpp:131] Top shape: 64 (64)
I0428 19:36:58.682265 23754 net.cpp:139] Memory required for data: 200960
I0428 19:36:58.682272 23754 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:58.682289 23754 net.cpp:86] Creating Layer conv0
I0428 19:36:58.682296 23754 net.cpp:408] conv0 <- data
I0428 19:36:58.682307 23754 net.cpp:382] conv0 -> conv0
I0428 19:36:58.973992 23754 net.cpp:124] Setting up conv0
I0428 19:36:58.974022 23754 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:36:58.974027 23754 net.cpp:139] Memory required for data: 14946560
I0428 19:36:58.974045 23754 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:58.974059 23754 net.cpp:86] Creating Layer pool0
I0428 19:36:58.974083 23754 net.cpp:408] pool0 <- conv0
I0428 19:36:58.974090 23754 net.cpp:382] pool0 -> pool0
I0428 19:36:58.974148 23754 net.cpp:124] Setting up pool0
I0428 19:36:58.974158 23754 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:36:58.974161 23754 net.cpp:139] Memory required for data: 18632960
I0428 19:36:58.974165 23754 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:58.974174 23754 net.cpp:86] Creating Layer ip1
I0428 19:36:58.974177 23754 net.cpp:408] ip1 <- pool0
I0428 19:36:58.974184 23754 net.cpp:382] ip1 -> ip1
I0428 19:36:58.976250 23754 net.cpp:124] Setting up ip1
I0428 19:36:58.976267 23754 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:58.976272 23754 net.cpp:139] Memory required for data: 18635520
I0428 19:36:58.976282 23754 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:58.976290 23754 net.cpp:86] Creating Layer relu1
I0428 19:36:58.976294 23754 net.cpp:408] relu1 <- ip1
I0428 19:36:58.976300 23754 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:58.976502 23754 net.cpp:124] Setting up relu1
I0428 19:36:58.976513 23754 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:58.976517 23754 net.cpp:139] Memory required for data: 18638080
I0428 19:36:58.976521 23754 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:58.976529 23754 net.cpp:86] Creating Layer ip2
I0428 19:36:58.976532 23754 net.cpp:408] ip2 <- ip1
I0428 19:36:58.976538 23754 net.cpp:382] ip2 -> ip2
I0428 19:36:58.976652 23754 net.cpp:124] Setting up ip2
I0428 19:36:58.976661 23754 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:36:58.976665 23754 net.cpp:139] Memory required for data: 18644480
I0428 19:36:58.976673 23754 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:58.976680 23754 net.cpp:86] Creating Layer relu2
I0428 19:36:58.976683 23754 net.cpp:408] relu2 <- ip2
I0428 19:36:58.976689 23754 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:58.977561 23754 net.cpp:124] Setting up relu2
I0428 19:36:58.977577 23754 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:36:58.977582 23754 net.cpp:139] Memory required for data: 18650880
I0428 19:36:58.977586 23754 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:58.977594 23754 net.cpp:86] Creating Layer ip3
I0428 19:36:58.977598 23754 net.cpp:408] ip3 <- ip2
I0428 19:36:58.977605 23754 net.cpp:382] ip3 -> ip3
I0428 19:36:58.977720 23754 net.cpp:124] Setting up ip3
I0428 19:36:58.977728 23754 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:58.977732 23754 net.cpp:139] Memory required for data: 18653440
I0428 19:36:58.977740 23754 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:58.977746 23754 net.cpp:86] Creating Layer relu3
I0428 19:36:58.977751 23754 net.cpp:408] relu3 <- ip3
I0428 19:36:58.977756 23754 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:58.977932 23754 net.cpp:124] Setting up relu3
I0428 19:36:58.977942 23754 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:58.977946 23754 net.cpp:139] Memory required for data: 18656000
I0428 19:36:58.977949 23754 layer_factory.hpp:77] Creating layer loss
I0428 19:36:58.977957 23754 net.cpp:86] Creating Layer loss
I0428 19:36:58.977960 23754 net.cpp:408] loss <- ip3
I0428 19:36:58.977967 23754 net.cpp:408] loss <- label
I0428 19:36:58.977972 23754 net.cpp:382] loss -> loss
I0428 19:36:58.977993 23754 layer_factory.hpp:77] Creating layer loss
I0428 19:36:58.978260 23754 net.cpp:124] Setting up loss
I0428 19:36:58.978271 23754 net.cpp:131] Top shape: (1)
I0428 19:36:58.978274 23754 net.cpp:134]     with loss weight 1
I0428 19:36:58.978292 23754 net.cpp:139] Memory required for data: 18656004
I0428 19:36:58.978296 23754 net.cpp:200] loss needs backward computation.
I0428 19:36:58.978302 23754 net.cpp:200] relu3 needs backward computation.
I0428 19:36:58.978305 23754 net.cpp:200] ip3 needs backward computation.
I0428 19:36:58.978309 23754 net.cpp:200] relu2 needs backward computation.
I0428 19:36:58.978312 23754 net.cpp:200] ip2 needs backward computation.
I0428 19:36:58.978317 23754 net.cpp:200] relu1 needs backward computation.
I0428 19:36:58.978319 23754 net.cpp:200] ip1 needs backward computation.
I0428 19:36:58.978335 23754 net.cpp:200] pool0 needs backward computation.
I0428 19:36:58.978339 23754 net.cpp:200] conv0 needs backward computation.
I0428 19:36:58.978343 23754 net.cpp:202] mnist does not need backward computation.
I0428 19:36:58.978348 23754 net.cpp:244] This network produces output loss
I0428 19:36:58.978356 23754 net.cpp:257] Network initialization done.
I0428 19:36:58.978685 23754 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test251.prototxt
I0428 19:36:58.978716 23754 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:36:58.978811 23754 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:58.978883 23754 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:58.978934 23754 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:36:58.978948 23754 net.cpp:86] Creating Layer mnist
I0428 19:36:58.978955 23754 net.cpp:382] mnist -> data
I0428 19:36:58.978963 23754 net.cpp:382] mnist -> label
I0428 19:36:58.979084 23754 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:36:58.980306 23754 net.cpp:124] Setting up mnist
I0428 19:36:58.980324 23754 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:36:58.980329 23754 net.cpp:131] Top shape: 100 (100)
I0428 19:36:58.980334 23754 net.cpp:139] Memory required for data: 314000
I0428 19:36:58.980339 23754 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:36:58.980350 23754 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:36:58.980355 23754 net.cpp:408] label_mnist_1_split <- label
I0428 19:36:58.980361 23754 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:36:58.980368 23754 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:36:58.980464 23754 net.cpp:124] Setting up label_mnist_1_split
I0428 19:36:58.980474 23754 net.cpp:131] Top shape: 100 (100)
I0428 19:36:58.980479 23754 net.cpp:131] Top shape: 100 (100)
I0428 19:36:58.980482 23754 net.cpp:139] Memory required for data: 314800
I0428 19:36:58.980497 23754 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:58.980509 23754 net.cpp:86] Creating Layer conv0
I0428 19:36:58.980512 23754 net.cpp:408] conv0 <- data
I0428 19:36:58.980518 23754 net.cpp:382] conv0 -> conv0
I0428 19:36:58.982239 23754 net.cpp:124] Setting up conv0
I0428 19:36:58.982256 23754 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:36:58.982260 23754 net.cpp:139] Memory required for data: 23354800
I0428 19:36:58.982272 23754 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:58.982282 23754 net.cpp:86] Creating Layer pool0
I0428 19:36:58.982286 23754 net.cpp:408] pool0 <- conv0
I0428 19:36:58.982292 23754 net.cpp:382] pool0 -> pool0
I0428 19:36:58.982378 23754 net.cpp:124] Setting up pool0
I0428 19:36:58.982386 23754 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:36:58.982390 23754 net.cpp:139] Memory required for data: 29114800
I0428 19:36:58.982394 23754 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:58.982403 23754 net.cpp:86] Creating Layer ip1
I0428 19:36:58.982406 23754 net.cpp:408] ip1 <- pool0
I0428 19:36:58.982414 23754 net.cpp:382] ip1 -> ip1
I0428 19:36:58.984536 23754 net.cpp:124] Setting up ip1
I0428 19:36:58.984550 23754 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:58.984555 23754 net.cpp:139] Memory required for data: 29118800
I0428 19:36:58.984565 23754 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:58.984571 23754 net.cpp:86] Creating Layer relu1
I0428 19:36:58.984575 23754 net.cpp:408] relu1 <- ip1
I0428 19:36:58.984582 23754 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:58.984802 23754 net.cpp:124] Setting up relu1
I0428 19:36:58.984822 23754 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:58.984825 23754 net.cpp:139] Memory required for data: 29122800
I0428 19:36:58.984829 23754 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:58.984838 23754 net.cpp:86] Creating Layer ip2
I0428 19:36:58.984843 23754 net.cpp:408] ip2 <- ip1
I0428 19:36:58.984848 23754 net.cpp:382] ip2 -> ip2
I0428 19:36:58.984972 23754 net.cpp:124] Setting up ip2
I0428 19:36:58.984980 23754 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:36:58.984984 23754 net.cpp:139] Memory required for data: 29132800
I0428 19:36:58.984993 23754 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:58.985000 23754 net.cpp:86] Creating Layer relu2
I0428 19:36:58.985004 23754 net.cpp:408] relu2 <- ip2
I0428 19:36:58.985010 23754 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:58.985935 23754 net.cpp:124] Setting up relu2
I0428 19:36:58.985949 23754 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:36:58.985954 23754 net.cpp:139] Memory required for data: 29142800
I0428 19:36:58.985958 23754 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:58.985967 23754 net.cpp:86] Creating Layer ip3
I0428 19:36:58.985971 23754 net.cpp:408] ip3 <- ip2
I0428 19:36:58.985980 23754 net.cpp:382] ip3 -> ip3
I0428 19:36:58.986107 23754 net.cpp:124] Setting up ip3
I0428 19:36:58.986117 23754 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:58.986122 23754 net.cpp:139] Memory required for data: 29146800
I0428 19:36:58.986129 23754 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:58.986135 23754 net.cpp:86] Creating Layer relu3
I0428 19:36:58.986138 23754 net.cpp:408] relu3 <- ip3
I0428 19:36:58.986142 23754 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:58.986331 23754 net.cpp:124] Setting up relu3
I0428 19:36:58.986341 23754 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:58.986346 23754 net.cpp:139] Memory required for data: 29150800
I0428 19:36:58.986348 23754 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:36:58.986356 23754 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:36:58.986359 23754 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:36:58.986366 23754 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:36:58.986374 23754 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:36:58.986415 23754 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:36:58.986423 23754 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:58.986440 23754 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:58.986444 23754 net.cpp:139] Memory required for data: 29158800
I0428 19:36:58.986448 23754 layer_factory.hpp:77] Creating layer accuracy
I0428 19:36:58.986457 23754 net.cpp:86] Creating Layer accuracy
I0428 19:36:58.986462 23754 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:36:58.986467 23754 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:36:58.986472 23754 net.cpp:382] accuracy -> accuracy
I0428 19:36:58.986481 23754 net.cpp:124] Setting up accuracy
I0428 19:36:58.986486 23754 net.cpp:131] Top shape: (1)
I0428 19:36:58.986490 23754 net.cpp:139] Memory required for data: 29158804
I0428 19:36:58.986495 23754 layer_factory.hpp:77] Creating layer loss
I0428 19:36:58.986501 23754 net.cpp:86] Creating Layer loss
I0428 19:36:58.986505 23754 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:36:58.986510 23754 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:36:58.986515 23754 net.cpp:382] loss -> loss
I0428 19:36:58.986522 23754 layer_factory.hpp:77] Creating layer loss
I0428 19:36:58.986865 23754 net.cpp:124] Setting up loss
I0428 19:36:58.986877 23754 net.cpp:131] Top shape: (1)
I0428 19:36:58.986881 23754 net.cpp:134]     with loss weight 1
I0428 19:36:58.986888 23754 net.cpp:139] Memory required for data: 29158808
I0428 19:36:58.986892 23754 net.cpp:200] loss needs backward computation.
I0428 19:36:58.986896 23754 net.cpp:202] accuracy does not need backward computation.
I0428 19:36:58.986901 23754 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:36:58.986905 23754 net.cpp:200] relu3 needs backward computation.
I0428 19:36:58.986908 23754 net.cpp:200] ip3 needs backward computation.
I0428 19:36:58.986912 23754 net.cpp:200] relu2 needs backward computation.
I0428 19:36:58.986915 23754 net.cpp:200] ip2 needs backward computation.
I0428 19:36:58.986918 23754 net.cpp:200] relu1 needs backward computation.
I0428 19:36:58.986922 23754 net.cpp:200] ip1 needs backward computation.
I0428 19:36:58.986925 23754 net.cpp:200] pool0 needs backward computation.
I0428 19:36:58.986929 23754 net.cpp:200] conv0 needs backward computation.
I0428 19:36:58.986933 23754 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:36:58.986937 23754 net.cpp:202] mnist does not need backward computation.
I0428 19:36:58.986940 23754 net.cpp:244] This network produces output accuracy
I0428 19:36:58.986944 23754 net.cpp:244] This network produces output loss
I0428 19:36:58.986958 23754 net.cpp:257] Network initialization done.
I0428 19:36:58.987000 23754 solver.cpp:56] Solver scaffolding done.
I0428 19:36:58.987318 23754 caffe.cpp:248] Starting Optimization
I0428 19:36:58.987325 23754 solver.cpp:273] Solving LeNet
I0428 19:36:58.987329 23754 solver.cpp:274] Learning Rate Policy: inv
I0428 19:36:58.988173 23754 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:36:59.155495 23761 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:59.159893 23754 solver.cpp:398]     Test net output #0: accuracy = 0.1271
I0428 19:36:59.159914 23754 solver.cpp:398]     Test net output #1: loss = 2.30851 (* 1 = 2.30851 loss)
I0428 19:36:59.165050 23754 solver.cpp:219] Iteration 0 (0 iter/s, 0.177687s/100 iters), loss = 2.29319
I0428 19:36:59.165076 23754 solver.cpp:238]     Train net output #0: loss = 2.29319 (* 1 = 2.29319 loss)
I0428 19:36:59.165088 23754 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:36:59.390905 23754 solver.cpp:219] Iteration 100 (442.853 iter/s, 0.225809s/100 iters), loss = 1.38228
I0428 19:36:59.390946 23754 solver.cpp:238]     Train net output #0: loss = 1.38228 (* 1 = 1.38228 loss)
I0428 19:36:59.390954 23754 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:36:59.616492 23754 solver.cpp:219] Iteration 200 (443.376 iter/s, 0.225542s/100 iters), loss = 1.01628
I0428 19:36:59.616533 23754 solver.cpp:238]     Train net output #0: loss = 1.01628 (* 1 = 1.01628 loss)
I0428 19:36:59.616539 23754 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:36:59.843006 23754 solver.cpp:219] Iteration 300 (441.585 iter/s, 0.226457s/100 iters), loss = 1.14918
I0428 19:36:59.843060 23754 solver.cpp:238]     Train net output #0: loss = 1.14918 (* 1 = 1.14918 loss)
I0428 19:36:59.843068 23754 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:00.067617 23754 solver.cpp:219] Iteration 400 (445.325 iter/s, 0.224555s/100 iters), loss = 1.19131
I0428 19:37:00.067658 23754 solver.cpp:238]     Train net output #0: loss = 1.19131 (* 1 = 1.19131 loss)
I0428 19:37:00.067665 23754 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:00.287835 23754 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:00.445176 23761 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:00.449645 23754 solver.cpp:398]     Test net output #0: accuracy = 0.6784
I0428 19:37:00.449683 23754 solver.cpp:398]     Test net output #1: loss = 0.870253 (* 1 = 0.870253 loss)
I0428 19:37:00.451944 23754 solver.cpp:219] Iteration 500 (260.239 iter/s, 0.384262s/100 iters), loss = 1.22046
I0428 19:37:00.451983 23754 solver.cpp:238]     Train net output #0: loss = 1.22046 (* 1 = 1.22046 loss)
I0428 19:37:00.451989 23754 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:00.679319 23754 solver.cpp:219] Iteration 600 (439.881 iter/s, 0.227334s/100 iters), loss = 0.628181
I0428 19:37:00.679375 23754 solver.cpp:238]     Train net output #0: loss = 0.628181 (* 1 = 0.628181 loss)
I0428 19:37:00.679381 23754 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:00.905565 23754 solver.cpp:219] Iteration 700 (442.14 iter/s, 0.226173s/100 iters), loss = 1.01252
I0428 19:37:00.905606 23754 solver.cpp:238]     Train net output #0: loss = 1.01252 (* 1 = 1.01252 loss)
I0428 19:37:00.905611 23754 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:01.132585 23754 solver.cpp:219] Iteration 800 (440.627 iter/s, 0.226949s/100 iters), loss = 0.921692
I0428 19:37:01.132627 23754 solver.cpp:238]     Train net output #0: loss = 0.921692 (* 1 = 0.921692 loss)
I0428 19:37:01.132633 23754 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:01.359012 23754 solver.cpp:219] Iteration 900 (441.758 iter/s, 0.226369s/100 iters), loss = 0.77128
I0428 19:37:01.359055 23754 solver.cpp:238]     Train net output #0: loss = 0.77128 (* 1 = 0.77128 loss)
I0428 19:37:01.359061 23754 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:01.433979 23760 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:01.583290 23754 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:01.587214 23754 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:01.589845 23754 solver.cpp:311] Iteration 1000, loss = 0.594337
I0428 19:37:01.589861 23754 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:01.748271 23761 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:01.752912 23754 solver.cpp:398]     Test net output #0: accuracy = 0.767
I0428 19:37:01.752949 23754 solver.cpp:398]     Test net output #1: loss = 0.63807 (* 1 = 0.63807 loss)
I0428 19:37:01.752954 23754 solver.cpp:316] Optimization Done.
I0428 19:37:01.752959 23754 caffe.cpp:259] Optimization Done.
