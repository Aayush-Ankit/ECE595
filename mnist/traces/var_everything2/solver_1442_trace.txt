I0428 20:24:43.970386  2451 caffe.cpp:218] Using GPUs 0
I0428 20:24:44.001777  2451 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:44.463434  2451 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1442.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:44.463604  2451 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1442.prototxt
I0428 20:24:44.463989  2451 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:44.464021  2451 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:44.464104  2451 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:44.464170  2451 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:44.464251  2451 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:44.464272  2451 net.cpp:86] Creating Layer mnist
I0428 20:24:44.464279  2451 net.cpp:382] mnist -> data
I0428 20:24:44.464298  2451 net.cpp:382] mnist -> label
I0428 20:24:44.465330  2451 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:44.467697  2451 net.cpp:124] Setting up mnist
I0428 20:24:44.467733  2451 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:44.467754  2451 net.cpp:131] Top shape: 64 (64)
I0428 20:24:44.467757  2451 net.cpp:139] Memory required for data: 200960
I0428 20:24:44.467763  2451 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:44.467778  2451 net.cpp:86] Creating Layer conv0
I0428 20:24:44.467797  2451 net.cpp:408] conv0 <- data
I0428 20:24:44.467808  2451 net.cpp:382] conv0 -> conv0
I0428 20:24:44.715296  2451 net.cpp:124] Setting up conv0
I0428 20:24:44.715319  2451 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:44.715323  2451 net.cpp:139] Memory required for data: 7573760
I0428 20:24:44.715337  2451 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:44.715349  2451 net.cpp:86] Creating Layer pool0
I0428 20:24:44.715353  2451 net.cpp:408] pool0 <- conv0
I0428 20:24:44.715358  2451 net.cpp:382] pool0 -> pool0
I0428 20:24:44.715404  2451 net.cpp:124] Setting up pool0
I0428 20:24:44.715409  2451 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:44.715411  2451 net.cpp:139] Memory required for data: 9416960
I0428 20:24:44.715415  2451 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:44.715425  2451 net.cpp:86] Creating Layer conv1
I0428 20:24:44.715428  2451 net.cpp:408] conv1 <- pool0
I0428 20:24:44.715448  2451 net.cpp:382] conv1 -> conv1
I0428 20:24:44.719141  2451 net.cpp:124] Setting up conv1
I0428 20:24:44.719158  2451 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:44.719163  2451 net.cpp:139] Memory required for data: 11055360
I0428 20:24:44.719172  2451 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:44.719180  2451 net.cpp:86] Creating Layer pool1
I0428 20:24:44.719184  2451 net.cpp:408] pool1 <- conv1
I0428 20:24:44.719189  2451 net.cpp:382] pool1 -> pool1
I0428 20:24:44.719229  2451 net.cpp:124] Setting up pool1
I0428 20:24:44.719240  2451 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:44.719244  2451 net.cpp:139] Memory required for data: 11464960
I0428 20:24:44.719247  2451 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:44.719256  2451 net.cpp:86] Creating Layer ip1
I0428 20:24:44.719259  2451 net.cpp:408] ip1 <- pool1
I0428 20:24:44.719264  2451 net.cpp:382] ip1 -> ip1
I0428 20:24:44.719925  2451 net.cpp:124] Setting up ip1
I0428 20:24:44.719933  2451 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:44.719935  2451 net.cpp:139] Memory required for data: 11477760
I0428 20:24:44.719944  2451 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:44.719949  2451 net.cpp:86] Creating Layer relu1
I0428 20:24:44.719952  2451 net.cpp:408] relu1 <- ip1
I0428 20:24:44.719956  2451 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:44.720132  2451 net.cpp:124] Setting up relu1
I0428 20:24:44.720141  2451 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:44.720144  2451 net.cpp:139] Memory required for data: 11490560
I0428 20:24:44.720147  2451 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:44.720154  2451 net.cpp:86] Creating Layer ip2
I0428 20:24:44.720156  2451 net.cpp:408] ip2 <- ip1
I0428 20:24:44.720161  2451 net.cpp:382] ip2 -> ip2
I0428 20:24:44.720268  2451 net.cpp:124] Setting up ip2
I0428 20:24:44.720273  2451 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:44.720276  2451 net.cpp:139] Memory required for data: 11503360
I0428 20:24:44.720283  2451 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:44.720288  2451 net.cpp:86] Creating Layer relu2
I0428 20:24:44.720290  2451 net.cpp:408] relu2 <- ip2
I0428 20:24:44.720294  2451 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:44.721019  2451 net.cpp:124] Setting up relu2
I0428 20:24:44.721030  2451 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:44.721050  2451 net.cpp:139] Memory required for data: 11516160
I0428 20:24:44.721055  2451 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:44.721061  2451 net.cpp:86] Creating Layer ip3
I0428 20:24:44.721065  2451 net.cpp:408] ip3 <- ip2
I0428 20:24:44.721071  2451 net.cpp:382] ip3 -> ip3
I0428 20:24:44.721201  2451 net.cpp:124] Setting up ip3
I0428 20:24:44.721220  2451 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:44.721238  2451 net.cpp:139] Memory required for data: 11518720
I0428 20:24:44.721246  2451 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:44.721252  2451 net.cpp:86] Creating Layer relu3
I0428 20:24:44.721256  2451 net.cpp:408] relu3 <- ip3
I0428 20:24:44.721261  2451 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:44.721446  2451 net.cpp:124] Setting up relu3
I0428 20:24:44.721470  2451 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:44.721477  2451 net.cpp:139] Memory required for data: 11521280
I0428 20:24:44.721480  2451 layer_factory.hpp:77] Creating layer loss
I0428 20:24:44.721487  2451 net.cpp:86] Creating Layer loss
I0428 20:24:44.721506  2451 net.cpp:408] loss <- ip3
I0428 20:24:44.721510  2451 net.cpp:408] loss <- label
I0428 20:24:44.721516  2451 net.cpp:382] loss -> loss
I0428 20:24:44.721534  2451 layer_factory.hpp:77] Creating layer loss
I0428 20:24:44.721812  2451 net.cpp:124] Setting up loss
I0428 20:24:44.721822  2451 net.cpp:131] Top shape: (1)
I0428 20:24:44.721824  2451 net.cpp:134]     with loss weight 1
I0428 20:24:44.721839  2451 net.cpp:139] Memory required for data: 11521284
I0428 20:24:44.721843  2451 net.cpp:200] loss needs backward computation.
I0428 20:24:44.721846  2451 net.cpp:200] relu3 needs backward computation.
I0428 20:24:44.721849  2451 net.cpp:200] ip3 needs backward computation.
I0428 20:24:44.721853  2451 net.cpp:200] relu2 needs backward computation.
I0428 20:24:44.721855  2451 net.cpp:200] ip2 needs backward computation.
I0428 20:24:44.721858  2451 net.cpp:200] relu1 needs backward computation.
I0428 20:24:44.721861  2451 net.cpp:200] ip1 needs backward computation.
I0428 20:24:44.721864  2451 net.cpp:200] pool1 needs backward computation.
I0428 20:24:44.721868  2451 net.cpp:200] conv1 needs backward computation.
I0428 20:24:44.721870  2451 net.cpp:200] pool0 needs backward computation.
I0428 20:24:44.721874  2451 net.cpp:200] conv0 needs backward computation.
I0428 20:24:44.721877  2451 net.cpp:202] mnist does not need backward computation.
I0428 20:24:44.721880  2451 net.cpp:244] This network produces output loss
I0428 20:24:44.721889  2451 net.cpp:257] Network initialization done.
I0428 20:24:44.722255  2451 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1442.prototxt
I0428 20:24:44.722306  2451 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:44.722395  2451 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:44.722471  2451 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:44.722517  2451 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:44.722529  2451 net.cpp:86] Creating Layer mnist
I0428 20:24:44.722534  2451 net.cpp:382] mnist -> data
I0428 20:24:44.722543  2451 net.cpp:382] mnist -> label
I0428 20:24:44.722637  2451 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:44.723737  2451 net.cpp:124] Setting up mnist
I0428 20:24:44.723765  2451 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:44.723772  2451 net.cpp:131] Top shape: 100 (100)
I0428 20:24:44.723774  2451 net.cpp:139] Memory required for data: 314000
I0428 20:24:44.723778  2451 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:44.723789  2451 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:44.723793  2451 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:44.723798  2451 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:44.723805  2451 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:44.723887  2451 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:44.723896  2451 net.cpp:131] Top shape: 100 (100)
I0428 20:24:44.723899  2451 net.cpp:131] Top shape: 100 (100)
I0428 20:24:44.723902  2451 net.cpp:139] Memory required for data: 314800
I0428 20:24:44.723906  2451 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:44.723915  2451 net.cpp:86] Creating Layer conv0
I0428 20:24:44.723919  2451 net.cpp:408] conv0 <- data
I0428 20:24:44.723924  2451 net.cpp:382] conv0 -> conv0
I0428 20:24:44.725724  2451 net.cpp:124] Setting up conv0
I0428 20:24:44.725739  2451 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:44.725744  2451 net.cpp:139] Memory required for data: 11834800
I0428 20:24:44.725754  2451 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:44.725761  2451 net.cpp:86] Creating Layer pool0
I0428 20:24:44.725765  2451 net.cpp:408] pool0 <- conv0
I0428 20:24:44.725771  2451 net.cpp:382] pool0 -> pool0
I0428 20:24:44.725811  2451 net.cpp:124] Setting up pool0
I0428 20:24:44.725823  2451 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:44.725827  2451 net.cpp:139] Memory required for data: 14714800
I0428 20:24:44.725831  2451 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:44.725839  2451 net.cpp:86] Creating Layer conv1
I0428 20:24:44.725843  2451 net.cpp:408] conv1 <- pool0
I0428 20:24:44.725857  2451 net.cpp:382] conv1 -> conv1
I0428 20:24:44.729159  2451 net.cpp:124] Setting up conv1
I0428 20:24:44.729188  2451 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:44.729192  2451 net.cpp:139] Memory required for data: 17274800
I0428 20:24:44.729202  2451 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:44.729209  2451 net.cpp:86] Creating Layer pool1
I0428 20:24:44.729213  2451 net.cpp:408] pool1 <- conv1
I0428 20:24:44.729218  2451 net.cpp:382] pool1 -> pool1
I0428 20:24:44.729270  2451 net.cpp:124] Setting up pool1
I0428 20:24:44.729276  2451 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:44.729286  2451 net.cpp:139] Memory required for data: 17914800
I0428 20:24:44.729290  2451 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:44.729296  2451 net.cpp:86] Creating Layer ip1
I0428 20:24:44.729300  2451 net.cpp:408] ip1 <- pool1
I0428 20:24:44.729305  2451 net.cpp:382] ip1 -> ip1
I0428 20:24:44.729881  2451 net.cpp:124] Setting up ip1
I0428 20:24:44.729915  2451 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:44.729934  2451 net.cpp:139] Memory required for data: 17934800
I0428 20:24:44.729941  2451 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:44.729948  2451 net.cpp:86] Creating Layer relu1
I0428 20:24:44.729951  2451 net.cpp:408] relu1 <- ip1
I0428 20:24:44.729955  2451 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:44.730185  2451 net.cpp:124] Setting up relu1
I0428 20:24:44.730193  2451 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:44.730197  2451 net.cpp:139] Memory required for data: 17954800
I0428 20:24:44.730201  2451 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:44.730223  2451 net.cpp:86] Creating Layer ip2
I0428 20:24:44.730226  2451 net.cpp:408] ip2 <- ip1
I0428 20:24:44.730232  2451 net.cpp:382] ip2 -> ip2
I0428 20:24:44.730353  2451 net.cpp:124] Setting up ip2
I0428 20:24:44.730361  2451 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:44.730365  2451 net.cpp:139] Memory required for data: 17974800
I0428 20:24:44.730371  2451 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:44.730376  2451 net.cpp:86] Creating Layer relu2
I0428 20:24:44.730379  2451 net.cpp:408] relu2 <- ip2
I0428 20:24:44.730384  2451 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:44.730536  2451 net.cpp:124] Setting up relu2
I0428 20:24:44.730545  2451 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:44.730548  2451 net.cpp:139] Memory required for data: 17994800
I0428 20:24:44.730552  2451 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:44.730558  2451 net.cpp:86] Creating Layer ip3
I0428 20:24:44.730562  2451 net.cpp:408] ip3 <- ip2
I0428 20:24:44.730567  2451 net.cpp:382] ip3 -> ip3
I0428 20:24:44.730667  2451 net.cpp:124] Setting up ip3
I0428 20:24:44.730674  2451 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:44.730677  2451 net.cpp:139] Memory required for data: 17998800
I0428 20:24:44.730685  2451 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:44.730690  2451 net.cpp:86] Creating Layer relu3
I0428 20:24:44.730693  2451 net.cpp:408] relu3 <- ip3
I0428 20:24:44.730697  2451 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:44.731546  2451 net.cpp:124] Setting up relu3
I0428 20:24:44.731557  2451 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:44.731577  2451 net.cpp:139] Memory required for data: 18002800
I0428 20:24:44.731580  2451 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:44.731586  2451 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:44.731590  2451 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:44.731595  2451 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:44.731601  2451 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:44.731639  2451 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:44.731644  2451 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:44.731648  2451 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:44.731652  2451 net.cpp:139] Memory required for data: 18010800
I0428 20:24:44.731654  2451 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:44.731659  2451 net.cpp:86] Creating Layer accuracy
I0428 20:24:44.731663  2451 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:44.731667  2451 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:44.731673  2451 net.cpp:382] accuracy -> accuracy
I0428 20:24:44.731678  2451 net.cpp:124] Setting up accuracy
I0428 20:24:44.731683  2451 net.cpp:131] Top shape: (1)
I0428 20:24:44.731685  2451 net.cpp:139] Memory required for data: 18010804
I0428 20:24:44.731688  2451 layer_factory.hpp:77] Creating layer loss
I0428 20:24:44.731693  2451 net.cpp:86] Creating Layer loss
I0428 20:24:44.731696  2451 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:44.731699  2451 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:44.731704  2451 net.cpp:382] loss -> loss
I0428 20:24:44.731710  2451 layer_factory.hpp:77] Creating layer loss
I0428 20:24:44.731940  2451 net.cpp:124] Setting up loss
I0428 20:24:44.731950  2451 net.cpp:131] Top shape: (1)
I0428 20:24:44.731952  2451 net.cpp:134]     with loss weight 1
I0428 20:24:44.731969  2451 net.cpp:139] Memory required for data: 18010808
I0428 20:24:44.731972  2451 net.cpp:200] loss needs backward computation.
I0428 20:24:44.731976  2451 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:44.731981  2451 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:44.731984  2451 net.cpp:200] relu3 needs backward computation.
I0428 20:24:44.731987  2451 net.cpp:200] ip3 needs backward computation.
I0428 20:24:44.731990  2451 net.cpp:200] relu2 needs backward computation.
I0428 20:24:44.731993  2451 net.cpp:200] ip2 needs backward computation.
I0428 20:24:44.731997  2451 net.cpp:200] relu1 needs backward computation.
I0428 20:24:44.731999  2451 net.cpp:200] ip1 needs backward computation.
I0428 20:24:44.732002  2451 net.cpp:200] pool1 needs backward computation.
I0428 20:24:44.732005  2451 net.cpp:200] conv1 needs backward computation.
I0428 20:24:44.732009  2451 net.cpp:200] pool0 needs backward computation.
I0428 20:24:44.732012  2451 net.cpp:200] conv0 needs backward computation.
I0428 20:24:44.732017  2451 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:44.732020  2451 net.cpp:202] mnist does not need backward computation.
I0428 20:24:44.732023  2451 net.cpp:244] This network produces output accuracy
I0428 20:24:44.732026  2451 net.cpp:244] This network produces output loss
I0428 20:24:44.732038  2451 net.cpp:257] Network initialization done.
I0428 20:24:44.732081  2451 solver.cpp:56] Solver scaffolding done.
I0428 20:24:44.732473  2451 caffe.cpp:248] Starting Optimization
I0428 20:24:44.732480  2451 solver.cpp:273] Solving LeNet
I0428 20:24:44.732482  2451 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:44.733441  2451 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:44.823390  2483 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:44.824897  2451 solver.cpp:398]     Test net output #0: accuracy = 0.0681
I0428 20:24:44.824916  2451 solver.cpp:398]     Test net output #1: loss = 2.31808 (* 1 = 2.31808 loss)
I0428 20:24:44.830780  2451 solver.cpp:219] Iteration 0 (0 iter/s, 0.0982579s/100 iters), loss = 2.3263
I0428 20:24:44.830803  2451 solver.cpp:238]     Train net output #0: loss = 2.3263 (* 1 = 2.3263 loss)
I0428 20:24:44.830814  2451 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:45.060119  2451 solver.cpp:219] Iteration 100 (436.117 iter/s, 0.229296s/100 iters), loss = 0.218674
I0428 20:24:45.060153  2451 solver.cpp:238]     Train net output #0: loss = 0.218674 (* 1 = 0.218674 loss)
I0428 20:24:45.060163  2451 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:45.288532  2451 solver.cpp:219] Iteration 200 (437.901 iter/s, 0.228362s/100 iters), loss = 0.161289
I0428 20:24:45.288563  2451 solver.cpp:238]     Train net output #0: loss = 0.161289 (* 1 = 0.161289 loss)
I0428 20:24:45.288570  2451 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:45.507133  2451 solver.cpp:219] Iteration 300 (457.559 iter/s, 0.218551s/100 iters), loss = 0.247425
I0428 20:24:45.507171  2451 solver.cpp:238]     Train net output #0: loss = 0.247425 (* 1 = 0.247425 loss)
I0428 20:24:45.507180  2451 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:45.725594  2451 solver.cpp:219] Iteration 400 (457.861 iter/s, 0.218407s/100 iters), loss = 0.0803815
I0428 20:24:45.725622  2451 solver.cpp:238]     Train net output #0: loss = 0.0803816 (* 1 = 0.0803816 loss)
I0428 20:24:45.725630  2451 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:45.944798  2451 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:46.034474  2483 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:46.035774  2451 solver.cpp:398]     Test net output #0: accuracy = 0.9716
I0428 20:24:46.035797  2451 solver.cpp:398]     Test net output #1: loss = 0.0874977 (* 1 = 0.0874977 loss)
I0428 20:24:46.037818  2451 solver.cpp:219] Iteration 500 (320.331 iter/s, 0.312177s/100 iters), loss = 0.111462
I0428 20:24:46.037843  2451 solver.cpp:238]     Train net output #0: loss = 0.111462 (* 1 = 0.111462 loss)
I0428 20:24:46.037865  2451 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:46.250731  2451 solver.cpp:219] Iteration 600 (469.763 iter/s, 0.212873s/100 iters), loss = 0.0887172
I0428 20:24:46.250756  2451 solver.cpp:238]     Train net output #0: loss = 0.0887172 (* 1 = 0.0887172 loss)
I0428 20:24:46.250779  2451 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:46.475986  2451 solver.cpp:219] Iteration 700 (444.026 iter/s, 0.225212s/100 iters), loss = 0.113319
I0428 20:24:46.476018  2451 solver.cpp:238]     Train net output #0: loss = 0.113319 (* 1 = 0.113319 loss)
I0428 20:24:46.476028  2451 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:46.698025  2451 solver.cpp:219] Iteration 800 (450.471 iter/s, 0.22199s/100 iters), loss = 0.491494
I0428 20:24:46.698060  2451 solver.cpp:238]     Train net output #0: loss = 0.491494 (* 1 = 0.491494 loss)
I0428 20:24:46.698071  2451 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:46.915417  2451 solver.cpp:219] Iteration 900 (460.115 iter/s, 0.217337s/100 iters), loss = 0.133242
I0428 20:24:46.915469  2451 solver.cpp:238]     Train net output #0: loss = 0.133242 (* 1 = 0.133242 loss)
I0428 20:24:46.915485  2451 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:46.998831  2457 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:47.163521  2451 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:47.170686  2451 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:47.174023  2451 solver.cpp:311] Iteration 1000, loss = 0.0847737
I0428 20:24:47.174052  2451 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:47.270359  2483 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:47.272680  2451 solver.cpp:398]     Test net output #0: accuracy = 0.9794
I0428 20:24:47.272702  2451 solver.cpp:398]     Test net output #1: loss = 0.0634748 (* 1 = 0.0634748 loss)
I0428 20:24:47.272708  2451 solver.cpp:316] Optimization Done.
I0428 20:24:47.272712  2451 caffe.cpp:259] Optimization Done.
