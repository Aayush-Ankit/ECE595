I0428 19:46:50.379611 26069 caffe.cpp:218] Using GPUs 0
I0428 19:46:50.420555 26069 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:50.882247 26069 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test500.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:50.882380 26069 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test500.prototxt
I0428 19:46:50.882721 26069 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:50.882742 26069 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:50.882830 26069 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:50.882933 26069 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:50.883035 26069 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:50.883062 26069 net.cpp:86] Creating Layer mnist
I0428 19:46:50.883074 26069 net.cpp:382] mnist -> data
I0428 19:46:50.883097 26069 net.cpp:382] mnist -> label
I0428 19:46:50.884145 26069 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:50.886409 26069 net.cpp:124] Setting up mnist
I0428 19:46:50.886440 26069 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:50.886452 26069 net.cpp:131] Top shape: 64 (64)
I0428 19:46:50.886458 26069 net.cpp:139] Memory required for data: 200960
I0428 19:46:50.886466 26069 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:50.886484 26069 net.cpp:86] Creating Layer conv0
I0428 19:46:50.886502 26069 net.cpp:408] conv0 <- data
I0428 19:46:50.886520 26069 net.cpp:382] conv0 -> conv0
I0428 19:46:51.119772 26069 net.cpp:124] Setting up conv0
I0428 19:46:51.119801 26069 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:51.119807 26069 net.cpp:139] Memory required for data: 495872
I0428 19:46:51.119841 26069 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:51.119858 26069 net.cpp:86] Creating Layer pool0
I0428 19:46:51.119871 26069 net.cpp:408] pool0 <- conv0
I0428 19:46:51.119880 26069 net.cpp:382] pool0 -> pool0
I0428 19:46:51.119948 26069 net.cpp:124] Setting up pool0
I0428 19:46:51.119957 26069 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:51.119962 26069 net.cpp:139] Memory required for data: 569600
I0428 19:46:51.119967 26069 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:51.119983 26069 net.cpp:86] Creating Layer conv1
I0428 19:46:51.119989 26069 net.cpp:408] conv1 <- pool0
I0428 19:46:51.119997 26069 net.cpp:382] conv1 -> conv1
I0428 19:46:51.123011 26069 net.cpp:124] Setting up conv1
I0428 19:46:51.123026 26069 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:51.123033 26069 net.cpp:139] Memory required for data: 2208000
I0428 19:46:51.123062 26069 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:51.123075 26069 net.cpp:86] Creating Layer pool1
I0428 19:46:51.123080 26069 net.cpp:408] pool1 <- conv1
I0428 19:46:51.123090 26069 net.cpp:382] pool1 -> pool1
I0428 19:46:51.123137 26069 net.cpp:124] Setting up pool1
I0428 19:46:51.123147 26069 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:51.123152 26069 net.cpp:139] Memory required for data: 2617600
I0428 19:46:51.123157 26069 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:51.123168 26069 net.cpp:86] Creating Layer ip1
I0428 19:46:51.123177 26069 net.cpp:408] ip1 <- pool1
I0428 19:46:51.123184 26069 net.cpp:382] ip1 -> ip1
I0428 19:46:51.124758 26069 net.cpp:124] Setting up ip1
I0428 19:46:51.124771 26069 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:51.124776 26069 net.cpp:139] Memory required for data: 2630400
I0428 19:46:51.124806 26069 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:51.124840 26069 net.cpp:86] Creating Layer relu1
I0428 19:46:51.124846 26069 net.cpp:408] relu1 <- ip1
I0428 19:46:51.124855 26069 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:51.125113 26069 net.cpp:124] Setting up relu1
I0428 19:46:51.125125 26069 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:51.125131 26069 net.cpp:139] Memory required for data: 2643200
I0428 19:46:51.125138 26069 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:51.125166 26069 net.cpp:86] Creating Layer ip2
I0428 19:46:51.125172 26069 net.cpp:408] ip2 <- ip1
I0428 19:46:51.125195 26069 net.cpp:382] ip2 -> ip2
I0428 19:46:51.125322 26069 net.cpp:124] Setting up ip2
I0428 19:46:51.125331 26069 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:51.125336 26069 net.cpp:139] Memory required for data: 2645760
I0428 19:46:51.125346 26069 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:51.125356 26069 net.cpp:86] Creating Layer relu2
I0428 19:46:51.125363 26069 net.cpp:408] relu2 <- ip2
I0428 19:46:51.125371 26069 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:51.126207 26069 net.cpp:124] Setting up relu2
I0428 19:46:51.126221 26069 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:51.126241 26069 net.cpp:139] Memory required for data: 2648320
I0428 19:46:51.126247 26069 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:51.126260 26069 net.cpp:86] Creating Layer ip3
I0428 19:46:51.126265 26069 net.cpp:408] ip3 <- ip2
I0428 19:46:51.126276 26069 net.cpp:382] ip3 -> ip3
I0428 19:46:51.126401 26069 net.cpp:124] Setting up ip3
I0428 19:46:51.126411 26069 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:51.126416 26069 net.cpp:139] Memory required for data: 2650880
I0428 19:46:51.126430 26069 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:51.126438 26069 net.cpp:86] Creating Layer relu3
I0428 19:46:51.126446 26069 net.cpp:408] relu3 <- ip3
I0428 19:46:51.126454 26069 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:51.126674 26069 net.cpp:124] Setting up relu3
I0428 19:46:51.126684 26069 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:51.126689 26069 net.cpp:139] Memory required for data: 2653440
I0428 19:46:51.126694 26069 layer_factory.hpp:77] Creating layer loss
I0428 19:46:51.126703 26069 net.cpp:86] Creating Layer loss
I0428 19:46:51.126709 26069 net.cpp:408] loss <- ip3
I0428 19:46:51.126718 26069 net.cpp:408] loss <- label
I0428 19:46:51.126726 26069 net.cpp:382] loss -> loss
I0428 19:46:51.126749 26069 layer_factory.hpp:77] Creating layer loss
I0428 19:46:51.127064 26069 net.cpp:124] Setting up loss
I0428 19:46:51.127074 26069 net.cpp:131] Top shape: (1)
I0428 19:46:51.127079 26069 net.cpp:134]     with loss weight 1
I0428 19:46:51.127099 26069 net.cpp:139] Memory required for data: 2653444
I0428 19:46:51.127106 26069 net.cpp:200] loss needs backward computation.
I0428 19:46:51.127112 26069 net.cpp:200] relu3 needs backward computation.
I0428 19:46:51.127117 26069 net.cpp:200] ip3 needs backward computation.
I0428 19:46:51.127122 26069 net.cpp:200] relu2 needs backward computation.
I0428 19:46:51.127127 26069 net.cpp:200] ip2 needs backward computation.
I0428 19:46:51.127132 26069 net.cpp:200] relu1 needs backward computation.
I0428 19:46:51.127137 26069 net.cpp:200] ip1 needs backward computation.
I0428 19:46:51.127142 26069 net.cpp:200] pool1 needs backward computation.
I0428 19:46:51.127147 26069 net.cpp:200] conv1 needs backward computation.
I0428 19:46:51.127152 26069 net.cpp:200] pool0 needs backward computation.
I0428 19:46:51.127157 26069 net.cpp:200] conv0 needs backward computation.
I0428 19:46:51.127163 26069 net.cpp:202] mnist does not need backward computation.
I0428 19:46:51.127168 26069 net.cpp:244] This network produces output loss
I0428 19:46:51.127185 26069 net.cpp:257] Network initialization done.
I0428 19:46:51.127526 26069 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test500.prototxt
I0428 19:46:51.127559 26069 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:51.127677 26069 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:51.127815 26069 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:51.127871 26069 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:51.127889 26069 net.cpp:86] Creating Layer mnist
I0428 19:46:51.127912 26069 net.cpp:382] mnist -> data
I0428 19:46:51.127923 26069 net.cpp:382] mnist -> label
I0428 19:46:51.128074 26069 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:51.129643 26069 net.cpp:124] Setting up mnist
I0428 19:46:51.129658 26069 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:51.129667 26069 net.cpp:131] Top shape: 100 (100)
I0428 19:46:51.129673 26069 net.cpp:139] Memory required for data: 314000
I0428 19:46:51.129678 26069 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:51.129694 26069 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:51.129700 26069 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:51.129709 26069 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:51.129719 26069 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:51.129792 26069 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:51.129801 26069 net.cpp:131] Top shape: 100 (100)
I0428 19:46:51.129808 26069 net.cpp:131] Top shape: 100 (100)
I0428 19:46:51.129813 26069 net.cpp:139] Memory required for data: 314800
I0428 19:46:51.129819 26069 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:51.129848 26069 net.cpp:86] Creating Layer conv0
I0428 19:46:51.129855 26069 net.cpp:408] conv0 <- data
I0428 19:46:51.129866 26069 net.cpp:382] conv0 -> conv0
I0428 19:46:51.131551 26069 net.cpp:124] Setting up conv0
I0428 19:46:51.131566 26069 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:51.131587 26069 net.cpp:139] Memory required for data: 775600
I0428 19:46:51.131603 26069 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:51.131613 26069 net.cpp:86] Creating Layer pool0
I0428 19:46:51.131620 26069 net.cpp:408] pool0 <- conv0
I0428 19:46:51.131628 26069 net.cpp:382] pool0 -> pool0
I0428 19:46:51.131685 26069 net.cpp:124] Setting up pool0
I0428 19:46:51.131705 26069 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:51.131711 26069 net.cpp:139] Memory required for data: 890800
I0428 19:46:51.131716 26069 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:51.131731 26069 net.cpp:86] Creating Layer conv1
I0428 19:46:51.131738 26069 net.cpp:408] conv1 <- pool0
I0428 19:46:51.131749 26069 net.cpp:382] conv1 -> conv1
I0428 19:46:51.133498 26069 net.cpp:124] Setting up conv1
I0428 19:46:51.133514 26069 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:51.133520 26069 net.cpp:139] Memory required for data: 3450800
I0428 19:46:51.133551 26069 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:51.133561 26069 net.cpp:86] Creating Layer pool1
I0428 19:46:51.133568 26069 net.cpp:408] pool1 <- conv1
I0428 19:46:51.133577 26069 net.cpp:382] pool1 -> pool1
I0428 19:46:51.133621 26069 net.cpp:124] Setting up pool1
I0428 19:46:51.133630 26069 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:51.133636 26069 net.cpp:139] Memory required for data: 4090800
I0428 19:46:51.133641 26069 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:51.133653 26069 net.cpp:86] Creating Layer ip1
I0428 19:46:51.133661 26069 net.cpp:408] ip1 <- pool1
I0428 19:46:51.133668 26069 net.cpp:382] ip1 -> ip1
I0428 19:46:51.134271 26069 net.cpp:124] Setting up ip1
I0428 19:46:51.134282 26069 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:51.134300 26069 net.cpp:139] Memory required for data: 4110800
I0428 19:46:51.134315 26069 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:51.134330 26069 net.cpp:86] Creating Layer relu1
I0428 19:46:51.134340 26069 net.cpp:408] relu1 <- ip1
I0428 19:46:51.134347 26069 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:51.134564 26069 net.cpp:124] Setting up relu1
I0428 19:46:51.134574 26069 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:51.134579 26069 net.cpp:139] Memory required for data: 4130800
I0428 19:46:51.134584 26069 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:51.134598 26069 net.cpp:86] Creating Layer ip2
I0428 19:46:51.134605 26069 net.cpp:408] ip2 <- ip1
I0428 19:46:51.134615 26069 net.cpp:382] ip2 -> ip2
I0428 19:46:51.134721 26069 net.cpp:124] Setting up ip2
I0428 19:46:51.134730 26069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:51.134735 26069 net.cpp:139] Memory required for data: 4134800
I0428 19:46:51.134744 26069 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:51.134752 26069 net.cpp:86] Creating Layer relu2
I0428 19:46:51.134757 26069 net.cpp:408] relu2 <- ip2
I0428 19:46:51.134764 26069 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:51.134965 26069 net.cpp:124] Setting up relu2
I0428 19:46:51.134975 26069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:51.134981 26069 net.cpp:139] Memory required for data: 4138800
I0428 19:46:51.134987 26069 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:51.134996 26069 net.cpp:86] Creating Layer ip3
I0428 19:46:51.135001 26069 net.cpp:408] ip3 <- ip2
I0428 19:46:51.135011 26069 net.cpp:382] ip3 -> ip3
I0428 19:46:51.135215 26069 net.cpp:124] Setting up ip3
I0428 19:46:51.135223 26069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:51.135243 26069 net.cpp:139] Memory required for data: 4142800
I0428 19:46:51.135257 26069 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:51.135264 26069 net.cpp:86] Creating Layer relu3
I0428 19:46:51.135272 26069 net.cpp:408] relu3 <- ip3
I0428 19:46:51.135279 26069 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:51.136149 26069 net.cpp:124] Setting up relu3
I0428 19:46:51.136163 26069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:51.136168 26069 net.cpp:139] Memory required for data: 4146800
I0428 19:46:51.136174 26069 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:51.136183 26069 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:51.136188 26069 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:51.136199 26069 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:51.136209 26069 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:51.136258 26069 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:51.136266 26069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:51.136273 26069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:51.136278 26069 net.cpp:139] Memory required for data: 4154800
I0428 19:46:51.136284 26069 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:51.136294 26069 net.cpp:86] Creating Layer accuracy
I0428 19:46:51.136301 26069 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:51.136307 26069 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:51.136317 26069 net.cpp:382] accuracy -> accuracy
I0428 19:46:51.136343 26069 net.cpp:124] Setting up accuracy
I0428 19:46:51.136353 26069 net.cpp:131] Top shape: (1)
I0428 19:46:51.136359 26069 net.cpp:139] Memory required for data: 4154804
I0428 19:46:51.136365 26069 layer_factory.hpp:77] Creating layer loss
I0428 19:46:51.136373 26069 net.cpp:86] Creating Layer loss
I0428 19:46:51.136379 26069 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:51.136386 26069 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:51.136394 26069 net.cpp:382] loss -> loss
I0428 19:46:51.136404 26069 layer_factory.hpp:77] Creating layer loss
I0428 19:46:51.136699 26069 net.cpp:124] Setting up loss
I0428 19:46:51.136709 26069 net.cpp:131] Top shape: (1)
I0428 19:46:51.136715 26069 net.cpp:134]     with loss weight 1
I0428 19:46:51.136724 26069 net.cpp:139] Memory required for data: 4154808
I0428 19:46:51.136739 26069 net.cpp:200] loss needs backward computation.
I0428 19:46:51.136747 26069 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:51.136754 26069 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:51.136759 26069 net.cpp:200] relu3 needs backward computation.
I0428 19:46:51.136764 26069 net.cpp:200] ip3 needs backward computation.
I0428 19:46:51.136768 26069 net.cpp:200] relu2 needs backward computation.
I0428 19:46:51.136773 26069 net.cpp:200] ip2 needs backward computation.
I0428 19:46:51.136778 26069 net.cpp:200] relu1 needs backward computation.
I0428 19:46:51.136783 26069 net.cpp:200] ip1 needs backward computation.
I0428 19:46:51.136788 26069 net.cpp:200] pool1 needs backward computation.
I0428 19:46:51.136797 26069 net.cpp:200] conv1 needs backward computation.
I0428 19:46:51.136802 26069 net.cpp:200] pool0 needs backward computation.
I0428 19:46:51.136807 26069 net.cpp:200] conv0 needs backward computation.
I0428 19:46:51.136835 26069 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:51.136858 26069 net.cpp:202] mnist does not need backward computation.
I0428 19:46:51.136863 26069 net.cpp:244] This network produces output accuracy
I0428 19:46:51.136873 26069 net.cpp:244] This network produces output loss
I0428 19:46:51.136893 26069 net.cpp:257] Network initialization done.
I0428 19:46:51.136947 26069 solver.cpp:56] Solver scaffolding done.
I0428 19:46:51.137413 26069 caffe.cpp:248] Starting Optimization
I0428 19:46:51.137421 26069 solver.cpp:273] Solving LeNet
I0428 19:46:51.137426 26069 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:51.138324 26069 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:51.143106 26069 blocking_queue.cpp:49] Waiting for data
I0428 19:46:51.215917 26076 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:51.216611 26069 solver.cpp:398]     Test net output #0: accuracy = 0.047
I0428 19:46:51.216653 26069 solver.cpp:398]     Test net output #1: loss = 2.31195 (* 1 = 2.31195 loss)
I0428 19:46:51.221622 26069 solver.cpp:219] Iteration 0 (-5.56953e-31 iter/s, 0.0841544s/100 iters), loss = 2.32313
I0428 19:46:51.221684 26069 solver.cpp:238]     Train net output #0: loss = 2.32313 (* 1 = 2.32313 loss)
I0428 19:46:51.221702 26069 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:51.390872 26069 solver.cpp:219] Iteration 100 (591.075 iter/s, 0.169183s/100 iters), loss = 0.36192
I0428 19:46:51.390903 26069 solver.cpp:238]     Train net output #0: loss = 0.36192 (* 1 = 0.36192 loss)
I0428 19:46:51.390909 26069 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:51.551960 26069 solver.cpp:219] Iteration 200 (620.95 iter/s, 0.161044s/100 iters), loss = 0.326742
I0428 19:46:51.552000 26069 solver.cpp:238]     Train net output #0: loss = 0.326742 (* 1 = 0.326742 loss)
I0428 19:46:51.552007 26069 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:51.714498 26069 solver.cpp:219] Iteration 300 (615.387 iter/s, 0.162499s/100 iters), loss = 0.32618
I0428 19:46:51.714520 26069 solver.cpp:238]     Train net output #0: loss = 0.32618 (* 1 = 0.32618 loss)
I0428 19:46:51.714526 26069 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:51.872129 26069 solver.cpp:219] Iteration 400 (634.531 iter/s, 0.157597s/100 iters), loss = 0.131673
I0428 19:46:51.872153 26069 solver.cpp:238]     Train net output #0: loss = 0.131673 (* 1 = 0.131673 loss)
I0428 19:46:51.872158 26069 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:52.034250 26069 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:52.111696 26076 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:52.112341 26069 solver.cpp:398]     Test net output #0: accuracy = 0.9524
I0428 19:46:52.112377 26069 solver.cpp:398]     Test net output #1: loss = 0.150011 (* 1 = 0.150011 loss)
I0428 19:46:52.113955 26069 solver.cpp:219] Iteration 500 (413.593 iter/s, 0.241784s/100 iters), loss = 0.111303
I0428 19:46:52.114017 26069 solver.cpp:238]     Train net output #0: loss = 0.111303 (* 1 = 0.111303 loss)
I0428 19:46:52.114025 26069 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:52.272354 26069 solver.cpp:219] Iteration 600 (631.609 iter/s, 0.158326s/100 iters), loss = 0.105779
I0428 19:46:52.272394 26069 solver.cpp:238]     Train net output #0: loss = 0.105779 (* 1 = 0.105779 loss)
I0428 19:46:52.272402 26069 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:52.431519 26069 solver.cpp:219] Iteration 700 (628.426 iter/s, 0.159128s/100 iters), loss = 0.214879
I0428 19:46:52.431558 26069 solver.cpp:238]     Train net output #0: loss = 0.214879 (* 1 = 0.214879 loss)
I0428 19:46:52.431565 26069 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:52.586931 26069 solver.cpp:219] Iteration 800 (643.597 iter/s, 0.155377s/100 iters), loss = 0.241665
I0428 19:46:52.586956 26069 solver.cpp:238]     Train net output #0: loss = 0.241665 (* 1 = 0.241665 loss)
I0428 19:46:52.586961 26069 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:52.740957 26069 solver.cpp:219] Iteration 900 (649.401 iter/s, 0.153988s/100 iters), loss = 0.20268
I0428 19:46:52.740978 26069 solver.cpp:238]     Train net output #0: loss = 0.20268 (* 1 = 0.20268 loss)
I0428 19:46:52.740983 26069 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:52.792201 26075 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:52.896268 26069 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:52.898854 26069 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:52.900166 26069 solver.cpp:311] Iteration 1000, loss = 0.142857
I0428 19:46:52.900182 26069 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:52.975941 26076 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:52.976528 26069 solver.cpp:398]     Test net output #0: accuracy = 0.9728
I0428 19:46:52.976563 26069 solver.cpp:398]     Test net output #1: loss = 0.0908956 (* 1 = 0.0908956 loss)
I0428 19:46:52.976568 26069 solver.cpp:316] Optimization Done.
I0428 19:46:52.976572 26069 caffe.cpp:259] Optimization Done.
