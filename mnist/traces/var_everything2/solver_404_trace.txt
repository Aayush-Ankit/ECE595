I0428 19:42:48.659469 25196 caffe.cpp:218] Using GPUs 0
I0428 19:42:48.693799 25196 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:49.200037 25196 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test404.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:49.200172 25196 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test404.prototxt
I0428 19:42:49.200580 25196 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:49.200599 25196 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:49.200703 25196 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:49.200783 25196 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:49.200891 25196 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:49.200917 25196 net.cpp:86] Creating Layer mnist
I0428 19:42:49.200925 25196 net.cpp:382] mnist -> data
I0428 19:42:49.200948 25196 net.cpp:382] mnist -> label
I0428 19:42:49.202050 25196 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:49.204488 25196 net.cpp:124] Setting up mnist
I0428 19:42:49.204506 25196 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:49.204514 25196 net.cpp:131] Top shape: 64 (64)
I0428 19:42:49.204517 25196 net.cpp:139] Memory required for data: 200960
I0428 19:42:49.204524 25196 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:49.204540 25196 net.cpp:86] Creating Layer conv0
I0428 19:42:49.204560 25196 net.cpp:408] conv0 <- data
I0428 19:42:49.204574 25196 net.cpp:382] conv0 -> conv0
I0428 19:42:49.487622 25196 net.cpp:124] Setting up conv0
I0428 19:42:49.487649 25196 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:49.487653 25196 net.cpp:139] Memory required for data: 495872
I0428 19:42:49.487670 25196 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:49.487684 25196 net.cpp:86] Creating Layer pool0
I0428 19:42:49.487689 25196 net.cpp:408] pool0 <- conv0
I0428 19:42:49.487695 25196 net.cpp:382] pool0 -> pool0
I0428 19:42:49.487743 25196 net.cpp:124] Setting up pool0
I0428 19:42:49.487749 25196 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:49.487752 25196 net.cpp:139] Memory required for data: 569600
I0428 19:42:49.487756 25196 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:49.487768 25196 net.cpp:86] Creating Layer conv1
I0428 19:42:49.487771 25196 net.cpp:408] conv1 <- pool0
I0428 19:42:49.487777 25196 net.cpp:382] conv1 -> conv1
I0428 19:42:49.490500 25196 net.cpp:124] Setting up conv1
I0428 19:42:49.490515 25196 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:49.490520 25196 net.cpp:139] Memory required for data: 979200
I0428 19:42:49.490530 25196 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:49.490537 25196 net.cpp:86] Creating Layer pool1
I0428 19:42:49.490541 25196 net.cpp:408] pool1 <- conv1
I0428 19:42:49.490546 25196 net.cpp:382] pool1 -> pool1
I0428 19:42:49.490583 25196 net.cpp:124] Setting up pool1
I0428 19:42:49.490589 25196 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:49.490592 25196 net.cpp:139] Memory required for data: 1081600
I0428 19:42:49.490595 25196 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:49.490603 25196 net.cpp:86] Creating Layer ip1
I0428 19:42:49.490607 25196 net.cpp:408] ip1 <- pool1
I0428 19:42:49.490612 25196 net.cpp:382] ip1 -> ip1
I0428 19:42:49.490736 25196 net.cpp:124] Setting up ip1
I0428 19:42:49.490744 25196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:49.490748 25196 net.cpp:139] Memory required for data: 1084160
I0428 19:42:49.490756 25196 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:49.490761 25196 net.cpp:86] Creating Layer relu1
I0428 19:42:49.490764 25196 net.cpp:408] relu1 <- ip1
I0428 19:42:49.490769 25196 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:49.490933 25196 net.cpp:124] Setting up relu1
I0428 19:42:49.490942 25196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:49.490945 25196 net.cpp:139] Memory required for data: 1086720
I0428 19:42:49.490948 25196 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:49.490955 25196 net.cpp:86] Creating Layer ip2
I0428 19:42:49.490958 25196 net.cpp:408] ip2 <- ip1
I0428 19:42:49.490963 25196 net.cpp:382] ip2 -> ip2
I0428 19:42:49.491057 25196 net.cpp:124] Setting up ip2
I0428 19:42:49.491065 25196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:49.491067 25196 net.cpp:139] Memory required for data: 1089280
I0428 19:42:49.491073 25196 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:49.491080 25196 net.cpp:86] Creating Layer relu2
I0428 19:42:49.491082 25196 net.cpp:408] relu2 <- ip2
I0428 19:42:49.491087 25196 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:49.491809 25196 net.cpp:124] Setting up relu2
I0428 19:42:49.491822 25196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:49.491825 25196 net.cpp:139] Memory required for data: 1091840
I0428 19:42:49.491828 25196 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:49.491837 25196 net.cpp:86] Creating Layer ip3
I0428 19:42:49.491839 25196 net.cpp:408] ip3 <- ip2
I0428 19:42:49.491845 25196 net.cpp:382] ip3 -> ip3
I0428 19:42:49.491942 25196 net.cpp:124] Setting up ip3
I0428 19:42:49.491950 25196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:49.491953 25196 net.cpp:139] Memory required for data: 1094400
I0428 19:42:49.491963 25196 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:49.491968 25196 net.cpp:86] Creating Layer relu3
I0428 19:42:49.491971 25196 net.cpp:408] relu3 <- ip3
I0428 19:42:49.491976 25196 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:49.492141 25196 net.cpp:124] Setting up relu3
I0428 19:42:49.492151 25196 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:49.492154 25196 net.cpp:139] Memory required for data: 1096960
I0428 19:42:49.492157 25196 layer_factory.hpp:77] Creating layer loss
I0428 19:42:49.492164 25196 net.cpp:86] Creating Layer loss
I0428 19:42:49.492167 25196 net.cpp:408] loss <- ip3
I0428 19:42:49.492172 25196 net.cpp:408] loss <- label
I0428 19:42:49.492177 25196 net.cpp:382] loss -> loss
I0428 19:42:49.492192 25196 layer_factory.hpp:77] Creating layer loss
I0428 19:42:49.492420 25196 net.cpp:124] Setting up loss
I0428 19:42:49.492429 25196 net.cpp:131] Top shape: (1)
I0428 19:42:49.492434 25196 net.cpp:134]     with loss weight 1
I0428 19:42:49.492447 25196 net.cpp:139] Memory required for data: 1096964
I0428 19:42:49.492451 25196 net.cpp:200] loss needs backward computation.
I0428 19:42:49.492455 25196 net.cpp:200] relu3 needs backward computation.
I0428 19:42:49.492458 25196 net.cpp:200] ip3 needs backward computation.
I0428 19:42:49.492461 25196 net.cpp:200] relu2 needs backward computation.
I0428 19:42:49.492465 25196 net.cpp:200] ip2 needs backward computation.
I0428 19:42:49.492467 25196 net.cpp:200] relu1 needs backward computation.
I0428 19:42:49.492470 25196 net.cpp:200] ip1 needs backward computation.
I0428 19:42:49.492473 25196 net.cpp:200] pool1 needs backward computation.
I0428 19:42:49.492476 25196 net.cpp:200] conv1 needs backward computation.
I0428 19:42:49.492480 25196 net.cpp:200] pool0 needs backward computation.
I0428 19:42:49.492483 25196 net.cpp:200] conv0 needs backward computation.
I0428 19:42:49.492486 25196 net.cpp:202] mnist does not need backward computation.
I0428 19:42:49.492491 25196 net.cpp:244] This network produces output loss
I0428 19:42:49.492499 25196 net.cpp:257] Network initialization done.
I0428 19:42:49.492835 25196 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test404.prototxt
I0428 19:42:49.492862 25196 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:49.492954 25196 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:49.493050 25196 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:49.493111 25196 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:49.493124 25196 net.cpp:86] Creating Layer mnist
I0428 19:42:49.493129 25196 net.cpp:382] mnist -> data
I0428 19:42:49.493137 25196 net.cpp:382] mnist -> label
I0428 19:42:49.493222 25196 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:49.495110 25196 net.cpp:124] Setting up mnist
I0428 19:42:49.495123 25196 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:49.495128 25196 net.cpp:131] Top shape: 100 (100)
I0428 19:42:49.495132 25196 net.cpp:139] Memory required for data: 314000
I0428 19:42:49.495136 25196 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:49.495142 25196 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:49.495146 25196 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:49.495151 25196 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:49.495158 25196 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:49.495231 25196 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:49.495244 25196 net.cpp:131] Top shape: 100 (100)
I0428 19:42:49.495247 25196 net.cpp:131] Top shape: 100 (100)
I0428 19:42:49.495250 25196 net.cpp:139] Memory required for data: 314800
I0428 19:42:49.495254 25196 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:49.495263 25196 net.cpp:86] Creating Layer conv0
I0428 19:42:49.495267 25196 net.cpp:408] conv0 <- data
I0428 19:42:49.495272 25196 net.cpp:382] conv0 -> conv0
I0428 19:42:49.496762 25196 net.cpp:124] Setting up conv0
I0428 19:42:49.496788 25196 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:49.496793 25196 net.cpp:139] Memory required for data: 775600
I0428 19:42:49.496801 25196 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:49.496809 25196 net.cpp:86] Creating Layer pool0
I0428 19:42:49.496817 25196 net.cpp:408] pool0 <- conv0
I0428 19:42:49.496840 25196 net.cpp:382] pool0 -> pool0
I0428 19:42:49.496904 25196 net.cpp:124] Setting up pool0
I0428 19:42:49.496912 25196 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:49.496915 25196 net.cpp:139] Memory required for data: 890800
I0428 19:42:49.496920 25196 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:49.496930 25196 net.cpp:86] Creating Layer conv1
I0428 19:42:49.496934 25196 net.cpp:408] conv1 <- pool0
I0428 19:42:49.496939 25196 net.cpp:382] conv1 -> conv1
I0428 19:42:49.498432 25196 net.cpp:124] Setting up conv1
I0428 19:42:49.498446 25196 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:49.498450 25196 net.cpp:139] Memory required for data: 1530800
I0428 19:42:49.498459 25196 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:49.498466 25196 net.cpp:86] Creating Layer pool1
I0428 19:42:49.498471 25196 net.cpp:408] pool1 <- conv1
I0428 19:42:49.498476 25196 net.cpp:382] pool1 -> pool1
I0428 19:42:49.498514 25196 net.cpp:124] Setting up pool1
I0428 19:42:49.498519 25196 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:49.498523 25196 net.cpp:139] Memory required for data: 1690800
I0428 19:42:49.498527 25196 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:49.498533 25196 net.cpp:86] Creating Layer ip1
I0428 19:42:49.498538 25196 net.cpp:408] ip1 <- pool1
I0428 19:42:49.498543 25196 net.cpp:382] ip1 -> ip1
I0428 19:42:49.498677 25196 net.cpp:124] Setting up ip1
I0428 19:42:49.498685 25196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:49.498700 25196 net.cpp:139] Memory required for data: 1694800
I0428 19:42:49.498709 25196 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:49.498715 25196 net.cpp:86] Creating Layer relu1
I0428 19:42:49.498718 25196 net.cpp:408] relu1 <- ip1
I0428 19:42:49.498740 25196 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:49.498998 25196 net.cpp:124] Setting up relu1
I0428 19:42:49.499008 25196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:49.499012 25196 net.cpp:139] Memory required for data: 1698800
I0428 19:42:49.499017 25196 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:49.499024 25196 net.cpp:86] Creating Layer ip2
I0428 19:42:49.499028 25196 net.cpp:408] ip2 <- ip1
I0428 19:42:49.499034 25196 net.cpp:382] ip2 -> ip2
I0428 19:42:49.499147 25196 net.cpp:124] Setting up ip2
I0428 19:42:49.499157 25196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:49.499161 25196 net.cpp:139] Memory required for data: 1702800
I0428 19:42:49.499167 25196 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:49.499172 25196 net.cpp:86] Creating Layer relu2
I0428 19:42:49.499176 25196 net.cpp:408] relu2 <- ip2
I0428 19:42:49.499181 25196 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:49.499361 25196 net.cpp:124] Setting up relu2
I0428 19:42:49.499372 25196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:49.499377 25196 net.cpp:139] Memory required for data: 1706800
I0428 19:42:49.499380 25196 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:49.499387 25196 net.cpp:86] Creating Layer ip3
I0428 19:42:49.499392 25196 net.cpp:408] ip3 <- ip2
I0428 19:42:49.499397 25196 net.cpp:382] ip3 -> ip3
I0428 19:42:49.499498 25196 net.cpp:124] Setting up ip3
I0428 19:42:49.499505 25196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:49.499510 25196 net.cpp:139] Memory required for data: 1710800
I0428 19:42:49.499518 25196 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:49.499524 25196 net.cpp:86] Creating Layer relu3
I0428 19:42:49.499527 25196 net.cpp:408] relu3 <- ip3
I0428 19:42:49.499531 25196 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:49.500392 25196 net.cpp:124] Setting up relu3
I0428 19:42:49.500407 25196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:49.500411 25196 net.cpp:139] Memory required for data: 1714800
I0428 19:42:49.500416 25196 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:49.500422 25196 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:49.500425 25196 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:49.500430 25196 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:49.500437 25196 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:49.500478 25196 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:49.500484 25196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:49.500488 25196 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:49.500491 25196 net.cpp:139] Memory required for data: 1722800
I0428 19:42:49.500496 25196 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:49.500501 25196 net.cpp:86] Creating Layer accuracy
I0428 19:42:49.500504 25196 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:49.500509 25196 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:49.500517 25196 net.cpp:382] accuracy -> accuracy
I0428 19:42:49.500530 25196 net.cpp:124] Setting up accuracy
I0428 19:42:49.500535 25196 net.cpp:131] Top shape: (1)
I0428 19:42:49.500538 25196 net.cpp:139] Memory required for data: 1722804
I0428 19:42:49.500541 25196 layer_factory.hpp:77] Creating layer loss
I0428 19:42:49.500547 25196 net.cpp:86] Creating Layer loss
I0428 19:42:49.500551 25196 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:49.500555 25196 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:49.500562 25196 net.cpp:382] loss -> loss
I0428 19:42:49.500568 25196 layer_factory.hpp:77] Creating layer loss
I0428 19:42:49.500860 25196 net.cpp:124] Setting up loss
I0428 19:42:49.500872 25196 net.cpp:131] Top shape: (1)
I0428 19:42:49.500876 25196 net.cpp:134]     with loss weight 1
I0428 19:42:49.500883 25196 net.cpp:139] Memory required for data: 1722808
I0428 19:42:49.500898 25196 net.cpp:200] loss needs backward computation.
I0428 19:42:49.500902 25196 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:49.500906 25196 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:49.500910 25196 net.cpp:200] relu3 needs backward computation.
I0428 19:42:49.500912 25196 net.cpp:200] ip3 needs backward computation.
I0428 19:42:49.500916 25196 net.cpp:200] relu2 needs backward computation.
I0428 19:42:49.500918 25196 net.cpp:200] ip2 needs backward computation.
I0428 19:42:49.500921 25196 net.cpp:200] relu1 needs backward computation.
I0428 19:42:49.500924 25196 net.cpp:200] ip1 needs backward computation.
I0428 19:42:49.500927 25196 net.cpp:200] pool1 needs backward computation.
I0428 19:42:49.500931 25196 net.cpp:200] conv1 needs backward computation.
I0428 19:42:49.500933 25196 net.cpp:200] pool0 needs backward computation.
I0428 19:42:49.500936 25196 net.cpp:200] conv0 needs backward computation.
I0428 19:42:49.500941 25196 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:49.500944 25196 net.cpp:202] mnist does not need backward computation.
I0428 19:42:49.500947 25196 net.cpp:244] This network produces output accuracy
I0428 19:42:49.500950 25196 net.cpp:244] This network produces output loss
I0428 19:42:49.500963 25196 net.cpp:257] Network initialization done.
I0428 19:42:49.501006 25196 solver.cpp:56] Solver scaffolding done.
I0428 19:42:49.501363 25196 caffe.cpp:248] Starting Optimization
I0428 19:42:49.501368 25196 solver.cpp:273] Solving LeNet
I0428 19:42:49.501371 25196 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:49.501539 25196 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:49.506075 25196 blocking_queue.cpp:49] Waiting for data
I0428 19:42:49.555627 25203 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:49.556092 25196 solver.cpp:398]     Test net output #0: accuracy = 0.0639
I0428 19:42:49.556139 25196 solver.cpp:398]     Test net output #1: loss = 2.37341 (* 1 = 2.37341 loss)
I0428 19:42:49.557409 25196 solver.cpp:219] Iteration 0 (0 iter/s, 0.0560128s/100 iters), loss = 2.37216
I0428 19:42:49.557447 25196 solver.cpp:238]     Train net output #0: loss = 2.37216 (* 1 = 2.37216 loss)
I0428 19:42:49.557476 25196 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:49.653069 25196 solver.cpp:219] Iteration 100 (1045.8 iter/s, 0.0956209s/100 iters), loss = 1.54751
I0428 19:42:49.653120 25196 solver.cpp:238]     Train net output #0: loss = 1.54751 (* 1 = 1.54751 loss)
I0428 19:42:49.653141 25196 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:49.743315 25196 solver.cpp:219] Iteration 200 (1108.66 iter/s, 0.090199s/100 iters), loss = 1.35077
I0428 19:42:49.743353 25196 solver.cpp:238]     Train net output #0: loss = 1.35077 (* 1 = 1.35077 loss)
I0428 19:42:49.743361 25196 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:49.829743 25196 solver.cpp:219] Iteration 300 (1157.56 iter/s, 0.0863887s/100 iters), loss = 0.580225
I0428 19:42:49.829772 25196 solver.cpp:238]     Train net output #0: loss = 0.580225 (* 1 = 0.580225 loss)
I0428 19:42:49.829782 25196 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:49.916677 25196 solver.cpp:219] Iteration 400 (1150.81 iter/s, 0.0868954s/100 iters), loss = 0.901315
I0428 19:42:49.916708 25196 solver.cpp:238]     Train net output #0: loss = 0.901315 (* 1 = 0.901315 loss)
I0428 19:42:49.916716 25196 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:50.002468 25196 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:50.052654 25203 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:50.053124 25196 solver.cpp:398]     Test net output #0: accuracy = 0.8332
I0428 19:42:50.053150 25196 solver.cpp:398]     Test net output #1: loss = 0.688095 (* 1 = 0.688095 loss)
I0428 19:42:50.054059 25196 solver.cpp:219] Iteration 500 (728.137 iter/s, 0.137337s/100 iters), loss = 0.881139
I0428 19:42:50.054085 25196 solver.cpp:238]     Train net output #0: loss = 0.881139 (* 1 = 0.881139 loss)
I0428 19:42:50.054111 25196 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:50.139559 25196 solver.cpp:219] Iteration 600 (1170.07 iter/s, 0.0854651s/100 iters), loss = 0.563176
I0428 19:42:50.139600 25196 solver.cpp:238]     Train net output #0: loss = 0.563176 (* 1 = 0.563176 loss)
I0428 19:42:50.139606 25196 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:50.226472 25196 solver.cpp:219] Iteration 700 (1151.23 iter/s, 0.0868639s/100 iters), loss = 0.968851
I0428 19:42:50.226511 25196 solver.cpp:238]     Train net output #0: loss = 0.968851 (* 1 = 0.968851 loss)
I0428 19:42:50.226517 25196 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:50.314939 25196 solver.cpp:219] Iteration 800 (1131.05 iter/s, 0.0884132s/100 iters), loss = 0.676226
I0428 19:42:50.314997 25196 solver.cpp:238]     Train net output #0: loss = 0.676226 (* 1 = 0.676226 loss)
I0428 19:42:50.315023 25196 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:50.410109 25196 solver.cpp:219] Iteration 900 (1051.41 iter/s, 0.0951101s/100 iters), loss = 0.617892
I0428 19:42:50.410145 25196 solver.cpp:238]     Train net output #0: loss = 0.617892 (* 1 = 0.617892 loss)
I0428 19:42:50.410158 25196 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:50.439074 25202 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:50.496431 25196 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:50.497323 25196 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:50.497830 25196 solver.cpp:311] Iteration 1000, loss = 0.707579
I0428 19:42:50.497848 25196 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:50.541867 25203 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:50.542322 25196 solver.cpp:398]     Test net output #0: accuracy = 0.8537
I0428 19:42:50.542346 25196 solver.cpp:398]     Test net output #1: loss = 0.59954 (* 1 = 0.59954 loss)
I0428 19:42:50.542356 25196 solver.cpp:316] Optimization Done.
I0428 19:42:50.542362 25196 caffe.cpp:259] Optimization Done.
