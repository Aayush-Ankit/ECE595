I0428 19:38:50.406390 24148 caffe.cpp:218] Using GPUs 0
I0428 19:38:50.447479 24148 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:50.958369 24148 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test286.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:50.958514 24148 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test286.prototxt
I0428 19:38:50.958932 24148 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:50.958952 24148 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:50.959054 24148 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:50.959137 24148 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:50.959239 24148 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:50.959264 24148 net.cpp:86] Creating Layer mnist
I0428 19:38:50.959270 24148 net.cpp:382] mnist -> data
I0428 19:38:50.959295 24148 net.cpp:382] mnist -> label
I0428 19:38:50.960391 24148 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:50.962852 24148 net.cpp:124] Setting up mnist
I0428 19:38:50.962869 24148 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:50.962875 24148 net.cpp:131] Top shape: 64 (64)
I0428 19:38:50.962879 24148 net.cpp:139] Memory required for data: 200960
I0428 19:38:50.962887 24148 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:50.962918 24148 net.cpp:86] Creating Layer conv0
I0428 19:38:50.962939 24148 net.cpp:408] conv0 <- data
I0428 19:38:50.962950 24148 net.cpp:382] conv0 -> conv0
I0428 19:38:51.225633 24148 net.cpp:124] Setting up conv0
I0428 19:38:51.225675 24148 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:38:51.225679 24148 net.cpp:139] Memory required for data: 495872
I0428 19:38:51.225694 24148 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:51.225708 24148 net.cpp:86] Creating Layer pool0
I0428 19:38:51.225713 24148 net.cpp:408] pool0 <- conv0
I0428 19:38:51.225733 24148 net.cpp:382] pool0 -> pool0
I0428 19:38:51.225782 24148 net.cpp:124] Setting up pool0
I0428 19:38:51.225800 24148 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:38:51.225803 24148 net.cpp:139] Memory required for data: 569600
I0428 19:38:51.225806 24148 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:51.225818 24148 net.cpp:86] Creating Layer conv1
I0428 19:38:51.225821 24148 net.cpp:408] conv1 <- pool0
I0428 19:38:51.225826 24148 net.cpp:382] conv1 -> conv1
I0428 19:38:51.227843 24148 net.cpp:124] Setting up conv1
I0428 19:38:51.227859 24148 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:38:51.227862 24148 net.cpp:139] Memory required for data: 602368
I0428 19:38:51.227886 24148 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:51.227893 24148 net.cpp:86] Creating Layer pool1
I0428 19:38:51.227897 24148 net.cpp:408] pool1 <- conv1
I0428 19:38:51.227902 24148 net.cpp:382] pool1 -> pool1
I0428 19:38:51.227953 24148 net.cpp:124] Setting up pool1
I0428 19:38:51.227959 24148 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:38:51.227962 24148 net.cpp:139] Memory required for data: 610560
I0428 19:38:51.227965 24148 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:51.227972 24148 net.cpp:86] Creating Layer ip1
I0428 19:38:51.227975 24148 net.cpp:408] ip1 <- pool1
I0428 19:38:51.227979 24148 net.cpp:382] ip1 -> ip1
I0428 19:38:51.228071 24148 net.cpp:124] Setting up ip1
I0428 19:38:51.228078 24148 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:51.228082 24148 net.cpp:139] Memory required for data: 613120
I0428 19:38:51.228090 24148 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:51.228096 24148 net.cpp:86] Creating Layer relu1
I0428 19:38:51.228098 24148 net.cpp:408] relu1 <- ip1
I0428 19:38:51.228102 24148 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:51.228263 24148 net.cpp:124] Setting up relu1
I0428 19:38:51.228272 24148 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:51.228276 24148 net.cpp:139] Memory required for data: 615680
I0428 19:38:51.228278 24148 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:51.228284 24148 net.cpp:86] Creating Layer ip2
I0428 19:38:51.228287 24148 net.cpp:408] ip2 <- ip1
I0428 19:38:51.228292 24148 net.cpp:382] ip2 -> ip2
I0428 19:38:51.228381 24148 net.cpp:124] Setting up ip2
I0428 19:38:51.228389 24148 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:51.228391 24148 net.cpp:139] Memory required for data: 618240
I0428 19:38:51.228396 24148 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:51.228402 24148 net.cpp:86] Creating Layer relu2
I0428 19:38:51.228405 24148 net.cpp:408] relu2 <- ip2
I0428 19:38:51.228410 24148 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:51.229228 24148 net.cpp:124] Setting up relu2
I0428 19:38:51.229240 24148 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:51.229259 24148 net.cpp:139] Memory required for data: 620800
I0428 19:38:51.229262 24148 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:51.229269 24148 net.cpp:86] Creating Layer ip3
I0428 19:38:51.229274 24148 net.cpp:408] ip3 <- ip2
I0428 19:38:51.229279 24148 net.cpp:382] ip3 -> ip3
I0428 19:38:51.229377 24148 net.cpp:124] Setting up ip3
I0428 19:38:51.229384 24148 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:51.229387 24148 net.cpp:139] Memory required for data: 623360
I0428 19:38:51.229395 24148 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:51.229400 24148 net.cpp:86] Creating Layer relu3
I0428 19:38:51.229403 24148 net.cpp:408] relu3 <- ip3
I0428 19:38:51.229408 24148 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:51.229565 24148 net.cpp:124] Setting up relu3
I0428 19:38:51.229574 24148 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:51.229578 24148 net.cpp:139] Memory required for data: 625920
I0428 19:38:51.229580 24148 layer_factory.hpp:77] Creating layer loss
I0428 19:38:51.229586 24148 net.cpp:86] Creating Layer loss
I0428 19:38:51.229589 24148 net.cpp:408] loss <- ip3
I0428 19:38:51.229593 24148 net.cpp:408] loss <- label
I0428 19:38:51.229598 24148 net.cpp:382] loss -> loss
I0428 19:38:51.229612 24148 layer_factory.hpp:77] Creating layer loss
I0428 19:38:51.229853 24148 net.cpp:124] Setting up loss
I0428 19:38:51.229862 24148 net.cpp:131] Top shape: (1)
I0428 19:38:51.229866 24148 net.cpp:134]     with loss weight 1
I0428 19:38:51.229878 24148 net.cpp:139] Memory required for data: 625924
I0428 19:38:51.229882 24148 net.cpp:200] loss needs backward computation.
I0428 19:38:51.229885 24148 net.cpp:200] relu3 needs backward computation.
I0428 19:38:51.229888 24148 net.cpp:200] ip3 needs backward computation.
I0428 19:38:51.229892 24148 net.cpp:200] relu2 needs backward computation.
I0428 19:38:51.229894 24148 net.cpp:200] ip2 needs backward computation.
I0428 19:38:51.229897 24148 net.cpp:200] relu1 needs backward computation.
I0428 19:38:51.229900 24148 net.cpp:200] ip1 needs backward computation.
I0428 19:38:51.229903 24148 net.cpp:200] pool1 needs backward computation.
I0428 19:38:51.229907 24148 net.cpp:200] conv1 needs backward computation.
I0428 19:38:51.229909 24148 net.cpp:200] pool0 needs backward computation.
I0428 19:38:51.229912 24148 net.cpp:200] conv0 needs backward computation.
I0428 19:38:51.229917 24148 net.cpp:202] mnist does not need backward computation.
I0428 19:38:51.229919 24148 net.cpp:244] This network produces output loss
I0428 19:38:51.229928 24148 net.cpp:257] Network initialization done.
I0428 19:38:51.230278 24148 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test286.prototxt
I0428 19:38:51.230336 24148 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:51.230474 24148 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:51.230562 24148 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:51.230618 24148 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:51.230638 24148 net.cpp:86] Creating Layer mnist
I0428 19:38:51.230643 24148 net.cpp:382] mnist -> data
I0428 19:38:51.230653 24148 net.cpp:382] mnist -> label
I0428 19:38:51.230748 24148 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:51.232782 24148 net.cpp:124] Setting up mnist
I0428 19:38:51.232832 24148 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:51.232838 24148 net.cpp:131] Top shape: 100 (100)
I0428 19:38:51.232841 24148 net.cpp:139] Memory required for data: 314000
I0428 19:38:51.232846 24148 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:51.232853 24148 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:51.232856 24148 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:51.232861 24148 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:51.232869 24148 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:51.232938 24148 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:51.232944 24148 net.cpp:131] Top shape: 100 (100)
I0428 19:38:51.232947 24148 net.cpp:131] Top shape: 100 (100)
I0428 19:38:51.232950 24148 net.cpp:139] Memory required for data: 314800
I0428 19:38:51.232954 24148 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:51.232962 24148 net.cpp:86] Creating Layer conv0
I0428 19:38:51.232965 24148 net.cpp:408] conv0 <- data
I0428 19:38:51.232970 24148 net.cpp:382] conv0 -> conv0
I0428 19:38:51.234743 24148 net.cpp:124] Setting up conv0
I0428 19:38:51.234756 24148 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:38:51.234760 24148 net.cpp:139] Memory required for data: 775600
I0428 19:38:51.234769 24148 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:51.234791 24148 net.cpp:86] Creating Layer pool0
I0428 19:38:51.234793 24148 net.cpp:408] pool0 <- conv0
I0428 19:38:51.234798 24148 net.cpp:382] pool0 -> pool0
I0428 19:38:51.234833 24148 net.cpp:124] Setting up pool0
I0428 19:38:51.234839 24148 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:38:51.234843 24148 net.cpp:139] Memory required for data: 890800
I0428 19:38:51.234855 24148 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:51.234863 24148 net.cpp:86] Creating Layer conv1
I0428 19:38:51.234866 24148 net.cpp:408] conv1 <- pool0
I0428 19:38:51.234870 24148 net.cpp:382] conv1 -> conv1
I0428 19:38:51.236320 24148 net.cpp:124] Setting up conv1
I0428 19:38:51.236344 24148 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:38:51.236349 24148 net.cpp:139] Memory required for data: 942000
I0428 19:38:51.236358 24148 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:51.236366 24148 net.cpp:86] Creating Layer pool1
I0428 19:38:51.236369 24148 net.cpp:408] pool1 <- conv1
I0428 19:38:51.236376 24148 net.cpp:382] pool1 -> pool1
I0428 19:38:51.236412 24148 net.cpp:124] Setting up pool1
I0428 19:38:51.236418 24148 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:38:51.236420 24148 net.cpp:139] Memory required for data: 954800
I0428 19:38:51.236423 24148 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:51.236429 24148 net.cpp:86] Creating Layer ip1
I0428 19:38:51.236433 24148 net.cpp:408] ip1 <- pool1
I0428 19:38:51.236438 24148 net.cpp:382] ip1 -> ip1
I0428 19:38:51.236536 24148 net.cpp:124] Setting up ip1
I0428 19:38:51.236543 24148 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:51.236557 24148 net.cpp:139] Memory required for data: 958800
I0428 19:38:51.236565 24148 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:51.236570 24148 net.cpp:86] Creating Layer relu1
I0428 19:38:51.236574 24148 net.cpp:408] relu1 <- ip1
I0428 19:38:51.236578 24148 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:51.236755 24148 net.cpp:124] Setting up relu1
I0428 19:38:51.236763 24148 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:51.236768 24148 net.cpp:139] Memory required for data: 962800
I0428 19:38:51.236776 24148 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:51.236783 24148 net.cpp:86] Creating Layer ip2
I0428 19:38:51.236786 24148 net.cpp:408] ip2 <- ip1
I0428 19:38:51.236793 24148 net.cpp:382] ip2 -> ip2
I0428 19:38:51.236908 24148 net.cpp:124] Setting up ip2
I0428 19:38:51.236917 24148 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:51.236920 24148 net.cpp:139] Memory required for data: 966800
I0428 19:38:51.236927 24148 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:51.236930 24148 net.cpp:86] Creating Layer relu2
I0428 19:38:51.236934 24148 net.cpp:408] relu2 <- ip2
I0428 19:38:51.236938 24148 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:51.237084 24148 net.cpp:124] Setting up relu2
I0428 19:38:51.237093 24148 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:51.237097 24148 net.cpp:139] Memory required for data: 970800
I0428 19:38:51.237099 24148 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:51.237104 24148 net.cpp:86] Creating Layer ip3
I0428 19:38:51.237115 24148 net.cpp:408] ip3 <- ip2
I0428 19:38:51.237120 24148 net.cpp:382] ip3 -> ip3
I0428 19:38:51.237227 24148 net.cpp:124] Setting up ip3
I0428 19:38:51.237236 24148 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:51.237238 24148 net.cpp:139] Memory required for data: 974800
I0428 19:38:51.237246 24148 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:51.237251 24148 net.cpp:86] Creating Layer relu3
I0428 19:38:51.237254 24148 net.cpp:408] relu3 <- ip3
I0428 19:38:51.237259 24148 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:51.238147 24148 net.cpp:124] Setting up relu3
I0428 19:38:51.238158 24148 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:51.238162 24148 net.cpp:139] Memory required for data: 978800
I0428 19:38:51.238167 24148 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:38:51.238171 24148 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:38:51.238175 24148 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:38:51.238180 24148 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:38:51.238186 24148 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:38:51.238241 24148 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:38:51.238247 24148 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:51.238251 24148 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:51.238260 24148 net.cpp:139] Memory required for data: 986800
I0428 19:38:51.238263 24148 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:51.238268 24148 net.cpp:86] Creating Layer accuracy
I0428 19:38:51.238271 24148 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:38:51.238276 24148 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:51.238279 24148 net.cpp:382] accuracy -> accuracy
I0428 19:38:51.238286 24148 net.cpp:124] Setting up accuracy
I0428 19:38:51.238291 24148 net.cpp:131] Top shape: (1)
I0428 19:38:51.238293 24148 net.cpp:139] Memory required for data: 986804
I0428 19:38:51.238296 24148 layer_factory.hpp:77] Creating layer loss
I0428 19:38:51.238299 24148 net.cpp:86] Creating Layer loss
I0428 19:38:51.238302 24148 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:38:51.238306 24148 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:51.238310 24148 net.cpp:382] loss -> loss
I0428 19:38:51.238315 24148 layer_factory.hpp:77] Creating layer loss
I0428 19:38:51.238595 24148 net.cpp:124] Setting up loss
I0428 19:38:51.238605 24148 net.cpp:131] Top shape: (1)
I0428 19:38:51.238610 24148 net.cpp:134]     with loss weight 1
I0428 19:38:51.238615 24148 net.cpp:139] Memory required for data: 986808
I0428 19:38:51.238629 24148 net.cpp:200] loss needs backward computation.
I0428 19:38:51.238634 24148 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:51.238638 24148 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:38:51.238653 24148 net.cpp:200] relu3 needs backward computation.
I0428 19:38:51.238656 24148 net.cpp:200] ip3 needs backward computation.
I0428 19:38:51.238659 24148 net.cpp:200] relu2 needs backward computation.
I0428 19:38:51.238662 24148 net.cpp:200] ip2 needs backward computation.
I0428 19:38:51.238672 24148 net.cpp:200] relu1 needs backward computation.
I0428 19:38:51.238674 24148 net.cpp:200] ip1 needs backward computation.
I0428 19:38:51.238688 24148 net.cpp:200] pool1 needs backward computation.
I0428 19:38:51.238692 24148 net.cpp:200] conv1 needs backward computation.
I0428 19:38:51.238695 24148 net.cpp:200] pool0 needs backward computation.
I0428 19:38:51.238704 24148 net.cpp:200] conv0 needs backward computation.
I0428 19:38:51.238709 24148 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:51.238718 24148 net.cpp:202] mnist does not need backward computation.
I0428 19:38:51.238721 24148 net.cpp:244] This network produces output accuracy
I0428 19:38:51.238725 24148 net.cpp:244] This network produces output loss
I0428 19:38:51.238735 24148 net.cpp:257] Network initialization done.
I0428 19:38:51.238777 24148 solver.cpp:56] Solver scaffolding done.
I0428 19:38:51.239101 24148 caffe.cpp:248] Starting Optimization
I0428 19:38:51.239107 24148 solver.cpp:273] Solving LeNet
I0428 19:38:51.239110 24148 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:51.239938 24148 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:51.242063 24148 blocking_queue.cpp:49] Waiting for data
I0428 19:38:51.314910 24155 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:51.315367 24148 solver.cpp:398]     Test net output #0: accuracy = 0.0629
I0428 19:38:51.315389 24148 solver.cpp:398]     Test net output #1: loss = 2.32741 (* 1 = 2.32741 loss)
I0428 19:38:51.317286 24148 solver.cpp:219] Iteration 0 (-1.07128e+21 iter/s, 0.0781332s/100 iters), loss = 2.33219
I0428 19:38:51.317311 24148 solver.cpp:238]     Train net output #0: loss = 2.33219 (* 1 = 2.33219 loss)
I0428 19:38:51.317338 24148 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:51.388659 24148 solver.cpp:219] Iteration 100 (1401.75 iter/s, 0.0713392s/100 iters), loss = 1.86967
I0428 19:38:51.388682 24148 solver.cpp:238]     Train net output #0: loss = 1.86967 (* 1 = 1.86967 loss)
I0428 19:38:51.388689 24148 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:51.457401 24148 solver.cpp:219] Iteration 200 (1455.41 iter/s, 0.0687094s/100 iters), loss = 1.12819
I0428 19:38:51.457425 24148 solver.cpp:238]     Train net output #0: loss = 1.12819 (* 1 = 1.12819 loss)
I0428 19:38:51.457432 24148 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:51.524971 24148 solver.cpp:219] Iteration 300 (1480.67 iter/s, 0.0675368s/100 iters), loss = 0.517294
I0428 19:38:51.524997 24148 solver.cpp:238]     Train net output #0: loss = 0.517294 (* 1 = 0.517294 loss)
I0428 19:38:51.525004 24148 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:51.595684 24148 solver.cpp:219] Iteration 400 (1414.88 iter/s, 0.0706775s/100 iters), loss = 0.527294
I0428 19:38:51.595710 24148 solver.cpp:238]     Train net output #0: loss = 0.527294 (* 1 = 0.527294 loss)
I0428 19:38:51.595715 24148 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:51.664105 24148 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:51.738864 24155 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:51.739334 24148 solver.cpp:398]     Test net output #0: accuracy = 0.8821
I0428 19:38:51.739361 24148 solver.cpp:398]     Test net output #1: loss = 0.384893 (* 1 = 0.384893 loss)
I0428 19:38:51.740370 24148 solver.cpp:219] Iteration 500 (691.337 iter/s, 0.144647s/100 iters), loss = 0.370733
I0428 19:38:51.740401 24148 solver.cpp:238]     Train net output #0: loss = 0.370733 (* 1 = 0.370733 loss)
I0428 19:38:51.740432 24148 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:51.835129 24148 solver.cpp:219] Iteration 600 (1055.72 iter/s, 0.0947219s/100 iters), loss = 0.34142
I0428 19:38:51.835160 24148 solver.cpp:238]     Train net output #0: loss = 0.34142 (* 1 = 0.34142 loss)
I0428 19:38:51.835168 24148 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:51.929468 24148 solver.cpp:219] Iteration 700 (1060.48 iter/s, 0.0942971s/100 iters), loss = 0.406178
I0428 19:38:51.929499 24148 solver.cpp:238]     Train net output #0: loss = 0.406178 (* 1 = 0.406178 loss)
I0428 19:38:51.929512 24148 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:52.017297 24148 solver.cpp:219] Iteration 800 (1139.09 iter/s, 0.0877896s/100 iters), loss = 0.479134
I0428 19:38:52.017323 24148 solver.cpp:238]     Train net output #0: loss = 0.479134 (* 1 = 0.479134 loss)
I0428 19:38:52.017349 24148 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:38:52.100039 24148 solver.cpp:219] Iteration 900 (1209.1 iter/s, 0.0827064s/100 iters), loss = 0.546676
I0428 19:38:52.100062 24148 solver.cpp:238]     Train net output #0: loss = 0.546676 (* 1 = 0.546676 loss)
I0428 19:38:52.100085 24148 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:38:52.127951 24154 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:52.182399 24148 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:38:52.183064 24148 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:38:52.183642 24148 solver.cpp:311] Iteration 1000, loss = 0.349629
I0428 19:38:52.183662 24148 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:38:52.259120 24155 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:52.259589 24148 solver.cpp:398]     Test net output #0: accuracy = 0.9103
I0428 19:38:52.259608 24148 solver.cpp:398]     Test net output #1: loss = 0.293324 (* 1 = 0.293324 loss)
I0428 19:38:52.259613 24148 solver.cpp:316] Optimization Done.
I0428 19:38:52.259616 24148 caffe.cpp:259] Optimization Done.
