I0428 19:53:44.509717 27836 caffe.cpp:218] Using GPUs 0
I0428 19:53:44.547513 27836 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:45.056834 27836 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test695.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:45.056974 27836 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test695.prototxt
I0428 19:53:45.057376 27836 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:45.057394 27836 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:45.057489 27836 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:45.057562 27836 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:45.057663 27836 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:45.057687 27836 net.cpp:86] Creating Layer mnist
I0428 19:53:45.057694 27836 net.cpp:382] mnist -> data
I0428 19:53:45.057718 27836 net.cpp:382] mnist -> label
I0428 19:53:45.058811 27836 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:45.061270 27836 net.cpp:124] Setting up mnist
I0428 19:53:45.061290 27836 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:45.061296 27836 net.cpp:131] Top shape: 64 (64)
I0428 19:53:45.061300 27836 net.cpp:139] Memory required for data: 200960
I0428 19:53:45.061306 27836 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:45.061322 27836 net.cpp:86] Creating Layer conv0
I0428 19:53:45.061345 27836 net.cpp:408] conv0 <- data
I0428 19:53:45.061357 27836 net.cpp:382] conv0 -> conv0
I0428 19:53:45.337414 27836 net.cpp:124] Setting up conv0
I0428 19:53:45.337441 27836 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:45.337445 27836 net.cpp:139] Memory required for data: 938240
I0428 19:53:45.337460 27836 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:45.337472 27836 net.cpp:86] Creating Layer pool0
I0428 19:53:45.337476 27836 net.cpp:408] pool0 <- conv0
I0428 19:53:45.337481 27836 net.cpp:382] pool0 -> pool0
I0428 19:53:45.337543 27836 net.cpp:124] Setting up pool0
I0428 19:53:45.337550 27836 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:45.337553 27836 net.cpp:139] Memory required for data: 1122560
I0428 19:53:45.337555 27836 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:45.337568 27836 net.cpp:86] Creating Layer conv1
I0428 19:53:45.337574 27836 net.cpp:408] conv1 <- pool0
I0428 19:53:45.337594 27836 net.cpp:382] conv1 -> conv1
I0428 19:53:45.340389 27836 net.cpp:124] Setting up conv1
I0428 19:53:45.340402 27836 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:45.340406 27836 net.cpp:139] Memory required for data: 1941760
I0428 19:53:45.340415 27836 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:45.340422 27836 net.cpp:86] Creating Layer pool1
I0428 19:53:45.340426 27836 net.cpp:408] pool1 <- conv1
I0428 19:53:45.340430 27836 net.cpp:382] pool1 -> pool1
I0428 19:53:45.340482 27836 net.cpp:124] Setting up pool1
I0428 19:53:45.340489 27836 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:45.340493 27836 net.cpp:139] Memory required for data: 2146560
I0428 19:53:45.340495 27836 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:45.340507 27836 net.cpp:86] Creating Layer ip1
I0428 19:53:45.340512 27836 net.cpp:408] ip1 <- pool1
I0428 19:53:45.340533 27836 net.cpp:382] ip1 -> ip1
I0428 19:53:45.340919 27836 net.cpp:124] Setting up ip1
I0428 19:53:45.340929 27836 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:45.340932 27836 net.cpp:139] Memory required for data: 2159360
I0428 19:53:45.340939 27836 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:45.340946 27836 net.cpp:86] Creating Layer relu1
I0428 19:53:45.340950 27836 net.cpp:408] relu1 <- ip1
I0428 19:53:45.340955 27836 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:45.341156 27836 net.cpp:124] Setting up relu1
I0428 19:53:45.341179 27836 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:45.341197 27836 net.cpp:139] Memory required for data: 2172160
I0428 19:53:45.341200 27836 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:45.341205 27836 net.cpp:86] Creating Layer ip2
I0428 19:53:45.341208 27836 net.cpp:408] ip2 <- ip1
I0428 19:53:45.341213 27836 net.cpp:382] ip2 -> ip2
I0428 19:53:45.341312 27836 net.cpp:124] Setting up ip2
I0428 19:53:45.341320 27836 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:45.341322 27836 net.cpp:139] Memory required for data: 2174720
I0428 19:53:45.341327 27836 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:45.341333 27836 net.cpp:86] Creating Layer relu2
I0428 19:53:45.341336 27836 net.cpp:408] relu2 <- ip2
I0428 19:53:45.341341 27836 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:45.342108 27836 net.cpp:124] Setting up relu2
I0428 19:53:45.342120 27836 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:45.342139 27836 net.cpp:139] Memory required for data: 2177280
I0428 19:53:45.342142 27836 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:45.342149 27836 net.cpp:86] Creating Layer ip3
I0428 19:53:45.342152 27836 net.cpp:408] ip3 <- ip2
I0428 19:53:45.342159 27836 net.cpp:382] ip3 -> ip3
I0428 19:53:45.342270 27836 net.cpp:124] Setting up ip3
I0428 19:53:45.342278 27836 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:45.342280 27836 net.cpp:139] Memory required for data: 2179840
I0428 19:53:45.342288 27836 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:45.342296 27836 net.cpp:86] Creating Layer relu3
I0428 19:53:45.342314 27836 net.cpp:408] relu3 <- ip3
I0428 19:53:45.342319 27836 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:45.342492 27836 net.cpp:124] Setting up relu3
I0428 19:53:45.342501 27836 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:45.342504 27836 net.cpp:139] Memory required for data: 2182400
I0428 19:53:45.342509 27836 layer_factory.hpp:77] Creating layer loss
I0428 19:53:45.342514 27836 net.cpp:86] Creating Layer loss
I0428 19:53:45.342517 27836 net.cpp:408] loss <- ip3
I0428 19:53:45.342521 27836 net.cpp:408] loss <- label
I0428 19:53:45.342526 27836 net.cpp:382] loss -> loss
I0428 19:53:45.342545 27836 layer_factory.hpp:77] Creating layer loss
I0428 19:53:45.342789 27836 net.cpp:124] Setting up loss
I0428 19:53:45.342798 27836 net.cpp:131] Top shape: (1)
I0428 19:53:45.342802 27836 net.cpp:134]     with loss weight 1
I0428 19:53:45.342816 27836 net.cpp:139] Memory required for data: 2182404
I0428 19:53:45.342819 27836 net.cpp:200] loss needs backward computation.
I0428 19:53:45.342823 27836 net.cpp:200] relu3 needs backward computation.
I0428 19:53:45.342826 27836 net.cpp:200] ip3 needs backward computation.
I0428 19:53:45.342829 27836 net.cpp:200] relu2 needs backward computation.
I0428 19:53:45.342833 27836 net.cpp:200] ip2 needs backward computation.
I0428 19:53:45.342834 27836 net.cpp:200] relu1 needs backward computation.
I0428 19:53:45.342838 27836 net.cpp:200] ip1 needs backward computation.
I0428 19:53:45.342840 27836 net.cpp:200] pool1 needs backward computation.
I0428 19:53:45.342844 27836 net.cpp:200] conv1 needs backward computation.
I0428 19:53:45.342846 27836 net.cpp:200] pool0 needs backward computation.
I0428 19:53:45.342850 27836 net.cpp:200] conv0 needs backward computation.
I0428 19:53:45.342854 27836 net.cpp:202] mnist does not need backward computation.
I0428 19:53:45.342857 27836 net.cpp:244] This network produces output loss
I0428 19:53:45.342865 27836 net.cpp:257] Network initialization done.
I0428 19:53:45.343322 27836 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test695.prototxt
I0428 19:53:45.343360 27836 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:45.343467 27836 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:45.343545 27836 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:45.343590 27836 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:45.343603 27836 net.cpp:86] Creating Layer mnist
I0428 19:53:45.343610 27836 net.cpp:382] mnist -> data
I0428 19:53:45.343617 27836 net.cpp:382] mnist -> label
I0428 19:53:45.343744 27836 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:45.345978 27836 net.cpp:124] Setting up mnist
I0428 19:53:45.346007 27836 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:45.346012 27836 net.cpp:131] Top shape: 100 (100)
I0428 19:53:45.346031 27836 net.cpp:139] Memory required for data: 314000
I0428 19:53:45.346035 27836 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:45.346067 27836 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:45.346074 27836 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:45.346081 27836 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:45.346087 27836 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:45.346141 27836 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:45.346148 27836 net.cpp:131] Top shape: 100 (100)
I0428 19:53:45.346153 27836 net.cpp:131] Top shape: 100 (100)
I0428 19:53:45.346155 27836 net.cpp:139] Memory required for data: 314800
I0428 19:53:45.346159 27836 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:45.346168 27836 net.cpp:86] Creating Layer conv0
I0428 19:53:45.346173 27836 net.cpp:408] conv0 <- data
I0428 19:53:45.346179 27836 net.cpp:382] conv0 -> conv0
I0428 19:53:45.348001 27836 net.cpp:124] Setting up conv0
I0428 19:53:45.348016 27836 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:45.348019 27836 net.cpp:139] Memory required for data: 1466800
I0428 19:53:45.348028 27836 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:45.348034 27836 net.cpp:86] Creating Layer pool0
I0428 19:53:45.348038 27836 net.cpp:408] pool0 <- conv0
I0428 19:53:45.348043 27836 net.cpp:382] pool0 -> pool0
I0428 19:53:45.348078 27836 net.cpp:124] Setting up pool0
I0428 19:53:45.348085 27836 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:45.348088 27836 net.cpp:139] Memory required for data: 1754800
I0428 19:53:45.348091 27836 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:45.348099 27836 net.cpp:86] Creating Layer conv1
I0428 19:53:45.348103 27836 net.cpp:408] conv1 <- pool0
I0428 19:53:45.348107 27836 net.cpp:382] conv1 -> conv1
I0428 19:53:45.349875 27836 net.cpp:124] Setting up conv1
I0428 19:53:45.349905 27836 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:45.349910 27836 net.cpp:139] Memory required for data: 3034800
I0428 19:53:45.349932 27836 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:45.349938 27836 net.cpp:86] Creating Layer pool1
I0428 19:53:45.349942 27836 net.cpp:408] pool1 <- conv1
I0428 19:53:45.349947 27836 net.cpp:382] pool1 -> pool1
I0428 19:53:45.350014 27836 net.cpp:124] Setting up pool1
I0428 19:53:45.350021 27836 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:45.350025 27836 net.cpp:139] Memory required for data: 3354800
I0428 19:53:45.350028 27836 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:45.350035 27836 net.cpp:86] Creating Layer ip1
I0428 19:53:45.350039 27836 net.cpp:408] ip1 <- pool1
I0428 19:53:45.350044 27836 net.cpp:382] ip1 -> ip1
I0428 19:53:45.350445 27836 net.cpp:124] Setting up ip1
I0428 19:53:45.350451 27836 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:45.350481 27836 net.cpp:139] Memory required for data: 3374800
I0428 19:53:45.350489 27836 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:45.350494 27836 net.cpp:86] Creating Layer relu1
I0428 19:53:45.350498 27836 net.cpp:408] relu1 <- ip1
I0428 19:53:45.350502 27836 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:45.350704 27836 net.cpp:124] Setting up relu1
I0428 19:53:45.350714 27836 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:45.350718 27836 net.cpp:139] Memory required for data: 3394800
I0428 19:53:45.350721 27836 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:45.350728 27836 net.cpp:86] Creating Layer ip2
I0428 19:53:45.350733 27836 net.cpp:408] ip2 <- ip1
I0428 19:53:45.350738 27836 net.cpp:382] ip2 -> ip2
I0428 19:53:45.350904 27836 net.cpp:124] Setting up ip2
I0428 19:53:45.350913 27836 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:45.350915 27836 net.cpp:139] Memory required for data: 3398800
I0428 19:53:45.350921 27836 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:45.350926 27836 net.cpp:86] Creating Layer relu2
I0428 19:53:45.350929 27836 net.cpp:408] relu2 <- ip2
I0428 19:53:45.350934 27836 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:45.351114 27836 net.cpp:124] Setting up relu2
I0428 19:53:45.351124 27836 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:45.351127 27836 net.cpp:139] Memory required for data: 3402800
I0428 19:53:45.351131 27836 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:45.351136 27836 net.cpp:86] Creating Layer ip3
I0428 19:53:45.351140 27836 net.cpp:408] ip3 <- ip2
I0428 19:53:45.351146 27836 net.cpp:382] ip3 -> ip3
I0428 19:53:45.351265 27836 net.cpp:124] Setting up ip3
I0428 19:53:45.351274 27836 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:45.351277 27836 net.cpp:139] Memory required for data: 3406800
I0428 19:53:45.351286 27836 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:45.351291 27836 net.cpp:86] Creating Layer relu3
I0428 19:53:45.351295 27836 net.cpp:408] relu3 <- ip3
I0428 19:53:45.351300 27836 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:45.352159 27836 net.cpp:124] Setting up relu3
I0428 19:53:45.352171 27836 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:45.352175 27836 net.cpp:139] Memory required for data: 3410800
I0428 19:53:45.352179 27836 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:45.352200 27836 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:45.352203 27836 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:45.352210 27836 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:45.352217 27836 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:45.352278 27836 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:45.352289 27836 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:45.352293 27836 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:45.352296 27836 net.cpp:139] Memory required for data: 3418800
I0428 19:53:45.352299 27836 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:45.352305 27836 net.cpp:86] Creating Layer accuracy
I0428 19:53:45.352309 27836 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:45.352313 27836 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:45.352319 27836 net.cpp:382] accuracy -> accuracy
I0428 19:53:45.352325 27836 net.cpp:124] Setting up accuracy
I0428 19:53:45.352334 27836 net.cpp:131] Top shape: (1)
I0428 19:53:45.352336 27836 net.cpp:139] Memory required for data: 3418804
I0428 19:53:45.352355 27836 layer_factory.hpp:77] Creating layer loss
I0428 19:53:45.352361 27836 net.cpp:86] Creating Layer loss
I0428 19:53:45.352365 27836 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:45.352368 27836 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:45.352373 27836 net.cpp:382] loss -> loss
I0428 19:53:45.352380 27836 layer_factory.hpp:77] Creating layer loss
I0428 19:53:45.352684 27836 net.cpp:124] Setting up loss
I0428 19:53:45.352694 27836 net.cpp:131] Top shape: (1)
I0428 19:53:45.352712 27836 net.cpp:134]     with loss weight 1
I0428 19:53:45.352720 27836 net.cpp:139] Memory required for data: 3418808
I0428 19:53:45.352732 27836 net.cpp:200] loss needs backward computation.
I0428 19:53:45.352737 27836 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:45.352741 27836 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:45.352746 27836 net.cpp:200] relu3 needs backward computation.
I0428 19:53:45.352748 27836 net.cpp:200] ip3 needs backward computation.
I0428 19:53:45.352752 27836 net.cpp:200] relu2 needs backward computation.
I0428 19:53:45.352756 27836 net.cpp:200] ip2 needs backward computation.
I0428 19:53:45.352758 27836 net.cpp:200] relu1 needs backward computation.
I0428 19:53:45.352761 27836 net.cpp:200] ip1 needs backward computation.
I0428 19:53:45.352764 27836 net.cpp:200] pool1 needs backward computation.
I0428 19:53:45.352767 27836 net.cpp:200] conv1 needs backward computation.
I0428 19:53:45.352773 27836 net.cpp:200] pool0 needs backward computation.
I0428 19:53:45.352777 27836 net.cpp:200] conv0 needs backward computation.
I0428 19:53:45.352780 27836 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:45.352784 27836 net.cpp:202] mnist does not need backward computation.
I0428 19:53:45.352787 27836 net.cpp:244] This network produces output accuracy
I0428 19:53:45.352792 27836 net.cpp:244] This network produces output loss
I0428 19:53:45.352804 27836 net.cpp:257] Network initialization done.
I0428 19:53:45.352857 27836 solver.cpp:56] Solver scaffolding done.
I0428 19:53:45.353255 27836 caffe.cpp:248] Starting Optimization
I0428 19:53:45.353261 27836 solver.cpp:273] Solving LeNet
I0428 19:53:45.353265 27836 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:45.354169 27836 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:45.358683 27836 blocking_queue.cpp:49] Waiting for data
I0428 19:53:45.431324 27868 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:45.431866 27836 solver.cpp:398]     Test net output #0: accuracy = 0.1461
I0428 19:53:45.431906 27836 solver.cpp:398]     Test net output #1: loss = 2.31025 (* 1 = 2.31025 loss)
I0428 19:53:45.435209 27836 solver.cpp:219] Iteration 0 (-1.09393e-31 iter/s, 0.0818923s/100 iters), loss = 2.32422
I0428 19:53:45.435250 27836 solver.cpp:238]     Train net output #0: loss = 2.32422 (* 1 = 2.32422 loss)
I0428 19:53:45.435261 27836 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:45.548138 27836 solver.cpp:219] Iteration 100 (885.795 iter/s, 0.112893s/100 iters), loss = 1.18527
I0428 19:53:45.548179 27836 solver.cpp:238]     Train net output #0: loss = 1.18527 (* 1 = 1.18527 loss)
I0428 19:53:45.548185 27836 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:45.655432 27836 solver.cpp:219] Iteration 200 (932.466 iter/s, 0.107243s/100 iters), loss = 0.97925
I0428 19:53:45.655457 27836 solver.cpp:238]     Train net output #0: loss = 0.97925 (* 1 = 0.97925 loss)
I0428 19:53:45.655463 27836 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:45.760432 27836 solver.cpp:219] Iteration 300 (952.716 iter/s, 0.104963s/100 iters), loss = 1.12195
I0428 19:53:45.760473 27836 solver.cpp:238]     Train net output #0: loss = 1.12195 (* 1 = 1.12195 loss)
I0428 19:53:45.760479 27836 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:45.864887 27836 solver.cpp:219] Iteration 400 (957.677 iter/s, 0.104419s/100 iters), loss = 1.08623
I0428 19:53:45.864948 27836 solver.cpp:238]     Train net output #0: loss = 1.08623 (* 1 = 1.08623 loss)
I0428 19:53:45.864955 27836 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:45.974630 27836 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:46.027999 27868 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:46.028491 27836 solver.cpp:398]     Test net output #0: accuracy = 0.6647
I0428 19:53:46.028512 27836 solver.cpp:398]     Test net output #1: loss = 0.977667 (* 1 = 0.977667 loss)
I0428 19:53:46.029620 27836 solver.cpp:219] Iteration 500 (607.312 iter/s, 0.16466s/100 iters), loss = 1.03643
I0428 19:53:46.029659 27836 solver.cpp:238]     Train net output #0: loss = 1.03643 (* 1 = 1.03643 loss)
I0428 19:53:46.029680 27836 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:46.139276 27836 solver.cpp:219] Iteration 600 (912.362 iter/s, 0.109606s/100 iters), loss = 0.852898
I0428 19:53:46.139302 27836 solver.cpp:238]     Train net output #0: loss = 0.852898 (* 1 = 0.852898 loss)
I0428 19:53:46.139309 27836 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:46.243918 27836 solver.cpp:219] Iteration 700 (955.971 iter/s, 0.104606s/100 iters), loss = 1.10651
I0428 19:53:46.243943 27836 solver.cpp:238]     Train net output #0: loss = 1.10651 (* 1 = 1.10651 loss)
I0428 19:53:46.243965 27836 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:46.347759 27836 solver.cpp:219] Iteration 800 (963.364 iter/s, 0.103803s/100 iters), loss = 1.27446
I0428 19:53:46.347798 27836 solver.cpp:238]     Train net output #0: loss = 1.27446 (* 1 = 1.27446 loss)
I0428 19:53:46.347820 27836 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:46.450412 27836 solver.cpp:219] Iteration 900 (974.642 iter/s, 0.102602s/100 iters), loss = 0.982832
I0428 19:53:46.450438 27836 solver.cpp:238]     Train net output #0: loss = 0.982832 (* 1 = 0.982832 loss)
I0428 19:53:46.450459 27836 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:46.485357 27867 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:46.553879 27836 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:46.555500 27836 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:46.556282 27836 solver.cpp:311] Iteration 1000, loss = 1.11004
I0428 19:53:46.556296 27836 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:46.631479 27868 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:46.631990 27836 solver.cpp:398]     Test net output #0: accuracy = 0.6924
I0428 19:53:46.632026 27836 solver.cpp:398]     Test net output #1: loss = 0.955527 (* 1 = 0.955527 loss)
I0428 19:53:46.632030 27836 solver.cpp:316] Optimization Done.
I0428 19:53:46.632033 27836 caffe.cpp:259] Optimization Done.
