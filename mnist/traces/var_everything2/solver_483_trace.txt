I0428 19:46:00.022043 25926 caffe.cpp:218] Using GPUs 0
I0428 19:46:00.054450 25926 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:00.566768 25926 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test483.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:00.566937 25926 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test483.prototxt
I0428 19:46:00.567358 25926 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:00.567383 25926 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:00.567493 25926 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:00.567601 25926 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:00.567737 25926 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:00.567770 25926 net.cpp:86] Creating Layer mnist
I0428 19:46:00.567781 25926 net.cpp:382] mnist -> data
I0428 19:46:00.567812 25926 net.cpp:382] mnist -> label
I0428 19:46:00.569083 25926 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:00.571547 25926 net.cpp:124] Setting up mnist
I0428 19:46:00.571566 25926 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:00.571576 25926 net.cpp:131] Top shape: 64 (64)
I0428 19:46:00.571583 25926 net.cpp:139] Memory required for data: 200960
I0428 19:46:00.571593 25926 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:00.571616 25926 net.cpp:86] Creating Layer conv0
I0428 19:46:00.571640 25926 net.cpp:408] conv0 <- data
I0428 19:46:00.571660 25926 net.cpp:382] conv0 -> conv0
I0428 19:46:00.866910 25926 net.cpp:124] Setting up conv0
I0428 19:46:00.866945 25926 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:00.866950 25926 net.cpp:139] Memory required for data: 495872
I0428 19:46:00.866967 25926 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:00.866981 25926 net.cpp:86] Creating Layer pool0
I0428 19:46:00.866986 25926 net.cpp:408] pool0 <- conv0
I0428 19:46:00.866993 25926 net.cpp:382] pool0 -> pool0
I0428 19:46:00.867051 25926 net.cpp:124] Setting up pool0
I0428 19:46:00.867061 25926 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:00.867065 25926 net.cpp:139] Memory required for data: 569600
I0428 19:46:00.867069 25926 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:00.867082 25926 net.cpp:86] Creating Layer conv1
I0428 19:46:00.867086 25926 net.cpp:408] conv1 <- pool0
I0428 19:46:00.867092 25926 net.cpp:382] conv1 -> conv1
I0428 19:46:00.870244 25926 net.cpp:124] Setting up conv1
I0428 19:46:00.870262 25926 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:00.870267 25926 net.cpp:139] Memory required for data: 2208000
I0428 19:46:00.870277 25926 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:00.870287 25926 net.cpp:86] Creating Layer pool1
I0428 19:46:00.870291 25926 net.cpp:408] pool1 <- conv1
I0428 19:46:00.870297 25926 net.cpp:382] pool1 -> pool1
I0428 19:46:00.870342 25926 net.cpp:124] Setting up pool1
I0428 19:46:00.870352 25926 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:00.870355 25926 net.cpp:139] Memory required for data: 2617600
I0428 19:46:00.870359 25926 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:00.870373 25926 net.cpp:86] Creating Layer ip1
I0428 19:46:00.870378 25926 net.cpp:408] ip1 <- pool1
I0428 19:46:00.870383 25926 net.cpp:382] ip1 -> ip1
I0428 19:46:00.870604 25926 net.cpp:124] Setting up ip1
I0428 19:46:00.870615 25926 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:00.870618 25926 net.cpp:139] Memory required for data: 2620160
I0428 19:46:00.870626 25926 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:00.870633 25926 net.cpp:86] Creating Layer relu1
I0428 19:46:00.870637 25926 net.cpp:408] relu1 <- ip1
I0428 19:46:00.870642 25926 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:00.870838 25926 net.cpp:124] Setting up relu1
I0428 19:46:00.870848 25926 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:00.870852 25926 net.cpp:139] Memory required for data: 2622720
I0428 19:46:00.870857 25926 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:00.870863 25926 net.cpp:86] Creating Layer ip2
I0428 19:46:00.870867 25926 net.cpp:408] ip2 <- ip1
I0428 19:46:00.870873 25926 net.cpp:382] ip2 -> ip2
I0428 19:46:00.870987 25926 net.cpp:124] Setting up ip2
I0428 19:46:00.870995 25926 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:00.871000 25926 net.cpp:139] Memory required for data: 2629120
I0428 19:46:00.871006 25926 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:00.871012 25926 net.cpp:86] Creating Layer relu2
I0428 19:46:00.871016 25926 net.cpp:408] relu2 <- ip2
I0428 19:46:00.871021 25926 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:00.871860 25926 net.cpp:124] Setting up relu2
I0428 19:46:00.871876 25926 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:00.871881 25926 net.cpp:139] Memory required for data: 2635520
I0428 19:46:00.871886 25926 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:00.871896 25926 net.cpp:86] Creating Layer ip3
I0428 19:46:00.871899 25926 net.cpp:408] ip3 <- ip2
I0428 19:46:00.871906 25926 net.cpp:382] ip3 -> ip3
I0428 19:46:00.872022 25926 net.cpp:124] Setting up ip3
I0428 19:46:00.872031 25926 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:00.872035 25926 net.cpp:139] Memory required for data: 2638080
I0428 19:46:00.872045 25926 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:00.872051 25926 net.cpp:86] Creating Layer relu3
I0428 19:46:00.872053 25926 net.cpp:408] relu3 <- ip3
I0428 19:46:00.872058 25926 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:00.872257 25926 net.cpp:124] Setting up relu3
I0428 19:46:00.872267 25926 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:00.872272 25926 net.cpp:139] Memory required for data: 2640640
I0428 19:46:00.872275 25926 layer_factory.hpp:77] Creating layer loss
I0428 19:46:00.872283 25926 net.cpp:86] Creating Layer loss
I0428 19:46:00.872287 25926 net.cpp:408] loss <- ip3
I0428 19:46:00.872292 25926 net.cpp:408] loss <- label
I0428 19:46:00.872298 25926 net.cpp:382] loss -> loss
I0428 19:46:00.872318 25926 layer_factory.hpp:77] Creating layer loss
I0428 19:46:00.872581 25926 net.cpp:124] Setting up loss
I0428 19:46:00.872591 25926 net.cpp:131] Top shape: (1)
I0428 19:46:00.872596 25926 net.cpp:134]     with loss weight 1
I0428 19:46:00.872618 25926 net.cpp:139] Memory required for data: 2640644
I0428 19:46:00.872623 25926 net.cpp:200] loss needs backward computation.
I0428 19:46:00.872627 25926 net.cpp:200] relu3 needs backward computation.
I0428 19:46:00.872632 25926 net.cpp:200] ip3 needs backward computation.
I0428 19:46:00.872635 25926 net.cpp:200] relu2 needs backward computation.
I0428 19:46:00.872638 25926 net.cpp:200] ip2 needs backward computation.
I0428 19:46:00.872642 25926 net.cpp:200] relu1 needs backward computation.
I0428 19:46:00.872645 25926 net.cpp:200] ip1 needs backward computation.
I0428 19:46:00.872649 25926 net.cpp:200] pool1 needs backward computation.
I0428 19:46:00.872653 25926 net.cpp:200] conv1 needs backward computation.
I0428 19:46:00.872656 25926 net.cpp:200] pool0 needs backward computation.
I0428 19:46:00.872660 25926 net.cpp:200] conv0 needs backward computation.
I0428 19:46:00.872664 25926 net.cpp:202] mnist does not need backward computation.
I0428 19:46:00.872668 25926 net.cpp:244] This network produces output loss
I0428 19:46:00.872678 25926 net.cpp:257] Network initialization done.
I0428 19:46:00.873069 25926 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test483.prototxt
I0428 19:46:00.873101 25926 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:00.873210 25926 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:00.873308 25926 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:00.873361 25926 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:00.873375 25926 net.cpp:86] Creating Layer mnist
I0428 19:46:00.873380 25926 net.cpp:382] mnist -> data
I0428 19:46:00.873390 25926 net.cpp:382] mnist -> label
I0428 19:46:00.873492 25926 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:00.875679 25926 net.cpp:124] Setting up mnist
I0428 19:46:00.875695 25926 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:00.875701 25926 net.cpp:131] Top shape: 100 (100)
I0428 19:46:00.875705 25926 net.cpp:139] Memory required for data: 314000
I0428 19:46:00.875710 25926 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:00.875736 25926 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:00.875742 25926 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:00.875748 25926 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:00.875756 25926 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:00.875808 25926 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:00.875816 25926 net.cpp:131] Top shape: 100 (100)
I0428 19:46:00.875820 25926 net.cpp:131] Top shape: 100 (100)
I0428 19:46:00.875824 25926 net.cpp:139] Memory required for data: 314800
I0428 19:46:00.875828 25926 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:00.875838 25926 net.cpp:86] Creating Layer conv0
I0428 19:46:00.875841 25926 net.cpp:408] conv0 <- data
I0428 19:46:00.875847 25926 net.cpp:382] conv0 -> conv0
I0428 19:46:00.877774 25926 net.cpp:124] Setting up conv0
I0428 19:46:00.877791 25926 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:00.877795 25926 net.cpp:139] Memory required for data: 775600
I0428 19:46:00.877806 25926 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:00.877815 25926 net.cpp:86] Creating Layer pool0
I0428 19:46:00.877818 25926 net.cpp:408] pool0 <- conv0
I0428 19:46:00.877825 25926 net.cpp:382] pool0 -> pool0
I0428 19:46:00.877866 25926 net.cpp:124] Setting up pool0
I0428 19:46:00.877874 25926 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:00.877878 25926 net.cpp:139] Memory required for data: 890800
I0428 19:46:00.877882 25926 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:00.877892 25926 net.cpp:86] Creating Layer conv1
I0428 19:46:00.877895 25926 net.cpp:408] conv1 <- pool0
I0428 19:46:00.877902 25926 net.cpp:382] conv1 -> conv1
I0428 19:46:00.879606 25926 net.cpp:124] Setting up conv1
I0428 19:46:00.879624 25926 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:00.879629 25926 net.cpp:139] Memory required for data: 3450800
I0428 19:46:00.879642 25926 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:00.879648 25926 net.cpp:86] Creating Layer pool1
I0428 19:46:00.879652 25926 net.cpp:408] pool1 <- conv1
I0428 19:46:00.879658 25926 net.cpp:382] pool1 -> pool1
I0428 19:46:00.879700 25926 net.cpp:124] Setting up pool1
I0428 19:46:00.879709 25926 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:00.879714 25926 net.cpp:139] Memory required for data: 4090800
I0428 19:46:00.879717 25926 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:00.879725 25926 net.cpp:86] Creating Layer ip1
I0428 19:46:00.879729 25926 net.cpp:408] ip1 <- pool1
I0428 19:46:00.879734 25926 net.cpp:382] ip1 -> ip1
I0428 19:46:00.879951 25926 net.cpp:124] Setting up ip1
I0428 19:46:00.879962 25926 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:00.879983 25926 net.cpp:139] Memory required for data: 4094800
I0428 19:46:00.879994 25926 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:00.879999 25926 net.cpp:86] Creating Layer relu1
I0428 19:46:00.880003 25926 net.cpp:408] relu1 <- ip1
I0428 19:46:00.880009 25926 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:00.880190 25926 net.cpp:124] Setting up relu1
I0428 19:46:00.880200 25926 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:00.880204 25926 net.cpp:139] Memory required for data: 4098800
I0428 19:46:00.880208 25926 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:00.880216 25926 net.cpp:86] Creating Layer ip2
I0428 19:46:00.880220 25926 net.cpp:408] ip2 <- ip1
I0428 19:46:00.880228 25926 net.cpp:382] ip2 -> ip2
I0428 19:46:00.880363 25926 net.cpp:124] Setting up ip2
I0428 19:46:00.880373 25926 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:00.880375 25926 net.cpp:139] Memory required for data: 4108800
I0428 19:46:00.880383 25926 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:00.880388 25926 net.cpp:86] Creating Layer relu2
I0428 19:46:00.880393 25926 net.cpp:408] relu2 <- ip2
I0428 19:46:00.880398 25926 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:00.880661 25926 net.cpp:124] Setting up relu2
I0428 19:46:00.880672 25926 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:00.880676 25926 net.cpp:139] Memory required for data: 4118800
I0428 19:46:00.880681 25926 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:00.880687 25926 net.cpp:86] Creating Layer ip3
I0428 19:46:00.880692 25926 net.cpp:408] ip3 <- ip2
I0428 19:46:00.880697 25926 net.cpp:382] ip3 -> ip3
I0428 19:46:00.880817 25926 net.cpp:124] Setting up ip3
I0428 19:46:00.880826 25926 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:00.880831 25926 net.cpp:139] Memory required for data: 4122800
I0428 19:46:00.880841 25926 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:00.880846 25926 net.cpp:86] Creating Layer relu3
I0428 19:46:00.880849 25926 net.cpp:408] relu3 <- ip3
I0428 19:46:00.880856 25926 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:00.881784 25926 net.cpp:124] Setting up relu3
I0428 19:46:00.881798 25926 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:00.881803 25926 net.cpp:139] Memory required for data: 4126800
I0428 19:46:00.881806 25926 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:00.881814 25926 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:00.881817 25926 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:00.881824 25926 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:00.881831 25926 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:00.881873 25926 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:00.881882 25926 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:00.881886 25926 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:00.881891 25926 net.cpp:139] Memory required for data: 4134800
I0428 19:46:00.881894 25926 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:00.881901 25926 net.cpp:86] Creating Layer accuracy
I0428 19:46:00.881906 25926 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:00.881911 25926 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:00.881916 25926 net.cpp:382] accuracy -> accuracy
I0428 19:46:00.881923 25926 net.cpp:124] Setting up accuracy
I0428 19:46:00.881928 25926 net.cpp:131] Top shape: (1)
I0428 19:46:00.881932 25926 net.cpp:139] Memory required for data: 4134804
I0428 19:46:00.881935 25926 layer_factory.hpp:77] Creating layer loss
I0428 19:46:00.881942 25926 net.cpp:86] Creating Layer loss
I0428 19:46:00.881945 25926 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:00.881949 25926 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:00.881954 25926 net.cpp:382] loss -> loss
I0428 19:46:00.881961 25926 layer_factory.hpp:77] Creating layer loss
I0428 19:46:00.882230 25926 net.cpp:124] Setting up loss
I0428 19:46:00.882242 25926 net.cpp:131] Top shape: (1)
I0428 19:46:00.882246 25926 net.cpp:134]     with loss weight 1
I0428 19:46:00.882253 25926 net.cpp:139] Memory required for data: 4134808
I0428 19:46:00.882271 25926 net.cpp:200] loss needs backward computation.
I0428 19:46:00.882274 25926 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:00.882280 25926 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:00.882284 25926 net.cpp:200] relu3 needs backward computation.
I0428 19:46:00.882288 25926 net.cpp:200] ip3 needs backward computation.
I0428 19:46:00.882292 25926 net.cpp:200] relu2 needs backward computation.
I0428 19:46:00.882295 25926 net.cpp:200] ip2 needs backward computation.
I0428 19:46:00.882299 25926 net.cpp:200] relu1 needs backward computation.
I0428 19:46:00.882303 25926 net.cpp:200] ip1 needs backward computation.
I0428 19:46:00.882306 25926 net.cpp:200] pool1 needs backward computation.
I0428 19:46:00.882311 25926 net.cpp:200] conv1 needs backward computation.
I0428 19:46:00.882315 25926 net.cpp:200] pool0 needs backward computation.
I0428 19:46:00.882320 25926 net.cpp:200] conv0 needs backward computation.
I0428 19:46:00.882324 25926 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:00.882329 25926 net.cpp:202] mnist does not need backward computation.
I0428 19:46:00.882333 25926 net.cpp:244] This network produces output accuracy
I0428 19:46:00.882338 25926 net.cpp:244] This network produces output loss
I0428 19:46:00.882349 25926 net.cpp:257] Network initialization done.
I0428 19:46:00.882400 25926 solver.cpp:56] Solver scaffolding done.
I0428 19:46:00.882815 25926 caffe.cpp:248] Starting Optimization
I0428 19:46:00.882822 25926 solver.cpp:273] Solving LeNet
I0428 19:46:00.882827 25926 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:00.883100 25926 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:00.888669 25926 blocking_queue.cpp:49] Waiting for data
I0428 19:46:00.960866 25933 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:00.961813 25926 solver.cpp:398]     Test net output #0: accuracy = 0.103
I0428 19:46:00.961848 25926 solver.cpp:398]     Test net output #1: loss = 2.30875 (* 1 = 2.30875 loss)
I0428 19:46:00.966964 25926 solver.cpp:219] Iteration 0 (-6.30306e-31 iter/s, 0.0841021s/100 iters), loss = 2.30673
I0428 19:46:00.967005 25926 solver.cpp:238]     Train net output #0: loss = 2.30673 (* 1 = 2.30673 loss)
I0428 19:46:00.967025 25926 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:01.144361 25926 solver.cpp:219] Iteration 100 (563.878 iter/s, 0.177343s/100 iters), loss = 0.322676
I0428 19:46:01.144392 25926 solver.cpp:238]     Train net output #0: loss = 0.322676 (* 1 = 0.322676 loss)
I0428 19:46:01.144400 25926 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:01.316015 25926 solver.cpp:219] Iteration 200 (582.734 iter/s, 0.171605s/100 iters), loss = 0.199982
I0428 19:46:01.316051 25926 solver.cpp:238]     Train net output #0: loss = 0.199982 (* 1 = 0.199982 loss)
I0428 19:46:01.316058 25926 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:01.478952 25926 solver.cpp:219] Iteration 300 (613.92 iter/s, 0.162888s/100 iters), loss = 0.199131
I0428 19:46:01.478984 25926 solver.cpp:238]     Train net output #0: loss = 0.199131 (* 1 = 0.199131 loss)
I0428 19:46:01.478993 25926 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:01.634850 25926 solver.cpp:219] Iteration 400 (641.64 iter/s, 0.155851s/100 iters), loss = 0.150898
I0428 19:46:01.634884 25926 solver.cpp:238]     Train net output #0: loss = 0.150898 (* 1 = 0.150898 loss)
I0428 19:46:01.634893 25926 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:01.787112 25926 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:01.843952 25933 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:01.844543 25926 solver.cpp:398]     Test net output #0: accuracy = 0.9472
I0428 19:46:01.844563 25926 solver.cpp:398]     Test net output #1: loss = 0.16534 (* 1 = 0.16534 loss)
I0428 19:46:01.846029 25926 solver.cpp:219] Iteration 500 (473.645 iter/s, 0.211128s/100 iters), loss = 0.134987
I0428 19:46:01.846071 25926 solver.cpp:238]     Train net output #0: loss = 0.134987 (* 1 = 0.134987 loss)
I0428 19:46:01.846079 25926 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:01.994060 25926 solver.cpp:219] Iteration 600 (675.767 iter/s, 0.14798s/100 iters), loss = 0.149506
I0428 19:46:01.994099 25926 solver.cpp:238]     Train net output #0: loss = 0.149505 (* 1 = 0.149505 loss)
I0428 19:46:01.994105 25926 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:02.138551 25926 solver.cpp:219] Iteration 700 (692.259 iter/s, 0.144455s/100 iters), loss = 0.145793
I0428 19:46:02.138592 25926 solver.cpp:238]     Train net output #0: loss = 0.145793 (* 1 = 0.145793 loss)
I0428 19:46:02.138608 25926 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:02.280797 25926 solver.cpp:219] Iteration 800 (703.185 iter/s, 0.14221s/100 iters), loss = 0.247271
I0428 19:46:02.280840 25926 solver.cpp:238]     Train net output #0: loss = 0.247271 (* 1 = 0.247271 loss)
I0428 19:46:02.280846 25926 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:02.426743 25926 solver.cpp:219] Iteration 900 (685.374 iter/s, 0.145906s/100 iters), loss = 0.151735
I0428 19:46:02.426782 25926 solver.cpp:238]     Train net output #0: loss = 0.151734 (* 1 = 0.151734 loss)
I0428 19:46:02.426789 25926 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:02.475857 25932 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:02.572289 25926 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:02.573689 25926 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:02.574386 25926 solver.cpp:311] Iteration 1000, loss = 0.129942
I0428 19:46:02.574401 25926 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:02.628957 25933 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:02.629580 25926 solver.cpp:398]     Test net output #0: accuracy = 0.97
I0428 19:46:02.629613 25926 solver.cpp:398]     Test net output #1: loss = 0.100116 (* 1 = 0.100116 loss)
I0428 19:46:02.629634 25926 solver.cpp:316] Optimization Done.
I0428 19:46:02.629637 25926 caffe.cpp:259] Optimization Done.
