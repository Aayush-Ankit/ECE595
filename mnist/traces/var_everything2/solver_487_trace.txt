I0428 19:46:11.928853 25958 caffe.cpp:218] Using GPUs 0
I0428 19:46:11.968128 25958 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:12.487707 25958 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test487.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:12.487884 25958 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test487.prototxt
I0428 19:46:12.488307 25958 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:12.488333 25958 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:12.488448 25958 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:12.488564 25958 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:12.488696 25958 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:12.488730 25958 net.cpp:86] Creating Layer mnist
I0428 19:46:12.488746 25958 net.cpp:382] mnist -> data
I0428 19:46:12.488776 25958 net.cpp:382] mnist -> label
I0428 19:46:12.490053 25958 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:12.492519 25958 net.cpp:124] Setting up mnist
I0428 19:46:12.492540 25958 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:12.492550 25958 net.cpp:131] Top shape: 64 (64)
I0428 19:46:12.492557 25958 net.cpp:139] Memory required for data: 200960
I0428 19:46:12.492566 25958 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:12.492591 25958 net.cpp:86] Creating Layer conv0
I0428 19:46:12.492621 25958 net.cpp:408] conv0 <- data
I0428 19:46:12.492642 25958 net.cpp:382] conv0 -> conv0
I0428 19:46:12.812754 25958 net.cpp:124] Setting up conv0
I0428 19:46:12.812786 25958 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:12.812793 25958 net.cpp:139] Memory required for data: 495872
I0428 19:46:12.812815 25958 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:12.812830 25958 net.cpp:86] Creating Layer pool0
I0428 19:46:12.812835 25958 net.cpp:408] pool0 <- conv0
I0428 19:46:12.812842 25958 net.cpp:382] pool0 -> pool0
I0428 19:46:12.812906 25958 net.cpp:124] Setting up pool0
I0428 19:46:12.812916 25958 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:12.812919 25958 net.cpp:139] Memory required for data: 569600
I0428 19:46:12.812923 25958 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:12.812937 25958 net.cpp:86] Creating Layer conv1
I0428 19:46:12.812940 25958 net.cpp:408] conv1 <- pool0
I0428 19:46:12.812947 25958 net.cpp:382] conv1 -> conv1
I0428 19:46:12.816069 25958 net.cpp:124] Setting up conv1
I0428 19:46:12.816087 25958 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:12.816092 25958 net.cpp:139] Memory required for data: 2208000
I0428 19:46:12.816102 25958 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:12.816112 25958 net.cpp:86] Creating Layer pool1
I0428 19:46:12.816117 25958 net.cpp:408] pool1 <- conv1
I0428 19:46:12.816123 25958 net.cpp:382] pool1 -> pool1
I0428 19:46:12.816165 25958 net.cpp:124] Setting up pool1
I0428 19:46:12.816174 25958 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:12.816179 25958 net.cpp:139] Memory required for data: 2617600
I0428 19:46:12.816181 25958 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:12.816190 25958 net.cpp:86] Creating Layer ip1
I0428 19:46:12.816193 25958 net.cpp:408] ip1 <- pool1
I0428 19:46:12.816200 25958 net.cpp:382] ip1 -> ip1
I0428 19:46:12.816414 25958 net.cpp:124] Setting up ip1
I0428 19:46:12.816422 25958 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:12.816426 25958 net.cpp:139] Memory required for data: 2620160
I0428 19:46:12.816435 25958 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:12.816442 25958 net.cpp:86] Creating Layer relu1
I0428 19:46:12.816445 25958 net.cpp:408] relu1 <- ip1
I0428 19:46:12.816452 25958 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:12.816644 25958 net.cpp:124] Setting up relu1
I0428 19:46:12.816654 25958 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:12.816658 25958 net.cpp:139] Memory required for data: 2622720
I0428 19:46:12.816663 25958 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:12.816670 25958 net.cpp:86] Creating Layer ip2
I0428 19:46:12.816673 25958 net.cpp:408] ip2 <- ip1
I0428 19:46:12.816679 25958 net.cpp:382] ip2 -> ip2
I0428 19:46:12.816797 25958 net.cpp:124] Setting up ip2
I0428 19:46:12.816804 25958 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:12.816808 25958 net.cpp:139] Memory required for data: 2635520
I0428 19:46:12.816823 25958 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:12.816830 25958 net.cpp:86] Creating Layer relu2
I0428 19:46:12.816834 25958 net.cpp:408] relu2 <- ip2
I0428 19:46:12.816839 25958 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:12.817679 25958 net.cpp:124] Setting up relu2
I0428 19:46:12.817694 25958 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:12.817698 25958 net.cpp:139] Memory required for data: 2648320
I0428 19:46:12.817703 25958 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:12.817713 25958 net.cpp:86] Creating Layer ip3
I0428 19:46:12.817716 25958 net.cpp:408] ip3 <- ip2
I0428 19:46:12.817723 25958 net.cpp:382] ip3 -> ip3
I0428 19:46:12.817842 25958 net.cpp:124] Setting up ip3
I0428 19:46:12.817852 25958 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:12.817855 25958 net.cpp:139] Memory required for data: 2650880
I0428 19:46:12.817865 25958 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:12.817872 25958 net.cpp:86] Creating Layer relu3
I0428 19:46:12.817875 25958 net.cpp:408] relu3 <- ip3
I0428 19:46:12.817880 25958 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:12.818078 25958 net.cpp:124] Setting up relu3
I0428 19:46:12.818087 25958 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:12.818090 25958 net.cpp:139] Memory required for data: 2653440
I0428 19:46:12.818094 25958 layer_factory.hpp:77] Creating layer loss
I0428 19:46:12.818101 25958 net.cpp:86] Creating Layer loss
I0428 19:46:12.818105 25958 net.cpp:408] loss <- ip3
I0428 19:46:12.818110 25958 net.cpp:408] loss <- label
I0428 19:46:12.818116 25958 net.cpp:382] loss -> loss
I0428 19:46:12.818137 25958 layer_factory.hpp:77] Creating layer loss
I0428 19:46:12.818398 25958 net.cpp:124] Setting up loss
I0428 19:46:12.818409 25958 net.cpp:131] Top shape: (1)
I0428 19:46:12.818413 25958 net.cpp:134]     with loss weight 1
I0428 19:46:12.818435 25958 net.cpp:139] Memory required for data: 2653444
I0428 19:46:12.818440 25958 net.cpp:200] loss needs backward computation.
I0428 19:46:12.818444 25958 net.cpp:200] relu3 needs backward computation.
I0428 19:46:12.818449 25958 net.cpp:200] ip3 needs backward computation.
I0428 19:46:12.818451 25958 net.cpp:200] relu2 needs backward computation.
I0428 19:46:12.818455 25958 net.cpp:200] ip2 needs backward computation.
I0428 19:46:12.818459 25958 net.cpp:200] relu1 needs backward computation.
I0428 19:46:12.818461 25958 net.cpp:200] ip1 needs backward computation.
I0428 19:46:12.818465 25958 net.cpp:200] pool1 needs backward computation.
I0428 19:46:12.818470 25958 net.cpp:200] conv1 needs backward computation.
I0428 19:46:12.818473 25958 net.cpp:200] pool0 needs backward computation.
I0428 19:46:12.818476 25958 net.cpp:200] conv0 needs backward computation.
I0428 19:46:12.818480 25958 net.cpp:202] mnist does not need backward computation.
I0428 19:46:12.818485 25958 net.cpp:244] This network produces output loss
I0428 19:46:12.818495 25958 net.cpp:257] Network initialization done.
I0428 19:46:12.818878 25958 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test487.prototxt
I0428 19:46:12.818910 25958 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:12.819020 25958 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:12.819113 25958 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:12.819166 25958 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:12.819181 25958 net.cpp:86] Creating Layer mnist
I0428 19:46:12.819187 25958 net.cpp:382] mnist -> data
I0428 19:46:12.819196 25958 net.cpp:382] mnist -> label
I0428 19:46:12.819296 25958 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:12.821497 25958 net.cpp:124] Setting up mnist
I0428 19:46:12.821514 25958 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:12.821521 25958 net.cpp:131] Top shape: 100 (100)
I0428 19:46:12.821524 25958 net.cpp:139] Memory required for data: 314000
I0428 19:46:12.821529 25958 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:12.821554 25958 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:12.821558 25958 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:12.821564 25958 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:12.821573 25958 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:12.821624 25958 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:12.821631 25958 net.cpp:131] Top shape: 100 (100)
I0428 19:46:12.821636 25958 net.cpp:131] Top shape: 100 (100)
I0428 19:46:12.821640 25958 net.cpp:139] Memory required for data: 314800
I0428 19:46:12.821645 25958 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:12.821653 25958 net.cpp:86] Creating Layer conv0
I0428 19:46:12.821657 25958 net.cpp:408] conv0 <- data
I0428 19:46:12.821663 25958 net.cpp:382] conv0 -> conv0
I0428 19:46:12.823583 25958 net.cpp:124] Setting up conv0
I0428 19:46:12.823601 25958 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:12.823606 25958 net.cpp:139] Memory required for data: 775600
I0428 19:46:12.823616 25958 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:12.823624 25958 net.cpp:86] Creating Layer pool0
I0428 19:46:12.823629 25958 net.cpp:408] pool0 <- conv0
I0428 19:46:12.823634 25958 net.cpp:382] pool0 -> pool0
I0428 19:46:12.823678 25958 net.cpp:124] Setting up pool0
I0428 19:46:12.823685 25958 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:12.823689 25958 net.cpp:139] Memory required for data: 890800
I0428 19:46:12.823693 25958 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:12.823703 25958 net.cpp:86] Creating Layer conv1
I0428 19:46:12.823706 25958 net.cpp:408] conv1 <- pool0
I0428 19:46:12.823712 25958 net.cpp:382] conv1 -> conv1
I0428 19:46:12.825462 25958 net.cpp:124] Setting up conv1
I0428 19:46:12.825479 25958 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:12.825484 25958 net.cpp:139] Memory required for data: 3450800
I0428 19:46:12.825495 25958 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:12.825501 25958 net.cpp:86] Creating Layer pool1
I0428 19:46:12.825506 25958 net.cpp:408] pool1 <- conv1
I0428 19:46:12.825512 25958 net.cpp:382] pool1 -> pool1
I0428 19:46:12.825553 25958 net.cpp:124] Setting up pool1
I0428 19:46:12.825562 25958 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:12.825567 25958 net.cpp:139] Memory required for data: 4090800
I0428 19:46:12.825569 25958 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:12.825577 25958 net.cpp:86] Creating Layer ip1
I0428 19:46:12.825582 25958 net.cpp:408] ip1 <- pool1
I0428 19:46:12.825587 25958 net.cpp:382] ip1 -> ip1
I0428 19:46:12.825806 25958 net.cpp:124] Setting up ip1
I0428 19:46:12.825815 25958 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:12.825836 25958 net.cpp:139] Memory required for data: 4094800
I0428 19:46:12.825845 25958 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:12.825851 25958 net.cpp:86] Creating Layer relu1
I0428 19:46:12.825855 25958 net.cpp:408] relu1 <- ip1
I0428 19:46:12.825862 25958 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:12.826050 25958 net.cpp:124] Setting up relu1
I0428 19:46:12.826061 25958 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:12.826064 25958 net.cpp:139] Memory required for data: 4098800
I0428 19:46:12.826068 25958 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:12.826077 25958 net.cpp:86] Creating Layer ip2
I0428 19:46:12.826081 25958 net.cpp:408] ip2 <- ip1
I0428 19:46:12.826087 25958 net.cpp:382] ip2 -> ip2
I0428 19:46:12.826216 25958 net.cpp:124] Setting up ip2
I0428 19:46:12.826225 25958 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:12.826228 25958 net.cpp:139] Memory required for data: 4118800
I0428 19:46:12.826234 25958 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:12.826241 25958 net.cpp:86] Creating Layer relu2
I0428 19:46:12.826244 25958 net.cpp:408] relu2 <- ip2
I0428 19:46:12.826248 25958 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:12.826511 25958 net.cpp:124] Setting up relu2
I0428 19:46:12.826522 25958 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:12.826525 25958 net.cpp:139] Memory required for data: 4138800
I0428 19:46:12.826529 25958 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:12.826536 25958 net.cpp:86] Creating Layer ip3
I0428 19:46:12.826540 25958 net.cpp:408] ip3 <- ip2
I0428 19:46:12.826546 25958 net.cpp:382] ip3 -> ip3
I0428 19:46:12.826668 25958 net.cpp:124] Setting up ip3
I0428 19:46:12.826678 25958 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:12.826681 25958 net.cpp:139] Memory required for data: 4142800
I0428 19:46:12.826690 25958 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:12.826695 25958 net.cpp:86] Creating Layer relu3
I0428 19:46:12.826700 25958 net.cpp:408] relu3 <- ip3
I0428 19:46:12.826705 25958 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:12.827621 25958 net.cpp:124] Setting up relu3
I0428 19:46:12.827638 25958 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:12.827642 25958 net.cpp:139] Memory required for data: 4146800
I0428 19:46:12.827647 25958 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:12.827653 25958 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:12.827657 25958 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:12.827663 25958 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:12.827672 25958 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:12.827725 25958 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:12.827733 25958 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:12.827739 25958 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:12.827742 25958 net.cpp:139] Memory required for data: 4154800
I0428 19:46:12.827745 25958 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:12.827752 25958 net.cpp:86] Creating Layer accuracy
I0428 19:46:12.827756 25958 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:12.827761 25958 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:12.827767 25958 net.cpp:382] accuracy -> accuracy
I0428 19:46:12.827776 25958 net.cpp:124] Setting up accuracy
I0428 19:46:12.827781 25958 net.cpp:131] Top shape: (1)
I0428 19:46:12.827785 25958 net.cpp:139] Memory required for data: 4154804
I0428 19:46:12.827788 25958 layer_factory.hpp:77] Creating layer loss
I0428 19:46:12.827793 25958 net.cpp:86] Creating Layer loss
I0428 19:46:12.827797 25958 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:12.827801 25958 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:12.827806 25958 net.cpp:382] loss -> loss
I0428 19:46:12.827814 25958 layer_factory.hpp:77] Creating layer loss
I0428 19:46:12.828080 25958 net.cpp:124] Setting up loss
I0428 19:46:12.828095 25958 net.cpp:131] Top shape: (1)
I0428 19:46:12.828099 25958 net.cpp:134]     with loss weight 1
I0428 19:46:12.828107 25958 net.cpp:139] Memory required for data: 4154808
I0428 19:46:12.828122 25958 net.cpp:200] loss needs backward computation.
I0428 19:46:12.828127 25958 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:12.828133 25958 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:12.828136 25958 net.cpp:200] relu3 needs backward computation.
I0428 19:46:12.828140 25958 net.cpp:200] ip3 needs backward computation.
I0428 19:46:12.828145 25958 net.cpp:200] relu2 needs backward computation.
I0428 19:46:12.828148 25958 net.cpp:200] ip2 needs backward computation.
I0428 19:46:12.828152 25958 net.cpp:200] relu1 needs backward computation.
I0428 19:46:12.828155 25958 net.cpp:200] ip1 needs backward computation.
I0428 19:46:12.828160 25958 net.cpp:200] pool1 needs backward computation.
I0428 19:46:12.828163 25958 net.cpp:200] conv1 needs backward computation.
I0428 19:46:12.828167 25958 net.cpp:200] pool0 needs backward computation.
I0428 19:46:12.828172 25958 net.cpp:200] conv0 needs backward computation.
I0428 19:46:12.828176 25958 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:12.828182 25958 net.cpp:202] mnist does not need backward computation.
I0428 19:46:12.828186 25958 net.cpp:244] This network produces output accuracy
I0428 19:46:12.828189 25958 net.cpp:244] This network produces output loss
I0428 19:46:12.828202 25958 net.cpp:257] Network initialization done.
I0428 19:46:12.828251 25958 solver.cpp:56] Solver scaffolding done.
I0428 19:46:12.828660 25958 caffe.cpp:248] Starting Optimization
I0428 19:46:12.828667 25958 solver.cpp:273] Solving LeNet
I0428 19:46:12.828670 25958 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:12.829648 25958 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:12.834581 25958 blocking_queue.cpp:49] Waiting for data
I0428 19:46:12.905596 25965 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:12.906229 25958 solver.cpp:398]     Test net output #0: accuracy = 0.127
I0428 19:46:12.906253 25958 solver.cpp:398]     Test net output #1: loss = 2.30337 (* 1 = 2.30337 loss)
I0428 19:46:12.910189 25958 solver.cpp:219] Iteration 0 (-1.08773e-30 iter/s, 0.0814869s/100 iters), loss = 2.30498
I0428 19:46:12.910220 25958 solver.cpp:238]     Train net output #0: loss = 2.30498 (* 1 = 2.30498 loss)
I0428 19:46:12.910234 25958 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:13.064481 25958 solver.cpp:219] Iteration 100 (648.307 iter/s, 0.154248s/100 iters), loss = 1.02033
I0428 19:46:13.064517 25958 solver.cpp:238]     Train net output #0: loss = 1.02033 (* 1 = 1.02033 loss)
I0428 19:46:13.064524 25958 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:13.218494 25958 solver.cpp:219] Iteration 200 (649.5 iter/s, 0.153965s/100 iters), loss = 0.604556
I0428 19:46:13.218529 25958 solver.cpp:238]     Train net output #0: loss = 0.604556 (* 1 = 0.604556 loss)
I0428 19:46:13.218538 25958 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:13.378872 25958 solver.cpp:219] Iteration 300 (623.723 iter/s, 0.160328s/100 iters), loss = 0.695714
I0428 19:46:13.378911 25958 solver.cpp:238]     Train net output #0: loss = 0.695714 (* 1 = 0.695714 loss)
I0428 19:46:13.378921 25958 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:13.536581 25958 solver.cpp:219] Iteration 400 (634.284 iter/s, 0.157658s/100 iters), loss = 0.506736
I0428 19:46:13.536612 25958 solver.cpp:238]     Train net output #0: loss = 0.506736 (* 1 = 0.506736 loss)
I0428 19:46:13.536620 25958 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:13.690232 25958 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:13.744118 25965 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:13.745976 25958 solver.cpp:398]     Test net output #0: accuracy = 0.8542
I0428 19:46:13.746001 25958 solver.cpp:398]     Test net output #1: loss = 0.405299 (* 1 = 0.405299 loss)
I0428 19:46:13.747468 25958 solver.cpp:219] Iteration 500 (474.313 iter/s, 0.210831s/100 iters), loss = 0.434628
I0428 19:46:13.747524 25958 solver.cpp:238]     Train net output #0: loss = 0.434628 (* 1 = 0.434628 loss)
I0428 19:46:13.747531 25958 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:13.900858 25958 solver.cpp:219] Iteration 600 (652.22 iter/s, 0.153322s/100 iters), loss = 0.263808
I0428 19:46:13.900889 25958 solver.cpp:238]     Train net output #0: loss = 0.263808 (* 1 = 0.263808 loss)
I0428 19:46:13.900897 25958 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:14.054337 25958 solver.cpp:219] Iteration 700 (651.749 iter/s, 0.153433s/100 iters), loss = 0.290395
I0428 19:46:14.054379 25958 solver.cpp:238]     Train net output #0: loss = 0.290395 (* 1 = 0.290395 loss)
I0428 19:46:14.054388 25958 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:14.206769 25958 solver.cpp:219] Iteration 800 (656.261 iter/s, 0.152378s/100 iters), loss = 0.69892
I0428 19:46:14.206812 25958 solver.cpp:238]     Train net output #0: loss = 0.69892 (* 1 = 0.69892 loss)
I0428 19:46:14.206820 25958 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:14.361294 25958 solver.cpp:219] Iteration 900 (647.339 iter/s, 0.154479s/100 iters), loss = 0.385057
I0428 19:46:14.361325 25958 solver.cpp:238]     Train net output #0: loss = 0.385057 (* 1 = 0.385057 loss)
I0428 19:46:14.361333 25958 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:14.413820 25964 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:14.515033 25958 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:14.516716 25958 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:14.517448 25958 solver.cpp:311] Iteration 1000, loss = 0.378508
I0428 19:46:14.517465 25958 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:14.571348 25965 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:14.573207 25958 solver.cpp:398]     Test net output #0: accuracy = 0.8691
I0428 19:46:14.573230 25958 solver.cpp:398]     Test net output #1: loss = 0.342616 (* 1 = 0.342616 loss)
I0428 19:46:14.573246 25958 solver.cpp:316] Optimization Done.
I0428 19:46:14.573249 25958 caffe.cpp:259] Optimization Done.
