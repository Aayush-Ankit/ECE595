I0428 20:22:53.143386  2145 caffe.cpp:218] Using GPUs 0
I0428 20:22:53.179136  2145 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:22:53.691828  2145 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1412.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:22:53.691959  2145 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1412.prototxt
I0428 20:22:53.692325  2145 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:22:53.692342  2145 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:22:53.692428  2145 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:22:53.692497  2145 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:53.692595  2145 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:22:53.692618  2145 net.cpp:86] Creating Layer mnist
I0428 20:22:53.692626  2145 net.cpp:382] mnist -> data
I0428 20:22:53.692649  2145 net.cpp:382] mnist -> label
I0428 20:22:53.693789  2145 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:22:53.696269  2145 net.cpp:124] Setting up mnist
I0428 20:22:53.696286  2145 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:22:53.696292  2145 net.cpp:131] Top shape: 64 (64)
I0428 20:22:53.696296  2145 net.cpp:139] Memory required for data: 200960
I0428 20:22:53.696305  2145 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:53.696319  2145 net.cpp:86] Creating Layer conv0
I0428 20:22:53.696326  2145 net.cpp:408] conv0 <- data
I0428 20:22:53.696336  2145 net.cpp:382] conv0 -> conv0
I0428 20:22:53.942522  2145 net.cpp:124] Setting up conv0
I0428 20:22:53.942562  2145 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:22:53.942566  2145 net.cpp:139] Memory required for data: 7573760
I0428 20:22:53.942598  2145 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:53.942625  2145 net.cpp:86] Creating Layer pool0
I0428 20:22:53.942631  2145 net.cpp:408] pool0 <- conv0
I0428 20:22:53.942636  2145 net.cpp:382] pool0 -> pool0
I0428 20:22:53.942682  2145 net.cpp:124] Setting up pool0
I0428 20:22:53.942689  2145 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:22:53.942692  2145 net.cpp:139] Memory required for data: 9416960
I0428 20:22:53.942697  2145 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:53.942706  2145 net.cpp:86] Creating Layer conv1
I0428 20:22:53.942709  2145 net.cpp:408] conv1 <- pool0
I0428 20:22:53.942714  2145 net.cpp:382] conv1 -> conv1
I0428 20:22:53.946310  2145 net.cpp:124] Setting up conv1
I0428 20:22:53.946339  2145 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:22:53.946342  2145 net.cpp:139] Memory required for data: 11055360
I0428 20:22:53.946352  2145 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:53.946358  2145 net.cpp:86] Creating Layer pool1
I0428 20:22:53.946362  2145 net.cpp:408] pool1 <- conv1
I0428 20:22:53.946367  2145 net.cpp:382] pool1 -> pool1
I0428 20:22:53.946415  2145 net.cpp:124] Setting up pool1
I0428 20:22:53.946421  2145 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:22:53.946424  2145 net.cpp:139] Memory required for data: 11464960
I0428 20:22:53.946427  2145 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:53.946434  2145 net.cpp:86] Creating Layer ip1
I0428 20:22:53.946437  2145 net.cpp:408] ip1 <- pool1
I0428 20:22:53.946441  2145 net.cpp:382] ip1 -> ip1
I0428 20:22:53.946790  2145 net.cpp:124] Setting up ip1
I0428 20:22:53.946797  2145 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:22:53.946815  2145 net.cpp:139] Memory required for data: 11471360
I0428 20:22:53.946823  2145 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:53.946828  2145 net.cpp:86] Creating Layer relu1
I0428 20:22:53.946833  2145 net.cpp:408] relu1 <- ip1
I0428 20:22:53.946852  2145 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:53.947018  2145 net.cpp:124] Setting up relu1
I0428 20:22:53.947027  2145 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:22:53.947031  2145 net.cpp:139] Memory required for data: 11477760
I0428 20:22:53.947033  2145 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:53.947041  2145 net.cpp:86] Creating Layer ip2
I0428 20:22:53.947043  2145 net.cpp:408] ip2 <- ip1
I0428 20:22:53.947048  2145 net.cpp:382] ip2 -> ip2
I0428 20:22:53.947139  2145 net.cpp:124] Setting up ip2
I0428 20:22:53.947145  2145 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:53.947149  2145 net.cpp:139] Memory required for data: 11480320
I0428 20:22:53.947154  2145 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:53.947160  2145 net.cpp:86] Creating Layer relu2
I0428 20:22:53.947163  2145 net.cpp:408] relu2 <- ip2
I0428 20:22:53.947167  2145 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:53.947988  2145 net.cpp:124] Setting up relu2
I0428 20:22:53.947999  2145 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:53.948019  2145 net.cpp:139] Memory required for data: 11482880
I0428 20:22:53.948021  2145 layer_factory.hpp:77] Creating layer loss
I0428 20:22:53.948027  2145 net.cpp:86] Creating Layer loss
I0428 20:22:53.948032  2145 net.cpp:408] loss <- ip2
I0428 20:22:53.948036  2145 net.cpp:408] loss <- label
I0428 20:22:53.948043  2145 net.cpp:382] loss -> loss
I0428 20:22:53.948057  2145 layer_factory.hpp:77] Creating layer loss
I0428 20:22:53.948323  2145 net.cpp:124] Setting up loss
I0428 20:22:53.948331  2145 net.cpp:131] Top shape: (1)
I0428 20:22:53.948335  2145 net.cpp:134]     with loss weight 1
I0428 20:22:53.948349  2145 net.cpp:139] Memory required for data: 11482884
I0428 20:22:53.948352  2145 net.cpp:200] loss needs backward computation.
I0428 20:22:53.948356  2145 net.cpp:200] relu2 needs backward computation.
I0428 20:22:53.948359  2145 net.cpp:200] ip2 needs backward computation.
I0428 20:22:53.948362  2145 net.cpp:200] relu1 needs backward computation.
I0428 20:22:53.948364  2145 net.cpp:200] ip1 needs backward computation.
I0428 20:22:53.948379  2145 net.cpp:200] pool1 needs backward computation.
I0428 20:22:53.948381  2145 net.cpp:200] conv1 needs backward computation.
I0428 20:22:53.948385  2145 net.cpp:200] pool0 needs backward computation.
I0428 20:22:53.948388  2145 net.cpp:200] conv0 needs backward computation.
I0428 20:22:53.948391  2145 net.cpp:202] mnist does not need backward computation.
I0428 20:22:53.948395  2145 net.cpp:244] This network produces output loss
I0428 20:22:53.948405  2145 net.cpp:257] Network initialization done.
I0428 20:22:53.948704  2145 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1412.prototxt
I0428 20:22:53.948745  2145 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:22:53.948858  2145 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:22:53.948930  2145 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:53.948978  2145 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:22:53.948992  2145 net.cpp:86] Creating Layer mnist
I0428 20:22:53.948997  2145 net.cpp:382] mnist -> data
I0428 20:22:53.949004  2145 net.cpp:382] mnist -> label
I0428 20:22:53.949108  2145 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:22:53.950484  2145 net.cpp:124] Setting up mnist
I0428 20:22:53.950512  2145 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:22:53.950517  2145 net.cpp:131] Top shape: 100 (100)
I0428 20:22:53.950520  2145 net.cpp:139] Memory required for data: 314000
I0428 20:22:53.950523  2145 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:22:53.950559  2145 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:22:53.950563  2145 net.cpp:408] label_mnist_1_split <- label
I0428 20:22:53.950574  2145 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:22:53.950582  2145 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:22:53.950697  2145 net.cpp:124] Setting up label_mnist_1_split
I0428 20:22:53.950706  2145 net.cpp:131] Top shape: 100 (100)
I0428 20:22:53.950709  2145 net.cpp:131] Top shape: 100 (100)
I0428 20:22:53.950712  2145 net.cpp:139] Memory required for data: 314800
I0428 20:22:53.950716  2145 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:53.950726  2145 net.cpp:86] Creating Layer conv0
I0428 20:22:53.950729  2145 net.cpp:408] conv0 <- data
I0428 20:22:53.950736  2145 net.cpp:382] conv0 -> conv0
I0428 20:22:53.952631  2145 net.cpp:124] Setting up conv0
I0428 20:22:53.952646  2145 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:22:53.952649  2145 net.cpp:139] Memory required for data: 11834800
I0428 20:22:53.952658  2145 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:53.952680  2145 net.cpp:86] Creating Layer pool0
I0428 20:22:53.952685  2145 net.cpp:408] pool0 <- conv0
I0428 20:22:53.952692  2145 net.cpp:382] pool0 -> pool0
I0428 20:22:53.952728  2145 net.cpp:124] Setting up pool0
I0428 20:22:53.952733  2145 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:22:53.952735  2145 net.cpp:139] Memory required for data: 14714800
I0428 20:22:53.952739  2145 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:53.952749  2145 net.cpp:86] Creating Layer conv1
I0428 20:22:53.952754  2145 net.cpp:408] conv1 <- pool0
I0428 20:22:53.952759  2145 net.cpp:382] conv1 -> conv1
I0428 20:22:53.956006  2145 net.cpp:124] Setting up conv1
I0428 20:22:53.956019  2145 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:22:53.956022  2145 net.cpp:139] Memory required for data: 17274800
I0428 20:22:53.956030  2145 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:53.956038  2145 net.cpp:86] Creating Layer pool1
I0428 20:22:53.956060  2145 net.cpp:408] pool1 <- conv1
I0428 20:22:53.956070  2145 net.cpp:382] pool1 -> pool1
I0428 20:22:53.956107  2145 net.cpp:124] Setting up pool1
I0428 20:22:53.956112  2145 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:22:53.956115  2145 net.cpp:139] Memory required for data: 17914800
I0428 20:22:53.956123  2145 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:53.956130  2145 net.cpp:86] Creating Layer ip1
I0428 20:22:53.956138  2145 net.cpp:408] ip1 <- pool1
I0428 20:22:53.956143  2145 net.cpp:382] ip1 -> ip1
I0428 20:22:53.956506  2145 net.cpp:124] Setting up ip1
I0428 20:22:53.956516  2145 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:22:53.956518  2145 net.cpp:139] Memory required for data: 17924800
I0428 20:22:53.956526  2145 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:53.956532  2145 net.cpp:86] Creating Layer relu1
I0428 20:22:53.956542  2145 net.cpp:408] relu1 <- ip1
I0428 20:22:53.956547  2145 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:53.956724  2145 net.cpp:124] Setting up relu1
I0428 20:22:53.956733  2145 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:22:53.956737  2145 net.cpp:139] Memory required for data: 17934800
I0428 20:22:53.956739  2145 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:53.956748  2145 net.cpp:86] Creating Layer ip2
I0428 20:22:53.956751  2145 net.cpp:408] ip2 <- ip1
I0428 20:22:53.956758  2145 net.cpp:382] ip2 -> ip2
I0428 20:22:53.956909  2145 net.cpp:124] Setting up ip2
I0428 20:22:53.956918  2145 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:53.956923  2145 net.cpp:139] Memory required for data: 17938800
I0428 20:22:53.956928  2145 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:53.956933  2145 net.cpp:86] Creating Layer relu2
I0428 20:22:53.956936  2145 net.cpp:408] relu2 <- ip2
I0428 20:22:53.956941  2145 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:53.957135  2145 net.cpp:124] Setting up relu2
I0428 20:22:53.957144  2145 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:53.957149  2145 net.cpp:139] Memory required for data: 17942800
I0428 20:22:53.957154  2145 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:22:53.957159  2145 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:22:53.957161  2145 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:22:53.957165  2145 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:22:53.957182  2145 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:22:53.957226  2145 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:22:53.957232  2145 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:53.957237  2145 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:53.957239  2145 net.cpp:139] Memory required for data: 17950800
I0428 20:22:53.957242  2145 layer_factory.hpp:77] Creating layer accuracy
I0428 20:22:53.957247  2145 net.cpp:86] Creating Layer accuracy
I0428 20:22:53.957252  2145 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:22:53.957255  2145 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:22:53.957262  2145 net.cpp:382] accuracy -> accuracy
I0428 20:22:53.957268  2145 net.cpp:124] Setting up accuracy
I0428 20:22:53.957273  2145 net.cpp:131] Top shape: (1)
I0428 20:22:53.957290  2145 net.cpp:139] Memory required for data: 17950804
I0428 20:22:53.957293  2145 layer_factory.hpp:77] Creating layer loss
I0428 20:22:53.957312  2145 net.cpp:86] Creating Layer loss
I0428 20:22:53.957315  2145 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:22:53.957320  2145 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:22:53.957325  2145 net.cpp:382] loss -> loss
I0428 20:22:53.957331  2145 layer_factory.hpp:77] Creating layer loss
I0428 20:22:53.957592  2145 net.cpp:124] Setting up loss
I0428 20:22:53.957602  2145 net.cpp:131] Top shape: (1)
I0428 20:22:53.957605  2145 net.cpp:134]     with loss weight 1
I0428 20:22:53.957612  2145 net.cpp:139] Memory required for data: 17950808
I0428 20:22:53.957615  2145 net.cpp:200] loss needs backward computation.
I0428 20:22:53.957618  2145 net.cpp:202] accuracy does not need backward computation.
I0428 20:22:53.957623  2145 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:22:53.957626  2145 net.cpp:200] relu2 needs backward computation.
I0428 20:22:53.957629  2145 net.cpp:200] ip2 needs backward computation.
I0428 20:22:53.957633  2145 net.cpp:200] relu1 needs backward computation.
I0428 20:22:53.957635  2145 net.cpp:200] ip1 needs backward computation.
I0428 20:22:53.957645  2145 net.cpp:200] pool1 needs backward computation.
I0428 20:22:53.957648  2145 net.cpp:200] conv1 needs backward computation.
I0428 20:22:53.957651  2145 net.cpp:200] pool0 needs backward computation.
I0428 20:22:53.957654  2145 net.cpp:200] conv0 needs backward computation.
I0428 20:22:53.957659  2145 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:22:53.957664  2145 net.cpp:202] mnist does not need backward computation.
I0428 20:22:53.957665  2145 net.cpp:244] This network produces output accuracy
I0428 20:22:53.957669  2145 net.cpp:244] This network produces output loss
I0428 20:22:53.957680  2145 net.cpp:257] Network initialization done.
I0428 20:22:53.957728  2145 solver.cpp:56] Solver scaffolding done.
I0428 20:22:53.958010  2145 caffe.cpp:248] Starting Optimization
I0428 20:22:53.958019  2145 solver.cpp:273] Solving LeNet
I0428 20:22:53.958020  2145 solver.cpp:274] Learning Rate Policy: inv
I0428 20:22:53.958204  2145 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:22:53.968181  2145 blocking_queue.cpp:49] Waiting for data
I0428 20:22:54.045709  2153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:54.046954  2145 solver.cpp:398]     Test net output #0: accuracy = 0.1395
I0428 20:22:54.046977  2145 solver.cpp:398]     Test net output #1: loss = 2.33545 (* 1 = 2.33545 loss)
I0428 20:22:54.052884  2145 solver.cpp:219] Iteration 0 (0 iter/s, 0.0948307s/100 iters), loss = 2.3726
I0428 20:22:54.052912  2145 solver.cpp:238]     Train net output #0: loss = 2.3726 (* 1 = 2.3726 loss)
I0428 20:22:54.052930  2145 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:22:54.257053  2145 solver.cpp:219] Iteration 100 (489.91 iter/s, 0.204119s/100 iters), loss = 0.369704
I0428 20:22:54.257094  2145 solver.cpp:238]     Train net output #0: loss = 0.369704 (* 1 = 0.369704 loss)
I0428 20:22:54.257105  2145 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:22:54.471918  2145 solver.cpp:219] Iteration 200 (465.526 iter/s, 0.214811s/100 iters), loss = 0.292323
I0428 20:22:54.471946  2145 solver.cpp:238]     Train net output #0: loss = 0.292323 (* 1 = 0.292323 loss)
I0428 20:22:54.471952  2145 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:22:54.687398  2145 solver.cpp:219] Iteration 300 (464.188 iter/s, 0.21543s/100 iters), loss = 0.383498
I0428 20:22:54.687453  2145 solver.cpp:238]     Train net output #0: loss = 0.383498 (* 1 = 0.383498 loss)
I0428 20:22:54.687464  2145 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:22:54.914974  2145 solver.cpp:219] Iteration 400 (439.547 iter/s, 0.227507s/100 iters), loss = 0.556861
I0428 20:22:54.915012  2145 solver.cpp:238]     Train net output #0: loss = 0.556861 (* 1 = 0.556861 loss)
I0428 20:22:54.915019  2145 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:22:55.148236  2145 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:22:55.238183  2153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:55.241255  2145 solver.cpp:398]     Test net output #0: accuracy = 0.8721
I0428 20:22:55.241281  2145 solver.cpp:398]     Test net output #1: loss = 0.337301 (* 1 = 0.337301 loss)
I0428 20:22:55.243438  2145 solver.cpp:219] Iteration 500 (304.5 iter/s, 0.328407s/100 iters), loss = 0.445268
I0428 20:22:55.243466  2145 solver.cpp:238]     Train net output #0: loss = 0.445268 (* 1 = 0.445268 loss)
I0428 20:22:55.243474  2145 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:22:55.468668  2145 solver.cpp:219] Iteration 600 (444.08 iter/s, 0.225185s/100 iters), loss = 0.176062
I0428 20:22:55.468703  2145 solver.cpp:238]     Train net output #0: loss = 0.176062 (* 1 = 0.176062 loss)
I0428 20:22:55.468711  2145 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:22:55.695958  2145 solver.cpp:219] Iteration 700 (440.065 iter/s, 0.227239s/100 iters), loss = 0.245228
I0428 20:22:55.695991  2145 solver.cpp:238]     Train net output #0: loss = 0.245228 (* 1 = 0.245228 loss)
I0428 20:22:55.695999  2145 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:22:55.924150  2145 solver.cpp:219] Iteration 800 (438.325 iter/s, 0.228141s/100 iters), loss = 0.3964
I0428 20:22:55.924185  2145 solver.cpp:238]     Train net output #0: loss = 0.3964 (* 1 = 0.3964 loss)
I0428 20:22:55.924193  2145 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:22:56.154078  2145 solver.cpp:219] Iteration 900 (435.022 iter/s, 0.229874s/100 iters), loss = 0.149572
I0428 20:22:56.154124  2145 solver.cpp:238]     Train net output #0: loss = 0.149572 (* 1 = 0.149572 loss)
I0428 20:22:56.154136  2145 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:22:56.229230  2152 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:56.361769  2145 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:22:56.366868  2145 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:22:56.369964  2145 solver.cpp:311] Iteration 1000, loss = 0.256023
I0428 20:22:56.369994  2145 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:22:56.462267  2153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:56.464438  2145 solver.cpp:398]     Test net output #0: accuracy = 0.8823
I0428 20:22:56.464467  2145 solver.cpp:398]     Test net output #1: loss = 0.294193 (* 1 = 0.294193 loss)
I0428 20:22:56.464473  2145 solver.cpp:316] Optimization Done.
I0428 20:22:56.464476  2145 caffe.cpp:259] Optimization Done.
