I0428 19:59:25.120746 29235 caffe.cpp:218] Using GPUs 0
I0428 19:59:25.157182 29235 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:25.668120 29235 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test847.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:25.668268 29235 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test847.prototxt
I0428 19:59:25.668689 29235 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:25.668710 29235 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:25.668822 29235 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:25.668902 29235 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:25.669000 29235 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:25.669023 29235 net.cpp:86] Creating Layer mnist
I0428 19:59:25.669034 29235 net.cpp:382] mnist -> data
I0428 19:59:25.669056 29235 net.cpp:382] mnist -> label
I0428 19:59:25.670142 29235 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:25.672610 29235 net.cpp:124] Setting up mnist
I0428 19:59:25.672629 29235 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:25.672636 29235 net.cpp:131] Top shape: 64 (64)
I0428 19:59:25.672639 29235 net.cpp:139] Memory required for data: 200960
I0428 19:59:25.672646 29235 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:25.672693 29235 net.cpp:86] Creating Layer conv0
I0428 19:59:25.672713 29235 net.cpp:408] conv0 <- data
I0428 19:59:25.672726 29235 net.cpp:382] conv0 -> conv0
I0428 19:59:25.946396 29235 net.cpp:124] Setting up conv0
I0428 19:59:25.946437 29235 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:25.946441 29235 net.cpp:139] Memory required for data: 1675520
I0428 19:59:25.946456 29235 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:25.946470 29235 net.cpp:86] Creating Layer pool0
I0428 19:59:25.946473 29235 net.cpp:408] pool0 <- conv0
I0428 19:59:25.946478 29235 net.cpp:382] pool0 -> pool0
I0428 19:59:25.946540 29235 net.cpp:124] Setting up pool0
I0428 19:59:25.946547 29235 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:25.946549 29235 net.cpp:139] Memory required for data: 2044160
I0428 19:59:25.946552 29235 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:25.946563 29235 net.cpp:86] Creating Layer conv1
I0428 19:59:25.946566 29235 net.cpp:408] conv1 <- pool0
I0428 19:59:25.946571 29235 net.cpp:382] conv1 -> conv1
I0428 19:59:25.949533 29235 net.cpp:124] Setting up conv1
I0428 19:59:25.949563 29235 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:25.949566 29235 net.cpp:139] Memory required for data: 2208000
I0428 19:59:25.949575 29235 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:25.949584 29235 net.cpp:86] Creating Layer pool1
I0428 19:59:25.949586 29235 net.cpp:408] pool1 <- conv1
I0428 19:59:25.949591 29235 net.cpp:382] pool1 -> pool1
I0428 19:59:25.949628 29235 net.cpp:124] Setting up pool1
I0428 19:59:25.949633 29235 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:25.949636 29235 net.cpp:139] Memory required for data: 2248960
I0428 19:59:25.949640 29235 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:25.949645 29235 net.cpp:86] Creating Layer ip1
I0428 19:59:25.949648 29235 net.cpp:408] ip1 <- pool1
I0428 19:59:25.949653 29235 net.cpp:382] ip1 -> ip1
I0428 19:59:25.949767 29235 net.cpp:124] Setting up ip1
I0428 19:59:25.949775 29235 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:25.949779 29235 net.cpp:139] Memory required for data: 2255360
I0428 19:59:25.949785 29235 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:25.949790 29235 net.cpp:86] Creating Layer relu1
I0428 19:59:25.949793 29235 net.cpp:408] relu1 <- ip1
I0428 19:59:25.949797 29235 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:25.949981 29235 net.cpp:124] Setting up relu1
I0428 19:59:25.949990 29235 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:25.949992 29235 net.cpp:139] Memory required for data: 2261760
I0428 19:59:25.949995 29235 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:25.950001 29235 net.cpp:86] Creating Layer ip2
I0428 19:59:25.950004 29235 net.cpp:408] ip2 <- ip1
I0428 19:59:25.950008 29235 net.cpp:382] ip2 -> ip2
I0428 19:59:25.950119 29235 net.cpp:124] Setting up ip2
I0428 19:59:25.950125 29235 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:25.950129 29235 net.cpp:139] Memory required for data: 2274560
I0428 19:59:25.950134 29235 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:25.950139 29235 net.cpp:86] Creating Layer relu2
I0428 19:59:25.950142 29235 net.cpp:408] relu2 <- ip2
I0428 19:59:25.950146 29235 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:25.950830 29235 net.cpp:124] Setting up relu2
I0428 19:59:25.950842 29235 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:25.950845 29235 net.cpp:139] Memory required for data: 2287360
I0428 19:59:25.950848 29235 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:25.950855 29235 net.cpp:86] Creating Layer ip3
I0428 19:59:25.950857 29235 net.cpp:408] ip3 <- ip2
I0428 19:59:25.950862 29235 net.cpp:382] ip3 -> ip3
I0428 19:59:25.950969 29235 net.cpp:124] Setting up ip3
I0428 19:59:25.950976 29235 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:25.950979 29235 net.cpp:139] Memory required for data: 2289920
I0428 19:59:25.950986 29235 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:25.950991 29235 net.cpp:86] Creating Layer relu3
I0428 19:59:25.950994 29235 net.cpp:408] relu3 <- ip3
I0428 19:59:25.950999 29235 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:25.951153 29235 net.cpp:124] Setting up relu3
I0428 19:59:25.951160 29235 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:25.951164 29235 net.cpp:139] Memory required for data: 2292480
I0428 19:59:25.951166 29235 layer_factory.hpp:77] Creating layer loss
I0428 19:59:25.951171 29235 net.cpp:86] Creating Layer loss
I0428 19:59:25.951174 29235 net.cpp:408] loss <- ip3
I0428 19:59:25.951179 29235 net.cpp:408] loss <- label
I0428 19:59:25.951184 29235 net.cpp:382] loss -> loss
I0428 19:59:25.951200 29235 layer_factory.hpp:77] Creating layer loss
I0428 19:59:25.951409 29235 net.cpp:124] Setting up loss
I0428 19:59:25.951418 29235 net.cpp:131] Top shape: (1)
I0428 19:59:25.951421 29235 net.cpp:134]     with loss weight 1
I0428 19:59:25.951434 29235 net.cpp:139] Memory required for data: 2292484
I0428 19:59:25.951437 29235 net.cpp:200] loss needs backward computation.
I0428 19:59:25.951441 29235 net.cpp:200] relu3 needs backward computation.
I0428 19:59:25.951443 29235 net.cpp:200] ip3 needs backward computation.
I0428 19:59:25.951447 29235 net.cpp:200] relu2 needs backward computation.
I0428 19:59:25.951449 29235 net.cpp:200] ip2 needs backward computation.
I0428 19:59:25.951452 29235 net.cpp:200] relu1 needs backward computation.
I0428 19:59:25.951454 29235 net.cpp:200] ip1 needs backward computation.
I0428 19:59:25.951457 29235 net.cpp:200] pool1 needs backward computation.
I0428 19:59:25.951460 29235 net.cpp:200] conv1 needs backward computation.
I0428 19:59:25.951463 29235 net.cpp:200] pool0 needs backward computation.
I0428 19:59:25.951465 29235 net.cpp:200] conv0 needs backward computation.
I0428 19:59:25.951469 29235 net.cpp:202] mnist does not need backward computation.
I0428 19:59:25.951472 29235 net.cpp:244] This network produces output loss
I0428 19:59:25.951480 29235 net.cpp:257] Network initialization done.
I0428 19:59:25.951792 29235 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test847.prototxt
I0428 19:59:25.951817 29235 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:25.951900 29235 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:25.951972 29235 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:25.952014 29235 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:25.952028 29235 net.cpp:86] Creating Layer mnist
I0428 19:59:25.952031 29235 net.cpp:382] mnist -> data
I0428 19:59:25.952039 29235 net.cpp:382] mnist -> label
I0428 19:59:25.952116 29235 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:25.953984 29235 net.cpp:124] Setting up mnist
I0428 19:59:25.953997 29235 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:25.954002 29235 net.cpp:131] Top shape: 100 (100)
I0428 19:59:25.954005 29235 net.cpp:139] Memory required for data: 314000
I0428 19:59:25.954008 29235 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:25.954018 29235 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:25.954021 29235 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:25.954025 29235 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:25.954032 29235 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:25.954066 29235 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:25.954071 29235 net.cpp:131] Top shape: 100 (100)
I0428 19:59:25.954074 29235 net.cpp:131] Top shape: 100 (100)
I0428 19:59:25.954077 29235 net.cpp:139] Memory required for data: 314800
I0428 19:59:25.954079 29235 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:25.954087 29235 net.cpp:86] Creating Layer conv0
I0428 19:59:25.954089 29235 net.cpp:408] conv0 <- data
I0428 19:59:25.954093 29235 net.cpp:382] conv0 -> conv0
I0428 19:59:25.955657 29235 net.cpp:124] Setting up conv0
I0428 19:59:25.955677 29235 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:25.955680 29235 net.cpp:139] Memory required for data: 2618800
I0428 19:59:25.955690 29235 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:25.955696 29235 net.cpp:86] Creating Layer pool0
I0428 19:59:25.955700 29235 net.cpp:408] pool0 <- conv0
I0428 19:59:25.955705 29235 net.cpp:382] pool0 -> pool0
I0428 19:59:25.955741 29235 net.cpp:124] Setting up pool0
I0428 19:59:25.955746 29235 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:25.955749 29235 net.cpp:139] Memory required for data: 3194800
I0428 19:59:25.955752 29235 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:25.955761 29235 net.cpp:86] Creating Layer conv1
I0428 19:59:25.955765 29235 net.cpp:408] conv1 <- pool0
I0428 19:59:25.955770 29235 net.cpp:382] conv1 -> conv1
I0428 19:59:25.957824 29235 net.cpp:124] Setting up conv1
I0428 19:59:25.957837 29235 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:25.957842 29235 net.cpp:139] Memory required for data: 3450800
I0428 19:59:25.957851 29235 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:25.957857 29235 net.cpp:86] Creating Layer pool1
I0428 19:59:25.957860 29235 net.cpp:408] pool1 <- conv1
I0428 19:59:25.957865 29235 net.cpp:382] pool1 -> pool1
I0428 19:59:25.957901 29235 net.cpp:124] Setting up pool1
I0428 19:59:25.957906 29235 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:25.957909 29235 net.cpp:139] Memory required for data: 3514800
I0428 19:59:25.957912 29235 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:25.957917 29235 net.cpp:86] Creating Layer ip1
I0428 19:59:25.957921 29235 net.cpp:408] ip1 <- pool1
I0428 19:59:25.957924 29235 net.cpp:382] ip1 -> ip1
I0428 19:59:25.958045 29235 net.cpp:124] Setting up ip1
I0428 19:59:25.958053 29235 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:25.958066 29235 net.cpp:139] Memory required for data: 3524800
I0428 19:59:25.958081 29235 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:25.958086 29235 net.cpp:86] Creating Layer relu1
I0428 19:59:25.958089 29235 net.cpp:408] relu1 <- ip1
I0428 19:59:25.958092 29235 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:25.958286 29235 net.cpp:124] Setting up relu1
I0428 19:59:25.958293 29235 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:25.958297 29235 net.cpp:139] Memory required for data: 3534800
I0428 19:59:25.958299 29235 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:25.958305 29235 net.cpp:86] Creating Layer ip2
I0428 19:59:25.958308 29235 net.cpp:408] ip2 <- ip1
I0428 19:59:25.958313 29235 net.cpp:382] ip2 -> ip2
I0428 19:59:25.958420 29235 net.cpp:124] Setting up ip2
I0428 19:59:25.958425 29235 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:25.958428 29235 net.cpp:139] Memory required for data: 3554800
I0428 19:59:25.958433 29235 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:25.958437 29235 net.cpp:86] Creating Layer relu2
I0428 19:59:25.958441 29235 net.cpp:408] relu2 <- ip2
I0428 19:59:25.958444 29235 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:25.958638 29235 net.cpp:124] Setting up relu2
I0428 19:59:25.958645 29235 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:25.958649 29235 net.cpp:139] Memory required for data: 3574800
I0428 19:59:25.958652 29235 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:25.958657 29235 net.cpp:86] Creating Layer ip3
I0428 19:59:25.958659 29235 net.cpp:408] ip3 <- ip2
I0428 19:59:25.958663 29235 net.cpp:382] ip3 -> ip3
I0428 19:59:25.958783 29235 net.cpp:124] Setting up ip3
I0428 19:59:25.958791 29235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:25.958794 29235 net.cpp:139] Memory required for data: 3578800
I0428 19:59:25.958802 29235 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:25.958822 29235 net.cpp:86] Creating Layer relu3
I0428 19:59:25.958827 29235 net.cpp:408] relu3 <- ip3
I0428 19:59:25.958832 29235 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:25.959599 29235 net.cpp:124] Setting up relu3
I0428 19:59:25.959609 29235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:25.959612 29235 net.cpp:139] Memory required for data: 3582800
I0428 19:59:25.959616 29235 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:25.959620 29235 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:25.959623 29235 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:25.959628 29235 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:25.959635 29235 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:25.959678 29235 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:25.959684 29235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:25.959687 29235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:25.959691 29235 net.cpp:139] Memory required for data: 3590800
I0428 19:59:25.959698 29235 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:25.959703 29235 net.cpp:86] Creating Layer accuracy
I0428 19:59:25.959707 29235 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:25.959709 29235 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:25.959713 29235 net.cpp:382] accuracy -> accuracy
I0428 19:59:25.959720 29235 net.cpp:124] Setting up accuracy
I0428 19:59:25.959723 29235 net.cpp:131] Top shape: (1)
I0428 19:59:25.959727 29235 net.cpp:139] Memory required for data: 3590804
I0428 19:59:25.959728 29235 layer_factory.hpp:77] Creating layer loss
I0428 19:59:25.959733 29235 net.cpp:86] Creating Layer loss
I0428 19:59:25.959735 29235 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:25.959738 29235 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:25.959743 29235 net.cpp:382] loss -> loss
I0428 19:59:25.959748 29235 layer_factory.hpp:77] Creating layer loss
I0428 19:59:25.960002 29235 net.cpp:124] Setting up loss
I0428 19:59:25.960012 29235 net.cpp:131] Top shape: (1)
I0428 19:59:25.960016 29235 net.cpp:134]     with loss weight 1
I0428 19:59:25.960031 29235 net.cpp:139] Memory required for data: 3590808
I0428 19:59:25.960034 29235 net.cpp:200] loss needs backward computation.
I0428 19:59:25.960038 29235 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:25.960041 29235 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:25.960044 29235 net.cpp:200] relu3 needs backward computation.
I0428 19:59:25.960047 29235 net.cpp:200] ip3 needs backward computation.
I0428 19:59:25.960050 29235 net.cpp:200] relu2 needs backward computation.
I0428 19:59:25.960052 29235 net.cpp:200] ip2 needs backward computation.
I0428 19:59:25.960055 29235 net.cpp:200] relu1 needs backward computation.
I0428 19:59:25.960058 29235 net.cpp:200] ip1 needs backward computation.
I0428 19:59:25.960062 29235 net.cpp:200] pool1 needs backward computation.
I0428 19:59:25.960063 29235 net.cpp:200] conv1 needs backward computation.
I0428 19:59:25.960067 29235 net.cpp:200] pool0 needs backward computation.
I0428 19:59:25.960069 29235 net.cpp:200] conv0 needs backward computation.
I0428 19:59:25.960073 29235 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:25.960077 29235 net.cpp:202] mnist does not need backward computation.
I0428 19:59:25.960079 29235 net.cpp:244] This network produces output accuracy
I0428 19:59:25.960083 29235 net.cpp:244] This network produces output loss
I0428 19:59:25.960091 29235 net.cpp:257] Network initialization done.
I0428 19:59:25.960131 29235 solver.cpp:56] Solver scaffolding done.
I0428 19:59:25.960482 29235 caffe.cpp:248] Starting Optimization
I0428 19:59:25.960489 29235 solver.cpp:273] Solving LeNet
I0428 19:59:25.960492 29235 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:25.961361 29235 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:25.964980 29235 blocking_queue.cpp:49] Waiting for data
I0428 19:59:26.036414 29243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:26.036962 29235 solver.cpp:398]     Test net output #0: accuracy = 0.1132
I0428 19:59:26.036983 29235 solver.cpp:398]     Test net output #1: loss = 2.29935 (* 1 = 2.29935 loss)
I0428 19:59:26.039455 29235 solver.cpp:219] Iteration 0 (0 iter/s, 0.0789402s/100 iters), loss = 2.30223
I0428 19:59:26.039479 29235 solver.cpp:238]     Train net output #0: loss = 2.30223 (* 1 = 2.30223 loss)
I0428 19:59:26.039490 29235 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:26.122071 29235 solver.cpp:219] Iteration 100 (1210.91 iter/s, 0.0825825s/100 iters), loss = 0.814447
I0428 19:59:26.122097 29235 solver.cpp:238]     Train net output #0: loss = 0.814447 (* 1 = 0.814447 loss)
I0428 19:59:26.122118 29235 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:26.204695 29235 solver.cpp:219] Iteration 200 (1210.8 iter/s, 0.0825897s/100 iters), loss = 0.243974
I0428 19:59:26.204720 29235 solver.cpp:238]     Train net output #0: loss = 0.243974 (* 1 = 0.243974 loss)
I0428 19:59:26.204743 29235 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:26.283774 29235 solver.cpp:219] Iteration 300 (1265.09 iter/s, 0.0790457s/100 iters), loss = 0.202878
I0428 19:59:26.283798 29235 solver.cpp:238]     Train net output #0: loss = 0.202878 (* 1 = 0.202878 loss)
I0428 19:59:26.283803 29235 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:26.369128 29235 solver.cpp:219] Iteration 400 (1172.04 iter/s, 0.0853216s/100 iters), loss = 0.0914967
I0428 19:59:26.369151 29235 solver.cpp:238]     Train net output #0: loss = 0.0914967 (* 1 = 0.0914967 loss)
I0428 19:59:26.369158 29235 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:26.450618 29235 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:26.522910 29243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:26.523512 29235 solver.cpp:398]     Test net output #0: accuracy = 0.9537
I0428 19:59:26.523541 29235 solver.cpp:398]     Test net output #1: loss = 0.155459 (* 1 = 0.155459 loss)
I0428 19:59:26.524483 29235 solver.cpp:219] Iteration 500 (643.844 iter/s, 0.155317s/100 iters), loss = 0.113745
I0428 19:59:26.524538 29235 solver.cpp:238]     Train net output #0: loss = 0.113745 (* 1 = 0.113745 loss)
I0428 19:59:26.524547 29235 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:26.610054 29235 solver.cpp:219] Iteration 600 (1169.48 iter/s, 0.0855081s/100 iters), loss = 0.147963
I0428 19:59:26.610080 29235 solver.cpp:238]     Train net output #0: loss = 0.147963 (* 1 = 0.147963 loss)
I0428 19:59:26.610086 29235 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:26.692469 29235 solver.cpp:219] Iteration 700 (1214.07 iter/s, 0.0823675s/100 iters), loss = 0.196417
I0428 19:59:26.692507 29235 solver.cpp:238]     Train net output #0: loss = 0.196417 (* 1 = 0.196417 loss)
I0428 19:59:26.692513 29235 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:26.773705 29235 solver.cpp:219] Iteration 800 (1231.49 iter/s, 0.0812022s/100 iters), loss = 0.288427
I0428 19:59:26.773727 29235 solver.cpp:238]     Train net output #0: loss = 0.288427 (* 1 = 0.288427 loss)
I0428 19:59:26.773733 29235 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:26.859948 29235 solver.cpp:219] Iteration 900 (1159.94 iter/s, 0.0862116s/100 iters), loss = 0.173168
I0428 19:59:26.859972 29235 solver.cpp:238]     Train net output #0: loss = 0.173168 (* 1 = 0.173168 loss)
I0428 19:59:26.859993 29235 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:26.887862 29241 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:26.941846 29235 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:26.942644 29235 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:26.943151 29235 solver.cpp:311] Iteration 1000, loss = 0.163762
I0428 19:59:26.943167 29235 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:27.018031 29243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:27.018566 29235 solver.cpp:398]     Test net output #0: accuracy = 0.973
I0428 19:59:27.018584 29235 solver.cpp:398]     Test net output #1: loss = 0.090522 (* 1 = 0.090522 loss)
I0428 19:59:27.018590 29235 solver.cpp:316] Optimization Done.
I0428 19:59:27.018594 29235 caffe.cpp:259] Optimization Done.
