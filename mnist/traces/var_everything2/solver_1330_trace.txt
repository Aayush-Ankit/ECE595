I0428 20:18:55.318734  1265 caffe.cpp:218] Using GPUs 0
I0428 20:18:55.355962  1265 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:55.878427  1265 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1330.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:55.878568  1265 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1330.prototxt
I0428 20:18:55.878942  1265 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:55.878958  1265 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:55.879043  1265 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:18:55.879112  1265 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:55.879214  1265 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:55.879237  1265 net.cpp:86] Creating Layer mnist
I0428 20:18:55.879246  1265 net.cpp:382] mnist -> data
I0428 20:18:55.879268  1265 net.cpp:382] mnist -> label
I0428 20:18:55.880374  1265 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:55.882839  1265 net.cpp:124] Setting up mnist
I0428 20:18:55.882858  1265 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:55.882863  1265 net.cpp:131] Top shape: 64 (64)
I0428 20:18:55.882866  1265 net.cpp:139] Memory required for data: 200960
I0428 20:18:55.882874  1265 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:55.882891  1265 net.cpp:86] Creating Layer conv0
I0428 20:18:55.882896  1265 net.cpp:408] conv0 <- data
I0428 20:18:55.882910  1265 net.cpp:382] conv0 -> conv0
I0428 20:18:56.177199  1265 net.cpp:124] Setting up conv0
I0428 20:18:56.177230  1265 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:56.177237  1265 net.cpp:139] Memory required for data: 7573760
I0428 20:18:56.177279  1265 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:56.177294  1265 net.cpp:86] Creating Layer pool0
I0428 20:18:56.177299  1265 net.cpp:408] pool0 <- conv0
I0428 20:18:56.177306  1265 net.cpp:382] pool0 -> pool0
I0428 20:18:56.177362  1265 net.cpp:124] Setting up pool0
I0428 20:18:56.177372  1265 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:56.177376  1265 net.cpp:139] Memory required for data: 9416960
I0428 20:18:56.177381  1265 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:56.177393  1265 net.cpp:86] Creating Layer conv1
I0428 20:18:56.177397  1265 net.cpp:408] conv1 <- pool0
I0428 20:18:56.177403  1265 net.cpp:382] conv1 -> conv1
I0428 20:18:56.179735  1265 net.cpp:124] Setting up conv1
I0428 20:18:56.179754  1265 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:18:56.179757  1265 net.cpp:139] Memory required for data: 9826560
I0428 20:18:56.179769  1265 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:56.179777  1265 net.cpp:86] Creating Layer pool1
I0428 20:18:56.179781  1265 net.cpp:408] pool1 <- conv1
I0428 20:18:56.179787  1265 net.cpp:382] pool1 -> pool1
I0428 20:18:56.179831  1265 net.cpp:124] Setting up pool1
I0428 20:18:56.179841  1265 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:18:56.179844  1265 net.cpp:139] Memory required for data: 9928960
I0428 20:18:56.179847  1265 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:56.179857  1265 net.cpp:86] Creating Layer ip1
I0428 20:18:56.179860  1265 net.cpp:408] ip1 <- pool1
I0428 20:18:56.179865  1265 net.cpp:382] ip1 -> ip1
I0428 20:18:56.180016  1265 net.cpp:124] Setting up ip1
I0428 20:18:56.180025  1265 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:56.180029  1265 net.cpp:139] Memory required for data: 9931520
I0428 20:18:56.180037  1265 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:56.180045  1265 net.cpp:86] Creating Layer relu1
I0428 20:18:56.180049  1265 net.cpp:408] relu1 <- ip1
I0428 20:18:56.180055  1265 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:56.180258  1265 net.cpp:124] Setting up relu1
I0428 20:18:56.180269  1265 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:56.180272  1265 net.cpp:139] Memory required for data: 9934080
I0428 20:18:56.180275  1265 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:56.180284  1265 net.cpp:86] Creating Layer ip2
I0428 20:18:56.180289  1265 net.cpp:408] ip2 <- ip1
I0428 20:18:56.180294  1265 net.cpp:382] ip2 -> ip2
I0428 20:18:56.180410  1265 net.cpp:124] Setting up ip2
I0428 20:18:56.180419  1265 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:56.180423  1265 net.cpp:139] Memory required for data: 9936640
I0428 20:18:56.180429  1265 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:56.180438  1265 net.cpp:86] Creating Layer relu2
I0428 20:18:56.180441  1265 net.cpp:408] relu2 <- ip2
I0428 20:18:56.180446  1265 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:56.181305  1265 net.cpp:124] Setting up relu2
I0428 20:18:56.181323  1265 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:56.181326  1265 net.cpp:139] Memory required for data: 9939200
I0428 20:18:56.181330  1265 layer_factory.hpp:77] Creating layer loss
I0428 20:18:56.181337  1265 net.cpp:86] Creating Layer loss
I0428 20:18:56.181341  1265 net.cpp:408] loss <- ip2
I0428 20:18:56.181346  1265 net.cpp:408] loss <- label
I0428 20:18:56.181354  1265 net.cpp:382] loss -> loss
I0428 20:18:56.181375  1265 layer_factory.hpp:77] Creating layer loss
I0428 20:18:56.181669  1265 net.cpp:124] Setting up loss
I0428 20:18:56.181680  1265 net.cpp:131] Top shape: (1)
I0428 20:18:56.181684  1265 net.cpp:134]     with loss weight 1
I0428 20:18:56.181699  1265 net.cpp:139] Memory required for data: 9939204
I0428 20:18:56.181704  1265 net.cpp:200] loss needs backward computation.
I0428 20:18:56.181709  1265 net.cpp:200] relu2 needs backward computation.
I0428 20:18:56.181711  1265 net.cpp:200] ip2 needs backward computation.
I0428 20:18:56.181715  1265 net.cpp:200] relu1 needs backward computation.
I0428 20:18:56.181718  1265 net.cpp:200] ip1 needs backward computation.
I0428 20:18:56.181735  1265 net.cpp:200] pool1 needs backward computation.
I0428 20:18:56.181738  1265 net.cpp:200] conv1 needs backward computation.
I0428 20:18:56.181741  1265 net.cpp:200] pool0 needs backward computation.
I0428 20:18:56.181746  1265 net.cpp:200] conv0 needs backward computation.
I0428 20:18:56.181749  1265 net.cpp:202] mnist does not need backward computation.
I0428 20:18:56.181752  1265 net.cpp:244] This network produces output loss
I0428 20:18:56.181762  1265 net.cpp:257] Network initialization done.
I0428 20:18:56.182111  1265 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1330.prototxt
I0428 20:18:56.182140  1265 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:56.182246  1265 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:18:56.182327  1265 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:56.182380  1265 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:56.182395  1265 net.cpp:86] Creating Layer mnist
I0428 20:18:56.182402  1265 net.cpp:382] mnist -> data
I0428 20:18:56.182411  1265 net.cpp:382] mnist -> label
I0428 20:18:56.182516  1265 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:56.184701  1265 net.cpp:124] Setting up mnist
I0428 20:18:56.184717  1265 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:56.184723  1265 net.cpp:131] Top shape: 100 (100)
I0428 20:18:56.184726  1265 net.cpp:139] Memory required for data: 314000
I0428 20:18:56.184731  1265 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:56.184765  1265 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:56.184772  1265 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:56.184777  1265 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:56.184785  1265 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:56.184918  1265 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:56.184928  1265 net.cpp:131] Top shape: 100 (100)
I0428 20:18:56.184933  1265 net.cpp:131] Top shape: 100 (100)
I0428 20:18:56.184937  1265 net.cpp:139] Memory required for data: 314800
I0428 20:18:56.184940  1265 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:56.184952  1265 net.cpp:86] Creating Layer conv0
I0428 20:18:56.184960  1265 net.cpp:408] conv0 <- data
I0428 20:18:56.184968  1265 net.cpp:382] conv0 -> conv0
I0428 20:18:56.186894  1265 net.cpp:124] Setting up conv0
I0428 20:18:56.186911  1265 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:56.186916  1265 net.cpp:139] Memory required for data: 11834800
I0428 20:18:56.186928  1265 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:56.186936  1265 net.cpp:86] Creating Layer pool0
I0428 20:18:56.186940  1265 net.cpp:408] pool0 <- conv0
I0428 20:18:56.186946  1265 net.cpp:382] pool0 -> pool0
I0428 20:18:56.186992  1265 net.cpp:124] Setting up pool0
I0428 20:18:56.187000  1265 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:56.187003  1265 net.cpp:139] Memory required for data: 14714800
I0428 20:18:56.187007  1265 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:56.187018  1265 net.cpp:86] Creating Layer conv1
I0428 20:18:56.187024  1265 net.cpp:408] conv1 <- pool0
I0428 20:18:56.187033  1265 net.cpp:382] conv1 -> conv1
I0428 20:18:56.189043  1265 net.cpp:124] Setting up conv1
I0428 20:18:56.189059  1265 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:18:56.189062  1265 net.cpp:139] Memory required for data: 15354800
I0428 20:18:56.189074  1265 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:56.189080  1265 net.cpp:86] Creating Layer pool1
I0428 20:18:56.189085  1265 net.cpp:408] pool1 <- conv1
I0428 20:18:56.189092  1265 net.cpp:382] pool1 -> pool1
I0428 20:18:56.189138  1265 net.cpp:124] Setting up pool1
I0428 20:18:56.189149  1265 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:18:56.189152  1265 net.cpp:139] Memory required for data: 15514800
I0428 20:18:56.189157  1265 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:56.189163  1265 net.cpp:86] Creating Layer ip1
I0428 20:18:56.189167  1265 net.cpp:408] ip1 <- pool1
I0428 20:18:56.189175  1265 net.cpp:382] ip1 -> ip1
I0428 20:18:56.189330  1265 net.cpp:124] Setting up ip1
I0428 20:18:56.189339  1265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:56.189342  1265 net.cpp:139] Memory required for data: 15518800
I0428 20:18:56.189363  1265 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:56.189369  1265 net.cpp:86] Creating Layer relu1
I0428 20:18:56.189373  1265 net.cpp:408] relu1 <- ip1
I0428 20:18:56.189381  1265 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:56.189574  1265 net.cpp:124] Setting up relu1
I0428 20:18:56.189584  1265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:56.189589  1265 net.cpp:139] Memory required for data: 15522800
I0428 20:18:56.189592  1265 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:56.189601  1265 net.cpp:86] Creating Layer ip2
I0428 20:18:56.189605  1265 net.cpp:408] ip2 <- ip1
I0428 20:18:56.189612  1265 net.cpp:382] ip2 -> ip2
I0428 20:18:56.189731  1265 net.cpp:124] Setting up ip2
I0428 20:18:56.189739  1265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:56.189743  1265 net.cpp:139] Memory required for data: 15526800
I0428 20:18:56.189749  1265 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:56.189755  1265 net.cpp:86] Creating Layer relu2
I0428 20:18:56.189759  1265 net.cpp:408] relu2 <- ip2
I0428 20:18:56.189764  1265 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:56.190008  1265 net.cpp:124] Setting up relu2
I0428 20:18:56.190018  1265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:56.190022  1265 net.cpp:139] Memory required for data: 15530800
I0428 20:18:56.190026  1265 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:18:56.190032  1265 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:18:56.190035  1265 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:18:56.190042  1265 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:18:56.190060  1265 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:18:56.190104  1265 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:18:56.190112  1265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:56.190116  1265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:56.190120  1265 net.cpp:139] Memory required for data: 15538800
I0428 20:18:56.190124  1265 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:56.190132  1265 net.cpp:86] Creating Layer accuracy
I0428 20:18:56.190136  1265 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:18:56.190141  1265 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:56.190148  1265 net.cpp:382] accuracy -> accuracy
I0428 20:18:56.190156  1265 net.cpp:124] Setting up accuracy
I0428 20:18:56.190172  1265 net.cpp:131] Top shape: (1)
I0428 20:18:56.190181  1265 net.cpp:139] Memory required for data: 15538804
I0428 20:18:56.190186  1265 layer_factory.hpp:77] Creating layer loss
I0428 20:18:56.190191  1265 net.cpp:86] Creating Layer loss
I0428 20:18:56.190196  1265 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:18:56.190199  1265 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:56.190206  1265 net.cpp:382] loss -> loss
I0428 20:18:56.190212  1265 layer_factory.hpp:77] Creating layer loss
I0428 20:18:56.190502  1265 net.cpp:124] Setting up loss
I0428 20:18:56.190513  1265 net.cpp:131] Top shape: (1)
I0428 20:18:56.190517  1265 net.cpp:134]     with loss weight 1
I0428 20:18:56.190526  1265 net.cpp:139] Memory required for data: 15538808
I0428 20:18:56.190529  1265 net.cpp:200] loss needs backward computation.
I0428 20:18:56.190533  1265 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:56.190538  1265 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:18:56.190541  1265 net.cpp:200] relu2 needs backward computation.
I0428 20:18:56.190544  1265 net.cpp:200] ip2 needs backward computation.
I0428 20:18:56.190548  1265 net.cpp:200] relu1 needs backward computation.
I0428 20:18:56.190552  1265 net.cpp:200] ip1 needs backward computation.
I0428 20:18:56.190556  1265 net.cpp:200] pool1 needs backward computation.
I0428 20:18:56.190565  1265 net.cpp:200] conv1 needs backward computation.
I0428 20:18:56.190569  1265 net.cpp:200] pool0 needs backward computation.
I0428 20:18:56.190573  1265 net.cpp:200] conv0 needs backward computation.
I0428 20:18:56.190577  1265 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:56.190582  1265 net.cpp:202] mnist does not need backward computation.
I0428 20:18:56.190585  1265 net.cpp:244] This network produces output accuracy
I0428 20:18:56.190589  1265 net.cpp:244] This network produces output loss
I0428 20:18:56.190603  1265 net.cpp:257] Network initialization done.
I0428 20:18:56.190646  1265 solver.cpp:56] Solver scaffolding done.
I0428 20:18:56.190982  1265 caffe.cpp:248] Starting Optimization
I0428 20:18:56.190989  1265 solver.cpp:273] Solving LeNet
I0428 20:18:56.190992  1265 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:56.191284  1265 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:56.199283  1265 blocking_queue.cpp:49] Waiting for data
I0428 20:18:56.268975  1272 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:56.269901  1265 solver.cpp:398]     Test net output #0: accuracy = 0.1142
I0428 20:18:56.269925  1265 solver.cpp:398]     Test net output #1: loss = 2.29079 (* 1 = 2.29079 loss)
I0428 20:18:56.274547  1265 solver.cpp:219] Iteration 0 (-9.72501e-43 iter/s, 0.0835226s/100 iters), loss = 2.28976
I0428 20:18:56.274580  1265 solver.cpp:238]     Train net output #0: loss = 2.28976 (* 1 = 2.28976 loss)
I0428 20:18:56.274593  1265 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:56.411497  1265 solver.cpp:219] Iteration 100 (730.456 iter/s, 0.136901s/100 iters), loss = 0.421169
I0428 20:18:56.411533  1265 solver.cpp:238]     Train net output #0: loss = 0.421169 (* 1 = 0.421169 loss)
I0428 20:18:56.411542  1265 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:56.548126  1265 solver.cpp:219] Iteration 200 (732.17 iter/s, 0.13658s/100 iters), loss = 0.454136
I0428 20:18:56.548161  1265 solver.cpp:238]     Train net output #0: loss = 0.454136 (* 1 = 0.454136 loss)
I0428 20:18:56.548169  1265 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:56.682857  1265 solver.cpp:219] Iteration 300 (742.474 iter/s, 0.134685s/100 iters), loss = 0.522127
I0428 20:18:56.682889  1265 solver.cpp:238]     Train net output #0: loss = 0.522127 (* 1 = 0.522127 loss)
I0428 20:18:56.682898  1265 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:56.816083  1265 solver.cpp:219] Iteration 400 (750.855 iter/s, 0.133181s/100 iters), loss = 0.331179
I0428 20:18:56.816118  1265 solver.cpp:238]     Train net output #0: loss = 0.331179 (* 1 = 0.331179 loss)
I0428 20:18:56.816126  1265 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:56.951896  1265 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:57.018776  1272 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:57.020987  1265 solver.cpp:398]     Test net output #0: accuracy = 0.8589
I0428 20:18:57.021013  1265 solver.cpp:398]     Test net output #1: loss = 0.380627 (* 1 = 0.380627 loss)
I0428 20:18:57.022279  1265 solver.cpp:219] Iteration 500 (485.097 iter/s, 0.206145s/100 iters), loss = 0.264876
I0428 20:18:57.022313  1265 solver.cpp:238]     Train net output #0: loss = 0.264876 (* 1 = 0.264876 loss)
I0428 20:18:57.022325  1265 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:57.166571  1265 solver.cpp:219] Iteration 600 (693.276 iter/s, 0.144243s/100 iters), loss = 0.239492
I0428 20:18:57.166618  1265 solver.cpp:238]     Train net output #0: loss = 0.239492 (* 1 = 0.239492 loss)
I0428 20:18:57.166630  1265 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:57.312311  1265 solver.cpp:219] Iteration 700 (686.439 iter/s, 0.145679s/100 iters), loss = 0.582683
I0428 20:18:57.312360  1265 solver.cpp:238]     Train net output #0: loss = 0.582683 (* 1 = 0.582683 loss)
I0428 20:18:57.312371  1265 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:57.459070  1265 solver.cpp:219] Iteration 800 (681.671 iter/s, 0.146698s/100 iters), loss = 0.398174
I0428 20:18:57.459116  1265 solver.cpp:238]     Train net output #0: loss = 0.398174 (* 1 = 0.398174 loss)
I0428 20:18:57.459127  1265 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:57.602525  1265 solver.cpp:219] Iteration 900 (697.37 iter/s, 0.143396s/100 iters), loss = 0.457762
I0428 20:18:57.602569  1265 solver.cpp:238]     Train net output #0: loss = 0.457762 (* 1 = 0.457762 loss)
I0428 20:18:57.602579  1265 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:57.651816  1271 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:57.754904  1265 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:57.756871  1265 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:57.758155  1265 solver.cpp:311] Iteration 1000, loss = 0.40929
I0428 20:18:57.758185  1265 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:57.832672  1272 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:57.835014  1265 solver.cpp:398]     Test net output #0: accuracy = 0.8789
I0428 20:18:57.835039  1265 solver.cpp:398]     Test net output #1: loss = 0.314596 (* 1 = 0.314596 loss)
I0428 20:18:57.835045  1265 solver.cpp:316] Optimization Done.
I0428 20:18:57.835049  1265 caffe.cpp:259] Optimization Done.
