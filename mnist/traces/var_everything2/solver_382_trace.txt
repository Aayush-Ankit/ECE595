I0428 19:42:02.299823 24971 caffe.cpp:218] Using GPUs 0
I0428 19:42:02.340454 24971 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:02.856444 24971 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test382.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:02.856583 24971 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test382.prototxt
I0428 19:42:02.856995 24971 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:02.857014 24971 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:02.857111 24971 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:02.857185 24971 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:02.857285 24971 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:02.857308 24971 net.cpp:86] Creating Layer mnist
I0428 19:42:02.857316 24971 net.cpp:382] mnist -> data
I0428 19:42:02.857341 24971 net.cpp:382] mnist -> label
I0428 19:42:02.858424 24971 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:02.860869 24971 net.cpp:124] Setting up mnist
I0428 19:42:02.860888 24971 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:02.860893 24971 net.cpp:131] Top shape: 64 (64)
I0428 19:42:02.860898 24971 net.cpp:139] Memory required for data: 200960
I0428 19:42:02.860905 24971 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:02.860921 24971 net.cpp:86] Creating Layer conv0
I0428 19:42:02.860942 24971 net.cpp:408] conv0 <- data
I0428 19:42:02.860954 24971 net.cpp:382] conv0 -> conv0
I0428 19:42:03.146807 24971 net.cpp:124] Setting up conv0
I0428 19:42:03.146834 24971 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:03.146839 24971 net.cpp:139] Memory required for data: 495872
I0428 19:42:03.146855 24971 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:03.146869 24971 net.cpp:86] Creating Layer pool0
I0428 19:42:03.146874 24971 net.cpp:408] pool0 <- conv0
I0428 19:42:03.146880 24971 net.cpp:382] pool0 -> pool0
I0428 19:42:03.146929 24971 net.cpp:124] Setting up pool0
I0428 19:42:03.146934 24971 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:03.146937 24971 net.cpp:139] Memory required for data: 569600
I0428 19:42:03.146941 24971 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:03.146953 24971 net.cpp:86] Creating Layer conv1
I0428 19:42:03.146956 24971 net.cpp:408] conv1 <- pool0
I0428 19:42:03.146961 24971 net.cpp:382] conv1 -> conv1
I0428 19:42:03.148927 24971 net.cpp:124] Setting up conv1
I0428 19:42:03.148942 24971 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:42:03.148947 24971 net.cpp:139] Memory required for data: 733440
I0428 19:42:03.148957 24971 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:03.148965 24971 net.cpp:86] Creating Layer pool1
I0428 19:42:03.148968 24971 net.cpp:408] pool1 <- conv1
I0428 19:42:03.148973 24971 net.cpp:382] pool1 -> pool1
I0428 19:42:03.149013 24971 net.cpp:124] Setting up pool1
I0428 19:42:03.149024 24971 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:42:03.149026 24971 net.cpp:139] Memory required for data: 774400
I0428 19:42:03.149029 24971 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:03.149036 24971 net.cpp:86] Creating Layer ip1
I0428 19:42:03.149040 24971 net.cpp:408] ip1 <- pool1
I0428 19:42:03.149045 24971 net.cpp:382] ip1 -> ip1
I0428 19:42:03.150069 24971 net.cpp:124] Setting up ip1
I0428 19:42:03.150081 24971 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:03.150085 24971 net.cpp:139] Memory required for data: 787200
I0428 19:42:03.150094 24971 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:03.150100 24971 net.cpp:86] Creating Layer relu1
I0428 19:42:03.150104 24971 net.cpp:408] relu1 <- ip1
I0428 19:42:03.150110 24971 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:03.150297 24971 net.cpp:124] Setting up relu1
I0428 19:42:03.150306 24971 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:03.150310 24971 net.cpp:139] Memory required for data: 800000
I0428 19:42:03.150312 24971 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:03.150321 24971 net.cpp:86] Creating Layer ip2
I0428 19:42:03.150324 24971 net.cpp:408] ip2 <- ip1
I0428 19:42:03.150329 24971 net.cpp:382] ip2 -> ip2
I0428 19:42:03.150442 24971 net.cpp:124] Setting up ip2
I0428 19:42:03.150449 24971 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:03.150452 24971 net.cpp:139] Memory required for data: 802560
I0428 19:42:03.150460 24971 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:03.150467 24971 net.cpp:86] Creating Layer relu2
I0428 19:42:03.150470 24971 net.cpp:408] relu2 <- ip2
I0428 19:42:03.150475 24971 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:03.151237 24971 net.cpp:124] Setting up relu2
I0428 19:42:03.151252 24971 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:03.151254 24971 net.cpp:139] Memory required for data: 805120
I0428 19:42:03.151258 24971 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:03.151265 24971 net.cpp:86] Creating Layer ip3
I0428 19:42:03.151269 24971 net.cpp:408] ip3 <- ip2
I0428 19:42:03.151278 24971 net.cpp:382] ip3 -> ip3
I0428 19:42:03.151387 24971 net.cpp:124] Setting up ip3
I0428 19:42:03.151396 24971 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:03.151398 24971 net.cpp:139] Memory required for data: 807680
I0428 19:42:03.151407 24971 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:03.151413 24971 net.cpp:86] Creating Layer relu3
I0428 19:42:03.151417 24971 net.cpp:408] relu3 <- ip3
I0428 19:42:03.151422 24971 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:03.151604 24971 net.cpp:124] Setting up relu3
I0428 19:42:03.151613 24971 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:03.151617 24971 net.cpp:139] Memory required for data: 810240
I0428 19:42:03.151619 24971 layer_factory.hpp:77] Creating layer loss
I0428 19:42:03.151626 24971 net.cpp:86] Creating Layer loss
I0428 19:42:03.151629 24971 net.cpp:408] loss <- ip3
I0428 19:42:03.151633 24971 net.cpp:408] loss <- label
I0428 19:42:03.151640 24971 net.cpp:382] loss -> loss
I0428 19:42:03.151657 24971 layer_factory.hpp:77] Creating layer loss
I0428 19:42:03.151908 24971 net.cpp:124] Setting up loss
I0428 19:42:03.151917 24971 net.cpp:131] Top shape: (1)
I0428 19:42:03.151921 24971 net.cpp:134]     with loss weight 1
I0428 19:42:03.151934 24971 net.cpp:139] Memory required for data: 810244
I0428 19:42:03.151938 24971 net.cpp:200] loss needs backward computation.
I0428 19:42:03.151942 24971 net.cpp:200] relu3 needs backward computation.
I0428 19:42:03.151945 24971 net.cpp:200] ip3 needs backward computation.
I0428 19:42:03.151948 24971 net.cpp:200] relu2 needs backward computation.
I0428 19:42:03.151952 24971 net.cpp:200] ip2 needs backward computation.
I0428 19:42:03.151953 24971 net.cpp:200] relu1 needs backward computation.
I0428 19:42:03.151957 24971 net.cpp:200] ip1 needs backward computation.
I0428 19:42:03.151959 24971 net.cpp:200] pool1 needs backward computation.
I0428 19:42:03.151962 24971 net.cpp:200] conv1 needs backward computation.
I0428 19:42:03.151965 24971 net.cpp:200] pool0 needs backward computation.
I0428 19:42:03.151969 24971 net.cpp:200] conv0 needs backward computation.
I0428 19:42:03.151973 24971 net.cpp:202] mnist does not need backward computation.
I0428 19:42:03.151975 24971 net.cpp:244] This network produces output loss
I0428 19:42:03.151986 24971 net.cpp:257] Network initialization done.
I0428 19:42:03.152325 24971 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test382.prototxt
I0428 19:42:03.152355 24971 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:03.152454 24971 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:03.152542 24971 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:03.152586 24971 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:03.152600 24971 net.cpp:86] Creating Layer mnist
I0428 19:42:03.152606 24971 net.cpp:382] mnist -> data
I0428 19:42:03.152614 24971 net.cpp:382] mnist -> label
I0428 19:42:03.152705 24971 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:03.154898 24971 net.cpp:124] Setting up mnist
I0428 19:42:03.154912 24971 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:03.154917 24971 net.cpp:131] Top shape: 100 (100)
I0428 19:42:03.154920 24971 net.cpp:139] Memory required for data: 314000
I0428 19:42:03.154924 24971 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:03.154953 24971 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:03.154956 24971 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:03.154961 24971 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:03.154968 24971 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:03.155014 24971 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:03.155019 24971 net.cpp:131] Top shape: 100 (100)
I0428 19:42:03.155022 24971 net.cpp:131] Top shape: 100 (100)
I0428 19:42:03.155025 24971 net.cpp:139] Memory required for data: 314800
I0428 19:42:03.155028 24971 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:03.155038 24971 net.cpp:86] Creating Layer conv0
I0428 19:42:03.155041 24971 net.cpp:408] conv0 <- data
I0428 19:42:03.155048 24971 net.cpp:382] conv0 -> conv0
I0428 19:42:03.156872 24971 net.cpp:124] Setting up conv0
I0428 19:42:03.156903 24971 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:03.156906 24971 net.cpp:139] Memory required for data: 775600
I0428 19:42:03.156934 24971 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:03.156940 24971 net.cpp:86] Creating Layer pool0
I0428 19:42:03.156944 24971 net.cpp:408] pool0 <- conv0
I0428 19:42:03.156949 24971 net.cpp:382] pool0 -> pool0
I0428 19:42:03.156991 24971 net.cpp:124] Setting up pool0
I0428 19:42:03.156996 24971 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:03.157001 24971 net.cpp:139] Memory required for data: 890800
I0428 19:42:03.157003 24971 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:03.157013 24971 net.cpp:86] Creating Layer conv1
I0428 19:42:03.157016 24971 net.cpp:408] conv1 <- pool0
I0428 19:42:03.157023 24971 net.cpp:382] conv1 -> conv1
I0428 19:42:03.158737 24971 net.cpp:124] Setting up conv1
I0428 19:42:03.158751 24971 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:42:03.158756 24971 net.cpp:139] Memory required for data: 1146800
I0428 19:42:03.158764 24971 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:03.158771 24971 net.cpp:86] Creating Layer pool1
I0428 19:42:03.158774 24971 net.cpp:408] pool1 <- conv1
I0428 19:42:03.158780 24971 net.cpp:382] pool1 -> pool1
I0428 19:42:03.158824 24971 net.cpp:124] Setting up pool1
I0428 19:42:03.158829 24971 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:42:03.158838 24971 net.cpp:139] Memory required for data: 1210800
I0428 19:42:03.158841 24971 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:03.158849 24971 net.cpp:86] Creating Layer ip1
I0428 19:42:03.158857 24971 net.cpp:408] ip1 <- pool1
I0428 19:42:03.158861 24971 net.cpp:382] ip1 -> ip1
I0428 19:42:03.159032 24971 net.cpp:124] Setting up ip1
I0428 19:42:03.159040 24971 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:03.159054 24971 net.cpp:139] Memory required for data: 1230800
I0428 19:42:03.159061 24971 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:03.159080 24971 net.cpp:86] Creating Layer relu1
I0428 19:42:03.159083 24971 net.cpp:408] relu1 <- ip1
I0428 19:42:03.159088 24971 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:03.159276 24971 net.cpp:124] Setting up relu1
I0428 19:42:03.159284 24971 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:03.159288 24971 net.cpp:139] Memory required for data: 1250800
I0428 19:42:03.159291 24971 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:03.159301 24971 net.cpp:86] Creating Layer ip2
I0428 19:42:03.159304 24971 net.cpp:408] ip2 <- ip1
I0428 19:42:03.159310 24971 net.cpp:382] ip2 -> ip2
I0428 19:42:03.159426 24971 net.cpp:124] Setting up ip2
I0428 19:42:03.159448 24971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:03.159451 24971 net.cpp:139] Memory required for data: 1254800
I0428 19:42:03.159456 24971 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:03.159461 24971 net.cpp:86] Creating Layer relu2
I0428 19:42:03.159464 24971 net.cpp:408] relu2 <- ip2
I0428 19:42:03.159468 24971 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:03.159626 24971 net.cpp:124] Setting up relu2
I0428 19:42:03.159634 24971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:03.159637 24971 net.cpp:139] Memory required for data: 1258800
I0428 19:42:03.159641 24971 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:03.159646 24971 net.cpp:86] Creating Layer ip3
I0428 19:42:03.159649 24971 net.cpp:408] ip3 <- ip2
I0428 19:42:03.159654 24971 net.cpp:382] ip3 -> ip3
I0428 19:42:03.159756 24971 net.cpp:124] Setting up ip3
I0428 19:42:03.159762 24971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:03.159766 24971 net.cpp:139] Memory required for data: 1262800
I0428 19:42:03.159773 24971 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:03.159777 24971 net.cpp:86] Creating Layer relu3
I0428 19:42:03.159780 24971 net.cpp:408] relu3 <- ip3
I0428 19:42:03.159786 24971 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:03.160676 24971 net.cpp:124] Setting up relu3
I0428 19:42:03.160688 24971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:03.160697 24971 net.cpp:139] Memory required for data: 1266800
I0428 19:42:03.160701 24971 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:03.160706 24971 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:03.160715 24971 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:03.160722 24971 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:03.160728 24971 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:03.160773 24971 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:03.160779 24971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:03.160784 24971 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:03.160787 24971 net.cpp:139] Memory required for data: 1274800
I0428 19:42:03.160790 24971 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:03.160802 24971 net.cpp:86] Creating Layer accuracy
I0428 19:42:03.160805 24971 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:03.160815 24971 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:03.160820 24971 net.cpp:382] accuracy -> accuracy
I0428 19:42:03.160828 24971 net.cpp:124] Setting up accuracy
I0428 19:42:03.160832 24971 net.cpp:131] Top shape: (1)
I0428 19:42:03.160842 24971 net.cpp:139] Memory required for data: 1274804
I0428 19:42:03.160845 24971 layer_factory.hpp:77] Creating layer loss
I0428 19:42:03.160851 24971 net.cpp:86] Creating Layer loss
I0428 19:42:03.160853 24971 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:03.160857 24971 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:03.160861 24971 net.cpp:382] loss -> loss
I0428 19:42:03.160866 24971 layer_factory.hpp:77] Creating layer loss
I0428 19:42:03.161111 24971 net.cpp:124] Setting up loss
I0428 19:42:03.161120 24971 net.cpp:131] Top shape: (1)
I0428 19:42:03.161130 24971 net.cpp:134]     with loss weight 1
I0428 19:42:03.161136 24971 net.cpp:139] Memory required for data: 1274808
I0428 19:42:03.161149 24971 net.cpp:200] loss needs backward computation.
I0428 19:42:03.161154 24971 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:03.161157 24971 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:03.161160 24971 net.cpp:200] relu3 needs backward computation.
I0428 19:42:03.161164 24971 net.cpp:200] ip3 needs backward computation.
I0428 19:42:03.161166 24971 net.cpp:200] relu2 needs backward computation.
I0428 19:42:03.161170 24971 net.cpp:200] ip2 needs backward computation.
I0428 19:42:03.161172 24971 net.cpp:200] relu1 needs backward computation.
I0428 19:42:03.161175 24971 net.cpp:200] ip1 needs backward computation.
I0428 19:42:03.161178 24971 net.cpp:200] pool1 needs backward computation.
I0428 19:42:03.161181 24971 net.cpp:200] conv1 needs backward computation.
I0428 19:42:03.161185 24971 net.cpp:200] pool0 needs backward computation.
I0428 19:42:03.161187 24971 net.cpp:200] conv0 needs backward computation.
I0428 19:42:03.161191 24971 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:03.161195 24971 net.cpp:202] mnist does not need backward computation.
I0428 19:42:03.161197 24971 net.cpp:244] This network produces output accuracy
I0428 19:42:03.161201 24971 net.cpp:244] This network produces output loss
I0428 19:42:03.161213 24971 net.cpp:257] Network initialization done.
I0428 19:42:03.161255 24971 solver.cpp:56] Solver scaffolding done.
I0428 19:42:03.161669 24971 caffe.cpp:248] Starting Optimization
I0428 19:42:03.161675 24971 solver.cpp:273] Solving LeNet
I0428 19:42:03.161679 24971 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:03.162477 24971 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:03.164469 24971 blocking_queue.cpp:49] Waiting for data
I0428 19:42:03.237612 24978 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:03.238039 24971 solver.cpp:398]     Test net output #0: accuracy = 0.1724
I0428 19:42:03.238059 24971 solver.cpp:398]     Test net output #1: loss = 2.30261 (* 1 = 2.30261 loss)
I0428 19:42:03.239884 24971 solver.cpp:219] Iteration 0 (0 iter/s, 0.0781761s/100 iters), loss = 2.29661
I0428 19:42:03.239915 24971 solver.cpp:238]     Train net output #0: loss = 2.29661 (* 1 = 2.29661 loss)
I0428 19:42:03.239928 24971 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:03.317054 24971 solver.cpp:219] Iteration 100 (1296.6 iter/s, 0.0771249s/100 iters), loss = 1.17061
I0428 19:42:03.317085 24971 solver.cpp:238]     Train net output #0: loss = 1.17061 (* 1 = 1.17061 loss)
I0428 19:42:03.317090 24971 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:03.390125 24971 solver.cpp:219] Iteration 200 (1369.31 iter/s, 0.0730296s/100 iters), loss = 1.24709
I0428 19:42:03.390149 24971 solver.cpp:238]     Train net output #0: loss = 1.24709 (* 1 = 1.24709 loss)
I0428 19:42:03.390156 24971 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:03.461989 24971 solver.cpp:219] Iteration 300 (1392.21 iter/s, 0.0718285s/100 iters), loss = 0.511679
I0428 19:42:03.462013 24971 solver.cpp:238]     Train net output #0: loss = 0.511679 (* 1 = 0.511679 loss)
I0428 19:42:03.462018 24971 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:03.533771 24971 solver.cpp:219] Iteration 400 (1393.81 iter/s, 0.0717456s/100 iters), loss = 0.620019
I0428 19:42:03.533810 24971 solver.cpp:238]     Train net output #0: loss = 0.620019 (* 1 = 0.620019 loss)
I0428 19:42:03.533818 24971 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:03.604992 24971 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:03.681041 24978 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:03.681491 24971 solver.cpp:398]     Test net output #0: accuracy = 0.7706
I0428 19:42:03.681510 24971 solver.cpp:398]     Test net output #1: loss = 0.626545 (* 1 = 0.626545 loss)
I0428 19:42:03.682332 24971 solver.cpp:219] Iteration 500 (673.287 iter/s, 0.148525s/100 iters), loss = 0.831518
I0428 19:42:03.682353 24971 solver.cpp:238]     Train net output #0: loss = 0.831518 (* 1 = 0.831518 loss)
I0428 19:42:03.682375 24971 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:03.758131 24971 solver.cpp:219] Iteration 600 (1319.93 iter/s, 0.0757617s/100 iters), loss = 0.585177
I0428 19:42:03.758153 24971 solver.cpp:238]     Train net output #0: loss = 0.585177 (* 1 = 0.585177 loss)
I0428 19:42:03.758175 24971 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:03.831872 24971 solver.cpp:219] Iteration 700 (1356.73 iter/s, 0.0737065s/100 iters), loss = 0.801948
I0428 19:42:03.831897 24971 solver.cpp:238]     Train net output #0: loss = 0.801948 (* 1 = 0.801948 loss)
I0428 19:42:03.831903 24971 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:03.912641 24971 solver.cpp:219] Iteration 800 (1238.68 iter/s, 0.0807309s/100 iters), loss = 0.706838
I0428 19:42:03.912664 24971 solver.cpp:238]     Train net output #0: loss = 0.706838 (* 1 = 0.706838 loss)
I0428 19:42:03.912681 24971 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:03.986171 24971 solver.cpp:219] Iteration 900 (1360.69 iter/s, 0.0734923s/100 iters), loss = 0.315977
I0428 19:42:03.986194 24971 solver.cpp:238]     Train net output #0: loss = 0.315977 (* 1 = 0.315977 loss)
I0428 19:42:03.986217 24971 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:04.010046 24977 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:04.057168 24971 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:04.057947 24971 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:04.058486 24971 solver.cpp:311] Iteration 1000, loss = 0.637795
I0428 19:42:04.058516 24971 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:04.133263 24978 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:04.133764 24971 solver.cpp:398]     Test net output #0: accuracy = 0.7897
I0428 19:42:04.133783 24971 solver.cpp:398]     Test net output #1: loss = 0.536082 (* 1 = 0.536082 loss)
I0428 19:42:04.133788 24971 solver.cpp:316] Optimization Done.
I0428 19:42:04.133791 24971 caffe.cpp:259] Optimization Done.
