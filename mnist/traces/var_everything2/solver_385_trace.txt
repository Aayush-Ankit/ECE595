I0428 19:42:08.333700 24995 caffe.cpp:218] Using GPUs 0
I0428 19:42:08.371100 24995 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:08.883013 24995 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test385.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:08.883205 24995 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test385.prototxt
I0428 19:42:08.883935 24995 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:08.883955 24995 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:08.884060 24995 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:08.884140 24995 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:08.884239 24995 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:08.884265 24995 net.cpp:86] Creating Layer mnist
I0428 19:42:08.884276 24995 net.cpp:382] mnist -> data
I0428 19:42:08.884302 24995 net.cpp:382] mnist -> label
I0428 19:42:08.885401 24995 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:08.887861 24995 net.cpp:124] Setting up mnist
I0428 19:42:08.887877 24995 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:08.887883 24995 net.cpp:131] Top shape: 64 (64)
I0428 19:42:08.887887 24995 net.cpp:139] Memory required for data: 200960
I0428 19:42:08.887894 24995 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:08.887943 24995 net.cpp:86] Creating Layer conv0
I0428 19:42:08.887965 24995 net.cpp:408] conv0 <- data
I0428 19:42:08.887980 24995 net.cpp:382] conv0 -> conv0
I0428 19:42:09.179031 24995 net.cpp:124] Setting up conv0
I0428 19:42:09.179062 24995 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:09.179066 24995 net.cpp:139] Memory required for data: 495872
I0428 19:42:09.179083 24995 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:09.179100 24995 net.cpp:86] Creating Layer pool0
I0428 19:42:09.179105 24995 net.cpp:408] pool0 <- conv0
I0428 19:42:09.179111 24995 net.cpp:382] pool0 -> pool0
I0428 19:42:09.179163 24995 net.cpp:124] Setting up pool0
I0428 19:42:09.179170 24995 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:09.179173 24995 net.cpp:139] Memory required for data: 569600
I0428 19:42:09.179177 24995 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:09.179189 24995 net.cpp:86] Creating Layer conv1
I0428 19:42:09.179193 24995 net.cpp:408] conv1 <- pool0
I0428 19:42:09.179198 24995 net.cpp:382] conv1 -> conv1
I0428 19:42:09.181259 24995 net.cpp:124] Setting up conv1
I0428 19:42:09.181277 24995 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:42:09.181282 24995 net.cpp:139] Memory required for data: 733440
I0428 19:42:09.181291 24995 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:09.181299 24995 net.cpp:86] Creating Layer pool1
I0428 19:42:09.181303 24995 net.cpp:408] pool1 <- conv1
I0428 19:42:09.181309 24995 net.cpp:382] pool1 -> pool1
I0428 19:42:09.181352 24995 net.cpp:124] Setting up pool1
I0428 19:42:09.181358 24995 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:42:09.181361 24995 net.cpp:139] Memory required for data: 774400
I0428 19:42:09.181365 24995 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:09.181373 24995 net.cpp:86] Creating Layer ip1
I0428 19:42:09.181376 24995 net.cpp:408] ip1 <- pool1
I0428 19:42:09.181381 24995 net.cpp:382] ip1 -> ip1
I0428 19:42:09.182473 24995 net.cpp:124] Setting up ip1
I0428 19:42:09.182488 24995 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:09.182492 24995 net.cpp:139] Memory required for data: 787200
I0428 19:42:09.182502 24995 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:09.182508 24995 net.cpp:86] Creating Layer relu1
I0428 19:42:09.182512 24995 net.cpp:408] relu1 <- ip1
I0428 19:42:09.182518 24995 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:09.182711 24995 net.cpp:124] Setting up relu1
I0428 19:42:09.182723 24995 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:09.182726 24995 net.cpp:139] Memory required for data: 800000
I0428 19:42:09.182730 24995 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:09.182739 24995 net.cpp:86] Creating Layer ip2
I0428 19:42:09.182741 24995 net.cpp:408] ip2 <- ip1
I0428 19:42:09.182747 24995 net.cpp:382] ip2 -> ip2
I0428 19:42:09.183789 24995 net.cpp:124] Setting up ip2
I0428 19:42:09.183804 24995 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:09.183807 24995 net.cpp:139] Memory required for data: 806400
I0428 19:42:09.183815 24995 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:09.183822 24995 net.cpp:86] Creating Layer relu2
I0428 19:42:09.183825 24995 net.cpp:408] relu2 <- ip2
I0428 19:42:09.183831 24995 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:09.184653 24995 net.cpp:124] Setting up relu2
I0428 19:42:09.184669 24995 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:09.184672 24995 net.cpp:139] Memory required for data: 812800
I0428 19:42:09.184676 24995 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:09.184685 24995 net.cpp:86] Creating Layer ip3
I0428 19:42:09.184689 24995 net.cpp:408] ip3 <- ip2
I0428 19:42:09.184695 24995 net.cpp:382] ip3 -> ip3
I0428 19:42:09.184808 24995 net.cpp:124] Setting up ip3
I0428 19:42:09.184824 24995 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:09.184828 24995 net.cpp:139] Memory required for data: 815360
I0428 19:42:09.184839 24995 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:09.184844 24995 net.cpp:86] Creating Layer relu3
I0428 19:42:09.184847 24995 net.cpp:408] relu3 <- ip3
I0428 19:42:09.184852 24995 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:09.185042 24995 net.cpp:124] Setting up relu3
I0428 19:42:09.185052 24995 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:09.185056 24995 net.cpp:139] Memory required for data: 817920
I0428 19:42:09.185060 24995 layer_factory.hpp:77] Creating layer loss
I0428 19:42:09.185067 24995 net.cpp:86] Creating Layer loss
I0428 19:42:09.185070 24995 net.cpp:408] loss <- ip3
I0428 19:42:09.185075 24995 net.cpp:408] loss <- label
I0428 19:42:09.185081 24995 net.cpp:382] loss -> loss
I0428 19:42:09.185101 24995 layer_factory.hpp:77] Creating layer loss
I0428 19:42:09.185361 24995 net.cpp:124] Setting up loss
I0428 19:42:09.185372 24995 net.cpp:131] Top shape: (1)
I0428 19:42:09.185376 24995 net.cpp:134]     with loss weight 1
I0428 19:42:09.185392 24995 net.cpp:139] Memory required for data: 817924
I0428 19:42:09.185396 24995 net.cpp:200] loss needs backward computation.
I0428 19:42:09.185400 24995 net.cpp:200] relu3 needs backward computation.
I0428 19:42:09.185405 24995 net.cpp:200] ip3 needs backward computation.
I0428 19:42:09.185408 24995 net.cpp:200] relu2 needs backward computation.
I0428 19:42:09.185411 24995 net.cpp:200] ip2 needs backward computation.
I0428 19:42:09.185415 24995 net.cpp:200] relu1 needs backward computation.
I0428 19:42:09.185418 24995 net.cpp:200] ip1 needs backward computation.
I0428 19:42:09.185421 24995 net.cpp:200] pool1 needs backward computation.
I0428 19:42:09.185425 24995 net.cpp:200] conv1 needs backward computation.
I0428 19:42:09.185430 24995 net.cpp:200] pool0 needs backward computation.
I0428 19:42:09.185432 24995 net.cpp:200] conv0 needs backward computation.
I0428 19:42:09.185437 24995 net.cpp:202] mnist does not need backward computation.
I0428 19:42:09.185441 24995 net.cpp:244] This network produces output loss
I0428 19:42:09.185451 24995 net.cpp:257] Network initialization done.
I0428 19:42:09.185814 24995 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test385.prototxt
I0428 19:42:09.185844 24995 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:09.185950 24995 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:09.186058 24995 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:09.186110 24995 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:09.186125 24995 net.cpp:86] Creating Layer mnist
I0428 19:42:09.186130 24995 net.cpp:382] mnist -> data
I0428 19:42:09.186138 24995 net.cpp:382] mnist -> label
I0428 19:42:09.186239 24995 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:09.188335 24995 net.cpp:124] Setting up mnist
I0428 19:42:09.188350 24995 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:09.188356 24995 net.cpp:131] Top shape: 100 (100)
I0428 19:42:09.188359 24995 net.cpp:139] Memory required for data: 314000
I0428 19:42:09.188364 24995 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:09.188405 24995 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:09.188410 24995 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:09.188416 24995 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:09.188423 24995 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:09.188540 24995 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:09.188549 24995 net.cpp:131] Top shape: 100 (100)
I0428 19:42:09.188554 24995 net.cpp:131] Top shape: 100 (100)
I0428 19:42:09.188556 24995 net.cpp:139] Memory required for data: 314800
I0428 19:42:09.188560 24995 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:09.188570 24995 net.cpp:86] Creating Layer conv0
I0428 19:42:09.188575 24995 net.cpp:408] conv0 <- data
I0428 19:42:09.188581 24995 net.cpp:382] conv0 -> conv0
I0428 19:42:09.190379 24995 net.cpp:124] Setting up conv0
I0428 19:42:09.190394 24995 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:09.190399 24995 net.cpp:139] Memory required for data: 775600
I0428 19:42:09.190410 24995 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:09.190418 24995 net.cpp:86] Creating Layer pool0
I0428 19:42:09.190421 24995 net.cpp:408] pool0 <- conv0
I0428 19:42:09.190426 24995 net.cpp:382] pool0 -> pool0
I0428 19:42:09.190467 24995 net.cpp:124] Setting up pool0
I0428 19:42:09.190474 24995 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:09.190477 24995 net.cpp:139] Memory required for data: 890800
I0428 19:42:09.190480 24995 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:09.190490 24995 net.cpp:86] Creating Layer conv1
I0428 19:42:09.190493 24995 net.cpp:408] conv1 <- pool0
I0428 19:42:09.190500 24995 net.cpp:382] conv1 -> conv1
I0428 19:42:09.192159 24995 net.cpp:124] Setting up conv1
I0428 19:42:09.192174 24995 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:42:09.192179 24995 net.cpp:139] Memory required for data: 1146800
I0428 19:42:09.192190 24995 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:09.192204 24995 net.cpp:86] Creating Layer pool1
I0428 19:42:09.192209 24995 net.cpp:408] pool1 <- conv1
I0428 19:42:09.192215 24995 net.cpp:382] pool1 -> pool1
I0428 19:42:09.192256 24995 net.cpp:124] Setting up pool1
I0428 19:42:09.192268 24995 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:42:09.192271 24995 net.cpp:139] Memory required for data: 1210800
I0428 19:42:09.192275 24995 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:09.192289 24995 net.cpp:86] Creating Layer ip1
I0428 19:42:09.192293 24995 net.cpp:408] ip1 <- pool1
I0428 19:42:09.192304 24995 net.cpp:382] ip1 -> ip1
I0428 19:42:09.192466 24995 net.cpp:124] Setting up ip1
I0428 19:42:09.192476 24995 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:09.192493 24995 net.cpp:139] Memory required for data: 1230800
I0428 19:42:09.192502 24995 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:09.192508 24995 net.cpp:86] Creating Layer relu1
I0428 19:42:09.192512 24995 net.cpp:408] relu1 <- ip1
I0428 19:42:09.192517 24995 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:09.192698 24995 net.cpp:124] Setting up relu1
I0428 19:42:09.192708 24995 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:09.192711 24995 net.cpp:139] Memory required for data: 1250800
I0428 19:42:09.192715 24995 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:09.192723 24995 net.cpp:86] Creating Layer ip2
I0428 19:42:09.192728 24995 net.cpp:408] ip2 <- ip1
I0428 19:42:09.192734 24995 net.cpp:382] ip2 -> ip2
I0428 19:42:09.192867 24995 net.cpp:124] Setting up ip2
I0428 19:42:09.192875 24995 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:09.192878 24995 net.cpp:139] Memory required for data: 1260800
I0428 19:42:09.192884 24995 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:09.192889 24995 net.cpp:86] Creating Layer relu2
I0428 19:42:09.192893 24995 net.cpp:408] relu2 <- ip2
I0428 19:42:09.192898 24995 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:09.193079 24995 net.cpp:124] Setting up relu2
I0428 19:42:09.193089 24995 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:09.193092 24995 net.cpp:139] Memory required for data: 1270800
I0428 19:42:09.193096 24995 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:09.193102 24995 net.cpp:86] Creating Layer ip3
I0428 19:42:09.193114 24995 net.cpp:408] ip3 <- ip2
I0428 19:42:09.193120 24995 net.cpp:382] ip3 -> ip3
I0428 19:42:09.193280 24995 net.cpp:124] Setting up ip3
I0428 19:42:09.193289 24995 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:09.193292 24995 net.cpp:139] Memory required for data: 1274800
I0428 19:42:09.193300 24995 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:09.193307 24995 net.cpp:86] Creating Layer relu3
I0428 19:42:09.193310 24995 net.cpp:408] relu3 <- ip3
I0428 19:42:09.193315 24995 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:09.194208 24995 net.cpp:124] Setting up relu3
I0428 19:42:09.194222 24995 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:09.194226 24995 net.cpp:139] Memory required for data: 1278800
I0428 19:42:09.194231 24995 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:09.194236 24995 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:09.194253 24995 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:09.194260 24995 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:09.194267 24995 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:09.194311 24995 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:09.194319 24995 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:09.194324 24995 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:09.194326 24995 net.cpp:139] Memory required for data: 1286800
I0428 19:42:09.194329 24995 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:09.194335 24995 net.cpp:86] Creating Layer accuracy
I0428 19:42:09.194339 24995 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:09.194344 24995 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:09.194356 24995 net.cpp:382] accuracy -> accuracy
I0428 19:42:09.194363 24995 net.cpp:124] Setting up accuracy
I0428 19:42:09.194368 24995 net.cpp:131] Top shape: (1)
I0428 19:42:09.194371 24995 net.cpp:139] Memory required for data: 1286804
I0428 19:42:09.194375 24995 layer_factory.hpp:77] Creating layer loss
I0428 19:42:09.194380 24995 net.cpp:86] Creating Layer loss
I0428 19:42:09.194382 24995 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:09.194386 24995 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:09.194391 24995 net.cpp:382] loss -> loss
I0428 19:42:09.194397 24995 layer_factory.hpp:77] Creating layer loss
I0428 19:42:09.194669 24995 net.cpp:124] Setting up loss
I0428 19:42:09.194680 24995 net.cpp:131] Top shape: (1)
I0428 19:42:09.194684 24995 net.cpp:134]     with loss weight 1
I0428 19:42:09.194690 24995 net.cpp:139] Memory required for data: 1286808
I0428 19:42:09.194712 24995 net.cpp:200] loss needs backward computation.
I0428 19:42:09.194717 24995 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:09.194721 24995 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:09.194730 24995 net.cpp:200] relu3 needs backward computation.
I0428 19:42:09.194735 24995 net.cpp:200] ip3 needs backward computation.
I0428 19:42:09.194737 24995 net.cpp:200] relu2 needs backward computation.
I0428 19:42:09.194741 24995 net.cpp:200] ip2 needs backward computation.
I0428 19:42:09.194749 24995 net.cpp:200] relu1 needs backward computation.
I0428 19:42:09.194752 24995 net.cpp:200] ip1 needs backward computation.
I0428 19:42:09.194756 24995 net.cpp:200] pool1 needs backward computation.
I0428 19:42:09.194759 24995 net.cpp:200] conv1 needs backward computation.
I0428 19:42:09.194769 24995 net.cpp:200] pool0 needs backward computation.
I0428 19:42:09.194772 24995 net.cpp:200] conv0 needs backward computation.
I0428 19:42:09.194777 24995 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:09.194780 24995 net.cpp:202] mnist does not need backward computation.
I0428 19:42:09.194783 24995 net.cpp:244] This network produces output accuracy
I0428 19:42:09.194787 24995 net.cpp:244] This network produces output loss
I0428 19:42:09.194800 24995 net.cpp:257] Network initialization done.
I0428 19:42:09.194845 24995 solver.cpp:56] Solver scaffolding done.
I0428 19:42:09.195204 24995 caffe.cpp:248] Starting Optimization
I0428 19:42:09.195212 24995 solver.cpp:273] Solving LeNet
I0428 19:42:09.195215 24995 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:09.196188 24995 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:09.198570 24995 blocking_queue.cpp:49] Waiting for data
I0428 19:42:09.269634 25004 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:09.270084 24995 solver.cpp:398]     Test net output #0: accuracy = 0.0958
I0428 19:42:09.270102 24995 solver.cpp:398]     Test net output #1: loss = 2.31048 (* 1 = 2.31048 loss)
I0428 19:42:09.272006 24995 solver.cpp:219] Iteration 0 (-1.19674e-34 iter/s, 0.0767631s/100 iters), loss = 2.31139
I0428 19:42:09.272054 24995 solver.cpp:238]     Train net output #0: loss = 2.31139 (* 1 = 2.31139 loss)
I0428 19:42:09.272068 24995 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:09.348629 24995 solver.cpp:219] Iteration 100 (1305.87 iter/s, 0.0765773s/100 iters), loss = 1.00465
I0428 19:42:09.348660 24995 solver.cpp:238]     Train net output #0: loss = 1.00465 (* 1 = 1.00465 loss)
I0428 19:42:09.348666 24995 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:09.440358 24995 solver.cpp:219] Iteration 200 (1090.83 iter/s, 0.0916736s/100 iters), loss = 0.781596
I0428 19:42:09.440405 24995 solver.cpp:238]     Train net output #0: loss = 0.781596 (* 1 = 0.781596 loss)
I0428 19:42:09.440420 24995 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:09.527331 24995 solver.cpp:219] Iteration 300 (1150.52 iter/s, 0.0869171s/100 iters), loss = 0.486121
I0428 19:42:09.527364 24995 solver.cpp:238]     Train net output #0: loss = 0.486121 (* 1 = 0.486121 loss)
I0428 19:42:09.527371 24995 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:09.607852 24995 solver.cpp:219] Iteration 400 (1242.6 iter/s, 0.0804764s/100 iters), loss = 0.855931
I0428 19:42:09.607883 24995 solver.cpp:238]     Train net output #0: loss = 0.855931 (* 1 = 0.855931 loss)
I0428 19:42:09.607892 24995 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:09.702489 24995 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:09.778420 25004 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:09.778928 24995 solver.cpp:398]     Test net output #0: accuracy = 0.7783
I0428 19:42:09.778954 24995 solver.cpp:398]     Test net output #1: loss = 0.610106 (* 1 = 0.610106 loss)
I0428 19:42:09.779867 24995 solver.cpp:219] Iteration 500 (581.495 iter/s, 0.171971s/100 iters), loss = 0.910162
I0428 19:42:09.779909 24995 solver.cpp:238]     Train net output #0: loss = 0.910162 (* 1 = 0.910162 loss)
I0428 19:42:09.779938 24995 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:09.861624 24995 solver.cpp:219] Iteration 600 (1224.01 iter/s, 0.0816988s/100 iters), loss = 0.212217
I0428 19:42:09.861656 24995 solver.cpp:238]     Train net output #0: loss = 0.212217 (* 1 = 0.212217 loss)
I0428 19:42:09.861665 24995 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:09.942203 24995 solver.cpp:219] Iteration 700 (1241.7 iter/s, 0.0805344s/100 iters), loss = 0.390039
I0428 19:42:09.942234 24995 solver.cpp:238]     Train net output #0: loss = 0.390039 (* 1 = 0.390039 loss)
I0428 19:42:09.942243 24995 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:10.023489 24995 solver.cpp:219] Iteration 800 (1230.96 iter/s, 0.0812371s/100 iters), loss = 0.565397
I0428 19:42:10.023520 24995 solver.cpp:238]     Train net output #0: loss = 0.565397 (* 1 = 0.565397 loss)
I0428 19:42:10.023528 24995 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:10.103523 24995 solver.cpp:219] Iteration 900 (1250.16 iter/s, 0.0799898s/100 iters), loss = 0.330001
I0428 19:42:10.103554 24995 solver.cpp:238]     Train net output #0: loss = 0.330001 (* 1 = 0.330001 loss)
I0428 19:42:10.103561 24995 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:10.130218 25001 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:10.183004 24995 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:10.183877 24995 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:10.184401 24995 solver.cpp:311] Iteration 1000, loss = 0.333743
I0428 19:42:10.184419 24995 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:10.259016 25004 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:10.259626 24995 solver.cpp:398]     Test net output #0: accuracy = 0.871
I0428 19:42:10.259660 24995 solver.cpp:398]     Test net output #1: loss = 0.348355 (* 1 = 0.348355 loss)
I0428 19:42:10.259668 24995 solver.cpp:316] Optimization Done.
I0428 19:42:10.259673 24995 caffe.cpp:259] Optimization Done.
