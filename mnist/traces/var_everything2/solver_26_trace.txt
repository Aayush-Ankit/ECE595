I0428 19:28:27.649428 21634 caffe.cpp:218] Using GPUs 0
I0428 19:28:27.689630 21634 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:28.207341 21634 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test26.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:28.207478 21634 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test26.prototxt
I0428 19:28:28.207794 21634 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:28.207810 21634 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:28.207885 21634 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:28.207953 21634 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:28.208052 21634 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:28.208076 21634 net.cpp:86] Creating Layer mnist
I0428 19:28:28.208086 21634 net.cpp:382] mnist -> data
I0428 19:28:28.208107 21634 net.cpp:382] mnist -> label
I0428 19:28:28.209203 21634 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:28.211655 21634 net.cpp:124] Setting up mnist
I0428 19:28:28.211674 21634 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:28.211680 21634 net.cpp:131] Top shape: 64 (64)
I0428 19:28:28.211684 21634 net.cpp:139] Memory required for data: 200960
I0428 19:28:28.211691 21634 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:28.211709 21634 net.cpp:86] Creating Layer ip1
I0428 19:28:28.211716 21634 net.cpp:408] ip1 <- data
I0428 19:28:28.211726 21634 net.cpp:382] ip1 -> ip1
I0428 19:28:28.212055 21634 net.cpp:124] Setting up ip1
I0428 19:28:28.212066 21634 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:28.212070 21634 net.cpp:139] Memory required for data: 207360
I0428 19:28:28.212083 21634 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:28.212093 21634 net.cpp:86] Creating Layer relu1
I0428 19:28:28.212098 21634 net.cpp:408] relu1 <- ip1
I0428 19:28:28.212106 21634 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:28.492223 21634 net.cpp:124] Setting up relu1
I0428 19:28:28.492252 21634 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:28.492256 21634 net.cpp:139] Memory required for data: 213760
I0428 19:28:28.492262 21634 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:28.492275 21634 net.cpp:86] Creating Layer ip2
I0428 19:28:28.492298 21634 net.cpp:408] ip2 <- ip1
I0428 19:28:28.492306 21634 net.cpp:382] ip2 -> ip2
I0428 19:28:28.493297 21634 net.cpp:124] Setting up ip2
I0428 19:28:28.493310 21634 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:28.493314 21634 net.cpp:139] Memory required for data: 220160
I0428 19:28:28.493324 21634 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:28.493332 21634 net.cpp:86] Creating Layer relu2
I0428 19:28:28.493335 21634 net.cpp:408] relu2 <- ip2
I0428 19:28:28.493340 21634 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:28.494048 21634 net.cpp:124] Setting up relu2
I0428 19:28:28.494060 21634 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:28.494063 21634 net.cpp:139] Memory required for data: 226560
I0428 19:28:28.494066 21634 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:28.494074 21634 net.cpp:86] Creating Layer ip3
I0428 19:28:28.494078 21634 net.cpp:408] ip3 <- ip2
I0428 19:28:28.494083 21634 net.cpp:382] ip3 -> ip3
I0428 19:28:28.494177 21634 net.cpp:124] Setting up ip3
I0428 19:28:28.494185 21634 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:28.494189 21634 net.cpp:139] Memory required for data: 229120
I0428 19:28:28.494196 21634 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:28.494201 21634 net.cpp:86] Creating Layer relu3
I0428 19:28:28.494204 21634 net.cpp:408] relu3 <- ip3
I0428 19:28:28.494210 21634 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:28.494355 21634 net.cpp:124] Setting up relu3
I0428 19:28:28.494364 21634 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:28.494366 21634 net.cpp:139] Memory required for data: 231680
I0428 19:28:28.494370 21634 layer_factory.hpp:77] Creating layer loss
I0428 19:28:28.494375 21634 net.cpp:86] Creating Layer loss
I0428 19:28:28.494379 21634 net.cpp:408] loss <- ip3
I0428 19:28:28.494384 21634 net.cpp:408] loss <- label
I0428 19:28:28.494390 21634 net.cpp:382] loss -> loss
I0428 19:28:28.494407 21634 layer_factory.hpp:77] Creating layer loss
I0428 19:28:28.494632 21634 net.cpp:124] Setting up loss
I0428 19:28:28.494642 21634 net.cpp:131] Top shape: (1)
I0428 19:28:28.494645 21634 net.cpp:134]     with loss weight 1
I0428 19:28:28.494659 21634 net.cpp:139] Memory required for data: 231684
I0428 19:28:28.494663 21634 net.cpp:200] loss needs backward computation.
I0428 19:28:28.494668 21634 net.cpp:200] relu3 needs backward computation.
I0428 19:28:28.494670 21634 net.cpp:200] ip3 needs backward computation.
I0428 19:28:28.494673 21634 net.cpp:200] relu2 needs backward computation.
I0428 19:28:28.494676 21634 net.cpp:200] ip2 needs backward computation.
I0428 19:28:28.494679 21634 net.cpp:200] relu1 needs backward computation.
I0428 19:28:28.494681 21634 net.cpp:200] ip1 needs backward computation.
I0428 19:28:28.494685 21634 net.cpp:202] mnist does not need backward computation.
I0428 19:28:28.494688 21634 net.cpp:244] This network produces output loss
I0428 19:28:28.494694 21634 net.cpp:257] Network initialization done.
I0428 19:28:28.494918 21634 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test26.prototxt
I0428 19:28:28.494940 21634 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:28.495005 21634 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:28.495074 21634 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:28.495117 21634 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:28.495131 21634 net.cpp:86] Creating Layer mnist
I0428 19:28:28.495136 21634 net.cpp:382] mnist -> data
I0428 19:28:28.495143 21634 net.cpp:382] mnist -> label
I0428 19:28:28.495224 21634 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:28.497274 21634 net.cpp:124] Setting up mnist
I0428 19:28:28.497287 21634 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:28.497292 21634 net.cpp:131] Top shape: 100 (100)
I0428 19:28:28.497295 21634 net.cpp:139] Memory required for data: 314000
I0428 19:28:28.497299 21634 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:28.497310 21634 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:28.497314 21634 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:28.497318 21634 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:28.497324 21634 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:28.497385 21634 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:28.497391 21634 net.cpp:131] Top shape: 100 (100)
I0428 19:28:28.497395 21634 net.cpp:131] Top shape: 100 (100)
I0428 19:28:28.497397 21634 net.cpp:139] Memory required for data: 314800
I0428 19:28:28.497400 21634 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:28.497408 21634 net.cpp:86] Creating Layer ip1
I0428 19:28:28.497411 21634 net.cpp:408] ip1 <- data
I0428 19:28:28.497416 21634 net.cpp:382] ip1 -> ip1
I0428 19:28:28.497647 21634 net.cpp:124] Setting up ip1
I0428 19:28:28.497663 21634 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:28.497665 21634 net.cpp:139] Memory required for data: 324800
I0428 19:28:28.497674 21634 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:28.497680 21634 net.cpp:86] Creating Layer relu1
I0428 19:28:28.497684 21634 net.cpp:408] relu1 <- ip1
I0428 19:28:28.497689 21634 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:28.498700 21634 net.cpp:124] Setting up relu1
I0428 19:28:28.498729 21634 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:28.498733 21634 net.cpp:139] Memory required for data: 334800
I0428 19:28:28.498736 21634 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:28.498761 21634 net.cpp:86] Creating Layer ip2
I0428 19:28:28.498765 21634 net.cpp:408] ip2 <- ip1
I0428 19:28:28.498772 21634 net.cpp:382] ip2 -> ip2
I0428 19:28:28.498914 21634 net.cpp:124] Setting up ip2
I0428 19:28:28.498922 21634 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:28.498925 21634 net.cpp:139] Memory required for data: 344800
I0428 19:28:28.498950 21634 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:28.498956 21634 net.cpp:86] Creating Layer relu2
I0428 19:28:28.498960 21634 net.cpp:408] relu2 <- ip2
I0428 19:28:28.498965 21634 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:28.499135 21634 net.cpp:124] Setting up relu2
I0428 19:28:28.499143 21634 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:28.499146 21634 net.cpp:139] Memory required for data: 354800
I0428 19:28:28.499150 21634 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:28.499156 21634 net.cpp:86] Creating Layer ip3
I0428 19:28:28.499160 21634 net.cpp:408] ip3 <- ip2
I0428 19:28:28.499166 21634 net.cpp:382] ip3 -> ip3
I0428 19:28:28.499279 21634 net.cpp:124] Setting up ip3
I0428 19:28:28.499289 21634 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:28.499291 21634 net.cpp:139] Memory required for data: 358800
I0428 19:28:28.499300 21634 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:28.499305 21634 net.cpp:86] Creating Layer relu3
I0428 19:28:28.499308 21634 net.cpp:408] relu3 <- ip3
I0428 19:28:28.499313 21634 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:28.499475 21634 net.cpp:124] Setting up relu3
I0428 19:28:28.499485 21634 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:28.499488 21634 net.cpp:139] Memory required for data: 362800
I0428 19:28:28.499491 21634 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:28.499498 21634 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:28.499501 21634 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:28.499522 21634 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:28.499529 21634 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:28.499574 21634 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:28.499581 21634 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:28.499586 21634 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:28.499589 21634 net.cpp:139] Memory required for data: 370800
I0428 19:28:28.499593 21634 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:28.499599 21634 net.cpp:86] Creating Layer accuracy
I0428 19:28:28.499603 21634 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:28.499608 21634 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:28.499611 21634 net.cpp:382] accuracy -> accuracy
I0428 19:28:28.499624 21634 net.cpp:124] Setting up accuracy
I0428 19:28:28.499627 21634 net.cpp:131] Top shape: (1)
I0428 19:28:28.499630 21634 net.cpp:139] Memory required for data: 370804
I0428 19:28:28.499634 21634 layer_factory.hpp:77] Creating layer loss
I0428 19:28:28.499640 21634 net.cpp:86] Creating Layer loss
I0428 19:28:28.499644 21634 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:28.499647 21634 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:28.499652 21634 net.cpp:382] loss -> loss
I0428 19:28:28.499660 21634 layer_factory.hpp:77] Creating layer loss
I0428 19:28:28.500021 21634 net.cpp:124] Setting up loss
I0428 19:28:28.500030 21634 net.cpp:131] Top shape: (1)
I0428 19:28:28.500046 21634 net.cpp:134]     with loss weight 1
I0428 19:28:28.500052 21634 net.cpp:139] Memory required for data: 370808
I0428 19:28:28.500056 21634 net.cpp:200] loss needs backward computation.
I0428 19:28:28.500061 21634 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:28.500066 21634 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:28.500069 21634 net.cpp:200] relu3 needs backward computation.
I0428 19:28:28.500073 21634 net.cpp:200] ip3 needs backward computation.
I0428 19:28:28.500077 21634 net.cpp:200] relu2 needs backward computation.
I0428 19:28:28.500079 21634 net.cpp:200] ip2 needs backward computation.
I0428 19:28:28.500083 21634 net.cpp:200] relu1 needs backward computation.
I0428 19:28:28.500087 21634 net.cpp:200] ip1 needs backward computation.
I0428 19:28:28.500089 21634 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:28.500093 21634 net.cpp:202] mnist does not need backward computation.
I0428 19:28:28.500097 21634 net.cpp:244] This network produces output accuracy
I0428 19:28:28.500100 21634 net.cpp:244] This network produces output loss
I0428 19:28:28.500111 21634 net.cpp:257] Network initialization done.
I0428 19:28:28.500144 21634 solver.cpp:56] Solver scaffolding done.
I0428 19:28:28.500350 21634 caffe.cpp:248] Starting Optimization
I0428 19:28:28.500356 21634 solver.cpp:273] Solving LeNet
I0428 19:28:28.500360 21634 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:28.501227 21634 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:28.502771 21634 blocking_queue.cpp:49] Waiting for data
I0428 19:28:28.577489 21641 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:28.578055 21634 solver.cpp:398]     Test net output #0: accuracy = 0.0921
I0428 19:28:28.578109 21634 solver.cpp:398]     Test net output #1: loss = 2.31285 (* 1 = 2.31285 loss)
I0428 19:28:28.579222 21634 solver.cpp:219] Iteration 0 (-1.52198e-31 iter/s, 0.0788296s/100 iters), loss = 2.31937
I0428 19:28:28.579265 21634 solver.cpp:238]     Train net output #0: loss = 2.31937 (* 1 = 2.31937 loss)
I0428 19:28:28.579289 21634 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:28.645087 21634 solver.cpp:219] Iteration 100 (1519.75 iter/s, 0.0658002s/100 iters), loss = 1.65944
I0428 19:28:28.645145 21634 solver.cpp:238]     Train net output #0: loss = 1.65944 (* 1 = 1.65944 loss)
I0428 19:28:28.645156 21634 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:28.701364 21634 solver.cpp:219] Iteration 200 (1779 iter/s, 0.0562113s/100 iters), loss = 1.38828
I0428 19:28:28.701397 21634 solver.cpp:238]     Train net output #0: loss = 1.38828 (* 1 = 1.38828 loss)
I0428 19:28:28.701406 21634 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:28.757771 21634 solver.cpp:219] Iteration 300 (1774.06 iter/s, 0.056368s/100 iters), loss = 0.732038
I0428 19:28:28.757802 21634 solver.cpp:238]     Train net output #0: loss = 0.732038 (* 1 = 0.732038 loss)
I0428 19:28:28.757810 21634 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:28.813895 21634 solver.cpp:219] Iteration 400 (1783.19 iter/s, 0.0560794s/100 iters), loss = 0.662044
I0428 19:28:28.813948 21634 solver.cpp:238]     Train net output #0: loss = 0.662044 (* 1 = 0.662044 loss)
I0428 19:28:28.813962 21634 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:28.877373 21634 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:28.955312 21641 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:28.955821 21634 solver.cpp:398]     Test net output #0: accuracy = 0.7114
I0428 19:28:28.955858 21634 solver.cpp:398]     Test net output #1: loss = 0.78218 (* 1 = 0.78218 loss)
I0428 19:28:28.956466 21634 solver.cpp:219] Iteration 500 (701.71 iter/s, 0.142509s/100 iters), loss = 0.870724
I0428 19:28:28.956503 21634 solver.cpp:238]     Train net output #0: loss = 0.870724 (* 1 = 0.870724 loss)
I0428 19:28:28.956518 21634 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:29.018370 21634 solver.cpp:219] Iteration 600 (1616.66 iter/s, 0.0618557s/100 iters), loss = 0.889845
I0428 19:28:29.018462 21634 solver.cpp:238]     Train net output #0: loss = 0.889845 (* 1 = 0.889845 loss)
I0428 19:28:29.018482 21634 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:29.083540 21634 solver.cpp:219] Iteration 700 (1536.59 iter/s, 0.0650791s/100 iters), loss = 0.735882
I0428 19:28:29.083580 21634 solver.cpp:238]     Train net output #0: loss = 0.735882 (* 1 = 0.735882 loss)
I0428 19:28:29.083590 21634 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:29.143028 21634 solver.cpp:219] Iteration 800 (1682.39 iter/s, 0.0594391s/100 iters), loss = 0.76105
I0428 19:28:29.143059 21634 solver.cpp:238]     Train net output #0: loss = 0.76105 (* 1 = 0.76105 loss)
I0428 19:28:29.143067 21634 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:29.203688 21634 solver.cpp:219] Iteration 900 (1649.68 iter/s, 0.0606177s/100 iters), loss = 0.689101
I0428 19:28:29.203737 21634 solver.cpp:238]     Train net output #0: loss = 0.689101 (* 1 = 0.689101 loss)
I0428 19:28:29.203747 21634 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:29.224568 21640 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:29.260360 21634 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:29.261325 21634 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:29.261934 21634 solver.cpp:311] Iteration 1000, loss = 0.705457
I0428 19:28:29.261955 21634 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:29.343148 21641 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:29.343724 21634 solver.cpp:398]     Test net output #0: accuracy = 0.7311
I0428 19:28:29.343762 21634 solver.cpp:398]     Test net output #1: loss = 0.703435 (* 1 = 0.703435 loss)
I0428 19:28:29.343772 21634 solver.cpp:316] Optimization Done.
I0428 19:28:29.343778 21634 caffe.cpp:259] Optimization Done.
