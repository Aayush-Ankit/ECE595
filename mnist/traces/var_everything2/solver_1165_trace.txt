I0428 20:11:43.035774 32127 caffe.cpp:218] Using GPUs 0
I0428 20:11:43.067716 32127 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:43.576472 32127 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1165.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:43.576618 32127 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1165.prototxt
I0428 20:11:43.577057 32127 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:43.577077 32127 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:43.577180 32127 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:43.577260 32127 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:43.577359 32127 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:43.577385 32127 net.cpp:86] Creating Layer mnist
I0428 20:11:43.577395 32127 net.cpp:382] mnist -> data
I0428 20:11:43.577417 32127 net.cpp:382] mnist -> label
I0428 20:11:43.578505 32127 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:43.580958 32127 net.cpp:124] Setting up mnist
I0428 20:11:43.580991 32127 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:43.580997 32127 net.cpp:131] Top shape: 64 (64)
I0428 20:11:43.581001 32127 net.cpp:139] Memory required for data: 200960
I0428 20:11:43.581008 32127 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:43.581027 32127 net.cpp:86] Creating Layer conv0
I0428 20:11:43.581048 32127 net.cpp:408] conv0 <- data
I0428 20:11:43.581059 32127 net.cpp:382] conv0 -> conv0
I0428 20:11:43.829296 32127 net.cpp:124] Setting up conv0
I0428 20:11:43.829337 32127 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:43.829341 32127 net.cpp:139] Memory required for data: 3887360
I0428 20:11:43.829371 32127 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:43.829399 32127 net.cpp:86] Creating Layer pool0
I0428 20:11:43.829404 32127 net.cpp:408] pool0 <- conv0
I0428 20:11:43.829409 32127 net.cpp:382] pool0 -> pool0
I0428 20:11:43.829452 32127 net.cpp:124] Setting up pool0
I0428 20:11:43.829459 32127 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:43.829463 32127 net.cpp:139] Memory required for data: 4808960
I0428 20:11:43.829466 32127 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:43.829476 32127 net.cpp:86] Creating Layer conv1
I0428 20:11:43.829479 32127 net.cpp:408] conv1 <- pool0
I0428 20:11:43.829484 32127 net.cpp:382] conv1 -> conv1
I0428 20:11:43.831466 32127 net.cpp:124] Setting up conv1
I0428 20:11:43.831480 32127 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:43.831485 32127 net.cpp:139] Memory required for data: 5628160
I0428 20:11:43.831493 32127 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:43.831501 32127 net.cpp:86] Creating Layer pool1
I0428 20:11:43.831504 32127 net.cpp:408] pool1 <- conv1
I0428 20:11:43.831508 32127 net.cpp:382] pool1 -> pool1
I0428 20:11:43.831558 32127 net.cpp:124] Setting up pool1
I0428 20:11:43.831564 32127 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:43.831568 32127 net.cpp:139] Memory required for data: 5832960
I0428 20:11:43.831570 32127 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:43.831578 32127 net.cpp:86] Creating Layer ip1
I0428 20:11:43.831580 32127 net.cpp:408] ip1 <- pool1
I0428 20:11:43.831584 32127 net.cpp:382] ip1 -> ip1
I0428 20:11:43.831892 32127 net.cpp:124] Setting up ip1
I0428 20:11:43.831898 32127 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:43.831902 32127 net.cpp:139] Memory required for data: 5845760
I0428 20:11:43.831908 32127 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:43.831913 32127 net.cpp:86] Creating Layer relu1
I0428 20:11:43.831917 32127 net.cpp:408] relu1 <- ip1
I0428 20:11:43.831920 32127 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:43.832075 32127 net.cpp:124] Setting up relu1
I0428 20:11:43.832083 32127 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:43.832087 32127 net.cpp:139] Memory required for data: 5858560
I0428 20:11:43.832089 32127 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:43.832095 32127 net.cpp:86] Creating Layer ip2
I0428 20:11:43.832098 32127 net.cpp:408] ip2 <- ip1
I0428 20:11:43.832103 32127 net.cpp:382] ip2 -> ip2
I0428 20:11:43.833083 32127 net.cpp:124] Setting up ip2
I0428 20:11:43.833112 32127 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:43.833115 32127 net.cpp:139] Memory required for data: 5864960
I0428 20:11:43.833122 32127 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:43.833129 32127 net.cpp:86] Creating Layer relu2
I0428 20:11:43.833132 32127 net.cpp:408] relu2 <- ip2
I0428 20:11:43.833137 32127 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:43.833902 32127 net.cpp:124] Setting up relu2
I0428 20:11:43.833914 32127 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:43.833920 32127 net.cpp:139] Memory required for data: 5871360
I0428 20:11:43.833922 32127 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:43.833930 32127 net.cpp:86] Creating Layer ip3
I0428 20:11:43.833932 32127 net.cpp:408] ip3 <- ip2
I0428 20:11:43.833937 32127 net.cpp:382] ip3 -> ip3
I0428 20:11:43.834030 32127 net.cpp:124] Setting up ip3
I0428 20:11:43.834038 32127 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:43.834040 32127 net.cpp:139] Memory required for data: 5873920
I0428 20:11:43.834048 32127 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:43.834053 32127 net.cpp:86] Creating Layer relu3
I0428 20:11:43.834055 32127 net.cpp:408] relu3 <- ip3
I0428 20:11:43.834059 32127 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:43.834246 32127 net.cpp:124] Setting up relu3
I0428 20:11:43.834254 32127 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:43.834257 32127 net.cpp:139] Memory required for data: 5876480
I0428 20:11:43.834260 32127 layer_factory.hpp:77] Creating layer loss
I0428 20:11:43.834266 32127 net.cpp:86] Creating Layer loss
I0428 20:11:43.834270 32127 net.cpp:408] loss <- ip3
I0428 20:11:43.834273 32127 net.cpp:408] loss <- label
I0428 20:11:43.834278 32127 net.cpp:382] loss -> loss
I0428 20:11:43.834295 32127 layer_factory.hpp:77] Creating layer loss
I0428 20:11:43.834532 32127 net.cpp:124] Setting up loss
I0428 20:11:43.834542 32127 net.cpp:131] Top shape: (1)
I0428 20:11:43.834544 32127 net.cpp:134]     with loss weight 1
I0428 20:11:43.834558 32127 net.cpp:139] Memory required for data: 5876484
I0428 20:11:43.834561 32127 net.cpp:200] loss needs backward computation.
I0428 20:11:43.834564 32127 net.cpp:200] relu3 needs backward computation.
I0428 20:11:43.834568 32127 net.cpp:200] ip3 needs backward computation.
I0428 20:11:43.834570 32127 net.cpp:200] relu2 needs backward computation.
I0428 20:11:43.834573 32127 net.cpp:200] ip2 needs backward computation.
I0428 20:11:43.834575 32127 net.cpp:200] relu1 needs backward computation.
I0428 20:11:43.834578 32127 net.cpp:200] ip1 needs backward computation.
I0428 20:11:43.834580 32127 net.cpp:200] pool1 needs backward computation.
I0428 20:11:43.834583 32127 net.cpp:200] conv1 needs backward computation.
I0428 20:11:43.834586 32127 net.cpp:200] pool0 needs backward computation.
I0428 20:11:43.834589 32127 net.cpp:200] conv0 needs backward computation.
I0428 20:11:43.834592 32127 net.cpp:202] mnist does not need backward computation.
I0428 20:11:43.834595 32127 net.cpp:244] This network produces output loss
I0428 20:11:43.834604 32127 net.cpp:257] Network initialization done.
I0428 20:11:43.834951 32127 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1165.prototxt
I0428 20:11:43.834977 32127 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:43.835064 32127 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:43.835137 32127 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:43.835180 32127 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:43.835193 32127 net.cpp:86] Creating Layer mnist
I0428 20:11:43.835197 32127 net.cpp:382] mnist -> data
I0428 20:11:43.835204 32127 net.cpp:382] mnist -> label
I0428 20:11:43.835295 32127 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:43.837430 32127 net.cpp:124] Setting up mnist
I0428 20:11:43.837473 32127 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:43.837478 32127 net.cpp:131] Top shape: 100 (100)
I0428 20:11:43.837481 32127 net.cpp:139] Memory required for data: 314000
I0428 20:11:43.837486 32127 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:43.837498 32127 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:43.837502 32127 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:43.837507 32127 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:43.837513 32127 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:43.837654 32127 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:43.837677 32127 net.cpp:131] Top shape: 100 (100)
I0428 20:11:43.837682 32127 net.cpp:131] Top shape: 100 (100)
I0428 20:11:43.837684 32127 net.cpp:139] Memory required for data: 314800
I0428 20:11:43.837688 32127 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:43.837697 32127 net.cpp:86] Creating Layer conv0
I0428 20:11:43.837700 32127 net.cpp:408] conv0 <- data
I0428 20:11:43.837705 32127 net.cpp:382] conv0 -> conv0
I0428 20:11:43.839411 32127 net.cpp:124] Setting up conv0
I0428 20:11:43.839423 32127 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:43.839442 32127 net.cpp:139] Memory required for data: 6074800
I0428 20:11:43.839465 32127 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:43.839473 32127 net.cpp:86] Creating Layer pool0
I0428 20:11:43.839475 32127 net.cpp:408] pool0 <- conv0
I0428 20:11:43.839479 32127 net.cpp:382] pool0 -> pool0
I0428 20:11:43.839514 32127 net.cpp:124] Setting up pool0
I0428 20:11:43.839519 32127 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:43.839521 32127 net.cpp:139] Memory required for data: 7514800
I0428 20:11:43.839524 32127 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:43.839531 32127 net.cpp:86] Creating Layer conv1
I0428 20:11:43.839535 32127 net.cpp:408] conv1 <- pool0
I0428 20:11:43.839540 32127 net.cpp:382] conv1 -> conv1
I0428 20:11:43.841435 32127 net.cpp:124] Setting up conv1
I0428 20:11:43.841447 32127 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:43.841451 32127 net.cpp:139] Memory required for data: 8794800
I0428 20:11:43.841459 32127 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:43.841464 32127 net.cpp:86] Creating Layer pool1
I0428 20:11:43.841467 32127 net.cpp:408] pool1 <- conv1
I0428 20:11:43.841472 32127 net.cpp:382] pool1 -> pool1
I0428 20:11:43.841526 32127 net.cpp:124] Setting up pool1
I0428 20:11:43.841531 32127 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:43.841533 32127 net.cpp:139] Memory required for data: 9114800
I0428 20:11:43.841536 32127 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:43.841542 32127 net.cpp:86] Creating Layer ip1
I0428 20:11:43.841545 32127 net.cpp:408] ip1 <- pool1
I0428 20:11:43.841550 32127 net.cpp:382] ip1 -> ip1
I0428 20:11:43.841953 32127 net.cpp:124] Setting up ip1
I0428 20:11:43.841962 32127 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:43.841977 32127 net.cpp:139] Memory required for data: 9134800
I0428 20:11:43.841986 32127 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:43.841991 32127 net.cpp:86] Creating Layer relu1
I0428 20:11:43.841995 32127 net.cpp:408] relu1 <- ip1
I0428 20:11:43.842000 32127 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:43.842180 32127 net.cpp:124] Setting up relu1
I0428 20:11:43.842190 32127 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:43.842192 32127 net.cpp:139] Memory required for data: 9154800
I0428 20:11:43.842195 32127 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:43.842203 32127 net.cpp:86] Creating Layer ip2
I0428 20:11:43.842206 32127 net.cpp:408] ip2 <- ip1
I0428 20:11:43.842211 32127 net.cpp:382] ip2 -> ip2
I0428 20:11:43.842334 32127 net.cpp:124] Setting up ip2
I0428 20:11:43.842356 32127 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:43.842360 32127 net.cpp:139] Memory required for data: 9164800
I0428 20:11:43.842365 32127 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:43.842368 32127 net.cpp:86] Creating Layer relu2
I0428 20:11:43.842371 32127 net.cpp:408] relu2 <- ip2
I0428 20:11:43.842375 32127 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:43.842576 32127 net.cpp:124] Setting up relu2
I0428 20:11:43.842583 32127 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:43.842586 32127 net.cpp:139] Memory required for data: 9174800
I0428 20:11:43.842589 32127 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:43.842594 32127 net.cpp:86] Creating Layer ip3
I0428 20:11:43.842597 32127 net.cpp:408] ip3 <- ip2
I0428 20:11:43.842602 32127 net.cpp:382] ip3 -> ip3
I0428 20:11:43.842720 32127 net.cpp:124] Setting up ip3
I0428 20:11:43.842726 32127 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:43.842730 32127 net.cpp:139] Memory required for data: 9178800
I0428 20:11:43.842737 32127 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:43.842742 32127 net.cpp:86] Creating Layer relu3
I0428 20:11:43.842746 32127 net.cpp:408] relu3 <- ip3
I0428 20:11:43.842764 32127 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:43.843629 32127 net.cpp:124] Setting up relu3
I0428 20:11:43.843641 32127 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:43.843660 32127 net.cpp:139] Memory required for data: 9182800
I0428 20:11:43.843663 32127 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:43.843669 32127 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:43.843673 32127 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:43.843678 32127 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:43.843684 32127 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:43.843732 32127 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:43.843739 32127 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:43.843742 32127 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:43.843745 32127 net.cpp:139] Memory required for data: 9190800
I0428 20:11:43.843749 32127 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:43.843753 32127 net.cpp:86] Creating Layer accuracy
I0428 20:11:43.843756 32127 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:43.843760 32127 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:43.843765 32127 net.cpp:382] accuracy -> accuracy
I0428 20:11:43.843771 32127 net.cpp:124] Setting up accuracy
I0428 20:11:43.843776 32127 net.cpp:131] Top shape: (1)
I0428 20:11:43.843778 32127 net.cpp:139] Memory required for data: 9190804
I0428 20:11:43.843781 32127 layer_factory.hpp:77] Creating layer loss
I0428 20:11:43.843786 32127 net.cpp:86] Creating Layer loss
I0428 20:11:43.843789 32127 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:43.843793 32127 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:43.843798 32127 net.cpp:382] loss -> loss
I0428 20:11:43.843804 32127 layer_factory.hpp:77] Creating layer loss
I0428 20:11:43.844043 32127 net.cpp:124] Setting up loss
I0428 20:11:43.844051 32127 net.cpp:131] Top shape: (1)
I0428 20:11:43.844055 32127 net.cpp:134]     with loss weight 1
I0428 20:11:43.844071 32127 net.cpp:139] Memory required for data: 9190808
I0428 20:11:43.844075 32127 net.cpp:200] loss needs backward computation.
I0428 20:11:43.844079 32127 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:43.844084 32127 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:43.844086 32127 net.cpp:200] relu3 needs backward computation.
I0428 20:11:43.844089 32127 net.cpp:200] ip3 needs backward computation.
I0428 20:11:43.844092 32127 net.cpp:200] relu2 needs backward computation.
I0428 20:11:43.844095 32127 net.cpp:200] ip2 needs backward computation.
I0428 20:11:43.844105 32127 net.cpp:200] relu1 needs backward computation.
I0428 20:11:43.844106 32127 net.cpp:200] ip1 needs backward computation.
I0428 20:11:43.844110 32127 net.cpp:200] pool1 needs backward computation.
I0428 20:11:43.844125 32127 net.cpp:200] conv1 needs backward computation.
I0428 20:11:43.844127 32127 net.cpp:200] pool0 needs backward computation.
I0428 20:11:43.844130 32127 net.cpp:200] conv0 needs backward computation.
I0428 20:11:43.844138 32127 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:43.844142 32127 net.cpp:202] mnist does not need backward computation.
I0428 20:11:43.844146 32127 net.cpp:244] This network produces output accuracy
I0428 20:11:43.844148 32127 net.cpp:244] This network produces output loss
I0428 20:11:43.844173 32127 net.cpp:257] Network initialization done.
I0428 20:11:43.844214 32127 solver.cpp:56] Solver scaffolding done.
I0428 20:11:43.844554 32127 caffe.cpp:248] Starting Optimization
I0428 20:11:43.844560 32127 solver.cpp:273] Solving LeNet
I0428 20:11:43.844563 32127 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:43.845429 32127 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:43.851923 32127 blocking_queue.cpp:49] Waiting for data
I0428 20:11:43.921901 32134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:43.922531 32127 solver.cpp:398]     Test net output #0: accuracy = 0.1191
I0428 20:11:43.922565 32127 solver.cpp:398]     Test net output #1: loss = 2.31029 (* 1 = 2.31029 loss)
I0428 20:11:43.926349 32127 solver.cpp:219] Iteration 0 (-1.40209e-30 iter/s, 0.0817624s/100 iters), loss = 2.30481
I0428 20:11:43.926383 32127 solver.cpp:238]     Train net output #0: loss = 2.30481 (* 1 = 2.30481 loss)
I0428 20:11:43.926394 32127 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:44.051043 32127 solver.cpp:219] Iteration 100 (802.19 iter/s, 0.124659s/100 iters), loss = 0.711385
I0428 20:11:44.051084 32127 solver.cpp:238]     Train net output #0: loss = 0.711385 (* 1 = 0.711385 loss)
I0428 20:11:44.051091 32127 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:44.170945 32127 solver.cpp:219] Iteration 200 (834.277 iter/s, 0.119864s/100 iters), loss = 0.364482
I0428 20:11:44.170985 32127 solver.cpp:238]     Train net output #0: loss = 0.364482 (* 1 = 0.364482 loss)
I0428 20:11:44.170991 32127 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:44.290791 32127 solver.cpp:219] Iteration 300 (834.668 iter/s, 0.119808s/100 iters), loss = 0.357756
I0428 20:11:44.290830 32127 solver.cpp:238]     Train net output #0: loss = 0.357756 (* 1 = 0.357756 loss)
I0428 20:11:44.290837 32127 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:44.411139 32127 solver.cpp:219] Iteration 400 (831.266 iter/s, 0.120298s/100 iters), loss = 0.575923
I0428 20:11:44.411177 32127 solver.cpp:238]     Train net output #0: loss = 0.575923 (* 1 = 0.575923 loss)
I0428 20:11:44.411182 32127 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:44.531589 32127 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:44.587127 32134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:44.588807 32127 solver.cpp:398]     Test net output #0: accuracy = 0.8712
I0428 20:11:44.588834 32127 solver.cpp:398]     Test net output #1: loss = 0.339448 (* 1 = 0.339448 loss)
I0428 20:11:44.590047 32127 solver.cpp:219] Iteration 500 (559.061 iter/s, 0.178871s/100 iters), loss = 0.49401
I0428 20:11:44.590085 32127 solver.cpp:238]     Train net output #0: loss = 0.49401 (* 1 = 0.49401 loss)
I0428 20:11:44.590092 32127 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:44.711170 32127 solver.cpp:219] Iteration 600 (825.936 iter/s, 0.121075s/100 iters), loss = 0.190669
I0428 20:11:44.711211 32127 solver.cpp:238]     Train net output #0: loss = 0.190669 (* 1 = 0.190669 loss)
I0428 20:11:44.711217 32127 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:44.833720 32127 solver.cpp:219] Iteration 700 (816.244 iter/s, 0.122512s/100 iters), loss = 0.261638
I0428 20:11:44.833760 32127 solver.cpp:238]     Train net output #0: loss = 0.261638 (* 1 = 0.261638 loss)
I0428 20:11:44.833767 32127 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:44.957367 32127 solver.cpp:219] Iteration 800 (808.995 iter/s, 0.12361s/100 iters), loss = 0.401224
I0428 20:11:44.957408 32127 solver.cpp:238]     Train net output #0: loss = 0.401224 (* 1 = 0.401224 loss)
I0428 20:11:44.957429 32127 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:45.078260 32127 solver.cpp:219] Iteration 900 (827.434 iter/s, 0.120856s/100 iters), loss = 0.210141
I0428 20:11:45.078301 32127 solver.cpp:238]     Train net output #0: loss = 0.210141 (* 1 = 0.210141 loss)
I0428 20:11:45.078308 32127 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:45.118103 32133 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:45.196852 32127 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:45.198770 32127 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:45.199844 32127 solver.cpp:311] Iteration 1000, loss = 0.231705
I0428 20:11:45.199861 32127 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:45.266768 32134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:45.267413 32127 solver.cpp:398]     Test net output #0: accuracy = 0.8784
I0428 20:11:45.267448 32127 solver.cpp:398]     Test net output #1: loss = 0.304563 (* 1 = 0.304563 loss)
I0428 20:11:45.267453 32127 solver.cpp:316] Optimization Done.
I0428 20:11:45.267457 32127 caffe.cpp:259] Optimization Done.
