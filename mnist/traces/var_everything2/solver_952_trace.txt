I0428 20:03:28.643077 30190 caffe.cpp:218] Using GPUs 0
I0428 20:03:28.680308 30190 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:29.183035 30190 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test952.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:29.183171 30190 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test952.prototxt
I0428 20:03:29.183573 30190 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:29.183591 30190 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:29.183687 30190 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:29.183763 30190 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:29.183863 30190 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:29.183886 30190 net.cpp:86] Creating Layer mnist
I0428 20:03:29.183892 30190 net.cpp:382] mnist -> data
I0428 20:03:29.183914 30190 net.cpp:382] mnist -> label
I0428 20:03:29.185029 30190 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:29.187499 30190 net.cpp:124] Setting up mnist
I0428 20:03:29.187516 30190 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:29.187522 30190 net.cpp:131] Top shape: 64 (64)
I0428 20:03:29.187526 30190 net.cpp:139] Memory required for data: 200960
I0428 20:03:29.187535 30190 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:29.187549 30190 net.cpp:86] Creating Layer conv0
I0428 20:03:29.187571 30190 net.cpp:408] conv0 <- data
I0428 20:03:29.187582 30190 net.cpp:382] conv0 -> conv0
I0428 20:03:29.478626 30190 net.cpp:124] Setting up conv0
I0428 20:03:29.478654 30190 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:29.478659 30190 net.cpp:139] Memory required for data: 1675520
I0428 20:03:29.478674 30190 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:29.478688 30190 net.cpp:86] Creating Layer pool0
I0428 20:03:29.478693 30190 net.cpp:408] pool0 <- conv0
I0428 20:03:29.478698 30190 net.cpp:382] pool0 -> pool0
I0428 20:03:29.478751 30190 net.cpp:124] Setting up pool0
I0428 20:03:29.478760 30190 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:29.478762 30190 net.cpp:139] Memory required for data: 2044160
I0428 20:03:29.478766 30190 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:29.478777 30190 net.cpp:86] Creating Layer conv1
I0428 20:03:29.478781 30190 net.cpp:408] conv1 <- pool0
I0428 20:03:29.478786 30190 net.cpp:382] conv1 -> conv1
I0428 20:03:29.480839 30190 net.cpp:124] Setting up conv1
I0428 20:03:29.480855 30190 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:29.480859 30190 net.cpp:139] Memory required for data: 3682560
I0428 20:03:29.480868 30190 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:29.480876 30190 net.cpp:86] Creating Layer pool1
I0428 20:03:29.480880 30190 net.cpp:408] pool1 <- conv1
I0428 20:03:29.480885 30190 net.cpp:382] pool1 -> pool1
I0428 20:03:29.480924 30190 net.cpp:124] Setting up pool1
I0428 20:03:29.480932 30190 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:29.480936 30190 net.cpp:139] Memory required for data: 4092160
I0428 20:03:29.480938 30190 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:29.480949 30190 net.cpp:86] Creating Layer ip1
I0428 20:03:29.480953 30190 net.cpp:408] ip1 <- pool1
I0428 20:03:29.480958 30190 net.cpp:382] ip1 -> ip1
I0428 20:03:29.482044 30190 net.cpp:124] Setting up ip1
I0428 20:03:29.482058 30190 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:29.482061 30190 net.cpp:139] Memory required for data: 4094720
I0428 20:03:29.482069 30190 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:29.482094 30190 net.cpp:86] Creating Layer relu1
I0428 20:03:29.482096 30190 net.cpp:408] relu1 <- ip1
I0428 20:03:29.482101 30190 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:29.482278 30190 net.cpp:124] Setting up relu1
I0428 20:03:29.482287 30190 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:29.482291 30190 net.cpp:139] Memory required for data: 4097280
I0428 20:03:29.482295 30190 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:29.482301 30190 net.cpp:86] Creating Layer ip2
I0428 20:03:29.482306 30190 net.cpp:408] ip2 <- ip1
I0428 20:03:29.482311 30190 net.cpp:382] ip2 -> ip2
I0428 20:03:29.482414 30190 net.cpp:124] Setting up ip2
I0428 20:03:29.482421 30190 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:29.482424 30190 net.cpp:139] Memory required for data: 4103680
I0428 20:03:29.482430 30190 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:29.482437 30190 net.cpp:86] Creating Layer relu2
I0428 20:03:29.482440 30190 net.cpp:408] relu2 <- ip2
I0428 20:03:29.482445 30190 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:29.483252 30190 net.cpp:124] Setting up relu2
I0428 20:03:29.483264 30190 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:29.483268 30190 net.cpp:139] Memory required for data: 4110080
I0428 20:03:29.483271 30190 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:29.483280 30190 net.cpp:86] Creating Layer ip3
I0428 20:03:29.483283 30190 net.cpp:408] ip3 <- ip2
I0428 20:03:29.483290 30190 net.cpp:382] ip3 -> ip3
I0428 20:03:29.483395 30190 net.cpp:124] Setting up ip3
I0428 20:03:29.483403 30190 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:29.483407 30190 net.cpp:139] Memory required for data: 4112640
I0428 20:03:29.483414 30190 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:29.483419 30190 net.cpp:86] Creating Layer relu3
I0428 20:03:29.483423 30190 net.cpp:408] relu3 <- ip3
I0428 20:03:29.483428 30190 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:29.483604 30190 net.cpp:124] Setting up relu3
I0428 20:03:29.483614 30190 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:29.483618 30190 net.cpp:139] Memory required for data: 4115200
I0428 20:03:29.483620 30190 layer_factory.hpp:77] Creating layer loss
I0428 20:03:29.483626 30190 net.cpp:86] Creating Layer loss
I0428 20:03:29.483629 30190 net.cpp:408] loss <- ip3
I0428 20:03:29.483633 30190 net.cpp:408] loss <- label
I0428 20:03:29.483640 30190 net.cpp:382] loss -> loss
I0428 20:03:29.483659 30190 layer_factory.hpp:77] Creating layer loss
I0428 20:03:29.483894 30190 net.cpp:124] Setting up loss
I0428 20:03:29.483904 30190 net.cpp:131] Top shape: (1)
I0428 20:03:29.483908 30190 net.cpp:134]     with loss weight 1
I0428 20:03:29.483922 30190 net.cpp:139] Memory required for data: 4115204
I0428 20:03:29.483927 30190 net.cpp:200] loss needs backward computation.
I0428 20:03:29.483930 30190 net.cpp:200] relu3 needs backward computation.
I0428 20:03:29.483933 30190 net.cpp:200] ip3 needs backward computation.
I0428 20:03:29.483937 30190 net.cpp:200] relu2 needs backward computation.
I0428 20:03:29.483939 30190 net.cpp:200] ip2 needs backward computation.
I0428 20:03:29.483942 30190 net.cpp:200] relu1 needs backward computation.
I0428 20:03:29.483944 30190 net.cpp:200] ip1 needs backward computation.
I0428 20:03:29.483947 30190 net.cpp:200] pool1 needs backward computation.
I0428 20:03:29.483950 30190 net.cpp:200] conv1 needs backward computation.
I0428 20:03:29.483954 30190 net.cpp:200] pool0 needs backward computation.
I0428 20:03:29.483958 30190 net.cpp:200] conv0 needs backward computation.
I0428 20:03:29.483960 30190 net.cpp:202] mnist does not need backward computation.
I0428 20:03:29.483963 30190 net.cpp:244] This network produces output loss
I0428 20:03:29.483974 30190 net.cpp:257] Network initialization done.
I0428 20:03:29.484300 30190 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test952.prototxt
I0428 20:03:29.484328 30190 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:29.484423 30190 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:29.484505 30190 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:29.484549 30190 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:29.484563 30190 net.cpp:86] Creating Layer mnist
I0428 20:03:29.484567 30190 net.cpp:382] mnist -> data
I0428 20:03:29.484575 30190 net.cpp:382] mnist -> label
I0428 20:03:29.484661 30190 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:29.486598 30190 net.cpp:124] Setting up mnist
I0428 20:03:29.486613 30190 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:29.486618 30190 net.cpp:131] Top shape: 100 (100)
I0428 20:03:29.486620 30190 net.cpp:139] Memory required for data: 314000
I0428 20:03:29.486624 30190 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:29.486635 30190 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:29.486639 30190 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:29.486644 30190 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:29.486651 30190 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:29.486729 30190 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:29.486737 30190 net.cpp:131] Top shape: 100 (100)
I0428 20:03:29.486740 30190 net.cpp:131] Top shape: 100 (100)
I0428 20:03:29.486744 30190 net.cpp:139] Memory required for data: 314800
I0428 20:03:29.486747 30190 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:29.486757 30190 net.cpp:86] Creating Layer conv0
I0428 20:03:29.486759 30190 net.cpp:408] conv0 <- data
I0428 20:03:29.486764 30190 net.cpp:382] conv0 -> conv0
I0428 20:03:29.488345 30190 net.cpp:124] Setting up conv0
I0428 20:03:29.488359 30190 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:29.488363 30190 net.cpp:139] Memory required for data: 2618800
I0428 20:03:29.488373 30190 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:29.488379 30190 net.cpp:86] Creating Layer pool0
I0428 20:03:29.488382 30190 net.cpp:408] pool0 <- conv0
I0428 20:03:29.488387 30190 net.cpp:382] pool0 -> pool0
I0428 20:03:29.488453 30190 net.cpp:124] Setting up pool0
I0428 20:03:29.488461 30190 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:29.488463 30190 net.cpp:139] Memory required for data: 3194800
I0428 20:03:29.488466 30190 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:29.488476 30190 net.cpp:86] Creating Layer conv1
I0428 20:03:29.488478 30190 net.cpp:408] conv1 <- pool0
I0428 20:03:29.488483 30190 net.cpp:382] conv1 -> conv1
I0428 20:03:29.490113 30190 net.cpp:124] Setting up conv1
I0428 20:03:29.490126 30190 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:29.490130 30190 net.cpp:139] Memory required for data: 5754800
I0428 20:03:29.490139 30190 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:29.490146 30190 net.cpp:86] Creating Layer pool1
I0428 20:03:29.490150 30190 net.cpp:408] pool1 <- conv1
I0428 20:03:29.490155 30190 net.cpp:382] pool1 -> pool1
I0428 20:03:29.490191 30190 net.cpp:124] Setting up pool1
I0428 20:03:29.490196 30190 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:29.490200 30190 net.cpp:139] Memory required for data: 6394800
I0428 20:03:29.490203 30190 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:29.490209 30190 net.cpp:86] Creating Layer ip1
I0428 20:03:29.490212 30190 net.cpp:408] ip1 <- pool1
I0428 20:03:29.490218 30190 net.cpp:382] ip1 -> ip1
I0428 20:03:29.490430 30190 net.cpp:124] Setting up ip1
I0428 20:03:29.490439 30190 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:29.490455 30190 net.cpp:139] Memory required for data: 6398800
I0428 20:03:29.490464 30190 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:29.490469 30190 net.cpp:86] Creating Layer relu1
I0428 20:03:29.490478 30190 net.cpp:408] relu1 <- ip1
I0428 20:03:29.490483 30190 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:29.490680 30190 net.cpp:124] Setting up relu1
I0428 20:03:29.490689 30190 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:29.490692 30190 net.cpp:139] Memory required for data: 6402800
I0428 20:03:29.490697 30190 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:29.490705 30190 net.cpp:86] Creating Layer ip2
I0428 20:03:29.490707 30190 net.cpp:408] ip2 <- ip1
I0428 20:03:29.490722 30190 net.cpp:382] ip2 -> ip2
I0428 20:03:29.490818 30190 net.cpp:124] Setting up ip2
I0428 20:03:29.490825 30190 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:29.490828 30190 net.cpp:139] Memory required for data: 6412800
I0428 20:03:29.490841 30190 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:29.490846 30190 net.cpp:86] Creating Layer relu2
I0428 20:03:29.490849 30190 net.cpp:408] relu2 <- ip2
I0428 20:03:29.490854 30190 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:29.491036 30190 net.cpp:124] Setting up relu2
I0428 20:03:29.491044 30190 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:29.491047 30190 net.cpp:139] Memory required for data: 6422800
I0428 20:03:29.491051 30190 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:29.491056 30190 net.cpp:86] Creating Layer ip3
I0428 20:03:29.491060 30190 net.cpp:408] ip3 <- ip2
I0428 20:03:29.491065 30190 net.cpp:382] ip3 -> ip3
I0428 20:03:29.491188 30190 net.cpp:124] Setting up ip3
I0428 20:03:29.491195 30190 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:29.491199 30190 net.cpp:139] Memory required for data: 6426800
I0428 20:03:29.491206 30190 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:29.491211 30190 net.cpp:86] Creating Layer relu3
I0428 20:03:29.491215 30190 net.cpp:408] relu3 <- ip3
I0428 20:03:29.491219 30190 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:29.492216 30190 net.cpp:124] Setting up relu3
I0428 20:03:29.492228 30190 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:29.492233 30190 net.cpp:139] Memory required for data: 6430800
I0428 20:03:29.492235 30190 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:29.492241 30190 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:29.492244 30190 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:29.492249 30190 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:29.492256 30190 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:29.492296 30190 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:29.492303 30190 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:29.492307 30190 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:29.492311 30190 net.cpp:139] Memory required for data: 6438800
I0428 20:03:29.492313 30190 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:29.492318 30190 net.cpp:86] Creating Layer accuracy
I0428 20:03:29.492321 30190 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:29.492326 30190 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:29.492331 30190 net.cpp:382] accuracy -> accuracy
I0428 20:03:29.492336 30190 net.cpp:124] Setting up accuracy
I0428 20:03:29.492341 30190 net.cpp:131] Top shape: (1)
I0428 20:03:29.492344 30190 net.cpp:139] Memory required for data: 6438804
I0428 20:03:29.492347 30190 layer_factory.hpp:77] Creating layer loss
I0428 20:03:29.492352 30190 net.cpp:86] Creating Layer loss
I0428 20:03:29.492378 30190 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:29.492383 30190 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:29.492386 30190 net.cpp:382] loss -> loss
I0428 20:03:29.492393 30190 layer_factory.hpp:77] Creating layer loss
I0428 20:03:29.492624 30190 net.cpp:124] Setting up loss
I0428 20:03:29.492635 30190 net.cpp:131] Top shape: (1)
I0428 20:03:29.492637 30190 net.cpp:134]     with loss weight 1
I0428 20:03:29.492655 30190 net.cpp:139] Memory required for data: 6438808
I0428 20:03:29.492658 30190 net.cpp:200] loss needs backward computation.
I0428 20:03:29.492663 30190 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:29.492667 30190 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:29.492671 30190 net.cpp:200] relu3 needs backward computation.
I0428 20:03:29.492674 30190 net.cpp:200] ip3 needs backward computation.
I0428 20:03:29.492677 30190 net.cpp:200] relu2 needs backward computation.
I0428 20:03:29.492681 30190 net.cpp:200] ip2 needs backward computation.
I0428 20:03:29.492683 30190 net.cpp:200] relu1 needs backward computation.
I0428 20:03:29.492686 30190 net.cpp:200] ip1 needs backward computation.
I0428 20:03:29.492689 30190 net.cpp:200] pool1 needs backward computation.
I0428 20:03:29.492692 30190 net.cpp:200] conv1 needs backward computation.
I0428 20:03:29.492696 30190 net.cpp:200] pool0 needs backward computation.
I0428 20:03:29.492698 30190 net.cpp:200] conv0 needs backward computation.
I0428 20:03:29.492702 30190 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:29.492707 30190 net.cpp:202] mnist does not need backward computation.
I0428 20:03:29.492709 30190 net.cpp:244] This network produces output accuracy
I0428 20:03:29.492713 30190 net.cpp:244] This network produces output loss
I0428 20:03:29.492724 30190 net.cpp:257] Network initialization done.
I0428 20:03:29.492766 30190 solver.cpp:56] Solver scaffolding done.
I0428 20:03:29.493100 30190 caffe.cpp:248] Starting Optimization
I0428 20:03:29.493108 30190 solver.cpp:273] Solving LeNet
I0428 20:03:29.493110 30190 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:29.493307 30190 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:29.499171 30190 blocking_queue.cpp:49] Waiting for data
I0428 20:03:29.567627 30197 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:29.568275 30190 solver.cpp:398]     Test net output #0: accuracy = 0.0541
I0428 20:03:29.568313 30190 solver.cpp:398]     Test net output #1: loss = 2.31299 (* 1 = 2.31299 loss)
I0428 20:03:29.572022 30190 solver.cpp:219] Iteration 0 (2.88572 iter/s, 0.0788879s/100 iters), loss = 2.31825
I0428 20:03:29.572062 30190 solver.cpp:238]     Train net output #0: loss = 2.31825 (* 1 = 2.31825 loss)
I0428 20:03:29.572072 30190 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:29.720943 30190 solver.cpp:219] Iteration 100 (671.662 iter/s, 0.148884s/100 iters), loss = 0.794535
I0428 20:03:29.720971 30190 solver.cpp:238]     Train net output #0: loss = 0.794535 (* 1 = 0.794535 loss)
I0428 20:03:29.720978 30190 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:29.867617 30190 solver.cpp:219] Iteration 200 (681.971 iter/s, 0.146634s/100 iters), loss = 0.354735
I0428 20:03:29.867656 30190 solver.cpp:238]     Train net output #0: loss = 0.354735 (* 1 = 0.354735 loss)
I0428 20:03:29.867662 30190 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:30.017428 30190 solver.cpp:219] Iteration 300 (667.671 iter/s, 0.149774s/100 iters), loss = 0.280947
I0428 20:03:30.017465 30190 solver.cpp:238]     Train net output #0: loss = 0.280947 (* 1 = 0.280947 loss)
I0428 20:03:30.017472 30190 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:30.172206 30190 solver.cpp:219] Iteration 400 (646.242 iter/s, 0.154741s/100 iters), loss = 0.200369
I0428 20:03:30.172253 30190 solver.cpp:238]     Train net output #0: loss = 0.200369 (* 1 = 0.200369 loss)
I0428 20:03:30.172262 30190 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:30.327870 30190 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:30.382858 30197 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:30.384739 30190 solver.cpp:398]     Test net output #0: accuracy = 0.9455
I0428 20:03:30.384775 30190 solver.cpp:398]     Test net output #1: loss = 0.174962 (* 1 = 0.174962 loss)
I0428 20:03:30.386338 30190 solver.cpp:219] Iteration 500 (467.112 iter/s, 0.214081s/100 iters), loss = 0.167629
I0428 20:03:30.386392 30190 solver.cpp:238]     Train net output #0: loss = 0.167629 (* 1 = 0.167629 loss)
I0428 20:03:30.386399 30190 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:30.534714 30190 solver.cpp:219] Iteration 600 (674.189 iter/s, 0.148326s/100 iters), loss = 0.0939704
I0428 20:03:30.534775 30190 solver.cpp:238]     Train net output #0: loss = 0.0939706 (* 1 = 0.0939706 loss)
I0428 20:03:30.534781 30190 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:30.687124 30190 solver.cpp:219] Iteration 700 (656.371 iter/s, 0.152353s/100 iters), loss = 0.213425
I0428 20:03:30.687147 30190 solver.cpp:238]     Train net output #0: loss = 0.213425 (* 1 = 0.213425 loss)
I0428 20:03:30.687153 30190 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:30.838100 30190 solver.cpp:219] Iteration 800 (662.516 iter/s, 0.15094s/100 iters), loss = 0.192908
I0428 20:03:30.838124 30190 solver.cpp:238]     Train net output #0: loss = 0.192908 (* 1 = 0.192908 loss)
I0428 20:03:30.838130 30190 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:30.990345 30190 solver.cpp:219] Iteration 900 (656.994 iter/s, 0.152208s/100 iters), loss = 0.190422
I0428 20:03:30.990371 30190 solver.cpp:238]     Train net output #0: loss = 0.190422 (* 1 = 0.190422 loss)
I0428 20:03:30.990377 30190 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:31.039129 30196 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:31.134301 30190 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:31.136051 30190 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:31.136914 30190 solver.cpp:311] Iteration 1000, loss = 0.0870456
I0428 20:03:31.136929 30190 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:31.213575 30197 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:31.214202 30190 solver.cpp:398]     Test net output #0: accuracy = 0.9658
I0428 20:03:31.214236 30190 solver.cpp:398]     Test net output #1: loss = 0.110273 (* 1 = 0.110273 loss)
I0428 20:03:31.214242 30190 solver.cpp:316] Optimization Done.
I0428 20:03:31.214246 30190 caffe.cpp:259] Optimization Done.
