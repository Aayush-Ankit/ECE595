I0428 19:41:15.085178 24779 caffe.cpp:218] Using GPUs 0
I0428 19:41:15.126018 24779 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:15.646105 24779 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test359.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:15.646246 24779 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test359.prototxt
I0428 19:41:15.646627 24779 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:15.646646 24779 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:15.646735 24779 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:41:15.646813 24779 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:15.646910 24779 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:15.646935 24779 net.cpp:86] Creating Layer mnist
I0428 19:41:15.646942 24779 net.cpp:382] mnist -> data
I0428 19:41:15.646965 24779 net.cpp:382] mnist -> label
I0428 19:41:15.648062 24779 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:15.650523 24779 net.cpp:124] Setting up mnist
I0428 19:41:15.650542 24779 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:15.650548 24779 net.cpp:131] Top shape: 64 (64)
I0428 19:41:15.650552 24779 net.cpp:139] Memory required for data: 200960
I0428 19:41:15.650559 24779 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:15.650586 24779 net.cpp:86] Creating Layer conv0
I0428 19:41:15.650593 24779 net.cpp:408] conv0 <- data
I0428 19:41:15.650604 24779 net.cpp:382] conv0 -> conv0
I0428 19:41:15.924612 24779 net.cpp:124] Setting up conv0
I0428 19:41:15.924654 24779 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:15.924657 24779 net.cpp:139] Memory required for data: 495872
I0428 19:41:15.924691 24779 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:15.924708 24779 net.cpp:86] Creating Layer pool0
I0428 19:41:15.924711 24779 net.cpp:408] pool0 <- conv0
I0428 19:41:15.924716 24779 net.cpp:382] pool0 -> pool0
I0428 19:41:15.924762 24779 net.cpp:124] Setting up pool0
I0428 19:41:15.924767 24779 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:15.924769 24779 net.cpp:139] Memory required for data: 569600
I0428 19:41:15.924772 24779 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:15.924782 24779 net.cpp:86] Creating Layer conv1
I0428 19:41:15.924785 24779 net.cpp:408] conv1 <- pool0
I0428 19:41:15.924789 24779 net.cpp:382] conv1 -> conv1
I0428 19:41:15.926705 24779 net.cpp:124] Setting up conv1
I0428 19:41:15.926719 24779 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:15.926739 24779 net.cpp:139] Memory required for data: 733440
I0428 19:41:15.926764 24779 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:15.926774 24779 net.cpp:86] Creating Layer pool1
I0428 19:41:15.926776 24779 net.cpp:408] pool1 <- conv1
I0428 19:41:15.926781 24779 net.cpp:382] pool1 -> pool1
I0428 19:41:15.926823 24779 net.cpp:124] Setting up pool1
I0428 19:41:15.926829 24779 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:15.926832 24779 net.cpp:139] Memory required for data: 774400
I0428 19:41:15.926836 24779 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:15.926843 24779 net.cpp:86] Creating Layer ip1
I0428 19:41:15.926847 24779 net.cpp:408] ip1 <- pool1
I0428 19:41:15.926852 24779 net.cpp:382] ip1 -> ip1
I0428 19:41:15.927974 24779 net.cpp:124] Setting up ip1
I0428 19:41:15.927986 24779 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:15.928006 24779 net.cpp:139] Memory required for data: 780800
I0428 19:41:15.928015 24779 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:15.928021 24779 net.cpp:86] Creating Layer relu1
I0428 19:41:15.928025 24779 net.cpp:408] relu1 <- ip1
I0428 19:41:15.928030 24779 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:15.928215 24779 net.cpp:124] Setting up relu1
I0428 19:41:15.928225 24779 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:15.928228 24779 net.cpp:139] Memory required for data: 787200
I0428 19:41:15.928231 24779 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:15.928238 24779 net.cpp:86] Creating Layer ip2
I0428 19:41:15.928241 24779 net.cpp:408] ip2 <- ip1
I0428 19:41:15.928246 24779 net.cpp:382] ip2 -> ip2
I0428 19:41:15.928339 24779 net.cpp:124] Setting up ip2
I0428 19:41:15.928346 24779 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:15.928350 24779 net.cpp:139] Memory required for data: 789760
I0428 19:41:15.928355 24779 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:15.928361 24779 net.cpp:86] Creating Layer relu2
I0428 19:41:15.928364 24779 net.cpp:408] relu2 <- ip2
I0428 19:41:15.928369 24779 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:15.929134 24779 net.cpp:124] Setting up relu2
I0428 19:41:15.929147 24779 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:15.929167 24779 net.cpp:139] Memory required for data: 792320
I0428 19:41:15.929170 24779 layer_factory.hpp:77] Creating layer loss
I0428 19:41:15.929177 24779 net.cpp:86] Creating Layer loss
I0428 19:41:15.929180 24779 net.cpp:408] loss <- ip2
I0428 19:41:15.929185 24779 net.cpp:408] loss <- label
I0428 19:41:15.929190 24779 net.cpp:382] loss -> loss
I0428 19:41:15.929224 24779 layer_factory.hpp:77] Creating layer loss
I0428 19:41:15.929456 24779 net.cpp:124] Setting up loss
I0428 19:41:15.929466 24779 net.cpp:131] Top shape: (1)
I0428 19:41:15.929469 24779 net.cpp:134]     with loss weight 1
I0428 19:41:15.929482 24779 net.cpp:139] Memory required for data: 792324
I0428 19:41:15.929486 24779 net.cpp:200] loss needs backward computation.
I0428 19:41:15.929489 24779 net.cpp:200] relu2 needs backward computation.
I0428 19:41:15.929492 24779 net.cpp:200] ip2 needs backward computation.
I0428 19:41:15.929496 24779 net.cpp:200] relu1 needs backward computation.
I0428 19:41:15.929497 24779 net.cpp:200] ip1 needs backward computation.
I0428 19:41:15.929500 24779 net.cpp:200] pool1 needs backward computation.
I0428 19:41:15.929514 24779 net.cpp:200] conv1 needs backward computation.
I0428 19:41:15.929518 24779 net.cpp:200] pool0 needs backward computation.
I0428 19:41:15.929522 24779 net.cpp:200] conv0 needs backward computation.
I0428 19:41:15.929524 24779 net.cpp:202] mnist does not need backward computation.
I0428 19:41:15.929527 24779 net.cpp:244] This network produces output loss
I0428 19:41:15.929535 24779 net.cpp:257] Network initialization done.
I0428 19:41:15.929828 24779 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test359.prototxt
I0428 19:41:15.929853 24779 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:15.929955 24779 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:41:15.930032 24779 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:15.930075 24779 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:15.930088 24779 net.cpp:86] Creating Layer mnist
I0428 19:41:15.930093 24779 net.cpp:382] mnist -> data
I0428 19:41:15.930100 24779 net.cpp:382] mnist -> label
I0428 19:41:15.930199 24779 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:15.932181 24779 net.cpp:124] Setting up mnist
I0428 19:41:15.932225 24779 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:15.932230 24779 net.cpp:131] Top shape: 100 (100)
I0428 19:41:15.932235 24779 net.cpp:139] Memory required for data: 314000
I0428 19:41:15.932238 24779 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:15.932245 24779 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:15.932250 24779 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:15.932253 24779 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:15.932260 24779 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:15.932322 24779 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:15.932337 24779 net.cpp:131] Top shape: 100 (100)
I0428 19:41:15.932341 24779 net.cpp:131] Top shape: 100 (100)
I0428 19:41:15.932344 24779 net.cpp:139] Memory required for data: 314800
I0428 19:41:15.932348 24779 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:15.932355 24779 net.cpp:86] Creating Layer conv0
I0428 19:41:15.932358 24779 net.cpp:408] conv0 <- data
I0428 19:41:15.932363 24779 net.cpp:382] conv0 -> conv0
I0428 19:41:15.934098 24779 net.cpp:124] Setting up conv0
I0428 19:41:15.934111 24779 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:15.934115 24779 net.cpp:139] Memory required for data: 775600
I0428 19:41:15.934123 24779 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:15.934145 24779 net.cpp:86] Creating Layer pool0
I0428 19:41:15.934149 24779 net.cpp:408] pool0 <- conv0
I0428 19:41:15.934154 24779 net.cpp:382] pool0 -> pool0
I0428 19:41:15.934198 24779 net.cpp:124] Setting up pool0
I0428 19:41:15.934204 24779 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:15.934207 24779 net.cpp:139] Memory required for data: 890800
I0428 19:41:15.934209 24779 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:15.934218 24779 net.cpp:86] Creating Layer conv1
I0428 19:41:15.934221 24779 net.cpp:408] conv1 <- pool0
I0428 19:41:15.934226 24779 net.cpp:382] conv1 -> conv1
I0428 19:41:15.935806 24779 net.cpp:124] Setting up conv1
I0428 19:41:15.935819 24779 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:15.935822 24779 net.cpp:139] Memory required for data: 1146800
I0428 19:41:15.935838 24779 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:15.935860 24779 net.cpp:86] Creating Layer pool1
I0428 19:41:15.935864 24779 net.cpp:408] pool1 <- conv1
I0428 19:41:15.935869 24779 net.cpp:382] pool1 -> pool1
I0428 19:41:15.935919 24779 net.cpp:124] Setting up pool1
I0428 19:41:15.935923 24779 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:15.935926 24779 net.cpp:139] Memory required for data: 1210800
I0428 19:41:15.935930 24779 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:15.935940 24779 net.cpp:86] Creating Layer ip1
I0428 19:41:15.935943 24779 net.cpp:408] ip1 <- pool1
I0428 19:41:15.935948 24779 net.cpp:382] ip1 -> ip1
I0428 19:41:15.936069 24779 net.cpp:124] Setting up ip1
I0428 19:41:15.936077 24779 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:15.936080 24779 net.cpp:139] Memory required for data: 1220800
I0428 19:41:15.936098 24779 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:15.936105 24779 net.cpp:86] Creating Layer relu1
I0428 19:41:15.936113 24779 net.cpp:408] relu1 <- ip1
I0428 19:41:15.936118 24779 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:15.936276 24779 net.cpp:124] Setting up relu1
I0428 19:41:15.936286 24779 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:15.936290 24779 net.cpp:139] Memory required for data: 1230800
I0428 19:41:15.936307 24779 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:15.936314 24779 net.cpp:86] Creating Layer ip2
I0428 19:41:15.936317 24779 net.cpp:408] ip2 <- ip1
I0428 19:41:15.936321 24779 net.cpp:382] ip2 -> ip2
I0428 19:41:15.936441 24779 net.cpp:124] Setting up ip2
I0428 19:41:15.936449 24779 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:15.936451 24779 net.cpp:139] Memory required for data: 1234800
I0428 19:41:15.936456 24779 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:15.936461 24779 net.cpp:86] Creating Layer relu2
I0428 19:41:15.936465 24779 net.cpp:408] relu2 <- ip2
I0428 19:41:15.936475 24779 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:15.936632 24779 net.cpp:124] Setting up relu2
I0428 19:41:15.936640 24779 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:15.936643 24779 net.cpp:139] Memory required for data: 1238800
I0428 19:41:15.936646 24779 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:41:15.936651 24779 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:41:15.936655 24779 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:41:15.936658 24779 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:41:15.936673 24779 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:41:15.936707 24779 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:41:15.936712 24779 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:15.936717 24779 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:15.936719 24779 net.cpp:139] Memory required for data: 1246800
I0428 19:41:15.936722 24779 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:15.936753 24779 net.cpp:86] Creating Layer accuracy
I0428 19:41:15.936763 24779 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:41:15.936766 24779 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:15.936777 24779 net.cpp:382] accuracy -> accuracy
I0428 19:41:15.936784 24779 net.cpp:124] Setting up accuracy
I0428 19:41:15.936794 24779 net.cpp:131] Top shape: (1)
I0428 19:41:15.936796 24779 net.cpp:139] Memory required for data: 1246804
I0428 19:41:15.936800 24779 layer_factory.hpp:77] Creating layer loss
I0428 19:41:15.936805 24779 net.cpp:86] Creating Layer loss
I0428 19:41:15.936818 24779 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:41:15.936822 24779 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:15.936826 24779 net.cpp:382] loss -> loss
I0428 19:41:15.936838 24779 layer_factory.hpp:77] Creating layer loss
I0428 19:41:15.937072 24779 net.cpp:124] Setting up loss
I0428 19:41:15.937080 24779 net.cpp:131] Top shape: (1)
I0428 19:41:15.937095 24779 net.cpp:134]     with loss weight 1
I0428 19:41:15.937101 24779 net.cpp:139] Memory required for data: 1246808
I0428 19:41:15.937119 24779 net.cpp:200] loss needs backward computation.
I0428 19:41:15.937122 24779 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:15.937126 24779 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:41:15.937129 24779 net.cpp:200] relu2 needs backward computation.
I0428 19:41:15.937131 24779 net.cpp:200] ip2 needs backward computation.
I0428 19:41:15.937134 24779 net.cpp:200] relu1 needs backward computation.
I0428 19:41:15.937136 24779 net.cpp:200] ip1 needs backward computation.
I0428 19:41:15.937140 24779 net.cpp:200] pool1 needs backward computation.
I0428 19:41:15.937144 24779 net.cpp:200] conv1 needs backward computation.
I0428 19:41:15.937145 24779 net.cpp:200] pool0 needs backward computation.
I0428 19:41:15.937155 24779 net.cpp:200] conv0 needs backward computation.
I0428 19:41:15.937158 24779 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:15.937177 24779 net.cpp:202] mnist does not need backward computation.
I0428 19:41:15.937180 24779 net.cpp:244] This network produces output accuracy
I0428 19:41:15.937183 24779 net.cpp:244] This network produces output loss
I0428 19:41:15.937192 24779 net.cpp:257] Network initialization done.
I0428 19:41:15.937228 24779 solver.cpp:56] Solver scaffolding done.
I0428 19:41:15.937584 24779 caffe.cpp:248] Starting Optimization
I0428 19:41:15.937590 24779 solver.cpp:273] Solving LeNet
I0428 19:41:15.937593 24779 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:15.938344 24779 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:15.940241 24779 blocking_queue.cpp:49] Waiting for data
I0428 19:41:16.011171 24786 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:16.011629 24779 solver.cpp:398]     Test net output #0: accuracy = 0.0787
I0428 19:41:16.011663 24779 solver.cpp:398]     Test net output #1: loss = 2.30853 (* 1 = 2.30853 loss)
I0428 19:41:16.013450 24779 solver.cpp:219] Iteration 0 (-1.07199e-42 iter/s, 0.0758307s/100 iters), loss = 2.30007
I0428 19:41:16.013504 24779 solver.cpp:238]     Train net output #0: loss = 2.30007 (* 1 = 2.30007 loss)
I0428 19:41:16.013516 24779 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:16.095923 24779 solver.cpp:219] Iteration 100 (1213.49 iter/s, 0.0824066s/100 iters), loss = 1.29722
I0428 19:41:16.095950 24779 solver.cpp:238]     Train net output #0: loss = 1.29722 (* 1 = 1.29722 loss)
I0428 19:41:16.095957 24779 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:16.172832 24779 solver.cpp:219] Iteration 200 (1301.22 iter/s, 0.0768512s/100 iters), loss = 0.546127
I0428 19:41:16.172869 24779 solver.cpp:238]     Train net output #0: loss = 0.546127 (* 1 = 0.546127 loss)
I0428 19:41:16.172876 24779 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:16.240192 24779 solver.cpp:219] Iteration 300 (1485.6 iter/s, 0.0673127s/100 iters), loss = 0.685573
I0428 19:41:16.240216 24779 solver.cpp:238]     Train net output #0: loss = 0.685573 (* 1 = 0.685573 loss)
I0428 19:41:16.240237 24779 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:16.305852 24779 solver.cpp:219] Iteration 400 (1523.9 iter/s, 0.065621s/100 iters), loss = 0.464884
I0428 19:41:16.305876 24779 solver.cpp:238]     Train net output #0: loss = 0.464884 (* 1 = 0.464884 loss)
I0428 19:41:16.305896 24779 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:16.380359 24779 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:16.455543 24786 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:16.455974 24779 solver.cpp:398]     Test net output #0: accuracy = 0.7645
I0428 19:41:16.455993 24779 solver.cpp:398]     Test net output #1: loss = 0.605879 (* 1 = 0.605879 loss)
I0428 19:41:16.456728 24779 solver.cpp:219] Iteration 500 (662.957 iter/s, 0.150839s/100 iters), loss = 0.538565
I0428 19:41:16.456768 24779 solver.cpp:238]     Train net output #0: loss = 0.538565 (* 1 = 0.538565 loss)
I0428 19:41:16.456789 24779 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:16.537034 24779 solver.cpp:219] Iteration 600 (1246.22 iter/s, 0.0802427s/100 iters), loss = 0.718875
I0428 19:41:16.537060 24779 solver.cpp:238]     Train net output #0: loss = 0.718875 (* 1 = 0.718875 loss)
I0428 19:41:16.537081 24779 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:16.604565 24779 solver.cpp:219] Iteration 700 (1481.66 iter/s, 0.0674918s/100 iters), loss = 0.751808
I0428 19:41:16.604588 24779 solver.cpp:238]     Train net output #0: loss = 0.751808 (* 1 = 0.751808 loss)
I0428 19:41:16.604594 24779 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:16.671301 24779 solver.cpp:219] Iteration 800 (1499.22 iter/s, 0.0667015s/100 iters), loss = 0.398125
I0428 19:41:16.671324 24779 solver.cpp:238]     Train net output #0: loss = 0.398125 (* 1 = 0.398125 loss)
I0428 19:41:16.671330 24779 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:16.738183 24779 solver.cpp:219] Iteration 900 (1495.96 iter/s, 0.0668467s/100 iters), loss = 0.257743
I0428 19:41:16.738206 24779 solver.cpp:238]     Train net output #0: loss = 0.257743 (* 1 = 0.257743 loss)
I0428 19:41:16.738212 24779 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:16.761440 24785 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:16.810904 24779 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:16.811550 24779 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:16.811966 24779 solver.cpp:311] Iteration 1000, loss = 0.327941
I0428 19:41:16.811997 24779 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:16.887455 24786 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:16.887910 24779 solver.cpp:398]     Test net output #0: accuracy = 0.8734
I0428 19:41:16.887933 24779 solver.cpp:398]     Test net output #1: loss = 0.338116 (* 1 = 0.338116 loss)
I0428 19:41:16.887939 24779 solver.cpp:316] Optimization Done.
I0428 19:41:16.887943 24779 caffe.cpp:259] Optimization Done.
