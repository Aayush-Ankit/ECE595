I0428 20:01:42.734401 29788 caffe.cpp:218] Using GPUs 0
I0428 20:01:42.763124 29788 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:01:43.213556 29788 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test910.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:01:43.213690 29788 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test910.prototxt
I0428 20:01:43.214062 29788 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:01:43.214093 29788 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:01:43.214179 29788 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:43.214243 29788 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:43.214339 29788 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:01:43.214359 29788 net.cpp:86] Creating Layer mnist
I0428 20:01:43.214380 29788 net.cpp:382] mnist -> data
I0428 20:01:43.214398 29788 net.cpp:382] mnist -> label
I0428 20:01:43.215409 29788 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:01:43.217689 29788 net.cpp:124] Setting up mnist
I0428 20:01:43.217703 29788 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:01:43.217733 29788 net.cpp:131] Top shape: 64 (64)
I0428 20:01:43.217736 29788 net.cpp:139] Memory required for data: 200960
I0428 20:01:43.217742 29788 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:43.217754 29788 net.cpp:86] Creating Layer conv0
I0428 20:01:43.217772 29788 net.cpp:408] conv0 <- data
I0428 20:01:43.217784 29788 net.cpp:382] conv0 -> conv0
I0428 20:01:43.450904 29788 net.cpp:124] Setting up conv0
I0428 20:01:43.450930 29788 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:01:43.450934 29788 net.cpp:139] Memory required for data: 1675520
I0428 20:01:43.450949 29788 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:43.450961 29788 net.cpp:86] Creating Layer pool0
I0428 20:01:43.450965 29788 net.cpp:408] pool0 <- conv0
I0428 20:01:43.450971 29788 net.cpp:382] pool0 -> pool0
I0428 20:01:43.451031 29788 net.cpp:124] Setting up pool0
I0428 20:01:43.451037 29788 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:01:43.451040 29788 net.cpp:139] Memory required for data: 2044160
I0428 20:01:43.451042 29788 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:43.451056 29788 net.cpp:86] Creating Layer conv1
I0428 20:01:43.451059 29788 net.cpp:408] conv1 <- pool0
I0428 20:01:43.451063 29788 net.cpp:382] conv1 -> conv1
I0428 20:01:43.454035 29788 net.cpp:124] Setting up conv1
I0428 20:01:43.454066 29788 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:01:43.454071 29788 net.cpp:139] Memory required for data: 2863360
I0428 20:01:43.454078 29788 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:43.454085 29788 net.cpp:86] Creating Layer pool1
I0428 20:01:43.454089 29788 net.cpp:408] pool1 <- conv1
I0428 20:01:43.454093 29788 net.cpp:382] pool1 -> pool1
I0428 20:01:43.454159 29788 net.cpp:124] Setting up pool1
I0428 20:01:43.454169 29788 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:01:43.454172 29788 net.cpp:139] Memory required for data: 3068160
I0428 20:01:43.454175 29788 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:43.454183 29788 net.cpp:86] Creating Layer ip1
I0428 20:01:43.454186 29788 net.cpp:408] ip1 <- pool1
I0428 20:01:43.454191 29788 net.cpp:382] ip1 -> ip1
I0428 20:01:43.454355 29788 net.cpp:124] Setting up ip1
I0428 20:01:43.454362 29788 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:43.454365 29788 net.cpp:139] Memory required for data: 3070720
I0428 20:01:43.454372 29788 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:43.454380 29788 net.cpp:86] Creating Layer relu1
I0428 20:01:43.454382 29788 net.cpp:408] relu1 <- ip1
I0428 20:01:43.454386 29788 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:43.454557 29788 net.cpp:124] Setting up relu1
I0428 20:01:43.454566 29788 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:43.454569 29788 net.cpp:139] Memory required for data: 3073280
I0428 20:01:43.454572 29788 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:43.454579 29788 net.cpp:86] Creating Layer ip2
I0428 20:01:43.454583 29788 net.cpp:408] ip2 <- ip1
I0428 20:01:43.454588 29788 net.cpp:382] ip2 -> ip2
I0428 20:01:43.454685 29788 net.cpp:124] Setting up ip2
I0428 20:01:43.454692 29788 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:43.454711 29788 net.cpp:139] Memory required for data: 3075840
I0428 20:01:43.454716 29788 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:43.454723 29788 net.cpp:86] Creating Layer relu2
I0428 20:01:43.454726 29788 net.cpp:408] relu2 <- ip2
I0428 20:01:43.454730 29788 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:43.455533 29788 net.cpp:124] Setting up relu2
I0428 20:01:43.455545 29788 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:43.455564 29788 net.cpp:139] Memory required for data: 3078400
I0428 20:01:43.455567 29788 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:43.455575 29788 net.cpp:86] Creating Layer ip3
I0428 20:01:43.455580 29788 net.cpp:408] ip3 <- ip2
I0428 20:01:43.455586 29788 net.cpp:382] ip3 -> ip3
I0428 20:01:43.455685 29788 net.cpp:124] Setting up ip3
I0428 20:01:43.455693 29788 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:43.455696 29788 net.cpp:139] Memory required for data: 3080960
I0428 20:01:43.455704 29788 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:43.455709 29788 net.cpp:86] Creating Layer relu3
I0428 20:01:43.455713 29788 net.cpp:408] relu3 <- ip3
I0428 20:01:43.455716 29788 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:43.455922 29788 net.cpp:124] Setting up relu3
I0428 20:01:43.455932 29788 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:43.455935 29788 net.cpp:139] Memory required for data: 3083520
I0428 20:01:43.455938 29788 layer_factory.hpp:77] Creating layer loss
I0428 20:01:43.455945 29788 net.cpp:86] Creating Layer loss
I0428 20:01:43.455947 29788 net.cpp:408] loss <- ip3
I0428 20:01:43.455951 29788 net.cpp:408] loss <- label
I0428 20:01:43.455958 29788 net.cpp:382] loss -> loss
I0428 20:01:43.455976 29788 layer_factory.hpp:77] Creating layer loss
I0428 20:01:43.456246 29788 net.cpp:124] Setting up loss
I0428 20:01:43.456255 29788 net.cpp:131] Top shape: (1)
I0428 20:01:43.456274 29788 net.cpp:134]     with loss weight 1
I0428 20:01:43.456288 29788 net.cpp:139] Memory required for data: 3083524
I0428 20:01:43.456291 29788 net.cpp:200] loss needs backward computation.
I0428 20:01:43.456295 29788 net.cpp:200] relu3 needs backward computation.
I0428 20:01:43.456298 29788 net.cpp:200] ip3 needs backward computation.
I0428 20:01:43.456301 29788 net.cpp:200] relu2 needs backward computation.
I0428 20:01:43.456305 29788 net.cpp:200] ip2 needs backward computation.
I0428 20:01:43.456307 29788 net.cpp:200] relu1 needs backward computation.
I0428 20:01:43.456310 29788 net.cpp:200] ip1 needs backward computation.
I0428 20:01:43.456312 29788 net.cpp:200] pool1 needs backward computation.
I0428 20:01:43.456315 29788 net.cpp:200] conv1 needs backward computation.
I0428 20:01:43.456318 29788 net.cpp:200] pool0 needs backward computation.
I0428 20:01:43.456321 29788 net.cpp:200] conv0 needs backward computation.
I0428 20:01:43.456324 29788 net.cpp:202] mnist does not need backward computation.
I0428 20:01:43.456327 29788 net.cpp:244] This network produces output loss
I0428 20:01:43.456337 29788 net.cpp:257] Network initialization done.
I0428 20:01:43.456717 29788 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test910.prototxt
I0428 20:01:43.456758 29788 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:01:43.456871 29788 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:43.456990 29788 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:43.457033 29788 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:01:43.457048 29788 net.cpp:86] Creating Layer mnist
I0428 20:01:43.457053 29788 net.cpp:382] mnist -> data
I0428 20:01:43.457062 29788 net.cpp:382] mnist -> label
I0428 20:01:43.457167 29788 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:01:43.459208 29788 net.cpp:124] Setting up mnist
I0428 20:01:43.459239 29788 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:01:43.459244 29788 net.cpp:131] Top shape: 100 (100)
I0428 20:01:43.459246 29788 net.cpp:139] Memory required for data: 314000
I0428 20:01:43.459250 29788 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:01:43.459285 29788 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:01:43.459288 29788 net.cpp:408] label_mnist_1_split <- label
I0428 20:01:43.459292 29788 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:01:43.459300 29788 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:01:43.459347 29788 net.cpp:124] Setting up label_mnist_1_split
I0428 20:01:43.459352 29788 net.cpp:131] Top shape: 100 (100)
I0428 20:01:43.459357 29788 net.cpp:131] Top shape: 100 (100)
I0428 20:01:43.459359 29788 net.cpp:139] Memory required for data: 314800
I0428 20:01:43.459362 29788 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:43.459372 29788 net.cpp:86] Creating Layer conv0
I0428 20:01:43.459374 29788 net.cpp:408] conv0 <- data
I0428 20:01:43.459381 29788 net.cpp:382] conv0 -> conv0
I0428 20:01:43.461146 29788 net.cpp:124] Setting up conv0
I0428 20:01:43.461159 29788 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:01:43.461163 29788 net.cpp:139] Memory required for data: 2618800
I0428 20:01:43.461172 29788 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:43.461179 29788 net.cpp:86] Creating Layer pool0
I0428 20:01:43.461182 29788 net.cpp:408] pool0 <- conv0
I0428 20:01:43.461195 29788 net.cpp:382] pool0 -> pool0
I0428 20:01:43.461230 29788 net.cpp:124] Setting up pool0
I0428 20:01:43.461236 29788 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:01:43.461238 29788 net.cpp:139] Memory required for data: 3194800
I0428 20:01:43.461241 29788 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:43.461251 29788 net.cpp:86] Creating Layer conv1
I0428 20:01:43.461253 29788 net.cpp:408] conv1 <- pool0
I0428 20:01:43.461258 29788 net.cpp:382] conv1 -> conv1
I0428 20:01:43.463084 29788 net.cpp:124] Setting up conv1
I0428 20:01:43.463098 29788 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:01:43.463101 29788 net.cpp:139] Memory required for data: 4474800
I0428 20:01:43.463109 29788 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:43.463115 29788 net.cpp:86] Creating Layer pool1
I0428 20:01:43.463135 29788 net.cpp:408] pool1 <- conv1
I0428 20:01:43.463141 29788 net.cpp:382] pool1 -> pool1
I0428 20:01:43.463177 29788 net.cpp:124] Setting up pool1
I0428 20:01:43.463182 29788 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:01:43.463184 29788 net.cpp:139] Memory required for data: 4794800
I0428 20:01:43.463193 29788 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:43.463201 29788 net.cpp:86] Creating Layer ip1
I0428 20:01:43.463203 29788 net.cpp:408] ip1 <- pool1
I0428 20:01:43.463214 29788 net.cpp:382] ip1 -> ip1
I0428 20:01:43.463384 29788 net.cpp:124] Setting up ip1
I0428 20:01:43.463392 29788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:43.463416 29788 net.cpp:139] Memory required for data: 4798800
I0428 20:01:43.463431 29788 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:43.463436 29788 net.cpp:86] Creating Layer relu1
I0428 20:01:43.463440 29788 net.cpp:408] relu1 <- ip1
I0428 20:01:43.463444 29788 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:43.463608 29788 net.cpp:124] Setting up relu1
I0428 20:01:43.463629 29788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:43.463642 29788 net.cpp:139] Memory required for data: 4802800
I0428 20:01:43.463646 29788 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:43.463652 29788 net.cpp:86] Creating Layer ip2
I0428 20:01:43.463656 29788 net.cpp:408] ip2 <- ip1
I0428 20:01:43.463663 29788 net.cpp:382] ip2 -> ip2
I0428 20:01:43.463778 29788 net.cpp:124] Setting up ip2
I0428 20:01:43.463785 29788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:43.463788 29788 net.cpp:139] Memory required for data: 4806800
I0428 20:01:43.463793 29788 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:43.463798 29788 net.cpp:86] Creating Layer relu2
I0428 20:01:43.463801 29788 net.cpp:408] relu2 <- ip2
I0428 20:01:43.463806 29788 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:43.463965 29788 net.cpp:124] Setting up relu2
I0428 20:01:43.463973 29788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:43.463976 29788 net.cpp:139] Memory required for data: 4810800
I0428 20:01:43.463980 29788 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:43.463986 29788 net.cpp:86] Creating Layer ip3
I0428 20:01:43.463990 29788 net.cpp:408] ip3 <- ip2
I0428 20:01:43.463995 29788 net.cpp:382] ip3 -> ip3
I0428 20:01:43.464092 29788 net.cpp:124] Setting up ip3
I0428 20:01:43.464098 29788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:43.464102 29788 net.cpp:139] Memory required for data: 4814800
I0428 20:01:43.464109 29788 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:43.464115 29788 net.cpp:86] Creating Layer relu3
I0428 20:01:43.464139 29788 net.cpp:408] relu3 <- ip3
I0428 20:01:43.464143 29788 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:43.465057 29788 net.cpp:124] Setting up relu3
I0428 20:01:43.465070 29788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:43.465073 29788 net.cpp:139] Memory required for data: 4818800
I0428 20:01:43.465077 29788 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:01:43.465083 29788 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:01:43.465087 29788 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:01:43.465092 29788 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:01:43.465098 29788 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:01:43.465173 29788 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:01:43.465188 29788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:43.465190 29788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:43.465193 29788 net.cpp:139] Memory required for data: 4826800
I0428 20:01:43.465196 29788 layer_factory.hpp:77] Creating layer accuracy
I0428 20:01:43.465201 29788 net.cpp:86] Creating Layer accuracy
I0428 20:01:43.465204 29788 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:01:43.465207 29788 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:01:43.465214 29788 net.cpp:382] accuracy -> accuracy
I0428 20:01:43.465220 29788 net.cpp:124] Setting up accuracy
I0428 20:01:43.465224 29788 net.cpp:131] Top shape: (1)
I0428 20:01:43.465227 29788 net.cpp:139] Memory required for data: 4826804
I0428 20:01:43.465230 29788 layer_factory.hpp:77] Creating layer loss
I0428 20:01:43.465234 29788 net.cpp:86] Creating Layer loss
I0428 20:01:43.465237 29788 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:01:43.465246 29788 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:01:43.465251 29788 net.cpp:382] loss -> loss
I0428 20:01:43.465257 29788 layer_factory.hpp:77] Creating layer loss
I0428 20:01:43.465551 29788 net.cpp:124] Setting up loss
I0428 20:01:43.465561 29788 net.cpp:131] Top shape: (1)
I0428 20:01:43.465564 29788 net.cpp:134]     with loss weight 1
I0428 20:01:43.465586 29788 net.cpp:139] Memory required for data: 4826808
I0428 20:01:43.465596 29788 net.cpp:200] loss needs backward computation.
I0428 20:01:43.465600 29788 net.cpp:202] accuracy does not need backward computation.
I0428 20:01:43.465605 29788 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:01:43.465612 29788 net.cpp:200] relu3 needs backward computation.
I0428 20:01:43.465615 29788 net.cpp:200] ip3 needs backward computation.
I0428 20:01:43.465618 29788 net.cpp:200] relu2 needs backward computation.
I0428 20:01:43.465621 29788 net.cpp:200] ip2 needs backward computation.
I0428 20:01:43.465625 29788 net.cpp:200] relu1 needs backward computation.
I0428 20:01:43.465632 29788 net.cpp:200] ip1 needs backward computation.
I0428 20:01:43.465636 29788 net.cpp:200] pool1 needs backward computation.
I0428 20:01:43.465654 29788 net.cpp:200] conv1 needs backward computation.
I0428 20:01:43.465663 29788 net.cpp:200] pool0 needs backward computation.
I0428 20:01:43.465667 29788 net.cpp:200] conv0 needs backward computation.
I0428 20:01:43.465670 29788 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:01:43.465674 29788 net.cpp:202] mnist does not need backward computation.
I0428 20:01:43.465677 29788 net.cpp:244] This network produces output accuracy
I0428 20:01:43.465680 29788 net.cpp:244] This network produces output loss
I0428 20:01:43.465693 29788 net.cpp:257] Network initialization done.
I0428 20:01:43.465736 29788 solver.cpp:56] Solver scaffolding done.
I0428 20:01:43.466104 29788 caffe.cpp:248] Starting Optimization
I0428 20:01:43.466111 29788 solver.cpp:273] Solving LeNet
I0428 20:01:43.466114 29788 solver.cpp:274] Learning Rate Policy: inv
I0428 20:01:43.466285 29788 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:01:43.470899 29788 blocking_queue.cpp:49] Waiting for data
I0428 20:01:43.541901 29795 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:43.542421 29788 solver.cpp:398]     Test net output #0: accuracy = 0.1194
I0428 20:01:43.542439 29788 solver.cpp:398]     Test net output #1: loss = 2.30982 (* 1 = 2.30982 loss)
I0428 20:01:43.545547 29788 solver.cpp:219] Iteration 0 (0 iter/s, 0.0794061s/100 iters), loss = 2.31012
I0428 20:01:43.545570 29788 solver.cpp:238]     Train net output #0: loss = 2.31012 (* 1 = 2.31012 loss)
I0428 20:01:43.545596 29788 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:01:43.651285 29788 solver.cpp:219] Iteration 100 (946.052 iter/s, 0.105702s/100 iters), loss = 1.00752
I0428 20:01:43.651307 29788 solver.cpp:238]     Train net output #0: loss = 1.00752 (* 1 = 1.00752 loss)
I0428 20:01:43.651314 29788 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:01:43.755612 29788 solver.cpp:219] Iteration 200 (958.854 iter/s, 0.104291s/100 iters), loss = 0.610163
I0428 20:01:43.755635 29788 solver.cpp:238]     Train net output #0: loss = 0.610163 (* 1 = 0.610163 loss)
I0428 20:01:43.755640 29788 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:01:43.860237 29788 solver.cpp:219] Iteration 300 (956.093 iter/s, 0.104592s/100 iters), loss = 0.366581
I0428 20:01:43.860260 29788 solver.cpp:238]     Train net output #0: loss = 0.366581 (* 1 = 0.366581 loss)
I0428 20:01:43.860266 29788 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:01:43.966922 29788 solver.cpp:219] Iteration 400 (937.641 iter/s, 0.106651s/100 iters), loss = 0.472157
I0428 20:01:43.966949 29788 solver.cpp:238]     Train net output #0: loss = 0.472157 (* 1 = 0.472157 loss)
I0428 20:01:43.966971 29788 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:01:44.072278 29788 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:01:44.125819 29795 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:44.126349 29788 solver.cpp:398]     Test net output #0: accuracy = 0.8434
I0428 20:01:44.126370 29788 solver.cpp:398]     Test net output #1: loss = 0.447783 (* 1 = 0.447783 loss)
I0428 20:01:44.127439 29788 solver.cpp:219] Iteration 500 (623.149 iter/s, 0.160475s/100 iters), loss = 0.358889
I0428 20:01:44.127499 29788 solver.cpp:238]     Train net output #0: loss = 0.358889 (* 1 = 0.358889 loss)
I0428 20:01:44.127521 29788 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:01:44.238826 29788 solver.cpp:219] Iteration 600 (898.324 iter/s, 0.111318s/100 iters), loss = 0.38953
I0428 20:01:44.238852 29788 solver.cpp:238]     Train net output #0: loss = 0.38953 (* 1 = 0.38953 loss)
I0428 20:01:44.238858 29788 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:01:44.343188 29788 solver.cpp:219] Iteration 700 (958.542 iter/s, 0.104325s/100 iters), loss = 0.399843
I0428 20:01:44.343227 29788 solver.cpp:238]     Train net output #0: loss = 0.399843 (* 1 = 0.399843 loss)
I0428 20:01:44.343235 29788 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:01:44.446938 29788 solver.cpp:219] Iteration 800 (964.174 iter/s, 0.103716s/100 iters), loss = 0.583943
I0428 20:01:44.446961 29788 solver.cpp:238]     Train net output #0: loss = 0.583943 (* 1 = 0.583943 loss)
I0428 20:01:44.446967 29788 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:01:44.553639 29788 solver.cpp:219] Iteration 900 (937.497 iter/s, 0.106667s/100 iters), loss = 0.310119
I0428 20:01:44.553680 29788 solver.cpp:238]     Train net output #0: loss = 0.310119 (* 1 = 0.310119 loss)
I0428 20:01:44.553686 29788 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:01:44.593168 29794 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:44.666154 29788 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:01:44.667453 29788 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:01:44.668172 29788 solver.cpp:311] Iteration 1000, loss = 0.344004
I0428 20:01:44.668187 29788 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:01:44.743315 29795 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:44.743847 29788 solver.cpp:398]     Test net output #0: accuracy = 0.8723
I0428 20:01:44.743866 29788 solver.cpp:398]     Test net output #1: loss = 0.346089 (* 1 = 0.346089 loss)
I0428 20:01:44.743870 29788 solver.cpp:316] Optimization Done.
I0428 20:01:44.743875 29788 caffe.cpp:259] Optimization Done.
