I0428 20:09:26.176700 31624 caffe.cpp:218] Using GPUs 0
I0428 20:09:26.214989 31624 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:26.729324 31624 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1109.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:26.729498 31624 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1109.prototxt
I0428 20:09:26.729923 31624 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:26.729948 31624 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:26.730063 31624 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:26.730178 31624 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:26.730309 31624 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:26.730343 31624 net.cpp:86] Creating Layer mnist
I0428 20:09:26.730357 31624 net.cpp:382] mnist -> data
I0428 20:09:26.730388 31624 net.cpp:382] mnist -> label
I0428 20:09:26.731667 31624 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:26.734154 31624 net.cpp:124] Setting up mnist
I0428 20:09:26.734175 31624 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:26.734185 31624 net.cpp:131] Top shape: 64 (64)
I0428 20:09:26.734191 31624 net.cpp:139] Memory required for data: 200960
I0428 20:09:26.734202 31624 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:26.734230 31624 net.cpp:86] Creating Layer conv0
I0428 20:09:26.734256 31624 net.cpp:408] conv0 <- data
I0428 20:09:26.734277 31624 net.cpp:382] conv0 -> conv0
I0428 20:09:27.004314 31624 net.cpp:124] Setting up conv0
I0428 20:09:27.004343 31624 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:27.004348 31624 net.cpp:139] Memory required for data: 3887360
I0428 20:09:27.004367 31624 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:27.004384 31624 net.cpp:86] Creating Layer pool0
I0428 20:09:27.004397 31624 net.cpp:408] pool0 <- conv0
I0428 20:09:27.004406 31624 net.cpp:382] pool0 -> pool0
I0428 20:09:27.004472 31624 net.cpp:124] Setting up pool0
I0428 20:09:27.004482 31624 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:27.004487 31624 net.cpp:139] Memory required for data: 4808960
I0428 20:09:27.004490 31624 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:27.004506 31624 net.cpp:86] Creating Layer conv1
I0428 20:09:27.004513 31624 net.cpp:408] conv1 <- pool0
I0428 20:09:27.004520 31624 net.cpp:382] conv1 -> conv1
I0428 20:09:27.007426 31624 net.cpp:124] Setting up conv1
I0428 20:09:27.007442 31624 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:27.007448 31624 net.cpp:139] Memory required for data: 5218560
I0428 20:09:27.007475 31624 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:27.007486 31624 net.cpp:86] Creating Layer pool1
I0428 20:09:27.007493 31624 net.cpp:408] pool1 <- conv1
I0428 20:09:27.007500 31624 net.cpp:382] pool1 -> pool1
I0428 20:09:27.007541 31624 net.cpp:124] Setting up pool1
I0428 20:09:27.007550 31624 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:27.007555 31624 net.cpp:139] Memory required for data: 5320960
I0428 20:09:27.007560 31624 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:27.007570 31624 net.cpp:86] Creating Layer ip1
I0428 20:09:27.007575 31624 net.cpp:408] ip1 <- pool1
I0428 20:09:27.007585 31624 net.cpp:382] ip1 -> ip1
I0428 20:09:27.008568 31624 net.cpp:124] Setting up ip1
I0428 20:09:27.008581 31624 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:27.008587 31624 net.cpp:139] Memory required for data: 5323520
I0428 20:09:27.008599 31624 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:27.008610 31624 net.cpp:86] Creating Layer relu1
I0428 20:09:27.008615 31624 net.cpp:408] relu1 <- ip1
I0428 20:09:27.008623 31624 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:27.008822 31624 net.cpp:124] Setting up relu1
I0428 20:09:27.008864 31624 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:27.008869 31624 net.cpp:139] Memory required for data: 5326080
I0428 20:09:27.008875 31624 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:27.008885 31624 net.cpp:86] Creating Layer ip2
I0428 20:09:27.008905 31624 net.cpp:408] ip2 <- ip1
I0428 20:09:27.008914 31624 net.cpp:382] ip2 -> ip2
I0428 20:09:27.009023 31624 net.cpp:124] Setting up ip2
I0428 20:09:27.009033 31624 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:27.009038 31624 net.cpp:139] Memory required for data: 5332480
I0428 20:09:27.009048 31624 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:27.009058 31624 net.cpp:86] Creating Layer relu2
I0428 20:09:27.009068 31624 net.cpp:408] relu2 <- ip2
I0428 20:09:27.009074 31624 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:27.009871 31624 net.cpp:124] Setting up relu2
I0428 20:09:27.009884 31624 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:27.009889 31624 net.cpp:139] Memory required for data: 5338880
I0428 20:09:27.009896 31624 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:27.009904 31624 net.cpp:86] Creating Layer ip3
I0428 20:09:27.009910 31624 net.cpp:408] ip3 <- ip2
I0428 20:09:27.009919 31624 net.cpp:382] ip3 -> ip3
I0428 20:09:27.010047 31624 net.cpp:124] Setting up ip3
I0428 20:09:27.010057 31624 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:27.010062 31624 net.cpp:139] Memory required for data: 5341440
I0428 20:09:27.010074 31624 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:27.010083 31624 net.cpp:86] Creating Layer relu3
I0428 20:09:27.010089 31624 net.cpp:408] relu3 <- ip3
I0428 20:09:27.010097 31624 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:27.010265 31624 net.cpp:124] Setting up relu3
I0428 20:09:27.010289 31624 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:27.010294 31624 net.cpp:139] Memory required for data: 5344000
I0428 20:09:27.010314 31624 layer_factory.hpp:77] Creating layer loss
I0428 20:09:27.010324 31624 net.cpp:86] Creating Layer loss
I0428 20:09:27.010329 31624 net.cpp:408] loss <- ip3
I0428 20:09:27.010335 31624 net.cpp:408] loss <- label
I0428 20:09:27.010344 31624 net.cpp:382] loss -> loss
I0428 20:09:27.010365 31624 layer_factory.hpp:77] Creating layer loss
I0428 20:09:27.010571 31624 net.cpp:124] Setting up loss
I0428 20:09:27.010581 31624 net.cpp:131] Top shape: (1)
I0428 20:09:27.010586 31624 net.cpp:134]     with loss weight 1
I0428 20:09:27.010619 31624 net.cpp:139] Memory required for data: 5344004
I0428 20:09:27.010625 31624 net.cpp:200] loss needs backward computation.
I0428 20:09:27.010632 31624 net.cpp:200] relu3 needs backward computation.
I0428 20:09:27.010637 31624 net.cpp:200] ip3 needs backward computation.
I0428 20:09:27.010641 31624 net.cpp:200] relu2 needs backward computation.
I0428 20:09:27.010645 31624 net.cpp:200] ip2 needs backward computation.
I0428 20:09:27.010650 31624 net.cpp:200] relu1 needs backward computation.
I0428 20:09:27.010655 31624 net.cpp:200] ip1 needs backward computation.
I0428 20:09:27.010675 31624 net.cpp:200] pool1 needs backward computation.
I0428 20:09:27.010680 31624 net.cpp:200] conv1 needs backward computation.
I0428 20:09:27.010685 31624 net.cpp:200] pool0 needs backward computation.
I0428 20:09:27.010691 31624 net.cpp:200] conv0 needs backward computation.
I0428 20:09:27.010696 31624 net.cpp:202] mnist does not need backward computation.
I0428 20:09:27.010701 31624 net.cpp:244] This network produces output loss
I0428 20:09:27.010715 31624 net.cpp:257] Network initialization done.
I0428 20:09:27.011065 31624 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1109.prototxt
I0428 20:09:27.011099 31624 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:27.011196 31624 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:27.011322 31624 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:27.011394 31624 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:27.011425 31624 net.cpp:86] Creating Layer mnist
I0428 20:09:27.011433 31624 net.cpp:382] mnist -> data
I0428 20:09:27.011445 31624 net.cpp:382] mnist -> label
I0428 20:09:27.011556 31624 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:27.013710 31624 net.cpp:124] Setting up mnist
I0428 20:09:27.013742 31624 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:27.013751 31624 net.cpp:131] Top shape: 100 (100)
I0428 20:09:27.013756 31624 net.cpp:139] Memory required for data: 314000
I0428 20:09:27.013762 31624 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:27.013777 31624 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:27.013785 31624 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:27.013794 31624 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:27.013808 31624 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:27.013911 31624 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:27.013921 31624 net.cpp:131] Top shape: 100 (100)
I0428 20:09:27.013927 31624 net.cpp:131] Top shape: 100 (100)
I0428 20:09:27.013932 31624 net.cpp:139] Memory required for data: 314800
I0428 20:09:27.013938 31624 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:27.013952 31624 net.cpp:86] Creating Layer conv0
I0428 20:09:27.013958 31624 net.cpp:408] conv0 <- data
I0428 20:09:27.013981 31624 net.cpp:382] conv0 -> conv0
I0428 20:09:27.015543 31624 net.cpp:124] Setting up conv0
I0428 20:09:27.015570 31624 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:27.015576 31624 net.cpp:139] Memory required for data: 6074800
I0428 20:09:27.015590 31624 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:27.015611 31624 net.cpp:86] Creating Layer pool0
I0428 20:09:27.015617 31624 net.cpp:408] pool0 <- conv0
I0428 20:09:27.015627 31624 net.cpp:382] pool0 -> pool0
I0428 20:09:27.015672 31624 net.cpp:124] Setting up pool0
I0428 20:09:27.015681 31624 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:27.015687 31624 net.cpp:139] Memory required for data: 7514800
I0428 20:09:27.015692 31624 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:27.015707 31624 net.cpp:86] Creating Layer conv1
I0428 20:09:27.015713 31624 net.cpp:408] conv1 <- pool0
I0428 20:09:27.015723 31624 net.cpp:382] conv1 -> conv1
I0428 20:09:27.018065 31624 net.cpp:124] Setting up conv1
I0428 20:09:27.018092 31624 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:27.018098 31624 net.cpp:139] Memory required for data: 8154800
I0428 20:09:27.018126 31624 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:27.018136 31624 net.cpp:86] Creating Layer pool1
I0428 20:09:27.018142 31624 net.cpp:408] pool1 <- conv1
I0428 20:09:27.018167 31624 net.cpp:382] pool1 -> pool1
I0428 20:09:27.018247 31624 net.cpp:124] Setting up pool1
I0428 20:09:27.018256 31624 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:27.018261 31624 net.cpp:139] Memory required for data: 8314800
I0428 20:09:27.018267 31624 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:27.018277 31624 net.cpp:86] Creating Layer ip1
I0428 20:09:27.018285 31624 net.cpp:408] ip1 <- pool1
I0428 20:09:27.018292 31624 net.cpp:382] ip1 -> ip1
I0428 20:09:27.018419 31624 net.cpp:124] Setting up ip1
I0428 20:09:27.018429 31624 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:27.018447 31624 net.cpp:139] Memory required for data: 8318800
I0428 20:09:27.018461 31624 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:27.018471 31624 net.cpp:86] Creating Layer relu1
I0428 20:09:27.018476 31624 net.cpp:408] relu1 <- ip1
I0428 20:09:27.018484 31624 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:27.018658 31624 net.cpp:124] Setting up relu1
I0428 20:09:27.018667 31624 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:27.018673 31624 net.cpp:139] Memory required for data: 8322800
I0428 20:09:27.018685 31624 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:27.018707 31624 net.cpp:86] Creating Layer ip2
I0428 20:09:27.018713 31624 net.cpp:408] ip2 <- ip1
I0428 20:09:27.018738 31624 net.cpp:382] ip2 -> ip2
I0428 20:09:27.018851 31624 net.cpp:124] Setting up ip2
I0428 20:09:27.018859 31624 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:27.018864 31624 net.cpp:139] Memory required for data: 8332800
I0428 20:09:27.018874 31624 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:27.018882 31624 net.cpp:86] Creating Layer relu2
I0428 20:09:27.018887 31624 net.cpp:408] relu2 <- ip2
I0428 20:09:27.018909 31624 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:27.019103 31624 net.cpp:124] Setting up relu2
I0428 20:09:27.019112 31624 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:27.019117 31624 net.cpp:139] Memory required for data: 8342800
I0428 20:09:27.019122 31624 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:27.019132 31624 net.cpp:86] Creating Layer ip3
I0428 20:09:27.019139 31624 net.cpp:408] ip3 <- ip2
I0428 20:09:27.019147 31624 net.cpp:382] ip3 -> ip3
I0428 20:09:27.019295 31624 net.cpp:124] Setting up ip3
I0428 20:09:27.019304 31624 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:27.019309 31624 net.cpp:139] Memory required for data: 8346800
I0428 20:09:27.019322 31624 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:27.019330 31624 net.cpp:86] Creating Layer relu3
I0428 20:09:27.019336 31624 net.cpp:408] relu3 <- ip3
I0428 20:09:27.019343 31624 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:27.020241 31624 net.cpp:124] Setting up relu3
I0428 20:09:27.020253 31624 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:27.020259 31624 net.cpp:139] Memory required for data: 8350800
I0428 20:09:27.020267 31624 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:27.020274 31624 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:27.020287 31624 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:27.020295 31624 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:27.020306 31624 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:27.020349 31624 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:27.020357 31624 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:27.020365 31624 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:27.020370 31624 net.cpp:139] Memory required for data: 8358800
I0428 20:09:27.020375 31624 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:27.020385 31624 net.cpp:86] Creating Layer accuracy
I0428 20:09:27.020401 31624 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:27.020423 31624 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:27.020454 31624 net.cpp:382] accuracy -> accuracy
I0428 20:09:27.020467 31624 net.cpp:124] Setting up accuracy
I0428 20:09:27.020474 31624 net.cpp:131] Top shape: (1)
I0428 20:09:27.020490 31624 net.cpp:139] Memory required for data: 8358804
I0428 20:09:27.020496 31624 layer_factory.hpp:77] Creating layer loss
I0428 20:09:27.020505 31624 net.cpp:86] Creating Layer loss
I0428 20:09:27.020519 31624 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:27.020541 31624 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:27.020550 31624 net.cpp:382] loss -> loss
I0428 20:09:27.020562 31624 layer_factory.hpp:77] Creating layer loss
I0428 20:09:27.020823 31624 net.cpp:124] Setting up loss
I0428 20:09:27.020836 31624 net.cpp:131] Top shape: (1)
I0428 20:09:27.020843 31624 net.cpp:134]     with loss weight 1
I0428 20:09:27.020866 31624 net.cpp:139] Memory required for data: 8358808
I0428 20:09:27.020874 31624 net.cpp:200] loss needs backward computation.
I0428 20:09:27.020880 31624 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:27.020902 31624 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:27.020922 31624 net.cpp:200] relu3 needs backward computation.
I0428 20:09:27.020927 31624 net.cpp:200] ip3 needs backward computation.
I0428 20:09:27.020933 31624 net.cpp:200] relu2 needs backward computation.
I0428 20:09:27.020938 31624 net.cpp:200] ip2 needs backward computation.
I0428 20:09:27.020944 31624 net.cpp:200] relu1 needs backward computation.
I0428 20:09:27.020949 31624 net.cpp:200] ip1 needs backward computation.
I0428 20:09:27.020954 31624 net.cpp:200] pool1 needs backward computation.
I0428 20:09:27.020961 31624 net.cpp:200] conv1 needs backward computation.
I0428 20:09:27.020967 31624 net.cpp:200] pool0 needs backward computation.
I0428 20:09:27.020982 31624 net.cpp:200] conv0 needs backward computation.
I0428 20:09:27.020988 31624 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:27.020995 31624 net.cpp:202] mnist does not need backward computation.
I0428 20:09:27.021000 31624 net.cpp:244] This network produces output accuracy
I0428 20:09:27.021006 31624 net.cpp:244] This network produces output loss
I0428 20:09:27.021024 31624 net.cpp:257] Network initialization done.
I0428 20:09:27.021073 31624 solver.cpp:56] Solver scaffolding done.
I0428 20:09:27.021447 31624 caffe.cpp:248] Starting Optimization
I0428 20:09:27.021456 31624 solver.cpp:273] Solving LeNet
I0428 20:09:27.021459 31624 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:27.022382 31624 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:27.028311 31624 blocking_queue.cpp:49] Waiting for data
I0428 20:09:27.098994 31632 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:27.099627 31624 solver.cpp:398]     Test net output #0: accuracy = 0.1508
I0428 20:09:27.099647 31624 solver.cpp:398]     Test net output #1: loss = 2.29406 (* 1 = 2.29406 loss)
I0428 20:09:27.103605 31624 solver.cpp:219] Iteration 0 (-1.14738e-30 iter/s, 0.0821187s/100 iters), loss = 2.29074
I0428 20:09:27.103632 31624 solver.cpp:238]     Train net output #0: loss = 2.29074 (* 1 = 2.29074 loss)
I0428 20:09:27.103664 31624 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:27.211515 31624 solver.cpp:219] Iteration 100 (927.049 iter/s, 0.107869s/100 iters), loss = 1.04869
I0428 20:09:27.211565 31624 solver.cpp:238]     Train net output #0: loss = 1.04869 (* 1 = 1.04869 loss)
I0428 20:09:27.211581 31624 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:27.323338 31624 solver.cpp:219] Iteration 200 (894.723 iter/s, 0.111766s/100 iters), loss = 0.952174
I0428 20:09:27.323369 31624 solver.cpp:238]     Train net output #0: loss = 0.952174 (* 1 = 0.952174 loss)
I0428 20:09:27.323376 31624 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:27.429142 31624 solver.cpp:219] Iteration 300 (945.519 iter/s, 0.105762s/100 iters), loss = 0.586325
I0428 20:09:27.429175 31624 solver.cpp:238]     Train net output #0: loss = 0.586325 (* 1 = 0.586325 loss)
I0428 20:09:27.429183 31624 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:27.535526 31624 solver.cpp:219] Iteration 400 (940.413 iter/s, 0.106336s/100 iters), loss = 0.469425
I0428 20:09:27.535562 31624 solver.cpp:238]     Train net output #0: loss = 0.469425 (* 1 = 0.469425 loss)
I0428 20:09:27.535570 31624 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:27.639681 31624 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:27.700958 31632 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:27.701879 31624 solver.cpp:398]     Test net output #0: accuracy = 0.8507
I0428 20:09:27.701903 31624 solver.cpp:398]     Test net output #1: loss = 0.423638 (* 1 = 0.423638 loss)
I0428 20:09:27.702931 31624 solver.cpp:219] Iteration 500 (597.527 iter/s, 0.167356s/100 iters), loss = 0.401598
I0428 20:09:27.702980 31624 solver.cpp:238]     Train net output #0: loss = 0.401598 (* 1 = 0.401598 loss)
I0428 20:09:27.702989 31624 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:27.814071 31624 solver.cpp:219] Iteration 600 (900.248 iter/s, 0.11108s/100 iters), loss = 0.413264
I0428 20:09:27.814103 31624 solver.cpp:238]     Train net output #0: loss = 0.413264 (* 1 = 0.413264 loss)
I0428 20:09:27.814111 31624 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:27.921084 31624 solver.cpp:219] Iteration 700 (934.849 iter/s, 0.106969s/100 iters), loss = 0.416709
I0428 20:09:27.921116 31624 solver.cpp:238]     Train net output #0: loss = 0.416709 (* 1 = 0.416709 loss)
I0428 20:09:27.921124 31624 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:28.026847 31624 solver.cpp:219] Iteration 800 (945.887 iter/s, 0.105721s/100 iters), loss = 0.550487
I0428 20:09:28.026880 31624 solver.cpp:238]     Train net output #0: loss = 0.550487 (* 1 = 0.550487 loss)
I0428 20:09:28.026887 31624 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:28.128916 31624 solver.cpp:219] Iteration 900 (980.14 iter/s, 0.102026s/100 iters), loss = 0.647277
I0428 20:09:28.128940 31624 solver.cpp:238]     Train net output #0: loss = 0.647277 (* 1 = 0.647277 loss)
I0428 20:09:28.128947 31624 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:28.162047 31631 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:28.234633 31624 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:28.235924 31624 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:28.236773 31624 solver.cpp:311] Iteration 1000, loss = 0.291141
I0428 20:09:28.236795 31624 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:28.309653 31632 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:28.310313 31624 solver.cpp:398]     Test net output #0: accuracy = 0.8724
I0428 20:09:28.310339 31624 solver.cpp:398]     Test net output #1: loss = 0.325849 (* 1 = 0.325849 loss)
I0428 20:09:28.310346 31624 solver.cpp:316] Optimization Done.
I0428 20:09:28.310350 31624 caffe.cpp:259] Optimization Done.
