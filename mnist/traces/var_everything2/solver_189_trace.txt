I0428 19:33:48.309638 23209 caffe.cpp:218] Using GPUs 0
I0428 19:33:48.347097 23209 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:48.862346 23209 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test189.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:48.862510 23209 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test189.prototxt
I0428 19:33:48.862867 23209 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:48.862889 23209 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:48.862979 23209 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:48.863075 23209 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:48.863200 23209 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:48.863232 23209 net.cpp:86] Creating Layer mnist
I0428 19:33:48.863245 23209 net.cpp:382] mnist -> data
I0428 19:33:48.863275 23209 net.cpp:382] mnist -> label
I0428 19:33:48.864459 23209 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:48.866930 23209 net.cpp:124] Setting up mnist
I0428 19:33:48.866948 23209 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:48.866960 23209 net.cpp:131] Top shape: 64 (64)
I0428 19:33:48.866966 23209 net.cpp:139] Memory required for data: 200960
I0428 19:33:48.866976 23209 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:48.866998 23209 net.cpp:86] Creating Layer conv0
I0428 19:33:48.867008 23209 net.cpp:408] conv0 <- data
I0428 19:33:48.867025 23209 net.cpp:382] conv0 -> conv0
I0428 19:33:49.155318 23209 net.cpp:124] Setting up conv0
I0428 19:33:49.155352 23209 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:49.155359 23209 net.cpp:139] Memory required for data: 3887360
I0428 19:33:49.155383 23209 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:49.155405 23209 net.cpp:86] Creating Layer pool0
I0428 19:33:49.155433 23209 net.cpp:408] pool0 <- conv0
I0428 19:33:49.155445 23209 net.cpp:382] pool0 -> pool0
I0428 19:33:49.155515 23209 net.cpp:124] Setting up pool0
I0428 19:33:49.155527 23209 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:49.155534 23209 net.cpp:139] Memory required for data: 4808960
I0428 19:33:49.155540 23209 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:49.155555 23209 net.cpp:86] Creating Layer ip1
I0428 19:33:49.155565 23209 net.cpp:408] ip1 <- pool0
I0428 19:33:49.155576 23209 net.cpp:382] ip1 -> ip1
I0428 19:33:49.157912 23209 net.cpp:124] Setting up ip1
I0428 19:33:49.157929 23209 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:49.157937 23209 net.cpp:139] Memory required for data: 4821760
I0428 19:33:49.157953 23209 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:49.157965 23209 net.cpp:86] Creating Layer relu1
I0428 19:33:49.157973 23209 net.cpp:408] relu1 <- ip1
I0428 19:33:49.157981 23209 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:49.158191 23209 net.cpp:124] Setting up relu1
I0428 19:33:49.158205 23209 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:49.158210 23209 net.cpp:139] Memory required for data: 4834560
I0428 19:33:49.158217 23209 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:49.158229 23209 net.cpp:86] Creating Layer ip2
I0428 19:33:49.158236 23209 net.cpp:408] ip2 <- ip1
I0428 19:33:49.158247 23209 net.cpp:382] ip2 -> ip2
I0428 19:33:49.159355 23209 net.cpp:124] Setting up ip2
I0428 19:33:49.159373 23209 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:49.159379 23209 net.cpp:139] Memory required for data: 4840960
I0428 19:33:49.159394 23209 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:49.159405 23209 net.cpp:86] Creating Layer relu2
I0428 19:33:49.159412 23209 net.cpp:408] relu2 <- ip2
I0428 19:33:49.159422 23209 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:49.160290 23209 net.cpp:124] Setting up relu2
I0428 19:33:49.160307 23209 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:49.160313 23209 net.cpp:139] Memory required for data: 4847360
I0428 19:33:49.160321 23209 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:49.160334 23209 net.cpp:86] Creating Layer ip3
I0428 19:33:49.160341 23209 net.cpp:408] ip3 <- ip2
I0428 19:33:49.160352 23209 net.cpp:382] ip3 -> ip3
I0428 19:33:49.160477 23209 net.cpp:124] Setting up ip3
I0428 19:33:49.160488 23209 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:49.160495 23209 net.cpp:139] Memory required for data: 4849920
I0428 19:33:49.160507 23209 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:49.160519 23209 net.cpp:86] Creating Layer relu3
I0428 19:33:49.160532 23209 net.cpp:408] relu3 <- ip3
I0428 19:33:49.160542 23209 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:49.160737 23209 net.cpp:124] Setting up relu3
I0428 19:33:49.160755 23209 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:49.160761 23209 net.cpp:139] Memory required for data: 4852480
I0428 19:33:49.160768 23209 layer_factory.hpp:77] Creating layer loss
I0428 19:33:49.160778 23209 net.cpp:86] Creating Layer loss
I0428 19:33:49.160785 23209 net.cpp:408] loss <- ip3
I0428 19:33:49.160794 23209 net.cpp:408] loss <- label
I0428 19:33:49.160804 23209 net.cpp:382] loss -> loss
I0428 19:33:49.160845 23209 layer_factory.hpp:77] Creating layer loss
I0428 19:33:49.161134 23209 net.cpp:124] Setting up loss
I0428 19:33:49.161149 23209 net.cpp:131] Top shape: (1)
I0428 19:33:49.161154 23209 net.cpp:134]     with loss weight 1
I0428 19:33:49.161177 23209 net.cpp:139] Memory required for data: 4852484
I0428 19:33:49.161185 23209 net.cpp:200] loss needs backward computation.
I0428 19:33:49.161192 23209 net.cpp:200] relu3 needs backward computation.
I0428 19:33:49.161201 23209 net.cpp:200] ip3 needs backward computation.
I0428 19:33:49.161206 23209 net.cpp:200] relu2 needs backward computation.
I0428 19:33:49.161212 23209 net.cpp:200] ip2 needs backward computation.
I0428 19:33:49.161218 23209 net.cpp:200] relu1 needs backward computation.
I0428 19:33:49.161224 23209 net.cpp:200] ip1 needs backward computation.
I0428 19:33:49.161244 23209 net.cpp:200] pool0 needs backward computation.
I0428 19:33:49.161252 23209 net.cpp:200] conv0 needs backward computation.
I0428 19:33:49.161258 23209 net.cpp:202] mnist does not need backward computation.
I0428 19:33:49.161264 23209 net.cpp:244] This network produces output loss
I0428 19:33:49.161280 23209 net.cpp:257] Network initialization done.
I0428 19:33:49.161618 23209 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test189.prototxt
I0428 19:33:49.161659 23209 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:49.161763 23209 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:49.161878 23209 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:49.161949 23209 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:49.161972 23209 net.cpp:86] Creating Layer mnist
I0428 19:33:49.161981 23209 net.cpp:382] mnist -> data
I0428 19:33:49.161995 23209 net.cpp:382] mnist -> label
I0428 19:33:49.162137 23209 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:49.163703 23209 net.cpp:124] Setting up mnist
I0428 19:33:49.163722 23209 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:49.163731 23209 net.cpp:131] Top shape: 100 (100)
I0428 19:33:49.163738 23209 net.cpp:139] Memory required for data: 314000
I0428 19:33:49.163744 23209 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:49.163756 23209 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:49.163763 23209 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:49.163774 23209 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:49.163786 23209 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:49.163887 23209 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:49.163898 23209 net.cpp:131] Top shape: 100 (100)
I0428 19:33:49.163907 23209 net.cpp:131] Top shape: 100 (100)
I0428 19:33:49.163913 23209 net.cpp:139] Memory required for data: 314800
I0428 19:33:49.163931 23209 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:49.163949 23209 net.cpp:86] Creating Layer conv0
I0428 19:33:49.163956 23209 net.cpp:408] conv0 <- data
I0428 19:33:49.163967 23209 net.cpp:382] conv0 -> conv0
I0428 19:33:49.165644 23209 net.cpp:124] Setting up conv0
I0428 19:33:49.165663 23209 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:49.165670 23209 net.cpp:139] Memory required for data: 6074800
I0428 19:33:49.165688 23209 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:49.165699 23209 net.cpp:86] Creating Layer pool0
I0428 19:33:49.165706 23209 net.cpp:408] pool0 <- conv0
I0428 19:33:49.165716 23209 net.cpp:382] pool0 -> pool0
I0428 19:33:49.165767 23209 net.cpp:124] Setting up pool0
I0428 19:33:49.165778 23209 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:49.165786 23209 net.cpp:139] Memory required for data: 7514800
I0428 19:33:49.165792 23209 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:49.165805 23209 net.cpp:86] Creating Layer ip1
I0428 19:33:49.165812 23209 net.cpp:408] ip1 <- pool0
I0428 19:33:49.165823 23209 net.cpp:382] ip1 -> ip1
I0428 19:33:49.168165 23209 net.cpp:124] Setting up ip1
I0428 19:33:49.168182 23209 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:49.168190 23209 net.cpp:139] Memory required for data: 7534800
I0428 19:33:49.168205 23209 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:49.168215 23209 net.cpp:86] Creating Layer relu1
I0428 19:33:49.168223 23209 net.cpp:408] relu1 <- ip1
I0428 19:33:49.168233 23209 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:49.168438 23209 net.cpp:124] Setting up relu1
I0428 19:33:49.168452 23209 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:49.168460 23209 net.cpp:139] Memory required for data: 7554800
I0428 19:33:49.168467 23209 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:49.168478 23209 net.cpp:86] Creating Layer ip2
I0428 19:33:49.168486 23209 net.cpp:408] ip2 <- ip1
I0428 19:33:49.168498 23209 net.cpp:382] ip2 -> ip2
I0428 19:33:49.168639 23209 net.cpp:124] Setting up ip2
I0428 19:33:49.168651 23209 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:49.168658 23209 net.cpp:139] Memory required for data: 7564800
I0428 19:33:49.168673 23209 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:49.168682 23209 net.cpp:86] Creating Layer relu2
I0428 19:33:49.168704 23209 net.cpp:408] relu2 <- ip2
I0428 19:33:49.168712 23209 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:49.169616 23209 net.cpp:124] Setting up relu2
I0428 19:33:49.169632 23209 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:49.169639 23209 net.cpp:139] Memory required for data: 7574800
I0428 19:33:49.169646 23209 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:49.169661 23209 net.cpp:86] Creating Layer ip3
I0428 19:33:49.169668 23209 net.cpp:408] ip3 <- ip2
I0428 19:33:49.169680 23209 net.cpp:382] ip3 -> ip3
I0428 19:33:49.169880 23209 net.cpp:124] Setting up ip3
I0428 19:33:49.169893 23209 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:49.169899 23209 net.cpp:139] Memory required for data: 7578800
I0428 19:33:49.169911 23209 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:49.169921 23209 net.cpp:86] Creating Layer relu3
I0428 19:33:49.169930 23209 net.cpp:408] relu3 <- ip3
I0428 19:33:49.169939 23209 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:49.170130 23209 net.cpp:124] Setting up relu3
I0428 19:33:49.170142 23209 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:49.170148 23209 net.cpp:139] Memory required for data: 7582800
I0428 19:33:49.170155 23209 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:49.170164 23209 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:49.170172 23209 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:49.170181 23209 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:49.170194 23209 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:49.170243 23209 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:49.170253 23209 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:49.170262 23209 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:49.170284 23209 net.cpp:139] Memory required for data: 7590800
I0428 19:33:49.170290 23209 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:49.170300 23209 net.cpp:86] Creating Layer accuracy
I0428 19:33:49.170306 23209 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:49.170315 23209 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:49.170325 23209 net.cpp:382] accuracy -> accuracy
I0428 19:33:49.170339 23209 net.cpp:124] Setting up accuracy
I0428 19:33:49.170349 23209 net.cpp:131] Top shape: (1)
I0428 19:33:49.170356 23209 net.cpp:139] Memory required for data: 7590804
I0428 19:33:49.170362 23209 layer_factory.hpp:77] Creating layer loss
I0428 19:33:49.170372 23209 net.cpp:86] Creating Layer loss
I0428 19:33:49.170378 23209 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:49.170387 23209 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:49.170395 23209 net.cpp:382] loss -> loss
I0428 19:33:49.170408 23209 layer_factory.hpp:77] Creating layer loss
I0428 19:33:49.170702 23209 net.cpp:124] Setting up loss
I0428 19:33:49.170714 23209 net.cpp:131] Top shape: (1)
I0428 19:33:49.170722 23209 net.cpp:134]     with loss weight 1
I0428 19:33:49.170732 23209 net.cpp:139] Memory required for data: 7590808
I0428 19:33:49.170739 23209 net.cpp:200] loss needs backward computation.
I0428 19:33:49.170747 23209 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:49.170755 23209 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:49.170761 23209 net.cpp:200] relu3 needs backward computation.
I0428 19:33:49.170768 23209 net.cpp:200] ip3 needs backward computation.
I0428 19:33:49.170774 23209 net.cpp:200] relu2 needs backward computation.
I0428 19:33:49.170783 23209 net.cpp:200] ip2 needs backward computation.
I0428 19:33:49.170789 23209 net.cpp:200] relu1 needs backward computation.
I0428 19:33:49.170794 23209 net.cpp:200] ip1 needs backward computation.
I0428 19:33:49.170800 23209 net.cpp:200] pool0 needs backward computation.
I0428 19:33:49.170807 23209 net.cpp:200] conv0 needs backward computation.
I0428 19:33:49.170814 23209 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:49.170822 23209 net.cpp:202] mnist does not need backward computation.
I0428 19:33:49.170828 23209 net.cpp:244] This network produces output accuracy
I0428 19:33:49.170835 23209 net.cpp:244] This network produces output loss
I0428 19:33:49.170853 23209 net.cpp:257] Network initialization done.
I0428 19:33:49.170905 23209 solver.cpp:56] Solver scaffolding done.
I0428 19:33:49.171229 23209 caffe.cpp:248] Starting Optimization
I0428 19:33:49.171238 23209 solver.cpp:273] Solving LeNet
I0428 19:33:49.171243 23209 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:49.172838 23209 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:49.180799 23209 blocking_queue.cpp:49] Waiting for data
I0428 19:33:49.250700 23216 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:49.251514 23209 solver.cpp:398]     Test net output #0: accuracy = 0.1117
I0428 19:33:49.251535 23209 solver.cpp:398]     Test net output #1: loss = 2.32353 (* 1 = 2.32353 loss)
I0428 19:33:49.254654 23209 solver.cpp:219] Iteration 0 (-4.60909e-31 iter/s, 0.083381s/100 iters), loss = 2.34876
I0428 19:33:49.254684 23209 solver.cpp:238]     Train net output #0: loss = 2.34876 (* 1 = 2.34876 loss)
I0428 19:33:49.254703 23209 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:49.360949 23209 solver.cpp:219] Iteration 100 (941.12 iter/s, 0.106256s/100 iters), loss = 0.54384
I0428 19:33:49.360977 23209 solver.cpp:238]     Train net output #0: loss = 0.54384 (* 1 = 0.54384 loss)
I0428 19:33:49.361003 23209 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:49.458878 23209 solver.cpp:219] Iteration 200 (1021.52 iter/s, 0.0978934s/100 iters), loss = 0.516345
I0428 19:33:49.458904 23209 solver.cpp:238]     Train net output #0: loss = 0.516345 (* 1 = 0.516345 loss)
I0428 19:33:49.458930 23209 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:49.559641 23209 solver.cpp:219] Iteration 300 (992.835 iter/s, 0.100722s/100 iters), loss = 0.58369
I0428 19:33:49.559705 23209 solver.cpp:238]     Train net output #0: loss = 0.58369 (* 1 = 0.58369 loss)
I0428 19:33:49.559720 23209 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:49.665747 23209 solver.cpp:219] Iteration 400 (942.965 iter/s, 0.106049s/100 iters), loss = 0.338423
I0428 19:33:49.665779 23209 solver.cpp:238]     Train net output #0: loss = 0.338423 (* 1 = 0.338423 loss)
I0428 19:33:49.665788 23209 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:49.768760 23209 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:49.847049 23216 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:49.847955 23209 solver.cpp:398]     Test net output #0: accuracy = 0.8522
I0428 19:33:49.847981 23209 solver.cpp:398]     Test net output #1: loss = 0.406488 (* 1 = 0.406488 loss)
I0428 19:33:49.849062 23209 solver.cpp:219] Iteration 500 (545.645 iter/s, 0.183269s/100 iters), loss = 0.353679
I0428 19:33:49.849092 23209 solver.cpp:238]     Train net output #0: loss = 0.353679 (* 1 = 0.353679 loss)
I0428 19:33:49.849100 23209 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:49.953887 23209 solver.cpp:219] Iteration 600 (954.355 iter/s, 0.104783s/100 iters), loss = 0.308031
I0428 19:33:49.953918 23209 solver.cpp:238]     Train net output #0: loss = 0.308031 (* 1 = 0.308031 loss)
I0428 19:33:49.953927 23209 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:50.056725 23209 solver.cpp:219] Iteration 700 (972.807 iter/s, 0.102795s/100 iters), loss = 0.649277
I0428 19:33:50.056754 23209 solver.cpp:238]     Train net output #0: loss = 0.649277 (* 1 = 0.649277 loss)
I0428 19:33:50.056762 23209 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:50.160115 23209 solver.cpp:219] Iteration 800 (967.593 iter/s, 0.103349s/100 iters), loss = 0.429835
I0428 19:33:50.160145 23209 solver.cpp:238]     Train net output #0: loss = 0.429835 (* 1 = 0.429835 loss)
I0428 19:33:50.160153 23209 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:50.265132 23209 solver.cpp:219] Iteration 900 (952.604 iter/s, 0.104975s/100 iters), loss = 0.480856
I0428 19:33:50.265163 23209 solver.cpp:238]     Train net output #0: loss = 0.480856 (* 1 = 0.480856 loss)
I0428 19:33:50.265172 23209 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:50.299011 23215 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:50.364449 23209 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:50.368302 23209 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:50.370266 23209 solver.cpp:311] Iteration 1000, loss = 0.415409
I0428 19:33:50.370282 23209 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:50.446686 23216 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:50.447463 23209 solver.cpp:398]     Test net output #0: accuracy = 0.8707
I0428 19:33:50.447496 23209 solver.cpp:398]     Test net output #1: loss = 0.345829 (* 1 = 0.345829 loss)
I0428 19:33:50.447501 23209 solver.cpp:316] Optimization Done.
I0428 19:33:50.447504 23209 caffe.cpp:259] Optimization Done.
