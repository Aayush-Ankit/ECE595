I0428 19:39:00.457008 24190 caffe.cpp:218] Using GPUs 0
I0428 19:39:00.496176 24190 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:00.959002 24190 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test291.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:00.959141 24190 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test291.prototxt
I0428 19:39:00.959466 24190 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:00.959502 24190 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:00.959591 24190 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:00.959681 24190 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:00.959791 24190 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:00.959832 24190 net.cpp:86] Creating Layer mnist
I0428 19:39:00.959842 24190 net.cpp:382] mnist -> data
I0428 19:39:00.959867 24190 net.cpp:382] mnist -> label
I0428 19:39:00.961040 24190 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:00.963301 24190 net.cpp:124] Setting up mnist
I0428 19:39:00.963335 24190 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:00.963342 24190 net.cpp:131] Top shape: 64 (64)
I0428 19:39:00.963347 24190 net.cpp:139] Memory required for data: 200960
I0428 19:39:00.963356 24190 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:00.963377 24190 net.cpp:86] Creating Layer conv0
I0428 19:39:00.963397 24190 net.cpp:408] conv0 <- data
I0428 19:39:00.963423 24190 net.cpp:382] conv0 -> conv0
I0428 19:39:01.193110 24190 net.cpp:124] Setting up conv0
I0428 19:39:01.193140 24190 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:01.193145 24190 net.cpp:139] Memory required for data: 495872
I0428 19:39:01.193164 24190 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:01.193181 24190 net.cpp:86] Creating Layer pool0
I0428 19:39:01.193195 24190 net.cpp:408] pool0 <- conv0
I0428 19:39:01.193203 24190 net.cpp:382] pool0 -> pool0
I0428 19:39:01.193255 24190 net.cpp:124] Setting up pool0
I0428 19:39:01.193264 24190 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:01.193269 24190 net.cpp:139] Memory required for data: 569600
I0428 19:39:01.193274 24190 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:01.193287 24190 net.cpp:86] Creating Layer conv1
I0428 19:39:01.193295 24190 net.cpp:408] conv1 <- pool0
I0428 19:39:01.193302 24190 net.cpp:382] conv1 -> conv1
I0428 19:39:01.195175 24190 net.cpp:124] Setting up conv1
I0428 19:39:01.195192 24190 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:01.195199 24190 net.cpp:139] Memory required for data: 602368
I0428 19:39:01.195212 24190 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:01.195225 24190 net.cpp:86] Creating Layer pool1
I0428 19:39:01.195231 24190 net.cpp:408] pool1 <- conv1
I0428 19:39:01.195240 24190 net.cpp:382] pool1 -> pool1
I0428 19:39:01.195291 24190 net.cpp:124] Setting up pool1
I0428 19:39:01.195299 24190 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:01.195304 24190 net.cpp:139] Memory required for data: 610560
I0428 19:39:01.195310 24190 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:01.195322 24190 net.cpp:86] Creating Layer ip1
I0428 19:39:01.195333 24190 net.cpp:408] ip1 <- pool1
I0428 19:39:01.195340 24190 net.cpp:382] ip1 -> ip1
I0428 19:39:01.195468 24190 net.cpp:124] Setting up ip1
I0428 19:39:01.195492 24190 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:01.195497 24190 net.cpp:139] Memory required for data: 613120
I0428 19:39:01.195508 24190 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:01.195516 24190 net.cpp:86] Creating Layer relu1
I0428 19:39:01.195523 24190 net.cpp:408] relu1 <- ip1
I0428 19:39:01.195529 24190 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:01.195684 24190 net.cpp:124] Setting up relu1
I0428 19:39:01.195694 24190 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:01.195699 24190 net.cpp:139] Memory required for data: 615680
I0428 19:39:01.195704 24190 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:01.195713 24190 net.cpp:86] Creating Layer ip2
I0428 19:39:01.195719 24190 net.cpp:408] ip2 <- ip1
I0428 19:39:01.195727 24190 net.cpp:382] ip2 -> ip2
I0428 19:39:01.195843 24190 net.cpp:124] Setting up ip2
I0428 19:39:01.195852 24190 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:01.195873 24190 net.cpp:139] Memory required for data: 628480
I0428 19:39:01.195883 24190 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:01.195891 24190 net.cpp:86] Creating Layer relu2
I0428 19:39:01.195896 24190 net.cpp:408] relu2 <- ip2
I0428 19:39:01.195904 24190 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:01.196663 24190 net.cpp:124] Setting up relu2
I0428 19:39:01.196678 24190 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:01.196699 24190 net.cpp:139] Memory required for data: 641280
I0428 19:39:01.196704 24190 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:01.196715 24190 net.cpp:86] Creating Layer ip3
I0428 19:39:01.196737 24190 net.cpp:408] ip3 <- ip2
I0428 19:39:01.196746 24190 net.cpp:382] ip3 -> ip3
I0428 19:39:01.196869 24190 net.cpp:124] Setting up ip3
I0428 19:39:01.196879 24190 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:01.196885 24190 net.cpp:139] Memory required for data: 643840
I0428 19:39:01.196899 24190 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:01.196909 24190 net.cpp:86] Creating Layer relu3
I0428 19:39:01.196915 24190 net.cpp:408] relu3 <- ip3
I0428 19:39:01.196923 24190 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:01.197172 24190 net.cpp:124] Setting up relu3
I0428 19:39:01.197182 24190 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:01.197187 24190 net.cpp:139] Memory required for data: 646400
I0428 19:39:01.197192 24190 layer_factory.hpp:77] Creating layer loss
I0428 19:39:01.197201 24190 net.cpp:86] Creating Layer loss
I0428 19:39:01.197206 24190 net.cpp:408] loss <- ip3
I0428 19:39:01.197212 24190 net.cpp:408] loss <- label
I0428 19:39:01.197221 24190 net.cpp:382] loss -> loss
I0428 19:39:01.197243 24190 layer_factory.hpp:77] Creating layer loss
I0428 19:39:01.197530 24190 net.cpp:124] Setting up loss
I0428 19:39:01.197556 24190 net.cpp:131] Top shape: (1)
I0428 19:39:01.197561 24190 net.cpp:134]     with loss weight 1
I0428 19:39:01.197580 24190 net.cpp:139] Memory required for data: 646404
I0428 19:39:01.197587 24190 net.cpp:200] loss needs backward computation.
I0428 19:39:01.197593 24190 net.cpp:200] relu3 needs backward computation.
I0428 19:39:01.197599 24190 net.cpp:200] ip3 needs backward computation.
I0428 19:39:01.197604 24190 net.cpp:200] relu2 needs backward computation.
I0428 19:39:01.197609 24190 net.cpp:200] ip2 needs backward computation.
I0428 19:39:01.197614 24190 net.cpp:200] relu1 needs backward computation.
I0428 19:39:01.197619 24190 net.cpp:200] ip1 needs backward computation.
I0428 19:39:01.197628 24190 net.cpp:200] pool1 needs backward computation.
I0428 19:39:01.197633 24190 net.cpp:200] conv1 needs backward computation.
I0428 19:39:01.197638 24190 net.cpp:200] pool0 needs backward computation.
I0428 19:39:01.197643 24190 net.cpp:200] conv0 needs backward computation.
I0428 19:39:01.197649 24190 net.cpp:202] mnist does not need backward computation.
I0428 19:39:01.197654 24190 net.cpp:244] This network produces output loss
I0428 19:39:01.197669 24190 net.cpp:257] Network initialization done.
I0428 19:39:01.198071 24190 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test291.prototxt
I0428 19:39:01.198106 24190 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:01.198220 24190 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:01.198343 24190 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:01.198415 24190 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:01.198432 24190 net.cpp:86] Creating Layer mnist
I0428 19:39:01.198442 24190 net.cpp:382] mnist -> data
I0428 19:39:01.198453 24190 net.cpp:382] mnist -> label
I0428 19:39:01.198578 24190 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:01.200948 24190 net.cpp:124] Setting up mnist
I0428 19:39:01.200979 24190 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:01.201001 24190 net.cpp:131] Top shape: 100 (100)
I0428 19:39:01.201005 24190 net.cpp:139] Memory required for data: 314000
I0428 19:39:01.201026 24190 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:01.201036 24190 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:01.201041 24190 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:01.201052 24190 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:01.201062 24190 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:01.201180 24190 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:01.201189 24190 net.cpp:131] Top shape: 100 (100)
I0428 19:39:01.201195 24190 net.cpp:131] Top shape: 100 (100)
I0428 19:39:01.201200 24190 net.cpp:139] Memory required for data: 314800
I0428 19:39:01.201205 24190 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:01.201222 24190 net.cpp:86] Creating Layer conv0
I0428 19:39:01.201228 24190 net.cpp:408] conv0 <- data
I0428 19:39:01.201237 24190 net.cpp:382] conv0 -> conv0
I0428 19:39:01.202935 24190 net.cpp:124] Setting up conv0
I0428 19:39:01.202950 24190 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:01.202955 24190 net.cpp:139] Memory required for data: 775600
I0428 19:39:01.202970 24190 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:01.202981 24190 net.cpp:86] Creating Layer pool0
I0428 19:39:01.203002 24190 net.cpp:408] pool0 <- conv0
I0428 19:39:01.203011 24190 net.cpp:382] pool0 -> pool0
I0428 19:39:01.203055 24190 net.cpp:124] Setting up pool0
I0428 19:39:01.203065 24190 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:01.203070 24190 net.cpp:139] Memory required for data: 890800
I0428 19:39:01.203075 24190 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:01.203090 24190 net.cpp:86] Creating Layer conv1
I0428 19:39:01.203097 24190 net.cpp:408] conv1 <- pool0
I0428 19:39:01.203109 24190 net.cpp:382] conv1 -> conv1
I0428 19:39:01.204893 24190 net.cpp:124] Setting up conv1
I0428 19:39:01.204910 24190 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:01.204916 24190 net.cpp:139] Memory required for data: 942000
I0428 19:39:01.204931 24190 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:01.204943 24190 net.cpp:86] Creating Layer pool1
I0428 19:39:01.204949 24190 net.cpp:408] pool1 <- conv1
I0428 19:39:01.204962 24190 net.cpp:382] pool1 -> pool1
I0428 19:39:01.205018 24190 net.cpp:124] Setting up pool1
I0428 19:39:01.205029 24190 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:01.205034 24190 net.cpp:139] Memory required for data: 954800
I0428 19:39:01.205039 24190 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:01.205052 24190 net.cpp:86] Creating Layer ip1
I0428 19:39:01.205060 24190 net.cpp:408] ip1 <- pool1
I0428 19:39:01.205070 24190 net.cpp:382] ip1 -> ip1
I0428 19:39:01.205193 24190 net.cpp:124] Setting up ip1
I0428 19:39:01.205216 24190 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:01.205247 24190 net.cpp:139] Memory required for data: 958800
I0428 19:39:01.205260 24190 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:01.205271 24190 net.cpp:86] Creating Layer relu1
I0428 19:39:01.205276 24190 net.cpp:408] relu1 <- ip1
I0428 19:39:01.205286 24190 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:01.205514 24190 net.cpp:124] Setting up relu1
I0428 19:39:01.205524 24190 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:01.205545 24190 net.cpp:139] Memory required for data: 962800
I0428 19:39:01.205550 24190 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:01.205564 24190 net.cpp:86] Creating Layer ip2
I0428 19:39:01.205571 24190 net.cpp:408] ip2 <- ip1
I0428 19:39:01.205581 24190 net.cpp:382] ip2 -> ip2
I0428 19:39:01.205703 24190 net.cpp:124] Setting up ip2
I0428 19:39:01.205711 24190 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:01.205715 24190 net.cpp:139] Memory required for data: 982800
I0428 19:39:01.205724 24190 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:01.205747 24190 net.cpp:86] Creating Layer relu2
I0428 19:39:01.205752 24190 net.cpp:408] relu2 <- ip2
I0428 19:39:01.205775 24190 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:01.205953 24190 net.cpp:124] Setting up relu2
I0428 19:39:01.205965 24190 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:01.205971 24190 net.cpp:139] Memory required for data: 1002800
I0428 19:39:01.205976 24190 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:01.205986 24190 net.cpp:86] Creating Layer ip3
I0428 19:39:01.205991 24190 net.cpp:408] ip3 <- ip2
I0428 19:39:01.206001 24190 net.cpp:382] ip3 -> ip3
I0428 19:39:01.206133 24190 net.cpp:124] Setting up ip3
I0428 19:39:01.206142 24190 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:01.206147 24190 net.cpp:139] Memory required for data: 1006800
I0428 19:39:01.206174 24190 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:01.206183 24190 net.cpp:86] Creating Layer relu3
I0428 19:39:01.206193 24190 net.cpp:408] relu3 <- ip3
I0428 19:39:01.206202 24190 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:01.206996 24190 net.cpp:124] Setting up relu3
I0428 19:39:01.207010 24190 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:01.207015 24190 net.cpp:139] Memory required for data: 1010800
I0428 19:39:01.207020 24190 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:01.207028 24190 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:01.207033 24190 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:01.207043 24190 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:01.207053 24190 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:01.207139 24190 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:01.207149 24190 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:01.207154 24190 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:01.207173 24190 net.cpp:139] Memory required for data: 1018800
I0428 19:39:01.207178 24190 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:01.207190 24190 net.cpp:86] Creating Layer accuracy
I0428 19:39:01.207195 24190 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:01.207201 24190 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:01.207211 24190 net.cpp:382] accuracy -> accuracy
I0428 19:39:01.207221 24190 net.cpp:124] Setting up accuracy
I0428 19:39:01.207229 24190 net.cpp:131] Top shape: (1)
I0428 19:39:01.207234 24190 net.cpp:139] Memory required for data: 1018804
I0428 19:39:01.207239 24190 layer_factory.hpp:77] Creating layer loss
I0428 19:39:01.207247 24190 net.cpp:86] Creating Layer loss
I0428 19:39:01.207252 24190 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:01.207258 24190 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:01.207265 24190 net.cpp:382] loss -> loss
I0428 19:39:01.207274 24190 layer_factory.hpp:77] Creating layer loss
I0428 19:39:01.207502 24190 net.cpp:124] Setting up loss
I0428 19:39:01.207512 24190 net.cpp:131] Top shape: (1)
I0428 19:39:01.207517 24190 net.cpp:134]     with loss weight 1
I0428 19:39:01.207525 24190 net.cpp:139] Memory required for data: 1018808
I0428 19:39:01.207540 24190 net.cpp:200] loss needs backward computation.
I0428 19:39:01.207546 24190 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:01.207552 24190 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:01.207557 24190 net.cpp:200] relu3 needs backward computation.
I0428 19:39:01.207562 24190 net.cpp:200] ip3 needs backward computation.
I0428 19:39:01.207567 24190 net.cpp:200] relu2 needs backward computation.
I0428 19:39:01.207571 24190 net.cpp:200] ip2 needs backward computation.
I0428 19:39:01.207576 24190 net.cpp:200] relu1 needs backward computation.
I0428 19:39:01.207581 24190 net.cpp:200] ip1 needs backward computation.
I0428 19:39:01.207587 24190 net.cpp:200] pool1 needs backward computation.
I0428 19:39:01.207597 24190 net.cpp:200] conv1 needs backward computation.
I0428 19:39:01.207602 24190 net.cpp:200] pool0 needs backward computation.
I0428 19:39:01.207623 24190 net.cpp:200] conv0 needs backward computation.
I0428 19:39:01.207628 24190 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:01.207633 24190 net.cpp:202] mnist does not need backward computation.
I0428 19:39:01.207638 24190 net.cpp:244] This network produces output accuracy
I0428 19:39:01.207644 24190 net.cpp:244] This network produces output loss
I0428 19:39:01.207661 24190 net.cpp:257] Network initialization done.
I0428 19:39:01.207713 24190 solver.cpp:56] Solver scaffolding done.
I0428 19:39:01.208107 24190 caffe.cpp:248] Starting Optimization
I0428 19:39:01.208114 24190 solver.cpp:273] Solving LeNet
I0428 19:39:01.208119 24190 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:01.209136 24190 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:01.211833 24190 blocking_queue.cpp:49] Waiting for data
I0428 19:39:01.283794 24197 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:01.284327 24190 solver.cpp:398]     Test net output #0: accuracy = 0.0982
I0428 19:39:01.284358 24190 solver.cpp:398]     Test net output #1: loss = 2.30317 (* 1 = 2.30317 loss)
I0428 19:39:01.286669 24190 solver.cpp:219] Iteration 0 (0 iter/s, 0.0785039s/100 iters), loss = 2.30527
I0428 19:39:01.286707 24190 solver.cpp:238]     Train net output #0: loss = 2.30527 (* 1 = 2.30527 loss)
I0428 19:39:01.286731 24190 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:01.364436 24190 solver.cpp:219] Iteration 100 (1286.66 iter/s, 0.0777206s/100 iters), loss = 1.33464
I0428 19:39:01.364470 24190 solver.cpp:238]     Train net output #0: loss = 1.33464 (* 1 = 1.33464 loss)
I0428 19:39:01.364480 24190 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:01.431917 24190 solver.cpp:219] Iteration 200 (1482.74 iter/s, 0.0674427s/100 iters), loss = 1.00784
I0428 19:39:01.431942 24190 solver.cpp:238]     Train net output #0: loss = 1.00784 (* 1 = 1.00784 loss)
I0428 19:39:01.431967 24190 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:01.498656 24190 solver.cpp:219] Iteration 300 (1499.08 iter/s, 0.0667075s/100 iters), loss = 1.4317
I0428 19:39:01.498683 24190 solver.cpp:238]     Train net output #0: loss = 1.4317 (* 1 = 1.4317 loss)
I0428 19:39:01.498708 24190 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:01.565376 24190 solver.cpp:219] Iteration 400 (1499.54 iter/s, 0.066687s/100 iters), loss = 1.08718
I0428 19:39:01.565402 24190 solver.cpp:238]     Train net output #0: loss = 1.08718 (* 1 = 1.08718 loss)
I0428 19:39:01.565428 24190 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:01.632566 24190 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:01.685328 24197 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:01.685762 24190 solver.cpp:398]     Test net output #0: accuracy = 0.7123
I0428 19:39:01.685784 24190 solver.cpp:398]     Test net output #1: loss = 0.850529 (* 1 = 0.850529 loss)
I0428 19:39:01.686555 24190 solver.cpp:219] Iteration 500 (825.476 iter/s, 0.121142s/100 iters), loss = 0.744693
I0428 19:39:01.686583 24190 solver.cpp:238]     Train net output #0: loss = 0.744693 (* 1 = 0.744693 loss)
I0428 19:39:01.686614 24190 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:01.756674 24190 solver.cpp:219] Iteration 600 (1426.87 iter/s, 0.0700836s/100 iters), loss = 0.700773
I0428 19:39:01.756700 24190 solver.cpp:238]     Train net output #0: loss = 0.700773 (* 1 = 0.700773 loss)
I0428 19:39:01.756726 24190 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:01.825469 24190 solver.cpp:219] Iteration 700 (1454.32 iter/s, 0.0687608s/100 iters), loss = 0.449559
I0428 19:39:01.825495 24190 solver.cpp:238]     Train net output #0: loss = 0.449559 (* 1 = 0.449559 loss)
I0428 19:39:01.825505 24190 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:01.893610 24190 solver.cpp:219] Iteration 800 (1468.25 iter/s, 0.0681081s/100 iters), loss = 0.649368
I0428 19:39:01.893637 24190 solver.cpp:238]     Train net output #0: loss = 0.649368 (* 1 = 0.649368 loss)
I0428 19:39:01.893647 24190 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:01.964604 24190 solver.cpp:219] Iteration 900 (1409.22 iter/s, 0.0709611s/100 iters), loss = 0.727317
I0428 19:39:01.964632 24190 solver.cpp:238]     Train net output #0: loss = 0.727317 (* 1 = 0.727317 loss)
I0428 19:39:01.964643 24190 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:01.987788 24196 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:02.032660 24190 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:02.033360 24190 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:02.033792 24190 solver.cpp:311] Iteration 1000, loss = 0.493114
I0428 19:39:02.033809 24190 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:02.086253 24197 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:02.086670 24190 solver.cpp:398]     Test net output #0: accuracy = 0.8386
I0428 19:39:02.086691 24190 solver.cpp:398]     Test net output #1: loss = 0.485441 (* 1 = 0.485441 loss)
I0428 19:39:02.086699 24190 solver.cpp:316] Optimization Done.
I0428 19:39:02.086704 24190 caffe.cpp:259] Optimization Done.
