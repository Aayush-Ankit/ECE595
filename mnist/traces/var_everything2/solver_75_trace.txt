I0428 19:29:56.995404 22160 caffe.cpp:218] Using GPUs 0
I0428 19:29:57.035837 22160 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:57.570319 22160 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test75.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:57.570489 22160 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test75.prototxt
I0428 19:29:57.570854 22160 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:57.570874 22160 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:57.570967 22160 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:57.571064 22160 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:57.571193 22160 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:57.571226 22160 net.cpp:86] Creating Layer mnist
I0428 19:29:57.571238 22160 net.cpp:382] mnist -> data
I0428 19:29:57.571269 22160 net.cpp:382] mnist -> label
I0428 19:29:57.572501 22160 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:57.574971 22160 net.cpp:124] Setting up mnist
I0428 19:29:57.574991 22160 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:57.575002 22160 net.cpp:131] Top shape: 64 (64)
I0428 19:29:57.575009 22160 net.cpp:139] Memory required for data: 200960
I0428 19:29:57.575021 22160 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:57.575042 22160 net.cpp:86] Creating Layer conv0
I0428 19:29:57.575053 22160 net.cpp:408] conv0 <- data
I0428 19:29:57.575070 22160 net.cpp:382] conv0 -> conv0
I0428 19:29:57.862202 22160 net.cpp:124] Setting up conv0
I0428 19:29:57.862236 22160 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:57.862242 22160 net.cpp:139] Memory required for data: 495872
I0428 19:29:57.862267 22160 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:57.862288 22160 net.cpp:86] Creating Layer pool0
I0428 19:29:57.862316 22160 net.cpp:408] pool0 <- conv0
I0428 19:29:57.862329 22160 net.cpp:382] pool0 -> pool0
I0428 19:29:57.862402 22160 net.cpp:124] Setting up pool0
I0428 19:29:57.862414 22160 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:57.862421 22160 net.cpp:139] Memory required for data: 569600
I0428 19:29:57.862427 22160 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:57.862440 22160 net.cpp:86] Creating Layer ip1
I0428 19:29:57.862452 22160 net.cpp:408] ip1 <- pool0
I0428 19:29:57.862463 22160 net.cpp:382] ip1 -> ip1
I0428 19:29:57.863643 22160 net.cpp:124] Setting up ip1
I0428 19:29:57.863662 22160 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:57.863667 22160 net.cpp:139] Memory required for data: 582400
I0428 19:29:57.863682 22160 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:57.863698 22160 net.cpp:86] Creating Layer relu1
I0428 19:29:57.863709 22160 net.cpp:408] relu1 <- ip1
I0428 19:29:57.863718 22160 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:57.863955 22160 net.cpp:124] Setting up relu1
I0428 19:29:57.863967 22160 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:57.863975 22160 net.cpp:139] Memory required for data: 595200
I0428 19:29:57.863981 22160 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:57.863993 22160 net.cpp:86] Creating Layer ip2
I0428 19:29:57.863999 22160 net.cpp:408] ip2 <- ip1
I0428 19:29:57.864011 22160 net.cpp:382] ip2 -> ip2
I0428 19:29:57.865120 22160 net.cpp:124] Setting up ip2
I0428 19:29:57.865137 22160 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:57.865144 22160 net.cpp:139] Memory required for data: 608000
I0428 19:29:57.865161 22160 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:57.865171 22160 net.cpp:86] Creating Layer relu2
I0428 19:29:57.865178 22160 net.cpp:408] relu2 <- ip2
I0428 19:29:57.865188 22160 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:57.866050 22160 net.cpp:124] Setting up relu2
I0428 19:29:57.866066 22160 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:57.866073 22160 net.cpp:139] Memory required for data: 620800
I0428 19:29:57.866080 22160 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:57.866092 22160 net.cpp:86] Creating Layer ip3
I0428 19:29:57.866099 22160 net.cpp:408] ip3 <- ip2
I0428 19:29:57.866111 22160 net.cpp:382] ip3 -> ip3
I0428 19:29:57.866241 22160 net.cpp:124] Setting up ip3
I0428 19:29:57.866253 22160 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:57.866259 22160 net.cpp:139] Memory required for data: 623360
I0428 19:29:57.866271 22160 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:57.866282 22160 net.cpp:86] Creating Layer relu3
I0428 19:29:57.866292 22160 net.cpp:408] relu3 <- ip3
I0428 19:29:57.866302 22160 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:57.866490 22160 net.cpp:124] Setting up relu3
I0428 19:29:57.866503 22160 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:57.866508 22160 net.cpp:139] Memory required for data: 625920
I0428 19:29:57.866515 22160 layer_factory.hpp:77] Creating layer loss
I0428 19:29:57.866526 22160 net.cpp:86] Creating Layer loss
I0428 19:29:57.866533 22160 net.cpp:408] loss <- ip3
I0428 19:29:57.866540 22160 net.cpp:408] loss <- label
I0428 19:29:57.866550 22160 net.cpp:382] loss -> loss
I0428 19:29:57.866574 22160 layer_factory.hpp:77] Creating layer loss
I0428 19:29:57.866853 22160 net.cpp:124] Setting up loss
I0428 19:29:57.866865 22160 net.cpp:131] Top shape: (1)
I0428 19:29:57.866873 22160 net.cpp:134]     with loss weight 1
I0428 19:29:57.866895 22160 net.cpp:139] Memory required for data: 625924
I0428 19:29:57.866902 22160 net.cpp:200] loss needs backward computation.
I0428 19:29:57.866910 22160 net.cpp:200] relu3 needs backward computation.
I0428 19:29:57.866916 22160 net.cpp:200] ip3 needs backward computation.
I0428 19:29:57.866922 22160 net.cpp:200] relu2 needs backward computation.
I0428 19:29:57.866928 22160 net.cpp:200] ip2 needs backward computation.
I0428 19:29:57.866935 22160 net.cpp:200] relu1 needs backward computation.
I0428 19:29:57.866940 22160 net.cpp:200] ip1 needs backward computation.
I0428 19:29:57.866961 22160 net.cpp:200] pool0 needs backward computation.
I0428 19:29:57.866967 22160 net.cpp:200] conv0 needs backward computation.
I0428 19:29:57.866974 22160 net.cpp:202] mnist does not need backward computation.
I0428 19:29:57.866981 22160 net.cpp:244] This network produces output loss
I0428 19:29:57.866996 22160 net.cpp:257] Network initialization done.
I0428 19:29:57.867341 22160 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test75.prototxt
I0428 19:29:57.867380 22160 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:57.867483 22160 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:57.867596 22160 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:57.867667 22160 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:57.867687 22160 net.cpp:86] Creating Layer mnist
I0428 19:29:57.867697 22160 net.cpp:382] mnist -> data
I0428 19:29:57.867710 22160 net.cpp:382] mnist -> label
I0428 19:29:57.867856 22160 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:57.870170 22160 net.cpp:124] Setting up mnist
I0428 19:29:57.870188 22160 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:57.870199 22160 net.cpp:131] Top shape: 100 (100)
I0428 19:29:57.870205 22160 net.cpp:139] Memory required for data: 314000
I0428 19:29:57.870213 22160 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:57.870224 22160 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:57.870231 22160 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:57.870241 22160 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:57.870254 22160 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:57.870363 22160 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:57.870373 22160 net.cpp:131] Top shape: 100 (100)
I0428 19:29:57.870381 22160 net.cpp:131] Top shape: 100 (100)
I0428 19:29:57.870388 22160 net.cpp:139] Memory required for data: 314800
I0428 19:29:57.870407 22160 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:57.870424 22160 net.cpp:86] Creating Layer conv0
I0428 19:29:57.870431 22160 net.cpp:408] conv0 <- data
I0428 19:29:57.870441 22160 net.cpp:382] conv0 -> conv0
I0428 19:29:57.872468 22160 net.cpp:124] Setting up conv0
I0428 19:29:57.872488 22160 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:57.872494 22160 net.cpp:139] Memory required for data: 775600
I0428 19:29:57.872512 22160 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:57.872524 22160 net.cpp:86] Creating Layer pool0
I0428 19:29:57.872531 22160 net.cpp:408] pool0 <- conv0
I0428 19:29:57.872541 22160 net.cpp:382] pool0 -> pool0
I0428 19:29:57.872592 22160 net.cpp:124] Setting up pool0
I0428 19:29:57.872602 22160 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:57.872608 22160 net.cpp:139] Memory required for data: 890800
I0428 19:29:57.872615 22160 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:57.872627 22160 net.cpp:86] Creating Layer ip1
I0428 19:29:57.872634 22160 net.cpp:408] ip1 <- pool0
I0428 19:29:57.872644 22160 net.cpp:382] ip1 -> ip1
I0428 19:29:57.872870 22160 net.cpp:124] Setting up ip1
I0428 19:29:57.872881 22160 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:57.872889 22160 net.cpp:139] Memory required for data: 910800
I0428 19:29:57.872902 22160 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:57.872911 22160 net.cpp:86] Creating Layer relu1
I0428 19:29:57.872918 22160 net.cpp:408] relu1 <- ip1
I0428 19:29:57.872927 22160 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:57.873209 22160 net.cpp:124] Setting up relu1
I0428 19:29:57.873234 22160 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:57.873239 22160 net.cpp:139] Memory required for data: 930800
I0428 19:29:57.873246 22160 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:57.873256 22160 net.cpp:86] Creating Layer ip2
I0428 19:29:57.873263 22160 net.cpp:408] ip2 <- ip1
I0428 19:29:57.873273 22160 net.cpp:382] ip2 -> ip2
I0428 19:29:57.873422 22160 net.cpp:124] Setting up ip2
I0428 19:29:57.873435 22160 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:57.873440 22160 net.cpp:139] Memory required for data: 950800
I0428 19:29:57.873456 22160 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:57.873466 22160 net.cpp:86] Creating Layer relu2
I0428 19:29:57.873473 22160 net.cpp:408] relu2 <- ip2
I0428 19:29:57.873482 22160 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:57.874378 22160 net.cpp:124] Setting up relu2
I0428 19:29:57.874394 22160 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:57.874402 22160 net.cpp:139] Memory required for data: 970800
I0428 19:29:57.874408 22160 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:57.874421 22160 net.cpp:86] Creating Layer ip3
I0428 19:29:57.874428 22160 net.cpp:408] ip3 <- ip2
I0428 19:29:57.874439 22160 net.cpp:382] ip3 -> ip3
I0428 19:29:57.874611 22160 net.cpp:124] Setting up ip3
I0428 19:29:57.874624 22160 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:57.874629 22160 net.cpp:139] Memory required for data: 974800
I0428 19:29:57.874640 22160 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:57.874650 22160 net.cpp:86] Creating Layer relu3
I0428 19:29:57.874657 22160 net.cpp:408] relu3 <- ip3
I0428 19:29:57.874666 22160 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:57.874852 22160 net.cpp:124] Setting up relu3
I0428 19:29:57.874864 22160 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:57.874871 22160 net.cpp:139] Memory required for data: 978800
I0428 19:29:57.874879 22160 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:57.874892 22160 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:57.874898 22160 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:57.874907 22160 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:57.874919 22160 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:57.874969 22160 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:57.874977 22160 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:57.874985 22160 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:57.875005 22160 net.cpp:139] Memory required for data: 986800
I0428 19:29:57.875012 22160 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:57.875022 22160 net.cpp:86] Creating Layer accuracy
I0428 19:29:57.875030 22160 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:57.875037 22160 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:57.875046 22160 net.cpp:382] accuracy -> accuracy
I0428 19:29:57.875061 22160 net.cpp:124] Setting up accuracy
I0428 19:29:57.875071 22160 net.cpp:131] Top shape: (1)
I0428 19:29:57.875077 22160 net.cpp:139] Memory required for data: 986804
I0428 19:29:57.875082 22160 layer_factory.hpp:77] Creating layer loss
I0428 19:29:57.875092 22160 net.cpp:86] Creating Layer loss
I0428 19:29:57.875107 22160 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:57.875123 22160 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:57.875131 22160 net.cpp:382] loss -> loss
I0428 19:29:57.875144 22160 layer_factory.hpp:77] Creating layer loss
I0428 19:29:57.875437 22160 net.cpp:124] Setting up loss
I0428 19:29:57.875448 22160 net.cpp:131] Top shape: (1)
I0428 19:29:57.875455 22160 net.cpp:134]     with loss weight 1
I0428 19:29:57.875466 22160 net.cpp:139] Memory required for data: 986808
I0428 19:29:57.875473 22160 net.cpp:200] loss needs backward computation.
I0428 19:29:57.875480 22160 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:57.875488 22160 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:57.875494 22160 net.cpp:200] relu3 needs backward computation.
I0428 19:29:57.875502 22160 net.cpp:200] ip3 needs backward computation.
I0428 19:29:57.875509 22160 net.cpp:200] relu2 needs backward computation.
I0428 19:29:57.875514 22160 net.cpp:200] ip2 needs backward computation.
I0428 19:29:57.875520 22160 net.cpp:200] relu1 needs backward computation.
I0428 19:29:57.875526 22160 net.cpp:200] ip1 needs backward computation.
I0428 19:29:57.875533 22160 net.cpp:200] pool0 needs backward computation.
I0428 19:29:57.875540 22160 net.cpp:200] conv0 needs backward computation.
I0428 19:29:57.875546 22160 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:57.875555 22160 net.cpp:202] mnist does not need backward computation.
I0428 19:29:57.875560 22160 net.cpp:244] This network produces output accuracy
I0428 19:29:57.875568 22160 net.cpp:244] This network produces output loss
I0428 19:29:57.875587 22160 net.cpp:257] Network initialization done.
I0428 19:29:57.875643 22160 solver.cpp:56] Solver scaffolding done.
I0428 19:29:57.875970 22160 caffe.cpp:248] Starting Optimization
I0428 19:29:57.875978 22160 solver.cpp:273] Solving LeNet
I0428 19:29:57.875984 22160 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:57.877522 22160 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:57.880208 22160 blocking_queue.cpp:49] Waiting for data
I0428 19:29:57.951239 22167 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:57.951683 22160 solver.cpp:398]     Test net output #0: accuracy = 0.1059
I0428 19:29:57.951707 22160 solver.cpp:398]     Test net output #1: loss = 2.30651 (* 1 = 2.30651 loss)
I0428 19:29:57.953452 22160 solver.cpp:219] Iteration 0 (-8.51869e-31 iter/s, 0.0774352s/100 iters), loss = 2.28905
I0428 19:29:57.953486 22160 solver.cpp:238]     Train net output #0: loss = 2.28905 (* 1 = 2.28905 loss)
I0428 19:29:57.953506 22160 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:58.016623 22160 solver.cpp:219] Iteration 100 (1584.02 iter/s, 0.0631306s/100 iters), loss = 1.07878
I0428 19:29:58.016669 22160 solver.cpp:238]     Train net output #0: loss = 1.07878 (* 1 = 1.07878 loss)
I0428 19:29:58.016685 22160 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:58.077435 22160 solver.cpp:219] Iteration 200 (1645.75 iter/s, 0.0607624s/100 iters), loss = 0.42874
I0428 19:29:58.077469 22160 solver.cpp:238]     Train net output #0: loss = 0.42874 (* 1 = 0.42874 loss)
I0428 19:29:58.077481 22160 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:58.132850 22160 solver.cpp:219] Iteration 300 (1805.81 iter/s, 0.0553769s/100 iters), loss = 0.841205
I0428 19:29:58.132877 22160 solver.cpp:238]     Train net output #0: loss = 0.841205 (* 1 = 0.841205 loss)
I0428 19:29:58.132903 22160 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:58.188107 22160 solver.cpp:219] Iteration 400 (1810.79 iter/s, 0.0552244s/100 iters), loss = 0.526876
I0428 19:29:58.188134 22160 solver.cpp:238]     Train net output #0: loss = 0.526876 (* 1 = 0.526876 loss)
I0428 19:29:58.188159 22160 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:58.242805 22160 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:58.318070 22167 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:58.318475 22160 solver.cpp:398]     Test net output #0: accuracy = 0.7549
I0428 19:29:58.318495 22160 solver.cpp:398]     Test net output #1: loss = 0.65994 (* 1 = 0.65994 loss)
I0428 19:29:58.319154 22160 solver.cpp:219] Iteration 500 (763.297 iter/s, 0.131011s/100 iters), loss = 0.658245
I0428 19:29:58.319198 22160 solver.cpp:238]     Train net output #0: loss = 0.658245 (* 1 = 0.658245 loss)
I0428 19:29:58.319216 22160 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:58.376212 22160 solver.cpp:219] Iteration 600 (1754.13 iter/s, 0.0570083s/100 iters), loss = 0.763929
I0428 19:29:58.376241 22160 solver.cpp:238]     Train net output #0: loss = 0.763929 (* 1 = 0.763929 loss)
I0428 19:29:58.376267 22160 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:58.432060 22160 solver.cpp:219] Iteration 700 (1791.68 iter/s, 0.0558136s/100 iters), loss = 0.58027
I0428 19:29:58.432088 22160 solver.cpp:238]     Train net output #0: loss = 0.58027 (* 1 = 0.58027 loss)
I0428 19:29:58.432114 22160 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:58.487891 22160 solver.cpp:219] Iteration 800 (1792.19 iter/s, 0.0557978s/100 iters), loss = 0.557346
I0428 19:29:58.487921 22160 solver.cpp:238]     Train net output #0: loss = 0.557346 (* 1 = 0.557346 loss)
I0428 19:29:58.487931 22160 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:58.545006 22160 solver.cpp:219] Iteration 900 (1751.97 iter/s, 0.0570787s/100 iters), loss = 0.545411
I0428 19:29:58.545033 22160 solver.cpp:238]     Train net output #0: loss = 0.545411 (* 1 = 0.545411 loss)
I0428 19:29:58.545043 22160 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:58.564313 22166 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:58.601825 22160 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:58.602581 22160 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:58.603086 22160 solver.cpp:311] Iteration 1000, loss = 0.47551
I0428 19:29:58.603102 22160 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:58.650600 22167 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:58.651006 22160 solver.cpp:398]     Test net output #0: accuracy = 0.8613
I0428 19:29:58.651029 22160 solver.cpp:398]     Test net output #1: loss = 0.388725 (* 1 = 0.388725 loss)
I0428 19:29:58.651037 22160 solver.cpp:316] Optimization Done.
I0428 19:29:58.651043 22160 caffe.cpp:259] Optimization Done.
