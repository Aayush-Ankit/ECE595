I0428 20:13:06.595840 32402 caffe.cpp:218] Using GPUs 0
I0428 20:13:06.627040 32402 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:07.134888 32402 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1193.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:07.135046 32402 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1193.prototxt
I0428 20:13:07.135449 32402 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:07.135466 32402 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:07.135571 32402 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:07.135643 32402 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:07.135753 32402 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:07.135776 32402 net.cpp:86] Creating Layer mnist
I0428 20:13:07.135784 32402 net.cpp:382] mnist -> data
I0428 20:13:07.135805 32402 net.cpp:382] mnist -> label
I0428 20:13:07.136926 32402 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:07.139398 32402 net.cpp:124] Setting up mnist
I0428 20:13:07.139420 32402 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:07.139441 32402 net.cpp:131] Top shape: 64 (64)
I0428 20:13:07.139444 32402 net.cpp:139] Memory required for data: 200960
I0428 20:13:07.139451 32402 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:07.139467 32402 net.cpp:86] Creating Layer conv0
I0428 20:13:07.139497 32402 net.cpp:408] conv0 <- data
I0428 20:13:07.139508 32402 net.cpp:382] conv0 -> conv0
I0428 20:13:07.393791 32402 net.cpp:124] Setting up conv0
I0428 20:13:07.393833 32402 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:07.393837 32402 net.cpp:139] Memory required for data: 3887360
I0428 20:13:07.393851 32402 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:07.393863 32402 net.cpp:86] Creating Layer pool0
I0428 20:13:07.393867 32402 net.cpp:408] pool0 <- conv0
I0428 20:13:07.393872 32402 net.cpp:382] pool0 -> pool0
I0428 20:13:07.393932 32402 net.cpp:124] Setting up pool0
I0428 20:13:07.393939 32402 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:07.393940 32402 net.cpp:139] Memory required for data: 4808960
I0428 20:13:07.393944 32402 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:07.393954 32402 net.cpp:86] Creating Layer conv1
I0428 20:13:07.393957 32402 net.cpp:408] conv1 <- pool0
I0428 20:13:07.393976 32402 net.cpp:382] conv1 -> conv1
I0428 20:13:07.396302 32402 net.cpp:124] Setting up conv1
I0428 20:13:07.396316 32402 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:07.396319 32402 net.cpp:139] Memory required for data: 6447360
I0428 20:13:07.396327 32402 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:07.396333 32402 net.cpp:86] Creating Layer pool1
I0428 20:13:07.396337 32402 net.cpp:408] pool1 <- conv1
I0428 20:13:07.396356 32402 net.cpp:382] pool1 -> pool1
I0428 20:13:07.396394 32402 net.cpp:124] Setting up pool1
I0428 20:13:07.396399 32402 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:07.396401 32402 net.cpp:139] Memory required for data: 6856960
I0428 20:13:07.396404 32402 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:07.396411 32402 net.cpp:86] Creating Layer ip1
I0428 20:13:07.396414 32402 net.cpp:408] ip1 <- pool1
I0428 20:13:07.396419 32402 net.cpp:382] ip1 -> ip1
I0428 20:13:07.396740 32402 net.cpp:124] Setting up ip1
I0428 20:13:07.396749 32402 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:07.396751 32402 net.cpp:139] Memory required for data: 6863360
I0428 20:13:07.396759 32402 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:07.396764 32402 net.cpp:86] Creating Layer relu1
I0428 20:13:07.396766 32402 net.cpp:408] relu1 <- ip1
I0428 20:13:07.396770 32402 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:07.396961 32402 net.cpp:124] Setting up relu1
I0428 20:13:07.396972 32402 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:07.396975 32402 net.cpp:139] Memory required for data: 6869760
I0428 20:13:07.396978 32402 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:07.396984 32402 net.cpp:86] Creating Layer ip2
I0428 20:13:07.396987 32402 net.cpp:408] ip2 <- ip1
I0428 20:13:07.396992 32402 net.cpp:382] ip2 -> ip2
I0428 20:13:07.397085 32402 net.cpp:124] Setting up ip2
I0428 20:13:07.397106 32402 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:07.397109 32402 net.cpp:139] Memory required for data: 6872320
I0428 20:13:07.397114 32402 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:07.397120 32402 net.cpp:86] Creating Layer relu2
I0428 20:13:07.397123 32402 net.cpp:408] relu2 <- ip2
I0428 20:13:07.397126 32402 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:07.397912 32402 net.cpp:124] Setting up relu2
I0428 20:13:07.397939 32402 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:07.397943 32402 net.cpp:139] Memory required for data: 6874880
I0428 20:13:07.397946 32402 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:07.397953 32402 net.cpp:86] Creating Layer ip3
I0428 20:13:07.397958 32402 net.cpp:408] ip3 <- ip2
I0428 20:13:07.397976 32402 net.cpp:382] ip3 -> ip3
I0428 20:13:07.398067 32402 net.cpp:124] Setting up ip3
I0428 20:13:07.398075 32402 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:07.398078 32402 net.cpp:139] Memory required for data: 6877440
I0428 20:13:07.398085 32402 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:07.398090 32402 net.cpp:86] Creating Layer relu3
I0428 20:13:07.398093 32402 net.cpp:408] relu3 <- ip3
I0428 20:13:07.398097 32402 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:07.398249 32402 net.cpp:124] Setting up relu3
I0428 20:13:07.398273 32402 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:07.398277 32402 net.cpp:139] Memory required for data: 6880000
I0428 20:13:07.398279 32402 layer_factory.hpp:77] Creating layer loss
I0428 20:13:07.398284 32402 net.cpp:86] Creating Layer loss
I0428 20:13:07.398288 32402 net.cpp:408] loss <- ip3
I0428 20:13:07.398291 32402 net.cpp:408] loss <- label
I0428 20:13:07.398296 32402 net.cpp:382] loss -> loss
I0428 20:13:07.398324 32402 layer_factory.hpp:77] Creating layer loss
I0428 20:13:07.398543 32402 net.cpp:124] Setting up loss
I0428 20:13:07.398553 32402 net.cpp:131] Top shape: (1)
I0428 20:13:07.398556 32402 net.cpp:134]     with loss weight 1
I0428 20:13:07.398571 32402 net.cpp:139] Memory required for data: 6880004
I0428 20:13:07.398574 32402 net.cpp:200] loss needs backward computation.
I0428 20:13:07.398577 32402 net.cpp:200] relu3 needs backward computation.
I0428 20:13:07.398581 32402 net.cpp:200] ip3 needs backward computation.
I0428 20:13:07.398583 32402 net.cpp:200] relu2 needs backward computation.
I0428 20:13:07.398586 32402 net.cpp:200] ip2 needs backward computation.
I0428 20:13:07.398589 32402 net.cpp:200] relu1 needs backward computation.
I0428 20:13:07.398591 32402 net.cpp:200] ip1 needs backward computation.
I0428 20:13:07.398594 32402 net.cpp:200] pool1 needs backward computation.
I0428 20:13:07.398597 32402 net.cpp:200] conv1 needs backward computation.
I0428 20:13:07.398600 32402 net.cpp:200] pool0 needs backward computation.
I0428 20:13:07.398603 32402 net.cpp:200] conv0 needs backward computation.
I0428 20:13:07.398607 32402 net.cpp:202] mnist does not need backward computation.
I0428 20:13:07.398609 32402 net.cpp:244] This network produces output loss
I0428 20:13:07.398618 32402 net.cpp:257] Network initialization done.
I0428 20:13:07.398988 32402 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1193.prototxt
I0428 20:13:07.399031 32402 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:07.399129 32402 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:07.399205 32402 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:07.399246 32402 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:07.399258 32402 net.cpp:86] Creating Layer mnist
I0428 20:13:07.399262 32402 net.cpp:382] mnist -> data
I0428 20:13:07.399269 32402 net.cpp:382] mnist -> label
I0428 20:13:07.399346 32402 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:07.401410 32402 net.cpp:124] Setting up mnist
I0428 20:13:07.401439 32402 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:07.401445 32402 net.cpp:131] Top shape: 100 (100)
I0428 20:13:07.401448 32402 net.cpp:139] Memory required for data: 314000
I0428 20:13:07.401451 32402 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:07.401458 32402 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:07.401461 32402 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:07.401465 32402 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:07.401471 32402 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:07.401535 32402 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:07.401541 32402 net.cpp:131] Top shape: 100 (100)
I0428 20:13:07.401546 32402 net.cpp:131] Top shape: 100 (100)
I0428 20:13:07.401563 32402 net.cpp:139] Memory required for data: 314800
I0428 20:13:07.401566 32402 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:07.401574 32402 net.cpp:86] Creating Layer conv0
I0428 20:13:07.401578 32402 net.cpp:408] conv0 <- data
I0428 20:13:07.401583 32402 net.cpp:382] conv0 -> conv0
I0428 20:13:07.403300 32402 net.cpp:124] Setting up conv0
I0428 20:13:07.403313 32402 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:07.403332 32402 net.cpp:139] Memory required for data: 6074800
I0428 20:13:07.403342 32402 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:07.403362 32402 net.cpp:86] Creating Layer pool0
I0428 20:13:07.403364 32402 net.cpp:408] pool0 <- conv0
I0428 20:13:07.403369 32402 net.cpp:382] pool0 -> pool0
I0428 20:13:07.403403 32402 net.cpp:124] Setting up pool0
I0428 20:13:07.403409 32402 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:07.403410 32402 net.cpp:139] Memory required for data: 7514800
I0428 20:13:07.403414 32402 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:07.403421 32402 net.cpp:86] Creating Layer conv1
I0428 20:13:07.403424 32402 net.cpp:408] conv1 <- pool0
I0428 20:13:07.403429 32402 net.cpp:382] conv1 -> conv1
I0428 20:13:07.405421 32402 net.cpp:124] Setting up conv1
I0428 20:13:07.405436 32402 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:07.405438 32402 net.cpp:139] Memory required for data: 10074800
I0428 20:13:07.405447 32402 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:07.405454 32402 net.cpp:86] Creating Layer pool1
I0428 20:13:07.405458 32402 net.cpp:408] pool1 <- conv1
I0428 20:13:07.405483 32402 net.cpp:382] pool1 -> pool1
I0428 20:13:07.405531 32402 net.cpp:124] Setting up pool1
I0428 20:13:07.405536 32402 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:07.405539 32402 net.cpp:139] Memory required for data: 10714800
I0428 20:13:07.405542 32402 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:07.405549 32402 net.cpp:86] Creating Layer ip1
I0428 20:13:07.405551 32402 net.cpp:408] ip1 <- pool1
I0428 20:13:07.405556 32402 net.cpp:382] ip1 -> ip1
I0428 20:13:07.405866 32402 net.cpp:124] Setting up ip1
I0428 20:13:07.405874 32402 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:07.405887 32402 net.cpp:139] Memory required for data: 10724800
I0428 20:13:07.405895 32402 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:07.405907 32402 net.cpp:86] Creating Layer relu1
I0428 20:13:07.405911 32402 net.cpp:408] relu1 <- ip1
I0428 20:13:07.405916 32402 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:07.406081 32402 net.cpp:124] Setting up relu1
I0428 20:13:07.406090 32402 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:07.406092 32402 net.cpp:139] Memory required for data: 10734800
I0428 20:13:07.406095 32402 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:07.406102 32402 net.cpp:86] Creating Layer ip2
I0428 20:13:07.406105 32402 net.cpp:408] ip2 <- ip1
I0428 20:13:07.406110 32402 net.cpp:382] ip2 -> ip2
I0428 20:13:07.406239 32402 net.cpp:124] Setting up ip2
I0428 20:13:07.406246 32402 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:07.406265 32402 net.cpp:139] Memory required for data: 10738800
I0428 20:13:07.406270 32402 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:07.406275 32402 net.cpp:86] Creating Layer relu2
I0428 20:13:07.406278 32402 net.cpp:408] relu2 <- ip2
I0428 20:13:07.406285 32402 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:07.406472 32402 net.cpp:124] Setting up relu2
I0428 20:13:07.406481 32402 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:07.406486 32402 net.cpp:139] Memory required for data: 10742800
I0428 20:13:07.406488 32402 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:07.406496 32402 net.cpp:86] Creating Layer ip3
I0428 20:13:07.406498 32402 net.cpp:408] ip3 <- ip2
I0428 20:13:07.406510 32402 net.cpp:382] ip3 -> ip3
I0428 20:13:07.406653 32402 net.cpp:124] Setting up ip3
I0428 20:13:07.406661 32402 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:07.406664 32402 net.cpp:139] Memory required for data: 10746800
I0428 20:13:07.406672 32402 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:07.406677 32402 net.cpp:86] Creating Layer relu3
I0428 20:13:07.406680 32402 net.cpp:408] relu3 <- ip3
I0428 20:13:07.406684 32402 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:07.407495 32402 net.cpp:124] Setting up relu3
I0428 20:13:07.407507 32402 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:07.407526 32402 net.cpp:139] Memory required for data: 10750800
I0428 20:13:07.407529 32402 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:07.407536 32402 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:07.407538 32402 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:07.407544 32402 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:07.407551 32402 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:07.407624 32402 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:07.407632 32402 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:07.407636 32402 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:07.407640 32402 net.cpp:139] Memory required for data: 10758800
I0428 20:13:07.407649 32402 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:07.407671 32402 net.cpp:86] Creating Layer accuracy
I0428 20:13:07.407680 32402 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:07.407685 32402 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:07.407691 32402 net.cpp:382] accuracy -> accuracy
I0428 20:13:07.407712 32402 net.cpp:124] Setting up accuracy
I0428 20:13:07.407717 32402 net.cpp:131] Top shape: (1)
I0428 20:13:07.407721 32402 net.cpp:139] Memory required for data: 10758804
I0428 20:13:07.407723 32402 layer_factory.hpp:77] Creating layer loss
I0428 20:13:07.407727 32402 net.cpp:86] Creating Layer loss
I0428 20:13:07.407730 32402 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:07.407733 32402 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:07.407738 32402 net.cpp:382] loss -> loss
I0428 20:13:07.407744 32402 layer_factory.hpp:77] Creating layer loss
I0428 20:13:07.407989 32402 net.cpp:124] Setting up loss
I0428 20:13:07.407999 32402 net.cpp:131] Top shape: (1)
I0428 20:13:07.408002 32402 net.cpp:134]     with loss weight 1
I0428 20:13:07.408018 32402 net.cpp:139] Memory required for data: 10758808
I0428 20:13:07.408021 32402 net.cpp:200] loss needs backward computation.
I0428 20:13:07.408025 32402 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:07.408030 32402 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:07.408032 32402 net.cpp:200] relu3 needs backward computation.
I0428 20:13:07.408036 32402 net.cpp:200] ip3 needs backward computation.
I0428 20:13:07.408040 32402 net.cpp:200] relu2 needs backward computation.
I0428 20:13:07.408043 32402 net.cpp:200] ip2 needs backward computation.
I0428 20:13:07.408046 32402 net.cpp:200] relu1 needs backward computation.
I0428 20:13:07.408049 32402 net.cpp:200] ip1 needs backward computation.
I0428 20:13:07.408052 32402 net.cpp:200] pool1 needs backward computation.
I0428 20:13:07.408056 32402 net.cpp:200] conv1 needs backward computation.
I0428 20:13:07.408059 32402 net.cpp:200] pool0 needs backward computation.
I0428 20:13:07.408062 32402 net.cpp:200] conv0 needs backward computation.
I0428 20:13:07.408066 32402 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:07.408071 32402 net.cpp:202] mnist does not need backward computation.
I0428 20:13:07.408073 32402 net.cpp:244] This network produces output accuracy
I0428 20:13:07.408077 32402 net.cpp:244] This network produces output loss
I0428 20:13:07.408088 32402 net.cpp:257] Network initialization done.
I0428 20:13:07.408130 32402 solver.cpp:56] Solver scaffolding done.
I0428 20:13:07.408540 32402 caffe.cpp:248] Starting Optimization
I0428 20:13:07.408546 32402 solver.cpp:273] Solving LeNet
I0428 20:13:07.408550 32402 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:07.409482 32402 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:07.478953 32409 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:07.481353 32402 solver.cpp:398]     Test net output #0: accuracy = 0.0701
I0428 20:13:07.481374 32402 solver.cpp:398]     Test net output #1: loss = 2.3331 (* 1 = 2.3331 loss)
I0428 20:13:07.486106 32402 solver.cpp:219] Iteration 0 (-1.50011e-34 iter/s, 0.077526s/100 iters), loss = 2.32122
I0428 20:13:07.486129 32402 solver.cpp:238]     Train net output #0: loss = 2.32122 (* 1 = 2.32122 loss)
I0428 20:13:07.486140 32402 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:07.689574 32402 solver.cpp:219] Iteration 100 (491.587 iter/s, 0.203423s/100 iters), loss = 1.64172
I0428 20:13:07.689621 32402 solver.cpp:238]     Train net output #0: loss = 1.64172 (* 1 = 1.64172 loss)
I0428 20:13:07.689633 32402 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:07.911914 32402 solver.cpp:219] Iteration 200 (449.89 iter/s, 0.222277s/100 iters), loss = 0.838475
I0428 20:13:07.911962 32402 solver.cpp:238]     Train net output #0: loss = 0.838475 (* 1 = 0.838475 loss)
I0428 20:13:07.911973 32402 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:08.129341 32402 solver.cpp:219] Iteration 300 (460.059 iter/s, 0.217363s/100 iters), loss = 0.617191
I0428 20:13:08.129385 32402 solver.cpp:238]     Train net output #0: loss = 0.617191 (* 1 = 0.617191 loss)
I0428 20:13:08.129396 32402 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:08.349090 32402 solver.cpp:219] Iteration 400 (455.191 iter/s, 0.219688s/100 iters), loss = 0.499156
I0428 20:13:08.349133 32402 solver.cpp:238]     Train net output #0: loss = 0.499156 (* 1 = 0.499156 loss)
I0428 20:13:08.349144 32402 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:08.560781 32402 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:08.638151 32409 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:08.640787 32402 solver.cpp:398]     Test net output #0: accuracy = 0.7827
I0428 20:13:08.640833 32402 solver.cpp:398]     Test net output #1: loss = 0.584096 (* 1 = 0.584096 loss)
I0428 20:13:08.642788 32402 solver.cpp:219] Iteration 500 (340.558 iter/s, 0.293636s/100 iters), loss = 0.660751
I0428 20:13:08.642828 32402 solver.cpp:238]     Train net output #0: loss = 0.660751 (* 1 = 0.660751 loss)
I0428 20:13:08.642855 32402 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:08.862617 32402 solver.cpp:219] Iteration 600 (455.024 iter/s, 0.219769s/100 iters), loss = 0.506356
I0428 20:13:08.862668 32402 solver.cpp:238]     Train net output #0: loss = 0.506356 (* 1 = 0.506356 loss)
I0428 20:13:08.862679 32402 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:09.078460 32402 solver.cpp:219] Iteration 700 (463.428 iter/s, 0.215783s/100 iters), loss = 0.826973
I0428 20:13:09.078496 32402 solver.cpp:238]     Train net output #0: loss = 0.826973 (* 1 = 0.826973 loss)
I0428 20:13:09.078505 32402 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:09.290587 32402 solver.cpp:219] Iteration 800 (471.537 iter/s, 0.212072s/100 iters), loss = 0.846351
I0428 20:13:09.290635 32402 solver.cpp:238]     Train net output #0: loss = 0.846351 (* 1 = 0.846351 loss)
I0428 20:13:09.290647 32402 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:09.512837 32402 solver.cpp:219] Iteration 900 (450.083 iter/s, 0.222181s/100 iters), loss = 0.653318
I0428 20:13:09.512890 32402 solver.cpp:238]     Train net output #0: loss = 0.653318 (* 1 = 0.653318 loss)
I0428 20:13:09.512904 32402 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:09.587366 32408 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:09.734179 32402 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:09.738353 32402 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:09.740522 32402 solver.cpp:311] Iteration 1000, loss = 0.663273
I0428 20:13:09.740552 32402 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:09.751705 32402 blocking_queue.cpp:49] Waiting for data
I0428 20:13:09.820201 32409 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:09.821434 32402 solver.cpp:398]     Test net output #0: accuracy = 0.7976
I0428 20:13:09.821463 32402 solver.cpp:398]     Test net output #1: loss = 0.509914 (* 1 = 0.509914 loss)
I0428 20:13:09.821482 32402 solver.cpp:316] Optimization Done.
I0428 20:13:09.821486 32402 caffe.cpp:259] Optimization Done.
