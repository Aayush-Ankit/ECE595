I0428 19:42:40.179306 25123 caffe.cpp:218] Using GPUs 0
I0428 19:42:40.220600 25123 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:40.661075 25123 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test400.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:40.661239 25123 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test400.prototxt
I0428 19:42:40.661526 25123 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:40.661543 25123 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:40.661638 25123 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:40.661725 25123 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:40.661833 25123 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:40.661859 25123 net.cpp:86] Creating Layer mnist
I0428 19:42:40.661870 25123 net.cpp:382] mnist -> data
I0428 19:42:40.661909 25123 net.cpp:382] mnist -> label
I0428 19:42:40.662976 25123 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:40.665315 25123 net.cpp:124] Setting up mnist
I0428 19:42:40.665347 25123 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:40.665355 25123 net.cpp:131] Top shape: 64 (64)
I0428 19:42:40.665360 25123 net.cpp:139] Memory required for data: 200960
I0428 19:42:40.665369 25123 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:40.665400 25123 net.cpp:86] Creating Layer conv0
I0428 19:42:40.665408 25123 net.cpp:408] conv0 <- data
I0428 19:42:40.665426 25123 net.cpp:382] conv0 -> conv0
I0428 19:42:40.890190 25123 net.cpp:124] Setting up conv0
I0428 19:42:40.890220 25123 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:40.890225 25123 net.cpp:139] Memory required for data: 495872
I0428 19:42:40.890267 25123 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:40.890286 25123 net.cpp:86] Creating Layer pool0
I0428 19:42:40.890292 25123 net.cpp:408] pool0 <- conv0
I0428 19:42:40.890301 25123 net.cpp:382] pool0 -> pool0
I0428 19:42:40.890372 25123 net.cpp:124] Setting up pool0
I0428 19:42:40.890379 25123 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:40.890384 25123 net.cpp:139] Memory required for data: 569600
I0428 19:42:40.890389 25123 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:40.890404 25123 net.cpp:86] Creating Layer conv1
I0428 19:42:40.890410 25123 net.cpp:408] conv1 <- pool0
I0428 19:42:40.890419 25123 net.cpp:382] conv1 -> conv1
I0428 19:42:40.892998 25123 net.cpp:124] Setting up conv1
I0428 19:42:40.893013 25123 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:40.893018 25123 net.cpp:139] Memory required for data: 979200
I0428 19:42:40.893046 25123 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:40.893056 25123 net.cpp:86] Creating Layer pool1
I0428 19:42:40.893062 25123 net.cpp:408] pool1 <- conv1
I0428 19:42:40.893070 25123 net.cpp:382] pool1 -> pool1
I0428 19:42:40.893112 25123 net.cpp:124] Setting up pool1
I0428 19:42:40.893121 25123 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:40.893126 25123 net.cpp:139] Memory required for data: 1081600
I0428 19:42:40.893131 25123 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:40.893141 25123 net.cpp:86] Creating Layer ip1
I0428 19:42:40.893146 25123 net.cpp:408] ip1 <- pool1
I0428 19:42:40.893155 25123 net.cpp:382] ip1 -> ip1
I0428 19:42:40.893393 25123 net.cpp:124] Setting up ip1
I0428 19:42:40.893401 25123 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:40.893406 25123 net.cpp:139] Memory required for data: 1094400
I0428 19:42:40.893419 25123 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:40.893426 25123 net.cpp:86] Creating Layer relu1
I0428 19:42:40.893435 25123 net.cpp:408] relu1 <- ip1
I0428 19:42:40.893441 25123 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:40.893611 25123 net.cpp:124] Setting up relu1
I0428 19:42:40.893620 25123 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:40.893625 25123 net.cpp:139] Memory required for data: 1107200
I0428 19:42:40.893631 25123 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:40.893640 25123 net.cpp:86] Creating Layer ip2
I0428 19:42:40.893646 25123 net.cpp:408] ip2 <- ip1
I0428 19:42:40.893654 25123 net.cpp:382] ip2 -> ip2
I0428 19:42:40.893764 25123 net.cpp:124] Setting up ip2
I0428 19:42:40.893774 25123 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:40.893777 25123 net.cpp:139] Memory required for data: 1109760
I0428 19:42:40.893786 25123 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:40.893795 25123 net.cpp:86] Creating Layer relu2
I0428 19:42:40.893800 25123 net.cpp:408] relu2 <- ip2
I0428 19:42:40.893807 25123 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:40.894572 25123 net.cpp:124] Setting up relu2
I0428 19:42:40.894601 25123 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:40.894606 25123 net.cpp:139] Memory required for data: 1112320
I0428 19:42:40.894613 25123 layer_factory.hpp:77] Creating layer loss
I0428 19:42:40.894635 25123 net.cpp:86] Creating Layer loss
I0428 19:42:40.894656 25123 net.cpp:408] loss <- ip2
I0428 19:42:40.894664 25123 net.cpp:408] loss <- label
I0428 19:42:40.894672 25123 net.cpp:382] loss -> loss
I0428 19:42:40.894695 25123 layer_factory.hpp:77] Creating layer loss
I0428 19:42:40.894989 25123 net.cpp:124] Setting up loss
I0428 19:42:40.895000 25123 net.cpp:131] Top shape: (1)
I0428 19:42:40.895006 25123 net.cpp:134]     with loss weight 1
I0428 19:42:40.895026 25123 net.cpp:139] Memory required for data: 1112324
I0428 19:42:40.895032 25123 net.cpp:200] loss needs backward computation.
I0428 19:42:40.895040 25123 net.cpp:200] relu2 needs backward computation.
I0428 19:42:40.895045 25123 net.cpp:200] ip2 needs backward computation.
I0428 19:42:40.895050 25123 net.cpp:200] relu1 needs backward computation.
I0428 19:42:40.895054 25123 net.cpp:200] ip1 needs backward computation.
I0428 19:42:40.895072 25123 net.cpp:200] pool1 needs backward computation.
I0428 19:42:40.895078 25123 net.cpp:200] conv1 needs backward computation.
I0428 19:42:40.895084 25123 net.cpp:200] pool0 needs backward computation.
I0428 19:42:40.895090 25123 net.cpp:200] conv0 needs backward computation.
I0428 19:42:40.895097 25123 net.cpp:202] mnist does not need backward computation.
I0428 19:42:40.895102 25123 net.cpp:244] This network produces output loss
I0428 19:42:40.895130 25123 net.cpp:257] Network initialization done.
I0428 19:42:40.895447 25123 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test400.prototxt
I0428 19:42:40.895480 25123 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:40.895570 25123 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:42:40.895679 25123 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:40.895736 25123 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:40.895754 25123 net.cpp:86] Creating Layer mnist
I0428 19:42:40.895761 25123 net.cpp:382] mnist -> data
I0428 19:42:40.895773 25123 net.cpp:382] mnist -> label
I0428 19:42:40.895885 25123 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:40.897927 25123 net.cpp:124] Setting up mnist
I0428 19:42:40.897958 25123 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:40.897965 25123 net.cpp:131] Top shape: 100 (100)
I0428 19:42:40.897985 25123 net.cpp:139] Memory required for data: 314000
I0428 19:42:40.897991 25123 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:40.898000 25123 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:40.898006 25123 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:40.898013 25123 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:40.898025 25123 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:40.898113 25123 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:40.898130 25123 net.cpp:131] Top shape: 100 (100)
I0428 19:42:40.898138 25123 net.cpp:131] Top shape: 100 (100)
I0428 19:42:40.898142 25123 net.cpp:139] Memory required for data: 314800
I0428 19:42:40.898147 25123 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:40.898160 25123 net.cpp:86] Creating Layer conv0
I0428 19:42:40.898167 25123 net.cpp:408] conv0 <- data
I0428 19:42:40.898175 25123 net.cpp:382] conv0 -> conv0
I0428 19:42:40.899803 25123 net.cpp:124] Setting up conv0
I0428 19:42:40.899818 25123 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:40.899823 25123 net.cpp:139] Memory required for data: 775600
I0428 19:42:40.899863 25123 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:40.899874 25123 net.cpp:86] Creating Layer pool0
I0428 19:42:40.899881 25123 net.cpp:408] pool0 <- conv0
I0428 19:42:40.899889 25123 net.cpp:382] pool0 -> pool0
I0428 19:42:40.899932 25123 net.cpp:124] Setting up pool0
I0428 19:42:40.899940 25123 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:40.899946 25123 net.cpp:139] Memory required for data: 890800
I0428 19:42:40.899951 25123 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:40.899965 25123 net.cpp:86] Creating Layer conv1
I0428 19:42:40.899971 25123 net.cpp:408] conv1 <- pool0
I0428 19:42:40.899981 25123 net.cpp:382] conv1 -> conv1
I0428 19:42:40.901624 25123 net.cpp:124] Setting up conv1
I0428 19:42:40.901643 25123 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:40.901650 25123 net.cpp:139] Memory required for data: 1530800
I0428 19:42:40.901667 25123 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:40.901677 25123 net.cpp:86] Creating Layer pool1
I0428 19:42:40.901684 25123 net.cpp:408] pool1 <- conv1
I0428 19:42:40.901692 25123 net.cpp:382] pool1 -> pool1
I0428 19:42:40.901751 25123 net.cpp:124] Setting up pool1
I0428 19:42:40.901760 25123 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:40.901765 25123 net.cpp:139] Memory required for data: 1690800
I0428 19:42:40.901772 25123 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:40.901796 25123 net.cpp:86] Creating Layer ip1
I0428 19:42:40.901803 25123 net.cpp:408] ip1 <- pool1
I0428 19:42:40.901811 25123 net.cpp:382] ip1 -> ip1
I0428 19:42:40.902046 25123 net.cpp:124] Setting up ip1
I0428 19:42:40.902060 25123 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:40.902066 25123 net.cpp:139] Memory required for data: 1710800
I0428 19:42:40.902079 25123 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:40.902088 25123 net.cpp:86] Creating Layer relu1
I0428 19:42:40.902096 25123 net.cpp:408] relu1 <- ip1
I0428 19:42:40.902103 25123 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:40.902369 25123 net.cpp:124] Setting up relu1
I0428 19:42:40.902379 25123 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:40.902384 25123 net.cpp:139] Memory required for data: 1730800
I0428 19:42:40.902389 25123 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:40.902398 25123 net.cpp:86] Creating Layer ip2
I0428 19:42:40.902405 25123 net.cpp:408] ip2 <- ip1
I0428 19:42:40.902416 25123 net.cpp:382] ip2 -> ip2
I0428 19:42:40.902546 25123 net.cpp:124] Setting up ip2
I0428 19:42:40.902555 25123 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:40.902561 25123 net.cpp:139] Memory required for data: 1734800
I0428 19:42:40.902570 25123 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:40.902578 25123 net.cpp:86] Creating Layer relu2
I0428 19:42:40.902583 25123 net.cpp:408] relu2 <- ip2
I0428 19:42:40.902592 25123 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:40.902756 25123 net.cpp:124] Setting up relu2
I0428 19:42:40.902766 25123 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:40.902771 25123 net.cpp:139] Memory required for data: 1738800
I0428 19:42:40.902776 25123 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:42:40.902784 25123 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:42:40.902789 25123 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:42:40.902798 25123 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:42:40.902819 25123 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:42:40.902869 25123 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:42:40.902889 25123 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:40.902910 25123 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:40.902916 25123 net.cpp:139] Memory required for data: 1746800
I0428 19:42:40.902921 25123 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:40.902930 25123 net.cpp:86] Creating Layer accuracy
I0428 19:42:40.902935 25123 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:42:40.902941 25123 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:40.902948 25123 net.cpp:382] accuracy -> accuracy
I0428 19:42:40.902959 25123 net.cpp:124] Setting up accuracy
I0428 19:42:40.902967 25123 net.cpp:131] Top shape: (1)
I0428 19:42:40.902972 25123 net.cpp:139] Memory required for data: 1746804
I0428 19:42:40.902977 25123 layer_factory.hpp:77] Creating layer loss
I0428 19:42:40.902987 25123 net.cpp:86] Creating Layer loss
I0428 19:42:40.902997 25123 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:42:40.903003 25123 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:40.903010 25123 net.cpp:382] loss -> loss
I0428 19:42:40.903019 25123 layer_factory.hpp:77] Creating layer loss
I0428 19:42:40.903378 25123 net.cpp:124] Setting up loss
I0428 19:42:40.903388 25123 net.cpp:131] Top shape: (1)
I0428 19:42:40.903393 25123 net.cpp:134]     with loss weight 1
I0428 19:42:40.903403 25123 net.cpp:139] Memory required for data: 1746808
I0428 19:42:40.903408 25123 net.cpp:200] loss needs backward computation.
I0428 19:42:40.903414 25123 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:40.903420 25123 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:42:40.903425 25123 net.cpp:200] relu2 needs backward computation.
I0428 19:42:40.903430 25123 net.cpp:200] ip2 needs backward computation.
I0428 19:42:40.903435 25123 net.cpp:200] relu1 needs backward computation.
I0428 19:42:40.903439 25123 net.cpp:200] ip1 needs backward computation.
I0428 19:42:40.903445 25123 net.cpp:200] pool1 needs backward computation.
I0428 19:42:40.903450 25123 net.cpp:200] conv1 needs backward computation.
I0428 19:42:40.903456 25123 net.cpp:200] pool0 needs backward computation.
I0428 19:42:40.903461 25123 net.cpp:200] conv0 needs backward computation.
I0428 19:42:40.903467 25123 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:40.903473 25123 net.cpp:202] mnist does not need backward computation.
I0428 19:42:40.903478 25123 net.cpp:244] This network produces output accuracy
I0428 19:42:40.903483 25123 net.cpp:244] This network produces output loss
I0428 19:42:40.903501 25123 net.cpp:257] Network initialization done.
I0428 19:42:40.903547 25123 solver.cpp:56] Solver scaffolding done.
I0428 19:42:40.903847 25123 caffe.cpp:248] Starting Optimization
I0428 19:42:40.903854 25123 solver.cpp:273] Solving LeNet
I0428 19:42:40.903859 25123 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:40.904700 25123 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:40.907816 25123 blocking_queue.cpp:49] Waiting for data
I0428 19:42:40.970064 25130 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:40.970468 25123 solver.cpp:398]     Test net output #0: accuracy = 0.1213
I0428 19:42:40.970487 25123 solver.cpp:398]     Test net output #1: loss = 2.30273 (* 1 = 2.30273 loss)
I0428 19:42:40.971635 25123 solver.cpp:219] Iteration 0 (3.36057 iter/s, 0.0677411s/100 iters), loss = 2.2881
I0428 19:42:40.971662 25123 solver.cpp:238]     Train net output #0: loss = 2.2881 (* 1 = 2.2881 loss)
I0428 19:42:40.971679 25123 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:41.057044 25123 solver.cpp:219] Iteration 100 (1171.37 iter/s, 0.0853704s/100 iters), loss = 0.932372
I0428 19:42:41.057082 25123 solver.cpp:238]     Train net output #0: loss = 0.932372 (* 1 = 0.932372 loss)
I0428 19:42:41.057096 25123 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:41.135751 25123 solver.cpp:219] Iteration 200 (1271.27 iter/s, 0.0786616s/100 iters), loss = 1.23847
I0428 19:42:41.135792 25123 solver.cpp:238]     Train net output #0: loss = 1.23847 (* 1 = 1.23847 loss)
I0428 19:42:41.135802 25123 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:41.214045 25123 solver.cpp:219] Iteration 300 (1278.09 iter/s, 0.0782418s/100 iters), loss = 0.605164
I0428 19:42:41.214071 25123 solver.cpp:238]     Train net output #0: loss = 0.605164 (* 1 = 0.605164 loss)
I0428 19:42:41.214081 25123 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:41.291674 25123 solver.cpp:219] Iteration 400 (1288.77 iter/s, 0.0775936s/100 iters), loss = 0.732909
I0428 19:42:41.291702 25123 solver.cpp:238]     Train net output #0: loss = 0.732909 (* 1 = 0.732909 loss)
I0428 19:42:41.291728 25123 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:41.382407 25123 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:41.435250 25130 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:41.435708 25123 solver.cpp:398]     Test net output #0: accuracy = 0.6898
I0428 19:42:41.435734 25123 solver.cpp:398]     Test net output #1: loss = 0.786449 (* 1 = 0.786449 loss)
I0428 19:42:41.436663 25123 solver.cpp:219] Iteration 500 (689.901 iter/s, 0.144948s/100 iters), loss = 0.864672
I0428 19:42:41.436722 25123 solver.cpp:238]     Train net output #0: loss = 0.864672 (* 1 = 0.864672 loss)
I0428 19:42:41.436733 25123 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:41.524099 25123 solver.cpp:219] Iteration 600 (1144.67 iter/s, 0.0873618s/100 iters), loss = 0.760123
I0428 19:42:41.524132 25123 solver.cpp:238]     Train net output #0: loss = 0.760123 (* 1 = 0.760123 loss)
I0428 19:42:41.524140 25123 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:41.610945 25123 solver.cpp:219] Iteration 700 (1152.07 iter/s, 0.0868004s/100 iters), loss = 0.581546
I0428 19:42:41.610978 25123 solver.cpp:238]     Train net output #0: loss = 0.581546 (* 1 = 0.581546 loss)
I0428 19:42:41.610986 25123 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:41.696596 25123 solver.cpp:219] Iteration 800 (1168.15 iter/s, 0.0856053s/100 iters), loss = 0.737481
I0428 19:42:41.696629 25123 solver.cpp:238]     Train net output #0: loss = 0.737481 (* 1 = 0.737481 loss)
I0428 19:42:41.696636 25123 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:41.780586 25123 solver.cpp:219] Iteration 900 (1191.31 iter/s, 0.0839414s/100 iters), loss = 0.772707
I0428 19:42:41.780620 25123 solver.cpp:238]     Train net output #0: loss = 0.772707 (* 1 = 0.772707 loss)
I0428 19:42:41.780628 25123 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:41.808590 25129 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:41.863502 25123 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:41.864606 25123 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:41.865241 25123 solver.cpp:311] Iteration 1000, loss = 0.385302
I0428 19:42:41.865259 25123 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:41.926759 25130 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:41.927208 25123 solver.cpp:398]     Test net output #0: accuracy = 0.8709
I0428 19:42:41.927229 25123 solver.cpp:398]     Test net output #1: loss = 0.341481 (* 1 = 0.341481 loss)
I0428 19:42:41.927237 25123 solver.cpp:316] Optimization Done.
I0428 19:42:41.927239 25123 caffe.cpp:259] Optimization Done.
