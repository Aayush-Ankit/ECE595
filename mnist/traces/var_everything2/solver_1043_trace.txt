I0428 20:06:59.284091 31000 caffe.cpp:218] Using GPUs 0
I0428 20:06:59.319702 31000 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:59.772279 31000 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1043.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:59.772408 31000 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1043.prototxt
I0428 20:06:59.772724 31000 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:59.772740 31000 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:59.772840 31000 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:59.772917 31000 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:59.773000 31000 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:59.773020 31000 net.cpp:86] Creating Layer mnist
I0428 20:06:59.773025 31000 net.cpp:382] mnist -> data
I0428 20:06:59.773043 31000 net.cpp:382] mnist -> label
I0428 20:06:59.773952 31000 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:59.776072 31000 net.cpp:124] Setting up mnist
I0428 20:06:59.776116 31000 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:59.776121 31000 net.cpp:131] Top shape: 64 (64)
I0428 20:06:59.776124 31000 net.cpp:139] Memory required for data: 200960
I0428 20:06:59.776130 31000 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:59.776144 31000 net.cpp:86] Creating Layer conv0
I0428 20:06:59.776177 31000 net.cpp:408] conv0 <- data
I0428 20:06:59.776192 31000 net.cpp:382] conv0 -> conv0
I0428 20:07:00.004320 31000 net.cpp:124] Setting up conv0
I0428 20:07:00.004361 31000 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:00.004365 31000 net.cpp:139] Memory required for data: 3887360
I0428 20:07:00.004380 31000 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:00.004392 31000 net.cpp:86] Creating Layer pool0
I0428 20:07:00.004412 31000 net.cpp:408] pool0 <- conv0
I0428 20:07:00.004416 31000 net.cpp:382] pool0 -> pool0
I0428 20:07:00.004477 31000 net.cpp:124] Setting up pool0
I0428 20:07:00.004489 31000 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:00.004493 31000 net.cpp:139] Memory required for data: 4808960
I0428 20:07:00.004495 31000 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:00.004506 31000 net.cpp:86] Creating Layer conv1
I0428 20:07:00.004509 31000 net.cpp:408] conv1 <- pool0
I0428 20:07:00.004514 31000 net.cpp:382] conv1 -> conv1
I0428 20:07:00.007129 31000 net.cpp:124] Setting up conv1
I0428 20:07:00.007143 31000 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:00.007146 31000 net.cpp:139] Memory required for data: 4890880
I0428 20:07:00.007154 31000 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:00.007161 31000 net.cpp:86] Creating Layer pool1
I0428 20:07:00.007164 31000 net.cpp:408] pool1 <- conv1
I0428 20:07:00.007169 31000 net.cpp:382] pool1 -> pool1
I0428 20:07:00.007218 31000 net.cpp:124] Setting up pool1
I0428 20:07:00.007225 31000 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:00.007226 31000 net.cpp:139] Memory required for data: 4911360
I0428 20:07:00.007230 31000 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:00.007241 31000 net.cpp:86] Creating Layer ip1
I0428 20:07:00.007243 31000 net.cpp:408] ip1 <- pool1
I0428 20:07:00.007247 31000 net.cpp:382] ip1 -> ip1
I0428 20:07:00.007340 31000 net.cpp:124] Setting up ip1
I0428 20:07:00.007349 31000 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:00.007351 31000 net.cpp:139] Memory required for data: 4917760
I0428 20:07:00.007374 31000 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:00.007380 31000 net.cpp:86] Creating Layer relu1
I0428 20:07:00.007382 31000 net.cpp:408] relu1 <- ip1
I0428 20:07:00.007386 31000 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:00.007539 31000 net.cpp:124] Setting up relu1
I0428 20:07:00.007549 31000 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:00.007551 31000 net.cpp:139] Memory required for data: 4924160
I0428 20:07:00.007555 31000 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:00.007560 31000 net.cpp:86] Creating Layer ip2
I0428 20:07:00.007563 31000 net.cpp:408] ip2 <- ip1
I0428 20:07:00.007567 31000 net.cpp:382] ip2 -> ip2
I0428 20:07:00.007666 31000 net.cpp:124] Setting up ip2
I0428 20:07:00.007674 31000 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:00.007678 31000 net.cpp:139] Memory required for data: 4936960
I0428 20:07:00.007683 31000 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:00.007688 31000 net.cpp:86] Creating Layer relu2
I0428 20:07:00.007690 31000 net.cpp:408] relu2 <- ip2
I0428 20:07:00.007694 31000 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:00.008391 31000 net.cpp:124] Setting up relu2
I0428 20:07:00.008404 31000 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:00.008421 31000 net.cpp:139] Memory required for data: 4949760
I0428 20:07:00.008424 31000 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:00.008431 31000 net.cpp:86] Creating Layer ip3
I0428 20:07:00.008435 31000 net.cpp:408] ip3 <- ip2
I0428 20:07:00.008440 31000 net.cpp:382] ip3 -> ip3
I0428 20:07:00.008533 31000 net.cpp:124] Setting up ip3
I0428 20:07:00.008541 31000 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:00.008544 31000 net.cpp:139] Memory required for data: 4952320
I0428 20:07:00.008551 31000 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:00.008556 31000 net.cpp:86] Creating Layer relu3
I0428 20:07:00.008559 31000 net.cpp:408] relu3 <- ip3
I0428 20:07:00.008563 31000 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:00.008713 31000 net.cpp:124] Setting up relu3
I0428 20:07:00.008721 31000 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:00.008724 31000 net.cpp:139] Memory required for data: 4954880
I0428 20:07:00.008728 31000 layer_factory.hpp:77] Creating layer loss
I0428 20:07:00.008733 31000 net.cpp:86] Creating Layer loss
I0428 20:07:00.008736 31000 net.cpp:408] loss <- ip3
I0428 20:07:00.008747 31000 net.cpp:408] loss <- label
I0428 20:07:00.008752 31000 net.cpp:382] loss -> loss
I0428 20:07:00.008769 31000 layer_factory.hpp:77] Creating layer loss
I0428 20:07:00.009045 31000 net.cpp:124] Setting up loss
I0428 20:07:00.009057 31000 net.cpp:131] Top shape: (1)
I0428 20:07:00.009060 31000 net.cpp:134]     with loss weight 1
I0428 20:07:00.009075 31000 net.cpp:139] Memory required for data: 4954884
I0428 20:07:00.009078 31000 net.cpp:200] loss needs backward computation.
I0428 20:07:00.009083 31000 net.cpp:200] relu3 needs backward computation.
I0428 20:07:00.009086 31000 net.cpp:200] ip3 needs backward computation.
I0428 20:07:00.009089 31000 net.cpp:200] relu2 needs backward computation.
I0428 20:07:00.009093 31000 net.cpp:200] ip2 needs backward computation.
I0428 20:07:00.009095 31000 net.cpp:200] relu1 needs backward computation.
I0428 20:07:00.009099 31000 net.cpp:200] ip1 needs backward computation.
I0428 20:07:00.009101 31000 net.cpp:200] pool1 needs backward computation.
I0428 20:07:00.009104 31000 net.cpp:200] conv1 needs backward computation.
I0428 20:07:00.009109 31000 net.cpp:200] pool0 needs backward computation.
I0428 20:07:00.009111 31000 net.cpp:200] conv0 needs backward computation.
I0428 20:07:00.009114 31000 net.cpp:202] mnist does not need backward computation.
I0428 20:07:00.009117 31000 net.cpp:244] This network produces output loss
I0428 20:07:00.009127 31000 net.cpp:257] Network initialization done.
I0428 20:07:00.009485 31000 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1043.prototxt
I0428 20:07:00.009526 31000 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:00.009639 31000 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:00.009740 31000 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:00.009786 31000 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:00.009799 31000 net.cpp:86] Creating Layer mnist
I0428 20:07:00.009802 31000 net.cpp:382] mnist -> data
I0428 20:07:00.009810 31000 net.cpp:382] mnist -> label
I0428 20:07:00.009892 31000 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:00.011834 31000 net.cpp:124] Setting up mnist
I0428 20:07:00.011878 31000 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:00.011883 31000 net.cpp:131] Top shape: 100 (100)
I0428 20:07:00.011886 31000 net.cpp:139] Memory required for data: 314000
I0428 20:07:00.011889 31000 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:00.011905 31000 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:00.011909 31000 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:00.011914 31000 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:00.011919 31000 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:00.011970 31000 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:00.011976 31000 net.cpp:131] Top shape: 100 (100)
I0428 20:07:00.011979 31000 net.cpp:131] Top shape: 100 (100)
I0428 20:07:00.011982 31000 net.cpp:139] Memory required for data: 314800
I0428 20:07:00.011986 31000 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:00.011993 31000 net.cpp:86] Creating Layer conv0
I0428 20:07:00.011996 31000 net.cpp:408] conv0 <- data
I0428 20:07:00.012001 31000 net.cpp:382] conv0 -> conv0
I0428 20:07:00.013727 31000 net.cpp:124] Setting up conv0
I0428 20:07:00.013756 31000 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:00.013761 31000 net.cpp:139] Memory required for data: 6074800
I0428 20:07:00.013774 31000 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:00.013782 31000 net.cpp:86] Creating Layer pool0
I0428 20:07:00.013784 31000 net.cpp:408] pool0 <- conv0
I0428 20:07:00.013789 31000 net.cpp:382] pool0 -> pool0
I0428 20:07:00.013826 31000 net.cpp:124] Setting up pool0
I0428 20:07:00.013831 31000 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:00.013834 31000 net.cpp:139] Memory required for data: 7514800
I0428 20:07:00.013837 31000 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:00.013845 31000 net.cpp:86] Creating Layer conv1
I0428 20:07:00.013849 31000 net.cpp:408] conv1 <- pool0
I0428 20:07:00.013854 31000 net.cpp:382] conv1 -> conv1
I0428 20:07:00.015796 31000 net.cpp:124] Setting up conv1
I0428 20:07:00.015825 31000 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:00.015828 31000 net.cpp:139] Memory required for data: 7642800
I0428 20:07:00.015851 31000 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:00.015859 31000 net.cpp:86] Creating Layer pool1
I0428 20:07:00.015863 31000 net.cpp:408] pool1 <- conv1
I0428 20:07:00.015868 31000 net.cpp:382] pool1 -> pool1
I0428 20:07:00.015916 31000 net.cpp:124] Setting up pool1
I0428 20:07:00.015928 31000 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:00.015933 31000 net.cpp:139] Memory required for data: 7674800
I0428 20:07:00.015935 31000 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:00.015940 31000 net.cpp:86] Creating Layer ip1
I0428 20:07:00.015944 31000 net.cpp:408] ip1 <- pool1
I0428 20:07:00.015949 31000 net.cpp:382] ip1 -> ip1
I0428 20:07:00.016068 31000 net.cpp:124] Setting up ip1
I0428 20:07:00.016077 31000 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:00.016094 31000 net.cpp:139] Memory required for data: 7684800
I0428 20:07:00.016103 31000 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:00.016108 31000 net.cpp:86] Creating Layer relu1
I0428 20:07:00.016111 31000 net.cpp:408] relu1 <- ip1
I0428 20:07:00.016115 31000 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:00.016273 31000 net.cpp:124] Setting up relu1
I0428 20:07:00.016283 31000 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:00.016286 31000 net.cpp:139] Memory required for data: 7694800
I0428 20:07:00.016289 31000 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:00.016296 31000 net.cpp:86] Creating Layer ip2
I0428 20:07:00.016300 31000 net.cpp:408] ip2 <- ip1
I0428 20:07:00.016304 31000 net.cpp:382] ip2 -> ip2
I0428 20:07:00.016413 31000 net.cpp:124] Setting up ip2
I0428 20:07:00.016420 31000 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:00.016423 31000 net.cpp:139] Memory required for data: 7714800
I0428 20:07:00.016429 31000 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:00.016433 31000 net.cpp:86] Creating Layer relu2
I0428 20:07:00.016436 31000 net.cpp:408] relu2 <- ip2
I0428 20:07:00.016440 31000 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:00.016574 31000 net.cpp:124] Setting up relu2
I0428 20:07:00.016582 31000 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:00.016585 31000 net.cpp:139] Memory required for data: 7734800
I0428 20:07:00.016589 31000 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:00.016594 31000 net.cpp:86] Creating Layer ip3
I0428 20:07:00.016598 31000 net.cpp:408] ip3 <- ip2
I0428 20:07:00.016602 31000 net.cpp:382] ip3 -> ip3
I0428 20:07:00.016692 31000 net.cpp:124] Setting up ip3
I0428 20:07:00.016700 31000 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:00.016702 31000 net.cpp:139] Memory required for data: 7738800
I0428 20:07:00.016710 31000 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:00.016715 31000 net.cpp:86] Creating Layer relu3
I0428 20:07:00.016717 31000 net.cpp:408] relu3 <- ip3
I0428 20:07:00.016721 31000 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:00.017586 31000 net.cpp:124] Setting up relu3
I0428 20:07:00.017598 31000 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:00.017602 31000 net.cpp:139] Memory required for data: 7742800
I0428 20:07:00.017606 31000 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:00.017611 31000 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:00.017614 31000 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:00.017619 31000 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:00.017626 31000 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:00.017664 31000 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:00.017671 31000 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:00.017674 31000 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:00.017678 31000 net.cpp:139] Memory required for data: 7750800
I0428 20:07:00.017680 31000 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:00.017684 31000 net.cpp:86] Creating Layer accuracy
I0428 20:07:00.017688 31000 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:00.017691 31000 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:00.017695 31000 net.cpp:382] accuracy -> accuracy
I0428 20:07:00.017702 31000 net.cpp:124] Setting up accuracy
I0428 20:07:00.017705 31000 net.cpp:131] Top shape: (1)
I0428 20:07:00.017709 31000 net.cpp:139] Memory required for data: 7750804
I0428 20:07:00.017710 31000 layer_factory.hpp:77] Creating layer loss
I0428 20:07:00.017714 31000 net.cpp:86] Creating Layer loss
I0428 20:07:00.017717 31000 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:00.017721 31000 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:00.017724 31000 net.cpp:382] loss -> loss
I0428 20:07:00.017730 31000 layer_factory.hpp:77] Creating layer loss
I0428 20:07:00.017942 31000 net.cpp:124] Setting up loss
I0428 20:07:00.017952 31000 net.cpp:131] Top shape: (1)
I0428 20:07:00.017956 31000 net.cpp:134]     with loss weight 1
I0428 20:07:00.017962 31000 net.cpp:139] Memory required for data: 7750808
I0428 20:07:00.017976 31000 net.cpp:200] loss needs backward computation.
I0428 20:07:00.017980 31000 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:00.017984 31000 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:00.017988 31000 net.cpp:200] relu3 needs backward computation.
I0428 20:07:00.017992 31000 net.cpp:200] ip3 needs backward computation.
I0428 20:07:00.017994 31000 net.cpp:200] relu2 needs backward computation.
I0428 20:07:00.017997 31000 net.cpp:200] ip2 needs backward computation.
I0428 20:07:00.018000 31000 net.cpp:200] relu1 needs backward computation.
I0428 20:07:00.018002 31000 net.cpp:200] ip1 needs backward computation.
I0428 20:07:00.018007 31000 net.cpp:200] pool1 needs backward computation.
I0428 20:07:00.018009 31000 net.cpp:200] conv1 needs backward computation.
I0428 20:07:00.018013 31000 net.cpp:200] pool0 needs backward computation.
I0428 20:07:00.018016 31000 net.cpp:200] conv0 needs backward computation.
I0428 20:07:00.018019 31000 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:00.018031 31000 net.cpp:202] mnist does not need backward computation.
I0428 20:07:00.018033 31000 net.cpp:244] This network produces output accuracy
I0428 20:07:00.018038 31000 net.cpp:244] This network produces output loss
I0428 20:07:00.018048 31000 net.cpp:257] Network initialization done.
I0428 20:07:00.018086 31000 solver.cpp:56] Solver scaffolding done.
I0428 20:07:00.018386 31000 caffe.cpp:248] Starting Optimization
I0428 20:07:00.018394 31000 solver.cpp:273] Solving LeNet
I0428 20:07:00.018396 31000 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:00.019139 31000 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:00.024260 31000 blocking_queue.cpp:49] Waiting for data
I0428 20:07:00.096700 31007 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:00.097297 31000 solver.cpp:398]     Test net output #0: accuracy = 0.0876
I0428 20:07:00.097334 31000 solver.cpp:398]     Test net output #1: loss = 2.32534 (* 1 = 2.32534 loss)
I0428 20:07:00.100838 31000 solver.cpp:219] Iteration 0 (0 iter/s, 0.0824042s/100 iters), loss = 2.31964
I0428 20:07:00.100862 31000 solver.cpp:238]     Train net output #0: loss = 2.31964 (* 1 = 2.31964 loss)
I0428 20:07:00.100872 31000 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:00.191638 31000 solver.cpp:219] Iteration 100 (1101.73 iter/s, 0.0907663s/100 iters), loss = 0.568213
I0428 20:07:00.191664 31000 solver.cpp:238]     Train net output #0: loss = 0.568213 (* 1 = 0.568213 loss)
I0428 20:07:00.191670 31000 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:00.280423 31000 solver.cpp:219] Iteration 200 (1126.76 iter/s, 0.0887501s/100 iters), loss = 0.695896
I0428 20:07:00.280445 31000 solver.cpp:238]     Train net output #0: loss = 0.695896 (* 1 = 0.695896 loss)
I0428 20:07:00.280452 31000 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:00.368008 31000 solver.cpp:219] Iteration 300 (1142.17 iter/s, 0.087553s/100 iters), loss = 0.174358
I0428 20:07:00.368032 31000 solver.cpp:238]     Train net output #0: loss = 0.174358 (* 1 = 0.174358 loss)
I0428 20:07:00.368039 31000 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:00.456132 31000 solver.cpp:219] Iteration 400 (1135.21 iter/s, 0.0880895s/100 iters), loss = 0.224525
I0428 20:07:00.456159 31000 solver.cpp:238]     Train net output #0: loss = 0.224525 (* 1 = 0.224525 loss)
I0428 20:07:00.456164 31000 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:00.542585 31000 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:00.597090 31007 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:00.597666 31000 solver.cpp:398]     Test net output #0: accuracy = 0.9556
I0428 20:07:00.597683 31000 solver.cpp:398]     Test net output #1: loss = 0.144357 (* 1 = 0.144357 loss)
I0428 20:07:00.598580 31000 solver.cpp:219] Iteration 500 (702.204 iter/s, 0.142409s/100 iters), loss = 0.128421
I0428 20:07:00.598637 31000 solver.cpp:238]     Train net output #0: loss = 0.128421 (* 1 = 0.128421 loss)
I0428 20:07:00.598646 31000 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:00.695211 31000 solver.cpp:219] Iteration 600 (1035.54 iter/s, 0.0965682s/100 iters), loss = 0.156174
I0428 20:07:00.695235 31000 solver.cpp:238]     Train net output #0: loss = 0.156173 (* 1 = 0.156173 loss)
I0428 20:07:00.695257 31000 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:00.785215 31000 solver.cpp:219] Iteration 700 (1111.49 iter/s, 0.0899697s/100 iters), loss = 0.214656
I0428 20:07:00.785239 31000 solver.cpp:238]     Train net output #0: loss = 0.214656 (* 1 = 0.214656 loss)
I0428 20:07:00.785245 31000 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:00.873209 31000 solver.cpp:219] Iteration 800 (1136.89 iter/s, 0.0879596s/100 iters), loss = 0.17995
I0428 20:07:00.873234 31000 solver.cpp:238]     Train net output #0: loss = 0.17995 (* 1 = 0.17995 loss)
I0428 20:07:00.873260 31000 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:00.962118 31000 solver.cpp:219] Iteration 900 (1125.38 iter/s, 0.0888586s/100 iters), loss = 0.20466
I0428 20:07:00.962144 31000 solver.cpp:238]     Train net output #0: loss = 0.20466 (* 1 = 0.20466 loss)
I0428 20:07:00.962168 31000 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:00.992002 31006 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:01.049717 31000 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:01.050482 31000 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:01.051050 31000 solver.cpp:311] Iteration 1000, loss = 0.135814
I0428 20:07:01.051066 31000 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:01.125501 31007 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:01.126094 31000 solver.cpp:398]     Test net output #0: accuracy = 0.9707
I0428 20:07:01.126113 31000 solver.cpp:398]     Test net output #1: loss = 0.0900637 (* 1 = 0.0900637 loss)
I0428 20:07:01.126118 31000 solver.cpp:316] Optimization Done.
I0428 20:07:01.126121 31000 caffe.cpp:259] Optimization Done.
