I0428 20:03:00.369084 30098 caffe.cpp:218] Using GPUs 0
I0428 20:03:00.400754 30098 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:00.874969 30098 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test942.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:00.875116 30098 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test942.prototxt
I0428 20:03:00.875438 30098 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:00.875452 30098 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:00.875522 30098 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:03:00.875584 30098 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:00.875663 30098 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:00.875684 30098 net.cpp:86] Creating Layer mnist
I0428 20:03:00.875690 30098 net.cpp:382] mnist -> data
I0428 20:03:00.875707 30098 net.cpp:382] mnist -> label
I0428 20:03:00.876703 30098 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:00.879051 30098 net.cpp:124] Setting up mnist
I0428 20:03:00.879081 30098 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:00.879086 30098 net.cpp:131] Top shape: 64 (64)
I0428 20:03:00.879089 30098 net.cpp:139] Memory required for data: 200960
I0428 20:03:00.879096 30098 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:00.879117 30098 net.cpp:86] Creating Layer conv0
I0428 20:03:00.879124 30098 net.cpp:408] conv0 <- data
I0428 20:03:00.879133 30098 net.cpp:382] conv0 -> conv0
I0428 20:03:01.110728 30098 net.cpp:124] Setting up conv0
I0428 20:03:01.110771 30098 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:01.110775 30098 net.cpp:139] Memory required for data: 1675520
I0428 20:03:01.110808 30098 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:01.110836 30098 net.cpp:86] Creating Layer pool0
I0428 20:03:01.110841 30098 net.cpp:408] pool0 <- conv0
I0428 20:03:01.110846 30098 net.cpp:382] pool0 -> pool0
I0428 20:03:01.110891 30098 net.cpp:124] Setting up pool0
I0428 20:03:01.110899 30098 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:01.110903 30098 net.cpp:139] Memory required for data: 2044160
I0428 20:03:01.110905 30098 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:01.110932 30098 net.cpp:86] Creating Layer conv1
I0428 20:03:01.110935 30098 net.cpp:408] conv1 <- pool0
I0428 20:03:01.110940 30098 net.cpp:382] conv1 -> conv1
I0428 20:03:01.113024 30098 net.cpp:124] Setting up conv1
I0428 20:03:01.113054 30098 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:01.113059 30098 net.cpp:139] Memory required for data: 3682560
I0428 20:03:01.113067 30098 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:01.113075 30098 net.cpp:86] Creating Layer pool1
I0428 20:03:01.113078 30098 net.cpp:408] pool1 <- conv1
I0428 20:03:01.113083 30098 net.cpp:382] pool1 -> pool1
I0428 20:03:01.113135 30098 net.cpp:124] Setting up pool1
I0428 20:03:01.113142 30098 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:01.113144 30098 net.cpp:139] Memory required for data: 4092160
I0428 20:03:01.113147 30098 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:01.113154 30098 net.cpp:86] Creating Layer ip1
I0428 20:03:01.113157 30098 net.cpp:408] ip1 <- pool1
I0428 20:03:01.113162 30098 net.cpp:382] ip1 -> ip1
I0428 20:03:01.113498 30098 net.cpp:124] Setting up ip1
I0428 20:03:01.113520 30098 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:01.113523 30098 net.cpp:139] Memory required for data: 4098560
I0428 20:03:01.113546 30098 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:01.113551 30098 net.cpp:86] Creating Layer relu1
I0428 20:03:01.113554 30098 net.cpp:408] relu1 <- ip1
I0428 20:03:01.113559 30098 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:01.113730 30098 net.cpp:124] Setting up relu1
I0428 20:03:01.113739 30098 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:01.113741 30098 net.cpp:139] Memory required for data: 4104960
I0428 20:03:01.113744 30098 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:01.113750 30098 net.cpp:86] Creating Layer ip2
I0428 20:03:01.113754 30098 net.cpp:408] ip2 <- ip1
I0428 20:03:01.113759 30098 net.cpp:382] ip2 -> ip2
I0428 20:03:01.113847 30098 net.cpp:124] Setting up ip2
I0428 20:03:01.113853 30098 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:01.113857 30098 net.cpp:139] Memory required for data: 4107520
I0428 20:03:01.113862 30098 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:01.113867 30098 net.cpp:86] Creating Layer relu2
I0428 20:03:01.113869 30098 net.cpp:408] relu2 <- ip2
I0428 20:03:01.113873 30098 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:01.114615 30098 net.cpp:124] Setting up relu2
I0428 20:03:01.114627 30098 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:01.114646 30098 net.cpp:139] Memory required for data: 4110080
I0428 20:03:01.114650 30098 layer_factory.hpp:77] Creating layer loss
I0428 20:03:01.114656 30098 net.cpp:86] Creating Layer loss
I0428 20:03:01.114660 30098 net.cpp:408] loss <- ip2
I0428 20:03:01.114665 30098 net.cpp:408] loss <- label
I0428 20:03:01.114670 30098 net.cpp:382] loss -> loss
I0428 20:03:01.114687 30098 layer_factory.hpp:77] Creating layer loss
I0428 20:03:01.114919 30098 net.cpp:124] Setting up loss
I0428 20:03:01.114933 30098 net.cpp:131] Top shape: (1)
I0428 20:03:01.114935 30098 net.cpp:134]     with loss weight 1
I0428 20:03:01.114948 30098 net.cpp:139] Memory required for data: 4110084
I0428 20:03:01.114953 30098 net.cpp:200] loss needs backward computation.
I0428 20:03:01.114955 30098 net.cpp:200] relu2 needs backward computation.
I0428 20:03:01.114959 30098 net.cpp:200] ip2 needs backward computation.
I0428 20:03:01.114961 30098 net.cpp:200] relu1 needs backward computation.
I0428 20:03:01.114964 30098 net.cpp:200] ip1 needs backward computation.
I0428 20:03:01.114977 30098 net.cpp:200] pool1 needs backward computation.
I0428 20:03:01.114980 30098 net.cpp:200] conv1 needs backward computation.
I0428 20:03:01.114984 30098 net.cpp:200] pool0 needs backward computation.
I0428 20:03:01.114986 30098 net.cpp:200] conv0 needs backward computation.
I0428 20:03:01.114989 30098 net.cpp:202] mnist does not need backward computation.
I0428 20:03:01.114992 30098 net.cpp:244] This network produces output loss
I0428 20:03:01.115001 30098 net.cpp:257] Network initialization done.
I0428 20:03:01.115344 30098 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test942.prototxt
I0428 20:03:01.115386 30098 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:01.115485 30098 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:03:01.115550 30098 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:01.115595 30098 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:01.115622 30098 net.cpp:86] Creating Layer mnist
I0428 20:03:01.115627 30098 net.cpp:382] mnist -> data
I0428 20:03:01.115634 30098 net.cpp:382] mnist -> label
I0428 20:03:01.115716 30098 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:01.117758 30098 net.cpp:124] Setting up mnist
I0428 20:03:01.117787 30098 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:01.117792 30098 net.cpp:131] Top shape: 100 (100)
I0428 20:03:01.117795 30098 net.cpp:139] Memory required for data: 314000
I0428 20:03:01.117799 30098 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:01.117825 30098 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:01.117827 30098 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:01.117832 30098 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:01.117838 30098 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:01.117889 30098 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:01.117895 30098 net.cpp:131] Top shape: 100 (100)
I0428 20:03:01.117899 30098 net.cpp:131] Top shape: 100 (100)
I0428 20:03:01.117902 30098 net.cpp:139] Memory required for data: 314800
I0428 20:03:01.117904 30098 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:01.117913 30098 net.cpp:86] Creating Layer conv0
I0428 20:03:01.117915 30098 net.cpp:408] conv0 <- data
I0428 20:03:01.117920 30098 net.cpp:382] conv0 -> conv0
I0428 20:03:01.119691 30098 net.cpp:124] Setting up conv0
I0428 20:03:01.119704 30098 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:01.119709 30098 net.cpp:139] Memory required for data: 2618800
I0428 20:03:01.119717 30098 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:01.119724 30098 net.cpp:86] Creating Layer pool0
I0428 20:03:01.119726 30098 net.cpp:408] pool0 <- conv0
I0428 20:03:01.119731 30098 net.cpp:382] pool0 -> pool0
I0428 20:03:01.119765 30098 net.cpp:124] Setting up pool0
I0428 20:03:01.119771 30098 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:01.119773 30098 net.cpp:139] Memory required for data: 3194800
I0428 20:03:01.119776 30098 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:01.119784 30098 net.cpp:86] Creating Layer conv1
I0428 20:03:01.119787 30098 net.cpp:408] conv1 <- pool0
I0428 20:03:01.119792 30098 net.cpp:382] conv1 -> conv1
I0428 20:03:01.121438 30098 net.cpp:124] Setting up conv1
I0428 20:03:01.121450 30098 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:01.121454 30098 net.cpp:139] Memory required for data: 5754800
I0428 20:03:01.121462 30098 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:01.121469 30098 net.cpp:86] Creating Layer pool1
I0428 20:03:01.121472 30098 net.cpp:408] pool1 <- conv1
I0428 20:03:01.121476 30098 net.cpp:382] pool1 -> pool1
I0428 20:03:01.121510 30098 net.cpp:124] Setting up pool1
I0428 20:03:01.121517 30098 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:01.121520 30098 net.cpp:139] Memory required for data: 6394800
I0428 20:03:01.121523 30098 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:01.121528 30098 net.cpp:86] Creating Layer ip1
I0428 20:03:01.121531 30098 net.cpp:408] ip1 <- pool1
I0428 20:03:01.121536 30098 net.cpp:382] ip1 -> ip1
I0428 20:03:01.121882 30098 net.cpp:124] Setting up ip1
I0428 20:03:01.121892 30098 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:01.121896 30098 net.cpp:139] Memory required for data: 6404800
I0428 20:03:01.121902 30098 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:01.121907 30098 net.cpp:86] Creating Layer relu1
I0428 20:03:01.121917 30098 net.cpp:408] relu1 <- ip1
I0428 20:03:01.121920 30098 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:01.122102 30098 net.cpp:124] Setting up relu1
I0428 20:03:01.122122 30098 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:01.122124 30098 net.cpp:139] Memory required for data: 6414800
I0428 20:03:01.122128 30098 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:01.122140 30098 net.cpp:86] Creating Layer ip2
I0428 20:03:01.122143 30098 net.cpp:408] ip2 <- ip1
I0428 20:03:01.122148 30098 net.cpp:382] ip2 -> ip2
I0428 20:03:01.122246 30098 net.cpp:124] Setting up ip2
I0428 20:03:01.122252 30098 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:01.122262 30098 net.cpp:139] Memory required for data: 6418800
I0428 20:03:01.122267 30098 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:01.122270 30098 net.cpp:86] Creating Layer relu2
I0428 20:03:01.122274 30098 net.cpp:408] relu2 <- ip2
I0428 20:03:01.122278 30098 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:01.122462 30098 net.cpp:124] Setting up relu2
I0428 20:03:01.122469 30098 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:01.122473 30098 net.cpp:139] Memory required for data: 6422800
I0428 20:03:01.122475 30098 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:03:01.122480 30098 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:03:01.122483 30098 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:03:01.122488 30098 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:03:01.122503 30098 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:03:01.122540 30098 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:03:01.122545 30098 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:01.122550 30098 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:01.122552 30098 net.cpp:139] Memory required for data: 6430800
I0428 20:03:01.122555 30098 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:01.122560 30098 net.cpp:86] Creating Layer accuracy
I0428 20:03:01.122562 30098 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:03:01.122566 30098 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:01.122571 30098 net.cpp:382] accuracy -> accuracy
I0428 20:03:01.122577 30098 net.cpp:124] Setting up accuracy
I0428 20:03:01.122581 30098 net.cpp:131] Top shape: (1)
I0428 20:03:01.122584 30098 net.cpp:139] Memory required for data: 6430804
I0428 20:03:01.122586 30098 layer_factory.hpp:77] Creating layer loss
I0428 20:03:01.122591 30098 net.cpp:86] Creating Layer loss
I0428 20:03:01.122593 30098 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:03:01.122597 30098 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:01.122601 30098 net.cpp:382] loss -> loss
I0428 20:03:01.122606 30098 layer_factory.hpp:77] Creating layer loss
I0428 20:03:01.122843 30098 net.cpp:124] Setting up loss
I0428 20:03:01.122853 30098 net.cpp:131] Top shape: (1)
I0428 20:03:01.122855 30098 net.cpp:134]     with loss weight 1
I0428 20:03:01.122862 30098 net.cpp:139] Memory required for data: 6430808
I0428 20:03:01.122866 30098 net.cpp:200] loss needs backward computation.
I0428 20:03:01.122869 30098 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:01.122874 30098 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:03:01.122884 30098 net.cpp:200] relu2 needs backward computation.
I0428 20:03:01.122887 30098 net.cpp:200] ip2 needs backward computation.
I0428 20:03:01.122890 30098 net.cpp:200] relu1 needs backward computation.
I0428 20:03:01.122894 30098 net.cpp:200] ip1 needs backward computation.
I0428 20:03:01.122896 30098 net.cpp:200] pool1 needs backward computation.
I0428 20:03:01.122900 30098 net.cpp:200] conv1 needs backward computation.
I0428 20:03:01.122902 30098 net.cpp:200] pool0 needs backward computation.
I0428 20:03:01.122905 30098 net.cpp:200] conv0 needs backward computation.
I0428 20:03:01.122910 30098 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:01.122918 30098 net.cpp:202] mnist does not need backward computation.
I0428 20:03:01.122921 30098 net.cpp:244] This network produces output accuracy
I0428 20:03:01.122925 30098 net.cpp:244] This network produces output loss
I0428 20:03:01.122934 30098 net.cpp:257] Network initialization done.
I0428 20:03:01.122982 30098 solver.cpp:56] Solver scaffolding done.
I0428 20:03:01.123280 30098 caffe.cpp:248] Starting Optimization
I0428 20:03:01.123286 30098 solver.cpp:273] Solving LeNet
I0428 20:03:01.123288 30098 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:01.123446 30098 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:01.128731 30098 blocking_queue.cpp:49] Waiting for data
I0428 20:03:01.198393 30105 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:01.198998 30098 solver.cpp:398]     Test net output #0: accuracy = 0.1918
I0428 20:03:01.199015 30098 solver.cpp:398]     Test net output #1: loss = 2.3105 (* 1 = 2.3105 loss)
I0428 20:03:01.202679 30098 solver.cpp:219] Iteration 0 (-6.02304e-31 iter/s, 0.0793651s/100 iters), loss = 2.30722
I0428 20:03:01.202720 30098 solver.cpp:238]     Train net output #0: loss = 2.30722 (* 1 = 2.30722 loss)
I0428 20:03:01.202733 30098 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:01.351480 30098 solver.cpp:219] Iteration 100 (672.212 iter/s, 0.148763s/100 iters), loss = 0.275139
I0428 20:03:01.351521 30098 solver.cpp:238]     Train net output #0: loss = 0.275139 (* 1 = 0.275139 loss)
I0428 20:03:01.351528 30098 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:01.499554 30098 solver.cpp:219] Iteration 200 (675.583 iter/s, 0.14802s/100 iters), loss = 0.17978
I0428 20:03:01.499579 30098 solver.cpp:238]     Train net output #0: loss = 0.17978 (* 1 = 0.17978 loss)
I0428 20:03:01.499585 30098 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:01.649087 30098 solver.cpp:219] Iteration 300 (668.924 iter/s, 0.149494s/100 iters), loss = 0.218486
I0428 20:03:01.649127 30098 solver.cpp:238]     Train net output #0: loss = 0.218486 (* 1 = 0.218486 loss)
I0428 20:03:01.649134 30098 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:01.795318 30098 solver.cpp:219] Iteration 400 (684.025 iter/s, 0.146193s/100 iters), loss = 0.111205
I0428 20:03:01.795359 30098 solver.cpp:238]     Train net output #0: loss = 0.111205 (* 1 = 0.111205 loss)
I0428 20:03:01.795366 30098 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:01.938928 30098 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:01.993347 30105 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:01.994210 30098 solver.cpp:398]     Test net output #0: accuracy = 0.9668
I0428 20:03:01.994228 30098 solver.cpp:398]     Test net output #1: loss = 0.107256 (* 1 = 0.107256 loss)
I0428 20:03:01.995911 30098 solver.cpp:219] Iteration 500 (498.691 iter/s, 0.200525s/100 iters), loss = 0.0779401
I0428 20:03:01.995950 30098 solver.cpp:238]     Train net output #0: loss = 0.0779401 (* 1 = 0.0779401 loss)
I0428 20:03:01.995971 30098 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:02.148355 30098 solver.cpp:219] Iteration 600 (656.138 iter/s, 0.152407s/100 iters), loss = 0.0892286
I0428 20:03:02.148396 30098 solver.cpp:238]     Train net output #0: loss = 0.0892287 (* 1 = 0.0892287 loss)
I0428 20:03:02.148403 30098 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:02.305867 30098 solver.cpp:219] Iteration 700 (635.026 iter/s, 0.157474s/100 iters), loss = 0.149635
I0428 20:03:02.305908 30098 solver.cpp:238]     Train net output #0: loss = 0.149635 (* 1 = 0.149635 loss)
I0428 20:03:02.305914 30098 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:02.451715 30098 solver.cpp:219] Iteration 800 (685.822 iter/s, 0.14581s/100 iters), loss = 0.233936
I0428 20:03:02.451756 30098 solver.cpp:238]     Train net output #0: loss = 0.233936 (* 1 = 0.233936 loss)
I0428 20:03:02.451762 30098 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:02.602411 30098 solver.cpp:219] Iteration 900 (663.759 iter/s, 0.150657s/100 iters), loss = 0.154193
I0428 20:03:02.602471 30098 solver.cpp:238]     Train net output #0: loss = 0.154193 (* 1 = 0.154193 loss)
I0428 20:03:02.602478 30098 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:02.652729 30104 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:02.749099 30098 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:02.751161 30098 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:02.752240 30098 solver.cpp:311] Iteration 1000, loss = 0.112272
I0428 20:03:02.752270 30098 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:02.828125 30105 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:02.828744 30098 solver.cpp:398]     Test net output #0: accuracy = 0.9781
I0428 20:03:02.828765 30098 solver.cpp:398]     Test net output #1: loss = 0.0691613 (* 1 = 0.0691613 loss)
I0428 20:03:02.828770 30098 solver.cpp:316] Optimization Done.
I0428 20:03:02.828773 30098 caffe.cpp:259] Optimization Done.
