I0428 19:51:23.303122 27270 caffe.cpp:218] Using GPUs 0
I0428 19:51:23.340374 27270 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:23.796226 27270 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test632.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:23.796370 27270 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test632.prototxt
I0428 19:51:23.796679 27270 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:23.796708 27270 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:23.796778 27270 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:23.796877 27270 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:23.796965 27270 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:23.796993 27270 net.cpp:86] Creating Layer mnist
I0428 19:51:23.797000 27270 net.cpp:382] mnist -> data
I0428 19:51:23.797019 27270 net.cpp:382] mnist -> label
I0428 19:51:23.797925 27270 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:23.800232 27270 net.cpp:124] Setting up mnist
I0428 19:51:23.800262 27270 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:23.800266 27270 net.cpp:131] Top shape: 64 (64)
I0428 19:51:23.800269 27270 net.cpp:139] Memory required for data: 200960
I0428 19:51:23.800276 27270 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:23.800295 27270 net.cpp:86] Creating Layer conv0
I0428 19:51:23.800300 27270 net.cpp:408] conv0 <- data
I0428 19:51:23.800310 27270 net.cpp:382] conv0 -> conv0
I0428 19:51:24.030607 27270 net.cpp:124] Setting up conv0
I0428 19:51:24.030634 27270 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:24.030638 27270 net.cpp:139] Memory required for data: 938240
I0428 19:51:24.030673 27270 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:24.030684 27270 net.cpp:86] Creating Layer pool0
I0428 19:51:24.030689 27270 net.cpp:408] pool0 <- conv0
I0428 19:51:24.030695 27270 net.cpp:382] pool0 -> pool0
I0428 19:51:24.030741 27270 net.cpp:124] Setting up pool0
I0428 19:51:24.030750 27270 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:24.030752 27270 net.cpp:139] Memory required for data: 1122560
I0428 19:51:24.030755 27270 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:24.030766 27270 net.cpp:86] Creating Layer conv1
I0428 19:51:24.030769 27270 net.cpp:408] conv1 <- pool0
I0428 19:51:24.030773 27270 net.cpp:382] conv1 -> conv1
I0428 19:51:24.033516 27270 net.cpp:124] Setting up conv1
I0428 19:51:24.033532 27270 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:24.033536 27270 net.cpp:139] Memory required for data: 1532160
I0428 19:51:24.033545 27270 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:24.033552 27270 net.cpp:86] Creating Layer pool1
I0428 19:51:24.033556 27270 net.cpp:408] pool1 <- conv1
I0428 19:51:24.033561 27270 net.cpp:382] pool1 -> pool1
I0428 19:51:24.033597 27270 net.cpp:124] Setting up pool1
I0428 19:51:24.033604 27270 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:24.033607 27270 net.cpp:139] Memory required for data: 1634560
I0428 19:51:24.033610 27270 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:24.033617 27270 net.cpp:86] Creating Layer ip1
I0428 19:51:24.033620 27270 net.cpp:408] ip1 <- pool1
I0428 19:51:24.033625 27270 net.cpp:382] ip1 -> ip1
I0428 19:51:24.034612 27270 net.cpp:124] Setting up ip1
I0428 19:51:24.034626 27270 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:24.034628 27270 net.cpp:139] Memory required for data: 1640960
I0428 19:51:24.034636 27270 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:24.034642 27270 net.cpp:86] Creating Layer relu1
I0428 19:51:24.034646 27270 net.cpp:408] relu1 <- ip1
I0428 19:51:24.034651 27270 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:24.034827 27270 net.cpp:124] Setting up relu1
I0428 19:51:24.034837 27270 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:24.034839 27270 net.cpp:139] Memory required for data: 1647360
I0428 19:51:24.034842 27270 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:24.034848 27270 net.cpp:86] Creating Layer ip2
I0428 19:51:24.034852 27270 net.cpp:408] ip2 <- ip1
I0428 19:51:24.034855 27270 net.cpp:382] ip2 -> ip2
I0428 19:51:24.034946 27270 net.cpp:124] Setting up ip2
I0428 19:51:24.034953 27270 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:24.034956 27270 net.cpp:139] Memory required for data: 1649920
I0428 19:51:24.034961 27270 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:24.034967 27270 net.cpp:86] Creating Layer relu2
I0428 19:51:24.034970 27270 net.cpp:408] relu2 <- ip2
I0428 19:51:24.034974 27270 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:24.035712 27270 net.cpp:124] Setting up relu2
I0428 19:51:24.035724 27270 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:24.035727 27270 net.cpp:139] Memory required for data: 1652480
I0428 19:51:24.035732 27270 layer_factory.hpp:77] Creating layer loss
I0428 19:51:24.035737 27270 net.cpp:86] Creating Layer loss
I0428 19:51:24.035742 27270 net.cpp:408] loss <- ip2
I0428 19:51:24.035745 27270 net.cpp:408] loss <- label
I0428 19:51:24.035750 27270 net.cpp:382] loss -> loss
I0428 19:51:24.035770 27270 layer_factory.hpp:77] Creating layer loss
I0428 19:51:24.036006 27270 net.cpp:124] Setting up loss
I0428 19:51:24.036015 27270 net.cpp:131] Top shape: (1)
I0428 19:51:24.036020 27270 net.cpp:134]     with loss weight 1
I0428 19:51:24.036032 27270 net.cpp:139] Memory required for data: 1652484
I0428 19:51:24.036036 27270 net.cpp:200] loss needs backward computation.
I0428 19:51:24.036039 27270 net.cpp:200] relu2 needs backward computation.
I0428 19:51:24.036042 27270 net.cpp:200] ip2 needs backward computation.
I0428 19:51:24.036046 27270 net.cpp:200] relu1 needs backward computation.
I0428 19:51:24.036047 27270 net.cpp:200] ip1 needs backward computation.
I0428 19:51:24.036061 27270 net.cpp:200] pool1 needs backward computation.
I0428 19:51:24.036063 27270 net.cpp:200] conv1 needs backward computation.
I0428 19:51:24.036067 27270 net.cpp:200] pool0 needs backward computation.
I0428 19:51:24.036069 27270 net.cpp:200] conv0 needs backward computation.
I0428 19:51:24.036073 27270 net.cpp:202] mnist does not need backward computation.
I0428 19:51:24.036075 27270 net.cpp:244] This network produces output loss
I0428 19:51:24.036084 27270 net.cpp:257] Network initialization done.
I0428 19:51:24.036382 27270 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test632.prototxt
I0428 19:51:24.036407 27270 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:24.036489 27270 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:24.036551 27270 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:24.036595 27270 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:24.036607 27270 net.cpp:86] Creating Layer mnist
I0428 19:51:24.036612 27270 net.cpp:382] mnist -> data
I0428 19:51:24.036618 27270 net.cpp:382] mnist -> label
I0428 19:51:24.036701 27270 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:24.038765 27270 net.cpp:124] Setting up mnist
I0428 19:51:24.038795 27270 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:24.038800 27270 net.cpp:131] Top shape: 100 (100)
I0428 19:51:24.038803 27270 net.cpp:139] Memory required for data: 314000
I0428 19:51:24.038807 27270 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:24.038817 27270 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:24.038820 27270 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:24.038825 27270 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:24.038832 27270 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:24.038919 27270 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:24.038938 27270 net.cpp:131] Top shape: 100 (100)
I0428 19:51:24.038941 27270 net.cpp:131] Top shape: 100 (100)
I0428 19:51:24.038944 27270 net.cpp:139] Memory required for data: 314800
I0428 19:51:24.038947 27270 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:24.038971 27270 net.cpp:86] Creating Layer conv0
I0428 19:51:24.038978 27270 net.cpp:408] conv0 <- data
I0428 19:51:24.038983 27270 net.cpp:382] conv0 -> conv0
I0428 19:51:24.040580 27270 net.cpp:124] Setting up conv0
I0428 19:51:24.040611 27270 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:24.040616 27270 net.cpp:139] Memory required for data: 1466800
I0428 19:51:24.040623 27270 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:24.040630 27270 net.cpp:86] Creating Layer pool0
I0428 19:51:24.040649 27270 net.cpp:408] pool0 <- conv0
I0428 19:51:24.040653 27270 net.cpp:382] pool0 -> pool0
I0428 19:51:24.040688 27270 net.cpp:124] Setting up pool0
I0428 19:51:24.040695 27270 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:24.040699 27270 net.cpp:139] Memory required for data: 1754800
I0428 19:51:24.040701 27270 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:24.040709 27270 net.cpp:86] Creating Layer conv1
I0428 19:51:24.040714 27270 net.cpp:408] conv1 <- pool0
I0428 19:51:24.040719 27270 net.cpp:382] conv1 -> conv1
I0428 19:51:24.042784 27270 net.cpp:124] Setting up conv1
I0428 19:51:24.042814 27270 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:24.042817 27270 net.cpp:139] Memory required for data: 2394800
I0428 19:51:24.042826 27270 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:24.042834 27270 net.cpp:86] Creating Layer pool1
I0428 19:51:24.042837 27270 net.cpp:408] pool1 <- conv1
I0428 19:51:24.042842 27270 net.cpp:382] pool1 -> pool1
I0428 19:51:24.042883 27270 net.cpp:124] Setting up pool1
I0428 19:51:24.042891 27270 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:24.042893 27270 net.cpp:139] Memory required for data: 2554800
I0428 19:51:24.042897 27270 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:24.042903 27270 net.cpp:86] Creating Layer ip1
I0428 19:51:24.042906 27270 net.cpp:408] ip1 <- pool1
I0428 19:51:24.042912 27270 net.cpp:382] ip1 -> ip1
I0428 19:51:24.043085 27270 net.cpp:124] Setting up ip1
I0428 19:51:24.043093 27270 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:24.043097 27270 net.cpp:139] Memory required for data: 2564800
I0428 19:51:24.043103 27270 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:24.043112 27270 net.cpp:86] Creating Layer relu1
I0428 19:51:24.043114 27270 net.cpp:408] relu1 <- ip1
I0428 19:51:24.043120 27270 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:24.043301 27270 net.cpp:124] Setting up relu1
I0428 19:51:24.043309 27270 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:24.043313 27270 net.cpp:139] Memory required for data: 2574800
I0428 19:51:24.043318 27270 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:24.043331 27270 net.cpp:86] Creating Layer ip2
I0428 19:51:24.043334 27270 net.cpp:408] ip2 <- ip1
I0428 19:51:24.043340 27270 net.cpp:382] ip2 -> ip2
I0428 19:51:24.043447 27270 net.cpp:124] Setting up ip2
I0428 19:51:24.043453 27270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:24.043455 27270 net.cpp:139] Memory required for data: 2578800
I0428 19:51:24.043462 27270 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:24.043465 27270 net.cpp:86] Creating Layer relu2
I0428 19:51:24.043468 27270 net.cpp:408] relu2 <- ip2
I0428 19:51:24.043478 27270 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:24.043655 27270 net.cpp:124] Setting up relu2
I0428 19:51:24.043664 27270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:24.043668 27270 net.cpp:139] Memory required for data: 2582800
I0428 19:51:24.043670 27270 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:51:24.043675 27270 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:51:24.043678 27270 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:51:24.043684 27270 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:51:24.043704 27270 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:51:24.043746 27270 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:51:24.043753 27270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:24.043757 27270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:24.043761 27270 net.cpp:139] Memory required for data: 2590800
I0428 19:51:24.043762 27270 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:24.043769 27270 net.cpp:86] Creating Layer accuracy
I0428 19:51:24.043772 27270 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:51:24.043776 27270 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:24.043782 27270 net.cpp:382] accuracy -> accuracy
I0428 19:51:24.043788 27270 net.cpp:124] Setting up accuracy
I0428 19:51:24.043793 27270 net.cpp:131] Top shape: (1)
I0428 19:51:24.043795 27270 net.cpp:139] Memory required for data: 2590804
I0428 19:51:24.043798 27270 layer_factory.hpp:77] Creating layer loss
I0428 19:51:24.043803 27270 net.cpp:86] Creating Layer loss
I0428 19:51:24.043807 27270 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:51:24.043810 27270 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:24.043814 27270 net.cpp:382] loss -> loss
I0428 19:51:24.043820 27270 layer_factory.hpp:77] Creating layer loss
I0428 19:51:24.044067 27270 net.cpp:124] Setting up loss
I0428 19:51:24.044077 27270 net.cpp:131] Top shape: (1)
I0428 19:51:24.044086 27270 net.cpp:134]     with loss weight 1
I0428 19:51:24.044095 27270 net.cpp:139] Memory required for data: 2590808
I0428 19:51:24.044098 27270 net.cpp:200] loss needs backward computation.
I0428 19:51:24.044102 27270 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:24.044113 27270 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:51:24.044116 27270 net.cpp:200] relu2 needs backward computation.
I0428 19:51:24.044118 27270 net.cpp:200] ip2 needs backward computation.
I0428 19:51:24.044121 27270 net.cpp:200] relu1 needs backward computation.
I0428 19:51:24.044124 27270 net.cpp:200] ip1 needs backward computation.
I0428 19:51:24.044132 27270 net.cpp:200] pool1 needs backward computation.
I0428 19:51:24.044137 27270 net.cpp:200] conv1 needs backward computation.
I0428 19:51:24.044139 27270 net.cpp:200] pool0 needs backward computation.
I0428 19:51:24.044142 27270 net.cpp:200] conv0 needs backward computation.
I0428 19:51:24.044147 27270 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:24.044150 27270 net.cpp:202] mnist does not need backward computation.
I0428 19:51:24.044153 27270 net.cpp:244] This network produces output accuracy
I0428 19:51:24.044157 27270 net.cpp:244] This network produces output loss
I0428 19:51:24.044167 27270 net.cpp:257] Network initialization done.
I0428 19:51:24.044206 27270 solver.cpp:56] Solver scaffolding done.
I0428 19:51:24.044490 27270 caffe.cpp:248] Starting Optimization
I0428 19:51:24.044497 27270 solver.cpp:273] Solving LeNet
I0428 19:51:24.044499 27270 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:24.044647 27270 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:24.048791 27270 blocking_queue.cpp:49] Waiting for data
I0428 19:51:24.119632 27277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:24.120134 27270 solver.cpp:398]     Test net output #0: accuracy = 0.1373
I0428 19:51:24.120172 27270 solver.cpp:398]     Test net output #1: loss = 2.30574 (* 1 = 2.30574 loss)
I0428 19:51:24.121862 27270 solver.cpp:219] Iteration 0 (-1.0823e+21 iter/s, 0.0773375s/100 iters), loss = 2.32518
I0428 19:51:24.121912 27270 solver.cpp:238]     Train net output #0: loss = 2.32518 (* 1 = 2.32518 loss)
I0428 19:51:24.121924 27270 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:24.199658 27270 solver.cpp:219] Iteration 100 (1286.4 iter/s, 0.0777364s/100 iters), loss = 0.922069
I0428 19:51:24.199699 27270 solver.cpp:238]     Train net output #0: loss = 0.922069 (* 1 = 0.922069 loss)
I0428 19:51:24.199705 27270 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:24.276288 27270 solver.cpp:219] Iteration 200 (1305.51 iter/s, 0.0765982s/100 iters), loss = 0.841466
I0428 19:51:24.276340 27270 solver.cpp:238]     Train net output #0: loss = 0.841466 (* 1 = 0.841466 loss)
I0428 19:51:24.276347 27270 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:24.353198 27270 solver.cpp:219] Iteration 300 (1301.29 iter/s, 0.0768471s/100 iters), loss = 0.220843
I0428 19:51:24.353221 27270 solver.cpp:238]     Train net output #0: loss = 0.220843 (* 1 = 0.220843 loss)
I0428 19:51:24.353229 27270 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:24.430555 27270 solver.cpp:219] Iteration 400 (1293.27 iter/s, 0.0773233s/100 iters), loss = 0.112646
I0428 19:51:24.430599 27270 solver.cpp:238]     Train net output #0: loss = 0.112646 (* 1 = 0.112646 loss)
I0428 19:51:24.430606 27270 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:24.506453 27270 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:24.552687 27277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:24.553273 27270 solver.cpp:398]     Test net output #0: accuracy = 0.9628
I0428 19:51:24.553310 27270 solver.cpp:398]     Test net output #1: loss = 0.126549 (* 1 = 0.126549 loss)
I0428 19:51:24.554126 27270 solver.cpp:219] Iteration 500 (809.519 iter/s, 0.12353s/100 iters), loss = 0.0993945
I0428 19:51:24.554177 27270 solver.cpp:238]     Train net output #0: loss = 0.0993946 (* 1 = 0.0993946 loss)
I0428 19:51:24.554186 27270 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:24.631995 27270 solver.cpp:219] Iteration 600 (1285.15 iter/s, 0.0778122s/100 iters), loss = 0.128991
I0428 19:51:24.632036 27270 solver.cpp:238]     Train net output #0: loss = 0.128991 (* 1 = 0.128991 loss)
I0428 19:51:24.632043 27270 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:24.709487 27270 solver.cpp:219] Iteration 700 (1291.01 iter/s, 0.0774585s/100 iters), loss = 0.126729
I0428 19:51:24.709527 27270 solver.cpp:238]     Train net output #0: loss = 0.126729 (* 1 = 0.126729 loss)
I0428 19:51:24.709534 27270 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:24.787137 27270 solver.cpp:219] Iteration 800 (1288.39 iter/s, 0.0776161s/100 iters), loss = 0.240709
I0428 19:51:24.787176 27270 solver.cpp:238]     Train net output #0: loss = 0.24071 (* 1 = 0.24071 loss)
I0428 19:51:24.787184 27270 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:24.864485 27270 solver.cpp:219] Iteration 900 (1293.39 iter/s, 0.077316s/100 iters), loss = 0.201909
I0428 19:51:24.864524 27270 solver.cpp:238]     Train net output #0: loss = 0.201909 (* 1 = 0.201909 loss)
I0428 19:51:24.864531 27270 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:24.890611 27276 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:24.951599 27270 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:24.952481 27270 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:24.952976 27270 solver.cpp:311] Iteration 1000, loss = 0.193116
I0428 19:51:24.952993 27270 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:24.997870 27277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:24.998364 27270 solver.cpp:398]     Test net output #0: accuracy = 0.9737
I0428 19:51:24.998383 27270 solver.cpp:398]     Test net output #1: loss = 0.0848435 (* 1 = 0.0848435 loss)
I0428 19:51:24.998387 27270 solver.cpp:316] Optimization Done.
I0428 19:51:24.998390 27270 caffe.cpp:259] Optimization Done.
