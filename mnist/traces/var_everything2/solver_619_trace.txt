I0428 19:50:56.578222 27159 caffe.cpp:218] Using GPUs 0
I0428 19:50:56.615160 27159 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:57.123576 27159 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test619.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:57.123746 27159 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test619.prototxt
I0428 19:50:57.124166 27159 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:57.124191 27159 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:57.124305 27159 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:57.124418 27159 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:57.124542 27159 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:57.124573 27159 net.cpp:86] Creating Layer mnist
I0428 19:50:57.124588 27159 net.cpp:382] mnist -> data
I0428 19:50:57.124616 27159 net.cpp:382] mnist -> label
I0428 19:50:57.125864 27159 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:57.128254 27159 net.cpp:124] Setting up mnist
I0428 19:50:57.128273 27159 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:57.128285 27159 net.cpp:131] Top shape: 64 (64)
I0428 19:50:57.128291 27159 net.cpp:139] Memory required for data: 200960
I0428 19:50:57.128304 27159 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:57.128327 27159 net.cpp:86] Creating Layer conv0
I0428 19:50:57.128352 27159 net.cpp:408] conv0 <- data
I0428 19:50:57.128372 27159 net.cpp:382] conv0 -> conv0
I0428 19:50:57.411978 27159 net.cpp:124] Setting up conv0
I0428 19:50:57.412011 27159 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:57.412019 27159 net.cpp:139] Memory required for data: 938240
I0428 19:50:57.412042 27159 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:57.412061 27159 net.cpp:86] Creating Layer pool0
I0428 19:50:57.412078 27159 net.cpp:408] pool0 <- conv0
I0428 19:50:57.412091 27159 net.cpp:382] pool0 -> pool0
I0428 19:50:57.412158 27159 net.cpp:124] Setting up pool0
I0428 19:50:57.412168 27159 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:57.412174 27159 net.cpp:139] Memory required for data: 1122560
I0428 19:50:57.412181 27159 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:57.412199 27159 net.cpp:86] Creating Layer conv1
I0428 19:50:57.412207 27159 net.cpp:408] conv1 <- pool0
I0428 19:50:57.412217 27159 net.cpp:382] conv1 -> conv1
I0428 19:50:57.415328 27159 net.cpp:124] Setting up conv1
I0428 19:50:57.415346 27159 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:57.415354 27159 net.cpp:139] Memory required for data: 1286400
I0428 19:50:57.415372 27159 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:57.415385 27159 net.cpp:86] Creating Layer pool1
I0428 19:50:57.415392 27159 net.cpp:408] pool1 <- conv1
I0428 19:50:57.415402 27159 net.cpp:382] pool1 -> pool1
I0428 19:50:57.415458 27159 net.cpp:124] Setting up pool1
I0428 19:50:57.415469 27159 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:57.415475 27159 net.cpp:139] Memory required for data: 1327360
I0428 19:50:57.415482 27159 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:57.415494 27159 net.cpp:86] Creating Layer ip1
I0428 19:50:57.415501 27159 net.cpp:408] ip1 <- pool1
I0428 19:50:57.415513 27159 net.cpp:382] ip1 -> ip1
I0428 19:50:57.416626 27159 net.cpp:124] Setting up ip1
I0428 19:50:57.416642 27159 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:57.416649 27159 net.cpp:139] Memory required for data: 1340160
I0428 19:50:57.416664 27159 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:57.416676 27159 net.cpp:86] Creating Layer relu1
I0428 19:50:57.416683 27159 net.cpp:408] relu1 <- ip1
I0428 19:50:57.416694 27159 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:57.416930 27159 net.cpp:124] Setting up relu1
I0428 19:50:57.416944 27159 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:57.416949 27159 net.cpp:139] Memory required for data: 1352960
I0428 19:50:57.416956 27159 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:57.416970 27159 net.cpp:86] Creating Layer ip2
I0428 19:50:57.416976 27159 net.cpp:408] ip2 <- ip1
I0428 19:50:57.416987 27159 net.cpp:382] ip2 -> ip2
I0428 19:50:57.417130 27159 net.cpp:124] Setting up ip2
I0428 19:50:57.417141 27159 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:57.417147 27159 net.cpp:139] Memory required for data: 1359360
I0428 19:50:57.417158 27159 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:57.417172 27159 net.cpp:86] Creating Layer relu2
I0428 19:50:57.417179 27159 net.cpp:408] relu2 <- ip2
I0428 19:50:57.417188 27159 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:57.418051 27159 net.cpp:124] Setting up relu2
I0428 19:50:57.418068 27159 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:57.418076 27159 net.cpp:139] Memory required for data: 1365760
I0428 19:50:57.418081 27159 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:57.418093 27159 net.cpp:86] Creating Layer ip3
I0428 19:50:57.418100 27159 net.cpp:408] ip3 <- ip2
I0428 19:50:57.418112 27159 net.cpp:382] ip3 -> ip3
I0428 19:50:57.418241 27159 net.cpp:124] Setting up ip3
I0428 19:50:57.418252 27159 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:57.418258 27159 net.cpp:139] Memory required for data: 1368320
I0428 19:50:57.418275 27159 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:57.418287 27159 net.cpp:86] Creating Layer relu3
I0428 19:50:57.418293 27159 net.cpp:408] relu3 <- ip3
I0428 19:50:57.418303 27159 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:57.418514 27159 net.cpp:124] Setting up relu3
I0428 19:50:57.418526 27159 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:57.418534 27159 net.cpp:139] Memory required for data: 1370880
I0428 19:50:57.418540 27159 layer_factory.hpp:77] Creating layer loss
I0428 19:50:57.418550 27159 net.cpp:86] Creating Layer loss
I0428 19:50:57.418556 27159 net.cpp:408] loss <- ip3
I0428 19:50:57.418565 27159 net.cpp:408] loss <- label
I0428 19:50:57.418578 27159 net.cpp:382] loss -> loss
I0428 19:50:57.418604 27159 layer_factory.hpp:77] Creating layer loss
I0428 19:50:57.418895 27159 net.cpp:124] Setting up loss
I0428 19:50:57.418906 27159 net.cpp:131] Top shape: (1)
I0428 19:50:57.418912 27159 net.cpp:134]     with loss weight 1
I0428 19:50:57.418934 27159 net.cpp:139] Memory required for data: 1370884
I0428 19:50:57.418941 27159 net.cpp:200] loss needs backward computation.
I0428 19:50:57.418948 27159 net.cpp:200] relu3 needs backward computation.
I0428 19:50:57.418954 27159 net.cpp:200] ip3 needs backward computation.
I0428 19:50:57.418961 27159 net.cpp:200] relu2 needs backward computation.
I0428 19:50:57.418967 27159 net.cpp:200] ip2 needs backward computation.
I0428 19:50:57.418972 27159 net.cpp:200] relu1 needs backward computation.
I0428 19:50:57.418977 27159 net.cpp:200] ip1 needs backward computation.
I0428 19:50:57.418983 27159 net.cpp:200] pool1 needs backward computation.
I0428 19:50:57.418989 27159 net.cpp:200] conv1 needs backward computation.
I0428 19:50:57.418997 27159 net.cpp:200] pool0 needs backward computation.
I0428 19:50:57.419001 27159 net.cpp:200] conv0 needs backward computation.
I0428 19:50:57.419008 27159 net.cpp:202] mnist does not need backward computation.
I0428 19:50:57.419014 27159 net.cpp:244] This network produces output loss
I0428 19:50:57.419034 27159 net.cpp:257] Network initialization done.
I0428 19:50:57.419426 27159 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test619.prototxt
I0428 19:50:57.419466 27159 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:57.419587 27159 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:57.419730 27159 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:57.419797 27159 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:57.419817 27159 net.cpp:86] Creating Layer mnist
I0428 19:50:57.419828 27159 net.cpp:382] mnist -> data
I0428 19:50:57.419842 27159 net.cpp:382] mnist -> label
I0428 19:50:57.419989 27159 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:57.422334 27159 net.cpp:124] Setting up mnist
I0428 19:50:57.422351 27159 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:57.422361 27159 net.cpp:131] Top shape: 100 (100)
I0428 19:50:57.422368 27159 net.cpp:139] Memory required for data: 314000
I0428 19:50:57.422374 27159 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:57.422408 27159 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:57.422415 27159 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:57.422425 27159 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:57.422437 27159 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:57.422533 27159 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:57.422544 27159 net.cpp:131] Top shape: 100 (100)
I0428 19:50:57.422552 27159 net.cpp:131] Top shape: 100 (100)
I0428 19:50:57.422557 27159 net.cpp:139] Memory required for data: 314800
I0428 19:50:57.422564 27159 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:57.422580 27159 net.cpp:86] Creating Layer conv0
I0428 19:50:57.422588 27159 net.cpp:408] conv0 <- data
I0428 19:50:57.422601 27159 net.cpp:382] conv0 -> conv0
I0428 19:50:57.424381 27159 net.cpp:124] Setting up conv0
I0428 19:50:57.424399 27159 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:57.424407 27159 net.cpp:139] Memory required for data: 1466800
I0428 19:50:57.424425 27159 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:57.424439 27159 net.cpp:86] Creating Layer pool0
I0428 19:50:57.424448 27159 net.cpp:408] pool0 <- conv0
I0428 19:50:57.424456 27159 net.cpp:382] pool0 -> pool0
I0428 19:50:57.424510 27159 net.cpp:124] Setting up pool0
I0428 19:50:57.424520 27159 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:57.424525 27159 net.cpp:139] Memory required for data: 1754800
I0428 19:50:57.424531 27159 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:57.424548 27159 net.cpp:86] Creating Layer conv1
I0428 19:50:57.424556 27159 net.cpp:408] conv1 <- pool0
I0428 19:50:57.424568 27159 net.cpp:382] conv1 -> conv1
I0428 19:50:57.427037 27159 net.cpp:124] Setting up conv1
I0428 19:50:57.427057 27159 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:57.427063 27159 net.cpp:139] Memory required for data: 2010800
I0428 19:50:57.427078 27159 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:57.427090 27159 net.cpp:86] Creating Layer pool1
I0428 19:50:57.427096 27159 net.cpp:408] pool1 <- conv1
I0428 19:50:57.427109 27159 net.cpp:382] pool1 -> pool1
I0428 19:50:57.427170 27159 net.cpp:124] Setting up pool1
I0428 19:50:57.427181 27159 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:57.427186 27159 net.cpp:139] Memory required for data: 2074800
I0428 19:50:57.427192 27159 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:57.427206 27159 net.cpp:86] Creating Layer ip1
I0428 19:50:57.427213 27159 net.cpp:408] ip1 <- pool1
I0428 19:50:57.427224 27159 net.cpp:382] ip1 -> ip1
I0428 19:50:57.427412 27159 net.cpp:124] Setting up ip1
I0428 19:50:57.427423 27159 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:57.427443 27159 net.cpp:139] Memory required for data: 2094800
I0428 19:50:57.427459 27159 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:57.427469 27159 net.cpp:86] Creating Layer relu1
I0428 19:50:57.427481 27159 net.cpp:408] relu1 <- ip1
I0428 19:50:57.427490 27159 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:57.427700 27159 net.cpp:124] Setting up relu1
I0428 19:50:57.427711 27159 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:57.427717 27159 net.cpp:139] Memory required for data: 2114800
I0428 19:50:57.427723 27159 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:57.427736 27159 net.cpp:86] Creating Layer ip2
I0428 19:50:57.427743 27159 net.cpp:408] ip2 <- ip1
I0428 19:50:57.427757 27159 net.cpp:382] ip2 -> ip2
I0428 19:50:57.427897 27159 net.cpp:124] Setting up ip2
I0428 19:50:57.427907 27159 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:57.427913 27159 net.cpp:139] Memory required for data: 2124800
I0428 19:50:57.427925 27159 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:57.427933 27159 net.cpp:86] Creating Layer relu2
I0428 19:50:57.427939 27159 net.cpp:408] relu2 <- ip2
I0428 19:50:57.427950 27159 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:57.428201 27159 net.cpp:124] Setting up relu2
I0428 19:50:57.428212 27159 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:57.428220 27159 net.cpp:139] Memory required for data: 2134800
I0428 19:50:57.428225 27159 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:57.428237 27159 net.cpp:86] Creating Layer ip3
I0428 19:50:57.428244 27159 net.cpp:408] ip3 <- ip2
I0428 19:50:57.428253 27159 net.cpp:382] ip3 -> ip3
I0428 19:50:57.428385 27159 net.cpp:124] Setting up ip3
I0428 19:50:57.428395 27159 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:57.428402 27159 net.cpp:139] Memory required for data: 2138800
I0428 19:50:57.428417 27159 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:57.428432 27159 net.cpp:86] Creating Layer relu3
I0428 19:50:57.428441 27159 net.cpp:408] relu3 <- ip3
I0428 19:50:57.428448 27159 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:57.429368 27159 net.cpp:124] Setting up relu3
I0428 19:50:57.429385 27159 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:57.429394 27159 net.cpp:139] Memory required for data: 2142800
I0428 19:50:57.429400 27159 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:57.429409 27159 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:57.429416 27159 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:57.429425 27159 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:57.429437 27159 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:57.429492 27159 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:57.429502 27159 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:57.429510 27159 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:57.429517 27159 net.cpp:139] Memory required for data: 2150800
I0428 19:50:57.429522 27159 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:57.429533 27159 net.cpp:86] Creating Layer accuracy
I0428 19:50:57.429538 27159 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:57.429546 27159 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:57.429558 27159 net.cpp:382] accuracy -> accuracy
I0428 19:50:57.429571 27159 net.cpp:124] Setting up accuracy
I0428 19:50:57.429580 27159 net.cpp:131] Top shape: (1)
I0428 19:50:57.429586 27159 net.cpp:139] Memory required for data: 2150804
I0428 19:50:57.429592 27159 layer_factory.hpp:77] Creating layer loss
I0428 19:50:57.429601 27159 net.cpp:86] Creating Layer loss
I0428 19:50:57.429607 27159 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:57.429615 27159 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:57.429625 27159 net.cpp:382] loss -> loss
I0428 19:50:57.429636 27159 layer_factory.hpp:77] Creating layer loss
I0428 19:50:57.429929 27159 net.cpp:124] Setting up loss
I0428 19:50:57.429940 27159 net.cpp:131] Top shape: (1)
I0428 19:50:57.429946 27159 net.cpp:134]     with loss weight 1
I0428 19:50:57.429957 27159 net.cpp:139] Memory required for data: 2150808
I0428 19:50:57.429975 27159 net.cpp:200] loss needs backward computation.
I0428 19:50:57.429983 27159 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:57.429991 27159 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:57.429996 27159 net.cpp:200] relu3 needs backward computation.
I0428 19:50:57.430002 27159 net.cpp:200] ip3 needs backward computation.
I0428 19:50:57.430008 27159 net.cpp:200] relu2 needs backward computation.
I0428 19:50:57.430013 27159 net.cpp:200] ip2 needs backward computation.
I0428 19:50:57.430019 27159 net.cpp:200] relu1 needs backward computation.
I0428 19:50:57.430024 27159 net.cpp:200] ip1 needs backward computation.
I0428 19:50:57.430030 27159 net.cpp:200] pool1 needs backward computation.
I0428 19:50:57.430037 27159 net.cpp:200] conv1 needs backward computation.
I0428 19:50:57.430043 27159 net.cpp:200] pool0 needs backward computation.
I0428 19:50:57.430049 27159 net.cpp:200] conv0 needs backward computation.
I0428 19:50:57.430057 27159 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:57.430063 27159 net.cpp:202] mnist does not need backward computation.
I0428 19:50:57.430069 27159 net.cpp:244] This network produces output accuracy
I0428 19:50:57.430076 27159 net.cpp:244] This network produces output loss
I0428 19:50:57.430097 27159 net.cpp:257] Network initialization done.
I0428 19:50:57.430155 27159 solver.cpp:56] Solver scaffolding done.
I0428 19:50:57.430560 27159 caffe.cpp:248] Starting Optimization
I0428 19:50:57.430568 27159 solver.cpp:273] Solving LeNet
I0428 19:50:57.430574 27159 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:57.430774 27159 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:57.434625 27159 blocking_queue.cpp:49] Waiting for data
I0428 19:50:57.501514 27166 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:57.502039 27159 solver.cpp:398]     Test net output #0: accuracy = 0.0788
I0428 19:50:57.502063 27159 solver.cpp:398]     Test net output #1: loss = 2.31397 (* 1 = 2.31397 loss)
I0428 19:50:57.504045 27159 solver.cpp:219] Iteration 0 (8.4674e+10 iter/s, 0.0734371s/100 iters), loss = 2.32766
I0428 19:50:57.504079 27159 solver.cpp:238]     Train net output #0: loss = 2.32766 (* 1 = 2.32766 loss)
I0428 19:50:57.504099 27159 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:57.584386 27159 solver.cpp:219] Iteration 100 (1245.38 iter/s, 0.080297s/100 iters), loss = 1.19063
I0428 19:50:57.584420 27159 solver.cpp:238]     Train net output #0: loss = 1.19063 (* 1 = 1.19063 loss)
I0428 19:50:57.584432 27159 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:57.663312 27159 solver.cpp:219] Iteration 200 (1267.65 iter/s, 0.0788859s/100 iters), loss = 1.14974
I0428 19:50:57.663343 27159 solver.cpp:238]     Train net output #0: loss = 1.14974 (* 1 = 1.14974 loss)
I0428 19:50:57.663354 27159 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:57.742074 27159 solver.cpp:219] Iteration 300 (1270.26 iter/s, 0.0787241s/100 iters), loss = 0.576659
I0428 19:50:57.742101 27159 solver.cpp:238]     Train net output #0: loss = 0.576659 (* 1 = 0.576659 loss)
I0428 19:50:57.742126 27159 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:57.816779 27159 solver.cpp:219] Iteration 400 (1339.2 iter/s, 0.0746713s/100 iters), loss = 0.865448
I0428 19:50:57.816807 27159 solver.cpp:238]     Train net output #0: loss = 0.865448 (* 1 = 0.865448 loss)
I0428 19:50:57.816853 27159 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:57.889621 27159 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:57.964030 27166 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:57.965247 27159 solver.cpp:398]     Test net output #0: accuracy = 0.7483
I0428 19:50:57.965301 27159 solver.cpp:398]     Test net output #1: loss = 0.868637 (* 1 = 0.868637 loss)
I0428 19:50:57.966516 27159 solver.cpp:219] Iteration 500 (668.032 iter/s, 0.149693s/100 iters), loss = 1.03062
I0428 19:50:57.966562 27159 solver.cpp:238]     Train net output #0: loss = 1.03062 (* 1 = 1.03062 loss)
I0428 19:50:57.966601 27159 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:58.061259 27159 solver.cpp:219] Iteration 600 (1056.06 iter/s, 0.0946913s/100 iters), loss = 0.462726
I0428 19:50:58.061290 27159 solver.cpp:238]     Train net output #0: loss = 0.462726 (* 1 = 0.462726 loss)
I0428 19:50:58.061311 27159 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:58.149731 27159 solver.cpp:219] Iteration 700 (1130.88 iter/s, 0.0884265s/100 iters), loss = 0.866708
I0428 19:50:58.149777 27159 solver.cpp:238]     Train net output #0: loss = 0.866708 (* 1 = 0.866708 loss)
I0428 19:50:58.149790 27159 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:58.239555 27159 solver.cpp:219] Iteration 800 (1113.94 iter/s, 0.0897711s/100 iters), loss = 0.678473
I0428 19:50:58.239588 27159 solver.cpp:238]     Train net output #0: loss = 0.678473 (* 1 = 0.678473 loss)
I0428 19:50:58.239595 27159 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:58.319733 27159 solver.cpp:219] Iteration 900 (1247.88 iter/s, 0.0801362s/100 iters), loss = 0.366749
I0428 19:50:58.319762 27159 solver.cpp:238]     Train net output #0: loss = 0.366749 (* 1 = 0.366749 loss)
I0428 19:50:58.319769 27159 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:58.346644 27165 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:58.398275 27159 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:58.399134 27159 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:58.399647 27159 solver.cpp:311] Iteration 1000, loss = 0.462696
I0428 19:50:58.399667 27159 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:58.474467 27166 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:58.474988 27159 solver.cpp:398]     Test net output #0: accuracy = 0.9405
I0428 19:50:58.475013 27159 solver.cpp:398]     Test net output #1: loss = 0.348817 (* 1 = 0.348817 loss)
I0428 19:50:58.475021 27159 solver.cpp:316] Optimization Done.
I0428 19:50:58.475025 27159 caffe.cpp:259] Optimization Done.
