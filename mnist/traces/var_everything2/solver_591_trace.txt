I0428 19:49:59.069903 26903 caffe.cpp:218] Using GPUs 0
I0428 19:49:59.102766 26903 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:59.558691 26903 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test591.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:59.558822 26903 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test591.prototxt
I0428 19:49:59.559119 26903 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:59.559152 26903 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:59.559226 26903 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:49:59.559286 26903 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:59.559367 26903 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:59.559387 26903 net.cpp:86] Creating Layer mnist
I0428 19:49:59.559394 26903 net.cpp:382] mnist -> data
I0428 19:49:59.559412 26903 net.cpp:382] mnist -> label
I0428 19:49:59.560447 26903 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:59.562875 26903 net.cpp:124] Setting up mnist
I0428 19:49:59.562906 26903 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:59.562911 26903 net.cpp:131] Top shape: 64 (64)
I0428 19:49:59.562913 26903 net.cpp:139] Memory required for data: 200960
I0428 19:49:59.562919 26903 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:59.562954 26903 net.cpp:86] Creating Layer conv0
I0428 19:49:59.562960 26903 net.cpp:408] conv0 <- data
I0428 19:49:59.562983 26903 net.cpp:382] conv0 -> conv0
I0428 19:49:59.790845 26903 net.cpp:124] Setting up conv0
I0428 19:49:59.790873 26903 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:59.790875 26903 net.cpp:139] Memory required for data: 938240
I0428 19:49:59.790926 26903 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:59.790938 26903 net.cpp:86] Creating Layer pool0
I0428 19:49:59.790957 26903 net.cpp:408] pool0 <- conv0
I0428 19:49:59.790962 26903 net.cpp:382] pool0 -> pool0
I0428 19:49:59.791008 26903 net.cpp:124] Setting up pool0
I0428 19:49:59.791014 26903 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:59.791018 26903 net.cpp:139] Memory required for data: 1122560
I0428 19:49:59.791020 26903 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:59.791030 26903 net.cpp:86] Creating Layer conv1
I0428 19:49:59.791033 26903 net.cpp:408] conv1 <- pool0
I0428 19:49:59.791038 26903 net.cpp:382] conv1 -> conv1
I0428 19:49:59.793896 26903 net.cpp:124] Setting up conv1
I0428 19:49:59.793926 26903 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:49:59.793931 26903 net.cpp:139] Memory required for data: 1286400
I0428 19:49:59.793938 26903 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:59.793946 26903 net.cpp:86] Creating Layer pool1
I0428 19:49:59.793949 26903 net.cpp:408] pool1 <- conv1
I0428 19:49:59.793954 26903 net.cpp:382] pool1 -> pool1
I0428 19:49:59.793992 26903 net.cpp:124] Setting up pool1
I0428 19:49:59.793997 26903 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:49:59.793999 26903 net.cpp:139] Memory required for data: 1327360
I0428 19:49:59.794003 26903 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:59.794009 26903 net.cpp:86] Creating Layer ip1
I0428 19:49:59.794013 26903 net.cpp:408] ip1 <- pool1
I0428 19:49:59.794016 26903 net.cpp:382] ip1 -> ip1
I0428 19:49:59.794131 26903 net.cpp:124] Setting up ip1
I0428 19:49:59.794139 26903 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:59.794142 26903 net.cpp:139] Memory required for data: 1333760
I0428 19:49:59.794148 26903 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:59.794154 26903 net.cpp:86] Creating Layer relu1
I0428 19:49:59.794157 26903 net.cpp:408] relu1 <- ip1
I0428 19:49:59.794162 26903 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:59.794355 26903 net.cpp:124] Setting up relu1
I0428 19:49:59.794363 26903 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:59.794366 26903 net.cpp:139] Memory required for data: 1340160
I0428 19:49:59.794369 26903 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:59.794375 26903 net.cpp:86] Creating Layer ip2
I0428 19:49:59.794378 26903 net.cpp:408] ip2 <- ip1
I0428 19:49:59.794383 26903 net.cpp:382] ip2 -> ip2
I0428 19:49:59.794468 26903 net.cpp:124] Setting up ip2
I0428 19:49:59.794474 26903 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:59.794477 26903 net.cpp:139] Memory required for data: 1342720
I0428 19:49:59.794481 26903 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:59.794487 26903 net.cpp:86] Creating Layer relu2
I0428 19:49:59.794489 26903 net.cpp:408] relu2 <- ip2
I0428 19:49:59.794493 26903 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:59.795291 26903 net.cpp:124] Setting up relu2
I0428 19:49:59.795302 26903 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:59.795321 26903 net.cpp:139] Memory required for data: 1345280
I0428 19:49:59.795325 26903 layer_factory.hpp:77] Creating layer loss
I0428 19:49:59.795331 26903 net.cpp:86] Creating Layer loss
I0428 19:49:59.795332 26903 net.cpp:408] loss <- ip2
I0428 19:49:59.795336 26903 net.cpp:408] loss <- label
I0428 19:49:59.795342 26903 net.cpp:382] loss -> loss
I0428 19:49:59.795357 26903 layer_factory.hpp:77] Creating layer loss
I0428 19:49:59.795583 26903 net.cpp:124] Setting up loss
I0428 19:49:59.795591 26903 net.cpp:131] Top shape: (1)
I0428 19:49:59.795594 26903 net.cpp:134]     with loss weight 1
I0428 19:49:59.795608 26903 net.cpp:139] Memory required for data: 1345284
I0428 19:49:59.795610 26903 net.cpp:200] loss needs backward computation.
I0428 19:49:59.795614 26903 net.cpp:200] relu2 needs backward computation.
I0428 19:49:59.795616 26903 net.cpp:200] ip2 needs backward computation.
I0428 19:49:59.795635 26903 net.cpp:200] relu1 needs backward computation.
I0428 19:49:59.795637 26903 net.cpp:200] ip1 needs backward computation.
I0428 19:49:59.795650 26903 net.cpp:200] pool1 needs backward computation.
I0428 19:49:59.795653 26903 net.cpp:200] conv1 needs backward computation.
I0428 19:49:59.795656 26903 net.cpp:200] pool0 needs backward computation.
I0428 19:49:59.795660 26903 net.cpp:200] conv0 needs backward computation.
I0428 19:49:59.795662 26903 net.cpp:202] mnist does not need backward computation.
I0428 19:49:59.795665 26903 net.cpp:244] This network produces output loss
I0428 19:49:59.795675 26903 net.cpp:257] Network initialization done.
I0428 19:49:59.795950 26903 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test591.prototxt
I0428 19:49:59.795974 26903 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:59.796077 26903 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:49:59.796157 26903 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:59.796201 26903 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:59.796212 26903 net.cpp:86] Creating Layer mnist
I0428 19:49:59.796216 26903 net.cpp:382] mnist -> data
I0428 19:49:59.796226 26903 net.cpp:382] mnist -> label
I0428 19:49:59.796309 26903 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:59.798321 26903 net.cpp:124] Setting up mnist
I0428 19:49:59.798334 26903 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:59.798341 26903 net.cpp:131] Top shape: 100 (100)
I0428 19:49:59.798343 26903 net.cpp:139] Memory required for data: 314000
I0428 19:49:59.798346 26903 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:59.798353 26903 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:59.798357 26903 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:59.798360 26903 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:59.798369 26903 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:59.798418 26903 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:59.798432 26903 net.cpp:131] Top shape: 100 (100)
I0428 19:49:59.798436 26903 net.cpp:131] Top shape: 100 (100)
I0428 19:49:59.798439 26903 net.cpp:139] Memory required for data: 314800
I0428 19:49:59.798442 26903 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:59.798454 26903 net.cpp:86] Creating Layer conv0
I0428 19:49:59.798456 26903 net.cpp:408] conv0 <- data
I0428 19:49:59.798461 26903 net.cpp:382] conv0 -> conv0
I0428 19:49:59.800320 26903 net.cpp:124] Setting up conv0
I0428 19:49:59.800333 26903 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:59.800336 26903 net.cpp:139] Memory required for data: 1466800
I0428 19:49:59.800345 26903 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:59.800362 26903 net.cpp:86] Creating Layer pool0
I0428 19:49:59.800366 26903 net.cpp:408] pool0 <- conv0
I0428 19:49:59.800371 26903 net.cpp:382] pool0 -> pool0
I0428 19:49:59.800420 26903 net.cpp:124] Setting up pool0
I0428 19:49:59.800426 26903 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:59.800428 26903 net.cpp:139] Memory required for data: 1754800
I0428 19:49:59.800431 26903 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:59.800441 26903 net.cpp:86] Creating Layer conv1
I0428 19:49:59.800444 26903 net.cpp:408] conv1 <- pool0
I0428 19:49:59.800451 26903 net.cpp:382] conv1 -> conv1
I0428 19:49:59.802708 26903 net.cpp:124] Setting up conv1
I0428 19:49:59.802722 26903 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:49:59.802727 26903 net.cpp:139] Memory required for data: 2010800
I0428 19:49:59.802736 26903 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:59.802752 26903 net.cpp:86] Creating Layer pool1
I0428 19:49:59.802757 26903 net.cpp:408] pool1 <- conv1
I0428 19:49:59.802762 26903 net.cpp:382] pool1 -> pool1
I0428 19:49:59.802820 26903 net.cpp:124] Setting up pool1
I0428 19:49:59.802827 26903 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:49:59.802830 26903 net.cpp:139] Memory required for data: 2074800
I0428 19:49:59.802839 26903 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:59.802845 26903 net.cpp:86] Creating Layer ip1
I0428 19:49:59.802847 26903 net.cpp:408] ip1 <- pool1
I0428 19:49:59.802852 26903 net.cpp:382] ip1 -> ip1
I0428 19:49:59.803009 26903 net.cpp:124] Setting up ip1
I0428 19:49:59.803016 26903 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:59.803020 26903 net.cpp:139] Memory required for data: 2084800
I0428 19:49:59.803026 26903 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:59.803031 26903 net.cpp:86] Creating Layer relu1
I0428 19:49:59.803035 26903 net.cpp:408] relu1 <- ip1
I0428 19:49:59.803040 26903 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:59.803289 26903 net.cpp:124] Setting up relu1
I0428 19:49:59.803297 26903 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:59.803302 26903 net.cpp:139] Memory required for data: 2094800
I0428 19:49:59.803304 26903 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:59.803311 26903 net.cpp:86] Creating Layer ip2
I0428 19:49:59.803314 26903 net.cpp:408] ip2 <- ip1
I0428 19:49:59.803318 26903 net.cpp:382] ip2 -> ip2
I0428 19:49:59.803417 26903 net.cpp:124] Setting up ip2
I0428 19:49:59.803424 26903 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:59.803427 26903 net.cpp:139] Memory required for data: 2098800
I0428 19:49:59.803431 26903 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:59.803436 26903 net.cpp:86] Creating Layer relu2
I0428 19:49:59.803438 26903 net.cpp:408] relu2 <- ip2
I0428 19:49:59.803445 26903 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:59.803609 26903 net.cpp:124] Setting up relu2
I0428 19:49:59.803617 26903 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:59.803620 26903 net.cpp:139] Memory required for data: 2102800
I0428 19:49:59.803623 26903 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:49:59.803627 26903 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:49:59.803630 26903 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:49:59.803637 26903 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:49:59.803652 26903 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:49:59.803702 26903 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:49:59.803707 26903 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:59.803711 26903 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:59.803714 26903 net.cpp:139] Memory required for data: 2110800
I0428 19:49:59.803716 26903 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:59.803722 26903 net.cpp:86] Creating Layer accuracy
I0428 19:49:59.803725 26903 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:49:59.803730 26903 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:59.803742 26903 net.cpp:382] accuracy -> accuracy
I0428 19:49:59.803750 26903 net.cpp:124] Setting up accuracy
I0428 19:49:59.803753 26903 net.cpp:131] Top shape: (1)
I0428 19:49:59.803761 26903 net.cpp:139] Memory required for data: 2110804
I0428 19:49:59.803764 26903 layer_factory.hpp:77] Creating layer loss
I0428 19:49:59.803768 26903 net.cpp:86] Creating Layer loss
I0428 19:49:59.803772 26903 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:49:59.803781 26903 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:59.803784 26903 net.cpp:382] loss -> loss
I0428 19:49:59.803791 26903 layer_factory.hpp:77] Creating layer loss
I0428 19:49:59.804050 26903 net.cpp:124] Setting up loss
I0428 19:49:59.804059 26903 net.cpp:131] Top shape: (1)
I0428 19:49:59.804061 26903 net.cpp:134]     with loss weight 1
I0428 19:49:59.804067 26903 net.cpp:139] Memory required for data: 2110808
I0428 19:49:59.804070 26903 net.cpp:200] loss needs backward computation.
I0428 19:49:59.804074 26903 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:59.804076 26903 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:49:59.804080 26903 net.cpp:200] relu2 needs backward computation.
I0428 19:49:59.804081 26903 net.cpp:200] ip2 needs backward computation.
I0428 19:49:59.804085 26903 net.cpp:200] relu1 needs backward computation.
I0428 19:49:59.804093 26903 net.cpp:200] ip1 needs backward computation.
I0428 19:49:59.804095 26903 net.cpp:200] pool1 needs backward computation.
I0428 19:49:59.804098 26903 net.cpp:200] conv1 needs backward computation.
I0428 19:49:59.804106 26903 net.cpp:200] pool0 needs backward computation.
I0428 19:49:59.804110 26903 net.cpp:200] conv0 needs backward computation.
I0428 19:49:59.804112 26903 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:59.804116 26903 net.cpp:202] mnist does not need backward computation.
I0428 19:49:59.804118 26903 net.cpp:244] This network produces output accuracy
I0428 19:49:59.804127 26903 net.cpp:244] This network produces output loss
I0428 19:49:59.804137 26903 net.cpp:257] Network initialization done.
I0428 19:49:59.804170 26903 solver.cpp:56] Solver scaffolding done.
I0428 19:49:59.804440 26903 caffe.cpp:248] Starting Optimization
I0428 19:49:59.804446 26903 solver.cpp:273] Solving LeNet
I0428 19:49:59.804450 26903 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:59.804600 26903 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:59.807777 26903 blocking_queue.cpp:49] Waiting for data
I0428 19:49:59.880282 26910 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:59.880889 26903 solver.cpp:398]     Test net output #0: accuracy = 0.0733
I0428 19:49:59.880934 26903 solver.cpp:398]     Test net output #1: loss = 2.34112 (* 1 = 2.34112 loss)
I0428 19:49:59.883080 26903 solver.cpp:219] Iteration 0 (0 iter/s, 0.0786074s/100 iters), loss = 2.34198
I0428 19:49:59.883103 26903 solver.cpp:238]     Train net output #0: loss = 2.34198 (* 1 = 2.34198 loss)
I0428 19:49:59.883117 26903 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:59.964068 26903 solver.cpp:219] Iteration 100 (1235.34 iter/s, 0.0809494s/100 iters), loss = 0.410004
I0428 19:49:59.964093 26903 solver.cpp:238]     Train net output #0: loss = 0.410004 (* 1 = 0.410004 loss)
I0428 19:49:59.964099 26903 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:00.033509 26903 solver.cpp:219] Iteration 200 (1440.85 iter/s, 0.0694036s/100 iters), loss = 0.277698
I0428 19:50:00.033560 26903 solver.cpp:238]     Train net output #0: loss = 0.277698 (* 1 = 0.277698 loss)
I0428 19:50:00.033566 26903 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:00.115674 26903 solver.cpp:219] Iteration 300 (1217.72 iter/s, 0.0821207s/100 iters), loss = 0.240775
I0428 19:50:00.115712 26903 solver.cpp:238]     Train net output #0: loss = 0.240775 (* 1 = 0.240775 loss)
I0428 19:50:00.115718 26903 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:00.188920 26903 solver.cpp:219] Iteration 400 (1365.9 iter/s, 0.0732119s/100 iters), loss = 0.143322
I0428 19:50:00.188958 26903 solver.cpp:238]     Train net output #0: loss = 0.143322 (* 1 = 0.143322 loss)
I0428 19:50:00.188966 26903 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:00.269057 26903 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:00.344440 26910 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:00.345068 26903 solver.cpp:398]     Test net output #0: accuracy = 0.939
I0428 19:50:00.345099 26903 solver.cpp:398]     Test net output #1: loss = 0.193464 (* 1 = 0.193464 loss)
I0428 19:50:00.346134 26903 solver.cpp:219] Iteration 500 (636.23 iter/s, 0.157176s/100 iters), loss = 0.320741
I0428 19:50:00.346179 26903 solver.cpp:238]     Train net output #0: loss = 0.320741 (* 1 = 0.320741 loss)
I0428 19:50:00.346190 26903 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:00.428180 26903 solver.cpp:219] Iteration 600 (1219.61 iter/s, 0.0819935s/100 iters), loss = 0.0797331
I0428 19:50:00.428227 26903 solver.cpp:238]     Train net output #0: loss = 0.079733 (* 1 = 0.079733 loss)
I0428 19:50:00.428234 26903 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:00.498258 26903 solver.cpp:219] Iteration 700 (1427.79 iter/s, 0.0700385s/100 iters), loss = 0.285029
I0428 19:50:00.498301 26903 solver.cpp:238]     Train net output #0: loss = 0.285029 (* 1 = 0.285029 loss)
I0428 19:50:00.498322 26903 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:00.574178 26903 solver.cpp:219] Iteration 800 (1318.06 iter/s, 0.0758692s/100 iters), loss = 0.32411
I0428 19:50:00.574218 26903 solver.cpp:238]     Train net output #0: loss = 0.32411 (* 1 = 0.32411 loss)
I0428 19:50:00.574229 26903 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:00.646469 26903 solver.cpp:219] Iteration 900 (1384.23 iter/s, 0.0722422s/100 iters), loss = 0.327284
I0428 19:50:00.646508 26903 solver.cpp:238]     Train net output #0: loss = 0.327284 (* 1 = 0.327284 loss)
I0428 19:50:00.646514 26903 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:00.669653 26909 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:00.713994 26903 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:00.714834 26903 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:00.715517 26903 solver.cpp:311] Iteration 1000, loss = 0.202218
I0428 19:50:00.715534 26903 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:00.790292 26910 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:00.791191 26903 solver.cpp:398]     Test net output #0: accuracy = 0.9683
I0428 19:50:00.791230 26903 solver.cpp:398]     Test net output #1: loss = 0.0983948 (* 1 = 0.0983948 loss)
I0428 19:50:00.791249 26903 solver.cpp:316] Optimization Done.
I0428 19:50:00.791257 26903 caffe.cpp:259] Optimization Done.
