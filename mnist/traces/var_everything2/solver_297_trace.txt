I0428 19:39:12.175994 24239 caffe.cpp:218] Using GPUs 0
I0428 19:39:12.215927 24239 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:12.730092 24239 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test297.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:12.730275 24239 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test297.prototxt
I0428 19:39:12.730700 24239 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:12.730726 24239 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:12.730841 24239 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:12.730958 24239 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:12.731093 24239 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:12.731128 24239 net.cpp:86] Creating Layer mnist
I0428 19:39:12.731142 24239 net.cpp:382] mnist -> data
I0428 19:39:12.731171 24239 net.cpp:382] mnist -> label
I0428 19:39:12.732442 24239 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:12.734916 24239 net.cpp:124] Setting up mnist
I0428 19:39:12.734937 24239 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:12.734951 24239 net.cpp:131] Top shape: 64 (64)
I0428 19:39:12.734956 24239 net.cpp:139] Memory required for data: 200960
I0428 19:39:12.734967 24239 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:12.734989 24239 net.cpp:86] Creating Layer conv0
I0428 19:39:12.735013 24239 net.cpp:408] conv0 <- data
I0428 19:39:12.735035 24239 net.cpp:382] conv0 -> conv0
I0428 19:39:13.020422 24239 net.cpp:124] Setting up conv0
I0428 19:39:13.020452 24239 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:13.020458 24239 net.cpp:139] Memory required for data: 495872
I0428 19:39:13.020480 24239 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:13.020498 24239 net.cpp:86] Creating Layer pool0
I0428 19:39:13.020512 24239 net.cpp:408] pool0 <- conv0
I0428 19:39:13.020522 24239 net.cpp:382] pool0 -> pool0
I0428 19:39:13.020581 24239 net.cpp:124] Setting up pool0
I0428 19:39:13.020591 24239 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:13.020596 24239 net.cpp:139] Memory required for data: 569600
I0428 19:39:13.020601 24239 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:13.020617 24239 net.cpp:86] Creating Layer conv1
I0428 19:39:13.020624 24239 net.cpp:408] conv1 <- pool0
I0428 19:39:13.020633 24239 net.cpp:382] conv1 -> conv1
I0428 19:39:13.022445 24239 net.cpp:124] Setting up conv1
I0428 19:39:13.022462 24239 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:13.022467 24239 net.cpp:139] Memory required for data: 602368
I0428 19:39:13.022480 24239 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:13.022491 24239 net.cpp:86] Creating Layer pool1
I0428 19:39:13.022497 24239 net.cpp:408] pool1 <- conv1
I0428 19:39:13.022505 24239 net.cpp:382] pool1 -> pool1
I0428 19:39:13.022549 24239 net.cpp:124] Setting up pool1
I0428 19:39:13.022558 24239 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:13.022563 24239 net.cpp:139] Memory required for data: 610560
I0428 19:39:13.022568 24239 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:13.022579 24239 net.cpp:86] Creating Layer ip1
I0428 19:39:13.022584 24239 net.cpp:408] ip1 <- pool1
I0428 19:39:13.022593 24239 net.cpp:382] ip1 -> ip1
I0428 19:39:13.022706 24239 net.cpp:124] Setting up ip1
I0428 19:39:13.022716 24239 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:13.022720 24239 net.cpp:139] Memory required for data: 616960
I0428 19:39:13.022732 24239 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:13.022744 24239 net.cpp:86] Creating Layer relu1
I0428 19:39:13.022752 24239 net.cpp:408] relu1 <- ip1
I0428 19:39:13.022759 24239 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:13.022924 24239 net.cpp:124] Setting up relu1
I0428 19:39:13.022935 24239 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:13.022941 24239 net.cpp:139] Memory required for data: 623360
I0428 19:39:13.022946 24239 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:13.022956 24239 net.cpp:86] Creating Layer ip2
I0428 19:39:13.022963 24239 net.cpp:408] ip2 <- ip1
I0428 19:39:13.022970 24239 net.cpp:382] ip2 -> ip2
I0428 19:39:13.023072 24239 net.cpp:124] Setting up ip2
I0428 19:39:13.023082 24239 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:13.023087 24239 net.cpp:139] Memory required for data: 629760
I0428 19:39:13.023095 24239 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:13.023105 24239 net.cpp:86] Creating Layer relu2
I0428 19:39:13.023110 24239 net.cpp:408] relu2 <- ip2
I0428 19:39:13.023118 24239 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:13.023861 24239 net.cpp:124] Setting up relu2
I0428 19:39:13.023875 24239 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:13.023880 24239 net.cpp:139] Memory required for data: 636160
I0428 19:39:13.023886 24239 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:13.023896 24239 net.cpp:86] Creating Layer ip3
I0428 19:39:13.023902 24239 net.cpp:408] ip3 <- ip2
I0428 19:39:13.023911 24239 net.cpp:382] ip3 -> ip3
I0428 19:39:13.024015 24239 net.cpp:124] Setting up ip3
I0428 19:39:13.024025 24239 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:13.024030 24239 net.cpp:139] Memory required for data: 638720
I0428 19:39:13.024044 24239 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:13.024052 24239 net.cpp:86] Creating Layer relu3
I0428 19:39:13.024058 24239 net.cpp:408] relu3 <- ip3
I0428 19:39:13.024066 24239 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:13.024235 24239 net.cpp:124] Setting up relu3
I0428 19:39:13.024245 24239 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:13.024250 24239 net.cpp:139] Memory required for data: 641280
I0428 19:39:13.024255 24239 layer_factory.hpp:77] Creating layer loss
I0428 19:39:13.024263 24239 net.cpp:86] Creating Layer loss
I0428 19:39:13.024269 24239 net.cpp:408] loss <- ip3
I0428 19:39:13.024276 24239 net.cpp:408] loss <- label
I0428 19:39:13.024284 24239 net.cpp:382] loss -> loss
I0428 19:39:13.024303 24239 layer_factory.hpp:77] Creating layer loss
I0428 19:39:13.024564 24239 net.cpp:124] Setting up loss
I0428 19:39:13.024574 24239 net.cpp:131] Top shape: (1)
I0428 19:39:13.024580 24239 net.cpp:134]     with loss weight 1
I0428 19:39:13.024600 24239 net.cpp:139] Memory required for data: 641284
I0428 19:39:13.024605 24239 net.cpp:200] loss needs backward computation.
I0428 19:39:13.024611 24239 net.cpp:200] relu3 needs backward computation.
I0428 19:39:13.024616 24239 net.cpp:200] ip3 needs backward computation.
I0428 19:39:13.024621 24239 net.cpp:200] relu2 needs backward computation.
I0428 19:39:13.024626 24239 net.cpp:200] ip2 needs backward computation.
I0428 19:39:13.024631 24239 net.cpp:200] relu1 needs backward computation.
I0428 19:39:13.024636 24239 net.cpp:200] ip1 needs backward computation.
I0428 19:39:13.024641 24239 net.cpp:200] pool1 needs backward computation.
I0428 19:39:13.024646 24239 net.cpp:200] conv1 needs backward computation.
I0428 19:39:13.024652 24239 net.cpp:200] pool0 needs backward computation.
I0428 19:39:13.024657 24239 net.cpp:200] conv0 needs backward computation.
I0428 19:39:13.024662 24239 net.cpp:202] mnist does not need backward computation.
I0428 19:39:13.024667 24239 net.cpp:244] This network produces output loss
I0428 19:39:13.024682 24239 net.cpp:257] Network initialization done.
I0428 19:39:13.025065 24239 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test297.prototxt
I0428 19:39:13.025115 24239 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:13.025213 24239 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:13.025324 24239 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:13.025383 24239 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:13.025401 24239 net.cpp:86] Creating Layer mnist
I0428 19:39:13.025409 24239 net.cpp:382] mnist -> data
I0428 19:39:13.025421 24239 net.cpp:382] mnist -> label
I0428 19:39:13.025540 24239 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:13.027731 24239 net.cpp:124] Setting up mnist
I0428 19:39:13.027746 24239 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:13.027755 24239 net.cpp:131] Top shape: 100 (100)
I0428 19:39:13.027760 24239 net.cpp:139] Memory required for data: 314000
I0428 19:39:13.027766 24239 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:13.027776 24239 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:13.027781 24239 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:13.027789 24239 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:13.027801 24239 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:13.027900 24239 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:13.027910 24239 net.cpp:131] Top shape: 100 (100)
I0428 19:39:13.027916 24239 net.cpp:131] Top shape: 100 (100)
I0428 19:39:13.027921 24239 net.cpp:139] Memory required for data: 314800
I0428 19:39:13.027926 24239 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:13.027940 24239 net.cpp:86] Creating Layer conv0
I0428 19:39:13.027947 24239 net.cpp:408] conv0 <- data
I0428 19:39:13.027959 24239 net.cpp:382] conv0 -> conv0
I0428 19:39:13.029614 24239 net.cpp:124] Setting up conv0
I0428 19:39:13.029630 24239 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:13.029636 24239 net.cpp:139] Memory required for data: 775600
I0428 19:39:13.029654 24239 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:13.029664 24239 net.cpp:86] Creating Layer pool0
I0428 19:39:13.029671 24239 net.cpp:408] pool0 <- conv0
I0428 19:39:13.029678 24239 net.cpp:382] pool0 -> pool0
I0428 19:39:13.029723 24239 net.cpp:124] Setting up pool0
I0428 19:39:13.029732 24239 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:13.029737 24239 net.cpp:139] Memory required for data: 890800
I0428 19:39:13.029742 24239 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:13.029772 24239 net.cpp:86] Creating Layer conv1
I0428 19:39:13.029779 24239 net.cpp:408] conv1 <- pool0
I0428 19:39:13.029790 24239 net.cpp:382] conv1 -> conv1
I0428 19:39:13.031347 24239 net.cpp:124] Setting up conv1
I0428 19:39:13.031363 24239 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:13.031368 24239 net.cpp:139] Memory required for data: 942000
I0428 19:39:13.031380 24239 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:13.031393 24239 net.cpp:86] Creating Layer pool1
I0428 19:39:13.031399 24239 net.cpp:408] pool1 <- conv1
I0428 19:39:13.031409 24239 net.cpp:382] pool1 -> pool1
I0428 19:39:13.031452 24239 net.cpp:124] Setting up pool1
I0428 19:39:13.031461 24239 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:13.031466 24239 net.cpp:139] Memory required for data: 954800
I0428 19:39:13.031471 24239 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:13.031482 24239 net.cpp:86] Creating Layer ip1
I0428 19:39:13.031491 24239 net.cpp:408] ip1 <- pool1
I0428 19:39:13.031499 24239 net.cpp:382] ip1 -> ip1
I0428 19:39:13.031611 24239 net.cpp:124] Setting up ip1
I0428 19:39:13.031620 24239 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:13.031637 24239 net.cpp:139] Memory required for data: 964800
I0428 19:39:13.031651 24239 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:13.031661 24239 net.cpp:86] Creating Layer relu1
I0428 19:39:13.031668 24239 net.cpp:408] relu1 <- ip1
I0428 19:39:13.031677 24239 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:13.031843 24239 net.cpp:124] Setting up relu1
I0428 19:39:13.031853 24239 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:13.031858 24239 net.cpp:139] Memory required for data: 974800
I0428 19:39:13.031863 24239 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:13.031877 24239 net.cpp:86] Creating Layer ip2
I0428 19:39:13.031883 24239 net.cpp:408] ip2 <- ip1
I0428 19:39:13.031893 24239 net.cpp:382] ip2 -> ip2
I0428 19:39:13.032003 24239 net.cpp:124] Setting up ip2
I0428 19:39:13.032012 24239 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:13.032017 24239 net.cpp:139] Memory required for data: 984800
I0428 19:39:13.032027 24239 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:13.032034 24239 net.cpp:86] Creating Layer relu2
I0428 19:39:13.032039 24239 net.cpp:408] relu2 <- ip2
I0428 19:39:13.032047 24239 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:13.032296 24239 net.cpp:124] Setting up relu2
I0428 19:39:13.032307 24239 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:13.032312 24239 net.cpp:139] Memory required for data: 994800
I0428 19:39:13.032317 24239 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:13.032326 24239 net.cpp:86] Creating Layer ip3
I0428 19:39:13.032335 24239 net.cpp:408] ip3 <- ip2
I0428 19:39:13.032344 24239 net.cpp:382] ip3 -> ip3
I0428 19:39:13.032451 24239 net.cpp:124] Setting up ip3
I0428 19:39:13.032459 24239 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:13.032464 24239 net.cpp:139] Memory required for data: 998800
I0428 19:39:13.032477 24239 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:13.032485 24239 net.cpp:86] Creating Layer relu3
I0428 19:39:13.032491 24239 net.cpp:408] relu3 <- ip3
I0428 19:39:13.032500 24239 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:13.033388 24239 net.cpp:124] Setting up relu3
I0428 19:39:13.033402 24239 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:13.033407 24239 net.cpp:139] Memory required for data: 1002800
I0428 19:39:13.033412 24239 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:13.033421 24239 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:13.033426 24239 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:13.033435 24239 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:13.033445 24239 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:13.033517 24239 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:13.033525 24239 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:13.033532 24239 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:13.033536 24239 net.cpp:139] Memory required for data: 1010800
I0428 19:39:13.033541 24239 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:13.033551 24239 net.cpp:86] Creating Layer accuracy
I0428 19:39:13.033565 24239 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:13.033572 24239 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:13.033581 24239 net.cpp:382] accuracy -> accuracy
I0428 19:39:13.033593 24239 net.cpp:124] Setting up accuracy
I0428 19:39:13.033601 24239 net.cpp:131] Top shape: (1)
I0428 19:39:13.033605 24239 net.cpp:139] Memory required for data: 1010804
I0428 19:39:13.033612 24239 layer_factory.hpp:77] Creating layer loss
I0428 19:39:13.033619 24239 net.cpp:86] Creating Layer loss
I0428 19:39:13.033624 24239 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:13.033632 24239 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:13.033638 24239 net.cpp:382] loss -> loss
I0428 19:39:13.033648 24239 layer_factory.hpp:77] Creating layer loss
I0428 19:39:13.033895 24239 net.cpp:124] Setting up loss
I0428 19:39:13.033906 24239 net.cpp:131] Top shape: (1)
I0428 19:39:13.033911 24239 net.cpp:134]     with loss weight 1
I0428 19:39:13.033921 24239 net.cpp:139] Memory required for data: 1010808
I0428 19:39:13.033938 24239 net.cpp:200] loss needs backward computation.
I0428 19:39:13.033944 24239 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:13.033951 24239 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:13.033957 24239 net.cpp:200] relu3 needs backward computation.
I0428 19:39:13.033962 24239 net.cpp:200] ip3 needs backward computation.
I0428 19:39:13.033967 24239 net.cpp:200] relu2 needs backward computation.
I0428 19:39:13.033972 24239 net.cpp:200] ip2 needs backward computation.
I0428 19:39:13.033975 24239 net.cpp:200] relu1 needs backward computation.
I0428 19:39:13.033980 24239 net.cpp:200] ip1 needs backward computation.
I0428 19:39:13.033987 24239 net.cpp:200] pool1 needs backward computation.
I0428 19:39:13.033991 24239 net.cpp:200] conv1 needs backward computation.
I0428 19:39:13.033996 24239 net.cpp:200] pool0 needs backward computation.
I0428 19:39:13.034001 24239 net.cpp:200] conv0 needs backward computation.
I0428 19:39:13.034008 24239 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:13.034014 24239 net.cpp:202] mnist does not need backward computation.
I0428 19:39:13.034018 24239 net.cpp:244] This network produces output accuracy
I0428 19:39:13.034025 24239 net.cpp:244] This network produces output loss
I0428 19:39:13.034042 24239 net.cpp:257] Network initialization done.
I0428 19:39:13.034091 24239 solver.cpp:56] Solver scaffolding done.
I0428 19:39:13.034523 24239 caffe.cpp:248] Starting Optimization
I0428 19:39:13.034531 24239 solver.cpp:273] Solving LeNet
I0428 19:39:13.034551 24239 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:13.035439 24239 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:13.037952 24239 blocking_queue.cpp:49] Waiting for data
I0428 19:39:13.110494 24246 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:13.111114 24239 solver.cpp:398]     Test net output #0: accuracy = 0.0706
I0428 19:39:13.111152 24239 solver.cpp:398]     Test net output #1: loss = 2.31447 (* 1 = 2.31447 loss)
I0428 19:39:13.113982 24239 solver.cpp:219] Iteration 0 (-2.98989e-31 iter/s, 0.0793896s/100 iters), loss = 2.31304
I0428 19:39:13.114023 24239 solver.cpp:238]     Train net output #0: loss = 2.31304 (* 1 = 2.31304 loss)
I0428 19:39:13.114053 24239 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:13.199676 24239 solver.cpp:219] Iteration 100 (1167.68 iter/s, 0.0856402s/100 iters), loss = 2.24883
I0428 19:39:13.199707 24239 solver.cpp:238]     Train net output #0: loss = 2.24883 (* 1 = 2.24883 loss)
I0428 19:39:13.199715 24239 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:13.276451 24239 solver.cpp:219] Iteration 200 (1303.25 iter/s, 0.0767314s/100 iters), loss = 1.39462
I0428 19:39:13.276482 24239 solver.cpp:238]     Train net output #0: loss = 1.39462 (* 1 = 1.39462 loss)
I0428 19:39:13.276490 24239 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:13.351054 24239 solver.cpp:219] Iteration 300 (1341.16 iter/s, 0.0745626s/100 iters), loss = 0.870214
I0428 19:39:13.351084 24239 solver.cpp:238]     Train net output #0: loss = 0.870214 (* 1 = 0.870214 loss)
I0428 19:39:13.351092 24239 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:13.424881 24239 solver.cpp:219] Iteration 400 (1355.26 iter/s, 0.0737864s/100 iters), loss = 0.57577
I0428 19:39:13.424911 24239 solver.cpp:238]     Train net output #0: loss = 0.57577 (* 1 = 0.57577 loss)
I0428 19:39:13.424918 24239 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:13.498060 24239 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:13.550631 24246 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:13.551092 24239 solver.cpp:398]     Test net output #0: accuracy = 0.8018
I0428 19:39:13.551115 24239 solver.cpp:398]     Test net output #1: loss = 0.567582 (* 1 = 0.567582 loss)
I0428 19:39:13.551900 24239 solver.cpp:219] Iteration 500 (787.538 iter/s, 0.126978s/100 iters), loss = 0.570439
I0428 19:39:13.551928 24239 solver.cpp:238]     Train net output #0: loss = 0.570439 (* 1 = 0.570439 loss)
I0428 19:39:13.551954 24239 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:13.629364 24239 solver.cpp:219] Iteration 600 (1291.53 iter/s, 0.0774276s/100 iters), loss = 0.544536
I0428 19:39:13.629395 24239 solver.cpp:238]     Train net output #0: loss = 0.544536 (* 1 = 0.544536 loss)
I0428 19:39:13.629401 24239 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:13.703430 24239 solver.cpp:219] Iteration 700 (1350.86 iter/s, 0.0740271s/100 iters), loss = 0.607433
I0428 19:39:13.703460 24239 solver.cpp:238]     Train net output #0: loss = 0.607433 (* 1 = 0.607433 loss)
I0428 19:39:13.703469 24239 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:13.777065 24239 solver.cpp:219] Iteration 800 (1358.79 iter/s, 0.0735949s/100 iters), loss = 0.610749
I0428 19:39:13.777094 24239 solver.cpp:238]     Train net output #0: loss = 0.610749 (* 1 = 0.610749 loss)
I0428 19:39:13.777101 24239 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:13.850339 24239 solver.cpp:219] Iteration 900 (1365.42 iter/s, 0.0732375s/100 iters), loss = 0.674629
I0428 19:39:13.850369 24239 solver.cpp:238]     Train net output #0: loss = 0.674629 (* 1 = 0.674629 loss)
I0428 19:39:13.850375 24239 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:13.873643 24245 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:13.918402 24239 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:13.919045 24239 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:13.919486 24239 solver.cpp:311] Iteration 1000, loss = 0.528275
I0428 19:39:13.919500 24239 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:13.993970 24246 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:13.994433 24239 solver.cpp:398]     Test net output #0: accuracy = 0.8313
I0428 19:39:13.994454 24239 solver.cpp:398]     Test net output #1: loss = 0.463404 (* 1 = 0.463404 loss)
I0428 19:39:13.994477 24239 solver.cpp:316] Optimization Done.
I0428 19:39:13.994498 24239 caffe.cpp:259] Optimization Done.
