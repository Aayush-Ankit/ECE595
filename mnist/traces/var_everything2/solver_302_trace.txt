I0428 19:39:22.206810 24280 caffe.cpp:218] Using GPUs 0
I0428 19:39:22.246147 24280 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:22.701550 24280 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test302.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:22.701686 24280 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test302.prototxt
I0428 19:39:22.702041 24280 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:22.702059 24280 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:22.702172 24280 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:22.702252 24280 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:22.702388 24280 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:22.702414 24280 net.cpp:86] Creating Layer mnist
I0428 19:39:22.702424 24280 net.cpp:382] mnist -> data
I0428 19:39:22.702450 24280 net.cpp:382] mnist -> label
I0428 19:39:22.703552 24280 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:22.705771 24280 net.cpp:124] Setting up mnist
I0428 19:39:22.705804 24280 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:22.705813 24280 net.cpp:131] Top shape: 64 (64)
I0428 19:39:22.705818 24280 net.cpp:139] Memory required for data: 200960
I0428 19:39:22.705828 24280 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:22.705860 24280 net.cpp:86] Creating Layer conv0
I0428 19:39:22.705894 24280 net.cpp:408] conv0 <- data
I0428 19:39:22.705909 24280 net.cpp:382] conv0 -> conv0
I0428 19:39:22.945010 24280 net.cpp:124] Setting up conv0
I0428 19:39:22.945039 24280 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:22.945044 24280 net.cpp:139] Memory required for data: 495872
I0428 19:39:22.945080 24280 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:22.945101 24280 net.cpp:86] Creating Layer pool0
I0428 19:39:22.945113 24280 net.cpp:408] pool0 <- conv0
I0428 19:39:22.945123 24280 net.cpp:382] pool0 -> pool0
I0428 19:39:22.945199 24280 net.cpp:124] Setting up pool0
I0428 19:39:22.945207 24280 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:22.945212 24280 net.cpp:139] Memory required for data: 569600
I0428 19:39:22.945216 24280 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:22.945233 24280 net.cpp:86] Creating Layer conv1
I0428 19:39:22.945240 24280 net.cpp:408] conv1 <- pool0
I0428 19:39:22.945248 24280 net.cpp:382] conv1 -> conv1
I0428 19:39:22.947214 24280 net.cpp:124] Setting up conv1
I0428 19:39:22.947245 24280 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:22.947252 24280 net.cpp:139] Memory required for data: 602368
I0428 19:39:22.947283 24280 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:22.947294 24280 net.cpp:86] Creating Layer pool1
I0428 19:39:22.947306 24280 net.cpp:408] pool1 <- conv1
I0428 19:39:22.947316 24280 net.cpp:382] pool1 -> pool1
I0428 19:39:22.947365 24280 net.cpp:124] Setting up pool1
I0428 19:39:22.947374 24280 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:22.947379 24280 net.cpp:139] Memory required for data: 610560
I0428 19:39:22.947384 24280 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:22.947399 24280 net.cpp:86] Creating Layer ip1
I0428 19:39:22.947407 24280 net.cpp:408] ip1 <- pool1
I0428 19:39:22.947417 24280 net.cpp:382] ip1 -> ip1
I0428 19:39:22.947530 24280 net.cpp:124] Setting up ip1
I0428 19:39:22.947540 24280 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:22.947545 24280 net.cpp:139] Memory required for data: 616960
I0428 19:39:22.947572 24280 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:22.947584 24280 net.cpp:86] Creating Layer relu1
I0428 19:39:22.947592 24280 net.cpp:408] relu1 <- ip1
I0428 19:39:22.947599 24280 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:22.947789 24280 net.cpp:124] Setting up relu1
I0428 19:39:22.947800 24280 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:22.947805 24280 net.cpp:139] Memory required for data: 623360
I0428 19:39:22.947810 24280 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:22.947821 24280 net.cpp:86] Creating Layer ip2
I0428 19:39:22.947827 24280 net.cpp:408] ip2 <- ip1
I0428 19:39:22.947852 24280 net.cpp:382] ip2 -> ip2
I0428 19:39:22.948904 24280 net.cpp:124] Setting up ip2
I0428 19:39:22.948918 24280 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:22.948925 24280 net.cpp:139] Memory required for data: 636160
I0428 19:39:22.948936 24280 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:22.948947 24280 net.cpp:86] Creating Layer relu2
I0428 19:39:22.948953 24280 net.cpp:408] relu2 <- ip2
I0428 19:39:22.948961 24280 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:22.949791 24280 net.cpp:124] Setting up relu2
I0428 19:39:22.949806 24280 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:22.949812 24280 net.cpp:139] Memory required for data: 648960
I0428 19:39:22.949818 24280 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:22.949831 24280 net.cpp:86] Creating Layer ip3
I0428 19:39:22.949838 24280 net.cpp:408] ip3 <- ip2
I0428 19:39:22.949862 24280 net.cpp:382] ip3 -> ip3
I0428 19:39:22.949982 24280 net.cpp:124] Setting up ip3
I0428 19:39:22.949992 24280 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:22.949997 24280 net.cpp:139] Memory required for data: 651520
I0428 19:39:22.950009 24280 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:22.950019 24280 net.cpp:86] Creating Layer relu3
I0428 19:39:22.950024 24280 net.cpp:408] relu3 <- ip3
I0428 19:39:22.950033 24280 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:22.950242 24280 net.cpp:124] Setting up relu3
I0428 19:39:22.950253 24280 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:22.950258 24280 net.cpp:139] Memory required for data: 654080
I0428 19:39:22.950263 24280 layer_factory.hpp:77] Creating layer loss
I0428 19:39:22.950273 24280 net.cpp:86] Creating Layer loss
I0428 19:39:22.950278 24280 net.cpp:408] loss <- ip3
I0428 19:39:22.950284 24280 net.cpp:408] loss <- label
I0428 19:39:22.950294 24280 net.cpp:382] loss -> loss
I0428 19:39:22.950316 24280 layer_factory.hpp:77] Creating layer loss
I0428 19:39:22.950574 24280 net.cpp:124] Setting up loss
I0428 19:39:22.950585 24280 net.cpp:131] Top shape: (1)
I0428 19:39:22.950590 24280 net.cpp:134]     with loss weight 1
I0428 19:39:22.950611 24280 net.cpp:139] Memory required for data: 654084
I0428 19:39:22.950618 24280 net.cpp:200] loss needs backward computation.
I0428 19:39:22.950623 24280 net.cpp:200] relu3 needs backward computation.
I0428 19:39:22.950628 24280 net.cpp:200] ip3 needs backward computation.
I0428 19:39:22.950634 24280 net.cpp:200] relu2 needs backward computation.
I0428 19:39:22.950637 24280 net.cpp:200] ip2 needs backward computation.
I0428 19:39:22.950642 24280 net.cpp:200] relu1 needs backward computation.
I0428 19:39:22.950647 24280 net.cpp:200] ip1 needs backward computation.
I0428 19:39:22.950652 24280 net.cpp:200] pool1 needs backward computation.
I0428 19:39:22.950657 24280 net.cpp:200] conv1 needs backward computation.
I0428 19:39:22.950664 24280 net.cpp:200] pool0 needs backward computation.
I0428 19:39:22.950669 24280 net.cpp:200] conv0 needs backward computation.
I0428 19:39:22.950675 24280 net.cpp:202] mnist does not need backward computation.
I0428 19:39:22.950680 24280 net.cpp:244] This network produces output loss
I0428 19:39:22.950695 24280 net.cpp:257] Network initialization done.
I0428 19:39:22.951050 24280 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test302.prototxt
I0428 19:39:22.951086 24280 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:22.951207 24280 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:22.951333 24280 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:22.951392 24280 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:22.951411 24280 net.cpp:86] Creating Layer mnist
I0428 19:39:22.951418 24280 net.cpp:382] mnist -> data
I0428 19:39:22.951431 24280 net.cpp:382] mnist -> label
I0428 19:39:22.951567 24280 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:22.953788 24280 net.cpp:124] Setting up mnist
I0428 19:39:22.953802 24280 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:22.953810 24280 net.cpp:131] Top shape: 100 (100)
I0428 19:39:22.953815 24280 net.cpp:139] Memory required for data: 314000
I0428 19:39:22.953820 24280 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:22.953835 24280 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:22.953840 24280 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:22.953848 24280 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:22.953860 24280 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:22.953920 24280 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:22.953928 24280 net.cpp:131] Top shape: 100 (100)
I0428 19:39:22.953935 24280 net.cpp:131] Top shape: 100 (100)
I0428 19:39:22.953939 24280 net.cpp:139] Memory required for data: 314800
I0428 19:39:22.953944 24280 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:22.953960 24280 net.cpp:86] Creating Layer conv0
I0428 19:39:22.953982 24280 net.cpp:408] conv0 <- data
I0428 19:39:22.953992 24280 net.cpp:382] conv0 -> conv0
I0428 19:39:22.955755 24280 net.cpp:124] Setting up conv0
I0428 19:39:22.955770 24280 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:22.955776 24280 net.cpp:139] Memory required for data: 775600
I0428 19:39:22.955808 24280 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:22.955818 24280 net.cpp:86] Creating Layer pool0
I0428 19:39:22.955826 24280 net.cpp:408] pool0 <- conv0
I0428 19:39:22.955835 24280 net.cpp:382] pool0 -> pool0
I0428 19:39:22.955880 24280 net.cpp:124] Setting up pool0
I0428 19:39:22.955890 24280 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:22.955896 24280 net.cpp:139] Memory required for data: 890800
I0428 19:39:22.955900 24280 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:22.955915 24280 net.cpp:86] Creating Layer conv1
I0428 19:39:22.955922 24280 net.cpp:408] conv1 <- pool0
I0428 19:39:22.955931 24280 net.cpp:382] conv1 -> conv1
I0428 19:39:22.957600 24280 net.cpp:124] Setting up conv1
I0428 19:39:22.957617 24280 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:22.957623 24280 net.cpp:139] Memory required for data: 942000
I0428 19:39:22.957635 24280 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:22.957645 24280 net.cpp:86] Creating Layer pool1
I0428 19:39:22.957653 24280 net.cpp:408] pool1 <- conv1
I0428 19:39:22.957664 24280 net.cpp:382] pool1 -> pool1
I0428 19:39:22.957715 24280 net.cpp:124] Setting up pool1
I0428 19:39:22.957726 24280 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:22.957731 24280 net.cpp:139] Memory required for data: 954800
I0428 19:39:22.957736 24280 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:22.957762 24280 net.cpp:86] Creating Layer ip1
I0428 19:39:22.957767 24280 net.cpp:408] ip1 <- pool1
I0428 19:39:22.957778 24280 net.cpp:382] ip1 -> ip1
I0428 19:39:22.957900 24280 net.cpp:124] Setting up ip1
I0428 19:39:22.957909 24280 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:22.957926 24280 net.cpp:139] Memory required for data: 964800
I0428 19:39:22.957939 24280 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:22.957948 24280 net.cpp:86] Creating Layer relu1
I0428 19:39:22.957955 24280 net.cpp:408] relu1 <- ip1
I0428 19:39:22.957964 24280 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:22.958147 24280 net.cpp:124] Setting up relu1
I0428 19:39:22.958156 24280 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:22.958161 24280 net.cpp:139] Memory required for data: 974800
I0428 19:39:22.958168 24280 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:22.958179 24280 net.cpp:86] Creating Layer ip2
I0428 19:39:22.958187 24280 net.cpp:408] ip2 <- ip1
I0428 19:39:22.958196 24280 net.cpp:382] ip2 -> ip2
I0428 19:39:22.958324 24280 net.cpp:124] Setting up ip2
I0428 19:39:22.958348 24280 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:22.958353 24280 net.cpp:139] Memory required for data: 994800
I0428 19:39:22.958362 24280 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:22.958374 24280 net.cpp:86] Creating Layer relu2
I0428 19:39:22.958379 24280 net.cpp:408] relu2 <- ip2
I0428 19:39:22.958385 24280 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:22.958655 24280 net.cpp:124] Setting up relu2
I0428 19:39:22.958667 24280 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:22.958673 24280 net.cpp:139] Memory required for data: 1014800
I0428 19:39:22.958678 24280 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:22.958689 24280 net.cpp:86] Creating Layer ip3
I0428 19:39:22.958696 24280 net.cpp:408] ip3 <- ip2
I0428 19:39:22.958704 24280 net.cpp:382] ip3 -> ip3
I0428 19:39:22.958824 24280 net.cpp:124] Setting up ip3
I0428 19:39:22.958834 24280 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:22.958853 24280 net.cpp:139] Memory required for data: 1018800
I0428 19:39:22.958866 24280 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:22.958878 24280 net.cpp:86] Creating Layer relu3
I0428 19:39:22.958884 24280 net.cpp:408] relu3 <- ip3
I0428 19:39:22.958896 24280 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:22.959822 24280 net.cpp:124] Setting up relu3
I0428 19:39:22.959838 24280 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:22.959844 24280 net.cpp:139] Memory required for data: 1022800
I0428 19:39:22.959851 24280 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:22.959858 24280 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:22.959864 24280 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:22.959873 24280 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:22.959883 24280 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:22.959959 24280 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:22.959969 24280 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:22.959976 24280 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:22.959982 24280 net.cpp:139] Memory required for data: 1030800
I0428 19:39:22.959987 24280 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:22.959996 24280 net.cpp:86] Creating Layer accuracy
I0428 19:39:22.960002 24280 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:22.960026 24280 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:22.960033 24280 net.cpp:382] accuracy -> accuracy
I0428 19:39:22.960045 24280 net.cpp:124] Setting up accuracy
I0428 19:39:22.960053 24280 net.cpp:131] Top shape: (1)
I0428 19:39:22.960058 24280 net.cpp:139] Memory required for data: 1030804
I0428 19:39:22.960063 24280 layer_factory.hpp:77] Creating layer loss
I0428 19:39:22.960073 24280 net.cpp:86] Creating Layer loss
I0428 19:39:22.960079 24280 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:22.960086 24280 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:22.960093 24280 net.cpp:382] loss -> loss
I0428 19:39:22.960103 24280 layer_factory.hpp:77] Creating layer loss
I0428 19:39:22.960369 24280 net.cpp:124] Setting up loss
I0428 19:39:22.960381 24280 net.cpp:131] Top shape: (1)
I0428 19:39:22.960386 24280 net.cpp:134]     with loss weight 1
I0428 19:39:22.960394 24280 net.cpp:139] Memory required for data: 1030808
I0428 19:39:22.960409 24280 net.cpp:200] loss needs backward computation.
I0428 19:39:22.960415 24280 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:22.960422 24280 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:22.960427 24280 net.cpp:200] relu3 needs backward computation.
I0428 19:39:22.960431 24280 net.cpp:200] ip3 needs backward computation.
I0428 19:39:22.960436 24280 net.cpp:200] relu2 needs backward computation.
I0428 19:39:22.960441 24280 net.cpp:200] ip2 needs backward computation.
I0428 19:39:22.960446 24280 net.cpp:200] relu1 needs backward computation.
I0428 19:39:22.960451 24280 net.cpp:200] ip1 needs backward computation.
I0428 19:39:22.960456 24280 net.cpp:200] pool1 needs backward computation.
I0428 19:39:22.960461 24280 net.cpp:200] conv1 needs backward computation.
I0428 19:39:22.960466 24280 net.cpp:200] pool0 needs backward computation.
I0428 19:39:22.960471 24280 net.cpp:200] conv0 needs backward computation.
I0428 19:39:22.960477 24280 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:22.960484 24280 net.cpp:202] mnist does not need backward computation.
I0428 19:39:22.960487 24280 net.cpp:244] This network produces output accuracy
I0428 19:39:22.960494 24280 net.cpp:244] This network produces output loss
I0428 19:39:22.960510 24280 net.cpp:257] Network initialization done.
I0428 19:39:22.960558 24280 solver.cpp:56] Solver scaffolding done.
I0428 19:39:22.961055 24280 caffe.cpp:248] Starting Optimization
I0428 19:39:22.961062 24280 solver.cpp:273] Solving LeNet
I0428 19:39:22.961066 24280 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:22.961933 24280 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:22.964593 24280 blocking_queue.cpp:49] Waiting for data
I0428 19:39:23.037528 24288 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:23.037971 24280 solver.cpp:398]     Test net output #0: accuracy = 0.1146
I0428 19:39:23.037993 24280 solver.cpp:398]     Test net output #1: loss = 2.29906 (* 1 = 2.29906 loss)
I0428 19:39:23.039764 24280 solver.cpp:219] Iteration 0 (0 iter/s, 0.0786229s/100 iters), loss = 2.31201
I0428 19:39:23.039813 24280 solver.cpp:238]     Train net output #0: loss = 2.31201 (* 1 = 2.31201 loss)
I0428 19:39:23.039841 24280 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:23.107414 24280 solver.cpp:219] Iteration 100 (1479.13 iter/s, 0.0676075s/100 iters), loss = 1.33203
I0428 19:39:23.107441 24280 solver.cpp:238]     Train net output #0: loss = 1.33203 (* 1 = 1.33203 loss)
I0428 19:39:23.107466 24280 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:23.175179 24280 solver.cpp:219] Iteration 200 (1476.44 iter/s, 0.0677306s/100 iters), loss = 0.907017
I0428 19:39:23.175205 24280 solver.cpp:238]     Train net output #0: loss = 0.907017 (* 1 = 0.907017 loss)
I0428 19:39:23.175230 24280 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:23.243062 24280 solver.cpp:219] Iteration 300 (1473.81 iter/s, 0.0678513s/100 iters), loss = 0.70419
I0428 19:39:23.243089 24280 solver.cpp:238]     Train net output #0: loss = 0.70419 (* 1 = 0.70419 loss)
I0428 19:39:23.243114 24280 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:23.311015 24280 solver.cpp:219] Iteration 400 (1472.3 iter/s, 0.0679209s/100 iters), loss = 0.540025
I0428 19:39:23.311041 24280 solver.cpp:238]     Train net output #0: loss = 0.540025 (* 1 = 0.540025 loss)
I0428 19:39:23.311066 24280 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:23.378119 24280 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:23.430869 24288 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:23.431304 24280 solver.cpp:398]     Test net output #0: accuracy = 0.8333
I0428 19:39:23.431325 24280 solver.cpp:398]     Test net output #1: loss = 0.517226 (* 1 = 0.517226 loss)
I0428 19:39:23.432104 24280 solver.cpp:219] Iteration 500 (826.076 iter/s, 0.121054s/100 iters), loss = 0.613935
I0428 19:39:23.432132 24280 solver.cpp:238]     Train net output #0: loss = 0.613935 (* 1 = 0.613935 loss)
I0428 19:39:23.432158 24280 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:23.499508 24280 solver.cpp:219] Iteration 600 (1484.32 iter/s, 0.067371s/100 iters), loss = 0.389773
I0428 19:39:23.499534 24280 solver.cpp:238]     Train net output #0: loss = 0.389773 (* 1 = 0.389773 loss)
I0428 19:39:23.499560 24280 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:23.566727 24280 solver.cpp:219] Iteration 700 (1488.39 iter/s, 0.0671867s/100 iters), loss = 0.677101
I0428 19:39:23.566769 24280 solver.cpp:238]     Train net output #0: loss = 0.677101 (* 1 = 0.677101 loss)
I0428 19:39:23.566795 24280 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:23.633692 24280 solver.cpp:219] Iteration 800 (1494.06 iter/s, 0.0669315s/100 iters), loss = 0.529489
I0428 19:39:23.633719 24280 solver.cpp:238]     Train net output #0: loss = 0.529489 (* 1 = 0.529489 loss)
I0428 19:39:23.633744 24280 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:23.699954 24280 solver.cpp:219] Iteration 900 (1509.91 iter/s, 0.0662292s/100 iters), loss = 0.270431
I0428 19:39:23.699981 24280 solver.cpp:238]     Train net output #0: loss = 0.270432 (* 1 = 0.270432 loss)
I0428 19:39:23.700006 24280 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:23.722285 24287 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:23.766388 24280 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:23.767076 24280 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:23.767503 24280 solver.cpp:311] Iteration 1000, loss = 0.319928
I0428 19:39:23.767550 24280 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:23.820353 24288 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:23.820755 24280 solver.cpp:398]     Test net output #0: accuracy = 0.9229
I0428 19:39:23.820775 24280 solver.cpp:398]     Test net output #1: loss = 0.246544 (* 1 = 0.246544 loss)
I0428 19:39:23.820782 24280 solver.cpp:316] Optimization Done.
I0428 19:39:23.820789 24280 caffe.cpp:259] Optimization Done.
