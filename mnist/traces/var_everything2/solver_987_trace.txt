I0428 20:04:58.905660 30507 caffe.cpp:218] Using GPUs 0
I0428 20:04:58.939824 30507 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:59.389904 30507 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test987.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:59.390034 30507 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test987.prototxt
I0428 20:04:59.390377 30507 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:59.390393 30507 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:59.390473 30507 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:59.390537 30507 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:59.390619 30507 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:59.390640 30507 net.cpp:86] Creating Layer mnist
I0428 20:04:59.390650 30507 net.cpp:382] mnist -> data
I0428 20:04:59.390682 30507 net.cpp:382] mnist -> label
I0428 20:04:59.391661 30507 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:59.394084 30507 net.cpp:124] Setting up mnist
I0428 20:04:59.394114 30507 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:59.394119 30507 net.cpp:131] Top shape: 64 (64)
I0428 20:04:59.394122 30507 net.cpp:139] Memory required for data: 200960
I0428 20:04:59.394129 30507 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:59.394151 30507 net.cpp:86] Creating Layer conv0
I0428 20:04:59.394170 30507 net.cpp:408] conv0 <- data
I0428 20:04:59.394182 30507 net.cpp:382] conv0 -> conv0
I0428 20:04:59.623406 30507 net.cpp:124] Setting up conv0
I0428 20:04:59.623448 30507 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:59.623452 30507 net.cpp:139] Memory required for data: 3887360
I0428 20:04:59.623467 30507 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:59.623491 30507 net.cpp:86] Creating Layer pool0
I0428 20:04:59.623494 30507 net.cpp:408] pool0 <- conv0
I0428 20:04:59.623515 30507 net.cpp:382] pool0 -> pool0
I0428 20:04:59.623574 30507 net.cpp:124] Setting up pool0
I0428 20:04:59.623580 30507 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:59.623592 30507 net.cpp:139] Memory required for data: 4808960
I0428 20:04:59.623595 30507 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:59.623605 30507 net.cpp:86] Creating Layer conv1
I0428 20:04:59.623608 30507 net.cpp:408] conv1 <- pool0
I0428 20:04:59.623613 30507 net.cpp:382] conv1 -> conv1
I0428 20:04:59.626554 30507 net.cpp:124] Setting up conv1
I0428 20:04:59.626583 30507 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:59.626586 30507 net.cpp:139] Memory required for data: 4841728
I0428 20:04:59.626595 30507 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:59.626602 30507 net.cpp:86] Creating Layer pool1
I0428 20:04:59.626605 30507 net.cpp:408] pool1 <- conv1
I0428 20:04:59.626626 30507 net.cpp:382] pool1 -> pool1
I0428 20:04:59.626693 30507 net.cpp:124] Setting up pool1
I0428 20:04:59.626698 30507 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:59.626701 30507 net.cpp:139] Memory required for data: 4849920
I0428 20:04:59.626704 30507 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:59.626710 30507 net.cpp:86] Creating Layer ip1
I0428 20:04:59.626714 30507 net.cpp:408] ip1 <- pool1
I0428 20:04:59.626718 30507 net.cpp:382] ip1 -> ip1
I0428 20:04:59.626816 30507 net.cpp:124] Setting up ip1
I0428 20:04:59.626824 30507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:59.626827 30507 net.cpp:139] Memory required for data: 4852480
I0428 20:04:59.626834 30507 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:59.626842 30507 net.cpp:86] Creating Layer relu1
I0428 20:04:59.626857 30507 net.cpp:408] relu1 <- ip1
I0428 20:04:59.626860 30507 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:59.627058 30507 net.cpp:124] Setting up relu1
I0428 20:04:59.627068 30507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:59.627069 30507 net.cpp:139] Memory required for data: 4855040
I0428 20:04:59.627073 30507 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:59.627079 30507 net.cpp:86] Creating Layer ip2
I0428 20:04:59.627082 30507 net.cpp:408] ip2 <- ip1
I0428 20:04:59.627087 30507 net.cpp:382] ip2 -> ip2
I0428 20:04:59.627179 30507 net.cpp:124] Setting up ip2
I0428 20:04:59.627187 30507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:59.627188 30507 net.cpp:139] Memory required for data: 4857600
I0428 20:04:59.627194 30507 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:59.627202 30507 net.cpp:86] Creating Layer relu2
I0428 20:04:59.627204 30507 net.cpp:408] relu2 <- ip2
I0428 20:04:59.627218 30507 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:59.628018 30507 net.cpp:124] Setting up relu2
I0428 20:04:59.628031 30507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:59.628049 30507 net.cpp:139] Memory required for data: 4860160
I0428 20:04:59.628052 30507 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:59.628077 30507 net.cpp:86] Creating Layer ip3
I0428 20:04:59.628080 30507 net.cpp:408] ip3 <- ip2
I0428 20:04:59.628087 30507 net.cpp:382] ip3 -> ip3
I0428 20:04:59.628219 30507 net.cpp:124] Setting up ip3
I0428 20:04:59.628227 30507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:59.628231 30507 net.cpp:139] Memory required for data: 4862720
I0428 20:04:59.628238 30507 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:59.628243 30507 net.cpp:86] Creating Layer relu3
I0428 20:04:59.628247 30507 net.cpp:408] relu3 <- ip3
I0428 20:04:59.628252 30507 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:59.628435 30507 net.cpp:124] Setting up relu3
I0428 20:04:59.628444 30507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:59.628448 30507 net.cpp:139] Memory required for data: 4865280
I0428 20:04:59.628463 30507 layer_factory.hpp:77] Creating layer loss
I0428 20:04:59.628468 30507 net.cpp:86] Creating Layer loss
I0428 20:04:59.628471 30507 net.cpp:408] loss <- ip3
I0428 20:04:59.628475 30507 net.cpp:408] loss <- label
I0428 20:04:59.628482 30507 net.cpp:382] loss -> loss
I0428 20:04:59.628500 30507 layer_factory.hpp:77] Creating layer loss
I0428 20:04:59.628765 30507 net.cpp:124] Setting up loss
I0428 20:04:59.628773 30507 net.cpp:131] Top shape: (1)
I0428 20:04:59.628777 30507 net.cpp:134]     with loss weight 1
I0428 20:04:59.628790 30507 net.cpp:139] Memory required for data: 4865284
I0428 20:04:59.628794 30507 net.cpp:200] loss needs backward computation.
I0428 20:04:59.628798 30507 net.cpp:200] relu3 needs backward computation.
I0428 20:04:59.628800 30507 net.cpp:200] ip3 needs backward computation.
I0428 20:04:59.628803 30507 net.cpp:200] relu2 needs backward computation.
I0428 20:04:59.628805 30507 net.cpp:200] ip2 needs backward computation.
I0428 20:04:59.628808 30507 net.cpp:200] relu1 needs backward computation.
I0428 20:04:59.628816 30507 net.cpp:200] ip1 needs backward computation.
I0428 20:04:59.628830 30507 net.cpp:200] pool1 needs backward computation.
I0428 20:04:59.628834 30507 net.cpp:200] conv1 needs backward computation.
I0428 20:04:59.628836 30507 net.cpp:200] pool0 needs backward computation.
I0428 20:04:59.628854 30507 net.cpp:200] conv0 needs backward computation.
I0428 20:04:59.628857 30507 net.cpp:202] mnist does not need backward computation.
I0428 20:04:59.628860 30507 net.cpp:244] This network produces output loss
I0428 20:04:59.628872 30507 net.cpp:257] Network initialization done.
I0428 20:04:59.629268 30507 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test987.prototxt
I0428 20:04:59.629324 30507 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:59.629426 30507 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:59.629503 30507 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:59.629545 30507 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:59.629559 30507 net.cpp:86] Creating Layer mnist
I0428 20:04:59.629565 30507 net.cpp:382] mnist -> data
I0428 20:04:59.629570 30507 net.cpp:382] mnist -> label
I0428 20:04:59.629652 30507 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:59.631793 30507 net.cpp:124] Setting up mnist
I0428 20:04:59.631820 30507 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:59.631826 30507 net.cpp:131] Top shape: 100 (100)
I0428 20:04:59.631829 30507 net.cpp:139] Memory required for data: 314000
I0428 20:04:59.631832 30507 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:59.631867 30507 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:59.631871 30507 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:59.631875 30507 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:59.631881 30507 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:59.631928 30507 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:59.631934 30507 net.cpp:131] Top shape: 100 (100)
I0428 20:04:59.631937 30507 net.cpp:131] Top shape: 100 (100)
I0428 20:04:59.631940 30507 net.cpp:139] Memory required for data: 314800
I0428 20:04:59.631943 30507 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:59.631953 30507 net.cpp:86] Creating Layer conv0
I0428 20:04:59.631955 30507 net.cpp:408] conv0 <- data
I0428 20:04:59.631961 30507 net.cpp:382] conv0 -> conv0
I0428 20:04:59.633668 30507 net.cpp:124] Setting up conv0
I0428 20:04:59.633682 30507 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:59.633685 30507 net.cpp:139] Memory required for data: 6074800
I0428 20:04:59.633693 30507 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:59.633700 30507 net.cpp:86] Creating Layer pool0
I0428 20:04:59.633704 30507 net.cpp:408] pool0 <- conv0
I0428 20:04:59.633708 30507 net.cpp:382] pool0 -> pool0
I0428 20:04:59.633745 30507 net.cpp:124] Setting up pool0
I0428 20:04:59.633749 30507 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:59.633752 30507 net.cpp:139] Memory required for data: 7514800
I0428 20:04:59.633755 30507 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:59.633764 30507 net.cpp:86] Creating Layer conv1
I0428 20:04:59.633766 30507 net.cpp:408] conv1 <- pool0
I0428 20:04:59.633772 30507 net.cpp:382] conv1 -> conv1
I0428 20:04:59.635970 30507 net.cpp:124] Setting up conv1
I0428 20:04:59.635983 30507 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:59.635998 30507 net.cpp:139] Memory required for data: 7566000
I0428 20:04:59.636028 30507 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:59.636035 30507 net.cpp:86] Creating Layer pool1
I0428 20:04:59.636039 30507 net.cpp:408] pool1 <- conv1
I0428 20:04:59.636046 30507 net.cpp:382] pool1 -> pool1
I0428 20:04:59.636085 30507 net.cpp:124] Setting up pool1
I0428 20:04:59.636090 30507 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:59.636092 30507 net.cpp:139] Memory required for data: 7578800
I0428 20:04:59.636096 30507 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:59.636101 30507 net.cpp:86] Creating Layer ip1
I0428 20:04:59.636106 30507 net.cpp:408] ip1 <- pool1
I0428 20:04:59.636111 30507 net.cpp:382] ip1 -> ip1
I0428 20:04:59.636211 30507 net.cpp:124] Setting up ip1
I0428 20:04:59.636219 30507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:59.636231 30507 net.cpp:139] Memory required for data: 7582800
I0428 20:04:59.636238 30507 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:59.636251 30507 net.cpp:86] Creating Layer relu1
I0428 20:04:59.636255 30507 net.cpp:408] relu1 <- ip1
I0428 20:04:59.636258 30507 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:59.636459 30507 net.cpp:124] Setting up relu1
I0428 20:04:59.636468 30507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:59.636471 30507 net.cpp:139] Memory required for data: 7586800
I0428 20:04:59.636474 30507 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:59.636483 30507 net.cpp:86] Creating Layer ip2
I0428 20:04:59.636487 30507 net.cpp:408] ip2 <- ip1
I0428 20:04:59.636492 30507 net.cpp:382] ip2 -> ip2
I0428 20:04:59.636587 30507 net.cpp:124] Setting up ip2
I0428 20:04:59.636600 30507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:59.636605 30507 net.cpp:139] Memory required for data: 7590800
I0428 20:04:59.636610 30507 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:59.636613 30507 net.cpp:86] Creating Layer relu2
I0428 20:04:59.636622 30507 net.cpp:408] relu2 <- ip2
I0428 20:04:59.636626 30507 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:59.636780 30507 net.cpp:124] Setting up relu2
I0428 20:04:59.636787 30507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:59.636791 30507 net.cpp:139] Memory required for data: 7594800
I0428 20:04:59.636793 30507 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:59.636798 30507 net.cpp:86] Creating Layer ip3
I0428 20:04:59.636801 30507 net.cpp:408] ip3 <- ip2
I0428 20:04:59.636840 30507 net.cpp:382] ip3 -> ip3
I0428 20:04:59.636972 30507 net.cpp:124] Setting up ip3
I0428 20:04:59.636981 30507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:59.636999 30507 net.cpp:139] Memory required for data: 7598800
I0428 20:04:59.637014 30507 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:59.637020 30507 net.cpp:86] Creating Layer relu3
I0428 20:04:59.637023 30507 net.cpp:408] relu3 <- ip3
I0428 20:04:59.637028 30507 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:59.637913 30507 net.cpp:124] Setting up relu3
I0428 20:04:59.637925 30507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:59.637929 30507 net.cpp:139] Memory required for data: 7602800
I0428 20:04:59.637933 30507 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:59.637938 30507 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:59.637941 30507 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:59.637948 30507 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:59.637954 30507 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:59.638013 30507 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:59.638018 30507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:59.638022 30507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:59.638025 30507 net.cpp:139] Memory required for data: 7610800
I0428 20:04:59.638028 30507 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:59.638034 30507 net.cpp:86] Creating Layer accuracy
I0428 20:04:59.638038 30507 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:59.638042 30507 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:59.638048 30507 net.cpp:382] accuracy -> accuracy
I0428 20:04:59.638062 30507 net.cpp:124] Setting up accuracy
I0428 20:04:59.638067 30507 net.cpp:131] Top shape: (1)
I0428 20:04:59.638069 30507 net.cpp:139] Memory required for data: 7610804
I0428 20:04:59.638072 30507 layer_factory.hpp:77] Creating layer loss
I0428 20:04:59.638083 30507 net.cpp:86] Creating Layer loss
I0428 20:04:59.638087 30507 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:59.638090 30507 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:59.638100 30507 net.cpp:382] loss -> loss
I0428 20:04:59.638108 30507 layer_factory.hpp:77] Creating layer loss
I0428 20:04:59.638396 30507 net.cpp:124] Setting up loss
I0428 20:04:59.638406 30507 net.cpp:131] Top shape: (1)
I0428 20:04:59.638408 30507 net.cpp:134]     with loss weight 1
I0428 20:04:59.638414 30507 net.cpp:139] Memory required for data: 7610808
I0428 20:04:59.638427 30507 net.cpp:200] loss needs backward computation.
I0428 20:04:59.638432 30507 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:59.638434 30507 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:59.638437 30507 net.cpp:200] relu3 needs backward computation.
I0428 20:04:59.638440 30507 net.cpp:200] ip3 needs backward computation.
I0428 20:04:59.638442 30507 net.cpp:200] relu2 needs backward computation.
I0428 20:04:59.638445 30507 net.cpp:200] ip2 needs backward computation.
I0428 20:04:59.638448 30507 net.cpp:200] relu1 needs backward computation.
I0428 20:04:59.638450 30507 net.cpp:200] ip1 needs backward computation.
I0428 20:04:59.638454 30507 net.cpp:200] pool1 needs backward computation.
I0428 20:04:59.638458 30507 net.cpp:200] conv1 needs backward computation.
I0428 20:04:59.638459 30507 net.cpp:200] pool0 needs backward computation.
I0428 20:04:59.638463 30507 net.cpp:200] conv0 needs backward computation.
I0428 20:04:59.638478 30507 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:59.638481 30507 net.cpp:202] mnist does not need backward computation.
I0428 20:04:59.638484 30507 net.cpp:244] This network produces output accuracy
I0428 20:04:59.638486 30507 net.cpp:244] This network produces output loss
I0428 20:04:59.638514 30507 net.cpp:257] Network initialization done.
I0428 20:04:59.638553 30507 solver.cpp:56] Solver scaffolding done.
I0428 20:04:59.638911 30507 caffe.cpp:248] Starting Optimization
I0428 20:04:59.638917 30507 solver.cpp:273] Solving LeNet
I0428 20:04:59.638919 30507 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:59.639704 30507 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:59.644991 30507 blocking_queue.cpp:49] Waiting for data
I0428 20:04:59.716568 30514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:59.717192 30507 solver.cpp:398]     Test net output #0: accuracy = 0.0937
I0428 20:04:59.717211 30507 solver.cpp:398]     Test net output #1: loss = 2.325 (* 1 = 2.325 loss)
I0428 20:04:59.720285 30507 solver.cpp:219] Iteration 0 (-1.20058e-31 iter/s, 0.0813384s/100 iters), loss = 2.31939
I0428 20:04:59.720309 30507 solver.cpp:238]     Train net output #0: loss = 2.31939 (* 1 = 2.31939 loss)
I0428 20:04:59.720335 30507 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:59.817440 30507 solver.cpp:219] Iteration 100 (1029.67 iter/s, 0.0971183s/100 iters), loss = 0.991828
I0428 20:04:59.817464 30507 solver.cpp:238]     Train net output #0: loss = 0.991828 (* 1 = 0.991828 loss)
I0428 20:04:59.817469 30507 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:59.908802 30507 solver.cpp:219] Iteration 200 (1095 iter/s, 0.0913246s/100 iters), loss = 0.521085
I0428 20:04:59.908833 30507 solver.cpp:238]     Train net output #0: loss = 0.521085 (* 1 = 0.521085 loss)
I0428 20:04:59.908838 30507 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:59.995131 30507 solver.cpp:219] Iteration 300 (1158.9 iter/s, 0.0862884s/100 iters), loss = 0.516597
I0428 20:04:59.995154 30507 solver.cpp:238]     Train net output #0: loss = 0.516597 (* 1 = 0.516597 loss)
I0428 20:04:59.995177 30507 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:00.082989 30507 solver.cpp:219] Iteration 400 (1138.64 iter/s, 0.0878244s/100 iters), loss = 0.357766
I0428 20:05:00.083020 30507 solver.cpp:238]     Train net output #0: loss = 0.357766 (* 1 = 0.357766 loss)
I0428 20:05:00.083029 30507 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:00.172163 30507 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:00.252704 30514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:00.253432 30507 solver.cpp:398]     Test net output #0: accuracy = 0.9001
I0428 20:05:00.253461 30507 solver.cpp:398]     Test net output #1: loss = 0.336871 (* 1 = 0.336871 loss)
I0428 20:05:00.254566 30507 solver.cpp:219] Iteration 500 (582.987 iter/s, 0.17153s/100 iters), loss = 0.234288
I0428 20:05:00.254603 30507 solver.cpp:238]     Train net output #0: loss = 0.234288 (* 1 = 0.234288 loss)
I0428 20:05:00.254637 30507 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:00.345147 30507 solver.cpp:219] Iteration 600 (1104.53 iter/s, 0.090536s/100 iters), loss = 0.215786
I0428 20:05:00.345171 30507 solver.cpp:238]     Train net output #0: loss = 0.215786 (* 1 = 0.215786 loss)
I0428 20:05:00.345177 30507 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:00.445842 30507 solver.cpp:219] Iteration 700 (993.492 iter/s, 0.100655s/100 iters), loss = 0.28924
I0428 20:05:00.445884 30507 solver.cpp:238]     Train net output #0: loss = 0.28924 (* 1 = 0.28924 loss)
I0428 20:05:00.445905 30507 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:00.538272 30507 solver.cpp:219] Iteration 800 (1082.56 iter/s, 0.092374s/100 iters), loss = 0.334584
I0428 20:05:00.538336 30507 solver.cpp:238]     Train net output #0: loss = 0.334584 (* 1 = 0.334584 loss)
I0428 20:05:00.538350 30507 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:00.642309 30507 solver.cpp:219] Iteration 900 (961.846 iter/s, 0.103967s/100 iters), loss = 0.390241
I0428 20:05:00.642344 30507 solver.cpp:238]     Train net output #0: loss = 0.390241 (* 1 = 0.390241 loss)
I0428 20:05:00.642352 30507 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:00.673630 30513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:00.733141 30507 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:00.733892 30507 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:00.734432 30507 solver.cpp:311] Iteration 1000, loss = 0.213628
I0428 20:05:00.734449 30507 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:00.809713 30514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:00.810317 30507 solver.cpp:398]     Test net output #0: accuracy = 0.9286
I0428 20:05:00.810340 30507 solver.cpp:398]     Test net output #1: loss = 0.23331 (* 1 = 0.23331 loss)
I0428 20:05:00.810346 30507 solver.cpp:316] Optimization Done.
I0428 20:05:00.810350 30507 caffe.cpp:259] Optimization Done.
