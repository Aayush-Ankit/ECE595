I0428 20:38:47.865082  5193 caffe.cpp:218] Using GPUs 0
I0428 20:38:47.901824  5193 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:48.357107  5193 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1670.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:48.357283  5193 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1670.prototxt
I0428 20:38:48.357652  5193 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:48.357682  5193 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:48.357762  5193 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:48.357826  5193 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:48.357906  5193 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:48.357928  5193 net.cpp:86] Creating Layer mnist
I0428 20:38:48.357935  5193 net.cpp:382] mnist -> data
I0428 20:38:48.357954  5193 net.cpp:382] mnist -> label
I0428 20:38:48.359014  5193 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:48.361151  5193 net.cpp:124] Setting up mnist
I0428 20:38:48.361181  5193 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:48.361186  5193 net.cpp:131] Top shape: 64 (64)
I0428 20:38:48.361188  5193 net.cpp:139] Memory required for data: 200960
I0428 20:38:48.361193  5193 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:48.361208  5193 net.cpp:86] Creating Layer conv0
I0428 20:38:48.361225  5193 net.cpp:408] conv0 <- data
I0428 20:38:48.361251  5193 net.cpp:382] conv0 -> conv0
I0428 20:38:48.598537  5193 net.cpp:124] Setting up conv0
I0428 20:38:48.598563  5193 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:48.598568  5193 net.cpp:139] Memory required for data: 14946560
I0428 20:38:48.598583  5193 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:48.598595  5193 net.cpp:86] Creating Layer pool0
I0428 20:38:48.598599  5193 net.cpp:408] pool0 <- conv0
I0428 20:38:48.598604  5193 net.cpp:382] pool0 -> pool0
I0428 20:38:48.598664  5193 net.cpp:124] Setting up pool0
I0428 20:38:48.598670  5193 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:48.598673  5193 net.cpp:139] Memory required for data: 18632960
I0428 20:38:48.598676  5193 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:48.598686  5193 net.cpp:86] Creating Layer conv1
I0428 20:38:48.598690  5193 net.cpp:408] conv1 <- pool0
I0428 20:38:48.598693  5193 net.cpp:382] conv1 -> conv1
I0428 20:38:48.602787  5193 net.cpp:124] Setting up conv1
I0428 20:38:48.602802  5193 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:48.602804  5193 net.cpp:139] Memory required for data: 20271360
I0428 20:38:48.602813  5193 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:48.602820  5193 net.cpp:86] Creating Layer pool1
I0428 20:38:48.602823  5193 net.cpp:408] pool1 <- conv1
I0428 20:38:48.602828  5193 net.cpp:382] pool1 -> pool1
I0428 20:38:48.602880  5193 net.cpp:124] Setting up pool1
I0428 20:38:48.602885  5193 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:48.602887  5193 net.cpp:139] Memory required for data: 20680960
I0428 20:38:48.602890  5193 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:48.602896  5193 net.cpp:86] Creating Layer ip1
I0428 20:38:48.602900  5193 net.cpp:408] ip1 <- pool1
I0428 20:38:48.602903  5193 net.cpp:382] ip1 -> ip1
I0428 20:38:48.603441  5193 net.cpp:124] Setting up ip1
I0428 20:38:48.603449  5193 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:48.603467  5193 net.cpp:139] Memory required for data: 20693760
I0428 20:38:48.603474  5193 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:48.603480  5193 net.cpp:86] Creating Layer relu1
I0428 20:38:48.603483  5193 net.cpp:408] relu1 <- ip1
I0428 20:38:48.603487  5193 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:48.603659  5193 net.cpp:124] Setting up relu1
I0428 20:38:48.603668  5193 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:48.603672  5193 net.cpp:139] Memory required for data: 20706560
I0428 20:38:48.603674  5193 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:48.603680  5193 net.cpp:86] Creating Layer ip2
I0428 20:38:48.603683  5193 net.cpp:408] ip2 <- ip1
I0428 20:38:48.603688  5193 net.cpp:382] ip2 -> ip2
I0428 20:38:48.603780  5193 net.cpp:124] Setting up ip2
I0428 20:38:48.603785  5193 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:48.603790  5193 net.cpp:139] Memory required for data: 20709120
I0428 20:38:48.603795  5193 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:48.603799  5193 net.cpp:86] Creating Layer relu2
I0428 20:38:48.603802  5193 net.cpp:408] relu2 <- ip2
I0428 20:38:48.603806  5193 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:48.604594  5193 net.cpp:124] Setting up relu2
I0428 20:38:48.604607  5193 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:48.604626  5193 net.cpp:139] Memory required for data: 20711680
I0428 20:38:48.604629  5193 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:48.604636  5193 net.cpp:86] Creating Layer ip3
I0428 20:38:48.604640  5193 net.cpp:408] ip3 <- ip2
I0428 20:38:48.604645  5193 net.cpp:382] ip3 -> ip3
I0428 20:38:48.604756  5193 net.cpp:124] Setting up ip3
I0428 20:38:48.604763  5193 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:48.604766  5193 net.cpp:139] Memory required for data: 20714240
I0428 20:38:48.604774  5193 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:48.604779  5193 net.cpp:86] Creating Layer relu3
I0428 20:38:48.604782  5193 net.cpp:408] relu3 <- ip3
I0428 20:38:48.604801  5193 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:48.605011  5193 net.cpp:124] Setting up relu3
I0428 20:38:48.605021  5193 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:48.605024  5193 net.cpp:139] Memory required for data: 20716800
I0428 20:38:48.605028  5193 layer_factory.hpp:77] Creating layer loss
I0428 20:38:48.605034  5193 net.cpp:86] Creating Layer loss
I0428 20:38:48.605037  5193 net.cpp:408] loss <- ip3
I0428 20:38:48.605042  5193 net.cpp:408] loss <- label
I0428 20:38:48.605047  5193 net.cpp:382] loss -> loss
I0428 20:38:48.605067  5193 layer_factory.hpp:77] Creating layer loss
I0428 20:38:48.605383  5193 net.cpp:124] Setting up loss
I0428 20:38:48.605392  5193 net.cpp:131] Top shape: (1)
I0428 20:38:48.605412  5193 net.cpp:134]     with loss weight 1
I0428 20:38:48.605427  5193 net.cpp:139] Memory required for data: 20716804
I0428 20:38:48.605432  5193 net.cpp:200] loss needs backward computation.
I0428 20:38:48.605434  5193 net.cpp:200] relu3 needs backward computation.
I0428 20:38:48.605437  5193 net.cpp:200] ip3 needs backward computation.
I0428 20:38:48.605442  5193 net.cpp:200] relu2 needs backward computation.
I0428 20:38:48.605443  5193 net.cpp:200] ip2 needs backward computation.
I0428 20:38:48.605446  5193 net.cpp:200] relu1 needs backward computation.
I0428 20:38:48.605449  5193 net.cpp:200] ip1 needs backward computation.
I0428 20:38:48.605453  5193 net.cpp:200] pool1 needs backward computation.
I0428 20:38:48.605455  5193 net.cpp:200] conv1 needs backward computation.
I0428 20:38:48.605459  5193 net.cpp:200] pool0 needs backward computation.
I0428 20:38:48.605463  5193 net.cpp:200] conv0 needs backward computation.
I0428 20:38:48.605466  5193 net.cpp:202] mnist does not need backward computation.
I0428 20:38:48.605469  5193 net.cpp:244] This network produces output loss
I0428 20:38:48.605479  5193 net.cpp:257] Network initialization done.
I0428 20:38:48.605880  5193 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1670.prototxt
I0428 20:38:48.605923  5193 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:48.606010  5193 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:48.606086  5193 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:48.606128  5193 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:48.606140  5193 net.cpp:86] Creating Layer mnist
I0428 20:38:48.606147  5193 net.cpp:382] mnist -> data
I0428 20:38:48.606155  5193 net.cpp:382] mnist -> label
I0428 20:38:48.606235  5193 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:48.608439  5193 net.cpp:124] Setting up mnist
I0428 20:38:48.608479  5193 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:48.608485  5193 net.cpp:131] Top shape: 100 (100)
I0428 20:38:48.608502  5193 net.cpp:139] Memory required for data: 314000
I0428 20:38:48.608505  5193 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:48.608512  5193 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:48.608515  5193 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:48.608520  5193 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:48.608527  5193 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:48.608604  5193 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:48.608613  5193 net.cpp:131] Top shape: 100 (100)
I0428 20:38:48.608616  5193 net.cpp:131] Top shape: 100 (100)
I0428 20:38:48.608619  5193 net.cpp:139] Memory required for data: 314800
I0428 20:38:48.608623  5193 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:48.608630  5193 net.cpp:86] Creating Layer conv0
I0428 20:38:48.608633  5193 net.cpp:408] conv0 <- data
I0428 20:38:48.608639  5193 net.cpp:382] conv0 -> conv0
I0428 20:38:48.610136  5193 net.cpp:124] Setting up conv0
I0428 20:38:48.610165  5193 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:48.610169  5193 net.cpp:139] Memory required for data: 23354800
I0428 20:38:48.610178  5193 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:48.610184  5193 net.cpp:86] Creating Layer pool0
I0428 20:38:48.610188  5193 net.cpp:408] pool0 <- conv0
I0428 20:38:48.610193  5193 net.cpp:382] pool0 -> pool0
I0428 20:38:48.610227  5193 net.cpp:124] Setting up pool0
I0428 20:38:48.610234  5193 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:48.610236  5193 net.cpp:139] Memory required for data: 29114800
I0428 20:38:48.610239  5193 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:48.610247  5193 net.cpp:86] Creating Layer conv1
I0428 20:38:48.610250  5193 net.cpp:408] conv1 <- pool0
I0428 20:38:48.610255  5193 net.cpp:382] conv1 -> conv1
I0428 20:38:48.613354  5193 net.cpp:124] Setting up conv1
I0428 20:38:48.613382  5193 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:48.613386  5193 net.cpp:139] Memory required for data: 31674800
I0428 20:38:48.613394  5193 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:48.613401  5193 net.cpp:86] Creating Layer pool1
I0428 20:38:48.613405  5193 net.cpp:408] pool1 <- conv1
I0428 20:38:48.613410  5193 net.cpp:382] pool1 -> pool1
I0428 20:38:48.613446  5193 net.cpp:124] Setting up pool1
I0428 20:38:48.613451  5193 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:48.613454  5193 net.cpp:139] Memory required for data: 32314800
I0428 20:38:48.613457  5193 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:48.613463  5193 net.cpp:86] Creating Layer ip1
I0428 20:38:48.613466  5193 net.cpp:408] ip1 <- pool1
I0428 20:38:48.613471  5193 net.cpp:382] ip1 -> ip1
I0428 20:38:48.614025  5193 net.cpp:124] Setting up ip1
I0428 20:38:48.614043  5193 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:48.614048  5193 net.cpp:139] Memory required for data: 32334800
I0428 20:38:48.614055  5193 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:48.614060  5193 net.cpp:86] Creating Layer relu1
I0428 20:38:48.614063  5193 net.cpp:408] relu1 <- ip1
I0428 20:38:48.614068  5193 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:48.614269  5193 net.cpp:124] Setting up relu1
I0428 20:38:48.614277  5193 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:48.614281  5193 net.cpp:139] Memory required for data: 32354800
I0428 20:38:48.614284  5193 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:48.614291  5193 net.cpp:86] Creating Layer ip2
I0428 20:38:48.614295  5193 net.cpp:408] ip2 <- ip1
I0428 20:38:48.614300  5193 net.cpp:382] ip2 -> ip2
I0428 20:38:48.614482  5193 net.cpp:124] Setting up ip2
I0428 20:38:48.614490  5193 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:48.614495  5193 net.cpp:139] Memory required for data: 32358800
I0428 20:38:48.614500  5193 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:48.614506  5193 net.cpp:86] Creating Layer relu2
I0428 20:38:48.614509  5193 net.cpp:408] relu2 <- ip2
I0428 20:38:48.614513  5193 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:48.614694  5193 net.cpp:124] Setting up relu2
I0428 20:38:48.614706  5193 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:48.614724  5193 net.cpp:139] Memory required for data: 32362800
I0428 20:38:48.614728  5193 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:48.614748  5193 net.cpp:86] Creating Layer ip3
I0428 20:38:48.614751  5193 net.cpp:408] ip3 <- ip2
I0428 20:38:48.614756  5193 net.cpp:382] ip3 -> ip3
I0428 20:38:48.614846  5193 net.cpp:124] Setting up ip3
I0428 20:38:48.614853  5193 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:48.614856  5193 net.cpp:139] Memory required for data: 32366800
I0428 20:38:48.614866  5193 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:48.614869  5193 net.cpp:86] Creating Layer relu3
I0428 20:38:48.614872  5193 net.cpp:408] relu3 <- ip3
I0428 20:38:48.614876  5193 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:48.615638  5193 net.cpp:124] Setting up relu3
I0428 20:38:48.615666  5193 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:48.615669  5193 net.cpp:139] Memory required for data: 32370800
I0428 20:38:48.615672  5193 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:48.615694  5193 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:48.615696  5193 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:48.615701  5193 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:48.615707  5193 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:48.615763  5193 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:48.615769  5193 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:48.615773  5193 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:48.615777  5193 net.cpp:139] Memory required for data: 32378800
I0428 20:38:48.615779  5193 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:48.615783  5193 net.cpp:86] Creating Layer accuracy
I0428 20:38:48.615787  5193 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:48.615792  5193 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:48.615797  5193 net.cpp:382] accuracy -> accuracy
I0428 20:38:48.615804  5193 net.cpp:124] Setting up accuracy
I0428 20:38:48.615810  5193 net.cpp:131] Top shape: (1)
I0428 20:38:48.615813  5193 net.cpp:139] Memory required for data: 32378804
I0428 20:38:48.615816  5193 layer_factory.hpp:77] Creating layer loss
I0428 20:38:48.615833  5193 net.cpp:86] Creating Layer loss
I0428 20:38:48.615835  5193 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:48.615839  5193 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:48.615844  5193 net.cpp:382] loss -> loss
I0428 20:38:48.615849  5193 layer_factory.hpp:77] Creating layer loss
I0428 20:38:48.616127  5193 net.cpp:124] Setting up loss
I0428 20:38:48.616135  5193 net.cpp:131] Top shape: (1)
I0428 20:38:48.616138  5193 net.cpp:134]     with loss weight 1
I0428 20:38:48.616155  5193 net.cpp:139] Memory required for data: 32378808
I0428 20:38:48.616159  5193 net.cpp:200] loss needs backward computation.
I0428 20:38:48.616163  5193 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:48.616166  5193 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:48.616169  5193 net.cpp:200] relu3 needs backward computation.
I0428 20:38:48.616171  5193 net.cpp:200] ip3 needs backward computation.
I0428 20:38:48.616174  5193 net.cpp:200] relu2 needs backward computation.
I0428 20:38:48.616178  5193 net.cpp:200] ip2 needs backward computation.
I0428 20:38:48.616180  5193 net.cpp:200] relu1 needs backward computation.
I0428 20:38:48.616183  5193 net.cpp:200] ip1 needs backward computation.
I0428 20:38:48.616185  5193 net.cpp:200] pool1 needs backward computation.
I0428 20:38:48.616189  5193 net.cpp:200] conv1 needs backward computation.
I0428 20:38:48.616191  5193 net.cpp:200] pool0 needs backward computation.
I0428 20:38:48.616194  5193 net.cpp:200] conv0 needs backward computation.
I0428 20:38:48.616197  5193 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:48.616201  5193 net.cpp:202] mnist does not need backward computation.
I0428 20:38:48.616204  5193 net.cpp:244] This network produces output accuracy
I0428 20:38:48.616207  5193 net.cpp:244] This network produces output loss
I0428 20:38:48.616219  5193 net.cpp:257] Network initialization done.
I0428 20:38:48.616258  5193 solver.cpp:56] Solver scaffolding done.
I0428 20:38:48.616591  5193 caffe.cpp:248] Starting Optimization
I0428 20:38:48.616598  5193 solver.cpp:273] Solving LeNet
I0428 20:38:48.616600  5193 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:48.618036  5193 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:48.750964  5200 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:48.754570  5193 solver.cpp:398]     Test net output #0: accuracy = 0.0639
I0428 20:38:48.754604  5193 solver.cpp:398]     Test net output #1: loss = 2.31501 (* 1 = 2.31501 loss)
I0428 20:38:48.761199  5193 solver.cpp:219] Iteration 0 (0 iter/s, 0.144542s/100 iters), loss = 2.318
I0428 20:38:48.761236  5193 solver.cpp:238]     Train net output #0: loss = 2.318 (* 1 = 2.318 loss)
I0428 20:38:48.761247  5193 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:49.037722  5193 solver.cpp:219] Iteration 100 (361.71 iter/s, 0.276465s/100 iters), loss = 0.454494
I0428 20:38:49.037762  5193 solver.cpp:238]     Train net output #0: loss = 0.454494 (* 1 = 0.454494 loss)
I0428 20:38:49.037770  5193 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:49.307575  5193 solver.cpp:219] Iteration 200 (370.633 iter/s, 0.269809s/100 iters), loss = 0.2068
I0428 20:38:49.307617  5193 solver.cpp:238]     Train net output #0: loss = 0.2068 (* 1 = 0.2068 loss)
I0428 20:38:49.307623  5193 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:49.578305  5193 solver.cpp:219] Iteration 300 (369.456 iter/s, 0.270668s/100 iters), loss = 0.329889
I0428 20:38:49.578358  5193 solver.cpp:238]     Train net output #0: loss = 0.329889 (* 1 = 0.329889 loss)
I0428 20:38:49.578366  5193 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:49.850986  5193 solver.cpp:219] Iteration 400 (366.805 iter/s, 0.272625s/100 iters), loss = 0.13116
I0428 20:38:49.851028  5193 solver.cpp:238]     Train net output #0: loss = 0.13116 (* 1 = 0.13116 loss)
I0428 20:38:49.851049  5193 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:50.139001  5193 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:50.271066  5200 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:50.275842  5193 solver.cpp:398]     Test net output #0: accuracy = 0.9633
I0428 20:38:50.275868  5193 solver.cpp:398]     Test net output #1: loss = 0.119065 (* 1 = 0.119065 loss)
I0428 20:38:50.278511  5193 solver.cpp:219] Iteration 500 (233.934 iter/s, 0.427472s/100 iters), loss = 0.184284
I0428 20:38:50.278549  5193 solver.cpp:238]     Train net output #0: loss = 0.184284 (* 1 = 0.184284 loss)
I0428 20:38:50.278574  5193 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:50.567581  5193 solver.cpp:219] Iteration 600 (345.997 iter/s, 0.28902s/100 iters), loss = 0.06523
I0428 20:38:50.567634  5193 solver.cpp:238]     Train net output #0: loss = 0.06523 (* 1 = 0.06523 loss)
I0428 20:38:50.567648  5193 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:50.858305  5193 solver.cpp:219] Iteration 700 (344.048 iter/s, 0.290657s/100 iters), loss = 0.12371
I0428 20:38:50.858346  5193 solver.cpp:238]     Train net output #0: loss = 0.12371 (* 1 = 0.12371 loss)
I0428 20:38:50.858353  5193 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:51.169064  5193 solver.cpp:219] Iteration 800 (321.845 iter/s, 0.310708s/100 iters), loss = 0.233341
I0428 20:38:51.169109  5193 solver.cpp:238]     Train net output #0: loss = 0.233341 (* 1 = 0.233341 loss)
I0428 20:38:51.169121  5193 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:51.467975  5193 solver.cpp:219] Iteration 900 (334.619 iter/s, 0.298847s/100 iters), loss = 0.105391
I0428 20:38:51.468017  5193 solver.cpp:238]     Train net output #0: loss = 0.105391 (* 1 = 0.105391 loss)
I0428 20:38:51.468027  5193 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:51.568948  5199 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:51.756764  5193 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:51.762548  5193 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:51.766077  5193 solver.cpp:311] Iteration 1000, loss = 0.0421217
I0428 20:38:51.766093  5193 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:51.895087  5200 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:51.899606  5193 solver.cpp:398]     Test net output #0: accuracy = 0.977
I0428 20:38:51.899623  5193 solver.cpp:398]     Test net output #1: loss = 0.0729865 (* 1 = 0.0729865 loss)
I0428 20:38:51.899644  5193 solver.cpp:316] Optimization Done.
I0428 20:38:51.899646  5193 caffe.cpp:259] Optimization Done.
