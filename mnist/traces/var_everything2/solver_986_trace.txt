I0428 20:04:56.959614 30499 caffe.cpp:218] Using GPUs 0
I0428 20:04:56.994323 30499 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:57.445752 30499 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test986.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:57.445883 30499 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test986.prototxt
I0428 20:04:57.446210 30499 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:57.446239 30499 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:57.446308 30499 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:57.446368 30499 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:57.446454 30499 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:57.446472 30499 net.cpp:86] Creating Layer mnist
I0428 20:04:57.446481 30499 net.cpp:382] mnist -> data
I0428 20:04:57.446499 30499 net.cpp:382] mnist -> label
I0428 20:04:57.447386 30499 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:57.449823 30499 net.cpp:124] Setting up mnist
I0428 20:04:57.449854 30499 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:57.449859 30499 net.cpp:131] Top shape: 64 (64)
I0428 20:04:57.449862 30499 net.cpp:139] Memory required for data: 200960
I0428 20:04:57.449867 30499 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:57.449882 30499 net.cpp:86] Creating Layer conv0
I0428 20:04:57.449887 30499 net.cpp:408] conv0 <- data
I0428 20:04:57.449898 30499 net.cpp:382] conv0 -> conv0
I0428 20:04:57.675096 30499 net.cpp:124] Setting up conv0
I0428 20:04:57.675122 30499 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:04:57.675127 30499 net.cpp:139] Memory required for data: 3887360
I0428 20:04:57.675158 30499 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:57.675171 30499 net.cpp:86] Creating Layer pool0
I0428 20:04:57.675178 30499 net.cpp:408] pool0 <- conv0
I0428 20:04:57.675199 30499 net.cpp:382] pool0 -> pool0
I0428 20:04:57.675256 30499 net.cpp:124] Setting up pool0
I0428 20:04:57.675261 30499 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:04:57.675264 30499 net.cpp:139] Memory required for data: 4808960
I0428 20:04:57.675267 30499 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:57.675278 30499 net.cpp:86] Creating Layer conv1
I0428 20:04:57.675282 30499 net.cpp:408] conv1 <- pool0
I0428 20:04:57.675285 30499 net.cpp:382] conv1 -> conv1
I0428 20:04:57.678104 30499 net.cpp:124] Setting up conv1
I0428 20:04:57.678134 30499 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:04:57.678138 30499 net.cpp:139] Memory required for data: 4841728
I0428 20:04:57.678146 30499 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:57.678153 30499 net.cpp:86] Creating Layer pool1
I0428 20:04:57.678158 30499 net.cpp:408] pool1 <- conv1
I0428 20:04:57.678161 30499 net.cpp:382] pool1 -> pool1
I0428 20:04:57.678226 30499 net.cpp:124] Setting up pool1
I0428 20:04:57.678231 30499 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:04:57.678234 30499 net.cpp:139] Memory required for data: 4849920
I0428 20:04:57.678237 30499 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:57.678244 30499 net.cpp:86] Creating Layer ip1
I0428 20:04:57.678247 30499 net.cpp:408] ip1 <- pool1
I0428 20:04:57.678251 30499 net.cpp:382] ip1 -> ip1
I0428 20:04:57.678351 30499 net.cpp:124] Setting up ip1
I0428 20:04:57.678359 30499 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:57.678361 30499 net.cpp:139] Memory required for data: 4862720
I0428 20:04:57.678369 30499 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:57.678373 30499 net.cpp:86] Creating Layer relu1
I0428 20:04:57.678376 30499 net.cpp:408] relu1 <- ip1
I0428 20:04:57.678380 30499 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:57.678535 30499 net.cpp:124] Setting up relu1
I0428 20:04:57.678544 30499 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:57.678547 30499 net.cpp:139] Memory required for data: 4875520
I0428 20:04:57.678550 30499 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:57.678556 30499 net.cpp:86] Creating Layer ip2
I0428 20:04:57.678560 30499 net.cpp:408] ip2 <- ip1
I0428 20:04:57.678565 30499 net.cpp:382] ip2 -> ip2
I0428 20:04:57.678668 30499 net.cpp:124] Setting up ip2
I0428 20:04:57.678673 30499 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:57.678676 30499 net.cpp:139] Memory required for data: 4878080
I0428 20:04:57.678681 30499 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:57.678686 30499 net.cpp:86] Creating Layer relu2
I0428 20:04:57.678689 30499 net.cpp:408] relu2 <- ip2
I0428 20:04:57.678694 30499 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:57.679492 30499 net.cpp:124] Setting up relu2
I0428 20:04:57.679505 30499 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:57.679508 30499 net.cpp:139] Memory required for data: 4880640
I0428 20:04:57.679512 30499 layer_factory.hpp:77] Creating layer loss
I0428 20:04:57.679518 30499 net.cpp:86] Creating Layer loss
I0428 20:04:57.679522 30499 net.cpp:408] loss <- ip2
I0428 20:04:57.679525 30499 net.cpp:408] loss <- label
I0428 20:04:57.679545 30499 net.cpp:382] loss -> loss
I0428 20:04:57.679564 30499 layer_factory.hpp:77] Creating layer loss
I0428 20:04:57.679775 30499 net.cpp:124] Setting up loss
I0428 20:04:57.679785 30499 net.cpp:131] Top shape: (1)
I0428 20:04:57.679787 30499 net.cpp:134]     with loss weight 1
I0428 20:04:57.679801 30499 net.cpp:139] Memory required for data: 4880644
I0428 20:04:57.679805 30499 net.cpp:200] loss needs backward computation.
I0428 20:04:57.679808 30499 net.cpp:200] relu2 needs backward computation.
I0428 20:04:57.679811 30499 net.cpp:200] ip2 needs backward computation.
I0428 20:04:57.679814 30499 net.cpp:200] relu1 needs backward computation.
I0428 20:04:57.679816 30499 net.cpp:200] ip1 needs backward computation.
I0428 20:04:57.679829 30499 net.cpp:200] pool1 needs backward computation.
I0428 20:04:57.679832 30499 net.cpp:200] conv1 needs backward computation.
I0428 20:04:57.679836 30499 net.cpp:200] pool0 needs backward computation.
I0428 20:04:57.679838 30499 net.cpp:200] conv0 needs backward computation.
I0428 20:04:57.679841 30499 net.cpp:202] mnist does not need backward computation.
I0428 20:04:57.679844 30499 net.cpp:244] This network produces output loss
I0428 20:04:57.679852 30499 net.cpp:257] Network initialization done.
I0428 20:04:57.680155 30499 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test986.prototxt
I0428 20:04:57.680181 30499 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:57.680261 30499 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:04:57.680322 30499 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:57.680366 30499 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:57.680379 30499 net.cpp:86] Creating Layer mnist
I0428 20:04:57.680383 30499 net.cpp:382] mnist -> data
I0428 20:04:57.680392 30499 net.cpp:382] mnist -> label
I0428 20:04:57.680516 30499 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:57.682660 30499 net.cpp:124] Setting up mnist
I0428 20:04:57.682689 30499 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:57.682695 30499 net.cpp:131] Top shape: 100 (100)
I0428 20:04:57.682698 30499 net.cpp:139] Memory required for data: 314000
I0428 20:04:57.682703 30499 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:57.682708 30499 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:57.682713 30499 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:57.682718 30499 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:57.682723 30499 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:57.682798 30499 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:57.682832 30499 net.cpp:131] Top shape: 100 (100)
I0428 20:04:57.682835 30499 net.cpp:131] Top shape: 100 (100)
I0428 20:04:57.682838 30499 net.cpp:139] Memory required for data: 314800
I0428 20:04:57.682842 30499 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:57.682849 30499 net.cpp:86] Creating Layer conv0
I0428 20:04:57.682853 30499 net.cpp:408] conv0 <- data
I0428 20:04:57.682857 30499 net.cpp:382] conv0 -> conv0
I0428 20:04:57.684437 30499 net.cpp:124] Setting up conv0
I0428 20:04:57.684448 30499 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:04:57.684453 30499 net.cpp:139] Memory required for data: 6074800
I0428 20:04:57.684460 30499 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:57.684468 30499 net.cpp:86] Creating Layer pool0
I0428 20:04:57.684486 30499 net.cpp:408] pool0 <- conv0
I0428 20:04:57.684491 30499 net.cpp:382] pool0 -> pool0
I0428 20:04:57.684559 30499 net.cpp:124] Setting up pool0
I0428 20:04:57.684568 30499 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:04:57.684571 30499 net.cpp:139] Memory required for data: 7514800
I0428 20:04:57.684574 30499 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:57.684584 30499 net.cpp:86] Creating Layer conv1
I0428 20:04:57.684588 30499 net.cpp:408] conv1 <- pool0
I0428 20:04:57.684595 30499 net.cpp:382] conv1 -> conv1
I0428 20:04:57.686888 30499 net.cpp:124] Setting up conv1
I0428 20:04:57.686900 30499 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:04:57.686905 30499 net.cpp:139] Memory required for data: 7566000
I0428 20:04:57.686914 30499 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:57.686920 30499 net.cpp:86] Creating Layer pool1
I0428 20:04:57.686923 30499 net.cpp:408] pool1 <- conv1
I0428 20:04:57.686945 30499 net.cpp:382] pool1 -> pool1
I0428 20:04:57.687003 30499 net.cpp:124] Setting up pool1
I0428 20:04:57.687011 30499 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:04:57.687014 30499 net.cpp:139] Memory required for data: 7578800
I0428 20:04:57.687017 30499 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:57.687024 30499 net.cpp:86] Creating Layer ip1
I0428 20:04:57.687027 30499 net.cpp:408] ip1 <- pool1
I0428 20:04:57.687032 30499 net.cpp:382] ip1 -> ip1
I0428 20:04:57.687171 30499 net.cpp:124] Setting up ip1
I0428 20:04:57.687181 30499 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:57.687186 30499 net.cpp:139] Memory required for data: 7598800
I0428 20:04:57.687192 30499 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:57.687198 30499 net.cpp:86] Creating Layer relu1
I0428 20:04:57.687201 30499 net.cpp:408] relu1 <- ip1
I0428 20:04:57.687206 30499 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:57.687417 30499 net.cpp:124] Setting up relu1
I0428 20:04:57.687424 30499 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:57.687428 30499 net.cpp:139] Memory required for data: 7618800
I0428 20:04:57.687432 30499 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:57.687438 30499 net.cpp:86] Creating Layer ip2
I0428 20:04:57.687440 30499 net.cpp:408] ip2 <- ip1
I0428 20:04:57.687446 30499 net.cpp:382] ip2 -> ip2
I0428 20:04:57.687551 30499 net.cpp:124] Setting up ip2
I0428 20:04:57.687557 30499 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:57.687561 30499 net.cpp:139] Memory required for data: 7622800
I0428 20:04:57.687566 30499 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:57.687577 30499 net.cpp:86] Creating Layer relu2
I0428 20:04:57.687579 30499 net.cpp:408] relu2 <- ip2
I0428 20:04:57.687585 30499 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:57.687742 30499 net.cpp:124] Setting up relu2
I0428 20:04:57.687750 30499 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:57.687753 30499 net.cpp:139] Memory required for data: 7626800
I0428 20:04:57.687757 30499 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:04:57.687762 30499 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:04:57.687765 30499 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:04:57.687791 30499 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:04:57.687808 30499 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:04:57.687844 30499 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:04:57.687852 30499 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:57.687857 30499 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:57.687875 30499 net.cpp:139] Memory required for data: 7634800
I0428 20:04:57.687878 30499 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:57.687883 30499 net.cpp:86] Creating Layer accuracy
I0428 20:04:57.687886 30499 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:04:57.687891 30499 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:57.687896 30499 net.cpp:382] accuracy -> accuracy
I0428 20:04:57.687902 30499 net.cpp:124] Setting up accuracy
I0428 20:04:57.687906 30499 net.cpp:131] Top shape: (1)
I0428 20:04:57.687909 30499 net.cpp:139] Memory required for data: 7634804
I0428 20:04:57.687911 30499 layer_factory.hpp:77] Creating layer loss
I0428 20:04:57.687917 30499 net.cpp:86] Creating Layer loss
I0428 20:04:57.687921 30499 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:04:57.687923 30499 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:57.687927 30499 net.cpp:382] loss -> loss
I0428 20:04:57.687949 30499 layer_factory.hpp:77] Creating layer loss
I0428 20:04:57.688328 30499 net.cpp:124] Setting up loss
I0428 20:04:57.688339 30499 net.cpp:131] Top shape: (1)
I0428 20:04:57.688343 30499 net.cpp:134]     with loss weight 1
I0428 20:04:57.688364 30499 net.cpp:139] Memory required for data: 7634808
I0428 20:04:57.688367 30499 net.cpp:200] loss needs backward computation.
I0428 20:04:57.688370 30499 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:57.688374 30499 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:04:57.688377 30499 net.cpp:200] relu2 needs backward computation.
I0428 20:04:57.688380 30499 net.cpp:200] ip2 needs backward computation.
I0428 20:04:57.688388 30499 net.cpp:200] relu1 needs backward computation.
I0428 20:04:57.688400 30499 net.cpp:200] ip1 needs backward computation.
I0428 20:04:57.688402 30499 net.cpp:200] pool1 needs backward computation.
I0428 20:04:57.688405 30499 net.cpp:200] conv1 needs backward computation.
I0428 20:04:57.688408 30499 net.cpp:200] pool0 needs backward computation.
I0428 20:04:57.688411 30499 net.cpp:200] conv0 needs backward computation.
I0428 20:04:57.688416 30499 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:57.688418 30499 net.cpp:202] mnist does not need backward computation.
I0428 20:04:57.688421 30499 net.cpp:244] This network produces output accuracy
I0428 20:04:57.688424 30499 net.cpp:244] This network produces output loss
I0428 20:04:57.688434 30499 net.cpp:257] Network initialization done.
I0428 20:04:57.688472 30499 solver.cpp:56] Solver scaffolding done.
I0428 20:04:57.688719 30499 caffe.cpp:248] Starting Optimization
I0428 20:04:57.688724 30499 solver.cpp:273] Solving LeNet
I0428 20:04:57.688727 30499 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:57.689621 30499 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:57.739423 30506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:57.740682 30499 solver.cpp:398]     Test net output #0: accuracy = 0.1483
I0428 20:04:57.740702 30499 solver.cpp:398]     Test net output #1: loss = 2.28885 (* 1 = 2.28885 loss)
I0428 20:04:57.743643 30499 solver.cpp:219] Iteration 0 (0 iter/s, 0.0548687s/100 iters), loss = 2.27845
I0428 20:04:57.743675 30499 solver.cpp:238]     Train net output #0: loss = 2.27845 (* 1 = 2.27845 loss)
I0428 20:04:57.743687 30499 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:57.823186 30499 solver.cpp:219] Iteration 100 (1257.73 iter/s, 0.0795085s/100 iters), loss = 1.24836
I0428 20:04:57.823210 30499 solver.cpp:238]     Train net output #0: loss = 1.24836 (* 1 = 1.24836 loss)
I0428 20:04:57.823215 30499 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:57.900504 30499 solver.cpp:219] Iteration 200 (1293.89 iter/s, 0.0772864s/100 iters), loss = 1.16752
I0428 20:04:57.900553 30499 solver.cpp:238]     Train net output #0: loss = 1.16752 (* 1 = 1.16752 loss)
I0428 20:04:57.900559 30499 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:57.978461 30499 solver.cpp:219] Iteration 300 (1283.45 iter/s, 0.0779151s/100 iters), loss = 1.24068
I0428 20:04:57.978498 30499 solver.cpp:238]     Train net output #0: loss = 1.24068 (* 1 = 1.24068 loss)
I0428 20:04:57.978519 30499 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:58.056924 30499 solver.cpp:219] Iteration 400 (1275.24 iter/s, 0.0784169s/100 iters), loss = 0.899838
I0428 20:04:58.056962 30499 solver.cpp:238]     Train net output #0: loss = 0.899838 (* 1 = 0.899838 loss)
I0428 20:04:58.056968 30499 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:58.138118 30499 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:58.141862 30499 blocking_queue.cpp:49] Waiting for data
I0428 20:04:58.191718 30506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:58.192350 30499 solver.cpp:398]     Test net output #0: accuracy = 0.6522
I0428 20:04:58.192397 30499 solver.cpp:398]     Test net output #1: loss = 0.889721 (* 1 = 0.889721 loss)
I0428 20:04:58.193445 30499 solver.cpp:219] Iteration 500 (732.682 iter/s, 0.136485s/100 iters), loss = 0.815051
I0428 20:04:58.193469 30499 solver.cpp:238]     Train net output #0: loss = 0.815051 (* 1 = 0.815051 loss)
I0428 20:04:58.193475 30499 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:58.286962 30499 solver.cpp:219] Iteration 600 (1069.7 iter/s, 0.093484s/100 iters), loss = 1.03071
I0428 20:04:58.287001 30499 solver.cpp:238]     Train net output #0: loss = 1.03071 (* 1 = 1.03071 loss)
I0428 20:04:58.287008 30499 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:58.369743 30499 solver.cpp:219] Iteration 700 (1208.71 iter/s, 0.0827331s/100 iters), loss = 1.03436
I0428 20:04:58.369770 30499 solver.cpp:238]     Train net output #0: loss = 1.03436 (* 1 = 1.03436 loss)
I0428 20:04:58.369776 30499 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:58.449975 30499 solver.cpp:219] Iteration 800 (1246.94 iter/s, 0.0801966s/100 iters), loss = 0.898762
I0428 20:04:58.449998 30499 solver.cpp:238]     Train net output #0: loss = 0.898762 (* 1 = 0.898762 loss)
I0428 20:04:58.450004 30499 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:58.530161 30499 solver.cpp:219] Iteration 900 (1247.6 iter/s, 0.0801536s/100 iters), loss = 0.973846
I0428 20:04:58.530186 30499 solver.cpp:238]     Train net output #0: loss = 0.973846 (* 1 = 0.973846 loss)
I0428 20:04:58.530192 30499 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:58.562526 30505 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:58.616997 30499 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:58.617678 30499 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:58.618239 30499 solver.cpp:311] Iteration 1000, loss = 0.78793
I0428 20:04:58.618254 30499 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:58.665307 30506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:58.666522 30499 solver.cpp:398]     Test net output #0: accuracy = 0.676
I0428 20:04:58.666539 30499 solver.cpp:398]     Test net output #1: loss = 0.800573 (* 1 = 0.800573 loss)
I0428 20:04:58.666545 30499 solver.cpp:316] Optimization Done.
I0428 20:04:58.666548 30499 caffe.cpp:259] Optimization Done.
