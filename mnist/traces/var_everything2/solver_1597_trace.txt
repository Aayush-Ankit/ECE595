I0428 20:33:57.815405  4397 caffe.cpp:218] Using GPUs 0
I0428 20:33:57.854086  4397 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:58.368535  4397 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1597.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:58.368672  4397 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1597.prototxt
I0428 20:33:58.369105  4397 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:58.369125  4397 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:58.369232  4397 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:58.369313  4397 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:58.369411  4397 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:58.369438  4397 net.cpp:86] Creating Layer mnist
I0428 20:33:58.369447  4397 net.cpp:382] mnist -> data
I0428 20:33:58.369472  4397 net.cpp:382] mnist -> label
I0428 20:33:58.370571  4397 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:58.373054  4397 net.cpp:124] Setting up mnist
I0428 20:33:58.373072  4397 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:58.373078  4397 net.cpp:131] Top shape: 64 (64)
I0428 20:33:58.373082  4397 net.cpp:139] Memory required for data: 200960
I0428 20:33:58.373090  4397 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:58.373108  4397 net.cpp:86] Creating Layer conv0
I0428 20:33:58.373129  4397 net.cpp:408] conv0 <- data
I0428 20:33:58.373142  4397 net.cpp:382] conv0 -> conv0
I0428 20:33:58.656494  4397 net.cpp:124] Setting up conv0
I0428 20:33:58.656520  4397 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:58.656524  4397 net.cpp:139] Memory required for data: 14946560
I0428 20:33:58.656539  4397 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:58.656551  4397 net.cpp:86] Creating Layer pool0
I0428 20:33:58.656554  4397 net.cpp:408] pool0 <- conv0
I0428 20:33:58.656560  4397 net.cpp:382] pool0 -> pool0
I0428 20:33:58.656605  4397 net.cpp:124] Setting up pool0
I0428 20:33:58.656610  4397 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:58.656613  4397 net.cpp:139] Memory required for data: 18632960
I0428 20:33:58.656615  4397 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:58.656626  4397 net.cpp:86] Creating Layer conv1
I0428 20:33:58.656630  4397 net.cpp:408] conv1 <- pool0
I0428 20:33:58.656633  4397 net.cpp:382] conv1 -> conv1
I0428 20:33:58.658838  4397 net.cpp:124] Setting up conv1
I0428 20:33:58.658869  4397 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:58.658872  4397 net.cpp:139] Memory required for data: 19042560
I0428 20:33:58.658880  4397 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:58.658887  4397 net.cpp:86] Creating Layer pool1
I0428 20:33:58.658891  4397 net.cpp:408] pool1 <- conv1
I0428 20:33:58.658896  4397 net.cpp:382] pool1 -> pool1
I0428 20:33:58.658947  4397 net.cpp:124] Setting up pool1
I0428 20:33:58.658952  4397 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:58.658956  4397 net.cpp:139] Memory required for data: 19144960
I0428 20:33:58.658958  4397 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:58.658965  4397 net.cpp:86] Creating Layer ip1
I0428 20:33:58.658968  4397 net.cpp:408] ip1 <- pool1
I0428 20:33:58.658973  4397 net.cpp:382] ip1 -> ip1
I0428 20:33:58.659178  4397 net.cpp:124] Setting up ip1
I0428 20:33:58.659188  4397 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:58.659190  4397 net.cpp:139] Memory required for data: 19157760
I0428 20:33:58.659198  4397 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:58.659202  4397 net.cpp:86] Creating Layer relu1
I0428 20:33:58.659206  4397 net.cpp:408] relu1 <- ip1
I0428 20:33:58.659210  4397 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:58.659370  4397 net.cpp:124] Setting up relu1
I0428 20:33:58.659379  4397 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:58.659382  4397 net.cpp:139] Memory required for data: 19170560
I0428 20:33:58.659385  4397 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:58.659391  4397 net.cpp:86] Creating Layer ip2
I0428 20:33:58.659394  4397 net.cpp:408] ip2 <- ip1
I0428 20:33:58.659399  4397 net.cpp:382] ip2 -> ip2
I0428 20:33:58.659507  4397 net.cpp:124] Setting up ip2
I0428 20:33:58.659513  4397 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:58.659517  4397 net.cpp:139] Memory required for data: 19183360
I0428 20:33:58.659523  4397 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:58.659528  4397 net.cpp:86] Creating Layer relu2
I0428 20:33:58.659531  4397 net.cpp:408] relu2 <- ip2
I0428 20:33:58.659535  4397 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:58.660270  4397 net.cpp:124] Setting up relu2
I0428 20:33:58.660297  4397 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:58.660315  4397 net.cpp:139] Memory required for data: 19196160
I0428 20:33:58.660320  4397 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:58.660326  4397 net.cpp:86] Creating Layer ip3
I0428 20:33:58.660329  4397 net.cpp:408] ip3 <- ip2
I0428 20:33:58.660334  4397 net.cpp:382] ip3 -> ip3
I0428 20:33:58.660429  4397 net.cpp:124] Setting up ip3
I0428 20:33:58.660435  4397 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:58.660439  4397 net.cpp:139] Memory required for data: 19198720
I0428 20:33:58.660446  4397 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:58.660451  4397 net.cpp:86] Creating Layer relu3
I0428 20:33:58.660454  4397 net.cpp:408] relu3 <- ip3
I0428 20:33:58.660472  4397 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:58.660630  4397 net.cpp:124] Setting up relu3
I0428 20:33:58.660640  4397 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:58.660642  4397 net.cpp:139] Memory required for data: 19201280
I0428 20:33:58.660645  4397 layer_factory.hpp:77] Creating layer loss
I0428 20:33:58.660656  4397 net.cpp:86] Creating Layer loss
I0428 20:33:58.660660  4397 net.cpp:408] loss <- ip3
I0428 20:33:58.660665  4397 net.cpp:408] loss <- label
I0428 20:33:58.660670  4397 net.cpp:382] loss -> loss
I0428 20:33:58.660682  4397 layer_factory.hpp:77] Creating layer loss
I0428 20:33:58.660917  4397 net.cpp:124] Setting up loss
I0428 20:33:58.660926  4397 net.cpp:131] Top shape: (1)
I0428 20:33:58.660930  4397 net.cpp:134]     with loss weight 1
I0428 20:33:58.660943  4397 net.cpp:139] Memory required for data: 19201284
I0428 20:33:58.660948  4397 net.cpp:200] loss needs backward computation.
I0428 20:33:58.660951  4397 net.cpp:200] relu3 needs backward computation.
I0428 20:33:58.660954  4397 net.cpp:200] ip3 needs backward computation.
I0428 20:33:58.660957  4397 net.cpp:200] relu2 needs backward computation.
I0428 20:33:58.660959  4397 net.cpp:200] ip2 needs backward computation.
I0428 20:33:58.660962  4397 net.cpp:200] relu1 needs backward computation.
I0428 20:33:58.660965  4397 net.cpp:200] ip1 needs backward computation.
I0428 20:33:58.660969  4397 net.cpp:200] pool1 needs backward computation.
I0428 20:33:58.660971  4397 net.cpp:200] conv1 needs backward computation.
I0428 20:33:58.660974  4397 net.cpp:200] pool0 needs backward computation.
I0428 20:33:58.660977  4397 net.cpp:200] conv0 needs backward computation.
I0428 20:33:58.660981  4397 net.cpp:202] mnist does not need backward computation.
I0428 20:33:58.660984  4397 net.cpp:244] This network produces output loss
I0428 20:33:58.660995  4397 net.cpp:257] Network initialization done.
I0428 20:33:58.661324  4397 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1597.prototxt
I0428 20:33:58.661394  4397 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:58.661487  4397 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:58.661571  4397 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:58.661612  4397 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:58.661628  4397 net.cpp:86] Creating Layer mnist
I0428 20:33:58.661635  4397 net.cpp:382] mnist -> data
I0428 20:33:58.661643  4397 net.cpp:382] mnist -> label
I0428 20:33:58.661739  4397 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:58.663630  4397 net.cpp:124] Setting up mnist
I0428 20:33:58.663643  4397 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:58.663663  4397 net.cpp:131] Top shape: 100 (100)
I0428 20:33:58.663666  4397 net.cpp:139] Memory required for data: 314000
I0428 20:33:58.663671  4397 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:58.663689  4397 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:58.663692  4397 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:58.663697  4397 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:58.663703  4397 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:58.663802  4397 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:58.663825  4397 net.cpp:131] Top shape: 100 (100)
I0428 20:33:58.663828  4397 net.cpp:131] Top shape: 100 (100)
I0428 20:33:58.663831  4397 net.cpp:139] Memory required for data: 314800
I0428 20:33:58.663835  4397 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:58.663844  4397 net.cpp:86] Creating Layer conv0
I0428 20:33:58.663847  4397 net.cpp:408] conv0 <- data
I0428 20:33:58.663853  4397 net.cpp:382] conv0 -> conv0
I0428 20:33:58.665627  4397 net.cpp:124] Setting up conv0
I0428 20:33:58.665640  4397 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:58.665643  4397 net.cpp:139] Memory required for data: 23354800
I0428 20:33:58.665653  4397 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:58.665658  4397 net.cpp:86] Creating Layer pool0
I0428 20:33:58.665662  4397 net.cpp:408] pool0 <- conv0
I0428 20:33:58.665666  4397 net.cpp:382] pool0 -> pool0
I0428 20:33:58.665719  4397 net.cpp:124] Setting up pool0
I0428 20:33:58.665724  4397 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:58.665726  4397 net.cpp:139] Memory required for data: 29114800
I0428 20:33:58.665729  4397 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:58.665737  4397 net.cpp:86] Creating Layer conv1
I0428 20:33:58.665740  4397 net.cpp:408] conv1 <- pool0
I0428 20:33:58.665746  4397 net.cpp:382] conv1 -> conv1
I0428 20:33:58.667600  4397 net.cpp:124] Setting up conv1
I0428 20:33:58.667634  4397 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:58.667639  4397 net.cpp:139] Memory required for data: 29754800
I0428 20:33:58.667647  4397 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:58.667654  4397 net.cpp:86] Creating Layer pool1
I0428 20:33:58.667659  4397 net.cpp:408] pool1 <- conv1
I0428 20:33:58.667665  4397 net.cpp:382] pool1 -> pool1
I0428 20:33:58.667717  4397 net.cpp:124] Setting up pool1
I0428 20:33:58.667724  4397 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:58.667726  4397 net.cpp:139] Memory required for data: 29914800
I0428 20:33:58.667735  4397 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:58.667742  4397 net.cpp:86] Creating Layer ip1
I0428 20:33:58.667744  4397 net.cpp:408] ip1 <- pool1
I0428 20:33:58.667750  4397 net.cpp:382] ip1 -> ip1
I0428 20:33:58.667970  4397 net.cpp:124] Setting up ip1
I0428 20:33:58.667990  4397 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:58.667994  4397 net.cpp:139] Memory required for data: 29934800
I0428 20:33:58.668001  4397 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:58.668007  4397 net.cpp:86] Creating Layer relu1
I0428 20:33:58.668010  4397 net.cpp:408] relu1 <- ip1
I0428 20:33:58.668016  4397 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:58.668180  4397 net.cpp:124] Setting up relu1
I0428 20:33:58.668190  4397 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:58.668200  4397 net.cpp:139] Memory required for data: 29954800
I0428 20:33:58.668202  4397 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:58.668216  4397 net.cpp:86] Creating Layer ip2
I0428 20:33:58.668220  4397 net.cpp:408] ip2 <- ip1
I0428 20:33:58.668231  4397 net.cpp:382] ip2 -> ip2
I0428 20:33:58.668421  4397 net.cpp:124] Setting up ip2
I0428 20:33:58.668436  4397 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:58.668442  4397 net.cpp:139] Memory required for data: 29974800
I0428 20:33:58.668450  4397 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:58.668458  4397 net.cpp:86] Creating Layer relu2
I0428 20:33:58.668464  4397 net.cpp:408] relu2 <- ip2
I0428 20:33:58.668472  4397 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:58.668751  4397 net.cpp:124] Setting up relu2
I0428 20:33:58.668763  4397 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:58.668766  4397 net.cpp:139] Memory required for data: 29994800
I0428 20:33:58.668771  4397 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:58.668777  4397 net.cpp:86] Creating Layer ip3
I0428 20:33:58.668781  4397 net.cpp:408] ip3 <- ip2
I0428 20:33:58.668787  4397 net.cpp:382] ip3 -> ip3
I0428 20:33:58.668921  4397 net.cpp:124] Setting up ip3
I0428 20:33:58.668931  4397 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:58.668941  4397 net.cpp:139] Memory required for data: 29998800
I0428 20:33:58.668949  4397 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:58.668956  4397 net.cpp:86] Creating Layer relu3
I0428 20:33:58.668958  4397 net.cpp:408] relu3 <- ip3
I0428 20:33:58.668964  4397 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:58.669818  4397 net.cpp:124] Setting up relu3
I0428 20:33:58.669829  4397 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:58.669850  4397 net.cpp:139] Memory required for data: 30002800
I0428 20:33:58.669854  4397 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:58.669860  4397 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:58.669864  4397 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:58.669868  4397 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:58.669874  4397 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:58.669939  4397 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:58.669947  4397 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:58.669951  4397 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:58.669960  4397 net.cpp:139] Memory required for data: 30010800
I0428 20:33:58.669962  4397 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:58.669968  4397 net.cpp:86] Creating Layer accuracy
I0428 20:33:58.669972  4397 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:58.669987  4397 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:58.669991  4397 net.cpp:382] accuracy -> accuracy
I0428 20:33:58.669999  4397 net.cpp:124] Setting up accuracy
I0428 20:33:58.670003  4397 net.cpp:131] Top shape: (1)
I0428 20:33:58.670006  4397 net.cpp:139] Memory required for data: 30010804
I0428 20:33:58.670009  4397 layer_factory.hpp:77] Creating layer loss
I0428 20:33:58.670014  4397 net.cpp:86] Creating Layer loss
I0428 20:33:58.670017  4397 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:58.670022  4397 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:58.670027  4397 net.cpp:382] loss -> loss
I0428 20:33:58.670033  4397 layer_factory.hpp:77] Creating layer loss
I0428 20:33:58.670289  4397 net.cpp:124] Setting up loss
I0428 20:33:58.670297  4397 net.cpp:131] Top shape: (1)
I0428 20:33:58.670300  4397 net.cpp:134]     with loss weight 1
I0428 20:33:58.670316  4397 net.cpp:139] Memory required for data: 30010808
I0428 20:33:58.670321  4397 net.cpp:200] loss needs backward computation.
I0428 20:33:58.670325  4397 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:58.670328  4397 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:58.670331  4397 net.cpp:200] relu3 needs backward computation.
I0428 20:33:58.670341  4397 net.cpp:200] ip3 needs backward computation.
I0428 20:33:58.670343  4397 net.cpp:200] relu2 needs backward computation.
I0428 20:33:58.670346  4397 net.cpp:200] ip2 needs backward computation.
I0428 20:33:58.670348  4397 net.cpp:200] relu1 needs backward computation.
I0428 20:33:58.670351  4397 net.cpp:200] ip1 needs backward computation.
I0428 20:33:58.670354  4397 net.cpp:200] pool1 needs backward computation.
I0428 20:33:58.670357  4397 net.cpp:200] conv1 needs backward computation.
I0428 20:33:58.670361  4397 net.cpp:200] pool0 needs backward computation.
I0428 20:33:58.670364  4397 net.cpp:200] conv0 needs backward computation.
I0428 20:33:58.670367  4397 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:58.670372  4397 net.cpp:202] mnist does not need backward computation.
I0428 20:33:58.670374  4397 net.cpp:244] This network produces output accuracy
I0428 20:33:58.670377  4397 net.cpp:244] This network produces output loss
I0428 20:33:58.670389  4397 net.cpp:257] Network initialization done.
I0428 20:33:58.670430  4397 solver.cpp:56] Solver scaffolding done.
I0428 20:33:58.670809  4397 caffe.cpp:248] Starting Optimization
I0428 20:33:58.670816  4397 solver.cpp:273] Solving LeNet
I0428 20:33:58.670820  4397 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:58.671654  4397 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:58.769574  4404 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:58.772056  4397 solver.cpp:398]     Test net output #0: accuracy = 0.1178
I0428 20:33:58.772092  4397 solver.cpp:398]     Test net output #1: loss = 2.29702 (* 1 = 2.29702 loss)
I0428 20:33:58.777596  4397 solver.cpp:219] Iteration 0 (2.13273 iter/s, 0.106741s/100 iters), loss = 2.30046
I0428 20:33:58.777636  4397 solver.cpp:238]     Train net output #0: loss = 2.30046 (* 1 = 2.30046 loss)
I0428 20:33:58.777647  4397 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:58.990922  4397 solver.cpp:219] Iteration 100 (468.861 iter/s, 0.213283s/100 iters), loss = 0.299568
I0428 20:33:58.990955  4397 solver.cpp:238]     Train net output #0: loss = 0.299568 (* 1 = 0.299568 loss)
I0428 20:33:58.990963  4397 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:59.205294  4397 solver.cpp:219] Iteration 200 (466.592 iter/s, 0.21432s/100 iters), loss = 0.129677
I0428 20:33:59.205338  4397 solver.cpp:238]     Train net output #0: loss = 0.129677 (* 1 = 0.129677 loss)
I0428 20:33:59.205349  4397 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:59.421007  4397 solver.cpp:219] Iteration 300 (463.703 iter/s, 0.215655s/100 iters), loss = 0.22441
I0428 20:33:59.421053  4397 solver.cpp:238]     Train net output #0: loss = 0.22441 (* 1 = 0.22441 loss)
I0428 20:33:59.421066  4397 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:59.636653  4397 solver.cpp:219] Iteration 400 (463.852 iter/s, 0.215586s/100 iters), loss = 0.0667756
I0428 20:33:59.636687  4397 solver.cpp:238]     Train net output #0: loss = 0.0667757 (* 1 = 0.0667757 loss)
I0428 20:33:59.636695  4397 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:59.847662  4397 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:59.947273  4404 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:59.950073  4397 solver.cpp:398]     Test net output #0: accuracy = 0.9645
I0428 20:33:59.950101  4397 solver.cpp:398]     Test net output #1: loss = 0.113795 (* 1 = 0.113795 loss)
I0428 20:33:59.952145  4397 solver.cpp:219] Iteration 500 (317.019 iter/s, 0.315439s/100 iters), loss = 0.19244
I0428 20:33:59.952174  4397 solver.cpp:238]     Train net output #0: loss = 0.19244 (* 1 = 0.19244 loss)
I0428 20:33:59.952199  4397 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:00.176050  4397 solver.cpp:219] Iteration 600 (446.714 iter/s, 0.223857s/100 iters), loss = 0.0791202
I0428 20:34:00.176092  4397 solver.cpp:238]     Train net output #0: loss = 0.0791203 (* 1 = 0.0791203 loss)
I0428 20:34:00.176103  4397 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:00.391480  4397 solver.cpp:219] Iteration 700 (464.311 iter/s, 0.215373s/100 iters), loss = 0.148104
I0428 20:34:00.391516  4397 solver.cpp:238]     Train net output #0: loss = 0.148104 (* 1 = 0.148104 loss)
I0428 20:34:00.391525  4397 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:00.609124  4397 solver.cpp:219] Iteration 800 (459.583 iter/s, 0.217589s/100 iters), loss = 0.229993
I0428 20:34:00.609169  4397 solver.cpp:238]     Train net output #0: loss = 0.229993 (* 1 = 0.229993 loss)
I0428 20:34:00.609177  4397 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:00.825310  4397 solver.cpp:219] Iteration 900 (462.692 iter/s, 0.216126s/100 iters), loss = 0.142794
I0428 20:34:00.825346  4397 solver.cpp:238]     Train net output #0: loss = 0.142794 (* 1 = 0.142794 loss)
I0428 20:34:00.825356  4397 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:00.896648  4403 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:01.037145  4397 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:01.040089  4397 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:01.041762  4397 solver.cpp:311] Iteration 1000, loss = 0.139947
I0428 20:34:01.041785  4397 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:01.141587  4404 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:01.145110  4397 solver.cpp:398]     Test net output #0: accuracy = 0.9775
I0428 20:34:01.145145  4397 solver.cpp:398]     Test net output #1: loss = 0.0680669 (* 1 = 0.0680669 loss)
I0428 20:34:01.145150  4397 solver.cpp:316] Optimization Done.
I0428 20:34:01.145170  4397 caffe.cpp:259] Optimization Done.
