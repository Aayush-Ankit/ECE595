I0428 20:06:35.637984 30908 caffe.cpp:218] Using GPUs 0
I0428 20:06:35.673768 30908 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:36.221858 30908 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1032.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:36.221995 30908 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1032.prototxt
I0428 20:06:36.222414 30908 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:36.222432 30908 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:36.222534 30908 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:36.222614 30908 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:36.222712 30908 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:36.222736 30908 net.cpp:86] Creating Layer mnist
I0428 20:06:36.222744 30908 net.cpp:382] mnist -> data
I0428 20:06:36.222767 30908 net.cpp:382] mnist -> label
I0428 20:06:36.223863 30908 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:36.226327 30908 net.cpp:124] Setting up mnist
I0428 20:06:36.226344 30908 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:36.226352 30908 net.cpp:131] Top shape: 64 (64)
I0428 20:06:36.226356 30908 net.cpp:139] Memory required for data: 200960
I0428 20:06:36.226363 30908 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:36.226378 30908 net.cpp:86] Creating Layer conv0
I0428 20:06:36.226399 30908 net.cpp:408] conv0 <- data
I0428 20:06:36.226413 30908 net.cpp:382] conv0 -> conv0
I0428 20:06:36.516880 30908 net.cpp:124] Setting up conv0
I0428 20:06:36.516909 30908 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:36.516914 30908 net.cpp:139] Memory required for data: 3887360
I0428 20:06:36.516932 30908 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:36.516947 30908 net.cpp:86] Creating Layer pool0
I0428 20:06:36.516952 30908 net.cpp:408] pool0 <- conv0
I0428 20:06:36.516957 30908 net.cpp:382] pool0 -> pool0
I0428 20:06:36.517011 30908 net.cpp:124] Setting up pool0
I0428 20:06:36.517019 30908 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:36.517022 30908 net.cpp:139] Memory required for data: 4808960
I0428 20:06:36.517025 30908 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:36.517038 30908 net.cpp:86] Creating Layer conv1
I0428 20:06:36.517041 30908 net.cpp:408] conv1 <- pool0
I0428 20:06:36.517048 30908 net.cpp:382] conv1 -> conv1
I0428 20:06:36.520206 30908 net.cpp:124] Setting up conv1
I0428 20:06:36.520225 30908 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:36.520229 30908 net.cpp:139] Memory required for data: 4890880
I0428 20:06:36.520239 30908 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:36.520248 30908 net.cpp:86] Creating Layer pool1
I0428 20:06:36.520253 30908 net.cpp:408] pool1 <- conv1
I0428 20:06:36.520259 30908 net.cpp:382] pool1 -> pool1
I0428 20:06:36.520303 30908 net.cpp:124] Setting up pool1
I0428 20:06:36.520310 30908 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:36.520313 30908 net.cpp:139] Memory required for data: 4911360
I0428 20:06:36.520318 30908 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:36.520326 30908 net.cpp:86] Creating Layer ip1
I0428 20:06:36.520329 30908 net.cpp:408] ip1 <- pool1
I0428 20:06:36.520335 30908 net.cpp:382] ip1 -> ip1
I0428 20:06:36.520459 30908 net.cpp:124] Setting up ip1
I0428 20:06:36.520468 30908 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:36.520473 30908 net.cpp:139] Memory required for data: 4913920
I0428 20:06:36.520480 30908 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:36.520488 30908 net.cpp:86] Creating Layer relu1
I0428 20:06:36.520490 30908 net.cpp:408] relu1 <- ip1
I0428 20:06:36.520495 30908 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:36.520695 30908 net.cpp:124] Setting up relu1
I0428 20:06:36.520705 30908 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:36.520709 30908 net.cpp:139] Memory required for data: 4916480
I0428 20:06:36.520712 30908 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:36.520720 30908 net.cpp:86] Creating Layer ip2
I0428 20:06:36.520725 30908 net.cpp:408] ip2 <- ip1
I0428 20:06:36.520730 30908 net.cpp:382] ip2 -> ip2
I0428 20:06:36.520862 30908 net.cpp:124] Setting up ip2
I0428 20:06:36.520872 30908 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:36.520876 30908 net.cpp:139] Memory required for data: 4929280
I0428 20:06:36.520884 30908 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:36.520890 30908 net.cpp:86] Creating Layer relu2
I0428 20:06:36.520895 30908 net.cpp:408] relu2 <- ip2
I0428 20:06:36.520900 30908 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:36.521759 30908 net.cpp:124] Setting up relu2
I0428 20:06:36.521773 30908 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:36.521777 30908 net.cpp:139] Memory required for data: 4942080
I0428 20:06:36.521781 30908 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:36.521791 30908 net.cpp:86] Creating Layer ip3
I0428 20:06:36.521795 30908 net.cpp:408] ip3 <- ip2
I0428 20:06:36.521802 30908 net.cpp:382] ip3 -> ip3
I0428 20:06:36.521929 30908 net.cpp:124] Setting up ip3
I0428 20:06:36.521939 30908 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:36.521941 30908 net.cpp:139] Memory required for data: 4944640
I0428 20:06:36.521950 30908 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:36.521957 30908 net.cpp:86] Creating Layer relu3
I0428 20:06:36.521960 30908 net.cpp:408] relu3 <- ip3
I0428 20:06:36.521966 30908 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:36.522181 30908 net.cpp:124] Setting up relu3
I0428 20:06:36.522191 30908 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:36.522194 30908 net.cpp:139] Memory required for data: 4947200
I0428 20:06:36.522197 30908 layer_factory.hpp:77] Creating layer loss
I0428 20:06:36.522205 30908 net.cpp:86] Creating Layer loss
I0428 20:06:36.522208 30908 net.cpp:408] loss <- ip3
I0428 20:06:36.522213 30908 net.cpp:408] loss <- label
I0428 20:06:36.522222 30908 net.cpp:382] loss -> loss
I0428 20:06:36.522238 30908 layer_factory.hpp:77] Creating layer loss
I0428 20:06:36.522527 30908 net.cpp:124] Setting up loss
I0428 20:06:36.522538 30908 net.cpp:131] Top shape: (1)
I0428 20:06:36.522541 30908 net.cpp:134]     with loss weight 1
I0428 20:06:36.522558 30908 net.cpp:139] Memory required for data: 4947204
I0428 20:06:36.522562 30908 net.cpp:200] loss needs backward computation.
I0428 20:06:36.522567 30908 net.cpp:200] relu3 needs backward computation.
I0428 20:06:36.522569 30908 net.cpp:200] ip3 needs backward computation.
I0428 20:06:36.522573 30908 net.cpp:200] relu2 needs backward computation.
I0428 20:06:36.522577 30908 net.cpp:200] ip2 needs backward computation.
I0428 20:06:36.522579 30908 net.cpp:200] relu1 needs backward computation.
I0428 20:06:36.522583 30908 net.cpp:200] ip1 needs backward computation.
I0428 20:06:36.522586 30908 net.cpp:200] pool1 needs backward computation.
I0428 20:06:36.522589 30908 net.cpp:200] conv1 needs backward computation.
I0428 20:06:36.522593 30908 net.cpp:200] pool0 needs backward computation.
I0428 20:06:36.522596 30908 net.cpp:200] conv0 needs backward computation.
I0428 20:06:36.522600 30908 net.cpp:202] mnist does not need backward computation.
I0428 20:06:36.522603 30908 net.cpp:244] This network produces output loss
I0428 20:06:36.522615 30908 net.cpp:257] Network initialization done.
I0428 20:06:36.523006 30908 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1032.prototxt
I0428 20:06:36.523037 30908 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:36.523149 30908 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:36.523252 30908 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:36.523303 30908 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:36.523317 30908 net.cpp:86] Creating Layer mnist
I0428 20:06:36.523324 30908 net.cpp:382] mnist -> data
I0428 20:06:36.523332 30908 net.cpp:382] mnist -> label
I0428 20:06:36.523439 30908 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:36.525655 30908 net.cpp:124] Setting up mnist
I0428 20:06:36.525684 30908 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:36.525691 30908 net.cpp:131] Top shape: 100 (100)
I0428 20:06:36.525696 30908 net.cpp:139] Memory required for data: 314000
I0428 20:06:36.525699 30908 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:36.525707 30908 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:36.525712 30908 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:36.525717 30908 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:36.525724 30908 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:36.525825 30908 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:36.525835 30908 net.cpp:131] Top shape: 100 (100)
I0428 20:06:36.525838 30908 net.cpp:131] Top shape: 100 (100)
I0428 20:06:36.525841 30908 net.cpp:139] Memory required for data: 314800
I0428 20:06:36.525846 30908 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:36.525856 30908 net.cpp:86] Creating Layer conv0
I0428 20:06:36.525861 30908 net.cpp:408] conv0 <- data
I0428 20:06:36.525868 30908 net.cpp:382] conv0 -> conv0
I0428 20:06:36.527750 30908 net.cpp:124] Setting up conv0
I0428 20:06:36.527766 30908 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:36.527771 30908 net.cpp:139] Memory required for data: 6074800
I0428 20:06:36.527782 30908 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:36.527791 30908 net.cpp:86] Creating Layer pool0
I0428 20:06:36.527796 30908 net.cpp:408] pool0 <- conv0
I0428 20:06:36.527802 30908 net.cpp:382] pool0 -> pool0
I0428 20:06:36.527847 30908 net.cpp:124] Setting up pool0
I0428 20:06:36.527853 30908 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:36.527855 30908 net.cpp:139] Memory required for data: 7514800
I0428 20:06:36.527858 30908 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:36.527869 30908 net.cpp:86] Creating Layer conv1
I0428 20:06:36.527873 30908 net.cpp:408] conv1 <- pool0
I0428 20:06:36.527882 30908 net.cpp:382] conv1 -> conv1
I0428 20:06:36.530261 30908 net.cpp:124] Setting up conv1
I0428 20:06:36.530277 30908 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:36.530282 30908 net.cpp:139] Memory required for data: 7642800
I0428 20:06:36.530293 30908 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:36.530302 30908 net.cpp:86] Creating Layer pool1
I0428 20:06:36.530305 30908 net.cpp:408] pool1 <- conv1
I0428 20:06:36.530313 30908 net.cpp:382] pool1 -> pool1
I0428 20:06:36.530364 30908 net.cpp:124] Setting up pool1
I0428 20:06:36.530371 30908 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:36.530375 30908 net.cpp:139] Memory required for data: 7674800
I0428 20:06:36.530378 30908 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:36.530387 30908 net.cpp:86] Creating Layer ip1
I0428 20:06:36.530391 30908 net.cpp:408] ip1 <- pool1
I0428 20:06:36.530397 30908 net.cpp:382] ip1 -> ip1
I0428 20:06:36.530561 30908 net.cpp:124] Setting up ip1
I0428 20:06:36.530571 30908 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:36.530586 30908 net.cpp:139] Memory required for data: 7678800
I0428 20:06:36.530596 30908 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:36.530606 30908 net.cpp:86] Creating Layer relu1
I0428 20:06:36.530609 30908 net.cpp:408] relu1 <- ip1
I0428 20:06:36.530616 30908 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:36.530823 30908 net.cpp:124] Setting up relu1
I0428 20:06:36.530835 30908 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:36.530846 30908 net.cpp:139] Memory required for data: 7682800
I0428 20:06:36.530850 30908 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:36.530860 30908 net.cpp:86] Creating Layer ip2
I0428 20:06:36.530866 30908 net.cpp:408] ip2 <- ip1
I0428 20:06:36.530872 30908 net.cpp:382] ip2 -> ip2
I0428 20:06:36.530999 30908 net.cpp:124] Setting up ip2
I0428 20:06:36.531009 30908 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:36.531013 30908 net.cpp:139] Memory required for data: 7702800
I0428 20:06:36.531019 30908 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:36.531025 30908 net.cpp:86] Creating Layer relu2
I0428 20:06:36.531029 30908 net.cpp:408] relu2 <- ip2
I0428 20:06:36.531034 30908 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:36.531231 30908 net.cpp:124] Setting up relu2
I0428 20:06:36.531240 30908 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:36.531244 30908 net.cpp:139] Memory required for data: 7722800
I0428 20:06:36.531249 30908 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:36.531255 30908 net.cpp:86] Creating Layer ip3
I0428 20:06:36.531258 30908 net.cpp:408] ip3 <- ip2
I0428 20:06:36.531265 30908 net.cpp:382] ip3 -> ip3
I0428 20:06:36.531404 30908 net.cpp:124] Setting up ip3
I0428 20:06:36.531411 30908 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:36.531415 30908 net.cpp:139] Memory required for data: 7726800
I0428 20:06:36.531424 30908 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:36.531431 30908 net.cpp:86] Creating Layer relu3
I0428 20:06:36.531435 30908 net.cpp:408] relu3 <- ip3
I0428 20:06:36.531440 30908 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:36.532392 30908 net.cpp:124] Setting up relu3
I0428 20:06:36.532407 30908 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:36.532411 30908 net.cpp:139] Memory required for data: 7730800
I0428 20:06:36.532415 30908 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:36.532423 30908 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:36.532428 30908 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:36.532434 30908 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:36.532441 30908 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:36.532490 30908 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:36.532500 30908 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:36.532503 30908 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:36.532506 30908 net.cpp:139] Memory required for data: 7738800
I0428 20:06:36.532510 30908 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:36.532516 30908 net.cpp:86] Creating Layer accuracy
I0428 20:06:36.532519 30908 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:36.532524 30908 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:36.532531 30908 net.cpp:382] accuracy -> accuracy
I0428 20:06:36.532541 30908 net.cpp:124] Setting up accuracy
I0428 20:06:36.532544 30908 net.cpp:131] Top shape: (1)
I0428 20:06:36.532548 30908 net.cpp:139] Memory required for data: 7738804
I0428 20:06:36.532552 30908 layer_factory.hpp:77] Creating layer loss
I0428 20:06:36.532557 30908 net.cpp:86] Creating Layer loss
I0428 20:06:36.532560 30908 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:36.532564 30908 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:36.532569 30908 net.cpp:382] loss -> loss
I0428 20:06:36.532577 30908 layer_factory.hpp:77] Creating layer loss
I0428 20:06:36.532877 30908 net.cpp:124] Setting up loss
I0428 20:06:36.532888 30908 net.cpp:131] Top shape: (1)
I0428 20:06:36.532892 30908 net.cpp:134]     with loss weight 1
I0428 20:06:36.532901 30908 net.cpp:139] Memory required for data: 7738808
I0428 20:06:36.532917 30908 net.cpp:200] loss needs backward computation.
I0428 20:06:36.532938 30908 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:36.532941 30908 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:36.532950 30908 net.cpp:200] relu3 needs backward computation.
I0428 20:06:36.532953 30908 net.cpp:200] ip3 needs backward computation.
I0428 20:06:36.532958 30908 net.cpp:200] relu2 needs backward computation.
I0428 20:06:36.532960 30908 net.cpp:200] ip2 needs backward computation.
I0428 20:06:36.532964 30908 net.cpp:200] relu1 needs backward computation.
I0428 20:06:36.532968 30908 net.cpp:200] ip1 needs backward computation.
I0428 20:06:36.532971 30908 net.cpp:200] pool1 needs backward computation.
I0428 20:06:36.532975 30908 net.cpp:200] conv1 needs backward computation.
I0428 20:06:36.532979 30908 net.cpp:200] pool0 needs backward computation.
I0428 20:06:36.532982 30908 net.cpp:200] conv0 needs backward computation.
I0428 20:06:36.532986 30908 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:36.532991 30908 net.cpp:202] mnist does not need backward computation.
I0428 20:06:36.532994 30908 net.cpp:244] This network produces output accuracy
I0428 20:06:36.532999 30908 net.cpp:244] This network produces output loss
I0428 20:06:36.533012 30908 net.cpp:257] Network initialization done.
I0428 20:06:36.533061 30908 solver.cpp:56] Solver scaffolding done.
I0428 20:06:36.533493 30908 caffe.cpp:248] Starting Optimization
I0428 20:06:36.533500 30908 solver.cpp:273] Solving LeNet
I0428 20:06:36.533504 30908 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:36.534476 30908 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:36.540676 30908 blocking_queue.cpp:49] Waiting for data
I0428 20:06:36.613487 30915 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:36.614127 30908 solver.cpp:398]     Test net output #0: accuracy = 0.1483
I0428 20:06:36.614151 30908 solver.cpp:398]     Test net output #1: loss = 2.31844 (* 1 = 2.31844 loss)
I0428 20:06:36.618219 30908 solver.cpp:219] Iteration 0 (0 iter/s, 0.0846818s/100 iters), loss = 2.31685
I0428 20:06:36.618250 30908 solver.cpp:238]     Train net output #0: loss = 2.31685 (* 1 = 2.31685 loss)
I0428 20:06:36.618264 30908 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:36.711426 30908 solver.cpp:219] Iteration 100 (1073.42 iter/s, 0.0931604s/100 iters), loss = 0.60221
I0428 20:06:36.711458 30908 solver.cpp:238]     Train net output #0: loss = 0.60221 (* 1 = 0.60221 loss)
I0428 20:06:36.711465 30908 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:36.803814 30908 solver.cpp:219] Iteration 200 (1082.88 iter/s, 0.0923464s/100 iters), loss = 0.4412
I0428 20:06:36.803845 30908 solver.cpp:238]     Train net output #0: loss = 0.4412 (* 1 = 0.4412 loss)
I0428 20:06:36.803853 30908 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:36.896386 30908 solver.cpp:219] Iteration 300 (1080.72 iter/s, 0.0925307s/100 iters), loss = 0.339876
I0428 20:06:36.896417 30908 solver.cpp:238]     Train net output #0: loss = 0.339876 (* 1 = 0.339876 loss)
I0428 20:06:36.896425 30908 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:36.986847 30908 solver.cpp:219] Iteration 400 (1105.92 iter/s, 0.0904221s/100 iters), loss = 0.190538
I0428 20:06:36.986872 30908 solver.cpp:238]     Train net output #0: loss = 0.190538 (* 1 = 0.190538 loss)
I0428 20:06:36.986878 30908 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:37.086927 30908 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:37.161942 30915 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:37.162580 30908 solver.cpp:398]     Test net output #0: accuracy = 0.9232
I0428 20:06:37.162605 30908 solver.cpp:398]     Test net output #1: loss = 0.252129 (* 1 = 0.252129 loss)
I0428 20:06:37.163550 30908 solver.cpp:219] Iteration 500 (566.051 iter/s, 0.176663s/100 iters), loss = 0.241014
I0428 20:06:37.163594 30908 solver.cpp:238]     Train net output #0: loss = 0.241014 (* 1 = 0.241014 loss)
I0428 20:06:37.163624 30908 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:37.258735 30908 solver.cpp:219] Iteration 600 (1051.16 iter/s, 0.0951334s/100 iters), loss = 0.179261
I0428 20:06:37.258766 30908 solver.cpp:238]     Train net output #0: loss = 0.179261 (* 1 = 0.179261 loss)
I0428 20:06:37.258774 30908 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:37.358368 30908 solver.cpp:219] Iteration 700 (1004.15 iter/s, 0.0995872s/100 iters), loss = 0.247468
I0428 20:06:37.358418 30908 solver.cpp:238]     Train net output #0: loss = 0.247469 (* 1 = 0.247469 loss)
I0428 20:06:37.358430 30908 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:37.458695 30908 solver.cpp:219] Iteration 800 (997.316 iter/s, 0.100269s/100 iters), loss = 0.38353
I0428 20:06:37.458729 30908 solver.cpp:238]     Train net output #0: loss = 0.38353 (* 1 = 0.38353 loss)
I0428 20:06:37.458736 30908 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:37.551941 30908 solver.cpp:219] Iteration 900 (1072.93 iter/s, 0.0932024s/100 iters), loss = 0.23897
I0428 20:06:37.551973 30908 solver.cpp:238]     Train net output #0: loss = 0.23897 (* 1 = 0.23897 loss)
I0428 20:06:37.551980 30908 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:37.582710 30914 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:37.642922 30908 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:37.643772 30908 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:37.644364 30908 solver.cpp:311] Iteration 1000, loss = 0.270306
I0428 20:06:37.644383 30908 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:37.711874 30915 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:37.712494 30908 solver.cpp:398]     Test net output #0: accuracy = 0.9628
I0428 20:06:37.712517 30908 solver.cpp:398]     Test net output #1: loss = 0.120523 (* 1 = 0.120523 loss)
I0428 20:06:37.712523 30908 solver.cpp:316] Optimization Done.
I0428 20:06:37.712527 30908 caffe.cpp:259] Optimization Done.
