I0428 19:56:20.053195 28411 caffe.cpp:218] Using GPUs 0
I0428 19:56:20.091781 28411 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:20.604660 28411 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test756.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:20.604838 28411 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test756.prototxt
I0428 19:56:20.605496 28411 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:20.605526 28411 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:20.605687 28411 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:20.605806 28411 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:20.605937 28411 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:20.605973 28411 net.cpp:86] Creating Layer mnist
I0428 19:56:20.605988 28411 net.cpp:382] mnist -> data
I0428 19:56:20.606019 28411 net.cpp:382] mnist -> label
I0428 19:56:20.607580 28411 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:20.610435 28411 net.cpp:124] Setting up mnist
I0428 19:56:20.610453 28411 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:20.610460 28411 net.cpp:131] Top shape: 64 (64)
I0428 19:56:20.610463 28411 net.cpp:139] Memory required for data: 200960
I0428 19:56:20.610471 28411 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:20.610502 28411 net.cpp:86] Creating Layer conv0
I0428 19:56:20.610529 28411 net.cpp:408] conv0 <- data
I0428 19:56:20.610560 28411 net.cpp:382] conv0 -> conv0
I0428 19:56:20.885603 28411 net.cpp:124] Setting up conv0
I0428 19:56:20.885645 28411 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:20.885649 28411 net.cpp:139] Memory required for data: 1675520
I0428 19:56:20.885664 28411 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:20.885676 28411 net.cpp:86] Creating Layer pool0
I0428 19:56:20.885681 28411 net.cpp:408] pool0 <- conv0
I0428 19:56:20.885689 28411 net.cpp:382] pool0 -> pool0
I0428 19:56:20.885746 28411 net.cpp:124] Setting up pool0
I0428 19:56:20.885758 28411 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:20.885763 28411 net.cpp:139] Memory required for data: 2044160
I0428 19:56:20.885768 28411 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:20.885783 28411 net.cpp:86] Creating Layer conv1
I0428 19:56:20.885788 28411 net.cpp:408] conv1 <- pool0
I0428 19:56:20.885795 28411 net.cpp:382] conv1 -> conv1
I0428 19:56:20.888346 28411 net.cpp:124] Setting up conv1
I0428 19:56:20.888376 28411 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:20.888381 28411 net.cpp:139] Memory required for data: 2076928
I0428 19:56:20.888389 28411 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:20.888398 28411 net.cpp:86] Creating Layer pool1
I0428 19:56:20.888402 28411 net.cpp:408] pool1 <- conv1
I0428 19:56:20.888407 28411 net.cpp:382] pool1 -> pool1
I0428 19:56:20.888494 28411 net.cpp:124] Setting up pool1
I0428 19:56:20.888506 28411 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:20.888512 28411 net.cpp:139] Memory required for data: 2085120
I0428 19:56:20.888517 28411 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:20.888530 28411 net.cpp:86] Creating Layer ip1
I0428 19:56:20.888536 28411 net.cpp:408] ip1 <- pool1
I0428 19:56:20.888545 28411 net.cpp:382] ip1 -> ip1
I0428 19:56:20.888685 28411 net.cpp:124] Setting up ip1
I0428 19:56:20.888705 28411 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:20.888710 28411 net.cpp:139] Memory required for data: 2087680
I0428 19:56:20.888721 28411 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:20.888747 28411 net.cpp:86] Creating Layer relu1
I0428 19:56:20.888752 28411 net.cpp:408] relu1 <- ip1
I0428 19:56:20.888761 28411 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:20.889017 28411 net.cpp:124] Setting up relu1
I0428 19:56:20.889030 28411 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:20.889035 28411 net.cpp:139] Memory required for data: 2090240
I0428 19:56:20.889040 28411 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:20.889050 28411 net.cpp:86] Creating Layer ip2
I0428 19:56:20.889055 28411 net.cpp:408] ip2 <- ip1
I0428 19:56:20.889062 28411 net.cpp:382] ip2 -> ip2
I0428 19:56:20.889219 28411 net.cpp:124] Setting up ip2
I0428 19:56:20.889246 28411 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:20.889251 28411 net.cpp:139] Memory required for data: 2096640
I0428 19:56:20.889261 28411 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:20.889272 28411 net.cpp:86] Creating Layer relu2
I0428 19:56:20.889278 28411 net.cpp:408] relu2 <- ip2
I0428 19:56:20.889286 28411 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:20.890426 28411 net.cpp:124] Setting up relu2
I0428 19:56:20.890460 28411 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:20.890466 28411 net.cpp:139] Memory required for data: 2103040
I0428 19:56:20.890471 28411 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:20.890496 28411 net.cpp:86] Creating Layer ip3
I0428 19:56:20.890501 28411 net.cpp:408] ip3 <- ip2
I0428 19:56:20.890512 28411 net.cpp:382] ip3 -> ip3
I0428 19:56:20.890697 28411 net.cpp:124] Setting up ip3
I0428 19:56:20.890712 28411 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:20.890717 28411 net.cpp:139] Memory required for data: 2105600
I0428 19:56:20.890732 28411 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:20.890740 28411 net.cpp:86] Creating Layer relu3
I0428 19:56:20.890745 28411 net.cpp:408] relu3 <- ip3
I0428 19:56:20.890754 28411 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:20.891047 28411 net.cpp:124] Setting up relu3
I0428 19:56:20.891059 28411 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:20.891065 28411 net.cpp:139] Memory required for data: 2108160
I0428 19:56:20.891070 28411 layer_factory.hpp:77] Creating layer loss
I0428 19:56:20.891078 28411 net.cpp:86] Creating Layer loss
I0428 19:56:20.891083 28411 net.cpp:408] loss <- ip3
I0428 19:56:20.891089 28411 net.cpp:408] loss <- label
I0428 19:56:20.891099 28411 net.cpp:382] loss -> loss
I0428 19:56:20.891119 28411 layer_factory.hpp:77] Creating layer loss
I0428 19:56:20.891486 28411 net.cpp:124] Setting up loss
I0428 19:56:20.891530 28411 net.cpp:131] Top shape: (1)
I0428 19:56:20.891535 28411 net.cpp:134]     with loss weight 1
I0428 19:56:20.891568 28411 net.cpp:139] Memory required for data: 2108164
I0428 19:56:20.891574 28411 net.cpp:200] loss needs backward computation.
I0428 19:56:20.891580 28411 net.cpp:200] relu3 needs backward computation.
I0428 19:56:20.891585 28411 net.cpp:200] ip3 needs backward computation.
I0428 19:56:20.891605 28411 net.cpp:200] relu2 needs backward computation.
I0428 19:56:20.891609 28411 net.cpp:200] ip2 needs backward computation.
I0428 19:56:20.891615 28411 net.cpp:200] relu1 needs backward computation.
I0428 19:56:20.891619 28411 net.cpp:200] ip1 needs backward computation.
I0428 19:56:20.891625 28411 net.cpp:200] pool1 needs backward computation.
I0428 19:56:20.891630 28411 net.cpp:200] conv1 needs backward computation.
I0428 19:56:20.891636 28411 net.cpp:200] pool0 needs backward computation.
I0428 19:56:20.891641 28411 net.cpp:200] conv0 needs backward computation.
I0428 19:56:20.891647 28411 net.cpp:202] mnist does not need backward computation.
I0428 19:56:20.891651 28411 net.cpp:244] This network produces output loss
I0428 19:56:20.891669 28411 net.cpp:257] Network initialization done.
I0428 19:56:20.892258 28411 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test756.prototxt
I0428 19:56:20.892324 28411 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:20.892487 28411 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:20.892608 28411 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:20.892664 28411 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:20.892680 28411 net.cpp:86] Creating Layer mnist
I0428 19:56:20.892689 28411 net.cpp:382] mnist -> data
I0428 19:56:20.892700 28411 net.cpp:382] mnist -> label
I0428 19:56:20.892879 28411 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:20.895606 28411 net.cpp:124] Setting up mnist
I0428 19:56:20.895619 28411 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:20.895624 28411 net.cpp:131] Top shape: 100 (100)
I0428 19:56:20.895627 28411 net.cpp:139] Memory required for data: 314000
I0428 19:56:20.895632 28411 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:20.895663 28411 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:20.895670 28411 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:20.895678 28411 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:20.895689 28411 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:20.895747 28411 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:20.895764 28411 net.cpp:131] Top shape: 100 (100)
I0428 19:56:20.895771 28411 net.cpp:131] Top shape: 100 (100)
I0428 19:56:20.895776 28411 net.cpp:139] Memory required for data: 314800
I0428 19:56:20.895781 28411 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:20.895794 28411 net.cpp:86] Creating Layer conv0
I0428 19:56:20.895799 28411 net.cpp:408] conv0 <- data
I0428 19:56:20.895809 28411 net.cpp:382] conv0 -> conv0
I0428 19:56:20.898079 28411 net.cpp:124] Setting up conv0
I0428 19:56:20.898093 28411 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:20.898097 28411 net.cpp:139] Memory required for data: 2618800
I0428 19:56:20.898108 28411 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:20.898116 28411 net.cpp:86] Creating Layer pool0
I0428 19:56:20.898121 28411 net.cpp:408] pool0 <- conv0
I0428 19:56:20.898128 28411 net.cpp:382] pool0 -> pool0
I0428 19:56:20.898197 28411 net.cpp:124] Setting up pool0
I0428 19:56:20.898226 28411 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:20.898231 28411 net.cpp:139] Memory required for data: 3194800
I0428 19:56:20.898237 28411 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:20.898252 28411 net.cpp:86] Creating Layer conv1
I0428 19:56:20.898257 28411 net.cpp:408] conv1 <- pool0
I0428 19:56:20.898267 28411 net.cpp:382] conv1 -> conv1
I0428 19:56:20.901221 28411 net.cpp:124] Setting up conv1
I0428 19:56:20.901234 28411 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:20.901238 28411 net.cpp:139] Memory required for data: 3246000
I0428 19:56:20.901247 28411 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:20.901254 28411 net.cpp:86] Creating Layer pool1
I0428 19:56:20.901259 28411 net.cpp:408] pool1 <- conv1
I0428 19:56:20.901269 28411 net.cpp:382] pool1 -> pool1
I0428 19:56:20.901338 28411 net.cpp:124] Setting up pool1
I0428 19:56:20.901353 28411 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:20.901366 28411 net.cpp:139] Memory required for data: 3258800
I0428 19:56:20.901371 28411 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:20.901382 28411 net.cpp:86] Creating Layer ip1
I0428 19:56:20.901387 28411 net.cpp:408] ip1 <- pool1
I0428 19:56:20.901396 28411 net.cpp:382] ip1 -> ip1
I0428 19:56:20.901552 28411 net.cpp:124] Setting up ip1
I0428 19:56:20.901563 28411 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:20.901582 28411 net.cpp:139] Memory required for data: 3262800
I0428 19:56:20.901593 28411 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:20.901607 28411 net.cpp:86] Creating Layer relu1
I0428 19:56:20.901612 28411 net.cpp:408] relu1 <- ip1
I0428 19:56:20.901628 28411 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:20.901872 28411 net.cpp:124] Setting up relu1
I0428 19:56:20.901885 28411 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:20.901890 28411 net.cpp:139] Memory required for data: 3266800
I0428 19:56:20.901895 28411 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:20.901911 28411 net.cpp:86] Creating Layer ip2
I0428 19:56:20.901916 28411 net.cpp:408] ip2 <- ip1
I0428 19:56:20.901926 28411 net.cpp:382] ip2 -> ip2
I0428 19:56:20.902102 28411 net.cpp:124] Setting up ip2
I0428 19:56:20.902117 28411 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:20.902122 28411 net.cpp:139] Memory required for data: 3276800
I0428 19:56:20.902142 28411 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:20.902149 28411 net.cpp:86] Creating Layer relu2
I0428 19:56:20.902155 28411 net.cpp:408] relu2 <- ip2
I0428 19:56:20.902164 28411 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:20.902562 28411 net.cpp:124] Setting up relu2
I0428 19:56:20.902575 28411 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:20.902581 28411 net.cpp:139] Memory required for data: 3286800
I0428 19:56:20.902586 28411 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:20.902597 28411 net.cpp:86] Creating Layer ip3
I0428 19:56:20.902602 28411 net.cpp:408] ip3 <- ip2
I0428 19:56:20.902611 28411 net.cpp:382] ip3 -> ip3
I0428 19:56:20.902753 28411 net.cpp:124] Setting up ip3
I0428 19:56:20.902765 28411 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:20.902770 28411 net.cpp:139] Memory required for data: 3290800
I0428 19:56:20.902782 28411 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:20.902791 28411 net.cpp:86] Creating Layer relu3
I0428 19:56:20.902796 28411 net.cpp:408] relu3 <- ip3
I0428 19:56:20.902809 28411 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:20.904124 28411 net.cpp:124] Setting up relu3
I0428 19:56:20.904152 28411 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:20.904157 28411 net.cpp:139] Memory required for data: 3294800
I0428 19:56:20.904163 28411 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:20.904171 28411 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:20.904176 28411 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:20.904184 28411 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:20.904193 28411 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:20.904253 28411 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:20.904264 28411 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:20.904270 28411 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:20.904275 28411 net.cpp:139] Memory required for data: 3302800
I0428 19:56:20.904280 28411 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:20.904289 28411 net.cpp:86] Creating Layer accuracy
I0428 19:56:20.904294 28411 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:20.904299 28411 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:20.904309 28411 net.cpp:382] accuracy -> accuracy
I0428 19:56:20.904319 28411 net.cpp:124] Setting up accuracy
I0428 19:56:20.904325 28411 net.cpp:131] Top shape: (1)
I0428 19:56:20.904330 28411 net.cpp:139] Memory required for data: 3302804
I0428 19:56:20.904335 28411 layer_factory.hpp:77] Creating layer loss
I0428 19:56:20.904343 28411 net.cpp:86] Creating Layer loss
I0428 19:56:20.904348 28411 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:20.904355 28411 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:20.904361 28411 net.cpp:382] loss -> loss
I0428 19:56:20.904369 28411 layer_factory.hpp:77] Creating layer loss
I0428 19:56:20.904798 28411 net.cpp:124] Setting up loss
I0428 19:56:20.904837 28411 net.cpp:131] Top shape: (1)
I0428 19:56:20.904844 28411 net.cpp:134]     with loss weight 1
I0428 19:56:20.904855 28411 net.cpp:139] Memory required for data: 3302808
I0428 19:56:20.904873 28411 net.cpp:200] loss needs backward computation.
I0428 19:56:20.904881 28411 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:20.904894 28411 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:20.904901 28411 net.cpp:200] relu3 needs backward computation.
I0428 19:56:20.904906 28411 net.cpp:200] ip3 needs backward computation.
I0428 19:56:20.904917 28411 net.cpp:200] relu2 needs backward computation.
I0428 19:56:20.904922 28411 net.cpp:200] ip2 needs backward computation.
I0428 19:56:20.904927 28411 net.cpp:200] relu1 needs backward computation.
I0428 19:56:20.904932 28411 net.cpp:200] ip1 needs backward computation.
I0428 19:56:20.904937 28411 net.cpp:200] pool1 needs backward computation.
I0428 19:56:20.904942 28411 net.cpp:200] conv1 needs backward computation.
I0428 19:56:20.904948 28411 net.cpp:200] pool0 needs backward computation.
I0428 19:56:20.904953 28411 net.cpp:200] conv0 needs backward computation.
I0428 19:56:20.904960 28411 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:20.904968 28411 net.cpp:202] mnist does not need backward computation.
I0428 19:56:20.904978 28411 net.cpp:244] This network produces output accuracy
I0428 19:56:20.904983 28411 net.cpp:244] This network produces output loss
I0428 19:56:20.905004 28411 net.cpp:257] Network initialization done.
I0428 19:56:20.905086 28411 solver.cpp:56] Solver scaffolding done.
I0428 19:56:20.905658 28411 caffe.cpp:248] Starting Optimization
I0428 19:56:20.905666 28411 solver.cpp:273] Solving LeNet
I0428 19:56:20.905671 28411 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:20.906841 28411 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:20.911557 28411 blocking_queue.cpp:49] Waiting for data
I0428 19:56:20.981976 28418 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:20.982620 28411 solver.cpp:398]     Test net output #0: accuracy = 0.0958
I0428 19:56:20.982661 28411 solver.cpp:398]     Test net output #1: loss = 2.31318 (* 1 = 2.31318 loss)
I0428 19:56:20.985569 28411 solver.cpp:219] Iteration 0 (-9.84695e-35 iter/s, 0.0798685s/100 iters), loss = 2.30584
I0428 19:56:20.985607 28411 solver.cpp:238]     Train net output #0: loss = 2.30584 (* 1 = 2.30584 loss)
I0428 19:56:20.985618 28411 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:21.060833 28411 solver.cpp:219] Iteration 100 (1329.61 iter/s, 0.0752099s/100 iters), loss = 0.932417
I0428 19:56:21.060859 28411 solver.cpp:238]     Train net output #0: loss = 0.932417 (* 1 = 0.932417 loss)
I0428 19:56:21.060881 28411 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:21.135591 28411 solver.cpp:219] Iteration 200 (1338.27 iter/s, 0.0747232s/100 iters), loss = 0.633651
I0428 19:56:21.135614 28411 solver.cpp:238]     Train net output #0: loss = 0.633651 (* 1 = 0.633651 loss)
I0428 19:56:21.135622 28411 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:21.209893 28411 solver.cpp:219] Iteration 300 (1346.44 iter/s, 0.0742697s/100 iters), loss = 0.342915
I0428 19:56:21.209916 28411 solver.cpp:238]     Train net output #0: loss = 0.342915 (* 1 = 0.342915 loss)
I0428 19:56:21.209923 28411 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:21.284837 28411 solver.cpp:219] Iteration 400 (1335.31 iter/s, 0.0748892s/100 iters), loss = 0.350122
I0428 19:56:21.284862 28411 solver.cpp:238]     Train net output #0: loss = 0.350122 (* 1 = 0.350122 loss)
I0428 19:56:21.284869 28411 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:21.358461 28411 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:21.412030 28418 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:21.412760 28411 solver.cpp:398]     Test net output #0: accuracy = 0.8942
I0428 19:56:21.412787 28411 solver.cpp:398]     Test net output #1: loss = 0.328285 (* 1 = 0.328285 loss)
I0428 19:56:21.413969 28411 solver.cpp:219] Iteration 500 (774.619 iter/s, 0.129096s/100 iters), loss = 0.286611
I0428 19:56:21.414041 28411 solver.cpp:238]     Train net output #0: loss = 0.286611 (* 1 = 0.286611 loss)
I0428 19:56:21.414070 28411 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:21.492496 28411 solver.cpp:219] Iteration 600 (1274.77 iter/s, 0.0784456s/100 iters), loss = 0.148555
I0428 19:56:21.492519 28411 solver.cpp:238]     Train net output #0: loss = 0.148555 (* 1 = 0.148555 loss)
I0428 19:56:21.492528 28411 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:21.567365 28411 solver.cpp:219] Iteration 700 (1336.26 iter/s, 0.074836s/100 iters), loss = 0.510314
I0428 19:56:21.567394 28411 solver.cpp:238]     Train net output #0: loss = 0.510314 (* 1 = 0.510314 loss)
I0428 19:56:21.567405 28411 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:21.641162 28411 solver.cpp:219] Iteration 800 (1355.71 iter/s, 0.073762s/100 iters), loss = 0.338867
I0428 19:56:21.641187 28411 solver.cpp:238]     Train net output #0: loss = 0.338867 (* 1 = 0.338867 loss)
I0428 19:56:21.641199 28411 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:21.714568 28411 solver.cpp:219] Iteration 900 (1362.89 iter/s, 0.0733737s/100 iters), loss = 0.232144
I0428 19:56:21.714593 28411 solver.cpp:238]     Train net output #0: loss = 0.232144 (* 1 = 0.232144 loss)
I0428 19:56:21.714604 28411 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:21.739540 28417 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:21.787690 28411 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:21.788486 28411 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:21.789129 28411 solver.cpp:311] Iteration 1000, loss = 0.187669
I0428 19:56:21.789149 28411 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:21.862893 28418 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:21.863502 28411 solver.cpp:398]     Test net output #0: accuracy = 0.942
I0428 19:56:21.863524 28411 solver.cpp:398]     Test net output #1: loss = 0.181749 (* 1 = 0.181749 loss)
I0428 19:56:21.863533 28411 solver.cpp:316] Optimization Done.
I0428 19:56:21.863538 28411 caffe.cpp:259] Optimization Done.
