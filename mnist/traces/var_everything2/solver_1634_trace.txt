I0428 20:36:17.007941  4771 caffe.cpp:218] Using GPUs 0
I0428 20:36:17.037364  4771 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:36:17.479115  4771 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1634.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:36:17.479277  4771 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1634.prototxt
I0428 20:36:17.479604  4771 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:36:17.479619  4771 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:36:17.479696  4771 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:17.479759  4771 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:17.479840  4771 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:36:17.479858  4771 net.cpp:86] Creating Layer mnist
I0428 20:36:17.479867  4771 net.cpp:382] mnist -> data
I0428 20:36:17.479884  4771 net.cpp:382] mnist -> label
I0428 20:36:17.480919  4771 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:36:17.483314  4771 net.cpp:124] Setting up mnist
I0428 20:36:17.483359  4771 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:36:17.483364  4771 net.cpp:131] Top shape: 64 (64)
I0428 20:36:17.483367  4771 net.cpp:139] Memory required for data: 200960
I0428 20:36:17.483373  4771 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:17.483403  4771 net.cpp:86] Creating Layer conv0
I0428 20:36:17.483422  4771 net.cpp:408] conv0 <- data
I0428 20:36:17.483431  4771 net.cpp:382] conv0 -> conv0
I0428 20:36:17.716414  4771 net.cpp:124] Setting up conv0
I0428 20:36:17.716457  4771 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:36:17.716461  4771 net.cpp:139] Memory required for data: 14946560
I0428 20:36:17.716476  4771 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:17.716488  4771 net.cpp:86] Creating Layer pool0
I0428 20:36:17.716492  4771 net.cpp:408] pool0 <- conv0
I0428 20:36:17.716497  4771 net.cpp:382] pool0 -> pool0
I0428 20:36:17.716558  4771 net.cpp:124] Setting up pool0
I0428 20:36:17.716563  4771 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:36:17.716580  4771 net.cpp:139] Memory required for data: 18632960
I0428 20:36:17.716584  4771 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:17.716594  4771 net.cpp:86] Creating Layer conv1
I0428 20:36:17.716598  4771 net.cpp:408] conv1 <- pool0
I0428 20:36:17.716603  4771 net.cpp:382] conv1 -> conv1
I0428 20:36:17.724397  4771 net.cpp:124] Setting up conv1
I0428 20:36:17.724419  4771 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:36:17.724423  4771 net.cpp:139] Memory required for data: 19452160
I0428 20:36:17.724432  4771 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:17.724442  4771 net.cpp:86] Creating Layer pool1
I0428 20:36:17.724445  4771 net.cpp:408] pool1 <- conv1
I0428 20:36:17.724450  4771 net.cpp:382] pool1 -> pool1
I0428 20:36:17.724501  4771 net.cpp:124] Setting up pool1
I0428 20:36:17.724506  4771 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:36:17.724509  4771 net.cpp:139] Memory required for data: 19656960
I0428 20:36:17.724511  4771 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:17.724519  4771 net.cpp:86] Creating Layer ip1
I0428 20:36:17.724521  4771 net.cpp:408] ip1 <- pool1
I0428 20:36:17.724525  4771 net.cpp:382] ip1 -> ip1
I0428 20:36:17.724846  4771 net.cpp:124] Setting up ip1
I0428 20:36:17.724854  4771 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:17.724871  4771 net.cpp:139] Memory required for data: 19669760
I0428 20:36:17.724895  4771 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:17.724900  4771 net.cpp:86] Creating Layer relu1
I0428 20:36:17.724902  4771 net.cpp:408] relu1 <- ip1
I0428 20:36:17.724907  4771 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:17.725087  4771 net.cpp:124] Setting up relu1
I0428 20:36:17.725096  4771 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:17.725100  4771 net.cpp:139] Memory required for data: 19682560
I0428 20:36:17.725102  4771 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:17.725108  4771 net.cpp:86] Creating Layer ip2
I0428 20:36:17.725112  4771 net.cpp:408] ip2 <- ip1
I0428 20:36:17.725117  4771 net.cpp:382] ip2 -> ip2
I0428 20:36:17.725234  4771 net.cpp:124] Setting up ip2
I0428 20:36:17.725240  4771 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:36:17.725244  4771 net.cpp:139] Memory required for data: 19688960
I0428 20:36:17.725248  4771 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:17.725253  4771 net.cpp:86] Creating Layer relu2
I0428 20:36:17.725256  4771 net.cpp:408] relu2 <- ip2
I0428 20:36:17.725261  4771 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:17.726013  4771 net.cpp:124] Setting up relu2
I0428 20:36:17.726024  4771 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:36:17.726043  4771 net.cpp:139] Memory required for data: 19695360
I0428 20:36:17.726047  4771 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:17.726053  4771 net.cpp:86] Creating Layer ip3
I0428 20:36:17.726056  4771 net.cpp:408] ip3 <- ip2
I0428 20:36:17.726061  4771 net.cpp:382] ip3 -> ip3
I0428 20:36:17.726173  4771 net.cpp:124] Setting up ip3
I0428 20:36:17.726181  4771 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:17.726184  4771 net.cpp:139] Memory required for data: 19697920
I0428 20:36:17.726191  4771 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:17.726197  4771 net.cpp:86] Creating Layer relu3
I0428 20:36:17.726199  4771 net.cpp:408] relu3 <- ip3
I0428 20:36:17.726218  4771 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:17.726382  4771 net.cpp:124] Setting up relu3
I0428 20:36:17.726389  4771 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:17.726393  4771 net.cpp:139] Memory required for data: 19700480
I0428 20:36:17.726397  4771 layer_factory.hpp:77] Creating layer loss
I0428 20:36:17.726402  4771 net.cpp:86] Creating Layer loss
I0428 20:36:17.726420  4771 net.cpp:408] loss <- ip3
I0428 20:36:17.726424  4771 net.cpp:408] loss <- label
I0428 20:36:17.726429  4771 net.cpp:382] loss -> loss
I0428 20:36:17.726444  4771 layer_factory.hpp:77] Creating layer loss
I0428 20:36:17.726668  4771 net.cpp:124] Setting up loss
I0428 20:36:17.726677  4771 net.cpp:131] Top shape: (1)
I0428 20:36:17.726680  4771 net.cpp:134]     with loss weight 1
I0428 20:36:17.726696  4771 net.cpp:139] Memory required for data: 19700484
I0428 20:36:17.726698  4771 net.cpp:200] loss needs backward computation.
I0428 20:36:17.726702  4771 net.cpp:200] relu3 needs backward computation.
I0428 20:36:17.726706  4771 net.cpp:200] ip3 needs backward computation.
I0428 20:36:17.726708  4771 net.cpp:200] relu2 needs backward computation.
I0428 20:36:17.726711  4771 net.cpp:200] ip2 needs backward computation.
I0428 20:36:17.726713  4771 net.cpp:200] relu1 needs backward computation.
I0428 20:36:17.726716  4771 net.cpp:200] ip1 needs backward computation.
I0428 20:36:17.726719  4771 net.cpp:200] pool1 needs backward computation.
I0428 20:36:17.726722  4771 net.cpp:200] conv1 needs backward computation.
I0428 20:36:17.726725  4771 net.cpp:200] pool0 needs backward computation.
I0428 20:36:17.726728  4771 net.cpp:200] conv0 needs backward computation.
I0428 20:36:17.726732  4771 net.cpp:202] mnist does not need backward computation.
I0428 20:36:17.726734  4771 net.cpp:244] This network produces output loss
I0428 20:36:17.726743  4771 net.cpp:257] Network initialization done.
I0428 20:36:17.727130  4771 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1634.prototxt
I0428 20:36:17.727174  4771 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:36:17.727278  4771 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:17.727357  4771 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:17.727401  4771 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:36:17.727414  4771 net.cpp:86] Creating Layer mnist
I0428 20:36:17.727418  4771 net.cpp:382] mnist -> data
I0428 20:36:17.727427  4771 net.cpp:382] mnist -> label
I0428 20:36:17.727519  4771 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:36:17.728921  4771 net.cpp:124] Setting up mnist
I0428 20:36:17.728950  4771 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:36:17.728955  4771 net.cpp:131] Top shape: 100 (100)
I0428 20:36:17.728958  4771 net.cpp:139] Memory required for data: 314000
I0428 20:36:17.728962  4771 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:36:17.728968  4771 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:36:17.728971  4771 net.cpp:408] label_mnist_1_split <- label
I0428 20:36:17.728977  4771 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:36:17.728983  4771 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:36:17.729022  4771 net.cpp:124] Setting up label_mnist_1_split
I0428 20:36:17.729027  4771 net.cpp:131] Top shape: 100 (100)
I0428 20:36:17.729030  4771 net.cpp:131] Top shape: 100 (100)
I0428 20:36:17.729032  4771 net.cpp:139] Memory required for data: 314800
I0428 20:36:17.729035  4771 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:17.729043  4771 net.cpp:86] Creating Layer conv0
I0428 20:36:17.729046  4771 net.cpp:408] conv0 <- data
I0428 20:36:17.729051  4771 net.cpp:382] conv0 -> conv0
I0428 20:36:17.730651  4771 net.cpp:124] Setting up conv0
I0428 20:36:17.730666  4771 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:36:17.730670  4771 net.cpp:139] Memory required for data: 23354800
I0428 20:36:17.730680  4771 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:17.730686  4771 net.cpp:86] Creating Layer pool0
I0428 20:36:17.730690  4771 net.cpp:408] pool0 <- conv0
I0428 20:36:17.730695  4771 net.cpp:382] pool0 -> pool0
I0428 20:36:17.730731  4771 net.cpp:124] Setting up pool0
I0428 20:36:17.730736  4771 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:36:17.730739  4771 net.cpp:139] Memory required for data: 29114800
I0428 20:36:17.730742  4771 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:17.730751  4771 net.cpp:86] Creating Layer conv1
I0428 20:36:17.730753  4771 net.cpp:408] conv1 <- pool0
I0428 20:36:17.730773  4771 net.cpp:382] conv1 -> conv1
I0428 20:36:17.733927  4771 net.cpp:124] Setting up conv1
I0428 20:36:17.733942  4771 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:36:17.733947  4771 net.cpp:139] Memory required for data: 30394800
I0428 20:36:17.733954  4771 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:17.733961  4771 net.cpp:86] Creating Layer pool1
I0428 20:36:17.733981  4771 net.cpp:408] pool1 <- conv1
I0428 20:36:17.733986  4771 net.cpp:382] pool1 -> pool1
I0428 20:36:17.734032  4771 net.cpp:124] Setting up pool1
I0428 20:36:17.734037  4771 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:36:17.734040  4771 net.cpp:139] Memory required for data: 30714800
I0428 20:36:17.734043  4771 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:17.734048  4771 net.cpp:86] Creating Layer ip1
I0428 20:36:17.734051  4771 net.cpp:408] ip1 <- pool1
I0428 20:36:17.734056  4771 net.cpp:382] ip1 -> ip1
I0428 20:36:17.734390  4771 net.cpp:124] Setting up ip1
I0428 20:36:17.734407  4771 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:17.734411  4771 net.cpp:139] Memory required for data: 30734800
I0428 20:36:17.734417  4771 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:17.734422  4771 net.cpp:86] Creating Layer relu1
I0428 20:36:17.734426  4771 net.cpp:408] relu1 <- ip1
I0428 20:36:17.734442  4771 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:17.734586  4771 net.cpp:124] Setting up relu1
I0428 20:36:17.734594  4771 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:17.734598  4771 net.cpp:139] Memory required for data: 30754800
I0428 20:36:17.734607  4771 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:17.734613  4771 net.cpp:86] Creating Layer ip2
I0428 20:36:17.734616  4771 net.cpp:408] ip2 <- ip1
I0428 20:36:17.734622  4771 net.cpp:382] ip2 -> ip2
I0428 20:36:17.734719  4771 net.cpp:124] Setting up ip2
I0428 20:36:17.734726  4771 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:36:17.734730  4771 net.cpp:139] Memory required for data: 30764800
I0428 20:36:17.734735  4771 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:17.734738  4771 net.cpp:86] Creating Layer relu2
I0428 20:36:17.734741  4771 net.cpp:408] relu2 <- ip2
I0428 20:36:17.734745  4771 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:17.734907  4771 net.cpp:124] Setting up relu2
I0428 20:36:17.734930  4771 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:36:17.734941  4771 net.cpp:139] Memory required for data: 30774800
I0428 20:36:17.734949  4771 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:17.734956  4771 net.cpp:86] Creating Layer ip3
I0428 20:36:17.734959  4771 net.cpp:408] ip3 <- ip2
I0428 20:36:17.734971  4771 net.cpp:382] ip3 -> ip3
I0428 20:36:17.735065  4771 net.cpp:124] Setting up ip3
I0428 20:36:17.735072  4771 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:17.735075  4771 net.cpp:139] Memory required for data: 30778800
I0428 20:36:17.735083  4771 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:17.735088  4771 net.cpp:86] Creating Layer relu3
I0428 20:36:17.735091  4771 net.cpp:408] relu3 <- ip3
I0428 20:36:17.735095  4771 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:17.735921  4771 net.cpp:124] Setting up relu3
I0428 20:36:17.735934  4771 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:17.735957  4771 net.cpp:139] Memory required for data: 30782800
I0428 20:36:17.735960  4771 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:36:17.735966  4771 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:36:17.735970  4771 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:36:17.735975  4771 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:36:17.735992  4771 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:36:17.736028  4771 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:36:17.736033  4771 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:17.736037  4771 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:17.736039  4771 net.cpp:139] Memory required for data: 30790800
I0428 20:36:17.736042  4771 layer_factory.hpp:77] Creating layer accuracy
I0428 20:36:17.736047  4771 net.cpp:86] Creating Layer accuracy
I0428 20:36:17.736050  4771 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:36:17.736054  4771 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:36:17.736059  4771 net.cpp:382] accuracy -> accuracy
I0428 20:36:17.736066  4771 net.cpp:124] Setting up accuracy
I0428 20:36:17.736069  4771 net.cpp:131] Top shape: (1)
I0428 20:36:17.736078  4771 net.cpp:139] Memory required for data: 30790804
I0428 20:36:17.736081  4771 layer_factory.hpp:77] Creating layer loss
I0428 20:36:17.736085  4771 net.cpp:86] Creating Layer loss
I0428 20:36:17.736088  4771 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:36:17.736093  4771 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:36:17.736099  4771 net.cpp:382] loss -> loss
I0428 20:36:17.736104  4771 layer_factory.hpp:77] Creating layer loss
I0428 20:36:17.736382  4771 net.cpp:124] Setting up loss
I0428 20:36:17.736390  4771 net.cpp:131] Top shape: (1)
I0428 20:36:17.736394  4771 net.cpp:134]     with loss weight 1
I0428 20:36:17.736410  4771 net.cpp:139] Memory required for data: 30790808
I0428 20:36:17.736420  4771 net.cpp:200] loss needs backward computation.
I0428 20:36:17.736424  4771 net.cpp:202] accuracy does not need backward computation.
I0428 20:36:17.736428  4771 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:36:17.736431  4771 net.cpp:200] relu3 needs backward computation.
I0428 20:36:17.736434  4771 net.cpp:200] ip3 needs backward computation.
I0428 20:36:17.736441  4771 net.cpp:200] relu2 needs backward computation.
I0428 20:36:17.736444  4771 net.cpp:200] ip2 needs backward computation.
I0428 20:36:17.736448  4771 net.cpp:200] relu1 needs backward computation.
I0428 20:36:17.736455  4771 net.cpp:200] ip1 needs backward computation.
I0428 20:36:17.736464  4771 net.cpp:200] pool1 needs backward computation.
I0428 20:36:17.736466  4771 net.cpp:200] conv1 needs backward computation.
I0428 20:36:17.736469  4771 net.cpp:200] pool0 needs backward computation.
I0428 20:36:17.736474  4771 net.cpp:200] conv0 needs backward computation.
I0428 20:36:17.736477  4771 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:36:17.736480  4771 net.cpp:202] mnist does not need backward computation.
I0428 20:36:17.736488  4771 net.cpp:244] This network produces output accuracy
I0428 20:36:17.736492  4771 net.cpp:244] This network produces output loss
I0428 20:36:17.736502  4771 net.cpp:257] Network initialization done.
I0428 20:36:17.736543  4771 solver.cpp:56] Solver scaffolding done.
I0428 20:36:17.736896  4771 caffe.cpp:248] Starting Optimization
I0428 20:36:17.736902  4771 solver.cpp:273] Solving LeNet
I0428 20:36:17.736905  4771 solver.cpp:274] Learning Rate Policy: inv
I0428 20:36:17.737120  4771 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:36:17.847133  4778 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:17.848896  4771 solver.cpp:398]     Test net output #0: accuracy = 0.1252
I0428 20:36:17.848915  4771 solver.cpp:398]     Test net output #1: loss = 2.29989 (* 1 = 2.29989 loss)
I0428 20:36:17.853734  4771 solver.cpp:219] Iteration 0 (-6.74921e-31 iter/s, 0.116804s/100 iters), loss = 2.28599
I0428 20:36:17.853775  4771 solver.cpp:238]     Train net output #0: loss = 2.28599 (* 1 = 2.28599 loss)
I0428 20:36:17.853785  4771 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:36:18.087530  4771 solver.cpp:219] Iteration 100 (427.827 iter/s, 0.233739s/100 iters), loss = 1.00722
I0428 20:36:18.087559  4771 solver.cpp:238]     Train net output #0: loss = 1.00722 (* 1 = 1.00722 loss)
I0428 20:36:18.087568  4771 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:36:18.318294  4771 solver.cpp:219] Iteration 200 (433.431 iter/s, 0.230717s/100 iters), loss = 1.00488
I0428 20:36:18.318323  4771 solver.cpp:238]     Train net output #0: loss = 1.00488 (* 1 = 1.00488 loss)
I0428 20:36:18.318331  4771 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:36:18.545881  4771 solver.cpp:219] Iteration 300 (439.479 iter/s, 0.227542s/100 iters), loss = 1.07363
I0428 20:36:18.545922  4771 solver.cpp:238]     Train net output #0: loss = 1.07363 (* 1 = 1.07363 loss)
I0428 20:36:18.545929  4771 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:36:18.776358  4771 solver.cpp:219] Iteration 400 (433.966 iter/s, 0.230433s/100 iters), loss = 0.992291
I0428 20:36:18.776391  4771 solver.cpp:238]     Train net output #0: loss = 0.992291 (* 1 = 0.992291 loss)
I0428 20:36:18.776396  4771 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:36:19.008230  4771 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:36:19.117918  4778 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:19.120704  4771 solver.cpp:398]     Test net output #0: accuracy = 0.6676
I0428 20:36:19.120726  4771 solver.cpp:398]     Test net output #1: loss = 1.03147 (* 1 = 1.03147 loss)
I0428 20:36:19.122979  4771 solver.cpp:219] Iteration 500 (288.542 iter/s, 0.34657s/100 iters), loss = 0.89388
I0428 20:36:19.123003  4771 solver.cpp:238]     Train net output #0: loss = 0.89388 (* 1 = 0.89388 loss)
I0428 20:36:19.123023  4771 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:36:19.360980  4771 solver.cpp:219] Iteration 600 (420.238 iter/s, 0.23796s/100 iters), loss = 0.69561
I0428 20:36:19.361012  4771 solver.cpp:238]     Train net output #0: loss = 0.69561 (* 1 = 0.69561 loss)
I0428 20:36:19.361021  4771 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:36:19.601721  4771 solver.cpp:219] Iteration 700 (415.47 iter/s, 0.240691s/100 iters), loss = 0.914864
I0428 20:36:19.601753  4771 solver.cpp:238]     Train net output #0: loss = 0.914864 (* 1 = 0.914864 loss)
I0428 20:36:19.601763  4771 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:36:19.840031  4771 solver.cpp:219] Iteration 800 (419.704 iter/s, 0.238263s/100 iters), loss = 0.897522
I0428 20:36:19.840059  4771 solver.cpp:238]     Train net output #0: loss = 0.897522 (* 1 = 0.897522 loss)
I0428 20:36:19.840066  4771 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:36:20.082834  4771 solver.cpp:219] Iteration 900 (411.935 iter/s, 0.242757s/100 iters), loss = 0.888027
I0428 20:36:20.082865  4771 solver.cpp:238]     Train net output #0: loss = 0.888027 (* 1 = 0.888027 loss)
I0428 20:36:20.082873  4771 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:36:20.163269  4777 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:20.315321  4771 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:36:20.319641  4771 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:36:20.321902  4771 solver.cpp:311] Iteration 1000, loss = 0.933032
I0428 20:36:20.321933  4771 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:36:20.429689  4778 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:20.432595  4771 solver.cpp:398]     Test net output #0: accuracy = 0.7836
I0428 20:36:20.432627  4771 solver.cpp:398]     Test net output #1: loss = 0.755421 (* 1 = 0.755421 loss)
I0428 20:36:20.432632  4771 solver.cpp:316] Optimization Done.
I0428 20:36:20.432636  4771 caffe.cpp:259] Optimization Done.
