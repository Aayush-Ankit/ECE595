I0428 19:56:40.728168 28491 caffe.cpp:218] Using GPUs 0
I0428 19:56:40.758061 28491 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:41.235484 28491 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test766.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:41.235615 28491 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test766.prototxt
I0428 19:56:41.235939 28491 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:41.235957 28491 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:41.236045 28491 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:41.236111 28491 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:41.236192 28491 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:41.236212 28491 net.cpp:86] Creating Layer mnist
I0428 19:56:41.236219 28491 net.cpp:382] mnist -> data
I0428 19:56:41.236238 28491 net.cpp:382] mnist -> label
I0428 19:56:41.237171 28491 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:41.239379 28491 net.cpp:124] Setting up mnist
I0428 19:56:41.239408 28491 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:41.239413 28491 net.cpp:131] Top shape: 64 (64)
I0428 19:56:41.239416 28491 net.cpp:139] Memory required for data: 200960
I0428 19:56:41.239421 28491 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:41.239444 28491 net.cpp:86] Creating Layer conv0
I0428 19:56:41.239460 28491 net.cpp:408] conv0 <- data
I0428 19:56:41.239472 28491 net.cpp:382] conv0 -> conv0
I0428 19:56:41.467058 28491 net.cpp:124] Setting up conv0
I0428 19:56:41.467083 28491 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:41.467087 28491 net.cpp:139] Memory required for data: 1675520
I0428 19:56:41.467102 28491 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:41.467113 28491 net.cpp:86] Creating Layer pool0
I0428 19:56:41.467116 28491 net.cpp:408] pool0 <- conv0
I0428 19:56:41.467121 28491 net.cpp:382] pool0 -> pool0
I0428 19:56:41.467180 28491 net.cpp:124] Setting up pool0
I0428 19:56:41.467186 28491 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:41.467188 28491 net.cpp:139] Memory required for data: 2044160
I0428 19:56:41.467191 28491 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:41.467202 28491 net.cpp:86] Creating Layer conv1
I0428 19:56:41.467206 28491 net.cpp:408] conv1 <- pool0
I0428 19:56:41.467209 28491 net.cpp:382] conv1 -> conv1
I0428 19:56:41.469027 28491 net.cpp:124] Setting up conv1
I0428 19:56:41.469058 28491 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:41.469060 28491 net.cpp:139] Memory required for data: 2076928
I0428 19:56:41.469069 28491 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:41.469076 28491 net.cpp:86] Creating Layer pool1
I0428 19:56:41.469080 28491 net.cpp:408] pool1 <- conv1
I0428 19:56:41.469085 28491 net.cpp:382] pool1 -> pool1
I0428 19:56:41.469152 28491 net.cpp:124] Setting up pool1
I0428 19:56:41.469158 28491 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:41.469161 28491 net.cpp:139] Memory required for data: 2085120
I0428 19:56:41.469163 28491 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:41.469171 28491 net.cpp:86] Creating Layer ip1
I0428 19:56:41.469173 28491 net.cpp:408] ip1 <- pool1
I0428 19:56:41.469178 28491 net.cpp:382] ip1 -> ip1
I0428 19:56:41.469280 28491 net.cpp:124] Setting up ip1
I0428 19:56:41.469287 28491 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:41.469290 28491 net.cpp:139] Memory required for data: 2091520
I0428 19:56:41.469297 28491 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:41.469303 28491 net.cpp:86] Creating Layer relu1
I0428 19:56:41.469306 28491 net.cpp:408] relu1 <- ip1
I0428 19:56:41.469310 28491 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:41.469512 28491 net.cpp:124] Setting up relu1
I0428 19:56:41.469523 28491 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:41.469528 28491 net.cpp:139] Memory required for data: 2097920
I0428 19:56:41.469532 28491 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:41.469540 28491 net.cpp:86] Creating Layer ip2
I0428 19:56:41.469543 28491 net.cpp:408] ip2 <- ip1
I0428 19:56:41.469549 28491 net.cpp:382] ip2 -> ip2
I0428 19:56:41.469645 28491 net.cpp:124] Setting up ip2
I0428 19:56:41.469651 28491 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:41.469655 28491 net.cpp:139] Memory required for data: 2104320
I0428 19:56:41.469660 28491 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:41.469666 28491 net.cpp:86] Creating Layer relu2
I0428 19:56:41.469668 28491 net.cpp:408] relu2 <- ip2
I0428 19:56:41.469672 28491 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:41.470420 28491 net.cpp:124] Setting up relu2
I0428 19:56:41.470432 28491 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:41.470450 28491 net.cpp:139] Memory required for data: 2110720
I0428 19:56:41.470454 28491 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:41.470460 28491 net.cpp:86] Creating Layer ip3
I0428 19:56:41.470463 28491 net.cpp:408] ip3 <- ip2
I0428 19:56:41.470470 28491 net.cpp:382] ip3 -> ip3
I0428 19:56:41.470566 28491 net.cpp:124] Setting up ip3
I0428 19:56:41.470574 28491 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:41.470592 28491 net.cpp:139] Memory required for data: 2113280
I0428 19:56:41.470602 28491 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:41.470609 28491 net.cpp:86] Creating Layer relu3
I0428 19:56:41.470613 28491 net.cpp:408] relu3 <- ip3
I0428 19:56:41.470618 28491 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:41.470798 28491 net.cpp:124] Setting up relu3
I0428 19:56:41.470806 28491 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:41.470809 28491 net.cpp:139] Memory required for data: 2115840
I0428 19:56:41.470813 28491 layer_factory.hpp:77] Creating layer loss
I0428 19:56:41.470819 28491 net.cpp:86] Creating Layer loss
I0428 19:56:41.470823 28491 net.cpp:408] loss <- ip3
I0428 19:56:41.470825 28491 net.cpp:408] loss <- label
I0428 19:56:41.470830 28491 net.cpp:382] loss -> loss
I0428 19:56:41.470844 28491 layer_factory.hpp:77] Creating layer loss
I0428 19:56:41.471074 28491 net.cpp:124] Setting up loss
I0428 19:56:41.471082 28491 net.cpp:131] Top shape: (1)
I0428 19:56:41.471086 28491 net.cpp:134]     with loss weight 1
I0428 19:56:41.471098 28491 net.cpp:139] Memory required for data: 2115844
I0428 19:56:41.471102 28491 net.cpp:200] loss needs backward computation.
I0428 19:56:41.471105 28491 net.cpp:200] relu3 needs backward computation.
I0428 19:56:41.471108 28491 net.cpp:200] ip3 needs backward computation.
I0428 19:56:41.471110 28491 net.cpp:200] relu2 needs backward computation.
I0428 19:56:41.471113 28491 net.cpp:200] ip2 needs backward computation.
I0428 19:56:41.471115 28491 net.cpp:200] relu1 needs backward computation.
I0428 19:56:41.471118 28491 net.cpp:200] ip1 needs backward computation.
I0428 19:56:41.471122 28491 net.cpp:200] pool1 needs backward computation.
I0428 19:56:41.471124 28491 net.cpp:200] conv1 needs backward computation.
I0428 19:56:41.471127 28491 net.cpp:200] pool0 needs backward computation.
I0428 19:56:41.471129 28491 net.cpp:200] conv0 needs backward computation.
I0428 19:56:41.471132 28491 net.cpp:202] mnist does not need backward computation.
I0428 19:56:41.471135 28491 net.cpp:244] This network produces output loss
I0428 19:56:41.471145 28491 net.cpp:257] Network initialization done.
I0428 19:56:41.471513 28491 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test766.prototxt
I0428 19:56:41.471554 28491 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:41.471647 28491 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:41.471750 28491 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:41.471807 28491 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:41.471820 28491 net.cpp:86] Creating Layer mnist
I0428 19:56:41.471824 28491 net.cpp:382] mnist -> data
I0428 19:56:41.471832 28491 net.cpp:382] mnist -> label
I0428 19:56:41.471915 28491 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:41.474114 28491 net.cpp:124] Setting up mnist
I0428 19:56:41.474143 28491 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:41.474148 28491 net.cpp:131] Top shape: 100 (100)
I0428 19:56:41.474150 28491 net.cpp:139] Memory required for data: 314000
I0428 19:56:41.474153 28491 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:41.474189 28491 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:41.474192 28491 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:41.474215 28491 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:41.474221 28491 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:41.474269 28491 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:41.474275 28491 net.cpp:131] Top shape: 100 (100)
I0428 19:56:41.474278 28491 net.cpp:131] Top shape: 100 (100)
I0428 19:56:41.474282 28491 net.cpp:139] Memory required for data: 314800
I0428 19:56:41.474283 28491 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:41.474292 28491 net.cpp:86] Creating Layer conv0
I0428 19:56:41.474295 28491 net.cpp:408] conv0 <- data
I0428 19:56:41.474301 28491 net.cpp:382] conv0 -> conv0
I0428 19:56:41.476063 28491 net.cpp:124] Setting up conv0
I0428 19:56:41.476076 28491 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:41.476079 28491 net.cpp:139] Memory required for data: 2618800
I0428 19:56:41.476088 28491 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:41.476094 28491 net.cpp:86] Creating Layer pool0
I0428 19:56:41.476106 28491 net.cpp:408] pool0 <- conv0
I0428 19:56:41.476112 28491 net.cpp:382] pool0 -> pool0
I0428 19:56:41.476146 28491 net.cpp:124] Setting up pool0
I0428 19:56:41.476151 28491 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:41.476153 28491 net.cpp:139] Memory required for data: 3194800
I0428 19:56:41.476156 28491 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:41.476166 28491 net.cpp:86] Creating Layer conv1
I0428 19:56:41.476168 28491 net.cpp:408] conv1 <- pool0
I0428 19:56:41.476173 28491 net.cpp:382] conv1 -> conv1
I0428 19:56:41.478224 28491 net.cpp:124] Setting up conv1
I0428 19:56:41.478237 28491 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:41.478250 28491 net.cpp:139] Memory required for data: 3246000
I0428 19:56:41.478258 28491 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:41.478279 28491 net.cpp:86] Creating Layer pool1
I0428 19:56:41.478283 28491 net.cpp:408] pool1 <- conv1
I0428 19:56:41.478289 28491 net.cpp:382] pool1 -> pool1
I0428 19:56:41.478328 28491 net.cpp:124] Setting up pool1
I0428 19:56:41.478334 28491 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:41.478337 28491 net.cpp:139] Memory required for data: 3258800
I0428 19:56:41.478339 28491 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:41.478346 28491 net.cpp:86] Creating Layer ip1
I0428 19:56:41.478355 28491 net.cpp:408] ip1 <- pool1
I0428 19:56:41.478360 28491 net.cpp:382] ip1 -> ip1
I0428 19:56:41.478476 28491 net.cpp:124] Setting up ip1
I0428 19:56:41.478483 28491 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:41.478495 28491 net.cpp:139] Memory required for data: 3268800
I0428 19:56:41.478502 28491 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:41.478507 28491 net.cpp:86] Creating Layer relu1
I0428 19:56:41.478510 28491 net.cpp:408] relu1 <- ip1
I0428 19:56:41.478515 28491 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:41.478740 28491 net.cpp:124] Setting up relu1
I0428 19:56:41.478749 28491 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:41.478752 28491 net.cpp:139] Memory required for data: 3278800
I0428 19:56:41.478771 28491 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:41.478778 28491 net.cpp:86] Creating Layer ip2
I0428 19:56:41.478781 28491 net.cpp:408] ip2 <- ip1
I0428 19:56:41.478787 28491 net.cpp:382] ip2 -> ip2
I0428 19:56:41.478914 28491 net.cpp:124] Setting up ip2
I0428 19:56:41.478920 28491 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:41.478924 28491 net.cpp:139] Memory required for data: 3288800
I0428 19:56:41.478929 28491 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:41.478934 28491 net.cpp:86] Creating Layer relu2
I0428 19:56:41.478935 28491 net.cpp:408] relu2 <- ip2
I0428 19:56:41.478940 28491 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:41.479096 28491 net.cpp:124] Setting up relu2
I0428 19:56:41.479120 28491 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:41.479123 28491 net.cpp:139] Memory required for data: 3298800
I0428 19:56:41.479126 28491 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:41.479133 28491 net.cpp:86] Creating Layer ip3
I0428 19:56:41.479143 28491 net.cpp:408] ip3 <- ip2
I0428 19:56:41.479147 28491 net.cpp:382] ip3 -> ip3
I0428 19:56:41.479249 28491 net.cpp:124] Setting up ip3
I0428 19:56:41.479255 28491 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:41.479259 28491 net.cpp:139] Memory required for data: 3302800
I0428 19:56:41.479266 28491 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:41.479271 28491 net.cpp:86] Creating Layer relu3
I0428 19:56:41.479275 28491 net.cpp:408] relu3 <- ip3
I0428 19:56:41.479279 28491 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:41.480082 28491 net.cpp:124] Setting up relu3
I0428 19:56:41.480094 28491 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:41.480098 28491 net.cpp:139] Memory required for data: 3306800
I0428 19:56:41.480100 28491 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:41.480105 28491 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:41.480108 28491 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:41.480113 28491 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:41.480119 28491 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:41.480175 28491 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:41.480180 28491 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:41.480185 28491 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:41.480186 28491 net.cpp:139] Memory required for data: 3314800
I0428 19:56:41.480190 28491 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:41.480195 28491 net.cpp:86] Creating Layer accuracy
I0428 19:56:41.480197 28491 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:41.480201 28491 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:41.480206 28491 net.cpp:382] accuracy -> accuracy
I0428 19:56:41.480213 28491 net.cpp:124] Setting up accuracy
I0428 19:56:41.480217 28491 net.cpp:131] Top shape: (1)
I0428 19:56:41.480219 28491 net.cpp:139] Memory required for data: 3314804
I0428 19:56:41.480222 28491 layer_factory.hpp:77] Creating layer loss
I0428 19:56:41.480227 28491 net.cpp:86] Creating Layer loss
I0428 19:56:41.480231 28491 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:41.480233 28491 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:41.480237 28491 net.cpp:382] loss -> loss
I0428 19:56:41.480242 28491 layer_factory.hpp:77] Creating layer loss
I0428 19:56:41.480476 28491 net.cpp:124] Setting up loss
I0428 19:56:41.480485 28491 net.cpp:131] Top shape: (1)
I0428 19:56:41.480489 28491 net.cpp:134]     with loss weight 1
I0428 19:56:41.480506 28491 net.cpp:139] Memory required for data: 3314808
I0428 19:56:41.480518 28491 net.cpp:200] loss needs backward computation.
I0428 19:56:41.480522 28491 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:41.480525 28491 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:41.480533 28491 net.cpp:200] relu3 needs backward computation.
I0428 19:56:41.480536 28491 net.cpp:200] ip3 needs backward computation.
I0428 19:56:41.480540 28491 net.cpp:200] relu2 needs backward computation.
I0428 19:56:41.480541 28491 net.cpp:200] ip2 needs backward computation.
I0428 19:56:41.480545 28491 net.cpp:200] relu1 needs backward computation.
I0428 19:56:41.480547 28491 net.cpp:200] ip1 needs backward computation.
I0428 19:56:41.480551 28491 net.cpp:200] pool1 needs backward computation.
I0428 19:56:41.480552 28491 net.cpp:200] conv1 needs backward computation.
I0428 19:56:41.480556 28491 net.cpp:200] pool0 needs backward computation.
I0428 19:56:41.480558 28491 net.cpp:200] conv0 needs backward computation.
I0428 19:56:41.480561 28491 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:41.480581 28491 net.cpp:202] mnist does not need backward computation.
I0428 19:56:41.480583 28491 net.cpp:244] This network produces output accuracy
I0428 19:56:41.480587 28491 net.cpp:244] This network produces output loss
I0428 19:56:41.480598 28491 net.cpp:257] Network initialization done.
I0428 19:56:41.480638 28491 solver.cpp:56] Solver scaffolding done.
I0428 19:56:41.481058 28491 caffe.cpp:248] Starting Optimization
I0428 19:56:41.481066 28491 solver.cpp:273] Solving LeNet
I0428 19:56:41.481076 28491 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:41.481895 28491 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:41.485548 28491 blocking_queue.cpp:49] Waiting for data
I0428 19:56:41.557543 28498 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:41.558060 28491 solver.cpp:398]     Test net output #0: accuracy = 0.1236
I0428 19:56:41.558079 28491 solver.cpp:398]     Test net output #1: loss = 2.29865 (* 1 = 2.29865 loss)
I0428 19:56:41.560577 28491 solver.cpp:219] Iteration 0 (0 iter/s, 0.0794767s/100 iters), loss = 2.30958
I0428 19:56:41.560600 28491 solver.cpp:238]     Train net output #0: loss = 2.30958 (* 1 = 2.30958 loss)
I0428 19:56:41.560624 28491 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:41.634536 28491 solver.cpp:219] Iteration 100 (1352.73 iter/s, 0.0739246s/100 iters), loss = 1.46518
I0428 19:56:41.634558 28491 solver.cpp:238]     Train net output #0: loss = 1.46518 (* 1 = 1.46518 loss)
I0428 19:56:41.634564 28491 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:41.707320 28491 solver.cpp:219] Iteration 200 (1374.53 iter/s, 0.0727523s/100 iters), loss = 1.02499
I0428 19:56:41.707343 28491 solver.cpp:238]     Train net output #0: loss = 1.02499 (* 1 = 1.02499 loss)
I0428 19:56:41.707350 28491 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:41.780329 28491 solver.cpp:219] Iteration 300 (1370.3 iter/s, 0.0729765s/100 iters), loss = 1.00325
I0428 19:56:41.780351 28491 solver.cpp:238]     Train net output #0: loss = 1.00325 (* 1 = 1.00325 loss)
I0428 19:56:41.780357 28491 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:41.853723 28491 solver.cpp:219] Iteration 400 (1363.11 iter/s, 0.0733614s/100 iters), loss = 0.850195
I0428 19:56:41.853745 28491 solver.cpp:238]     Train net output #0: loss = 0.850195 (* 1 = 0.850195 loss)
I0428 19:56:41.853751 28491 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:41.926726 28491 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:42.001281 28498 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:42.001787 28491 solver.cpp:398]     Test net output #0: accuracy = 0.7282
I0428 19:56:42.001807 28491 solver.cpp:398]     Test net output #1: loss = 0.74525 (* 1 = 0.74525 loss)
I0428 19:56:42.002617 28491 solver.cpp:219] Iteration 500 (671.776 iter/s, 0.148859s/100 iters), loss = 0.869388
I0428 19:56:42.002640 28491 solver.cpp:238]     Train net output #0: loss = 0.869388 (* 1 = 0.869388 loss)
I0428 19:56:42.002676 28491 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:42.076524 28491 solver.cpp:219] Iteration 600 (1353.65 iter/s, 0.0738744s/100 iters), loss = 0.612311
I0428 19:56:42.076550 28491 solver.cpp:238]     Train net output #0: loss = 0.612311 (* 1 = 0.612311 loss)
I0428 19:56:42.076570 28491 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:42.150624 28491 solver.cpp:219] Iteration 700 (1350.13 iter/s, 0.0740669s/100 iters), loss = 0.783154
I0428 19:56:42.150650 28491 solver.cpp:238]     Train net output #0: loss = 0.783154 (* 1 = 0.783154 loss)
I0428 19:56:42.150655 28491 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:42.223865 28491 solver.cpp:219] Iteration 800 (1365.99 iter/s, 0.073207s/100 iters), loss = 0.718621
I0428 19:56:42.223888 28491 solver.cpp:238]     Train net output #0: loss = 0.718621 (* 1 = 0.718621 loss)
I0428 19:56:42.223911 28491 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:42.297148 28491 solver.cpp:219] Iteration 900 (1365.17 iter/s, 0.0732508s/100 iters), loss = 0.620336
I0428 19:56:42.297173 28491 solver.cpp:238]     Train net output #0: loss = 0.620336 (* 1 = 0.620336 loss)
I0428 19:56:42.297195 28491 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:42.322197 28497 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:42.371461 28491 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:42.372175 28491 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:42.372639 28491 solver.cpp:311] Iteration 1000, loss = 0.59075
I0428 19:56:42.372654 28491 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:42.447208 28498 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:42.447723 28491 solver.cpp:398]     Test net output #0: accuracy = 0.749
I0428 19:56:42.447744 28491 solver.cpp:398]     Test net output #1: loss = 0.683641 (* 1 = 0.683641 loss)
I0428 19:56:42.447749 28491 solver.cpp:316] Optimization Done.
I0428 19:56:42.447752 28491 caffe.cpp:259] Optimization Done.
