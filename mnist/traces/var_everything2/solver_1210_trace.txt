I0428 20:13:58.735285 32578 caffe.cpp:218] Using GPUs 0
I0428 20:13:58.772073 32578 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:59.285620 32578 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1210.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:59.285758 32578 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1210.prototxt
I0428 20:13:59.286104 32578 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:59.286121 32578 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:59.286203 32578 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:13:59.286276 32578 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:59.286381 32578 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:59.286404 32578 net.cpp:86] Creating Layer mnist
I0428 20:13:59.286413 32578 net.cpp:382] mnist -> data
I0428 20:13:59.286435 32578 net.cpp:382] mnist -> label
I0428 20:13:59.287540 32578 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:59.290011 32578 net.cpp:124] Setting up mnist
I0428 20:13:59.290030 32578 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:59.290037 32578 net.cpp:131] Top shape: 64 (64)
I0428 20:13:59.290041 32578 net.cpp:139] Memory required for data: 200960
I0428 20:13:59.290050 32578 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:59.290066 32578 net.cpp:86] Creating Layer conv0
I0428 20:13:59.290071 32578 net.cpp:408] conv0 <- data
I0428 20:13:59.290083 32578 net.cpp:382] conv0 -> conv0
I0428 20:13:59.557646 32578 net.cpp:124] Setting up conv0
I0428 20:13:59.557687 32578 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:13:59.557692 32578 net.cpp:139] Memory required for data: 7573760
I0428 20:13:59.557705 32578 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:59.557718 32578 net.cpp:86] Creating Layer pool0
I0428 20:13:59.557721 32578 net.cpp:408] pool0 <- conv0
I0428 20:13:59.557726 32578 net.cpp:382] pool0 -> pool0
I0428 20:13:59.557786 32578 net.cpp:124] Setting up pool0
I0428 20:13:59.557792 32578 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:13:59.557809 32578 net.cpp:139] Memory required for data: 9416960
I0428 20:13:59.557813 32578 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:59.557824 32578 net.cpp:86] Creating Layer conv1
I0428 20:13:59.557827 32578 net.cpp:408] conv1 <- pool0
I0428 20:13:59.557832 32578 net.cpp:382] conv1 -> conv1
I0428 20:13:59.559739 32578 net.cpp:124] Setting up conv1
I0428 20:13:59.559769 32578 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:13:59.559773 32578 net.cpp:139] Memory required for data: 9449728
I0428 20:13:59.559782 32578 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:59.559792 32578 net.cpp:86] Creating Layer pool1
I0428 20:13:59.559795 32578 net.cpp:408] pool1 <- conv1
I0428 20:13:59.559800 32578 net.cpp:382] pool1 -> pool1
I0428 20:13:59.559855 32578 net.cpp:124] Setting up pool1
I0428 20:13:59.559861 32578 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:13:59.559865 32578 net.cpp:139] Memory required for data: 9457920
I0428 20:13:59.559869 32578 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:59.559875 32578 net.cpp:86] Creating Layer ip1
I0428 20:13:59.559878 32578 net.cpp:408] ip1 <- pool1
I0428 20:13:59.559883 32578 net.cpp:382] ip1 -> ip1
I0428 20:13:59.560014 32578 net.cpp:124] Setting up ip1
I0428 20:13:59.560020 32578 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:59.560024 32578 net.cpp:139] Memory required for data: 9460480
I0428 20:13:59.560030 32578 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:59.560036 32578 net.cpp:86] Creating Layer relu1
I0428 20:13:59.560039 32578 net.cpp:408] relu1 <- ip1
I0428 20:13:59.560044 32578 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:59.560219 32578 net.cpp:124] Setting up relu1
I0428 20:13:59.560227 32578 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:59.560230 32578 net.cpp:139] Memory required for data: 9463040
I0428 20:13:59.560232 32578 layer_factory.hpp:77] Creating layer loss
I0428 20:13:59.560238 32578 net.cpp:86] Creating Layer loss
I0428 20:13:59.560241 32578 net.cpp:408] loss <- ip1
I0428 20:13:59.560245 32578 net.cpp:408] loss <- label
I0428 20:13:59.560250 32578 net.cpp:382] loss -> loss
I0428 20:13:59.560263 32578 layer_factory.hpp:77] Creating layer loss
I0428 20:13:59.561065 32578 net.cpp:124] Setting up loss
I0428 20:13:59.561092 32578 net.cpp:131] Top shape: (1)
I0428 20:13:59.561096 32578 net.cpp:134]     with loss weight 1
I0428 20:13:59.561110 32578 net.cpp:139] Memory required for data: 9463044
I0428 20:13:59.561115 32578 net.cpp:200] loss needs backward computation.
I0428 20:13:59.561117 32578 net.cpp:200] relu1 needs backward computation.
I0428 20:13:59.561120 32578 net.cpp:200] ip1 needs backward computation.
I0428 20:13:59.561123 32578 net.cpp:200] pool1 needs backward computation.
I0428 20:13:59.561126 32578 net.cpp:200] conv1 needs backward computation.
I0428 20:13:59.561130 32578 net.cpp:200] pool0 needs backward computation.
I0428 20:13:59.561132 32578 net.cpp:200] conv0 needs backward computation.
I0428 20:13:59.561136 32578 net.cpp:202] mnist does not need backward computation.
I0428 20:13:59.561138 32578 net.cpp:244] This network produces output loss
I0428 20:13:59.561146 32578 net.cpp:257] Network initialization done.
I0428 20:13:59.561421 32578 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1210.prototxt
I0428 20:13:59.561445 32578 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:59.561517 32578 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:13:59.561583 32578 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:59.561625 32578 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:59.561637 32578 net.cpp:86] Creating Layer mnist
I0428 20:13:59.561642 32578 net.cpp:382] mnist -> data
I0428 20:13:59.561650 32578 net.cpp:382] mnist -> label
I0428 20:13:59.561728 32578 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:59.563735 32578 net.cpp:124] Setting up mnist
I0428 20:13:59.563762 32578 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:59.563767 32578 net.cpp:131] Top shape: 100 (100)
I0428 20:13:59.563771 32578 net.cpp:139] Memory required for data: 314000
I0428 20:13:59.563774 32578 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:59.563781 32578 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:59.563784 32578 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:59.563788 32578 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:59.563796 32578 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:59.563848 32578 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:59.563853 32578 net.cpp:131] Top shape: 100 (100)
I0428 20:13:59.563856 32578 net.cpp:131] Top shape: 100 (100)
I0428 20:13:59.563859 32578 net.cpp:139] Memory required for data: 314800
I0428 20:13:59.563863 32578 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:59.563870 32578 net.cpp:86] Creating Layer conv0
I0428 20:13:59.563874 32578 net.cpp:408] conv0 <- data
I0428 20:13:59.563877 32578 net.cpp:382] conv0 -> conv0
I0428 20:13:59.564945 32578 net.cpp:124] Setting up conv0
I0428 20:13:59.564959 32578 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:13:59.564961 32578 net.cpp:139] Memory required for data: 11834800
I0428 20:13:59.564986 32578 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:59.564993 32578 net.cpp:86] Creating Layer pool0
I0428 20:13:59.564996 32578 net.cpp:408] pool0 <- conv0
I0428 20:13:59.565001 32578 net.cpp:382] pool0 -> pool0
I0428 20:13:59.565038 32578 net.cpp:124] Setting up pool0
I0428 20:13:59.565045 32578 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:13:59.565048 32578 net.cpp:139] Memory required for data: 14714800
I0428 20:13:59.565052 32578 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:59.565059 32578 net.cpp:86] Creating Layer conv1
I0428 20:13:59.565063 32578 net.cpp:408] conv1 <- pool0
I0428 20:13:59.565068 32578 net.cpp:382] conv1 -> conv1
I0428 20:13:59.566864 32578 net.cpp:124] Setting up conv1
I0428 20:13:59.566879 32578 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:13:59.566882 32578 net.cpp:139] Memory required for data: 14766000
I0428 20:13:59.566892 32578 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:59.566898 32578 net.cpp:86] Creating Layer pool1
I0428 20:13:59.566913 32578 net.cpp:408] pool1 <- conv1
I0428 20:13:59.566920 32578 net.cpp:382] pool1 -> pool1
I0428 20:13:59.566959 32578 net.cpp:124] Setting up pool1
I0428 20:13:59.566964 32578 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:13:59.566967 32578 net.cpp:139] Memory required for data: 14778800
I0428 20:13:59.566977 32578 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:59.566985 32578 net.cpp:86] Creating Layer ip1
I0428 20:13:59.566988 32578 net.cpp:408] ip1 <- pool1
I0428 20:13:59.567005 32578 net.cpp:382] ip1 -> ip1
I0428 20:13:59.567118 32578 net.cpp:124] Setting up ip1
I0428 20:13:59.567127 32578 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:59.567131 32578 net.cpp:139] Memory required for data: 14782800
I0428 20:13:59.567138 32578 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:59.567143 32578 net.cpp:86] Creating Layer relu1
I0428 20:13:59.567162 32578 net.cpp:408] relu1 <- ip1
I0428 20:13:59.567167 32578 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:59.568003 32578 net.cpp:124] Setting up relu1
I0428 20:13:59.568014 32578 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:59.568018 32578 net.cpp:139] Memory required for data: 14786800
I0428 20:13:59.568022 32578 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:13:59.568027 32578 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:13:59.568029 32578 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:13:59.568035 32578 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:13:59.568040 32578 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:13:59.568087 32578 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:13:59.568094 32578 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:59.568096 32578 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:59.568099 32578 net.cpp:139] Memory required for data: 14794800
I0428 20:13:59.568101 32578 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:59.568105 32578 net.cpp:86] Creating Layer accuracy
I0428 20:13:59.568109 32578 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:13:59.568112 32578 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:59.568115 32578 net.cpp:382] accuracy -> accuracy
I0428 20:13:59.568121 32578 net.cpp:124] Setting up accuracy
I0428 20:13:59.568125 32578 net.cpp:131] Top shape: (1)
I0428 20:13:59.568128 32578 net.cpp:139] Memory required for data: 14794804
I0428 20:13:59.568131 32578 layer_factory.hpp:77] Creating layer loss
I0428 20:13:59.568136 32578 net.cpp:86] Creating Layer loss
I0428 20:13:59.568138 32578 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:13:59.568142 32578 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:59.568146 32578 net.cpp:382] loss -> loss
I0428 20:13:59.568151 32578 layer_factory.hpp:77] Creating layer loss
I0428 20:13:59.568369 32578 net.cpp:124] Setting up loss
I0428 20:13:59.568377 32578 net.cpp:131] Top shape: (1)
I0428 20:13:59.568387 32578 net.cpp:134]     with loss weight 1
I0428 20:13:59.568392 32578 net.cpp:139] Memory required for data: 14794808
I0428 20:13:59.568395 32578 net.cpp:200] loss needs backward computation.
I0428 20:13:59.568399 32578 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:59.568403 32578 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:13:59.568405 32578 net.cpp:200] relu1 needs backward computation.
I0428 20:13:59.568408 32578 net.cpp:200] ip1 needs backward computation.
I0428 20:13:59.568410 32578 net.cpp:200] pool1 needs backward computation.
I0428 20:13:59.568413 32578 net.cpp:200] conv1 needs backward computation.
I0428 20:13:59.568416 32578 net.cpp:200] pool0 needs backward computation.
I0428 20:13:59.568418 32578 net.cpp:200] conv0 needs backward computation.
I0428 20:13:59.568423 32578 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:59.568426 32578 net.cpp:202] mnist does not need backward computation.
I0428 20:13:59.568429 32578 net.cpp:244] This network produces output accuracy
I0428 20:13:59.568442 32578 net.cpp:244] This network produces output loss
I0428 20:13:59.568460 32578 net.cpp:257] Network initialization done.
I0428 20:13:59.568491 32578 solver.cpp:56] Solver scaffolding done.
I0428 20:13:59.568711 32578 caffe.cpp:248] Starting Optimization
I0428 20:13:59.568717 32578 solver.cpp:273] Solving LeNet
I0428 20:13:59.568720 32578 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:59.569547 32578 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:59.574770 32578 blocking_queue.cpp:49] Waiting for data
I0428 20:13:59.645719 32585 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:59.646387 32578 solver.cpp:398]     Test net output #0: accuracy = 0.0745
I0428 20:13:59.646405 32578 solver.cpp:398]     Test net output #1: loss = 2.46875 (* 1 = 2.46875 loss)
I0428 20:13:59.650593 32578 solver.cpp:219] Iteration 0 (0 iter/s, 0.0818309s/100 iters), loss = 2.40758
I0428 20:13:59.650630 32578 solver.cpp:238]     Train net output #0: loss = 2.40758 (* 1 = 2.40758 loss)
I0428 20:13:59.650641 32578 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:59.762724 32578 solver.cpp:219] Iteration 100 (892.229 iter/s, 0.112079s/100 iters), loss = 0.529187
I0428 20:13:59.762768 32578 solver.cpp:238]     Train net output #0: loss = 0.529187 (* 1 = 0.529187 loss)
I0428 20:13:59.762774 32578 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:59.874610 32578 solver.cpp:219] Iteration 200 (894.214 iter/s, 0.11183s/100 iters), loss = 0.331867
I0428 20:13:59.874665 32578 solver.cpp:238]     Train net output #0: loss = 0.331867 (* 1 = 0.331867 loss)
I0428 20:13:59.874671 32578 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:59.986768 32578 solver.cpp:219] Iteration 300 (891.993 iter/s, 0.112109s/100 iters), loss = 0.334848
I0428 20:13:59.986807 32578 solver.cpp:238]     Train net output #0: loss = 0.334848 (* 1 = 0.334848 loss)
I0428 20:13:59.986814 32578 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:14:00.088052 32578 solver.cpp:219] Iteration 400 (987.814 iter/s, 0.101234s/100 iters), loss = 0.184379
I0428 20:14:00.088091 32578 solver.cpp:238]     Train net output #0: loss = 0.184379 (* 1 = 0.184379 loss)
I0428 20:14:00.088098 32578 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:14:00.194452 32578 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:14:00.267410 32585 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:00.268065 32578 solver.cpp:398]     Test net output #0: accuracy = 0.9419
I0428 20:14:00.268100 32578 solver.cpp:398]     Test net output #1: loss = 0.192561 (* 1 = 0.192561 loss)
I0428 20:14:00.269116 32578 solver.cpp:219] Iteration 500 (552.41 iter/s, 0.181025s/100 iters), loss = 0.207856
I0428 20:14:00.269163 32578 solver.cpp:238]     Train net output #0: loss = 0.207856 (* 1 = 0.207856 loss)
I0428 20:14:00.269171 32578 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:14:00.378461 32578 solver.cpp:219] Iteration 600 (915.011 iter/s, 0.109288s/100 iters), loss = 0.156244
I0428 20:14:00.378484 32578 solver.cpp:238]     Train net output #0: loss = 0.156244 (* 1 = 0.156244 loss)
I0428 20:14:00.378490 32578 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:14:00.477921 32578 solver.cpp:219] Iteration 700 (1005.81 iter/s, 0.0994222s/100 iters), loss = 0.220853
I0428 20:14:00.477953 32578 solver.cpp:238]     Train net output #0: loss = 0.220853 (* 1 = 0.220853 loss)
I0428 20:14:00.477960 32578 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:14:00.588505 32578 solver.cpp:219] Iteration 800 (904.668 iter/s, 0.110538s/100 iters), loss = 0.304098
I0428 20:14:00.588547 32578 solver.cpp:238]     Train net output #0: loss = 0.304098 (* 1 = 0.304098 loss)
I0428 20:14:00.588554 32578 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:14:00.693416 32578 solver.cpp:219] Iteration 900 (953.685 iter/s, 0.104856s/100 iters), loss = 0.303179
I0428 20:14:00.693454 32578 solver.cpp:238]     Train net output #0: loss = 0.303179 (* 1 = 0.303179 loss)
I0428 20:14:00.693464 32578 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:14:00.728209 32584 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:00.800758 32578 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:14:00.801563 32578 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:14:00.802141 32578 solver.cpp:311] Iteration 1000, loss = 0.207335
I0428 20:14:00.802156 32578 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:14:00.877374 32585 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:00.878057 32578 solver.cpp:398]     Test net output #0: accuracy = 0.959
I0428 20:14:00.878092 32578 solver.cpp:398]     Test net output #1: loss = 0.135339 (* 1 = 0.135339 loss)
I0428 20:14:00.878096 32578 solver.cpp:316] Optimization Done.
I0428 20:14:00.878100 32578 caffe.cpp:259] Optimization Done.
