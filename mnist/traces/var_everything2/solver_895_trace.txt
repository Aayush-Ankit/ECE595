I0428 20:01:08.142375 29659 caffe.cpp:218] Using GPUs 0
I0428 20:01:08.179674 29659 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:01:08.702666 29659 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test895.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:01:08.702842 29659 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test895.prototxt
I0428 20:01:08.703274 29659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:01:08.703299 29659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:01:08.703415 29659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:08.703532 29659 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:08.703665 29659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:01:08.703701 29659 net.cpp:86] Creating Layer mnist
I0428 20:01:08.703713 29659 net.cpp:382] mnist -> data
I0428 20:01:08.703745 29659 net.cpp:382] mnist -> label
I0428 20:01:08.705024 29659 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:01:08.707506 29659 net.cpp:124] Setting up mnist
I0428 20:01:08.707527 29659 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:01:08.707540 29659 net.cpp:131] Top shape: 64 (64)
I0428 20:01:08.707546 29659 net.cpp:139] Memory required for data: 200960
I0428 20:01:08.707557 29659 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:08.707579 29659 net.cpp:86] Creating Layer conv0
I0428 20:01:08.707603 29659 net.cpp:408] conv0 <- data
I0428 20:01:08.707625 29659 net.cpp:382] conv0 -> conv0
I0428 20:01:08.998661 29659 net.cpp:124] Setting up conv0
I0428 20:01:08.998703 29659 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:01:08.998711 29659 net.cpp:139] Memory required for data: 1675520
I0428 20:01:08.998736 29659 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:08.998754 29659 net.cpp:86] Creating Layer pool0
I0428 20:01:08.998761 29659 net.cpp:408] pool0 <- conv0
I0428 20:01:08.998771 29659 net.cpp:382] pool0 -> pool0
I0428 20:01:08.998850 29659 net.cpp:124] Setting up pool0
I0428 20:01:08.998867 29659 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:01:08.998872 29659 net.cpp:139] Memory required for data: 2044160
I0428 20:01:08.998878 29659 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:08.998898 29659 net.cpp:86] Creating Layer conv1
I0428 20:01:08.998911 29659 net.cpp:408] conv1 <- pool0
I0428 20:01:08.998919 29659 net.cpp:382] conv1 -> conv1
I0428 20:01:09.002240 29659 net.cpp:124] Setting up conv1
I0428 20:01:09.002259 29659 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:01:09.002264 29659 net.cpp:139] Memory required for data: 2453760
I0428 20:01:09.002274 29659 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:09.002284 29659 net.cpp:86] Creating Layer pool1
I0428 20:01:09.002288 29659 net.cpp:408] pool1 <- conv1
I0428 20:01:09.002296 29659 net.cpp:382] pool1 -> pool1
I0428 20:01:09.002343 29659 net.cpp:124] Setting up pool1
I0428 20:01:09.002349 29659 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:01:09.002353 29659 net.cpp:139] Memory required for data: 2556160
I0428 20:01:09.002357 29659 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:09.002365 29659 net.cpp:86] Creating Layer ip1
I0428 20:01:09.002369 29659 net.cpp:408] ip1 <- pool1
I0428 20:01:09.002377 29659 net.cpp:382] ip1 -> ip1
I0428 20:01:09.002627 29659 net.cpp:124] Setting up ip1
I0428 20:01:09.002638 29659 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:09.002642 29659 net.cpp:139] Memory required for data: 2568960
I0428 20:01:09.002650 29659 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:09.002657 29659 net.cpp:86] Creating Layer relu1
I0428 20:01:09.002660 29659 net.cpp:408] relu1 <- ip1
I0428 20:01:09.002666 29659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:09.002876 29659 net.cpp:124] Setting up relu1
I0428 20:01:09.002887 29659 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:09.002890 29659 net.cpp:139] Memory required for data: 2581760
I0428 20:01:09.002894 29659 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:09.002903 29659 net.cpp:86] Creating Layer ip2
I0428 20:01:09.002907 29659 net.cpp:408] ip2 <- ip1
I0428 20:01:09.002913 29659 net.cpp:382] ip2 -> ip2
I0428 20:01:09.004021 29659 net.cpp:124] Setting up ip2
I0428 20:01:09.004036 29659 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:09.004040 29659 net.cpp:139] Memory required for data: 2594560
I0428 20:01:09.004047 29659 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:09.004056 29659 net.cpp:86] Creating Layer relu2
I0428 20:01:09.004060 29659 net.cpp:408] relu2 <- ip2
I0428 20:01:09.004066 29659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:09.004936 29659 net.cpp:124] Setting up relu2
I0428 20:01:09.004951 29659 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:09.004956 29659 net.cpp:139] Memory required for data: 2607360
I0428 20:01:09.004961 29659 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:09.004968 29659 net.cpp:86] Creating Layer ip3
I0428 20:01:09.004971 29659 net.cpp:408] ip3 <- ip2
I0428 20:01:09.004979 29659 net.cpp:382] ip3 -> ip3
I0428 20:01:09.005111 29659 net.cpp:124] Setting up ip3
I0428 20:01:09.005120 29659 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:09.005125 29659 net.cpp:139] Memory required for data: 2609920
I0428 20:01:09.005134 29659 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:09.005143 29659 net.cpp:86] Creating Layer relu3
I0428 20:01:09.005147 29659 net.cpp:408] relu3 <- ip3
I0428 20:01:09.005152 29659 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:09.005358 29659 net.cpp:124] Setting up relu3
I0428 20:01:09.005369 29659 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:09.005373 29659 net.cpp:139] Memory required for data: 2612480
I0428 20:01:09.005376 29659 layer_factory.hpp:77] Creating layer loss
I0428 20:01:09.005385 29659 net.cpp:86] Creating Layer loss
I0428 20:01:09.005388 29659 net.cpp:408] loss <- ip3
I0428 20:01:09.005393 29659 net.cpp:408] loss <- label
I0428 20:01:09.005399 29659 net.cpp:382] loss -> loss
I0428 20:01:09.005421 29659 layer_factory.hpp:77] Creating layer loss
I0428 20:01:09.005722 29659 net.cpp:124] Setting up loss
I0428 20:01:09.005734 29659 net.cpp:131] Top shape: (1)
I0428 20:01:09.005738 29659 net.cpp:134]     with loss weight 1
I0428 20:01:09.005753 29659 net.cpp:139] Memory required for data: 2612484
I0428 20:01:09.005758 29659 net.cpp:200] loss needs backward computation.
I0428 20:01:09.005761 29659 net.cpp:200] relu3 needs backward computation.
I0428 20:01:09.005765 29659 net.cpp:200] ip3 needs backward computation.
I0428 20:01:09.005769 29659 net.cpp:200] relu2 needs backward computation.
I0428 20:01:09.005771 29659 net.cpp:200] ip2 needs backward computation.
I0428 20:01:09.005775 29659 net.cpp:200] relu1 needs backward computation.
I0428 20:01:09.005779 29659 net.cpp:200] ip1 needs backward computation.
I0428 20:01:09.005781 29659 net.cpp:200] pool1 needs backward computation.
I0428 20:01:09.005785 29659 net.cpp:200] conv1 needs backward computation.
I0428 20:01:09.005789 29659 net.cpp:200] pool0 needs backward computation.
I0428 20:01:09.005791 29659 net.cpp:200] conv0 needs backward computation.
I0428 20:01:09.005795 29659 net.cpp:202] mnist does not need backward computation.
I0428 20:01:09.005801 29659 net.cpp:244] This network produces output loss
I0428 20:01:09.005812 29659 net.cpp:257] Network initialization done.
I0428 20:01:09.006201 29659 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test895.prototxt
I0428 20:01:09.006233 29659 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:01:09.006345 29659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:09.006443 29659 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:09.006496 29659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:01:09.006510 29659 net.cpp:86] Creating Layer mnist
I0428 20:01:09.006517 29659 net.cpp:382] mnist -> data
I0428 20:01:09.006526 29659 net.cpp:382] mnist -> label
I0428 20:01:09.006631 29659 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:01:09.008829 29659 net.cpp:124] Setting up mnist
I0428 20:01:09.008846 29659 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:01:09.008853 29659 net.cpp:131] Top shape: 100 (100)
I0428 20:01:09.008857 29659 net.cpp:139] Memory required for data: 314000
I0428 20:01:09.008862 29659 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:01:09.008869 29659 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:01:09.008873 29659 net.cpp:408] label_mnist_1_split <- label
I0428 20:01:09.008908 29659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:01:09.008918 29659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:01:09.009042 29659 net.cpp:124] Setting up label_mnist_1_split
I0428 20:01:09.009052 29659 net.cpp:131] Top shape: 100 (100)
I0428 20:01:09.009055 29659 net.cpp:131] Top shape: 100 (100)
I0428 20:01:09.009059 29659 net.cpp:139] Memory required for data: 314800
I0428 20:01:09.009063 29659 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:09.009073 29659 net.cpp:86] Creating Layer conv0
I0428 20:01:09.009078 29659 net.cpp:408] conv0 <- data
I0428 20:01:09.009085 29659 net.cpp:382] conv0 -> conv0
I0428 20:01:09.011044 29659 net.cpp:124] Setting up conv0
I0428 20:01:09.011062 29659 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:01:09.011066 29659 net.cpp:139] Memory required for data: 2618800
I0428 20:01:09.011077 29659 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:09.011085 29659 net.cpp:86] Creating Layer pool0
I0428 20:01:09.011090 29659 net.cpp:408] pool0 <- conv0
I0428 20:01:09.011096 29659 net.cpp:382] pool0 -> pool0
I0428 20:01:09.011142 29659 net.cpp:124] Setting up pool0
I0428 20:01:09.011147 29659 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:01:09.011152 29659 net.cpp:139] Memory required for data: 3194800
I0428 20:01:09.011154 29659 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:09.011168 29659 net.cpp:86] Creating Layer conv1
I0428 20:01:09.011170 29659 net.cpp:408] conv1 <- pool0
I0428 20:01:09.011176 29659 net.cpp:382] conv1 -> conv1
I0428 20:01:09.013613 29659 net.cpp:124] Setting up conv1
I0428 20:01:09.013629 29659 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:01:09.013633 29659 net.cpp:139] Memory required for data: 3834800
I0428 20:01:09.013644 29659 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:09.013651 29659 net.cpp:86] Creating Layer pool1
I0428 20:01:09.013655 29659 net.cpp:408] pool1 <- conv1
I0428 20:01:09.013664 29659 net.cpp:382] pool1 -> pool1
I0428 20:01:09.013725 29659 net.cpp:124] Setting up pool1
I0428 20:01:09.013739 29659 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:01:09.013744 29659 net.cpp:139] Memory required for data: 3994800
I0428 20:01:09.013747 29659 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:09.013756 29659 net.cpp:86] Creating Layer ip1
I0428 20:01:09.013761 29659 net.cpp:408] ip1 <- pool1
I0428 20:01:09.013767 29659 net.cpp:382] ip1 -> ip1
I0428 20:01:09.014061 29659 net.cpp:124] Setting up ip1
I0428 20:01:09.014071 29659 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:09.014094 29659 net.cpp:139] Memory required for data: 4014800
I0428 20:01:09.014104 29659 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:09.014111 29659 net.cpp:86] Creating Layer relu1
I0428 20:01:09.014114 29659 net.cpp:408] relu1 <- ip1
I0428 20:01:09.014122 29659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:09.014330 29659 net.cpp:124] Setting up relu1
I0428 20:01:09.014340 29659 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:09.014345 29659 net.cpp:139] Memory required for data: 4034800
I0428 20:01:09.014358 29659 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:09.014367 29659 net.cpp:86] Creating Layer ip2
I0428 20:01:09.014371 29659 net.cpp:408] ip2 <- ip1
I0428 20:01:09.014376 29659 net.cpp:382] ip2 -> ip2
I0428 20:01:09.014528 29659 net.cpp:124] Setting up ip2
I0428 20:01:09.014536 29659 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:09.014540 29659 net.cpp:139] Memory required for data: 4054800
I0428 20:01:09.014546 29659 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:09.014554 29659 net.cpp:86] Creating Layer relu2
I0428 20:01:09.014559 29659 net.cpp:408] relu2 <- ip2
I0428 20:01:09.014570 29659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:09.014760 29659 net.cpp:124] Setting up relu2
I0428 20:01:09.014770 29659 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:09.014773 29659 net.cpp:139] Memory required for data: 4074800
I0428 20:01:09.014776 29659 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:09.014785 29659 net.cpp:86] Creating Layer ip3
I0428 20:01:09.014788 29659 net.cpp:408] ip3 <- ip2
I0428 20:01:09.014794 29659 net.cpp:382] ip3 -> ip3
I0428 20:01:09.014947 29659 net.cpp:124] Setting up ip3
I0428 20:01:09.014957 29659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:09.014961 29659 net.cpp:139] Memory required for data: 4078800
I0428 20:01:09.014969 29659 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:09.014976 29659 net.cpp:86] Creating Layer relu3
I0428 20:01:09.014981 29659 net.cpp:408] relu3 <- ip3
I0428 20:01:09.014986 29659 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:09.015959 29659 net.cpp:124] Setting up relu3
I0428 20:01:09.015979 29659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:09.015982 29659 net.cpp:139] Memory required for data: 4082800
I0428 20:01:09.015986 29659 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:01:09.015993 29659 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:01:09.015997 29659 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:01:09.016003 29659 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:01:09.016010 29659 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:01:09.016058 29659 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:01:09.016065 29659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:09.016069 29659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:09.016073 29659 net.cpp:139] Memory required for data: 4090800
I0428 20:01:09.016077 29659 layer_factory.hpp:77] Creating layer accuracy
I0428 20:01:09.016088 29659 net.cpp:86] Creating Layer accuracy
I0428 20:01:09.016099 29659 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:01:09.016104 29659 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:01:09.016111 29659 net.cpp:382] accuracy -> accuracy
I0428 20:01:09.016119 29659 net.cpp:124] Setting up accuracy
I0428 20:01:09.016124 29659 net.cpp:131] Top shape: (1)
I0428 20:01:09.016127 29659 net.cpp:139] Memory required for data: 4090804
I0428 20:01:09.016131 29659 layer_factory.hpp:77] Creating layer loss
I0428 20:01:09.016137 29659 net.cpp:86] Creating Layer loss
I0428 20:01:09.016141 29659 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:01:09.016145 29659 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:01:09.016150 29659 net.cpp:382] loss -> loss
I0428 20:01:09.016157 29659 layer_factory.hpp:77] Creating layer loss
I0428 20:01:09.016444 29659 net.cpp:124] Setting up loss
I0428 20:01:09.016455 29659 net.cpp:131] Top shape: (1)
I0428 20:01:09.016460 29659 net.cpp:134]     with loss weight 1
I0428 20:01:09.016479 29659 net.cpp:139] Memory required for data: 4090808
I0428 20:01:09.016484 29659 net.cpp:200] loss needs backward computation.
I0428 20:01:09.016487 29659 net.cpp:202] accuracy does not need backward computation.
I0428 20:01:09.016492 29659 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:01:09.016495 29659 net.cpp:200] relu3 needs backward computation.
I0428 20:01:09.016499 29659 net.cpp:200] ip3 needs backward computation.
I0428 20:01:09.016502 29659 net.cpp:200] relu2 needs backward computation.
I0428 20:01:09.016506 29659 net.cpp:200] ip2 needs backward computation.
I0428 20:01:09.016518 29659 net.cpp:200] relu1 needs backward computation.
I0428 20:01:09.016521 29659 net.cpp:200] ip1 needs backward computation.
I0428 20:01:09.016525 29659 net.cpp:200] pool1 needs backward computation.
I0428 20:01:09.016528 29659 net.cpp:200] conv1 needs backward computation.
I0428 20:01:09.016532 29659 net.cpp:200] pool0 needs backward computation.
I0428 20:01:09.016535 29659 net.cpp:200] conv0 needs backward computation.
I0428 20:01:09.016541 29659 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:01:09.016544 29659 net.cpp:202] mnist does not need backward computation.
I0428 20:01:09.016547 29659 net.cpp:244] This network produces output accuracy
I0428 20:01:09.016551 29659 net.cpp:244] This network produces output loss
I0428 20:01:09.016566 29659 net.cpp:257] Network initialization done.
I0428 20:01:09.016621 29659 solver.cpp:56] Solver scaffolding done.
I0428 20:01:09.017031 29659 caffe.cpp:248] Starting Optimization
I0428 20:01:09.017040 29659 solver.cpp:273] Solving LeNet
I0428 20:01:09.017043 29659 solver.cpp:274] Learning Rate Policy: inv
I0428 20:01:09.018050 29659 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:01:09.021999 29659 blocking_queue.cpp:49] Waiting for data
I0428 20:01:09.092296 29666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:09.092887 29659 solver.cpp:398]     Test net output #0: accuracy = 0.0991
I0428 20:01:09.092912 29659 solver.cpp:398]     Test net output #1: loss = 2.30115 (* 1 = 2.30115 loss)
I0428 20:01:09.095698 29659 solver.cpp:219] Iteration 0 (-1.99739e-31 iter/s, 0.0786115s/100 iters), loss = 2.2898
I0428 20:01:09.095729 29659 solver.cpp:238]     Train net output #0: loss = 2.2898 (* 1 = 2.2898 loss)
I0428 20:01:09.095743 29659 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:01:09.190371 29659 solver.cpp:219] Iteration 100 (1056.78 iter/s, 0.0946268s/100 iters), loss = 0.699635
I0428 20:01:09.190403 29659 solver.cpp:238]     Train net output #0: loss = 0.699635 (* 1 = 0.699635 loss)
I0428 20:01:09.190412 29659 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:01:09.284167 29659 solver.cpp:219] Iteration 200 (1066.63 iter/s, 0.0937533s/100 iters), loss = 0.272465
I0428 20:01:09.284198 29659 solver.cpp:238]     Train net output #0: loss = 0.272465 (* 1 = 0.272465 loss)
I0428 20:01:09.284205 29659 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:01:09.377475 29659 solver.cpp:219] Iteration 300 (1072.2 iter/s, 0.0932659s/100 iters), loss = 0.204141
I0428 20:01:09.377506 29659 solver.cpp:238]     Train net output #0: loss = 0.204141 (* 1 = 0.204141 loss)
I0428 20:01:09.377513 29659 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:01:09.475512 29659 solver.cpp:219] Iteration 400 (1020.45 iter/s, 0.0979957s/100 iters), loss = 0.0634254
I0428 20:01:09.475545 29659 solver.cpp:238]     Train net output #0: loss = 0.0634255 (* 1 = 0.0634255 loss)
I0428 20:01:09.475553 29659 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:01:09.576763 29659 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:01:09.652040 29666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:09.652585 29659 solver.cpp:398]     Test net output #0: accuracy = 0.9651
I0428 20:01:09.652607 29659 solver.cpp:398]     Test net output #1: loss = 0.11557 (* 1 = 0.11557 loss)
I0428 20:01:09.653508 29659 solver.cpp:219] Iteration 500 (561.959 iter/s, 0.177949s/100 iters), loss = 0.119963
I0428 20:01:09.653553 29659 solver.cpp:238]     Train net output #0: loss = 0.119963 (* 1 = 0.119963 loss)
I0428 20:01:09.653559 29659 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:01:09.752478 29659 solver.cpp:219] Iteration 600 (1010.96 iter/s, 0.0989164s/100 iters), loss = 0.0882896
I0428 20:01:09.752518 29659 solver.cpp:238]     Train net output #0: loss = 0.0882897 (* 1 = 0.0882897 loss)
I0428 20:01:09.752526 29659 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:01:09.844509 29659 solver.cpp:219] Iteration 700 (1086.98 iter/s, 0.0919982s/100 iters), loss = 0.181212
I0428 20:01:09.844533 29659 solver.cpp:238]     Train net output #0: loss = 0.181212 (* 1 = 0.181212 loss)
I0428 20:01:09.844539 29659 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:01:09.936126 29659 solver.cpp:219] Iteration 800 (1091.91 iter/s, 0.0915826s/100 iters), loss = 0.308819
I0428 20:01:09.936166 29659 solver.cpp:238]     Train net output #0: loss = 0.308819 (* 1 = 0.308819 loss)
I0428 20:01:09.936172 29659 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:01:10.027948 29659 solver.cpp:219] Iteration 900 (1089.46 iter/s, 0.0917883s/100 iters), loss = 0.123837
I0428 20:01:10.027987 29659 solver.cpp:238]     Train net output #0: loss = 0.123837 (* 1 = 0.123837 loss)
I0428 20:01:10.027993 29659 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:01:10.058897 29665 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:10.118547 29659 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:01:10.119771 29659 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:01:10.120517 29659 solver.cpp:311] Iteration 1000, loss = 0.0877678
I0428 20:01:10.120530 29659 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:01:10.195314 29666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:10.195844 29659 solver.cpp:398]     Test net output #0: accuracy = 0.9742
I0428 20:01:10.195865 29659 solver.cpp:398]     Test net output #1: loss = 0.0805061 (* 1 = 0.0805061 loss)
I0428 20:01:10.195869 29659 solver.cpp:316] Optimization Done.
I0428 20:01:10.195873 29659 caffe.cpp:259] Optimization Done.
