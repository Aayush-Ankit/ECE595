I0428 20:28:29.344862  3360 caffe.cpp:218] Using GPUs 0
I0428 20:28:29.385962  3360 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:28:29.906709  3360 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1506.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:28:29.906854  3360 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1506.prototxt
I0428 20:28:29.907266  3360 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:28:29.907285  3360 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:28:29.907388  3360 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:29.907469  3360 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:29.907567  3360 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:28:29.907591  3360 net.cpp:86] Creating Layer mnist
I0428 20:28:29.907599  3360 net.cpp:382] mnist -> data
I0428 20:28:29.907621  3360 net.cpp:382] mnist -> label
I0428 20:28:29.908715  3360 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:28:29.911175  3360 net.cpp:124] Setting up mnist
I0428 20:28:29.911193  3360 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:28:29.911200  3360 net.cpp:131] Top shape: 64 (64)
I0428 20:28:29.911203  3360 net.cpp:139] Memory required for data: 200960
I0428 20:28:29.911211  3360 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:29.911231  3360 net.cpp:86] Creating Layer conv0
I0428 20:28:29.911252  3360 net.cpp:408] conv0 <- data
I0428 20:28:29.911264  3360 net.cpp:382] conv0 -> conv0
I0428 20:28:30.204067  3360 net.cpp:124] Setting up conv0
I0428 20:28:30.204098  3360 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:28:30.204103  3360 net.cpp:139] Memory required for data: 14946560
I0428 20:28:30.204120  3360 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:30.204135  3360 net.cpp:86] Creating Layer pool0
I0428 20:28:30.204139  3360 net.cpp:408] pool0 <- conv0
I0428 20:28:30.204146  3360 net.cpp:382] pool0 -> pool0
I0428 20:28:30.204205  3360 net.cpp:124] Setting up pool0
I0428 20:28:30.204211  3360 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:28:30.204215  3360 net.cpp:139] Memory required for data: 18632960
I0428 20:28:30.204218  3360 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:30.204231  3360 net.cpp:86] Creating Layer conv1
I0428 20:28:30.204236  3360 net.cpp:408] conv1 <- pool0
I0428 20:28:30.204241  3360 net.cpp:382] conv1 -> conv1
I0428 20:28:30.207324  3360 net.cpp:124] Setting up conv1
I0428 20:28:30.207342  3360 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:28:30.207346  3360 net.cpp:139] Memory required for data: 18714880
I0428 20:28:30.207356  3360 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:30.207365  3360 net.cpp:86] Creating Layer pool1
I0428 20:28:30.207371  3360 net.cpp:408] pool1 <- conv1
I0428 20:28:30.207377  3360 net.cpp:382] pool1 -> pool1
I0428 20:28:30.207422  3360 net.cpp:124] Setting up pool1
I0428 20:28:30.207429  3360 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:28:30.207432  3360 net.cpp:139] Memory required for data: 18735360
I0428 20:28:30.207437  3360 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:30.207449  3360 net.cpp:86] Creating Layer ip1
I0428 20:28:30.207453  3360 net.cpp:408] ip1 <- pool1
I0428 20:28:30.207459  3360 net.cpp:382] ip1 -> ip1
I0428 20:28:30.207581  3360 net.cpp:124] Setting up ip1
I0428 20:28:30.207592  3360 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:30.207594  3360 net.cpp:139] Memory required for data: 18741760
I0428 20:28:30.207603  3360 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:30.207610  3360 net.cpp:86] Creating Layer relu1
I0428 20:28:30.207614  3360 net.cpp:408] relu1 <- ip1
I0428 20:28:30.207619  3360 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:30.207808  3360 net.cpp:124] Setting up relu1
I0428 20:28:30.207818  3360 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:30.207823  3360 net.cpp:139] Memory required for data: 18748160
I0428 20:28:30.207826  3360 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:30.207834  3360 net.cpp:86] Creating Layer ip2
I0428 20:28:30.207836  3360 net.cpp:408] ip2 <- ip1
I0428 20:28:30.207842  3360 net.cpp:382] ip2 -> ip2
I0428 20:28:30.207950  3360 net.cpp:124] Setting up ip2
I0428 20:28:30.207958  3360 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:30.207962  3360 net.cpp:139] Memory required for data: 18754560
I0428 20:28:30.207968  3360 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:30.207975  3360 net.cpp:86] Creating Layer relu2
I0428 20:28:30.207978  3360 net.cpp:408] relu2 <- ip2
I0428 20:28:30.207983  3360 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:30.208796  3360 net.cpp:124] Setting up relu2
I0428 20:28:30.208817  3360 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:30.208822  3360 net.cpp:139] Memory required for data: 18760960
I0428 20:28:30.208827  3360 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:30.208834  3360 net.cpp:86] Creating Layer ip3
I0428 20:28:30.208838  3360 net.cpp:408] ip3 <- ip2
I0428 20:28:30.208845  3360 net.cpp:382] ip3 -> ip3
I0428 20:28:30.208956  3360 net.cpp:124] Setting up ip3
I0428 20:28:30.208966  3360 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:30.208969  3360 net.cpp:139] Memory required for data: 18763520
I0428 20:28:30.208978  3360 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:30.208984  3360 net.cpp:86] Creating Layer relu3
I0428 20:28:30.208988  3360 net.cpp:408] relu3 <- ip3
I0428 20:28:30.208993  3360 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:30.209185  3360 net.cpp:124] Setting up relu3
I0428 20:28:30.209195  3360 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:30.209199  3360 net.cpp:139] Memory required for data: 18766080
I0428 20:28:30.209203  3360 layer_factory.hpp:77] Creating layer loss
I0428 20:28:30.209210  3360 net.cpp:86] Creating Layer loss
I0428 20:28:30.209213  3360 net.cpp:408] loss <- ip3
I0428 20:28:30.209218  3360 net.cpp:408] loss <- label
I0428 20:28:30.209224  3360 net.cpp:382] loss -> loss
I0428 20:28:30.209244  3360 layer_factory.hpp:77] Creating layer loss
I0428 20:28:30.209518  3360 net.cpp:124] Setting up loss
I0428 20:28:30.209528  3360 net.cpp:131] Top shape: (1)
I0428 20:28:30.209532  3360 net.cpp:134]     with loss weight 1
I0428 20:28:30.209547  3360 net.cpp:139] Memory required for data: 18766084
I0428 20:28:30.209552  3360 net.cpp:200] loss needs backward computation.
I0428 20:28:30.209556  3360 net.cpp:200] relu3 needs backward computation.
I0428 20:28:30.209560  3360 net.cpp:200] ip3 needs backward computation.
I0428 20:28:30.209563  3360 net.cpp:200] relu2 needs backward computation.
I0428 20:28:30.209568  3360 net.cpp:200] ip2 needs backward computation.
I0428 20:28:30.209573  3360 net.cpp:200] relu1 needs backward computation.
I0428 20:28:30.209575  3360 net.cpp:200] ip1 needs backward computation.
I0428 20:28:30.209579  3360 net.cpp:200] pool1 needs backward computation.
I0428 20:28:30.209583  3360 net.cpp:200] conv1 needs backward computation.
I0428 20:28:30.209588  3360 net.cpp:200] pool0 needs backward computation.
I0428 20:28:30.209591  3360 net.cpp:200] conv0 needs backward computation.
I0428 20:28:30.209595  3360 net.cpp:202] mnist does not need backward computation.
I0428 20:28:30.209599  3360 net.cpp:244] This network produces output loss
I0428 20:28:30.209609  3360 net.cpp:257] Network initialization done.
I0428 20:28:30.209972  3360 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1506.prototxt
I0428 20:28:30.210012  3360 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:28:30.210115  3360 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:30.210203  3360 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:30.210252  3360 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:28:30.210266  3360 net.cpp:86] Creating Layer mnist
I0428 20:28:30.210271  3360 net.cpp:382] mnist -> data
I0428 20:28:30.210280  3360 net.cpp:382] mnist -> label
I0428 20:28:30.210376  3360 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:28:30.212472  3360 net.cpp:124] Setting up mnist
I0428 20:28:30.212487  3360 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:28:30.212493  3360 net.cpp:131] Top shape: 100 (100)
I0428 20:28:30.212497  3360 net.cpp:139] Memory required for data: 314000
I0428 20:28:30.212502  3360 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:28:30.212514  3360 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:28:30.212518  3360 net.cpp:408] label_mnist_1_split <- label
I0428 20:28:30.212524  3360 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:28:30.212532  3360 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:28:30.212585  3360 net.cpp:124] Setting up label_mnist_1_split
I0428 20:28:30.212591  3360 net.cpp:131] Top shape: 100 (100)
I0428 20:28:30.212596  3360 net.cpp:131] Top shape: 100 (100)
I0428 20:28:30.212599  3360 net.cpp:139] Memory required for data: 314800
I0428 20:28:30.212604  3360 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:30.212612  3360 net.cpp:86] Creating Layer conv0
I0428 20:28:30.212616  3360 net.cpp:408] conv0 <- data
I0428 20:28:30.212622  3360 net.cpp:382] conv0 -> conv0
I0428 20:28:30.214457  3360 net.cpp:124] Setting up conv0
I0428 20:28:30.214473  3360 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:28:30.214478  3360 net.cpp:139] Memory required for data: 23354800
I0428 20:28:30.214489  3360 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:30.214496  3360 net.cpp:86] Creating Layer pool0
I0428 20:28:30.214501  3360 net.cpp:408] pool0 <- conv0
I0428 20:28:30.214507  3360 net.cpp:382] pool0 -> pool0
I0428 20:28:30.214550  3360 net.cpp:124] Setting up pool0
I0428 20:28:30.214555  3360 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:28:30.214560  3360 net.cpp:139] Memory required for data: 29114800
I0428 20:28:30.214563  3360 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:30.214572  3360 net.cpp:86] Creating Layer conv1
I0428 20:28:30.214576  3360 net.cpp:408] conv1 <- pool0
I0428 20:28:30.214582  3360 net.cpp:382] conv1 -> conv1
I0428 20:28:30.216310  3360 net.cpp:124] Setting up conv1
I0428 20:28:30.216325  3360 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:28:30.216328  3360 net.cpp:139] Memory required for data: 29242800
I0428 20:28:30.216339  3360 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:30.216346  3360 net.cpp:86] Creating Layer pool1
I0428 20:28:30.216351  3360 net.cpp:408] pool1 <- conv1
I0428 20:28:30.216359  3360 net.cpp:382] pool1 -> pool1
I0428 20:28:30.216400  3360 net.cpp:124] Setting up pool1
I0428 20:28:30.216408  3360 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:28:30.216410  3360 net.cpp:139] Memory required for data: 29274800
I0428 20:28:30.216414  3360 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:30.216423  3360 net.cpp:86] Creating Layer ip1
I0428 20:28:30.216425  3360 net.cpp:408] ip1 <- pool1
I0428 20:28:30.216433  3360 net.cpp:382] ip1 -> ip1
I0428 20:28:30.216562  3360 net.cpp:124] Setting up ip1
I0428 20:28:30.216572  3360 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:30.216598  3360 net.cpp:139] Memory required for data: 29284800
I0428 20:28:30.216608  3360 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:30.216614  3360 net.cpp:86] Creating Layer relu1
I0428 20:28:30.216619  3360 net.cpp:408] relu1 <- ip1
I0428 20:28:30.216624  3360 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:30.216830  3360 net.cpp:124] Setting up relu1
I0428 20:28:30.216840  3360 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:30.216845  3360 net.cpp:139] Memory required for data: 29294800
I0428 20:28:30.216848  3360 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:30.216856  3360 net.cpp:86] Creating Layer ip2
I0428 20:28:30.216859  3360 net.cpp:408] ip2 <- ip1
I0428 20:28:30.216866  3360 net.cpp:382] ip2 -> ip2
I0428 20:28:30.217075  3360 net.cpp:124] Setting up ip2
I0428 20:28:30.217084  3360 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:30.217088  3360 net.cpp:139] Memory required for data: 29304800
I0428 20:28:30.217095  3360 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:30.217102  3360 net.cpp:86] Creating Layer relu2
I0428 20:28:30.217104  3360 net.cpp:408] relu2 <- ip2
I0428 20:28:30.217110  3360 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:30.217288  3360 net.cpp:124] Setting up relu2
I0428 20:28:30.217298  3360 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:30.217301  3360 net.cpp:139] Memory required for data: 29314800
I0428 20:28:30.217305  3360 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:30.217314  3360 net.cpp:86] Creating Layer ip3
I0428 20:28:30.217317  3360 net.cpp:408] ip3 <- ip2
I0428 20:28:30.217322  3360 net.cpp:382] ip3 -> ip3
I0428 20:28:30.217432  3360 net.cpp:124] Setting up ip3
I0428 20:28:30.217440  3360 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:30.217444  3360 net.cpp:139] Memory required for data: 29318800
I0428 20:28:30.217453  3360 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:30.217458  3360 net.cpp:86] Creating Layer relu3
I0428 20:28:30.217461  3360 net.cpp:408] relu3 <- ip3
I0428 20:28:30.217468  3360 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:30.218338  3360 net.cpp:124] Setting up relu3
I0428 20:28:30.218351  3360 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:30.218355  3360 net.cpp:139] Memory required for data: 29322800
I0428 20:28:30.218358  3360 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:28:30.218366  3360 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:28:30.218370  3360 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:28:30.218376  3360 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:28:30.218382  3360 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:28:30.218426  3360 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:28:30.218431  3360 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:30.218436  3360 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:30.218439  3360 net.cpp:139] Memory required for data: 29330800
I0428 20:28:30.218443  3360 layer_factory.hpp:77] Creating layer accuracy
I0428 20:28:30.218449  3360 net.cpp:86] Creating Layer accuracy
I0428 20:28:30.218453  3360 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:28:30.218457  3360 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:28:30.218466  3360 net.cpp:382] accuracy -> accuracy
I0428 20:28:30.218475  3360 net.cpp:124] Setting up accuracy
I0428 20:28:30.218479  3360 net.cpp:131] Top shape: (1)
I0428 20:28:30.218483  3360 net.cpp:139] Memory required for data: 29330804
I0428 20:28:30.218487  3360 layer_factory.hpp:77] Creating layer loss
I0428 20:28:30.218492  3360 net.cpp:86] Creating Layer loss
I0428 20:28:30.218494  3360 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:28:30.218499  3360 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:28:30.218505  3360 net.cpp:382] loss -> loss
I0428 20:28:30.218513  3360 layer_factory.hpp:77] Creating layer loss
I0428 20:28:30.218775  3360 net.cpp:124] Setting up loss
I0428 20:28:30.218786  3360 net.cpp:131] Top shape: (1)
I0428 20:28:30.218789  3360 net.cpp:134]     with loss weight 1
I0428 20:28:30.218807  3360 net.cpp:139] Memory required for data: 29330808
I0428 20:28:30.218811  3360 net.cpp:200] loss needs backward computation.
I0428 20:28:30.218816  3360 net.cpp:202] accuracy does not need backward computation.
I0428 20:28:30.218822  3360 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:28:30.218825  3360 net.cpp:200] relu3 needs backward computation.
I0428 20:28:30.218828  3360 net.cpp:200] ip3 needs backward computation.
I0428 20:28:30.218832  3360 net.cpp:200] relu2 needs backward computation.
I0428 20:28:30.218835  3360 net.cpp:200] ip2 needs backward computation.
I0428 20:28:30.218839  3360 net.cpp:200] relu1 needs backward computation.
I0428 20:28:30.218842  3360 net.cpp:200] ip1 needs backward computation.
I0428 20:28:30.218847  3360 net.cpp:200] pool1 needs backward computation.
I0428 20:28:30.218849  3360 net.cpp:200] conv1 needs backward computation.
I0428 20:28:30.218853  3360 net.cpp:200] pool0 needs backward computation.
I0428 20:28:30.218858  3360 net.cpp:200] conv0 needs backward computation.
I0428 20:28:30.218861  3360 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:28:30.218866  3360 net.cpp:202] mnist does not need backward computation.
I0428 20:28:30.218869  3360 net.cpp:244] This network produces output accuracy
I0428 20:28:30.218873  3360 net.cpp:244] This network produces output loss
I0428 20:28:30.218886  3360 net.cpp:257] Network initialization done.
I0428 20:28:30.218931  3360 solver.cpp:56] Solver scaffolding done.
I0428 20:28:30.219313  3360 caffe.cpp:248] Starting Optimization
I0428 20:28:30.219319  3360 solver.cpp:273] Solving LeNet
I0428 20:28:30.219322  3360 solver.cpp:274] Learning Rate Policy: inv
I0428 20:28:30.220247  3360 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:28:30.315677  3367 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:30.318101  3360 solver.cpp:398]     Test net output #0: accuracy = 0.0797
I0428 20:28:30.318137  3360 solver.cpp:398]     Test net output #1: loss = 2.3066 (* 1 = 2.3066 loss)
I0428 20:28:30.322726  3360 solver.cpp:219] Iteration 0 (-1.03242e-31 iter/s, 0.103369s/100 iters), loss = 2.30311
I0428 20:28:30.322765  3360 solver.cpp:238]     Train net output #0: loss = 2.30311 (* 1 = 2.30311 loss)
I0428 20:28:30.322793  3360 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:28:30.538044  3360 solver.cpp:219] Iteration 100 (464.561 iter/s, 0.215257s/100 iters), loss = 1.49412
I0428 20:28:30.538105  3360 solver.cpp:238]     Train net output #0: loss = 1.49412 (* 1 = 1.49412 loss)
I0428 20:28:30.538118  3360 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:28:30.760562  3360 solver.cpp:219] Iteration 200 (449.565 iter/s, 0.222437s/100 iters), loss = 1.25713
I0428 20:28:30.760614  3360 solver.cpp:238]     Train net output #0: loss = 1.25713 (* 1 = 1.25713 loss)
I0428 20:28:30.760627  3360 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:28:30.985600  3360 solver.cpp:219] Iteration 300 (444.508 iter/s, 0.224968s/100 iters), loss = 1.33409
I0428 20:28:30.985652  3360 solver.cpp:238]     Train net output #0: loss = 1.33409 (* 1 = 1.33409 loss)
I0428 20:28:30.985666  3360 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:28:31.210249  3360 solver.cpp:219] Iteration 400 (445.277 iter/s, 0.224579s/100 iters), loss = 1.48852
I0428 20:28:31.210301  3360 solver.cpp:238]     Train net output #0: loss = 1.48852 (* 1 = 1.48852 loss)
I0428 20:28:31.210314  3360 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:28:31.432400  3360 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:28:31.545243  3367 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:31.548290  3360 solver.cpp:398]     Test net output #0: accuracy = 0.4759
I0428 20:28:31.548331  3360 solver.cpp:398]     Test net output #1: loss = 1.31102 (* 1 = 1.31102 loss)
I0428 20:28:31.550453  3360 solver.cpp:219] Iteration 500 (294.004 iter/s, 0.340132s/100 iters), loss = 1.44211
I0428 20:28:31.550493  3360 solver.cpp:238]     Train net output #0: loss = 1.44211 (* 1 = 1.44211 loss)
I0428 20:28:31.550528  3360 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:28:31.768952  3360 solver.cpp:219] Iteration 600 (457.79 iter/s, 0.218441s/100 iters), loss = 1.29264
I0428 20:28:31.769001  3360 solver.cpp:238]     Train net output #0: loss = 1.29264 (* 1 = 1.29264 loss)
I0428 20:28:31.769013  3360 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:28:31.996179  3360 solver.cpp:219] Iteration 700 (440.22 iter/s, 0.227159s/100 iters), loss = 0.994458
I0428 20:28:31.996234  3360 solver.cpp:238]     Train net output #0: loss = 0.994458 (* 1 = 0.994458 loss)
I0428 20:28:31.996248  3360 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:28:32.222172  3360 solver.cpp:219] Iteration 800 (442.631 iter/s, 0.225922s/100 iters), loss = 1.42028
I0428 20:28:32.222220  3360 solver.cpp:238]     Train net output #0: loss = 1.42028 (* 1 = 1.42028 loss)
I0428 20:28:32.222234  3360 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:28:32.445415  3360 solver.cpp:219] Iteration 900 (448.073 iter/s, 0.223178s/100 iters), loss = 0.963406
I0428 20:28:32.445463  3360 solver.cpp:238]     Train net output #0: loss = 0.963406 (* 1 = 0.963406 loss)
I0428 20:28:32.445477  3360 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:28:32.519301  3366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:32.665210  3360 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:28:32.667240  3360 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:28:32.668519  3360 solver.cpp:311] Iteration 1000, loss = 0.894107
I0428 20:28:32.668546  3360 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:28:32.769489  3367 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:32.772105  3360 solver.cpp:398]     Test net output #0: accuracy = 0.6032
I0428 20:28:32.772131  3360 solver.cpp:398]     Test net output #1: loss = 1.05316 (* 1 = 1.05316 loss)
I0428 20:28:32.772138  3360 solver.cpp:316] Optimization Done.
I0428 20:28:32.772142  3360 caffe.cpp:259] Optimization Done.
