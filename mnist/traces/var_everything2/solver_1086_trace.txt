I0428 20:08:32.797616 31408 caffe.cpp:218] Using GPUs 0
I0428 20:08:32.832761 31408 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:33.280223 31408 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1086.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:33.280360 31408 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1086.prototxt
I0428 20:08:33.280709 31408 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:33.280725 31408 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:33.280807 31408 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:33.280876 31408 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:33.280958 31408 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:33.280977 31408 net.cpp:86] Creating Layer mnist
I0428 20:08:33.280985 31408 net.cpp:382] mnist -> data
I0428 20:08:33.281004 31408 net.cpp:382] mnist -> label
I0428 20:08:33.281947 31408 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:33.284113 31408 net.cpp:124] Setting up mnist
I0428 20:08:33.284139 31408 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:33.284144 31408 net.cpp:131] Top shape: 64 (64)
I0428 20:08:33.284147 31408 net.cpp:139] Memory required for data: 200960
I0428 20:08:33.284152 31408 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:33.284165 31408 net.cpp:86] Creating Layer conv0
I0428 20:08:33.284184 31408 net.cpp:408] conv0 <- data
I0428 20:08:33.284195 31408 net.cpp:382] conv0 -> conv0
I0428 20:08:33.509488 31408 net.cpp:124] Setting up conv0
I0428 20:08:33.509515 31408 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:33.509518 31408 net.cpp:139] Memory required for data: 3887360
I0428 20:08:33.509531 31408 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:33.509544 31408 net.cpp:86] Creating Layer pool0
I0428 20:08:33.509548 31408 net.cpp:408] pool0 <- conv0
I0428 20:08:33.509553 31408 net.cpp:382] pool0 -> pool0
I0428 20:08:33.509613 31408 net.cpp:124] Setting up pool0
I0428 20:08:33.509618 31408 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:33.509621 31408 net.cpp:139] Memory required for data: 4808960
I0428 20:08:33.509624 31408 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:33.509635 31408 net.cpp:86] Creating Layer conv1
I0428 20:08:33.509639 31408 net.cpp:408] conv1 <- pool0
I0428 20:08:33.509644 31408 net.cpp:382] conv1 -> conv1
I0428 20:08:33.512496 31408 net.cpp:124] Setting up conv1
I0428 20:08:33.512509 31408 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:33.512528 31408 net.cpp:139] Memory required for data: 4972800
I0428 20:08:33.512537 31408 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:33.512545 31408 net.cpp:86] Creating Layer pool1
I0428 20:08:33.512548 31408 net.cpp:408] pool1 <- conv1
I0428 20:08:33.512553 31408 net.cpp:382] pool1 -> pool1
I0428 20:08:33.512605 31408 net.cpp:124] Setting up pool1
I0428 20:08:33.512611 31408 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:33.512614 31408 net.cpp:139] Memory required for data: 5013760
I0428 20:08:33.512631 31408 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:33.512639 31408 net.cpp:86] Creating Layer ip1
I0428 20:08:33.512642 31408 net.cpp:408] ip1 <- pool1
I0428 20:08:33.512647 31408 net.cpp:382] ip1 -> ip1
I0428 20:08:33.512787 31408 net.cpp:124] Setting up ip1
I0428 20:08:33.512794 31408 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:33.512797 31408 net.cpp:139] Memory required for data: 5026560
I0428 20:08:33.512805 31408 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:33.512835 31408 net.cpp:86] Creating Layer relu1
I0428 20:08:33.512840 31408 net.cpp:408] relu1 <- ip1
I0428 20:08:33.512861 31408 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:33.513110 31408 net.cpp:124] Setting up relu1
I0428 20:08:33.513120 31408 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:33.513123 31408 net.cpp:139] Memory required for data: 5039360
I0428 20:08:33.513128 31408 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:33.513134 31408 net.cpp:86] Creating Layer ip2
I0428 20:08:33.513136 31408 net.cpp:408] ip2 <- ip1
I0428 20:08:33.513142 31408 net.cpp:382] ip2 -> ip2
I0428 20:08:33.514221 31408 net.cpp:124] Setting up ip2
I0428 20:08:33.514233 31408 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:33.514252 31408 net.cpp:139] Memory required for data: 5045760
I0428 20:08:33.514257 31408 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:33.514263 31408 net.cpp:86] Creating Layer relu2
I0428 20:08:33.514268 31408 net.cpp:408] relu2 <- ip2
I0428 20:08:33.514273 31408 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:33.515084 31408 net.cpp:124] Setting up relu2
I0428 20:08:33.515096 31408 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:33.515115 31408 net.cpp:139] Memory required for data: 5052160
I0428 20:08:33.515120 31408 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:33.515126 31408 net.cpp:86] Creating Layer ip3
I0428 20:08:33.515130 31408 net.cpp:408] ip3 <- ip2
I0428 20:08:33.515136 31408 net.cpp:382] ip3 -> ip3
I0428 20:08:33.515264 31408 net.cpp:124] Setting up ip3
I0428 20:08:33.515272 31408 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:33.515275 31408 net.cpp:139] Memory required for data: 5054720
I0428 20:08:33.515282 31408 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:33.515287 31408 net.cpp:86] Creating Layer relu3
I0428 20:08:33.515290 31408 net.cpp:408] relu3 <- ip3
I0428 20:08:33.515300 31408 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:33.515482 31408 net.cpp:124] Setting up relu3
I0428 20:08:33.515491 31408 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:33.515494 31408 net.cpp:139] Memory required for data: 5057280
I0428 20:08:33.515497 31408 layer_factory.hpp:77] Creating layer loss
I0428 20:08:33.515504 31408 net.cpp:86] Creating Layer loss
I0428 20:08:33.515507 31408 net.cpp:408] loss <- ip3
I0428 20:08:33.515511 31408 net.cpp:408] loss <- label
I0428 20:08:33.515516 31408 net.cpp:382] loss -> loss
I0428 20:08:33.515548 31408 layer_factory.hpp:77] Creating layer loss
I0428 20:08:33.515807 31408 net.cpp:124] Setting up loss
I0428 20:08:33.515816 31408 net.cpp:131] Top shape: (1)
I0428 20:08:33.515820 31408 net.cpp:134]     with loss weight 1
I0428 20:08:33.515833 31408 net.cpp:139] Memory required for data: 5057284
I0428 20:08:33.515837 31408 net.cpp:200] loss needs backward computation.
I0428 20:08:33.515841 31408 net.cpp:200] relu3 needs backward computation.
I0428 20:08:33.515843 31408 net.cpp:200] ip3 needs backward computation.
I0428 20:08:33.515846 31408 net.cpp:200] relu2 needs backward computation.
I0428 20:08:33.515848 31408 net.cpp:200] ip2 needs backward computation.
I0428 20:08:33.515851 31408 net.cpp:200] relu1 needs backward computation.
I0428 20:08:33.515854 31408 net.cpp:200] ip1 needs backward computation.
I0428 20:08:33.515857 31408 net.cpp:200] pool1 needs backward computation.
I0428 20:08:33.515859 31408 net.cpp:200] conv1 needs backward computation.
I0428 20:08:33.515862 31408 net.cpp:200] pool0 needs backward computation.
I0428 20:08:33.515866 31408 net.cpp:200] conv0 needs backward computation.
I0428 20:08:33.515868 31408 net.cpp:202] mnist does not need backward computation.
I0428 20:08:33.515872 31408 net.cpp:244] This network produces output loss
I0428 20:08:33.515882 31408 net.cpp:257] Network initialization done.
I0428 20:08:33.516222 31408 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1086.prototxt
I0428 20:08:33.516261 31408 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:33.516366 31408 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:33.516465 31408 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:33.516507 31408 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:33.516520 31408 net.cpp:86] Creating Layer mnist
I0428 20:08:33.516525 31408 net.cpp:382] mnist -> data
I0428 20:08:33.516549 31408 net.cpp:382] mnist -> label
I0428 20:08:33.516655 31408 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:33.518776 31408 net.cpp:124] Setting up mnist
I0428 20:08:33.518791 31408 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:33.518812 31408 net.cpp:131] Top shape: 100 (100)
I0428 20:08:33.518815 31408 net.cpp:139] Memory required for data: 314000
I0428 20:08:33.518820 31408 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:33.518867 31408 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:33.518872 31408 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:33.518877 31408 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:33.518885 31408 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:33.518949 31408 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:33.518965 31408 net.cpp:131] Top shape: 100 (100)
I0428 20:08:33.518968 31408 net.cpp:131] Top shape: 100 (100)
I0428 20:08:33.518972 31408 net.cpp:139] Memory required for data: 314800
I0428 20:08:33.518975 31408 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:33.518985 31408 net.cpp:86] Creating Layer conv0
I0428 20:08:33.518988 31408 net.cpp:408] conv0 <- data
I0428 20:08:33.518995 31408 net.cpp:382] conv0 -> conv0
I0428 20:08:33.520838 31408 net.cpp:124] Setting up conv0
I0428 20:08:33.520851 31408 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:33.520855 31408 net.cpp:139] Memory required for data: 6074800
I0428 20:08:33.520880 31408 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:33.520887 31408 net.cpp:86] Creating Layer pool0
I0428 20:08:33.520890 31408 net.cpp:408] pool0 <- conv0
I0428 20:08:33.520895 31408 net.cpp:382] pool0 -> pool0
I0428 20:08:33.520967 31408 net.cpp:124] Setting up pool0
I0428 20:08:33.520982 31408 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:33.520984 31408 net.cpp:139] Memory required for data: 7514800
I0428 20:08:33.520987 31408 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:33.520997 31408 net.cpp:86] Creating Layer conv1
I0428 20:08:33.521000 31408 net.cpp:408] conv1 <- pool0
I0428 20:08:33.521006 31408 net.cpp:382] conv1 -> conv1
I0428 20:08:33.523336 31408 net.cpp:124] Setting up conv1
I0428 20:08:33.523351 31408 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:33.523355 31408 net.cpp:139] Memory required for data: 7770800
I0428 20:08:33.523387 31408 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:33.523396 31408 net.cpp:86] Creating Layer pool1
I0428 20:08:33.523406 31408 net.cpp:408] pool1 <- conv1
I0428 20:08:33.523411 31408 net.cpp:382] pool1 -> pool1
I0428 20:08:33.523465 31408 net.cpp:124] Setting up pool1
I0428 20:08:33.523473 31408 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:33.523475 31408 net.cpp:139] Memory required for data: 7834800
I0428 20:08:33.523484 31408 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:33.523490 31408 net.cpp:86] Creating Layer ip1
I0428 20:08:33.523494 31408 net.cpp:408] ip1 <- pool1
I0428 20:08:33.523499 31408 net.cpp:382] ip1 -> ip1
I0428 20:08:33.523707 31408 net.cpp:124] Setting up ip1
I0428 20:08:33.523730 31408 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:33.523747 31408 net.cpp:139] Memory required for data: 7854800
I0428 20:08:33.523756 31408 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:33.523761 31408 net.cpp:86] Creating Layer relu1
I0428 20:08:33.523766 31408 net.cpp:408] relu1 <- ip1
I0428 20:08:33.523771 31408 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:33.523932 31408 net.cpp:124] Setting up relu1
I0428 20:08:33.523941 31408 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:33.523944 31408 net.cpp:139] Memory required for data: 7874800
I0428 20:08:33.523947 31408 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:33.523954 31408 net.cpp:86] Creating Layer ip2
I0428 20:08:33.523968 31408 net.cpp:408] ip2 <- ip1
I0428 20:08:33.523972 31408 net.cpp:382] ip2 -> ip2
I0428 20:08:33.524081 31408 net.cpp:124] Setting up ip2
I0428 20:08:33.524088 31408 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:33.524091 31408 net.cpp:139] Memory required for data: 7884800
I0428 20:08:33.524097 31408 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:33.524101 31408 net.cpp:86] Creating Layer relu2
I0428 20:08:33.524104 31408 net.cpp:408] relu2 <- ip2
I0428 20:08:33.524111 31408 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:33.524278 31408 net.cpp:124] Setting up relu2
I0428 20:08:33.524287 31408 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:33.524291 31408 net.cpp:139] Memory required for data: 7894800
I0428 20:08:33.524315 31408 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:33.524322 31408 net.cpp:86] Creating Layer ip3
I0428 20:08:33.524335 31408 net.cpp:408] ip3 <- ip2
I0428 20:08:33.524340 31408 net.cpp:382] ip3 -> ip3
I0428 20:08:33.524464 31408 net.cpp:124] Setting up ip3
I0428 20:08:33.524472 31408 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:33.524476 31408 net.cpp:139] Memory required for data: 7898800
I0428 20:08:33.524484 31408 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:33.524489 31408 net.cpp:86] Creating Layer relu3
I0428 20:08:33.524493 31408 net.cpp:408] relu3 <- ip3
I0428 20:08:33.524497 31408 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:33.525388 31408 net.cpp:124] Setting up relu3
I0428 20:08:33.525400 31408 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:33.525404 31408 net.cpp:139] Memory required for data: 7902800
I0428 20:08:33.525408 31408 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:33.525413 31408 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:33.525418 31408 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:33.525423 31408 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:33.525429 31408 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:33.525485 31408 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:33.525490 31408 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:33.525493 31408 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:33.525496 31408 net.cpp:139] Memory required for data: 7910800
I0428 20:08:33.525499 31408 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:33.525511 31408 net.cpp:86] Creating Layer accuracy
I0428 20:08:33.525514 31408 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:33.525518 31408 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:33.525522 31408 net.cpp:382] accuracy -> accuracy
I0428 20:08:33.525529 31408 net.cpp:124] Setting up accuracy
I0428 20:08:33.525533 31408 net.cpp:131] Top shape: (1)
I0428 20:08:33.525547 31408 net.cpp:139] Memory required for data: 7910804
I0428 20:08:33.525550 31408 layer_factory.hpp:77] Creating layer loss
I0428 20:08:33.525554 31408 net.cpp:86] Creating Layer loss
I0428 20:08:33.525558 31408 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:33.525562 31408 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:33.525566 31408 net.cpp:382] loss -> loss
I0428 20:08:33.525573 31408 layer_factory.hpp:77] Creating layer loss
I0428 20:08:33.525849 31408 net.cpp:124] Setting up loss
I0428 20:08:33.525858 31408 net.cpp:131] Top shape: (1)
I0428 20:08:33.525861 31408 net.cpp:134]     with loss weight 1
I0428 20:08:33.525877 31408 net.cpp:139] Memory required for data: 7910808
I0428 20:08:33.525882 31408 net.cpp:200] loss needs backward computation.
I0428 20:08:33.525885 31408 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:33.525888 31408 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:33.525898 31408 net.cpp:200] relu3 needs backward computation.
I0428 20:08:33.525902 31408 net.cpp:200] ip3 needs backward computation.
I0428 20:08:33.525904 31408 net.cpp:200] relu2 needs backward computation.
I0428 20:08:33.525907 31408 net.cpp:200] ip2 needs backward computation.
I0428 20:08:33.525914 31408 net.cpp:200] relu1 needs backward computation.
I0428 20:08:33.525918 31408 net.cpp:200] ip1 needs backward computation.
I0428 20:08:33.525920 31408 net.cpp:200] pool1 needs backward computation.
I0428 20:08:33.525923 31408 net.cpp:200] conv1 needs backward computation.
I0428 20:08:33.525933 31408 net.cpp:200] pool0 needs backward computation.
I0428 20:08:33.525935 31408 net.cpp:200] conv0 needs backward computation.
I0428 20:08:33.525939 31408 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:33.525943 31408 net.cpp:202] mnist does not need backward computation.
I0428 20:08:33.525951 31408 net.cpp:244] This network produces output accuracy
I0428 20:08:33.525954 31408 net.cpp:244] This network produces output loss
I0428 20:08:33.525966 31408 net.cpp:257] Network initialization done.
I0428 20:08:33.526008 31408 solver.cpp:56] Solver scaffolding done.
I0428 20:08:33.526352 31408 caffe.cpp:248] Starting Optimization
I0428 20:08:33.526360 31408 solver.cpp:273] Solving LeNet
I0428 20:08:33.526362 31408 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:33.527199 31408 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:33.532474 31408 blocking_queue.cpp:49] Waiting for data
I0428 20:08:33.598886 31415 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:33.599495 31408 solver.cpp:398]     Test net output #0: accuracy = 0.0959
I0428 20:08:33.599514 31408 solver.cpp:398]     Test net output #1: loss = 2.31351 (* 1 = 2.31351 loss)
I0428 20:08:33.603257 31408 solver.cpp:219] Iteration 0 (-3.53838e-31 iter/s, 0.0768707s/100 iters), loss = 2.31423
I0428 20:08:33.603281 31408 solver.cpp:238]     Train net output #0: loss = 2.31423 (* 1 = 2.31423 loss)
I0428 20:08:33.603292 31408 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:33.699123 31408 solver.cpp:219] Iteration 100 (1043.51 iter/s, 0.09583s/100 iters), loss = 1.66191
I0428 20:08:33.699147 31408 solver.cpp:238]     Train net output #0: loss = 1.66191 (* 1 = 1.66191 loss)
I0428 20:08:33.699153 31408 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:33.802105 31408 solver.cpp:219] Iteration 200 (971.393 iter/s, 0.102945s/100 iters), loss = 1.48986
I0428 20:08:33.802142 31408 solver.cpp:238]     Train net output #0: loss = 1.48986 (* 1 = 1.48986 loss)
I0428 20:08:33.802152 31408 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:33.901932 31408 solver.cpp:219] Iteration 300 (1002.2 iter/s, 0.0997806s/100 iters), loss = 0.909669
I0428 20:08:33.901962 31408 solver.cpp:238]     Train net output #0: loss = 0.909669 (* 1 = 0.909669 loss)
I0428 20:08:33.901969 31408 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:33.995647 31408 solver.cpp:219] Iteration 400 (1067.5 iter/s, 0.0936765s/100 iters), loss = 0.906393
I0428 20:08:33.995677 31408 solver.cpp:238]     Train net output #0: loss = 0.906393 (* 1 = 0.906393 loss)
I0428 20:08:33.995684 31408 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:34.088080 31408 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:34.142094 31415 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:34.143440 31408 solver.cpp:398]     Test net output #0: accuracy = 0.7201
I0428 20:08:34.143465 31408 solver.cpp:398]     Test net output #1: loss = 0.860425 (* 1 = 0.860425 loss)
I0428 20:08:34.144390 31408 solver.cpp:219] Iteration 500 (672.485 iter/s, 0.148702s/100 iters), loss = 0.835317
I0428 20:08:34.144435 31408 solver.cpp:238]     Train net output #0: loss = 0.835317 (* 1 = 0.835317 loss)
I0428 20:08:34.144443 31408 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:34.241848 31408 solver.cpp:219] Iteration 600 (1026.65 iter/s, 0.0974037s/100 iters), loss = 0.94521
I0428 20:08:34.241878 31408 solver.cpp:238]     Train net output #0: loss = 0.94521 (* 1 = 0.94521 loss)
I0428 20:08:34.241886 31408 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:34.335714 31408 solver.cpp:219] Iteration 700 (1065.78 iter/s, 0.0938281s/100 iters), loss = 0.880473
I0428 20:08:34.335744 31408 solver.cpp:238]     Train net output #0: loss = 0.880473 (* 1 = 0.880473 loss)
I0428 20:08:34.335753 31408 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:34.429437 31408 solver.cpp:219] Iteration 800 (1067.42 iter/s, 0.0936836s/100 iters), loss = 0.860683
I0428 20:08:34.429468 31408 solver.cpp:238]     Train net output #0: loss = 0.860683 (* 1 = 0.860683 loss)
I0428 20:08:34.429477 31408 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:34.524138 31408 solver.cpp:219] Iteration 900 (1056.42 iter/s, 0.0946597s/100 iters), loss = 0.962615
I0428 20:08:34.524168 31408 solver.cpp:238]     Train net output #0: loss = 0.962615 (* 1 = 0.962615 loss)
I0428 20:08:34.524178 31408 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:34.555182 31414 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:34.614944 31408 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:34.615906 31408 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:34.616739 31408 solver.cpp:311] Iteration 1000, loss = 0.856585
I0428 20:08:34.616773 31408 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:34.688122 31415 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:34.689100 31408 solver.cpp:398]     Test net output #0: accuracy = 0.7607
I0428 20:08:34.689141 31408 solver.cpp:398]     Test net output #1: loss = 0.803261 (* 1 = 0.803261 loss)
I0428 20:08:34.689159 31408 solver.cpp:316] Optimization Done.
I0428 20:08:34.689167 31408 caffe.cpp:259] Optimization Done.
