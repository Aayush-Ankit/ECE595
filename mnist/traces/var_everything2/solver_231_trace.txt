I0428 19:35:44.259193 23558 caffe.cpp:218] Using GPUs 0
I0428 19:35:44.301007 23558 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:44.846573 23558 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test231.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:44.846720 23558 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test231.prototxt
I0428 19:35:44.847092 23558 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:44.847110 23558 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:44.847200 23558 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:44.847275 23558 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:44.847376 23558 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:44.847400 23558 net.cpp:86] Creating Layer mnist
I0428 19:35:44.847409 23558 net.cpp:382] mnist -> data
I0428 19:35:44.847431 23558 net.cpp:382] mnist -> label
I0428 19:35:44.848515 23558 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:44.851204 23558 net.cpp:124] Setting up mnist
I0428 19:35:44.851222 23558 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:44.851228 23558 net.cpp:131] Top shape: 64 (64)
I0428 19:35:44.851233 23558 net.cpp:139] Memory required for data: 200960
I0428 19:35:44.851239 23558 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:44.851258 23558 net.cpp:86] Creating Layer conv0
I0428 19:35:44.851263 23558 net.cpp:408] conv0 <- data
I0428 19:35:44.851275 23558 net.cpp:382] conv0 -> conv0
I0428 19:35:45.141808 23558 net.cpp:124] Setting up conv0
I0428 19:35:45.141840 23558 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:45.141845 23558 net.cpp:139] Memory required for data: 7573760
I0428 19:35:45.141862 23558 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:45.141877 23558 net.cpp:86] Creating Layer pool0
I0428 19:35:45.141904 23558 net.cpp:408] pool0 <- conv0
I0428 19:35:45.141911 23558 net.cpp:382] pool0 -> pool0
I0428 19:35:45.141969 23558 net.cpp:124] Setting up pool0
I0428 19:35:45.141978 23558 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:45.141983 23558 net.cpp:139] Memory required for data: 9416960
I0428 19:35:45.141986 23558 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:45.141995 23558 net.cpp:86] Creating Layer ip1
I0428 19:35:45.141999 23558 net.cpp:408] ip1 <- pool0
I0428 19:35:45.142004 23558 net.cpp:382] ip1 -> ip1
I0428 19:35:45.145503 23558 net.cpp:124] Setting up ip1
I0428 19:35:45.145519 23558 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:45.145524 23558 net.cpp:139] Memory required for data: 9429760
I0428 19:35:45.145534 23558 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:45.145541 23558 net.cpp:86] Creating Layer relu1
I0428 19:35:45.145545 23558 net.cpp:408] relu1 <- ip1
I0428 19:35:45.145551 23558 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:45.145756 23558 net.cpp:124] Setting up relu1
I0428 19:35:45.145767 23558 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:45.145771 23558 net.cpp:139] Memory required for data: 9442560
I0428 19:35:45.145776 23558 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:45.145782 23558 net.cpp:86] Creating Layer ip2
I0428 19:35:45.145787 23558 net.cpp:408] ip2 <- ip1
I0428 19:35:45.145792 23558 net.cpp:382] ip2 -> ip2
I0428 19:35:45.145922 23558 net.cpp:124] Setting up ip2
I0428 19:35:45.145931 23558 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:45.145934 23558 net.cpp:139] Memory required for data: 9455360
I0428 19:35:45.145943 23558 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:45.145949 23558 net.cpp:86] Creating Layer relu2
I0428 19:35:45.145952 23558 net.cpp:408] relu2 <- ip2
I0428 19:35:45.145957 23558 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:45.146817 23558 net.cpp:124] Setting up relu2
I0428 19:35:45.146832 23558 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:45.146837 23558 net.cpp:139] Memory required for data: 9468160
I0428 19:35:45.146842 23558 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:45.146849 23558 net.cpp:86] Creating Layer ip3
I0428 19:35:45.146853 23558 net.cpp:408] ip3 <- ip2
I0428 19:35:45.146859 23558 net.cpp:382] ip3 -> ip3
I0428 19:35:45.146983 23558 net.cpp:124] Setting up ip3
I0428 19:35:45.146991 23558 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:45.146996 23558 net.cpp:139] Memory required for data: 9470720
I0428 19:35:45.147002 23558 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:45.147009 23558 net.cpp:86] Creating Layer relu3
I0428 19:35:45.147013 23558 net.cpp:408] relu3 <- ip3
I0428 19:35:45.147019 23558 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:45.147208 23558 net.cpp:124] Setting up relu3
I0428 19:35:45.147218 23558 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:45.147222 23558 net.cpp:139] Memory required for data: 9473280
I0428 19:35:45.147225 23558 layer_factory.hpp:77] Creating layer loss
I0428 19:35:45.147233 23558 net.cpp:86] Creating Layer loss
I0428 19:35:45.147236 23558 net.cpp:408] loss <- ip3
I0428 19:35:45.147241 23558 net.cpp:408] loss <- label
I0428 19:35:45.147248 23558 net.cpp:382] loss -> loss
I0428 19:35:45.147269 23558 layer_factory.hpp:77] Creating layer loss
I0428 19:35:45.147557 23558 net.cpp:124] Setting up loss
I0428 19:35:45.147567 23558 net.cpp:131] Top shape: (1)
I0428 19:35:45.147570 23558 net.cpp:134]     with loss weight 1
I0428 19:35:45.147586 23558 net.cpp:139] Memory required for data: 9473284
I0428 19:35:45.147589 23558 net.cpp:200] loss needs backward computation.
I0428 19:35:45.147594 23558 net.cpp:200] relu3 needs backward computation.
I0428 19:35:45.147598 23558 net.cpp:200] ip3 needs backward computation.
I0428 19:35:45.147603 23558 net.cpp:200] relu2 needs backward computation.
I0428 19:35:45.147605 23558 net.cpp:200] ip2 needs backward computation.
I0428 19:35:45.147608 23558 net.cpp:200] relu1 needs backward computation.
I0428 19:35:45.147611 23558 net.cpp:200] ip1 needs backward computation.
I0428 19:35:45.147627 23558 net.cpp:200] pool0 needs backward computation.
I0428 19:35:45.147631 23558 net.cpp:200] conv0 needs backward computation.
I0428 19:35:45.147635 23558 net.cpp:202] mnist does not need backward computation.
I0428 19:35:45.147639 23558 net.cpp:244] This network produces output loss
I0428 19:35:45.147650 23558 net.cpp:257] Network initialization done.
I0428 19:35:45.147986 23558 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test231.prototxt
I0428 19:35:45.148016 23558 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:45.148111 23558 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:45.148191 23558 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:45.148247 23558 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:45.148262 23558 net.cpp:86] Creating Layer mnist
I0428 19:35:45.148269 23558 net.cpp:382] mnist -> data
I0428 19:35:45.148277 23558 net.cpp:382] mnist -> label
I0428 19:35:45.148380 23558 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:45.150583 23558 net.cpp:124] Setting up mnist
I0428 19:35:45.150601 23558 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:45.150607 23558 net.cpp:131] Top shape: 100 (100)
I0428 19:35:45.150611 23558 net.cpp:139] Memory required for data: 314000
I0428 19:35:45.150615 23558 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:45.150641 23558 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:45.150645 23558 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:45.150674 23558 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:45.150683 23558 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:45.150732 23558 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:45.150738 23558 net.cpp:131] Top shape: 100 (100)
I0428 19:35:45.150743 23558 net.cpp:131] Top shape: 100 (100)
I0428 19:35:45.150748 23558 net.cpp:139] Memory required for data: 314800
I0428 19:35:45.150763 23558 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:45.150773 23558 net.cpp:86] Creating Layer conv0
I0428 19:35:45.150776 23558 net.cpp:408] conv0 <- data
I0428 19:35:45.150784 23558 net.cpp:382] conv0 -> conv0
I0428 19:35:45.152752 23558 net.cpp:124] Setting up conv0
I0428 19:35:45.152771 23558 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:45.152776 23558 net.cpp:139] Memory required for data: 11834800
I0428 19:35:45.152786 23558 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:45.152793 23558 net.cpp:86] Creating Layer pool0
I0428 19:35:45.152797 23558 net.cpp:408] pool0 <- conv0
I0428 19:35:45.152804 23558 net.cpp:382] pool0 -> pool0
I0428 19:35:45.152858 23558 net.cpp:124] Setting up pool0
I0428 19:35:45.152864 23558 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:45.152868 23558 net.cpp:139] Memory required for data: 14714800
I0428 19:35:45.152871 23558 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:45.152880 23558 net.cpp:86] Creating Layer ip1
I0428 19:35:45.152884 23558 net.cpp:408] ip1 <- pool0
I0428 19:35:45.152891 23558 net.cpp:382] ip1 -> ip1
I0428 19:35:45.155416 23558 net.cpp:124] Setting up ip1
I0428 19:35:45.155426 23558 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:45.155429 23558 net.cpp:139] Memory required for data: 14734800
I0428 19:35:45.155438 23558 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:45.155443 23558 net.cpp:86] Creating Layer relu1
I0428 19:35:45.155447 23558 net.cpp:408] relu1 <- ip1
I0428 19:35:45.155452 23558 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:45.155652 23558 net.cpp:124] Setting up relu1
I0428 19:35:45.155661 23558 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:45.155665 23558 net.cpp:139] Memory required for data: 14754800
I0428 19:35:45.155668 23558 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:45.155676 23558 net.cpp:86] Creating Layer ip2
I0428 19:35:45.155681 23558 net.cpp:408] ip2 <- ip1
I0428 19:35:45.155689 23558 net.cpp:382] ip2 -> ip2
I0428 19:35:45.155824 23558 net.cpp:124] Setting up ip2
I0428 19:35:45.155841 23558 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:45.155845 23558 net.cpp:139] Memory required for data: 14774800
I0428 19:35:45.155855 23558 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:45.155863 23558 net.cpp:86] Creating Layer relu2
I0428 19:35:45.155866 23558 net.cpp:408] relu2 <- ip2
I0428 19:35:45.155871 23558 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:45.156800 23558 net.cpp:124] Setting up relu2
I0428 19:35:45.156821 23558 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:45.156826 23558 net.cpp:139] Memory required for data: 14794800
I0428 19:35:45.156831 23558 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:45.156841 23558 net.cpp:86] Creating Layer ip3
I0428 19:35:45.156846 23558 net.cpp:408] ip3 <- ip2
I0428 19:35:45.156852 23558 net.cpp:382] ip3 -> ip3
I0428 19:35:45.157003 23558 net.cpp:124] Setting up ip3
I0428 19:35:45.157013 23558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:45.157017 23558 net.cpp:139] Memory required for data: 14798800
I0428 19:35:45.157023 23558 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:45.157029 23558 net.cpp:86] Creating Layer relu3
I0428 19:35:45.157033 23558 net.cpp:408] relu3 <- ip3
I0428 19:35:45.157038 23558 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:45.157232 23558 net.cpp:124] Setting up relu3
I0428 19:35:45.157243 23558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:45.157248 23558 net.cpp:139] Memory required for data: 14802800
I0428 19:35:45.157251 23558 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:45.157258 23558 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:45.157260 23558 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:45.157265 23558 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:45.157274 23558 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:45.157316 23558 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:45.157322 23558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:45.157340 23558 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:45.157342 23558 net.cpp:139] Memory required for data: 14810800
I0428 19:35:45.157361 23558 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:45.157366 23558 net.cpp:86] Creating Layer accuracy
I0428 19:35:45.157371 23558 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:45.157376 23558 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:45.157382 23558 net.cpp:382] accuracy -> accuracy
I0428 19:35:45.157397 23558 net.cpp:124] Setting up accuracy
I0428 19:35:45.157402 23558 net.cpp:131] Top shape: (1)
I0428 19:35:45.157407 23558 net.cpp:139] Memory required for data: 14810804
I0428 19:35:45.157409 23558 layer_factory.hpp:77] Creating layer loss
I0428 19:35:45.157415 23558 net.cpp:86] Creating Layer loss
I0428 19:35:45.157418 23558 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:45.157423 23558 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:45.157429 23558 net.cpp:382] loss -> loss
I0428 19:35:45.157438 23558 layer_factory.hpp:77] Creating layer loss
I0428 19:35:45.157727 23558 net.cpp:124] Setting up loss
I0428 19:35:45.157737 23558 net.cpp:131] Top shape: (1)
I0428 19:35:45.157742 23558 net.cpp:134]     with loss weight 1
I0428 19:35:45.157748 23558 net.cpp:139] Memory required for data: 14810808
I0428 19:35:45.157760 23558 net.cpp:200] loss needs backward computation.
I0428 19:35:45.157765 23558 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:45.157769 23558 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:45.157773 23558 net.cpp:200] relu3 needs backward computation.
I0428 19:35:45.157776 23558 net.cpp:200] ip3 needs backward computation.
I0428 19:35:45.157779 23558 net.cpp:200] relu2 needs backward computation.
I0428 19:35:45.157784 23558 net.cpp:200] ip2 needs backward computation.
I0428 19:35:45.157793 23558 net.cpp:200] relu1 needs backward computation.
I0428 19:35:45.157796 23558 net.cpp:200] ip1 needs backward computation.
I0428 19:35:45.157799 23558 net.cpp:200] pool0 needs backward computation.
I0428 19:35:45.157804 23558 net.cpp:200] conv0 needs backward computation.
I0428 19:35:45.157807 23558 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:45.157812 23558 net.cpp:202] mnist does not need backward computation.
I0428 19:35:45.157815 23558 net.cpp:244] This network produces output accuracy
I0428 19:35:45.157819 23558 net.cpp:244] This network produces output loss
I0428 19:35:45.157832 23558 net.cpp:257] Network initialization done.
I0428 19:35:45.157881 23558 solver.cpp:56] Solver scaffolding done.
I0428 19:35:45.158228 23558 caffe.cpp:248] Starting Optimization
I0428 19:35:45.158237 23558 solver.cpp:273] Solving LeNet
I0428 19:35:45.158241 23558 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:45.160403 23558 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:45.263200 23565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:45.265979 23558 solver.cpp:398]     Test net output #0: accuracy = 0.1225
I0428 19:35:45.266005 23558 solver.cpp:398]     Test net output #1: loss = 2.29838 (* 1 = 2.29838 loss)
I0428 19:35:45.271944 23558 solver.cpp:219] Iteration 0 (-2.68669e-31 iter/s, 0.113656s/100 iters), loss = 2.28604
I0428 19:35:45.271975 23558 solver.cpp:238]     Train net output #0: loss = 2.28604 (* 1 = 2.28604 loss)
I0428 19:35:45.271989 23558 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:45.423877 23558 solver.cpp:219] Iteration 100 (658.394 iter/s, 0.151885s/100 iters), loss = 0.345532
I0428 19:35:45.423913 23558 solver.cpp:238]     Train net output #0: loss = 0.345532 (* 1 = 0.345532 loss)
I0428 19:35:45.423920 23558 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:45.573081 23558 solver.cpp:219] Iteration 200 (670.431 iter/s, 0.149158s/100 iters), loss = 0.239204
I0428 19:35:45.573108 23558 solver.cpp:238]     Train net output #0: loss = 0.239204 (* 1 = 0.239204 loss)
I0428 19:35:45.573114 23558 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:45.720105 23558 solver.cpp:219] Iteration 300 (680.341 iter/s, 0.146985s/100 iters), loss = 0.256456
I0428 19:35:45.720157 23558 solver.cpp:238]     Train net output #0: loss = 0.256456 (* 1 = 0.256456 loss)
I0428 19:35:45.720163 23558 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:45.868085 23558 solver.cpp:219] Iteration 400 (676.074 iter/s, 0.147913s/100 iters), loss = 0.151979
I0428 19:35:45.868124 23558 solver.cpp:238]     Train net output #0: loss = 0.151979 (* 1 = 0.151979 loss)
I0428 19:35:45.868130 23558 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:46.013664 23558 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:46.110395 23565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:46.114398 23558 solver.cpp:398]     Test net output #0: accuracy = 0.9557
I0428 19:35:46.114459 23558 solver.cpp:398]     Test net output #1: loss = 0.143279 (* 1 = 0.143279 loss)
I0428 19:35:46.116132 23558 solver.cpp:219] Iteration 500 (403.25 iter/s, 0.247985s/100 iters), loss = 0.276154
I0428 19:35:46.116192 23558 solver.cpp:238]     Train net output #0: loss = 0.276154 (* 1 = 0.276154 loss)
I0428 19:35:46.116221 23558 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:46.272887 23558 solver.cpp:219] Iteration 600 (638.223 iter/s, 0.156685s/100 iters), loss = 0.138067
I0428 19:35:46.272918 23558 solver.cpp:238]     Train net output #0: loss = 0.138067 (* 1 = 0.138067 loss)
I0428 19:35:46.272927 23558 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:46.421452 23558 solver.cpp:219] Iteration 700 (673.301 iter/s, 0.148522s/100 iters), loss = 0.246846
I0428 19:35:46.421483 23558 solver.cpp:238]     Train net output #0: loss = 0.246846 (* 1 = 0.246846 loss)
I0428 19:35:46.421489 23558 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:46.571382 23558 solver.cpp:219] Iteration 800 (667.174 iter/s, 0.149886s/100 iters), loss = 0.274293
I0428 19:35:46.571422 23558 solver.cpp:238]     Train net output #0: loss = 0.274293 (* 1 = 0.274293 loss)
I0428 19:35:46.571430 23558 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:46.719863 23558 solver.cpp:219] Iteration 900 (673.686 iter/s, 0.148437s/100 iters), loss = 0.179001
I0428 19:35:46.719893 23558 solver.cpp:238]     Train net output #0: loss = 0.179001 (* 1 = 0.179001 loss)
I0428 19:35:46.719902 23558 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:46.769652 23564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:46.868284 23558 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:46.874908 23558 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:46.878816 23558 solver.cpp:311] Iteration 1000, loss = 0.188114
I0428 19:35:46.878836 23558 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:46.978667 23565 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:46.981451 23558 solver.cpp:398]     Test net output #0: accuracy = 0.9727
I0428 19:35:46.981475 23558 solver.cpp:398]     Test net output #1: loss = 0.0893611 (* 1 = 0.0893611 loss)
I0428 19:35:46.981485 23558 solver.cpp:316] Optimization Done.
I0428 19:35:46.981490 23558 caffe.cpp:259] Optimization Done.
