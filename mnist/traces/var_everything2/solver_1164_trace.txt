I0428 20:11:40.306234 32119 caffe.cpp:218] Using GPUs 0
I0428 20:11:40.338974 32119 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:40.847326 32119 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1164.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:40.847466 32119 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1164.prototxt
I0428 20:11:40.847884 32119 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:40.847904 32119 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:40.848009 32119 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:40.848091 32119 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:40.848191 32119 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:40.848214 32119 net.cpp:86] Creating Layer mnist
I0428 20:11:40.848222 32119 net.cpp:382] mnist -> data
I0428 20:11:40.848245 32119 net.cpp:382] mnist -> label
I0428 20:11:40.849339 32119 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:40.851797 32119 net.cpp:124] Setting up mnist
I0428 20:11:40.851815 32119 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:40.851822 32119 net.cpp:131] Top shape: 64 (64)
I0428 20:11:40.851825 32119 net.cpp:139] Memory required for data: 200960
I0428 20:11:40.851832 32119 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:40.851873 32119 net.cpp:86] Creating Layer conv0
I0428 20:11:40.851897 32119 net.cpp:408] conv0 <- data
I0428 20:11:40.851908 32119 net.cpp:382] conv0 -> conv0
I0428 20:11:41.119470 32119 net.cpp:124] Setting up conv0
I0428 20:11:41.119513 32119 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:41.119515 32119 net.cpp:139] Memory required for data: 3887360
I0428 20:11:41.119529 32119 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:41.119542 32119 net.cpp:86] Creating Layer pool0
I0428 20:11:41.119546 32119 net.cpp:408] pool0 <- conv0
I0428 20:11:41.119567 32119 net.cpp:382] pool0 -> pool0
I0428 20:11:41.119609 32119 net.cpp:124] Setting up pool0
I0428 20:11:41.119616 32119 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:41.119618 32119 net.cpp:139] Memory required for data: 4808960
I0428 20:11:41.119621 32119 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:41.119632 32119 net.cpp:86] Creating Layer conv1
I0428 20:11:41.119634 32119 net.cpp:408] conv1 <- pool0
I0428 20:11:41.119639 32119 net.cpp:382] conv1 -> conv1
I0428 20:11:41.121903 32119 net.cpp:124] Setting up conv1
I0428 20:11:41.121933 32119 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:41.121938 32119 net.cpp:139] Memory required for data: 5628160
I0428 20:11:41.121947 32119 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:41.121955 32119 net.cpp:86] Creating Layer pool1
I0428 20:11:41.121959 32119 net.cpp:408] pool1 <- conv1
I0428 20:11:41.121964 32119 net.cpp:382] pool1 -> pool1
I0428 20:11:41.122028 32119 net.cpp:124] Setting up pool1
I0428 20:11:41.122040 32119 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:41.122042 32119 net.cpp:139] Memory required for data: 5832960
I0428 20:11:41.122045 32119 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:41.122053 32119 net.cpp:86] Creating Layer ip1
I0428 20:11:41.122056 32119 net.cpp:408] ip1 <- pool1
I0428 20:11:41.122061 32119 net.cpp:382] ip1 -> ip1
I0428 20:11:41.122448 32119 net.cpp:124] Setting up ip1
I0428 20:11:41.122455 32119 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:41.122474 32119 net.cpp:139] Memory required for data: 5845760
I0428 20:11:41.122481 32119 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:41.122486 32119 net.cpp:86] Creating Layer relu1
I0428 20:11:41.122491 32119 net.cpp:408] relu1 <- ip1
I0428 20:11:41.122495 32119 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:41.122651 32119 net.cpp:124] Setting up relu1
I0428 20:11:41.122659 32119 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:41.122663 32119 net.cpp:139] Memory required for data: 5858560
I0428 20:11:41.122665 32119 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:41.122673 32119 net.cpp:86] Creating Layer ip2
I0428 20:11:41.122675 32119 net.cpp:408] ip2 <- ip1
I0428 20:11:41.122679 32119 net.cpp:382] ip2 -> ip2
I0428 20:11:41.123762 32119 net.cpp:124] Setting up ip2
I0428 20:11:41.123775 32119 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:41.123793 32119 net.cpp:139] Memory required for data: 5864960
I0428 20:11:41.123800 32119 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:41.123805 32119 net.cpp:86] Creating Layer relu2
I0428 20:11:41.123809 32119 net.cpp:408] relu2 <- ip2
I0428 20:11:41.123814 32119 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:41.124632 32119 net.cpp:124] Setting up relu2
I0428 20:11:41.124644 32119 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:41.124663 32119 net.cpp:139] Memory required for data: 5871360
I0428 20:11:41.124667 32119 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:41.124675 32119 net.cpp:86] Creating Layer ip3
I0428 20:11:41.124677 32119 net.cpp:408] ip3 <- ip2
I0428 20:11:41.124683 32119 net.cpp:382] ip3 -> ip3
I0428 20:11:41.124776 32119 net.cpp:124] Setting up ip3
I0428 20:11:41.124784 32119 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:41.124788 32119 net.cpp:139] Memory required for data: 5873920
I0428 20:11:41.124795 32119 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:41.124799 32119 net.cpp:86] Creating Layer relu3
I0428 20:11:41.124802 32119 net.cpp:408] relu3 <- ip3
I0428 20:11:41.124806 32119 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:41.125013 32119 net.cpp:124] Setting up relu3
I0428 20:11:41.125022 32119 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:41.125025 32119 net.cpp:139] Memory required for data: 5876480
I0428 20:11:41.125028 32119 layer_factory.hpp:77] Creating layer loss
I0428 20:11:41.125041 32119 net.cpp:86] Creating Layer loss
I0428 20:11:41.125043 32119 net.cpp:408] loss <- ip3
I0428 20:11:41.125047 32119 net.cpp:408] loss <- label
I0428 20:11:41.125053 32119 net.cpp:382] loss -> loss
I0428 20:11:41.125067 32119 layer_factory.hpp:77] Creating layer loss
I0428 20:11:41.125350 32119 net.cpp:124] Setting up loss
I0428 20:11:41.125391 32119 net.cpp:131] Top shape: (1)
I0428 20:11:41.125393 32119 net.cpp:134]     with loss weight 1
I0428 20:11:41.125423 32119 net.cpp:139] Memory required for data: 5876484
I0428 20:11:41.125427 32119 net.cpp:200] loss needs backward computation.
I0428 20:11:41.125432 32119 net.cpp:200] relu3 needs backward computation.
I0428 20:11:41.125434 32119 net.cpp:200] ip3 needs backward computation.
I0428 20:11:41.125437 32119 net.cpp:200] relu2 needs backward computation.
I0428 20:11:41.125440 32119 net.cpp:200] ip2 needs backward computation.
I0428 20:11:41.125444 32119 net.cpp:200] relu1 needs backward computation.
I0428 20:11:41.125447 32119 net.cpp:200] ip1 needs backward computation.
I0428 20:11:41.125450 32119 net.cpp:200] pool1 needs backward computation.
I0428 20:11:41.125453 32119 net.cpp:200] conv1 needs backward computation.
I0428 20:11:41.125457 32119 net.cpp:200] pool0 needs backward computation.
I0428 20:11:41.125460 32119 net.cpp:200] conv0 needs backward computation.
I0428 20:11:41.125463 32119 net.cpp:202] mnist does not need backward computation.
I0428 20:11:41.125468 32119 net.cpp:244] This network produces output loss
I0428 20:11:41.125476 32119 net.cpp:257] Network initialization done.
I0428 20:11:41.125845 32119 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1164.prototxt
I0428 20:11:41.125902 32119 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:41.126006 32119 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:41.126097 32119 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:41.126142 32119 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:41.126154 32119 net.cpp:86] Creating Layer mnist
I0428 20:11:41.126158 32119 net.cpp:382] mnist -> data
I0428 20:11:41.126166 32119 net.cpp:382] mnist -> label
I0428 20:11:41.126246 32119 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:41.128532 32119 net.cpp:124] Setting up mnist
I0428 20:11:41.128545 32119 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:41.128566 32119 net.cpp:131] Top shape: 100 (100)
I0428 20:11:41.128568 32119 net.cpp:139] Memory required for data: 314000
I0428 20:11:41.128572 32119 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:41.128579 32119 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:41.128582 32119 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:41.128587 32119 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:41.128593 32119 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:41.128693 32119 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:41.128701 32119 net.cpp:131] Top shape: 100 (100)
I0428 20:11:41.128705 32119 net.cpp:131] Top shape: 100 (100)
I0428 20:11:41.128708 32119 net.cpp:139] Memory required for data: 314800
I0428 20:11:41.128711 32119 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:41.128720 32119 net.cpp:86] Creating Layer conv0
I0428 20:11:41.128723 32119 net.cpp:408] conv0 <- data
I0428 20:11:41.128728 32119 net.cpp:382] conv0 -> conv0
I0428 20:11:41.130471 32119 net.cpp:124] Setting up conv0
I0428 20:11:41.130497 32119 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:41.130502 32119 net.cpp:139] Memory required for data: 6074800
I0428 20:11:41.130512 32119 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:41.130534 32119 net.cpp:86] Creating Layer pool0
I0428 20:11:41.130538 32119 net.cpp:408] pool0 <- conv0
I0428 20:11:41.130543 32119 net.cpp:382] pool0 -> pool0
I0428 20:11:41.130581 32119 net.cpp:124] Setting up pool0
I0428 20:11:41.130586 32119 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:41.130590 32119 net.cpp:139] Memory required for data: 7514800
I0428 20:11:41.130594 32119 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:41.130602 32119 net.cpp:86] Creating Layer conv1
I0428 20:11:41.130605 32119 net.cpp:408] conv1 <- pool0
I0428 20:11:41.130610 32119 net.cpp:382] conv1 -> conv1
I0428 20:11:41.132457 32119 net.cpp:124] Setting up conv1
I0428 20:11:41.132472 32119 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:41.132475 32119 net.cpp:139] Memory required for data: 8794800
I0428 20:11:41.132484 32119 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:41.132493 32119 net.cpp:86] Creating Layer pool1
I0428 20:11:41.132496 32119 net.cpp:408] pool1 <- conv1
I0428 20:11:41.132503 32119 net.cpp:382] pool1 -> pool1
I0428 20:11:41.132540 32119 net.cpp:124] Setting up pool1
I0428 20:11:41.132547 32119 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:41.132551 32119 net.cpp:139] Memory required for data: 9114800
I0428 20:11:41.132555 32119 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:41.132560 32119 net.cpp:86] Creating Layer ip1
I0428 20:11:41.132565 32119 net.cpp:408] ip1 <- pool1
I0428 20:11:41.132570 32119 net.cpp:382] ip1 -> ip1
I0428 20:11:41.132947 32119 net.cpp:124] Setting up ip1
I0428 20:11:41.132956 32119 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:41.132971 32119 net.cpp:139] Memory required for data: 9134800
I0428 20:11:41.132997 32119 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:41.133003 32119 net.cpp:86] Creating Layer relu1
I0428 20:11:41.133007 32119 net.cpp:408] relu1 <- ip1
I0428 20:11:41.133029 32119 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:41.133211 32119 net.cpp:124] Setting up relu1
I0428 20:11:41.133221 32119 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:41.133224 32119 net.cpp:139] Memory required for data: 9154800
I0428 20:11:41.133229 32119 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:41.133241 32119 net.cpp:86] Creating Layer ip2
I0428 20:11:41.133245 32119 net.cpp:408] ip2 <- ip1
I0428 20:11:41.133250 32119 net.cpp:382] ip2 -> ip2
I0428 20:11:41.133394 32119 net.cpp:124] Setting up ip2
I0428 20:11:41.133401 32119 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:41.133405 32119 net.cpp:139] Memory required for data: 9164800
I0428 20:11:41.133410 32119 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:41.133415 32119 net.cpp:86] Creating Layer relu2
I0428 20:11:41.133419 32119 net.cpp:408] relu2 <- ip2
I0428 20:11:41.133422 32119 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:41.133682 32119 net.cpp:124] Setting up relu2
I0428 20:11:41.133692 32119 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:41.133694 32119 net.cpp:139] Memory required for data: 9174800
I0428 20:11:41.133698 32119 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:41.133704 32119 net.cpp:86] Creating Layer ip3
I0428 20:11:41.133708 32119 net.cpp:408] ip3 <- ip2
I0428 20:11:41.133713 32119 net.cpp:382] ip3 -> ip3
I0428 20:11:41.133813 32119 net.cpp:124] Setting up ip3
I0428 20:11:41.133821 32119 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:41.133826 32119 net.cpp:139] Memory required for data: 9178800
I0428 20:11:41.133833 32119 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:41.133838 32119 net.cpp:86] Creating Layer relu3
I0428 20:11:41.133842 32119 net.cpp:408] relu3 <- ip3
I0428 20:11:41.133847 32119 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:41.134718 32119 net.cpp:124] Setting up relu3
I0428 20:11:41.134732 32119 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:41.134737 32119 net.cpp:139] Memory required for data: 9182800
I0428 20:11:41.134750 32119 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:41.134757 32119 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:41.134759 32119 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:41.134765 32119 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:41.134771 32119 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:41.134815 32119 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:41.134824 32119 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:41.134827 32119 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:41.134835 32119 net.cpp:139] Memory required for data: 9190800
I0428 20:11:41.134843 32119 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:41.134848 32119 net.cpp:86] Creating Layer accuracy
I0428 20:11:41.134852 32119 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:41.134857 32119 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:41.134861 32119 net.cpp:382] accuracy -> accuracy
I0428 20:11:41.134868 32119 net.cpp:124] Setting up accuracy
I0428 20:11:41.134873 32119 net.cpp:131] Top shape: (1)
I0428 20:11:41.134876 32119 net.cpp:139] Memory required for data: 9190804
I0428 20:11:41.134879 32119 layer_factory.hpp:77] Creating layer loss
I0428 20:11:41.134883 32119 net.cpp:86] Creating Layer loss
I0428 20:11:41.134887 32119 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:41.134891 32119 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:41.134896 32119 net.cpp:382] loss -> loss
I0428 20:11:41.134902 32119 layer_factory.hpp:77] Creating layer loss
I0428 20:11:41.135149 32119 net.cpp:124] Setting up loss
I0428 20:11:41.135159 32119 net.cpp:131] Top shape: (1)
I0428 20:11:41.135164 32119 net.cpp:134]     with loss weight 1
I0428 20:11:41.135195 32119 net.cpp:139] Memory required for data: 9190808
I0428 20:11:41.135198 32119 net.cpp:200] loss needs backward computation.
I0428 20:11:41.135203 32119 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:41.135207 32119 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:41.135210 32119 net.cpp:200] relu3 needs backward computation.
I0428 20:11:41.135213 32119 net.cpp:200] ip3 needs backward computation.
I0428 20:11:41.135216 32119 net.cpp:200] relu2 needs backward computation.
I0428 20:11:41.135220 32119 net.cpp:200] ip2 needs backward computation.
I0428 20:11:41.135223 32119 net.cpp:200] relu1 needs backward computation.
I0428 20:11:41.135226 32119 net.cpp:200] ip1 needs backward computation.
I0428 20:11:41.135229 32119 net.cpp:200] pool1 needs backward computation.
I0428 20:11:41.135233 32119 net.cpp:200] conv1 needs backward computation.
I0428 20:11:41.135236 32119 net.cpp:200] pool0 needs backward computation.
I0428 20:11:41.135241 32119 net.cpp:200] conv0 needs backward computation.
I0428 20:11:41.135244 32119 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:41.135248 32119 net.cpp:202] mnist does not need backward computation.
I0428 20:11:41.135251 32119 net.cpp:244] This network produces output accuracy
I0428 20:11:41.135255 32119 net.cpp:244] This network produces output loss
I0428 20:11:41.135267 32119 net.cpp:257] Network initialization done.
I0428 20:11:41.135318 32119 solver.cpp:56] Solver scaffolding done.
I0428 20:11:41.135697 32119 caffe.cpp:248] Starting Optimization
I0428 20:11:41.135715 32119 solver.cpp:273] Solving LeNet
I0428 20:11:41.135718 32119 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:41.136641 32119 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:41.143245 32119 blocking_queue.cpp:49] Waiting for data
I0428 20:11:41.212805 32126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:41.214149 32119 solver.cpp:398]     Test net output #0: accuracy = 0.1182
I0428 20:11:41.214190 32119 solver.cpp:398]     Test net output #1: loss = 2.31221 (* 1 = 2.31221 loss)
I0428 20:11:41.220218 32119 solver.cpp:219] Iteration 0 (0 iter/s, 0.0844646s/100 iters), loss = 2.3219
I0428 20:11:41.220274 32119 solver.cpp:238]     Train net output #0: loss = 2.3219 (* 1 = 2.3219 loss)
I0428 20:11:41.220294 32119 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:41.375277 32119 solver.cpp:219] Iteration 100 (645.195 iter/s, 0.154992s/100 iters), loss = 0.881249
I0428 20:11:41.375308 32119 solver.cpp:238]     Train net output #0: loss = 0.881249 (* 1 = 0.881249 loss)
I0428 20:11:41.375316 32119 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:41.520503 32119 solver.cpp:219] Iteration 200 (688.807 iter/s, 0.145179s/100 iters), loss = 0.442069
I0428 20:11:41.520552 32119 solver.cpp:238]     Train net output #0: loss = 0.442069 (* 1 = 0.442069 loss)
I0428 20:11:41.520565 32119 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:41.659538 32119 solver.cpp:219] Iteration 300 (719.574 iter/s, 0.138971s/100 iters), loss = 0.629812
I0428 20:11:41.659592 32119 solver.cpp:238]     Train net output #0: loss = 0.629812 (* 1 = 0.629812 loss)
I0428 20:11:41.659606 32119 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:41.798072 32119 solver.cpp:219] Iteration 400 (722.176 iter/s, 0.13847s/100 iters), loss = 0.312611
I0428 20:11:41.798110 32119 solver.cpp:238]     Train net output #0: loss = 0.312611 (* 1 = 0.312611 loss)
I0428 20:11:41.798117 32119 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:41.934844 32119 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:42.012142 32126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:42.012804 32119 solver.cpp:398]     Test net output #0: accuracy = 0.8714
I0428 20:11:42.012840 32119 solver.cpp:398]     Test net output #1: loss = 0.34164 (* 1 = 0.34164 loss)
I0428 20:11:42.014107 32119 solver.cpp:219] Iteration 500 (462.999 iter/s, 0.215983s/100 iters), loss = 0.304137
I0428 20:11:42.014159 32119 solver.cpp:238]     Train net output #0: loss = 0.304137 (* 1 = 0.304137 loss)
I0428 20:11:42.014169 32119 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:42.151720 32119 solver.cpp:219] Iteration 600 (727.029 iter/s, 0.137546s/100 iters), loss = 0.231119
I0428 20:11:42.151760 32119 solver.cpp:238]     Train net output #0: loss = 0.231119 (* 1 = 0.231119 loss)
I0428 20:11:42.151772 32119 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:42.284432 32119 solver.cpp:219] Iteration 700 (753.8 iter/s, 0.132661s/100 iters), loss = 0.23484
I0428 20:11:42.284466 32119 solver.cpp:238]     Train net output #0: loss = 0.23484 (* 1 = 0.23484 loss)
I0428 20:11:42.284474 32119 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:42.410394 32119 solver.cpp:219] Iteration 800 (794.173 iter/s, 0.125917s/100 iters), loss = 0.452596
I0428 20:11:42.410426 32119 solver.cpp:238]     Train net output #0: loss = 0.452596 (* 1 = 0.452596 loss)
I0428 20:11:42.410434 32119 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:42.548697 32119 solver.cpp:219] Iteration 900 (723.326 iter/s, 0.13825s/100 iters), loss = 0.369316
I0428 20:11:42.548756 32119 solver.cpp:238]     Train net output #0: loss = 0.369316 (* 1 = 0.369316 loss)
I0428 20:11:42.548769 32119 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:42.594697 32125 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:42.684284 32119 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:42.686424 32119 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:42.687670 32119 solver.cpp:311] Iteration 1000, loss = 0.248953
I0428 20:11:42.687693 32119 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:42.763423 32126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:42.764083 32119 solver.cpp:398]     Test net output #0: accuracy = 0.8796
I0428 20:11:42.764111 32119 solver.cpp:398]     Test net output #1: loss = 0.30281 (* 1 = 0.30281 loss)
I0428 20:11:42.764117 32119 solver.cpp:316] Optimization Done.
I0428 20:11:42.764120 32119 caffe.cpp:259] Optimization Done.
