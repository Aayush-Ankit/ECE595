I0428 20:08:15.280598 31340 caffe.cpp:218] Using GPUs 0
I0428 20:08:15.317627 31340 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:15.831018 31340 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1078.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:15.831135 31340 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1078.prototxt
I0428 20:08:15.831502 31340 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:15.831521 31340 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:15.831609 31340 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:15.831679 31340 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:15.831768 31340 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:15.831789 31340 net.cpp:86] Creating Layer mnist
I0428 20:08:15.831796 31340 net.cpp:382] mnist -> data
I0428 20:08:15.831815 31340 net.cpp:382] mnist -> label
I0428 20:08:15.832774 31340 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:15.834933 31340 net.cpp:124] Setting up mnist
I0428 20:08:15.834949 31340 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:15.834954 31340 net.cpp:131] Top shape: 64 (64)
I0428 20:08:15.834957 31340 net.cpp:139] Memory required for data: 200960
I0428 20:08:15.834964 31340 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:15.834977 31340 net.cpp:86] Creating Layer conv0
I0428 20:08:15.834995 31340 net.cpp:408] conv0 <- data
I0428 20:08:15.835005 31340 net.cpp:382] conv0 -> conv0
I0428 20:08:16.065943 31340 net.cpp:124] Setting up conv0
I0428 20:08:16.065984 31340 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:16.065989 31340 net.cpp:139] Memory required for data: 3887360
I0428 20:08:16.066002 31340 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:16.066015 31340 net.cpp:86] Creating Layer pool0
I0428 20:08:16.066020 31340 net.cpp:408] pool0 <- conv0
I0428 20:08:16.066025 31340 net.cpp:382] pool0 -> pool0
I0428 20:08:16.066095 31340 net.cpp:124] Setting up pool0
I0428 20:08:16.066100 31340 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:16.066103 31340 net.cpp:139] Memory required for data: 4808960
I0428 20:08:16.066107 31340 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:16.066117 31340 net.cpp:86] Creating Layer conv1
I0428 20:08:16.066118 31340 net.cpp:408] conv1 <- pool0
I0428 20:08:16.066123 31340 net.cpp:382] conv1 -> conv1
I0428 20:08:16.068910 31340 net.cpp:124] Setting up conv1
I0428 20:08:16.068940 31340 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:16.068944 31340 net.cpp:139] Memory required for data: 4972800
I0428 20:08:16.068953 31340 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:16.068963 31340 net.cpp:86] Creating Layer pool1
I0428 20:08:16.068965 31340 net.cpp:408] pool1 <- conv1
I0428 20:08:16.068970 31340 net.cpp:382] pool1 -> pool1
I0428 20:08:16.069053 31340 net.cpp:124] Setting up pool1
I0428 20:08:16.069059 31340 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:16.069062 31340 net.cpp:139] Memory required for data: 5013760
I0428 20:08:16.069066 31340 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:16.069072 31340 net.cpp:86] Creating Layer ip1
I0428 20:08:16.069075 31340 net.cpp:408] ip1 <- pool1
I0428 20:08:16.069080 31340 net.cpp:382] ip1 -> ip1
I0428 20:08:16.070097 31340 net.cpp:124] Setting up ip1
I0428 20:08:16.070127 31340 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:16.070130 31340 net.cpp:139] Memory required for data: 5020160
I0428 20:08:16.070139 31340 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:16.070145 31340 net.cpp:86] Creating Layer relu1
I0428 20:08:16.070149 31340 net.cpp:408] relu1 <- ip1
I0428 20:08:16.070153 31340 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:16.070355 31340 net.cpp:124] Setting up relu1
I0428 20:08:16.070364 31340 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:16.070368 31340 net.cpp:139] Memory required for data: 5026560
I0428 20:08:16.070370 31340 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:16.070377 31340 net.cpp:86] Creating Layer ip2
I0428 20:08:16.070380 31340 net.cpp:408] ip2 <- ip1
I0428 20:08:16.070385 31340 net.cpp:382] ip2 -> ip2
I0428 20:08:16.070494 31340 net.cpp:124] Setting up ip2
I0428 20:08:16.070500 31340 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:16.070503 31340 net.cpp:139] Memory required for data: 5032960
I0428 20:08:16.070508 31340 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:16.070514 31340 net.cpp:86] Creating Layer relu2
I0428 20:08:16.070518 31340 net.cpp:408] relu2 <- ip2
I0428 20:08:16.070521 31340 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:16.071341 31340 net.cpp:124] Setting up relu2
I0428 20:08:16.071352 31340 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:16.071372 31340 net.cpp:139] Memory required for data: 5039360
I0428 20:08:16.071375 31340 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:16.071382 31340 net.cpp:86] Creating Layer ip3
I0428 20:08:16.071385 31340 net.cpp:408] ip3 <- ip2
I0428 20:08:16.071391 31340 net.cpp:382] ip3 -> ip3
I0428 20:08:16.071526 31340 net.cpp:124] Setting up ip3
I0428 20:08:16.071533 31340 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:16.071537 31340 net.cpp:139] Memory required for data: 5041920
I0428 20:08:16.071545 31340 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:16.071552 31340 net.cpp:86] Creating Layer relu3
I0428 20:08:16.071554 31340 net.cpp:408] relu3 <- ip3
I0428 20:08:16.071559 31340 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:16.071797 31340 net.cpp:124] Setting up relu3
I0428 20:08:16.071805 31340 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:16.071810 31340 net.cpp:139] Memory required for data: 5044480
I0428 20:08:16.071811 31340 layer_factory.hpp:77] Creating layer loss
I0428 20:08:16.071817 31340 net.cpp:86] Creating Layer loss
I0428 20:08:16.071820 31340 net.cpp:408] loss <- ip3
I0428 20:08:16.071825 31340 net.cpp:408] loss <- label
I0428 20:08:16.071830 31340 net.cpp:382] loss -> loss
I0428 20:08:16.071846 31340 layer_factory.hpp:77] Creating layer loss
I0428 20:08:16.072062 31340 net.cpp:124] Setting up loss
I0428 20:08:16.072069 31340 net.cpp:131] Top shape: (1)
I0428 20:08:16.072073 31340 net.cpp:134]     with loss weight 1
I0428 20:08:16.072088 31340 net.cpp:139] Memory required for data: 5044484
I0428 20:08:16.072090 31340 net.cpp:200] loss needs backward computation.
I0428 20:08:16.072093 31340 net.cpp:200] relu3 needs backward computation.
I0428 20:08:16.072096 31340 net.cpp:200] ip3 needs backward computation.
I0428 20:08:16.072099 31340 net.cpp:200] relu2 needs backward computation.
I0428 20:08:16.072101 31340 net.cpp:200] ip2 needs backward computation.
I0428 20:08:16.072104 31340 net.cpp:200] relu1 needs backward computation.
I0428 20:08:16.072108 31340 net.cpp:200] ip1 needs backward computation.
I0428 20:08:16.072110 31340 net.cpp:200] pool1 needs backward computation.
I0428 20:08:16.072113 31340 net.cpp:200] conv1 needs backward computation.
I0428 20:08:16.072116 31340 net.cpp:200] pool0 needs backward computation.
I0428 20:08:16.072118 31340 net.cpp:200] conv0 needs backward computation.
I0428 20:08:16.072137 31340 net.cpp:202] mnist does not need backward computation.
I0428 20:08:16.072140 31340 net.cpp:244] This network produces output loss
I0428 20:08:16.072149 31340 net.cpp:257] Network initialization done.
I0428 20:08:16.072505 31340 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1078.prototxt
I0428 20:08:16.072547 31340 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:16.072651 31340 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:16.072728 31340 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:16.072773 31340 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:16.072785 31340 net.cpp:86] Creating Layer mnist
I0428 20:08:16.072789 31340 net.cpp:382] mnist -> data
I0428 20:08:16.072798 31340 net.cpp:382] mnist -> label
I0428 20:08:16.072923 31340 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:16.074991 31340 net.cpp:124] Setting up mnist
I0428 20:08:16.075019 31340 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:16.075040 31340 net.cpp:131] Top shape: 100 (100)
I0428 20:08:16.075043 31340 net.cpp:139] Memory required for data: 314000
I0428 20:08:16.075047 31340 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:16.075054 31340 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:16.075057 31340 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:16.075062 31340 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:16.075068 31340 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:16.075129 31340 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:16.075134 31340 net.cpp:131] Top shape: 100 (100)
I0428 20:08:16.075139 31340 net.cpp:131] Top shape: 100 (100)
I0428 20:08:16.075141 31340 net.cpp:139] Memory required for data: 314800
I0428 20:08:16.075145 31340 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:16.075167 31340 net.cpp:86] Creating Layer conv0
I0428 20:08:16.075170 31340 net.cpp:408] conv0 <- data
I0428 20:08:16.075176 31340 net.cpp:382] conv0 -> conv0
I0428 20:08:16.076982 31340 net.cpp:124] Setting up conv0
I0428 20:08:16.077011 31340 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:16.077015 31340 net.cpp:139] Memory required for data: 6074800
I0428 20:08:16.077024 31340 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:16.077031 31340 net.cpp:86] Creating Layer pool0
I0428 20:08:16.077034 31340 net.cpp:408] pool0 <- conv0
I0428 20:08:16.077039 31340 net.cpp:382] pool0 -> pool0
I0428 20:08:16.077088 31340 net.cpp:124] Setting up pool0
I0428 20:08:16.077095 31340 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:16.077098 31340 net.cpp:139] Memory required for data: 7514800
I0428 20:08:16.077100 31340 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:16.077108 31340 net.cpp:86] Creating Layer conv1
I0428 20:08:16.077112 31340 net.cpp:408] conv1 <- pool0
I0428 20:08:16.077116 31340 net.cpp:382] conv1 -> conv1
I0428 20:08:16.079375 31340 net.cpp:124] Setting up conv1
I0428 20:08:16.079388 31340 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:16.079407 31340 net.cpp:139] Memory required for data: 7770800
I0428 20:08:16.079417 31340 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:16.079423 31340 net.cpp:86] Creating Layer pool1
I0428 20:08:16.079427 31340 net.cpp:408] pool1 <- conv1
I0428 20:08:16.079432 31340 net.cpp:382] pool1 -> pool1
I0428 20:08:16.079512 31340 net.cpp:124] Setting up pool1
I0428 20:08:16.079517 31340 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:16.079520 31340 net.cpp:139] Memory required for data: 7834800
I0428 20:08:16.079524 31340 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:16.079530 31340 net.cpp:86] Creating Layer ip1
I0428 20:08:16.079532 31340 net.cpp:408] ip1 <- pool1
I0428 20:08:16.079538 31340 net.cpp:382] ip1 -> ip1
I0428 20:08:16.079694 31340 net.cpp:124] Setting up ip1
I0428 20:08:16.079702 31340 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:16.079715 31340 net.cpp:139] Memory required for data: 7844800
I0428 20:08:16.079723 31340 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:16.079730 31340 net.cpp:86] Creating Layer relu1
I0428 20:08:16.079732 31340 net.cpp:408] relu1 <- ip1
I0428 20:08:16.079736 31340 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:16.079952 31340 net.cpp:124] Setting up relu1
I0428 20:08:16.079962 31340 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:16.079965 31340 net.cpp:139] Memory required for data: 7854800
I0428 20:08:16.079968 31340 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:16.079991 31340 net.cpp:86] Creating Layer ip2
I0428 20:08:16.079994 31340 net.cpp:408] ip2 <- ip1
I0428 20:08:16.080000 31340 net.cpp:382] ip2 -> ip2
I0428 20:08:16.080111 31340 net.cpp:124] Setting up ip2
I0428 20:08:16.080118 31340 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:16.080121 31340 net.cpp:139] Memory required for data: 7864800
I0428 20:08:16.080127 31340 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:16.080132 31340 net.cpp:86] Creating Layer relu2
I0428 20:08:16.080135 31340 net.cpp:408] relu2 <- ip2
I0428 20:08:16.080139 31340 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:16.080305 31340 net.cpp:124] Setting up relu2
I0428 20:08:16.080313 31340 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:16.080317 31340 net.cpp:139] Memory required for data: 7874800
I0428 20:08:16.080319 31340 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:16.080325 31340 net.cpp:86] Creating Layer ip3
I0428 20:08:16.080328 31340 net.cpp:408] ip3 <- ip2
I0428 20:08:16.080334 31340 net.cpp:382] ip3 -> ip3
I0428 20:08:16.080428 31340 net.cpp:124] Setting up ip3
I0428 20:08:16.080435 31340 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:16.080438 31340 net.cpp:139] Memory required for data: 7878800
I0428 20:08:16.080445 31340 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:16.080464 31340 net.cpp:86] Creating Layer relu3
I0428 20:08:16.080467 31340 net.cpp:408] relu3 <- ip3
I0428 20:08:16.080471 31340 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:16.081425 31340 net.cpp:124] Setting up relu3
I0428 20:08:16.081454 31340 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:16.081457 31340 net.cpp:139] Memory required for data: 7882800
I0428 20:08:16.081460 31340 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:16.081465 31340 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:16.081470 31340 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:16.081475 31340 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:16.081481 31340 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:16.081524 31340 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:16.081532 31340 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:16.081534 31340 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:16.081538 31340 net.cpp:139] Memory required for data: 7890800
I0428 20:08:16.081547 31340 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:16.081552 31340 net.cpp:86] Creating Layer accuracy
I0428 20:08:16.081555 31340 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:16.081559 31340 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:16.081563 31340 net.cpp:382] accuracy -> accuracy
I0428 20:08:16.081571 31340 net.cpp:124] Setting up accuracy
I0428 20:08:16.081575 31340 net.cpp:131] Top shape: (1)
I0428 20:08:16.081578 31340 net.cpp:139] Memory required for data: 7890804
I0428 20:08:16.081581 31340 layer_factory.hpp:77] Creating layer loss
I0428 20:08:16.081598 31340 net.cpp:86] Creating Layer loss
I0428 20:08:16.081600 31340 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:16.081604 31340 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:16.081609 31340 net.cpp:382] loss -> loss
I0428 20:08:16.081614 31340 layer_factory.hpp:77] Creating layer loss
I0428 20:08:16.081851 31340 net.cpp:124] Setting up loss
I0428 20:08:16.081859 31340 net.cpp:131] Top shape: (1)
I0428 20:08:16.081862 31340 net.cpp:134]     with loss weight 1
I0428 20:08:16.081877 31340 net.cpp:139] Memory required for data: 7890808
I0428 20:08:16.081881 31340 net.cpp:200] loss needs backward computation.
I0428 20:08:16.081885 31340 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:16.081889 31340 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:16.081892 31340 net.cpp:200] relu3 needs backward computation.
I0428 20:08:16.081895 31340 net.cpp:200] ip3 needs backward computation.
I0428 20:08:16.081898 31340 net.cpp:200] relu2 needs backward computation.
I0428 20:08:16.081900 31340 net.cpp:200] ip2 needs backward computation.
I0428 20:08:16.081903 31340 net.cpp:200] relu1 needs backward computation.
I0428 20:08:16.081912 31340 net.cpp:200] ip1 needs backward computation.
I0428 20:08:16.081915 31340 net.cpp:200] pool1 needs backward computation.
I0428 20:08:16.081918 31340 net.cpp:200] conv1 needs backward computation.
I0428 20:08:16.081921 31340 net.cpp:200] pool0 needs backward computation.
I0428 20:08:16.081928 31340 net.cpp:200] conv0 needs backward computation.
I0428 20:08:16.081931 31340 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:16.081941 31340 net.cpp:202] mnist does not need backward computation.
I0428 20:08:16.081944 31340 net.cpp:244] This network produces output accuracy
I0428 20:08:16.081948 31340 net.cpp:244] This network produces output loss
I0428 20:08:16.081959 31340 net.cpp:257] Network initialization done.
I0428 20:08:16.082015 31340 solver.cpp:56] Solver scaffolding done.
I0428 20:08:16.082502 31340 caffe.cpp:248] Starting Optimization
I0428 20:08:16.082507 31340 solver.cpp:273] Solving LeNet
I0428 20:08:16.082510 31340 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:16.083436 31340 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:16.088600 31340 blocking_queue.cpp:49] Waiting for data
I0428 20:08:16.155150 31347 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:16.155798 31340 solver.cpp:398]     Test net output #0: accuracy = 0.0902
I0428 20:08:16.155833 31340 solver.cpp:398]     Test net output #1: loss = 2.30961 (* 1 = 2.30961 loss)
I0428 20:08:16.159590 31340 solver.cpp:219] Iteration 0 (0 iter/s, 0.0770325s/100 iters), loss = 2.31288
I0428 20:08:16.159628 31340 solver.cpp:238]     Train net output #0: loss = 2.31288 (* 1 = 2.31288 loss)
I0428 20:08:16.159639 31340 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:16.252714 31340 solver.cpp:219] Iteration 100 (1074.42 iter/s, 0.0930734s/100 iters), loss = 0.793094
I0428 20:08:16.252753 31340 solver.cpp:238]     Train net output #0: loss = 0.793094 (* 1 = 0.793094 loss)
I0428 20:08:16.252759 31340 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:16.345919 31340 solver.cpp:219] Iteration 200 (1073.29 iter/s, 0.0931717s/100 iters), loss = 0.420106
I0428 20:08:16.345958 31340 solver.cpp:238]     Train net output #0: loss = 0.420106 (* 1 = 0.420106 loss)
I0428 20:08:16.345964 31340 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:16.438843 31340 solver.cpp:219] Iteration 300 (1076.53 iter/s, 0.0928911s/100 iters), loss = 0.427076
I0428 20:08:16.438882 31340 solver.cpp:238]     Train net output #0: loss = 0.427076 (* 1 = 0.427076 loss)
I0428 20:08:16.438889 31340 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:16.531643 31340 solver.cpp:219] Iteration 400 (1077.97 iter/s, 0.092767s/100 iters), loss = 0.569939
I0428 20:08:16.531667 31340 solver.cpp:238]     Train net output #0: loss = 0.569939 (* 1 = 0.569939 loss)
I0428 20:08:16.531673 31340 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:16.621912 31340 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:16.676841 31347 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:16.677476 31340 solver.cpp:398]     Test net output #0: accuracy = 0.8652
I0428 20:08:16.677510 31340 solver.cpp:398]     Test net output #1: loss = 0.363554 (* 1 = 0.363554 loss)
I0428 20:08:16.678555 31340 solver.cpp:219] Iteration 500 (680.85 iter/s, 0.146875s/100 iters), loss = 0.484732
I0428 20:08:16.678614 31340 solver.cpp:238]     Train net output #0: loss = 0.484732 (* 1 = 0.484732 loss)
I0428 20:08:16.678624 31340 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:16.775552 31340 solver.cpp:219] Iteration 600 (1031.71 iter/s, 0.0969263s/100 iters), loss = 0.199863
I0428 20:08:16.775594 31340 solver.cpp:238]     Train net output #0: loss = 0.199863 (* 1 = 0.199863 loss)
I0428 20:08:16.775601 31340 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:16.866670 31340 solver.cpp:219] Iteration 700 (1098.09 iter/s, 0.0910674s/100 iters), loss = 0.356839
I0428 20:08:16.866710 31340 solver.cpp:238]     Train net output #0: loss = 0.356839 (* 1 = 0.356839 loss)
I0428 20:08:16.866716 31340 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:16.958202 31340 solver.cpp:219] Iteration 800 (1093.1 iter/s, 0.0914831s/100 iters), loss = 0.504878
I0428 20:08:16.958241 31340 solver.cpp:238]     Train net output #0: loss = 0.504878 (* 1 = 0.504878 loss)
I0428 20:08:16.958247 31340 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:17.053302 31340 solver.cpp:219] Iteration 900 (1051.91 iter/s, 0.0950651s/100 iters), loss = 0.201055
I0428 20:08:17.053355 31340 solver.cpp:238]     Train net output #0: loss = 0.201055 (* 1 = 0.201055 loss)
I0428 20:08:17.053362 31340 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:17.086035 31346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:17.149011 31340 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:17.149912 31340 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:17.150524 31340 solver.cpp:311] Iteration 1000, loss = 0.303634
I0428 20:08:17.150538 31340 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:17.225781 31347 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:17.226404 31340 solver.cpp:398]     Test net output #0: accuracy = 0.8782
I0428 20:08:17.226440 31340 solver.cpp:398]     Test net output #1: loss = 0.316463 (* 1 = 0.316463 loss)
I0428 20:08:17.226446 31340 solver.cpp:316] Optimization Done.
I0428 20:08:17.226449 31340 caffe.cpp:259] Optimization Done.
