I0428 19:43:18.859170 25316 caffe.cpp:218] Using GPUs 0
I0428 19:43:18.893813 25316 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:19.349558 25316 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test418.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:19.349686 25316 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test418.prototxt
I0428 19:43:19.350000 25316 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:19.350015 25316 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:19.350090 25316 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:19.350147 25316 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:19.350227 25316 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:19.350246 25316 net.cpp:86] Creating Layer mnist
I0428 19:43:19.350251 25316 net.cpp:382] mnist -> data
I0428 19:43:19.350270 25316 net.cpp:382] mnist -> label
I0428 19:43:19.351158 25316 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:19.353350 25316 net.cpp:124] Setting up mnist
I0428 19:43:19.353395 25316 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:19.353400 25316 net.cpp:131] Top shape: 64 (64)
I0428 19:43:19.353404 25316 net.cpp:139] Memory required for data: 200960
I0428 19:43:19.353410 25316 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:19.353421 25316 net.cpp:86] Creating Layer conv0
I0428 19:43:19.353438 25316 net.cpp:408] conv0 <- data
I0428 19:43:19.353449 25316 net.cpp:382] conv0 -> conv0
I0428 19:43:19.582149 25316 net.cpp:124] Setting up conv0
I0428 19:43:19.582173 25316 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:19.582177 25316 net.cpp:139] Memory required for data: 495872
I0428 19:43:19.582191 25316 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:19.582202 25316 net.cpp:86] Creating Layer pool0
I0428 19:43:19.582206 25316 net.cpp:408] pool0 <- conv0
I0428 19:43:19.582227 25316 net.cpp:382] pool0 -> pool0
I0428 19:43:19.582288 25316 net.cpp:124] Setting up pool0
I0428 19:43:19.582294 25316 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:19.582298 25316 net.cpp:139] Memory required for data: 569600
I0428 19:43:19.582300 25316 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:19.582310 25316 net.cpp:86] Creating Layer conv1
I0428 19:43:19.582314 25316 net.cpp:408] conv1 <- pool0
I0428 19:43:19.582317 25316 net.cpp:382] conv1 -> conv1
I0428 19:43:19.585131 25316 net.cpp:124] Setting up conv1
I0428 19:43:19.585161 25316 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:19.585165 25316 net.cpp:139] Memory required for data: 979200
I0428 19:43:19.585172 25316 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:19.585180 25316 net.cpp:86] Creating Layer pool1
I0428 19:43:19.585183 25316 net.cpp:408] pool1 <- conv1
I0428 19:43:19.585187 25316 net.cpp:382] pool1 -> pool1
I0428 19:43:19.585245 25316 net.cpp:124] Setting up pool1
I0428 19:43:19.585250 25316 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:19.585253 25316 net.cpp:139] Memory required for data: 1081600
I0428 19:43:19.585256 25316 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:19.585263 25316 net.cpp:86] Creating Layer ip1
I0428 19:43:19.585266 25316 net.cpp:408] ip1 <- pool1
I0428 19:43:19.585270 25316 net.cpp:382] ip1 -> ip1
I0428 19:43:19.586336 25316 net.cpp:124] Setting up ip1
I0428 19:43:19.586349 25316 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:19.586369 25316 net.cpp:139] Memory required for data: 1088000
I0428 19:43:19.586375 25316 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:19.586381 25316 net.cpp:86] Creating Layer relu1
I0428 19:43:19.586385 25316 net.cpp:408] relu1 <- ip1
I0428 19:43:19.586390 25316 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:19.586562 25316 net.cpp:124] Setting up relu1
I0428 19:43:19.586571 25316 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:19.586575 25316 net.cpp:139] Memory required for data: 1094400
I0428 19:43:19.586577 25316 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:19.586585 25316 net.cpp:86] Creating Layer ip2
I0428 19:43:19.586587 25316 net.cpp:408] ip2 <- ip1
I0428 19:43:19.586592 25316 net.cpp:382] ip2 -> ip2
I0428 19:43:19.586711 25316 net.cpp:124] Setting up ip2
I0428 19:43:19.586719 25316 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:19.586721 25316 net.cpp:139] Memory required for data: 1107200
I0428 19:43:19.586727 25316 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:19.586732 25316 net.cpp:86] Creating Layer relu2
I0428 19:43:19.586735 25316 net.cpp:408] relu2 <- ip2
I0428 19:43:19.586740 25316 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:19.587532 25316 net.cpp:124] Setting up relu2
I0428 19:43:19.587543 25316 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:19.587563 25316 net.cpp:139] Memory required for data: 1120000
I0428 19:43:19.587566 25316 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:19.587590 25316 net.cpp:86] Creating Layer ip3
I0428 19:43:19.587594 25316 net.cpp:408] ip3 <- ip2
I0428 19:43:19.587600 25316 net.cpp:382] ip3 -> ip3
I0428 19:43:19.587693 25316 net.cpp:124] Setting up ip3
I0428 19:43:19.587718 25316 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:19.587720 25316 net.cpp:139] Memory required for data: 1122560
I0428 19:43:19.587728 25316 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:19.587749 25316 net.cpp:86] Creating Layer relu3
I0428 19:43:19.587751 25316 net.cpp:408] relu3 <- ip3
I0428 19:43:19.587755 25316 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:19.587951 25316 net.cpp:124] Setting up relu3
I0428 19:43:19.587965 25316 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:19.587968 25316 net.cpp:139] Memory required for data: 1125120
I0428 19:43:19.587971 25316 layer_factory.hpp:77] Creating layer loss
I0428 19:43:19.587977 25316 net.cpp:86] Creating Layer loss
I0428 19:43:19.587981 25316 net.cpp:408] loss <- ip3
I0428 19:43:19.587985 25316 net.cpp:408] loss <- label
I0428 19:43:19.587992 25316 net.cpp:382] loss -> loss
I0428 19:43:19.588011 25316 layer_factory.hpp:77] Creating layer loss
I0428 19:43:19.588285 25316 net.cpp:124] Setting up loss
I0428 19:43:19.588294 25316 net.cpp:131] Top shape: (1)
I0428 19:43:19.588296 25316 net.cpp:134]     with loss weight 1
I0428 19:43:19.588310 25316 net.cpp:139] Memory required for data: 1125124
I0428 19:43:19.588313 25316 net.cpp:200] loss needs backward computation.
I0428 19:43:19.588316 25316 net.cpp:200] relu3 needs backward computation.
I0428 19:43:19.588320 25316 net.cpp:200] ip3 needs backward computation.
I0428 19:43:19.588321 25316 net.cpp:200] relu2 needs backward computation.
I0428 19:43:19.588325 25316 net.cpp:200] ip2 needs backward computation.
I0428 19:43:19.588326 25316 net.cpp:200] relu1 needs backward computation.
I0428 19:43:19.588330 25316 net.cpp:200] ip1 needs backward computation.
I0428 19:43:19.588331 25316 net.cpp:200] pool1 needs backward computation.
I0428 19:43:19.588335 25316 net.cpp:200] conv1 needs backward computation.
I0428 19:43:19.588337 25316 net.cpp:200] pool0 needs backward computation.
I0428 19:43:19.588340 25316 net.cpp:200] conv0 needs backward computation.
I0428 19:43:19.588343 25316 net.cpp:202] mnist does not need backward computation.
I0428 19:43:19.588346 25316 net.cpp:244] This network produces output loss
I0428 19:43:19.588356 25316 net.cpp:257] Network initialization done.
I0428 19:43:19.588697 25316 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test418.prototxt
I0428 19:43:19.588739 25316 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:19.588876 25316 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:19.588959 25316 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:19.589002 25316 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:19.589020 25316 net.cpp:86] Creating Layer mnist
I0428 19:43:19.589025 25316 net.cpp:382] mnist -> data
I0428 19:43:19.589031 25316 net.cpp:382] mnist -> label
I0428 19:43:19.589118 25316 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:19.591099 25316 net.cpp:124] Setting up mnist
I0428 19:43:19.591128 25316 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:19.591133 25316 net.cpp:131] Top shape: 100 (100)
I0428 19:43:19.591136 25316 net.cpp:139] Memory required for data: 314000
I0428 19:43:19.591140 25316 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:19.591184 25316 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:19.591188 25316 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:19.591193 25316 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:19.591200 25316 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:19.591253 25316 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:19.591259 25316 net.cpp:131] Top shape: 100 (100)
I0428 19:43:19.591261 25316 net.cpp:131] Top shape: 100 (100)
I0428 19:43:19.591264 25316 net.cpp:139] Memory required for data: 314800
I0428 19:43:19.591267 25316 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:19.591276 25316 net.cpp:86] Creating Layer conv0
I0428 19:43:19.591279 25316 net.cpp:408] conv0 <- data
I0428 19:43:19.591285 25316 net.cpp:382] conv0 -> conv0
I0428 19:43:19.593159 25316 net.cpp:124] Setting up conv0
I0428 19:43:19.593173 25316 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:19.593178 25316 net.cpp:139] Memory required for data: 775600
I0428 19:43:19.593200 25316 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:19.593225 25316 net.cpp:86] Creating Layer pool0
I0428 19:43:19.593242 25316 net.cpp:408] pool0 <- conv0
I0428 19:43:19.593247 25316 net.cpp:382] pool0 -> pool0
I0428 19:43:19.593286 25316 net.cpp:124] Setting up pool0
I0428 19:43:19.593307 25316 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:19.593309 25316 net.cpp:139] Memory required for data: 890800
I0428 19:43:19.593312 25316 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:19.593320 25316 net.cpp:86] Creating Layer conv1
I0428 19:43:19.593324 25316 net.cpp:408] conv1 <- pool0
I0428 19:43:19.593329 25316 net.cpp:382] conv1 -> conv1
I0428 19:43:19.594998 25316 net.cpp:124] Setting up conv1
I0428 19:43:19.595010 25316 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:19.595015 25316 net.cpp:139] Memory required for data: 1530800
I0428 19:43:19.595023 25316 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:19.595052 25316 net.cpp:86] Creating Layer pool1
I0428 19:43:19.595055 25316 net.cpp:408] pool1 <- conv1
I0428 19:43:19.595062 25316 net.cpp:382] pool1 -> pool1
I0428 19:43:19.595101 25316 net.cpp:124] Setting up pool1
I0428 19:43:19.595108 25316 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:19.595110 25316 net.cpp:139] Memory required for data: 1690800
I0428 19:43:19.595113 25316 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:19.595119 25316 net.cpp:86] Creating Layer ip1
I0428 19:43:19.595122 25316 net.cpp:408] ip1 <- pool1
I0428 19:43:19.595129 25316 net.cpp:382] ip1 -> ip1
I0428 19:43:19.595297 25316 net.cpp:124] Setting up ip1
I0428 19:43:19.595305 25316 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:19.595319 25316 net.cpp:139] Memory required for data: 1700800
I0428 19:43:19.595327 25316 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:19.595338 25316 net.cpp:86] Creating Layer relu1
I0428 19:43:19.595341 25316 net.cpp:408] relu1 <- ip1
I0428 19:43:19.595346 25316 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:19.595507 25316 net.cpp:124] Setting up relu1
I0428 19:43:19.595516 25316 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:19.595520 25316 net.cpp:139] Memory required for data: 1710800
I0428 19:43:19.595522 25316 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:19.595530 25316 net.cpp:86] Creating Layer ip2
I0428 19:43:19.595532 25316 net.cpp:408] ip2 <- ip1
I0428 19:43:19.595538 25316 net.cpp:382] ip2 -> ip2
I0428 19:43:19.595662 25316 net.cpp:124] Setting up ip2
I0428 19:43:19.595670 25316 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:19.595674 25316 net.cpp:139] Memory required for data: 1730800
I0428 19:43:19.595679 25316 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:19.595684 25316 net.cpp:86] Creating Layer relu2
I0428 19:43:19.595687 25316 net.cpp:408] relu2 <- ip2
I0428 19:43:19.595692 25316 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:19.595959 25316 net.cpp:124] Setting up relu2
I0428 19:43:19.595968 25316 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:19.595971 25316 net.cpp:139] Memory required for data: 1750800
I0428 19:43:19.595974 25316 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:19.595981 25316 net.cpp:86] Creating Layer ip3
I0428 19:43:19.595984 25316 net.cpp:408] ip3 <- ip2
I0428 19:43:19.595988 25316 net.cpp:382] ip3 -> ip3
I0428 19:43:19.596159 25316 net.cpp:124] Setting up ip3
I0428 19:43:19.596166 25316 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:19.596169 25316 net.cpp:139] Memory required for data: 1754800
I0428 19:43:19.596177 25316 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:19.596181 25316 net.cpp:86] Creating Layer relu3
I0428 19:43:19.596184 25316 net.cpp:408] relu3 <- ip3
I0428 19:43:19.596189 25316 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:19.597076 25316 net.cpp:124] Setting up relu3
I0428 19:43:19.597090 25316 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:19.597093 25316 net.cpp:139] Memory required for data: 1758800
I0428 19:43:19.597096 25316 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:19.597103 25316 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:19.597122 25316 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:19.597142 25316 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:19.597148 25316 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:19.597213 25316 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:19.597219 25316 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:19.597229 25316 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:19.597231 25316 net.cpp:139] Memory required for data: 1766800
I0428 19:43:19.597234 25316 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:19.597239 25316 net.cpp:86] Creating Layer accuracy
I0428 19:43:19.597241 25316 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:19.597245 25316 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:19.597255 25316 net.cpp:382] accuracy -> accuracy
I0428 19:43:19.597262 25316 net.cpp:124] Setting up accuracy
I0428 19:43:19.597266 25316 net.cpp:131] Top shape: (1)
I0428 19:43:19.597270 25316 net.cpp:139] Memory required for data: 1766804
I0428 19:43:19.597272 25316 layer_factory.hpp:77] Creating layer loss
I0428 19:43:19.597276 25316 net.cpp:86] Creating Layer loss
I0428 19:43:19.597280 25316 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:19.597283 25316 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:19.597288 25316 net.cpp:382] loss -> loss
I0428 19:43:19.597293 25316 layer_factory.hpp:77] Creating layer loss
I0428 19:43:19.597548 25316 net.cpp:124] Setting up loss
I0428 19:43:19.597573 25316 net.cpp:131] Top shape: (1)
I0428 19:43:19.597576 25316 net.cpp:134]     with loss weight 1
I0428 19:43:19.597584 25316 net.cpp:139] Memory required for data: 1766808
I0428 19:43:19.597597 25316 net.cpp:200] loss needs backward computation.
I0428 19:43:19.597601 25316 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:19.597605 25316 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:19.597609 25316 net.cpp:200] relu3 needs backward computation.
I0428 19:43:19.597611 25316 net.cpp:200] ip3 needs backward computation.
I0428 19:43:19.597615 25316 net.cpp:200] relu2 needs backward computation.
I0428 19:43:19.597616 25316 net.cpp:200] ip2 needs backward computation.
I0428 19:43:19.597632 25316 net.cpp:200] relu1 needs backward computation.
I0428 19:43:19.597635 25316 net.cpp:200] ip1 needs backward computation.
I0428 19:43:19.597643 25316 net.cpp:200] pool1 needs backward computation.
I0428 19:43:19.597646 25316 net.cpp:200] conv1 needs backward computation.
I0428 19:43:19.597650 25316 net.cpp:200] pool0 needs backward computation.
I0428 19:43:19.597652 25316 net.cpp:200] conv0 needs backward computation.
I0428 19:43:19.597656 25316 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:19.597661 25316 net.cpp:202] mnist does not need backward computation.
I0428 19:43:19.597662 25316 net.cpp:244] This network produces output accuracy
I0428 19:43:19.597666 25316 net.cpp:244] This network produces output loss
I0428 19:43:19.597678 25316 net.cpp:257] Network initialization done.
I0428 19:43:19.597721 25316 solver.cpp:56] Solver scaffolding done.
I0428 19:43:19.598081 25316 caffe.cpp:248] Starting Optimization
I0428 19:43:19.598088 25316 solver.cpp:273] Solving LeNet
I0428 19:43:19.598098 25316 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:19.599071 25316 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:19.602521 25316 blocking_queue.cpp:49] Waiting for data
I0428 19:43:19.667037 25323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:19.667464 25316 solver.cpp:398]     Test net output #0: accuracy = 0.0847
I0428 19:43:19.667480 25316 solver.cpp:398]     Test net output #1: loss = 2.29994 (* 1 = 2.29994 loss)
I0428 19:43:19.668678 25316 solver.cpp:219] Iteration 0 (0 iter/s, 0.0705548s/100 iters), loss = 2.31816
I0428 19:43:19.668714 25316 solver.cpp:238]     Train net output #0: loss = 2.31816 (* 1 = 2.31816 loss)
I0428 19:43:19.668730 25316 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:19.761158 25316 solver.cpp:219] Iteration 100 (1081.85 iter/s, 0.0924344s/100 iters), loss = 0.933749
I0428 19:43:19.761184 25316 solver.cpp:238]     Train net output #0: loss = 0.933749 (* 1 = 0.933749 loss)
I0428 19:43:19.761191 25316 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:19.844825 25316 solver.cpp:219] Iteration 200 (1195.87 iter/s, 0.0836209s/100 iters), loss = 0.749367
I0428 19:43:19.844848 25316 solver.cpp:238]     Train net output #0: loss = 0.749367 (* 1 = 0.749367 loss)
I0428 19:43:19.844859 25316 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:19.934983 25316 solver.cpp:219] Iteration 300 (1109.63 iter/s, 0.0901202s/100 iters), loss = 0.977911
I0428 19:43:19.935009 25316 solver.cpp:238]     Train net output #0: loss = 0.977911 (* 1 = 0.977911 loss)
I0428 19:43:19.935019 25316 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:20.019909 25316 solver.cpp:219] Iteration 400 (1178.01 iter/s, 0.0848886s/100 iters), loss = 0.484707
I0428 19:43:20.019969 25316 solver.cpp:238]     Train net output #0: loss = 0.484707 (* 1 = 0.484707 loss)
I0428 19:43:20.019978 25316 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:20.107810 25316 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:20.179831 25323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:20.180289 25316 solver.cpp:398]     Test net output #0: accuracy = 0.8433
I0428 19:43:20.180312 25316 solver.cpp:398]     Test net output #1: loss = 0.440839 (* 1 = 0.440839 loss)
I0428 19:43:20.181242 25316 solver.cpp:219] Iteration 500 (620.111 iter/s, 0.161262s/100 iters), loss = 0.476231
I0428 19:43:20.181268 25316 solver.cpp:238]     Train net output #0: loss = 0.476231 (* 1 = 0.476231 loss)
I0428 19:43:20.181290 25316 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:20.273761 25316 solver.cpp:219] Iteration 600 (1081.31 iter/s, 0.0924805s/100 iters), loss = 0.320217
I0428 19:43:20.273784 25316 solver.cpp:238]     Train net output #0: loss = 0.320217 (* 1 = 0.320217 loss)
I0428 19:43:20.273790 25316 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:20.358996 25316 solver.cpp:219] Iteration 700 (1173.75 iter/s, 0.0851967s/100 iters), loss = 0.400818
I0428 19:43:20.359019 25316 solver.cpp:238]     Train net output #0: loss = 0.400818 (* 1 = 0.400818 loss)
I0428 19:43:20.359040 25316 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:20.440775 25316 solver.cpp:219] Iteration 800 (1223.33 iter/s, 0.0817439s/100 iters), loss = 0.531731
I0428 19:43:20.440824 25316 solver.cpp:238]     Train net output #0: loss = 0.531731 (* 1 = 0.531731 loss)
I0428 19:43:20.440832 25316 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:20.521706 25316 solver.cpp:219] Iteration 900 (1236.17 iter/s, 0.0808952s/100 iters), loss = 0.457633
I0428 19:43:20.521730 25316 solver.cpp:238]     Train net output #0: loss = 0.457633 (* 1 = 0.457633 loss)
I0428 19:43:20.521751 25316 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:20.553184 25322 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:20.611117 25316 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:20.612010 25316 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:20.612504 25316 solver.cpp:311] Iteration 1000, loss = 0.420436
I0428 19:43:20.612522 25316 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:20.687551 25323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:20.687989 25316 solver.cpp:398]     Test net output #0: accuracy = 0.8685
I0428 19:43:20.688007 25316 solver.cpp:398]     Test net output #1: loss = 0.353605 (* 1 = 0.353605 loss)
I0428 19:43:20.688012 25316 solver.cpp:316] Optimization Done.
I0428 19:43:20.688015 25316 caffe.cpp:259] Optimization Done.
