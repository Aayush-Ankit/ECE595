I0428 19:28:07.754775 21542 caffe.cpp:218] Using GPUs 0
I0428 19:28:07.794334 21542 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:08.265532 21542 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test15.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:08.265694 21542 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test15.prototxt
I0428 19:28:08.265943 21542 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:08.265954 21542 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:08.266026 21542 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:08.266075 21542 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:08.266160 21542 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:08.266180 21542 net.cpp:86] Creating Layer mnist
I0428 19:28:08.266185 21542 net.cpp:382] mnist -> data
I0428 19:28:08.266204 21542 net.cpp:382] mnist -> label
I0428 19:28:08.267233 21542 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:08.269598 21542 net.cpp:124] Setting up mnist
I0428 19:28:08.269628 21542 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:08.269634 21542 net.cpp:131] Top shape: 64 (64)
I0428 19:28:08.269636 21542 net.cpp:139] Memory required for data: 200960
I0428 19:28:08.269642 21542 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:08.269650 21542 net.cpp:86] Creating Layer ip1
I0428 19:28:08.269655 21542 net.cpp:408] ip1 <- data
I0428 19:28:08.269665 21542 net.cpp:382] ip1 -> ip1
I0428 19:28:08.270956 21542 net.cpp:124] Setting up ip1
I0428 19:28:08.270968 21542 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:08.270972 21542 net.cpp:139] Memory required for data: 203520
I0428 19:28:08.270985 21542 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:08.270993 21542 net.cpp:86] Creating Layer relu1
I0428 19:28:08.270997 21542 net.cpp:408] relu1 <- ip1
I0428 19:28:08.271001 21542 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:08.499050 21542 net.cpp:124] Setting up relu1
I0428 19:28:08.499094 21542 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:08.499097 21542 net.cpp:139] Memory required for data: 206080
I0428 19:28:08.499104 21542 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:08.499116 21542 net.cpp:86] Creating Layer ip2
I0428 19:28:08.499156 21542 net.cpp:408] ip2 <- ip1
I0428 19:28:08.499164 21542 net.cpp:382] ip2 -> ip2
I0428 19:28:08.499284 21542 net.cpp:124] Setting up ip2
I0428 19:28:08.499306 21542 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:08.499310 21542 net.cpp:139] Memory required for data: 212480
I0428 19:28:08.499320 21542 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:08.499326 21542 net.cpp:86] Creating Layer relu2
I0428 19:28:08.499330 21542 net.cpp:408] relu2 <- ip2
I0428 19:28:08.499335 21542 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:08.500144 21542 net.cpp:124] Setting up relu2
I0428 19:28:08.500172 21542 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:08.500176 21542 net.cpp:139] Memory required for data: 218880
I0428 19:28:08.500180 21542 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:08.500187 21542 net.cpp:86] Creating Layer ip3
I0428 19:28:08.500190 21542 net.cpp:408] ip3 <- ip2
I0428 19:28:08.500196 21542 net.cpp:382] ip3 -> ip3
I0428 19:28:08.500315 21542 net.cpp:124] Setting up ip3
I0428 19:28:08.500324 21542 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:08.500326 21542 net.cpp:139] Memory required for data: 221440
I0428 19:28:08.500335 21542 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:08.500340 21542 net.cpp:86] Creating Layer relu3
I0428 19:28:08.500344 21542 net.cpp:408] relu3 <- ip3
I0428 19:28:08.500349 21542 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:08.500511 21542 net.cpp:124] Setting up relu3
I0428 19:28:08.500520 21542 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:08.500524 21542 net.cpp:139] Memory required for data: 224000
I0428 19:28:08.500526 21542 layer_factory.hpp:77] Creating layer loss
I0428 19:28:08.500533 21542 net.cpp:86] Creating Layer loss
I0428 19:28:08.500536 21542 net.cpp:408] loss <- ip3
I0428 19:28:08.500540 21542 net.cpp:408] loss <- label
I0428 19:28:08.500545 21542 net.cpp:382] loss -> loss
I0428 19:28:08.500566 21542 layer_factory.hpp:77] Creating layer loss
I0428 19:28:08.501758 21542 net.cpp:124] Setting up loss
I0428 19:28:08.501771 21542 net.cpp:131] Top shape: (1)
I0428 19:28:08.501791 21542 net.cpp:134]     with loss weight 1
I0428 19:28:08.501806 21542 net.cpp:139] Memory required for data: 224004
I0428 19:28:08.501809 21542 net.cpp:200] loss needs backward computation.
I0428 19:28:08.501813 21542 net.cpp:200] relu3 needs backward computation.
I0428 19:28:08.501816 21542 net.cpp:200] ip3 needs backward computation.
I0428 19:28:08.501819 21542 net.cpp:200] relu2 needs backward computation.
I0428 19:28:08.501822 21542 net.cpp:200] ip2 needs backward computation.
I0428 19:28:08.501826 21542 net.cpp:200] relu1 needs backward computation.
I0428 19:28:08.501827 21542 net.cpp:200] ip1 needs backward computation.
I0428 19:28:08.501832 21542 net.cpp:202] mnist does not need backward computation.
I0428 19:28:08.501834 21542 net.cpp:244] This network produces output loss
I0428 19:28:08.501842 21542 net.cpp:257] Network initialization done.
I0428 19:28:08.502094 21542 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test15.prototxt
I0428 19:28:08.502117 21542 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:08.502199 21542 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:08.502285 21542 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:08.502331 21542 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:08.502346 21542 net.cpp:86] Creating Layer mnist
I0428 19:28:08.502351 21542 net.cpp:382] mnist -> data
I0428 19:28:08.502358 21542 net.cpp:382] mnist -> label
I0428 19:28:08.502446 21542 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:08.504567 21542 net.cpp:124] Setting up mnist
I0428 19:28:08.504591 21542 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:08.504596 21542 net.cpp:131] Top shape: 100 (100)
I0428 19:28:08.504601 21542 net.cpp:139] Memory required for data: 314000
I0428 19:28:08.504603 21542 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:08.504647 21542 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:08.504650 21542 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:08.504655 21542 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:08.504662 21542 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:08.504796 21542 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:08.504802 21542 net.cpp:131] Top shape: 100 (100)
I0428 19:28:08.504806 21542 net.cpp:131] Top shape: 100 (100)
I0428 19:28:08.504818 21542 net.cpp:139] Memory required for data: 314800
I0428 19:28:08.504838 21542 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:08.504845 21542 net.cpp:86] Creating Layer ip1
I0428 19:28:08.504849 21542 net.cpp:408] ip1 <- data
I0428 19:28:08.504855 21542 net.cpp:382] ip1 -> ip1
I0428 19:28:08.505072 21542 net.cpp:124] Setting up ip1
I0428 19:28:08.505081 21542 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:08.505084 21542 net.cpp:139] Memory required for data: 318800
I0428 19:28:08.505094 21542 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:08.505098 21542 net.cpp:86] Creating Layer relu1
I0428 19:28:08.505102 21542 net.cpp:408] relu1 <- ip1
I0428 19:28:08.505106 21542 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:08.506081 21542 net.cpp:124] Setting up relu1
I0428 19:28:08.506093 21542 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:08.506096 21542 net.cpp:139] Memory required for data: 322800
I0428 19:28:08.506100 21542 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:08.506108 21542 net.cpp:86] Creating Layer ip2
I0428 19:28:08.506110 21542 net.cpp:408] ip2 <- ip1
I0428 19:28:08.506115 21542 net.cpp:382] ip2 -> ip2
I0428 19:28:08.506227 21542 net.cpp:124] Setting up ip2
I0428 19:28:08.506233 21542 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:08.506237 21542 net.cpp:139] Memory required for data: 332800
I0428 19:28:08.506258 21542 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:08.506263 21542 net.cpp:86] Creating Layer relu2
I0428 19:28:08.506266 21542 net.cpp:408] relu2 <- ip2
I0428 19:28:08.506270 21542 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:08.506422 21542 net.cpp:124] Setting up relu2
I0428 19:28:08.506430 21542 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:08.506433 21542 net.cpp:139] Memory required for data: 342800
I0428 19:28:08.506436 21542 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:08.506440 21542 net.cpp:86] Creating Layer ip3
I0428 19:28:08.506443 21542 net.cpp:408] ip3 <- ip2
I0428 19:28:08.506448 21542 net.cpp:382] ip3 -> ip3
I0428 19:28:08.506541 21542 net.cpp:124] Setting up ip3
I0428 19:28:08.506548 21542 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:08.506551 21542 net.cpp:139] Memory required for data: 346800
I0428 19:28:08.506557 21542 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:08.506562 21542 net.cpp:86] Creating Layer relu3
I0428 19:28:08.506566 21542 net.cpp:408] relu3 <- ip3
I0428 19:28:08.506568 21542 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:08.506719 21542 net.cpp:124] Setting up relu3
I0428 19:28:08.506727 21542 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:08.506731 21542 net.cpp:139] Memory required for data: 350800
I0428 19:28:08.506732 21542 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:08.506738 21542 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:08.506742 21542 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:08.506745 21542 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:08.506750 21542 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:08.506781 21542 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:08.506786 21542 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:08.506789 21542 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:08.506793 21542 net.cpp:139] Memory required for data: 358800
I0428 19:28:08.506795 21542 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:08.506799 21542 net.cpp:86] Creating Layer accuracy
I0428 19:28:08.506803 21542 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:08.506806 21542 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:08.506810 21542 net.cpp:382] accuracy -> accuracy
I0428 19:28:08.506816 21542 net.cpp:124] Setting up accuracy
I0428 19:28:08.506819 21542 net.cpp:131] Top shape: (1)
I0428 19:28:08.506822 21542 net.cpp:139] Memory required for data: 358804
I0428 19:28:08.506824 21542 layer_factory.hpp:77] Creating layer loss
I0428 19:28:08.506829 21542 net.cpp:86] Creating Layer loss
I0428 19:28:08.506831 21542 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:08.506834 21542 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:08.506839 21542 net.cpp:382] loss -> loss
I0428 19:28:08.506844 21542 layer_factory.hpp:77] Creating layer loss
I0428 19:28:08.507083 21542 net.cpp:124] Setting up loss
I0428 19:28:08.507092 21542 net.cpp:131] Top shape: (1)
I0428 19:28:08.507095 21542 net.cpp:134]     with loss weight 1
I0428 19:28:08.507102 21542 net.cpp:139] Memory required for data: 358808
I0428 19:28:08.507104 21542 net.cpp:200] loss needs backward computation.
I0428 19:28:08.507123 21542 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:08.507128 21542 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:08.507130 21542 net.cpp:200] relu3 needs backward computation.
I0428 19:28:08.507133 21542 net.cpp:200] ip3 needs backward computation.
I0428 19:28:08.507136 21542 net.cpp:200] relu2 needs backward computation.
I0428 19:28:08.507139 21542 net.cpp:200] ip2 needs backward computation.
I0428 19:28:08.507143 21542 net.cpp:200] relu1 needs backward computation.
I0428 19:28:08.507144 21542 net.cpp:200] ip1 needs backward computation.
I0428 19:28:08.507148 21542 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:08.507153 21542 net.cpp:202] mnist does not need backward computation.
I0428 19:28:08.507155 21542 net.cpp:244] This network produces output accuracy
I0428 19:28:08.507159 21542 net.cpp:244] This network produces output loss
I0428 19:28:08.507167 21542 net.cpp:257] Network initialization done.
I0428 19:28:08.507199 21542 solver.cpp:56] Solver scaffolding done.
I0428 19:28:08.507513 21542 caffe.cpp:248] Starting Optimization
I0428 19:28:08.507520 21542 solver.cpp:273] Solving LeNet
I0428 19:28:08.507524 21542 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:08.507640 21542 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:08.507797 21542 blocking_queue.cpp:49] Waiting for data
I0428 19:28:08.587494 21549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:08.587998 21542 solver.cpp:398]     Test net output #0: accuracy = 0.1355
I0428 19:28:08.588028 21542 solver.cpp:398]     Test net output #1: loss = 2.29644 (* 1 = 2.29644 loss)
I0428 19:28:08.588821 21542 solver.cpp:219] Iteration 0 (-5.5681e-31 iter/s, 0.0812575s/100 iters), loss = 2.28113
I0428 19:28:08.588855 21542 solver.cpp:238]     Train net output #0: loss = 2.28113 (* 1 = 2.28113 loss)
I0428 19:28:08.588871 21542 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:08.648046 21542 solver.cpp:219] Iteration 100 (1689.64 iter/s, 0.0591841s/100 iters), loss = 0.9235
I0428 19:28:08.648077 21542 solver.cpp:238]     Train net output #0: loss = 0.9235 (* 1 = 0.9235 loss)
I0428 19:28:08.648085 21542 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:08.696591 21542 solver.cpp:219] Iteration 200 (2061.56 iter/s, 0.0485069s/100 iters), loss = 0.428041
I0428 19:28:08.696620 21542 solver.cpp:238]     Train net output #0: loss = 0.428041 (* 1 = 0.428041 loss)
I0428 19:28:08.696630 21542 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:08.740540 21542 solver.cpp:219] Iteration 300 (2277.32 iter/s, 0.0439113s/100 iters), loss = 0.436861
I0428 19:28:08.740561 21542 solver.cpp:238]     Train net output #0: loss = 0.436861 (* 1 = 0.436861 loss)
I0428 19:28:08.740581 21542 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:08.785684 21542 solver.cpp:219] Iteration 400 (2216.49 iter/s, 0.0451164s/100 iters), loss = 0.425577
I0428 19:28:08.785707 21542 solver.cpp:238]     Train net output #0: loss = 0.425577 (* 1 = 0.425577 loss)
I0428 19:28:08.785713 21542 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:08.828658 21542 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:08.905688 21549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:08.906098 21542 solver.cpp:398]     Test net output #0: accuracy = 0.8859
I0428 19:28:08.906121 21542 solver.cpp:398]     Test net output #1: loss = 0.393011 (* 1 = 0.393011 loss)
I0428 19:28:08.906574 21542 solver.cpp:219] Iteration 500 (827.434 iter/s, 0.120856s/100 iters), loss = 0.454487
I0428 19:28:08.906595 21542 solver.cpp:238]     Train net output #0: loss = 0.454487 (* 1 = 0.454487 loss)
I0428 19:28:08.906601 21542 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:08.969537 21542 solver.cpp:219] Iteration 600 (1589.04 iter/s, 0.0629309s/100 iters), loss = 0.32288
I0428 19:28:08.969575 21542 solver.cpp:238]     Train net output #0: loss = 0.32288 (* 1 = 0.32288 loss)
I0428 19:28:08.969586 21542 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:09.022686 21542 solver.cpp:219] Iteration 700 (1883.04 iter/s, 0.0531056s/100 iters), loss = 0.462461
I0428 19:28:09.022716 21542 solver.cpp:238]     Train net output #0: loss = 0.462461 (* 1 = 0.462461 loss)
I0428 19:28:09.022732 21542 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:09.069746 21542 solver.cpp:219] Iteration 800 (2126.57 iter/s, 0.0470241s/100 iters), loss = 0.441312
I0428 19:28:09.069771 21542 solver.cpp:238]     Train net output #0: loss = 0.441312 (* 1 = 0.441312 loss)
I0428 19:28:09.069777 21542 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:09.111766 21542 solver.cpp:219] Iteration 900 (2381.57 iter/s, 0.0419891s/100 iters), loss = 0.418512
I0428 19:28:09.111788 21542 solver.cpp:238]     Train net output #0: loss = 0.418512 (* 1 = 0.418512 loss)
I0428 19:28:09.111793 21542 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:09.126919 21548 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:09.154155 21542 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:09.154820 21542 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:09.155278 21542 solver.cpp:311] Iteration 1000, loss = 0.318789
I0428 19:28:09.155295 21542 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:09.233043 21549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:09.233475 21542 solver.cpp:398]     Test net output #0: accuracy = 0.9038
I0428 19:28:09.233499 21542 solver.cpp:398]     Test net output #1: loss = 0.32529 (* 1 = 0.32529 loss)
I0428 19:28:09.233505 21542 solver.cpp:316] Optimization Done.
I0428 19:28:09.233507 21542 caffe.cpp:259] Optimization Done.
