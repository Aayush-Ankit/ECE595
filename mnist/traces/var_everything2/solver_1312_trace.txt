I0428 20:18:09.848795  1067 caffe.cpp:218] Using GPUs 0
I0428 20:18:09.887111  1067 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:10.401612  1067 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1312.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:10.401748  1067 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1312.prototxt
I0428 20:18:10.402151  1067 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:10.402169  1067 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:10.402273  1067 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:10.402349  1067 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:10.402454  1067 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:10.402478  1067 net.cpp:86] Creating Layer mnist
I0428 20:18:10.402485  1067 net.cpp:382] mnist -> data
I0428 20:18:10.402508  1067 net.cpp:382] mnist -> label
I0428 20:18:10.403614  1067 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:10.406081  1067 net.cpp:124] Setting up mnist
I0428 20:18:10.406098  1067 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:10.406105  1067 net.cpp:131] Top shape: 64 (64)
I0428 20:18:10.406110  1067 net.cpp:139] Memory required for data: 200960
I0428 20:18:10.406116  1067 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:10.406132  1067 net.cpp:86] Creating Layer conv0
I0428 20:18:10.406153  1067 net.cpp:408] conv0 <- data
I0428 20:18:10.406167  1067 net.cpp:382] conv0 -> conv0
I0428 20:18:10.697991  1067 net.cpp:124] Setting up conv0
I0428 20:18:10.698019  1067 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:10.698024  1067 net.cpp:139] Memory required for data: 7573760
I0428 20:18:10.698040  1067 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:10.698055  1067 net.cpp:86] Creating Layer pool0
I0428 20:18:10.698058  1067 net.cpp:408] pool0 <- conv0
I0428 20:18:10.698065  1067 net.cpp:382] pool0 -> pool0
I0428 20:18:10.698115  1067 net.cpp:124] Setting up pool0
I0428 20:18:10.698123  1067 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:10.698127  1067 net.cpp:139] Memory required for data: 9416960
I0428 20:18:10.698129  1067 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:10.698141  1067 net.cpp:86] Creating Layer conv1
I0428 20:18:10.698144  1067 net.cpp:408] conv1 <- pool0
I0428 20:18:10.698149  1067 net.cpp:382] conv1 -> conv1
I0428 20:18:10.701081  1067 net.cpp:124] Setting up conv1
I0428 20:18:10.701097  1067 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:10.701102  1067 net.cpp:139] Memory required for data: 9580800
I0428 20:18:10.701110  1067 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:10.701118  1067 net.cpp:86] Creating Layer pool1
I0428 20:18:10.701123  1067 net.cpp:408] pool1 <- conv1
I0428 20:18:10.701128  1067 net.cpp:382] pool1 -> pool1
I0428 20:18:10.701169  1067 net.cpp:124] Setting up pool1
I0428 20:18:10.701175  1067 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:10.701179  1067 net.cpp:139] Memory required for data: 9621760
I0428 20:18:10.701181  1067 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:10.701189  1067 net.cpp:86] Creating Layer ip1
I0428 20:18:10.701191  1067 net.cpp:408] ip1 <- pool1
I0428 20:18:10.701197  1067 net.cpp:382] ip1 -> ip1
I0428 20:18:10.701330  1067 net.cpp:124] Setting up ip1
I0428 20:18:10.701339  1067 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:10.701341  1067 net.cpp:139] Memory required for data: 9628160
I0428 20:18:10.701349  1067 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:10.701356  1067 net.cpp:86] Creating Layer relu1
I0428 20:18:10.701359  1067 net.cpp:408] relu1 <- ip1
I0428 20:18:10.701365  1067 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:10.701555  1067 net.cpp:124] Setting up relu1
I0428 20:18:10.701565  1067 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:10.701568  1067 net.cpp:139] Memory required for data: 9634560
I0428 20:18:10.701571  1067 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:10.701578  1067 net.cpp:86] Creating Layer ip2
I0428 20:18:10.701581  1067 net.cpp:408] ip2 <- ip1
I0428 20:18:10.701587  1067 net.cpp:382] ip2 -> ip2
I0428 20:18:10.701696  1067 net.cpp:124] Setting up ip2
I0428 20:18:10.701704  1067 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:10.701706  1067 net.cpp:139] Memory required for data: 9640960
I0428 20:18:10.701712  1067 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:10.701719  1067 net.cpp:86] Creating Layer relu2
I0428 20:18:10.701721  1067 net.cpp:408] relu2 <- ip2
I0428 20:18:10.701727  1067 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:10.702497  1067 net.cpp:124] Setting up relu2
I0428 20:18:10.702509  1067 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:10.702512  1067 net.cpp:139] Memory required for data: 9647360
I0428 20:18:10.702517  1067 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:10.702524  1067 net.cpp:86] Creating Layer ip3
I0428 20:18:10.702528  1067 net.cpp:408] ip3 <- ip2
I0428 20:18:10.702533  1067 net.cpp:382] ip3 -> ip3
I0428 20:18:10.702651  1067 net.cpp:124] Setting up ip3
I0428 20:18:10.702658  1067 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:10.702661  1067 net.cpp:139] Memory required for data: 9649920
I0428 20:18:10.702671  1067 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:10.702677  1067 net.cpp:86] Creating Layer relu3
I0428 20:18:10.702679  1067 net.cpp:408] relu3 <- ip3
I0428 20:18:10.702683  1067 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:10.702872  1067 net.cpp:124] Setting up relu3
I0428 20:18:10.702883  1067 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:10.702886  1067 net.cpp:139] Memory required for data: 9652480
I0428 20:18:10.702889  1067 layer_factory.hpp:77] Creating layer loss
I0428 20:18:10.702895  1067 net.cpp:86] Creating Layer loss
I0428 20:18:10.702898  1067 net.cpp:408] loss <- ip3
I0428 20:18:10.702903  1067 net.cpp:408] loss <- label
I0428 20:18:10.702908  1067 net.cpp:382] loss -> loss
I0428 20:18:10.702926  1067 layer_factory.hpp:77] Creating layer loss
I0428 20:18:10.703198  1067 net.cpp:124] Setting up loss
I0428 20:18:10.703209  1067 net.cpp:131] Top shape: (1)
I0428 20:18:10.703212  1067 net.cpp:134]     with loss weight 1
I0428 20:18:10.703227  1067 net.cpp:139] Memory required for data: 9652484
I0428 20:18:10.703241  1067 net.cpp:200] loss needs backward computation.
I0428 20:18:10.703245  1067 net.cpp:200] relu3 needs backward computation.
I0428 20:18:10.703248  1067 net.cpp:200] ip3 needs backward computation.
I0428 20:18:10.703250  1067 net.cpp:200] relu2 needs backward computation.
I0428 20:18:10.703253  1067 net.cpp:200] ip2 needs backward computation.
I0428 20:18:10.703256  1067 net.cpp:200] relu1 needs backward computation.
I0428 20:18:10.703259  1067 net.cpp:200] ip1 needs backward computation.
I0428 20:18:10.703263  1067 net.cpp:200] pool1 needs backward computation.
I0428 20:18:10.703265  1067 net.cpp:200] conv1 needs backward computation.
I0428 20:18:10.703269  1067 net.cpp:200] pool0 needs backward computation.
I0428 20:18:10.703271  1067 net.cpp:200] conv0 needs backward computation.
I0428 20:18:10.703274  1067 net.cpp:202] mnist does not need backward computation.
I0428 20:18:10.703277  1067 net.cpp:244] This network produces output loss
I0428 20:18:10.703287  1067 net.cpp:257] Network initialization done.
I0428 20:18:10.703634  1067 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1312.prototxt
I0428 20:18:10.703665  1067 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:10.703765  1067 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:10.703855  1067 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:10.703900  1067 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:10.703914  1067 net.cpp:86] Creating Layer mnist
I0428 20:18:10.703920  1067 net.cpp:382] mnist -> data
I0428 20:18:10.703927  1067 net.cpp:382] mnist -> label
I0428 20:18:10.704020  1067 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:10.706089  1067 net.cpp:124] Setting up mnist
I0428 20:18:10.706104  1067 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:10.706125  1067 net.cpp:131] Top shape: 100 (100)
I0428 20:18:10.706128  1067 net.cpp:139] Memory required for data: 314000
I0428 20:18:10.706132  1067 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:10.706140  1067 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:10.706142  1067 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:10.706161  1067 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:10.706168  1067 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:10.706215  1067 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:10.706223  1067 net.cpp:131] Top shape: 100 (100)
I0428 20:18:10.706226  1067 net.cpp:131] Top shape: 100 (100)
I0428 20:18:10.706228  1067 net.cpp:139] Memory required for data: 314800
I0428 20:18:10.706233  1067 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:10.706252  1067 net.cpp:86] Creating Layer conv0
I0428 20:18:10.706256  1067 net.cpp:408] conv0 <- data
I0428 20:18:10.706261  1067 net.cpp:382] conv0 -> conv0
I0428 20:18:10.708106  1067 net.cpp:124] Setting up conv0
I0428 20:18:10.708137  1067 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:10.708139  1067 net.cpp:139] Memory required for data: 11834800
I0428 20:18:10.708149  1067 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:10.708156  1067 net.cpp:86] Creating Layer pool0
I0428 20:18:10.708160  1067 net.cpp:408] pool0 <- conv0
I0428 20:18:10.708166  1067 net.cpp:382] pool0 -> pool0
I0428 20:18:10.708207  1067 net.cpp:124] Setting up pool0
I0428 20:18:10.708214  1067 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:10.708216  1067 net.cpp:139] Memory required for data: 14714800
I0428 20:18:10.708220  1067 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:10.708230  1067 net.cpp:86] Creating Layer conv1
I0428 20:18:10.708233  1067 net.cpp:408] conv1 <- pool0
I0428 20:18:10.708240  1067 net.cpp:382] conv1 -> conv1
I0428 20:18:10.709990  1067 net.cpp:124] Setting up conv1
I0428 20:18:10.710005  1067 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:10.710008  1067 net.cpp:139] Memory required for data: 14970800
I0428 20:18:10.710019  1067 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:10.710026  1067 net.cpp:86] Creating Layer pool1
I0428 20:18:10.710029  1067 net.cpp:408] pool1 <- conv1
I0428 20:18:10.710034  1067 net.cpp:382] pool1 -> pool1
I0428 20:18:10.710072  1067 net.cpp:124] Setting up pool1
I0428 20:18:10.710078  1067 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:10.710079  1067 net.cpp:139] Memory required for data: 15034800
I0428 20:18:10.710083  1067 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:10.710089  1067 net.cpp:86] Creating Layer ip1
I0428 20:18:10.710098  1067 net.cpp:408] ip1 <- pool1
I0428 20:18:10.710105  1067 net.cpp:382] ip1 -> ip1
I0428 20:18:10.710230  1067 net.cpp:124] Setting up ip1
I0428 20:18:10.710238  1067 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:10.710252  1067 net.cpp:139] Memory required for data: 15044800
I0428 20:18:10.710259  1067 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:10.710266  1067 net.cpp:86] Creating Layer relu1
I0428 20:18:10.710269  1067 net.cpp:408] relu1 <- ip1
I0428 20:18:10.710279  1067 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:10.710471  1067 net.cpp:124] Setting up relu1
I0428 20:18:10.710480  1067 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:10.710489  1067 net.cpp:139] Memory required for data: 15054800
I0428 20:18:10.710491  1067 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:10.710500  1067 net.cpp:86] Creating Layer ip2
I0428 20:18:10.710503  1067 net.cpp:408] ip2 <- ip1
I0428 20:18:10.710507  1067 net.cpp:382] ip2 -> ip2
I0428 20:18:10.710613  1067 net.cpp:124] Setting up ip2
I0428 20:18:10.710621  1067 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:10.710624  1067 net.cpp:139] Memory required for data: 15064800
I0428 20:18:10.710630  1067 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:10.710635  1067 net.cpp:86] Creating Layer relu2
I0428 20:18:10.710638  1067 net.cpp:408] relu2 <- ip2
I0428 20:18:10.710644  1067 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:10.710832  1067 net.cpp:124] Setting up relu2
I0428 20:18:10.710841  1067 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:10.710844  1067 net.cpp:139] Memory required for data: 15074800
I0428 20:18:10.710847  1067 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:10.710853  1067 net.cpp:86] Creating Layer ip3
I0428 20:18:10.710856  1067 net.cpp:408] ip3 <- ip2
I0428 20:18:10.710862  1067 net.cpp:382] ip3 -> ip3
I0428 20:18:10.710983  1067 net.cpp:124] Setting up ip3
I0428 20:18:10.710991  1067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:10.710994  1067 net.cpp:139] Memory required for data: 15078800
I0428 20:18:10.711002  1067 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:10.711006  1067 net.cpp:86] Creating Layer relu3
I0428 20:18:10.711009  1067 net.cpp:408] relu3 <- ip3
I0428 20:18:10.711014  1067 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:10.711805  1067 net.cpp:124] Setting up relu3
I0428 20:18:10.711817  1067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:10.711820  1067 net.cpp:139] Memory required for data: 15082800
I0428 20:18:10.711823  1067 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:10.711830  1067 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:10.711834  1067 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:10.711840  1067 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:10.711846  1067 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:10.711884  1067 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:10.711889  1067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:10.711894  1067 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:10.711895  1067 net.cpp:139] Memory required for data: 15090800
I0428 20:18:10.711899  1067 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:10.711906  1067 net.cpp:86] Creating Layer accuracy
I0428 20:18:10.711915  1067 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:10.711920  1067 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:10.711925  1067 net.cpp:382] accuracy -> accuracy
I0428 20:18:10.711931  1067 net.cpp:124] Setting up accuracy
I0428 20:18:10.711935  1067 net.cpp:131] Top shape: (1)
I0428 20:18:10.711938  1067 net.cpp:139] Memory required for data: 15090804
I0428 20:18:10.711941  1067 layer_factory.hpp:77] Creating layer loss
I0428 20:18:10.711946  1067 net.cpp:86] Creating Layer loss
I0428 20:18:10.711951  1067 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:10.711953  1067 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:10.711957  1067 net.cpp:382] loss -> loss
I0428 20:18:10.711963  1067 layer_factory.hpp:77] Creating layer loss
I0428 20:18:10.712211  1067 net.cpp:124] Setting up loss
I0428 20:18:10.712220  1067 net.cpp:131] Top shape: (1)
I0428 20:18:10.712224  1067 net.cpp:134]     with loss weight 1
I0428 20:18:10.712239  1067 net.cpp:139] Memory required for data: 15090808
I0428 20:18:10.712242  1067 net.cpp:200] loss needs backward computation.
I0428 20:18:10.712246  1067 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:10.712249  1067 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:10.712252  1067 net.cpp:200] relu3 needs backward computation.
I0428 20:18:10.712256  1067 net.cpp:200] ip3 needs backward computation.
I0428 20:18:10.712260  1067 net.cpp:200] relu2 needs backward computation.
I0428 20:18:10.712261  1067 net.cpp:200] ip2 needs backward computation.
I0428 20:18:10.712265  1067 net.cpp:200] relu1 needs backward computation.
I0428 20:18:10.712267  1067 net.cpp:200] ip1 needs backward computation.
I0428 20:18:10.712270  1067 net.cpp:200] pool1 needs backward computation.
I0428 20:18:10.712273  1067 net.cpp:200] conv1 needs backward computation.
I0428 20:18:10.712276  1067 net.cpp:200] pool0 needs backward computation.
I0428 20:18:10.712280  1067 net.cpp:200] conv0 needs backward computation.
I0428 20:18:10.712283  1067 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:10.712293  1067 net.cpp:202] mnist does not need backward computation.
I0428 20:18:10.712296  1067 net.cpp:244] This network produces output accuracy
I0428 20:18:10.712299  1067 net.cpp:244] This network produces output loss
I0428 20:18:10.712311  1067 net.cpp:257] Network initialization done.
I0428 20:18:10.712353  1067 solver.cpp:56] Solver scaffolding done.
I0428 20:18:10.712709  1067 caffe.cpp:248] Starting Optimization
I0428 20:18:10.712715  1067 solver.cpp:273] Solving LeNet
I0428 20:18:10.712718  1067 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:10.713593  1067 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:10.719954  1067 blocking_queue.cpp:49] Waiting for data
I0428 20:18:10.788297  1075 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:10.789038  1067 solver.cpp:398]     Test net output #0: accuracy = 0.1222
I0428 20:18:10.789072  1067 solver.cpp:398]     Test net output #1: loss = 2.30914 (* 1 = 2.30914 loss)
I0428 20:18:10.793393  1067 solver.cpp:219] Iteration 0 (-1.00753e-42 iter/s, 0.080639s/100 iters), loss = 2.30604
I0428 20:18:10.793418  1067 solver.cpp:238]     Train net output #0: loss = 2.30604 (* 1 = 2.30604 loss)
I0428 20:18:10.793429  1067 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:10.910727  1067 solver.cpp:219] Iteration 100 (852.551 iter/s, 0.117295s/100 iters), loss = 0.555444
I0428 20:18:10.910766  1067 solver.cpp:238]     Train net output #0: loss = 0.555444 (* 1 = 0.555444 loss)
I0428 20:18:10.910773  1067 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:11.027134  1067 solver.cpp:219] Iteration 200 (859.31 iter/s, 0.116372s/100 iters), loss = 0.322993
I0428 20:18:11.027158  1067 solver.cpp:238]     Train net output #0: loss = 0.322993 (* 1 = 0.322993 loss)
I0428 20:18:11.027163  1067 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:11.144033  1067 solver.cpp:219] Iteration 300 (855.688 iter/s, 0.116865s/100 iters), loss = 0.445005
I0428 20:18:11.144088  1067 solver.cpp:238]     Train net output #0: loss = 0.445005 (* 1 = 0.445005 loss)
I0428 20:18:11.144094  1067 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:11.261042  1067 solver.cpp:219] Iteration 400 (855.006 iter/s, 0.116958s/100 iters), loss = 0.304763
I0428 20:18:11.261081  1067 solver.cpp:238]     Train net output #0: loss = 0.304763 (* 1 = 0.304763 loss)
I0428 20:18:11.261087  1067 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:11.375738  1067 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:11.440030  1075 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:11.442327  1067 solver.cpp:398]     Test net output #0: accuracy = 0.8625
I0428 20:18:11.442343  1067 solver.cpp:398]     Test net output #1: loss = 0.373431 (* 1 = 0.373431 loss)
I0428 20:18:11.443449  1067 solver.cpp:219] Iteration 500 (548.381 iter/s, 0.182355s/100 iters), loss = 0.351227
I0428 20:18:11.443501  1067 solver.cpp:238]     Train net output #0: loss = 0.351227 (* 1 = 0.351227 loss)
I0428 20:18:11.443508  1067 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:11.560788  1067 solver.cpp:219] Iteration 600 (852.573 iter/s, 0.117292s/100 iters), loss = 0.401956
I0428 20:18:11.560817  1067 solver.cpp:238]     Train net output #0: loss = 0.401956 (* 1 = 0.401956 loss)
I0428 20:18:11.560823  1067 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:11.680207  1067 solver.cpp:219] Iteration 700 (837.641 iter/s, 0.119383s/100 iters), loss = 0.398057
I0428 20:18:11.680233  1067 solver.cpp:238]     Train net output #0: loss = 0.398057 (* 1 = 0.398057 loss)
I0428 20:18:11.680239  1067 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:11.801090  1067 solver.cpp:219] Iteration 800 (827.505 iter/s, 0.120845s/100 iters), loss = 0.713149
I0428 20:18:11.801128  1067 solver.cpp:238]     Train net output #0: loss = 0.713149 (* 1 = 0.713149 loss)
I0428 20:18:11.801136  1067 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:11.918618  1067 solver.cpp:219] Iteration 900 (851.109 iter/s, 0.117494s/100 iters), loss = 0.524449
I0428 20:18:11.918659  1067 solver.cpp:238]     Train net output #0: loss = 0.524449 (* 1 = 0.524449 loss)
I0428 20:18:11.918665  1067 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:11.957469  1074 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:12.035485  1067 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:12.036598  1067 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:12.037405  1067 solver.cpp:311] Iteration 1000, loss = 0.365716
I0428 20:18:12.037420  1067 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:12.100667  1075 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:12.103040  1067 solver.cpp:398]     Test net output #0: accuracy = 0.8792
I0428 20:18:12.103056  1067 solver.cpp:398]     Test net output #1: loss = 0.311419 (* 1 = 0.311419 loss)
I0428 20:18:12.103078  1067 solver.cpp:316] Optimization Done.
I0428 20:18:12.103080  1067 caffe.cpp:259] Optimization Done.
