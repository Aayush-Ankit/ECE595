I0428 19:56:50.641347 28533 caffe.cpp:218] Using GPUs 0
I0428 19:56:50.684408 28533 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:51.285737 28533 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test771.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:51.285914 28533 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test771.prototxt
I0428 19:56:51.286505 28533 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:51.286532 28533 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:51.286679 28533 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:51.286787 28533 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:51.286909 28533 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:51.286941 28533 net.cpp:86] Creating Layer mnist
I0428 19:56:51.286953 28533 net.cpp:382] mnist -> data
I0428 19:56:51.286981 28533 net.cpp:382] mnist -> label
I0428 19:56:51.288390 28533 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:51.291599 28533 net.cpp:124] Setting up mnist
I0428 19:56:51.291622 28533 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:51.291631 28533 net.cpp:131] Top shape: 64 (64)
I0428 19:56:51.291637 28533 net.cpp:139] Memory required for data: 200960
I0428 19:56:51.291646 28533 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:51.291668 28533 net.cpp:86] Creating Layer conv0
I0428 19:56:51.291694 28533 net.cpp:408] conv0 <- data
I0428 19:56:51.291712 28533 net.cpp:382] conv0 -> conv0
I0428 19:56:51.615648 28533 net.cpp:124] Setting up conv0
I0428 19:56:51.615689 28533 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:51.615695 28533 net.cpp:139] Memory required for data: 1675520
I0428 19:56:51.615731 28533 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:51.615762 28533 net.cpp:86] Creating Layer pool0
I0428 19:56:51.615768 28533 net.cpp:408] pool0 <- conv0
I0428 19:56:51.615777 28533 net.cpp:382] pool0 -> pool0
I0428 19:56:51.615836 28533 net.cpp:124] Setting up pool0
I0428 19:56:51.615847 28533 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:51.615852 28533 net.cpp:139] Memory required for data: 2044160
I0428 19:56:51.615857 28533 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:51.615872 28533 net.cpp:86] Creating Layer conv1
I0428 19:56:51.615877 28533 net.cpp:408] conv1 <- pool0
I0428 19:56:51.615885 28533 net.cpp:382] conv1 -> conv1
I0428 19:56:51.618577 28533 net.cpp:124] Setting up conv1
I0428 19:56:51.618594 28533 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:51.618599 28533 net.cpp:139] Memory required for data: 2076928
I0428 19:56:51.618628 28533 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:51.618638 28533 net.cpp:86] Creating Layer pool1
I0428 19:56:51.618643 28533 net.cpp:408] pool1 <- conv1
I0428 19:56:51.618650 28533 net.cpp:382] pool1 -> pool1
I0428 19:56:51.618697 28533 net.cpp:124] Setting up pool1
I0428 19:56:51.618708 28533 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:51.618712 28533 net.cpp:139] Memory required for data: 2085120
I0428 19:56:51.618717 28533 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:51.618727 28533 net.cpp:86] Creating Layer ip1
I0428 19:56:51.618732 28533 net.cpp:408] ip1 <- pool1
I0428 19:56:51.618739 28533 net.cpp:382] ip1 -> ip1
I0428 19:56:51.620070 28533 net.cpp:124] Setting up ip1
I0428 19:56:51.620100 28533 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:51.620105 28533 net.cpp:139] Memory required for data: 2097920
I0428 19:56:51.620117 28533 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:51.620126 28533 net.cpp:86] Creating Layer relu1
I0428 19:56:51.620131 28533 net.cpp:408] relu1 <- ip1
I0428 19:56:51.620137 28533 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:51.620371 28533 net.cpp:124] Setting up relu1
I0428 19:56:51.620383 28533 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:51.620388 28533 net.cpp:139] Memory required for data: 2110720
I0428 19:56:51.620393 28533 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:51.620401 28533 net.cpp:86] Creating Layer ip2
I0428 19:56:51.620406 28533 net.cpp:408] ip2 <- ip1
I0428 19:56:51.620414 28533 net.cpp:382] ip2 -> ip2
I0428 19:56:51.620543 28533 net.cpp:124] Setting up ip2
I0428 19:56:51.620553 28533 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:51.620558 28533 net.cpp:139] Memory required for data: 2113280
I0428 19:56:51.620568 28533 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:51.620575 28533 net.cpp:86] Creating Layer relu2
I0428 19:56:51.620580 28533 net.cpp:408] relu2 <- ip2
I0428 19:56:51.620586 28533 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:51.621691 28533 net.cpp:124] Setting up relu2
I0428 19:56:51.621708 28533 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:51.621713 28533 net.cpp:139] Memory required for data: 2115840
I0428 19:56:51.621718 28533 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:51.621728 28533 net.cpp:86] Creating Layer ip3
I0428 19:56:51.621733 28533 net.cpp:408] ip3 <- ip2
I0428 19:56:51.621742 28533 net.cpp:382] ip3 -> ip3
I0428 19:56:51.621886 28533 net.cpp:124] Setting up ip3
I0428 19:56:51.621897 28533 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:51.621902 28533 net.cpp:139] Memory required for data: 2118400
I0428 19:56:51.621914 28533 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:51.621922 28533 net.cpp:86] Creating Layer relu3
I0428 19:56:51.621927 28533 net.cpp:408] relu3 <- ip3
I0428 19:56:51.621933 28533 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:51.622187 28533 net.cpp:124] Setting up relu3
I0428 19:56:51.622201 28533 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:51.622206 28533 net.cpp:139] Memory required for data: 2120960
I0428 19:56:51.622210 28533 layer_factory.hpp:77] Creating layer loss
I0428 19:56:51.622218 28533 net.cpp:86] Creating Layer loss
I0428 19:56:51.622222 28533 net.cpp:408] loss <- ip3
I0428 19:56:51.622228 28533 net.cpp:408] loss <- label
I0428 19:56:51.622236 28533 net.cpp:382] loss -> loss
I0428 19:56:51.622257 28533 layer_factory.hpp:77] Creating layer loss
I0428 19:56:51.622611 28533 net.cpp:124] Setting up loss
I0428 19:56:51.622634 28533 net.cpp:131] Top shape: (1)
I0428 19:56:51.622639 28533 net.cpp:134]     with loss weight 1
I0428 19:56:51.622658 28533 net.cpp:139] Memory required for data: 2120964
I0428 19:56:51.622663 28533 net.cpp:200] loss needs backward computation.
I0428 19:56:51.622668 28533 net.cpp:200] relu3 needs backward computation.
I0428 19:56:51.622673 28533 net.cpp:200] ip3 needs backward computation.
I0428 19:56:51.622678 28533 net.cpp:200] relu2 needs backward computation.
I0428 19:56:51.622683 28533 net.cpp:200] ip2 needs backward computation.
I0428 19:56:51.622687 28533 net.cpp:200] relu1 needs backward computation.
I0428 19:56:51.622691 28533 net.cpp:200] ip1 needs backward computation.
I0428 19:56:51.622711 28533 net.cpp:200] pool1 needs backward computation.
I0428 19:56:51.622716 28533 net.cpp:200] conv1 needs backward computation.
I0428 19:56:51.622721 28533 net.cpp:200] pool0 needs backward computation.
I0428 19:56:51.622725 28533 net.cpp:200] conv0 needs backward computation.
I0428 19:56:51.622731 28533 net.cpp:202] mnist does not need backward computation.
I0428 19:56:51.622736 28533 net.cpp:244] This network produces output loss
I0428 19:56:51.622750 28533 net.cpp:257] Network initialization done.
I0428 19:56:51.623276 28533 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test771.prototxt
I0428 19:56:51.623329 28533 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:51.623476 28533 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:51.623590 28533 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:51.623646 28533 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:51.623661 28533 net.cpp:86] Creating Layer mnist
I0428 19:56:51.623669 28533 net.cpp:382] mnist -> data
I0428 19:56:51.623679 28533 net.cpp:382] mnist -> label
I0428 19:56:51.623805 28533 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:51.626467 28533 net.cpp:124] Setting up mnist
I0428 19:56:51.626497 28533 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:51.626504 28533 net.cpp:131] Top shape: 100 (100)
I0428 19:56:51.626508 28533 net.cpp:139] Memory required for data: 314000
I0428 19:56:51.626513 28533 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:51.626521 28533 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:51.626541 28533 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:51.626549 28533 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:51.626559 28533 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:51.626611 28533 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:51.626621 28533 net.cpp:131] Top shape: 100 (100)
I0428 19:56:51.626626 28533 net.cpp:131] Top shape: 100 (100)
I0428 19:56:51.626629 28533 net.cpp:139] Memory required for data: 314800
I0428 19:56:51.626634 28533 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:51.626646 28533 net.cpp:86] Creating Layer conv0
I0428 19:56:51.626651 28533 net.cpp:408] conv0 <- data
I0428 19:56:51.626658 28533 net.cpp:382] conv0 -> conv0
I0428 19:56:51.628948 28533 net.cpp:124] Setting up conv0
I0428 19:56:51.628967 28533 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:51.628971 28533 net.cpp:139] Memory required for data: 2618800
I0428 19:56:51.628999 28533 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:51.629007 28533 net.cpp:86] Creating Layer pool0
I0428 19:56:51.629012 28533 net.cpp:408] pool0 <- conv0
I0428 19:56:51.629021 28533 net.cpp:382] pool0 -> pool0
I0428 19:56:51.629068 28533 net.cpp:124] Setting up pool0
I0428 19:56:51.629088 28533 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:51.629093 28533 net.cpp:139] Memory required for data: 3194800
I0428 19:56:51.629097 28533 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:51.629112 28533 net.cpp:86] Creating Layer conv1
I0428 19:56:51.629117 28533 net.cpp:408] conv1 <- pool0
I0428 19:56:51.629139 28533 net.cpp:382] conv1 -> conv1
I0428 19:56:51.632130 28533 net.cpp:124] Setting up conv1
I0428 19:56:51.632146 28533 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:51.632151 28533 net.cpp:139] Memory required for data: 3246000
I0428 19:56:51.632177 28533 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:51.632201 28533 net.cpp:86] Creating Layer pool1
I0428 19:56:51.632207 28533 net.cpp:408] pool1 <- conv1
I0428 19:56:51.632213 28533 net.cpp:382] pool1 -> pool1
I0428 19:56:51.632306 28533 net.cpp:124] Setting up pool1
I0428 19:56:51.632318 28533 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:51.632323 28533 net.cpp:139] Memory required for data: 3258800
I0428 19:56:51.632328 28533 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:51.632336 28533 net.cpp:86] Creating Layer ip1
I0428 19:56:51.632341 28533 net.cpp:408] ip1 <- pool1
I0428 19:56:51.632349 28533 net.cpp:382] ip1 -> ip1
I0428 19:56:51.632494 28533 net.cpp:124] Setting up ip1
I0428 19:56:51.632506 28533 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:51.632522 28533 net.cpp:139] Memory required for data: 3278800
I0428 19:56:51.632534 28533 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:51.632542 28533 net.cpp:86] Creating Layer relu1
I0428 19:56:51.632547 28533 net.cpp:408] relu1 <- ip1
I0428 19:56:51.632555 28533 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:51.632773 28533 net.cpp:124] Setting up relu1
I0428 19:56:51.632786 28533 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:51.632789 28533 net.cpp:139] Memory required for data: 3298800
I0428 19:56:51.632796 28533 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:51.632807 28533 net.cpp:86] Creating Layer ip2
I0428 19:56:51.632834 28533 net.cpp:408] ip2 <- ip1
I0428 19:56:51.632843 28533 net.cpp:382] ip2 -> ip2
I0428 19:56:51.632984 28533 net.cpp:124] Setting up ip2
I0428 19:56:51.632995 28533 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:51.633000 28533 net.cpp:139] Memory required for data: 3302800
I0428 19:56:51.633008 28533 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:51.633015 28533 net.cpp:86] Creating Layer relu2
I0428 19:56:51.633019 28533 net.cpp:408] relu2 <- ip2
I0428 19:56:51.633028 28533 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:51.633388 28533 net.cpp:124] Setting up relu2
I0428 19:56:51.633400 28533 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:51.633405 28533 net.cpp:139] Memory required for data: 3306800
I0428 19:56:51.633410 28533 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:51.633419 28533 net.cpp:86] Creating Layer ip3
I0428 19:56:51.633424 28533 net.cpp:408] ip3 <- ip2
I0428 19:56:51.633432 28533 net.cpp:382] ip3 -> ip3
I0428 19:56:51.633584 28533 net.cpp:124] Setting up ip3
I0428 19:56:51.633607 28533 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:51.633612 28533 net.cpp:139] Memory required for data: 3310800
I0428 19:56:51.633623 28533 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:51.633630 28533 net.cpp:86] Creating Layer relu3
I0428 19:56:51.633635 28533 net.cpp:408] relu3 <- ip3
I0428 19:56:51.633642 28533 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:51.634717 28533 net.cpp:124] Setting up relu3
I0428 19:56:51.634733 28533 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:51.634738 28533 net.cpp:139] Memory required for data: 3314800
I0428 19:56:51.634743 28533 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:51.634752 28533 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:51.634757 28533 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:51.634765 28533 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:51.634774 28533 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:51.634848 28533 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:51.634858 28533 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:51.634863 28533 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:51.634867 28533 net.cpp:139] Memory required for data: 3322800
I0428 19:56:51.634872 28533 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:51.634884 28533 net.cpp:86] Creating Layer accuracy
I0428 19:56:51.634889 28533 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:51.634896 28533 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:51.634902 28533 net.cpp:382] accuracy -> accuracy
I0428 19:56:51.634912 28533 net.cpp:124] Setting up accuracy
I0428 19:56:51.634917 28533 net.cpp:131] Top shape: (1)
I0428 19:56:51.634922 28533 net.cpp:139] Memory required for data: 3322804
I0428 19:56:51.634927 28533 layer_factory.hpp:77] Creating layer loss
I0428 19:56:51.634932 28533 net.cpp:86] Creating Layer loss
I0428 19:56:51.634937 28533 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:51.634941 28533 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:51.634948 28533 net.cpp:382] loss -> loss
I0428 19:56:51.634955 28533 layer_factory.hpp:77] Creating layer loss
I0428 19:56:51.635269 28533 net.cpp:124] Setting up loss
I0428 19:56:51.635283 28533 net.cpp:131] Top shape: (1)
I0428 19:56:51.635288 28533 net.cpp:134]     with loss weight 1
I0428 19:56:51.635296 28533 net.cpp:139] Memory required for data: 3322808
I0428 19:56:51.635313 28533 net.cpp:200] loss needs backward computation.
I0428 19:56:51.635319 28533 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:51.635324 28533 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:51.635329 28533 net.cpp:200] relu3 needs backward computation.
I0428 19:56:51.635334 28533 net.cpp:200] ip3 needs backward computation.
I0428 19:56:51.635337 28533 net.cpp:200] relu2 needs backward computation.
I0428 19:56:51.635342 28533 net.cpp:200] ip2 needs backward computation.
I0428 19:56:51.635346 28533 net.cpp:200] relu1 needs backward computation.
I0428 19:56:51.635350 28533 net.cpp:200] ip1 needs backward computation.
I0428 19:56:51.635354 28533 net.cpp:200] pool1 needs backward computation.
I0428 19:56:51.635360 28533 net.cpp:200] conv1 needs backward computation.
I0428 19:56:51.635365 28533 net.cpp:200] pool0 needs backward computation.
I0428 19:56:51.635368 28533 net.cpp:200] conv0 needs backward computation.
I0428 19:56:51.635373 28533 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:51.635378 28533 net.cpp:202] mnist does not need backward computation.
I0428 19:56:51.635382 28533 net.cpp:244] This network produces output accuracy
I0428 19:56:51.635387 28533 net.cpp:244] This network produces output loss
I0428 19:56:51.635404 28533 net.cpp:257] Network initialization done.
I0428 19:56:51.635459 28533 solver.cpp:56] Solver scaffolding done.
I0428 19:56:51.635948 28533 caffe.cpp:248] Starting Optimization
I0428 19:56:51.635957 28533 solver.cpp:273] Solving LeNet
I0428 19:56:51.635962 28533 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:51.637051 28533 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:51.641984 28533 blocking_queue.cpp:49] Waiting for data
I0428 19:56:51.711551 28540 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:51.712060 28533 solver.cpp:398]     Test net output #0: accuracy = 0.1264
I0428 19:56:51.712079 28533 solver.cpp:398]     Test net output #1: loss = 2.31336 (* 1 = 2.31336 loss)
I0428 19:56:51.714606 28533 solver.cpp:219] Iteration 0 (-1.03416e-42 iter/s, 0.0786135s/100 iters), loss = 2.33148
I0428 19:56:51.714629 28533 solver.cpp:238]     Train net output #0: loss = 2.33148 (* 1 = 2.33148 loss)
I0428 19:56:51.714656 28533 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:51.789980 28533 solver.cpp:219] Iteration 100 (1327.32 iter/s, 0.0753398s/100 iters), loss = 0.966838
I0428 19:56:51.790004 28533 solver.cpp:238]     Train net output #0: loss = 0.966838 (* 1 = 0.966838 loss)
I0428 19:56:51.790010 28533 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:51.864650 28533 solver.cpp:219] Iteration 200 (1339.87 iter/s, 0.0746341s/100 iters), loss = 0.486095
I0428 19:56:51.864675 28533 solver.cpp:238]     Train net output #0: loss = 0.486095 (* 1 = 0.486095 loss)
I0428 19:56:51.864681 28533 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:51.938104 28533 solver.cpp:219] Iteration 300 (1362.01 iter/s, 0.0734208s/100 iters), loss = 0.719084
I0428 19:56:51.938143 28533 solver.cpp:238]     Train net output #0: loss = 0.719084 (* 1 = 0.719084 loss)
I0428 19:56:51.938148 28533 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:52.014384 28533 solver.cpp:219] Iteration 400 (1311.51 iter/s, 0.0762481s/100 iters), loss = 0.813895
I0428 19:56:52.014421 28533 solver.cpp:238]     Train net output #0: loss = 0.813895 (* 1 = 0.813895 loss)
I0428 19:56:52.014427 28533 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:52.089681 28533 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:52.143167 28540 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:52.143672 28533 solver.cpp:398]     Test net output #0: accuracy = 0.8209
I0428 19:56:52.143692 28533 solver.cpp:398]     Test net output #1: loss = 0.508709 (* 1 = 0.508709 loss)
I0428 19:56:52.144438 28533 solver.cpp:219] Iteration 500 (769.112 iter/s, 0.13002s/100 iters), loss = 0.700823
I0428 19:56:52.144481 28533 solver.cpp:238]     Train net output #0: loss = 0.700823 (* 1 = 0.700823 loss)
I0428 19:56:52.144491 28533 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:52.224321 28533 solver.cpp:219] Iteration 600 (1252.63 iter/s, 0.0798321s/100 iters), loss = 0.327124
I0428 19:56:52.224344 28533 solver.cpp:238]     Train net output #0: loss = 0.327124 (* 1 = 0.327124 loss)
I0428 19:56:52.224350 28533 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:52.299075 28533 solver.cpp:219] Iteration 700 (1338.29 iter/s, 0.0747221s/100 iters), loss = 0.424578
I0428 19:56:52.299099 28533 solver.cpp:238]     Train net output #0: loss = 0.424578 (* 1 = 0.424578 loss)
I0428 19:56:52.299105 28533 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:52.379497 28533 solver.cpp:219] Iteration 800 (1244.16 iter/s, 0.0803758s/100 iters), loss = 0.326588
I0428 19:56:52.379536 28533 solver.cpp:238]     Train net output #0: loss = 0.326588 (* 1 = 0.326588 loss)
I0428 19:56:52.379559 28533 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:52.459568 28533 solver.cpp:219] Iteration 900 (1249.63 iter/s, 0.0800235s/100 iters), loss = 0.323019
I0428 19:56:52.459592 28533 solver.cpp:238]     Train net output #0: loss = 0.323019 (* 1 = 0.323019 loss)
I0428 19:56:52.459599 28533 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:52.484508 28539 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:52.535774 28533 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:52.536494 28533 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:52.536975 28533 solver.cpp:311] Iteration 1000, loss = 0.170261
I0428 19:56:52.536993 28533 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:52.611407 28540 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:52.611927 28533 solver.cpp:398]     Test net output #0: accuracy = 0.9475
I0428 19:56:52.611948 28533 solver.cpp:398]     Test net output #1: loss = 0.170393 (* 1 = 0.170393 loss)
I0428 19:56:52.611953 28533 solver.cpp:316] Optimization Done.
I0428 19:56:52.611956 28533 caffe.cpp:259] Optimization Done.
