I0428 20:36:09.263710  4750 caffe.cpp:218] Using GPUs 0
I0428 20:36:09.294404  4750 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:36:09.752185  4750 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1632.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:36:09.752331  4750 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1632.prototxt
I0428 20:36:09.752671  4750 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:36:09.752688  4750 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:36:09.752768  4750 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:09.752882  4750 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:09.752966  4750 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:36:09.752986  4750 net.cpp:86] Creating Layer mnist
I0428 20:36:09.752995  4750 net.cpp:382] mnist -> data
I0428 20:36:09.753013  4750 net.cpp:382] mnist -> label
I0428 20:36:09.753965  4750 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:36:09.756158  4750 net.cpp:124] Setting up mnist
I0428 20:36:09.756189  4750 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:36:09.756194  4750 net.cpp:131] Top shape: 64 (64)
I0428 20:36:09.756197  4750 net.cpp:139] Memory required for data: 200960
I0428 20:36:09.756203  4750 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:09.756217  4750 net.cpp:86] Creating Layer conv0
I0428 20:36:09.756235  4750 net.cpp:408] conv0 <- data
I0428 20:36:09.756247  4750 net.cpp:382] conv0 -> conv0
I0428 20:36:09.991631  4750 net.cpp:124] Setting up conv0
I0428 20:36:09.991673  4750 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:36:09.991677  4750 net.cpp:139] Memory required for data: 14946560
I0428 20:36:09.991693  4750 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:09.991705  4750 net.cpp:86] Creating Layer pool0
I0428 20:36:09.991709  4750 net.cpp:408] pool0 <- conv0
I0428 20:36:09.991729  4750 net.cpp:382] pool0 -> pool0
I0428 20:36:09.991775  4750 net.cpp:124] Setting up pool0
I0428 20:36:09.991780  4750 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:36:09.991782  4750 net.cpp:139] Memory required for data: 18632960
I0428 20:36:09.991786  4750 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:09.991796  4750 net.cpp:86] Creating Layer conv1
I0428 20:36:09.991799  4750 net.cpp:408] conv1 <- pool0
I0428 20:36:09.991804  4750 net.cpp:382] conv1 -> conv1
I0428 20:36:09.995311  4750 net.cpp:124] Setting up conv1
I0428 20:36:09.995339  4750 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:36:09.995343  4750 net.cpp:139] Memory required for data: 19452160
I0428 20:36:09.995352  4750 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:09.995358  4750 net.cpp:86] Creating Layer pool1
I0428 20:36:09.995362  4750 net.cpp:408] pool1 <- conv1
I0428 20:36:09.995367  4750 net.cpp:382] pool1 -> pool1
I0428 20:36:09.995416  4750 net.cpp:124] Setting up pool1
I0428 20:36:09.995422  4750 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:36:09.995425  4750 net.cpp:139] Memory required for data: 19656960
I0428 20:36:09.995427  4750 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:09.995434  4750 net.cpp:86] Creating Layer ip1
I0428 20:36:09.995437  4750 net.cpp:408] ip1 <- pool1
I0428 20:36:09.995441  4750 net.cpp:382] ip1 -> ip1
I0428 20:36:09.995784  4750 net.cpp:124] Setting up ip1
I0428 20:36:09.995792  4750 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:09.995811  4750 net.cpp:139] Memory required for data: 19669760
I0428 20:36:09.995818  4750 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:09.995823  4750 net.cpp:86] Creating Layer relu1
I0428 20:36:09.995828  4750 net.cpp:408] relu1 <- ip1
I0428 20:36:09.995832  4750 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:09.996001  4750 net.cpp:124] Setting up relu1
I0428 20:36:09.996011  4750 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:09.996013  4750 net.cpp:139] Memory required for data: 19682560
I0428 20:36:09.996016  4750 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:09.996021  4750 net.cpp:86] Creating Layer ip2
I0428 20:36:09.996026  4750 net.cpp:408] ip2 <- ip1
I0428 20:36:09.996029  4750 net.cpp:382] ip2 -> ip2
I0428 20:36:09.996131  4750 net.cpp:124] Setting up ip2
I0428 20:36:09.996139  4750 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:36:09.996141  4750 net.cpp:139] Memory required for data: 19688960
I0428 20:36:09.996146  4750 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:09.996152  4750 net.cpp:86] Creating Layer relu2
I0428 20:36:09.996155  4750 net.cpp:408] relu2 <- ip2
I0428 20:36:09.996160  4750 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:09.997066  4750 net.cpp:124] Setting up relu2
I0428 20:36:09.997079  4750 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:36:09.997098  4750 net.cpp:139] Memory required for data: 19695360
I0428 20:36:09.997102  4750 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:09.997109  4750 net.cpp:86] Creating Layer ip3
I0428 20:36:09.997113  4750 net.cpp:408] ip3 <- ip2
I0428 20:36:09.997119  4750 net.cpp:382] ip3 -> ip3
I0428 20:36:09.997236  4750 net.cpp:124] Setting up ip3
I0428 20:36:09.997242  4750 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:09.997246  4750 net.cpp:139] Memory required for data: 19697920
I0428 20:36:09.997253  4750 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:09.997259  4750 net.cpp:86] Creating Layer relu3
I0428 20:36:09.997262  4750 net.cpp:408] relu3 <- ip3
I0428 20:36:09.997282  4750 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:09.997437  4750 net.cpp:124] Setting up relu3
I0428 20:36:09.997444  4750 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:09.997448  4750 net.cpp:139] Memory required for data: 19700480
I0428 20:36:09.997452  4750 layer_factory.hpp:77] Creating layer loss
I0428 20:36:09.997457  4750 net.cpp:86] Creating Layer loss
I0428 20:36:09.997460  4750 net.cpp:408] loss <- ip3
I0428 20:36:09.997464  4750 net.cpp:408] loss <- label
I0428 20:36:09.997469  4750 net.cpp:382] loss -> loss
I0428 20:36:09.997501  4750 layer_factory.hpp:77] Creating layer loss
I0428 20:36:09.997773  4750 net.cpp:124] Setting up loss
I0428 20:36:09.997783  4750 net.cpp:131] Top shape: (1)
I0428 20:36:09.997786  4750 net.cpp:134]     with loss weight 1
I0428 20:36:09.997802  4750 net.cpp:139] Memory required for data: 19700484
I0428 20:36:09.997805  4750 net.cpp:200] loss needs backward computation.
I0428 20:36:09.997809  4750 net.cpp:200] relu3 needs backward computation.
I0428 20:36:09.997812  4750 net.cpp:200] ip3 needs backward computation.
I0428 20:36:09.997831  4750 net.cpp:200] relu2 needs backward computation.
I0428 20:36:09.997834  4750 net.cpp:200] ip2 needs backward computation.
I0428 20:36:09.997838  4750 net.cpp:200] relu1 needs backward computation.
I0428 20:36:09.997840  4750 net.cpp:200] ip1 needs backward computation.
I0428 20:36:09.997843  4750 net.cpp:200] pool1 needs backward computation.
I0428 20:36:09.997848  4750 net.cpp:200] conv1 needs backward computation.
I0428 20:36:09.997850  4750 net.cpp:200] pool0 needs backward computation.
I0428 20:36:09.997854  4750 net.cpp:200] conv0 needs backward computation.
I0428 20:36:09.997858  4750 net.cpp:202] mnist does not need backward computation.
I0428 20:36:09.997861  4750 net.cpp:244] This network produces output loss
I0428 20:36:09.997871  4750 net.cpp:257] Network initialization done.
I0428 20:36:09.998256  4750 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1632.prototxt
I0428 20:36:09.998298  4750 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:36:09.998399  4750 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:09.998474  4750 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:09.998517  4750 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:36:09.998529  4750 net.cpp:86] Creating Layer mnist
I0428 20:36:09.998533  4750 net.cpp:382] mnist -> data
I0428 20:36:09.998540  4750 net.cpp:382] mnist -> label
I0428 20:36:09.998620  4750 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:36:10.000031  4750 net.cpp:124] Setting up mnist
I0428 20:36:10.000059  4750 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:36:10.000064  4750 net.cpp:131] Top shape: 100 (100)
I0428 20:36:10.000067  4750 net.cpp:139] Memory required for data: 314000
I0428 20:36:10.000072  4750 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:36:10.000082  4750 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:36:10.000087  4750 net.cpp:408] label_mnist_1_split <- label
I0428 20:36:10.000092  4750 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:36:10.000099  4750 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:36:10.000197  4750 net.cpp:124] Setting up label_mnist_1_split
I0428 20:36:10.000205  4750 net.cpp:131] Top shape: 100 (100)
I0428 20:36:10.000210  4750 net.cpp:131] Top shape: 100 (100)
I0428 20:36:10.000212  4750 net.cpp:139] Memory required for data: 314800
I0428 20:36:10.000216  4750 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:10.000224  4750 net.cpp:86] Creating Layer conv0
I0428 20:36:10.000227  4750 net.cpp:408] conv0 <- data
I0428 20:36:10.000233  4750 net.cpp:382] conv0 -> conv0
I0428 20:36:10.001988  4750 net.cpp:124] Setting up conv0
I0428 20:36:10.002017  4750 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:36:10.002020  4750 net.cpp:139] Memory required for data: 23354800
I0428 20:36:10.002029  4750 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:10.002035  4750 net.cpp:86] Creating Layer pool0
I0428 20:36:10.002038  4750 net.cpp:408] pool0 <- conv0
I0428 20:36:10.002043  4750 net.cpp:382] pool0 -> pool0
I0428 20:36:10.002091  4750 net.cpp:124] Setting up pool0
I0428 20:36:10.002096  4750 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:36:10.002099  4750 net.cpp:139] Memory required for data: 29114800
I0428 20:36:10.002102  4750 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:10.002110  4750 net.cpp:86] Creating Layer conv1
I0428 20:36:10.002113  4750 net.cpp:408] conv1 <- pool0
I0428 20:36:10.002117  4750 net.cpp:382] conv1 -> conv1
I0428 20:36:10.005431  4750 net.cpp:124] Setting up conv1
I0428 20:36:10.005445  4750 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:36:10.005463  4750 net.cpp:139] Memory required for data: 30394800
I0428 20:36:10.005471  4750 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:10.005478  4750 net.cpp:86] Creating Layer pool1
I0428 20:36:10.005481  4750 net.cpp:408] pool1 <- conv1
I0428 20:36:10.005486  4750 net.cpp:382] pool1 -> pool1
I0428 20:36:10.005538  4750 net.cpp:124] Setting up pool1
I0428 20:36:10.005543  4750 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:36:10.005561  4750 net.cpp:139] Memory required for data: 30714800
I0428 20:36:10.005564  4750 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:10.005570  4750 net.cpp:86] Creating Layer ip1
I0428 20:36:10.005573  4750 net.cpp:408] ip1 <- pool1
I0428 20:36:10.005578  4750 net.cpp:382] ip1 -> ip1
I0428 20:36:10.005920  4750 net.cpp:124] Setting up ip1
I0428 20:36:10.005939  4750 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:10.005956  4750 net.cpp:139] Memory required for data: 30734800
I0428 20:36:10.005964  4750 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:10.005969  4750 net.cpp:86] Creating Layer relu1
I0428 20:36:10.005971  4750 net.cpp:408] relu1 <- ip1
I0428 20:36:10.005976  4750 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:10.006124  4750 net.cpp:124] Setting up relu1
I0428 20:36:10.006131  4750 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:10.006134  4750 net.cpp:139] Memory required for data: 30754800
I0428 20:36:10.006137  4750 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:10.006144  4750 net.cpp:86] Creating Layer ip2
I0428 20:36:10.006147  4750 net.cpp:408] ip2 <- ip1
I0428 20:36:10.006151  4750 net.cpp:382] ip2 -> ip2
I0428 20:36:10.006268  4750 net.cpp:124] Setting up ip2
I0428 20:36:10.006274  4750 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:36:10.006276  4750 net.cpp:139] Memory required for data: 30764800
I0428 20:36:10.006281  4750 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:10.006286  4750 net.cpp:86] Creating Layer relu2
I0428 20:36:10.006289  4750 net.cpp:408] relu2 <- ip2
I0428 20:36:10.006294  4750 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:10.006505  4750 net.cpp:124] Setting up relu2
I0428 20:36:10.006515  4750 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:36:10.006517  4750 net.cpp:139] Memory required for data: 30774800
I0428 20:36:10.006520  4750 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:10.006526  4750 net.cpp:86] Creating Layer ip3
I0428 20:36:10.006530  4750 net.cpp:408] ip3 <- ip2
I0428 20:36:10.006534  4750 net.cpp:382] ip3 -> ip3
I0428 20:36:10.006629  4750 net.cpp:124] Setting up ip3
I0428 20:36:10.006636  4750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:10.006640  4750 net.cpp:139] Memory required for data: 30778800
I0428 20:36:10.006649  4750 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:10.006654  4750 net.cpp:86] Creating Layer relu3
I0428 20:36:10.006656  4750 net.cpp:408] relu3 <- ip3
I0428 20:36:10.006660  4750 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:10.007517  4750 net.cpp:124] Setting up relu3
I0428 20:36:10.007529  4750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:10.007547  4750 net.cpp:139] Memory required for data: 30782800
I0428 20:36:10.007551  4750 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:36:10.007572  4750 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:36:10.007576  4750 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:36:10.007596  4750 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:36:10.007602  4750 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:36:10.007640  4750 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:36:10.007645  4750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:10.007650  4750 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:10.007652  4750 net.cpp:139] Memory required for data: 30790800
I0428 20:36:10.007655  4750 layer_factory.hpp:77] Creating layer accuracy
I0428 20:36:10.007660  4750 net.cpp:86] Creating Layer accuracy
I0428 20:36:10.007664  4750 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:36:10.007668  4750 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:36:10.007673  4750 net.cpp:382] accuracy -> accuracy
I0428 20:36:10.007680  4750 net.cpp:124] Setting up accuracy
I0428 20:36:10.007684  4750 net.cpp:131] Top shape: (1)
I0428 20:36:10.007688  4750 net.cpp:139] Memory required for data: 30790804
I0428 20:36:10.007689  4750 layer_factory.hpp:77] Creating layer loss
I0428 20:36:10.007694  4750 net.cpp:86] Creating Layer loss
I0428 20:36:10.007697  4750 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:36:10.007701  4750 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:36:10.007705  4750 net.cpp:382] loss -> loss
I0428 20:36:10.007711  4750 layer_factory.hpp:77] Creating layer loss
I0428 20:36:10.007992  4750 net.cpp:124] Setting up loss
I0428 20:36:10.008002  4750 net.cpp:131] Top shape: (1)
I0428 20:36:10.008005  4750 net.cpp:134]     with loss weight 1
I0428 20:36:10.008023  4750 net.cpp:139] Memory required for data: 30790808
I0428 20:36:10.008026  4750 net.cpp:200] loss needs backward computation.
I0428 20:36:10.008031  4750 net.cpp:202] accuracy does not need backward computation.
I0428 20:36:10.008036  4750 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:36:10.008039  4750 net.cpp:200] relu3 needs backward computation.
I0428 20:36:10.008043  4750 net.cpp:200] ip3 needs backward computation.
I0428 20:36:10.008046  4750 net.cpp:200] relu2 needs backward computation.
I0428 20:36:10.008049  4750 net.cpp:200] ip2 needs backward computation.
I0428 20:36:10.008059  4750 net.cpp:200] relu1 needs backward computation.
I0428 20:36:10.008062  4750 net.cpp:200] ip1 needs backward computation.
I0428 20:36:10.008066  4750 net.cpp:200] pool1 needs backward computation.
I0428 20:36:10.008070  4750 net.cpp:200] conv1 needs backward computation.
I0428 20:36:10.008074  4750 net.cpp:200] pool0 needs backward computation.
I0428 20:36:10.008077  4750 net.cpp:200] conv0 needs backward computation.
I0428 20:36:10.008081  4750 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:36:10.008085  4750 net.cpp:202] mnist does not need backward computation.
I0428 20:36:10.008088  4750 net.cpp:244] This network produces output accuracy
I0428 20:36:10.008092  4750 net.cpp:244] This network produces output loss
I0428 20:36:10.008103  4750 net.cpp:257] Network initialization done.
I0428 20:36:10.008147  4750 solver.cpp:56] Solver scaffolding done.
I0428 20:36:10.008515  4750 caffe.cpp:248] Starting Optimization
I0428 20:36:10.008522  4750 solver.cpp:273] Solving LeNet
I0428 20:36:10.008524  4750 solver.cpp:274] Learning Rate Policy: inv
I0428 20:36:10.008728  4750 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:36:10.033743  4750 blocking_queue.cpp:49] Waiting for data
I0428 20:36:10.123504  4757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:10.125244  4750 solver.cpp:398]     Test net output #0: accuracy = 0.087
I0428 20:36:10.125279  4750 solver.cpp:398]     Test net output #1: loss = 2.31781 (* 1 = 2.31781 loss)
I0428 20:36:10.129981  4750 solver.cpp:219] Iteration 0 (0 iter/s, 0.121427s/100 iters), loss = 2.30897
I0428 20:36:10.130017  4750 solver.cpp:238]     Train net output #0: loss = 2.30897 (* 1 = 2.30897 loss)
I0428 20:36:10.130028  4750 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:36:10.380128  4750 solver.cpp:219] Iteration 100 (399.827 iter/s, 0.250108s/100 iters), loss = 0.343835
I0428 20:36:10.380170  4750 solver.cpp:238]     Train net output #0: loss = 0.343835 (* 1 = 0.343835 loss)
I0428 20:36:10.380177  4750 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:36:10.635773  4750 solver.cpp:219] Iteration 200 (391.234 iter/s, 0.255601s/100 iters), loss = 0.152339
I0428 20:36:10.635799  4750 solver.cpp:238]     Train net output #0: loss = 0.152339 (* 1 = 0.152339 loss)
I0428 20:36:10.635805  4750 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:36:10.896683  4750 solver.cpp:219] Iteration 300 (383.36 iter/s, 0.260852s/100 iters), loss = 0.245521
I0428 20:36:10.896710  4750 solver.cpp:238]     Train net output #0: loss = 0.245521 (* 1 = 0.245521 loss)
I0428 20:36:10.896718  4750 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:36:11.153489  4750 solver.cpp:219] Iteration 400 (389.469 iter/s, 0.25676s/100 iters), loss = 0.0359283
I0428 20:36:11.153520  4750 solver.cpp:238]     Train net output #0: loss = 0.0359284 (* 1 = 0.0359284 loss)
I0428 20:36:11.153528  4750 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:36:11.405678  4750 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:36:11.518709  4757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:11.521824  4750 solver.cpp:398]     Test net output #0: accuracy = 0.9725
I0428 20:36:11.521862  4750 solver.cpp:398]     Test net output #1: loss = 0.0874483 (* 1 = 0.0874483 loss)
I0428 20:36:11.524251  4750 solver.cpp:219] Iteration 500 (269.754 iter/s, 0.370708s/100 iters), loss = 0.132958
I0428 20:36:11.524307  4750 solver.cpp:238]     Train net output #0: loss = 0.132958 (* 1 = 0.132958 loss)
I0428 20:36:11.524314  4750 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:36:11.770169  4750 solver.cpp:219] Iteration 600 (406.757 iter/s, 0.245847s/100 iters), loss = 0.0482306
I0428 20:36:11.770197  4750 solver.cpp:238]     Train net output #0: loss = 0.0482307 (* 1 = 0.0482307 loss)
I0428 20:36:11.770205  4750 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:36:12.012320  4750 solver.cpp:219] Iteration 700 (413.043 iter/s, 0.242105s/100 iters), loss = 0.112243
I0428 20:36:12.012357  4750 solver.cpp:238]     Train net output #0: loss = 0.112243 (* 1 = 0.112243 loss)
I0428 20:36:12.012367  4750 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:36:12.259893  4750 solver.cpp:219] Iteration 800 (404.011 iter/s, 0.247518s/100 iters), loss = 0.158521
I0428 20:36:12.259934  4750 solver.cpp:238]     Train net output #0: loss = 0.158521 (* 1 = 0.158521 loss)
I0428 20:36:12.259944  4750 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:36:12.503798  4750 solver.cpp:219] Iteration 900 (410.098 iter/s, 0.243844s/100 iters), loss = 0.114122
I0428 20:36:12.503840  4750 solver.cpp:238]     Train net output #0: loss = 0.114122 (* 1 = 0.114122 loss)
I0428 20:36:12.503851  4750 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:36:12.589920  4756 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:12.755892  4750 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:36:12.762550  4750 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:36:12.765620  4750 solver.cpp:311] Iteration 1000, loss = 0.0867711
I0428 20:36:12.765651  4750 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:36:12.877674  4757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:12.880825  4750 solver.cpp:398]     Test net output #0: accuracy = 0.9789
I0428 20:36:12.880853  4750 solver.cpp:398]     Test net output #1: loss = 0.0647243 (* 1 = 0.0647243 loss)
I0428 20:36:12.880861  4750 solver.cpp:316] Optimization Done.
I0428 20:36:12.880863  4750 caffe.cpp:259] Optimization Done.
