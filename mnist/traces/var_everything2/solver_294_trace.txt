I0428 19:39:06.288580 24214 caffe.cpp:218] Using GPUs 0
I0428 19:39:06.325728 24214 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:06.780251 24214 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test294.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:06.780398 24214 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test294.prototxt
I0428 19:39:06.780771 24214 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:06.780804 24214 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:06.780895 24214 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:06.780962 24214 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:06.781050 24214 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:06.781070 24214 net.cpp:86] Creating Layer mnist
I0428 19:39:06.781076 24214 net.cpp:382] mnist -> data
I0428 19:39:06.781097 24214 net.cpp:382] mnist -> label
I0428 19:39:06.782095 24214 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:06.784265 24214 net.cpp:124] Setting up mnist
I0428 19:39:06.784297 24214 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:06.784303 24214 net.cpp:131] Top shape: 64 (64)
I0428 19:39:06.784307 24214 net.cpp:139] Memory required for data: 200960
I0428 19:39:06.784312 24214 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:06.784327 24214 net.cpp:86] Creating Layer conv0
I0428 19:39:06.784344 24214 net.cpp:408] conv0 <- data
I0428 19:39:06.784355 24214 net.cpp:382] conv0 -> conv0
I0428 19:39:07.016304 24214 net.cpp:124] Setting up conv0
I0428 19:39:07.016331 24214 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:07.016335 24214 net.cpp:139] Memory required for data: 495872
I0428 19:39:07.016350 24214 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:07.016378 24214 net.cpp:86] Creating Layer pool0
I0428 19:39:07.016382 24214 net.cpp:408] pool0 <- conv0
I0428 19:39:07.016388 24214 net.cpp:382] pool0 -> pool0
I0428 19:39:07.016433 24214 net.cpp:124] Setting up pool0
I0428 19:39:07.016443 24214 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:07.016446 24214 net.cpp:139] Memory required for data: 569600
I0428 19:39:07.016449 24214 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:07.016460 24214 net.cpp:86] Creating Layer conv1
I0428 19:39:07.016463 24214 net.cpp:408] conv1 <- pool0
I0428 19:39:07.016469 24214 net.cpp:382] conv1 -> conv1
I0428 19:39:07.018441 24214 net.cpp:124] Setting up conv1
I0428 19:39:07.018457 24214 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:07.018462 24214 net.cpp:139] Memory required for data: 602368
I0428 19:39:07.018471 24214 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:07.018479 24214 net.cpp:86] Creating Layer pool1
I0428 19:39:07.018484 24214 net.cpp:408] pool1 <- conv1
I0428 19:39:07.018489 24214 net.cpp:382] pool1 -> pool1
I0428 19:39:07.018529 24214 net.cpp:124] Setting up pool1
I0428 19:39:07.018537 24214 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:07.018542 24214 net.cpp:139] Memory required for data: 610560
I0428 19:39:07.018544 24214 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:07.018553 24214 net.cpp:86] Creating Layer ip1
I0428 19:39:07.018556 24214 net.cpp:408] ip1 <- pool1
I0428 19:39:07.018561 24214 net.cpp:382] ip1 -> ip1
I0428 19:39:07.018698 24214 net.cpp:124] Setting up ip1
I0428 19:39:07.018705 24214 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:07.018709 24214 net.cpp:139] Memory required for data: 616960
I0428 19:39:07.018717 24214 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:07.018723 24214 net.cpp:86] Creating Layer relu1
I0428 19:39:07.018726 24214 net.cpp:408] relu1 <- ip1
I0428 19:39:07.018730 24214 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:07.018896 24214 net.cpp:124] Setting up relu1
I0428 19:39:07.018905 24214 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:07.018908 24214 net.cpp:139] Memory required for data: 623360
I0428 19:39:07.018911 24214 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:07.018918 24214 net.cpp:86] Creating Layer ip2
I0428 19:39:07.018921 24214 net.cpp:408] ip2 <- ip1
I0428 19:39:07.018926 24214 net.cpp:382] ip2 -> ip2
I0428 19:39:07.019021 24214 net.cpp:124] Setting up ip2
I0428 19:39:07.019027 24214 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:07.019031 24214 net.cpp:139] Memory required for data: 625920
I0428 19:39:07.019035 24214 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:07.019042 24214 net.cpp:86] Creating Layer relu2
I0428 19:39:07.019045 24214 net.cpp:408] relu2 <- ip2
I0428 19:39:07.019049 24214 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:07.019788 24214 net.cpp:124] Setting up relu2
I0428 19:39:07.019800 24214 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:07.019804 24214 net.cpp:139] Memory required for data: 628480
I0428 19:39:07.019807 24214 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:07.019815 24214 net.cpp:86] Creating Layer ip3
I0428 19:39:07.019819 24214 net.cpp:408] ip3 <- ip2
I0428 19:39:07.019824 24214 net.cpp:382] ip3 -> ip3
I0428 19:39:07.019956 24214 net.cpp:124] Setting up ip3
I0428 19:39:07.019964 24214 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:07.019968 24214 net.cpp:139] Memory required for data: 631040
I0428 19:39:07.019976 24214 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:07.019982 24214 net.cpp:86] Creating Layer relu3
I0428 19:39:07.019985 24214 net.cpp:408] relu3 <- ip3
I0428 19:39:07.019989 24214 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:07.020185 24214 net.cpp:124] Setting up relu3
I0428 19:39:07.020195 24214 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:07.020200 24214 net.cpp:139] Memory required for data: 633600
I0428 19:39:07.020202 24214 layer_factory.hpp:77] Creating layer loss
I0428 19:39:07.020208 24214 net.cpp:86] Creating Layer loss
I0428 19:39:07.020212 24214 net.cpp:408] loss <- ip3
I0428 19:39:07.020217 24214 net.cpp:408] loss <- label
I0428 19:39:07.020237 24214 net.cpp:382] loss -> loss
I0428 19:39:07.020257 24214 layer_factory.hpp:77] Creating layer loss
I0428 19:39:07.020508 24214 net.cpp:124] Setting up loss
I0428 19:39:07.020517 24214 net.cpp:131] Top shape: (1)
I0428 19:39:07.020521 24214 net.cpp:134]     with loss weight 1
I0428 19:39:07.020535 24214 net.cpp:139] Memory required for data: 633604
I0428 19:39:07.020539 24214 net.cpp:200] loss needs backward computation.
I0428 19:39:07.020542 24214 net.cpp:200] relu3 needs backward computation.
I0428 19:39:07.020546 24214 net.cpp:200] ip3 needs backward computation.
I0428 19:39:07.020550 24214 net.cpp:200] relu2 needs backward computation.
I0428 19:39:07.020552 24214 net.cpp:200] ip2 needs backward computation.
I0428 19:39:07.020555 24214 net.cpp:200] relu1 needs backward computation.
I0428 19:39:07.020558 24214 net.cpp:200] ip1 needs backward computation.
I0428 19:39:07.020562 24214 net.cpp:200] pool1 needs backward computation.
I0428 19:39:07.020565 24214 net.cpp:200] conv1 needs backward computation.
I0428 19:39:07.020570 24214 net.cpp:200] pool0 needs backward computation.
I0428 19:39:07.020572 24214 net.cpp:200] conv0 needs backward computation.
I0428 19:39:07.020576 24214 net.cpp:202] mnist does not need backward computation.
I0428 19:39:07.020579 24214 net.cpp:244] This network produces output loss
I0428 19:39:07.020588 24214 net.cpp:257] Network initialization done.
I0428 19:39:07.020972 24214 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test294.prototxt
I0428 19:39:07.021003 24214 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:07.021101 24214 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:07.021211 24214 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:07.021256 24214 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:07.021273 24214 net.cpp:86] Creating Layer mnist
I0428 19:39:07.021280 24214 net.cpp:382] mnist -> data
I0428 19:39:07.021287 24214 net.cpp:382] mnist -> label
I0428 19:39:07.021379 24214 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:07.023257 24214 net.cpp:124] Setting up mnist
I0428 19:39:07.023301 24214 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:07.023308 24214 net.cpp:131] Top shape: 100 (100)
I0428 19:39:07.023311 24214 net.cpp:139] Memory required for data: 314000
I0428 19:39:07.023314 24214 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:07.023335 24214 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:07.023340 24214 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:07.023345 24214 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:07.023352 24214 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:07.023480 24214 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:07.023488 24214 net.cpp:131] Top shape: 100 (100)
I0428 19:39:07.023493 24214 net.cpp:131] Top shape: 100 (100)
I0428 19:39:07.023495 24214 net.cpp:139] Memory required for data: 314800
I0428 19:39:07.023499 24214 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:07.023509 24214 net.cpp:86] Creating Layer conv0
I0428 19:39:07.023511 24214 net.cpp:408] conv0 <- data
I0428 19:39:07.023517 24214 net.cpp:382] conv0 -> conv0
I0428 19:39:07.025334 24214 net.cpp:124] Setting up conv0
I0428 19:39:07.025348 24214 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:07.025352 24214 net.cpp:139] Memory required for data: 775600
I0428 19:39:07.025362 24214 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:07.025367 24214 net.cpp:86] Creating Layer pool0
I0428 19:39:07.025372 24214 net.cpp:408] pool0 <- conv0
I0428 19:39:07.025377 24214 net.cpp:382] pool0 -> pool0
I0428 19:39:07.025411 24214 net.cpp:124] Setting up pool0
I0428 19:39:07.025416 24214 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:07.025419 24214 net.cpp:139] Memory required for data: 890800
I0428 19:39:07.025424 24214 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:07.025431 24214 net.cpp:86] Creating Layer conv1
I0428 19:39:07.025434 24214 net.cpp:408] conv1 <- pool0
I0428 19:39:07.025439 24214 net.cpp:382] conv1 -> conv1
I0428 19:39:07.026974 24214 net.cpp:124] Setting up conv1
I0428 19:39:07.026988 24214 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:07.026993 24214 net.cpp:139] Memory required for data: 942000
I0428 19:39:07.027007 24214 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:07.027014 24214 net.cpp:86] Creating Layer pool1
I0428 19:39:07.027019 24214 net.cpp:408] pool1 <- conv1
I0428 19:39:07.027024 24214 net.cpp:382] pool1 -> pool1
I0428 19:39:07.027060 24214 net.cpp:124] Setting up pool1
I0428 19:39:07.027072 24214 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:07.027076 24214 net.cpp:139] Memory required for data: 954800
I0428 19:39:07.027078 24214 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:07.027086 24214 net.cpp:86] Creating Layer ip1
I0428 19:39:07.027088 24214 net.cpp:408] ip1 <- pool1
I0428 19:39:07.027093 24214 net.cpp:382] ip1 -> ip1
I0428 19:39:07.027226 24214 net.cpp:124] Setting up ip1
I0428 19:39:07.027235 24214 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:07.027251 24214 net.cpp:139] Memory required for data: 964800
I0428 19:39:07.027259 24214 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:07.027264 24214 net.cpp:86] Creating Layer relu1
I0428 19:39:07.027268 24214 net.cpp:408] relu1 <- ip1
I0428 19:39:07.027274 24214 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:07.027492 24214 net.cpp:124] Setting up relu1
I0428 19:39:07.027501 24214 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:07.027505 24214 net.cpp:139] Memory required for data: 974800
I0428 19:39:07.027508 24214 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:07.027518 24214 net.cpp:86] Creating Layer ip2
I0428 19:39:07.027529 24214 net.cpp:408] ip2 <- ip1
I0428 19:39:07.027534 24214 net.cpp:382] ip2 -> ip2
I0428 19:39:07.027659 24214 net.cpp:124] Setting up ip2
I0428 19:39:07.027667 24214 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:07.027671 24214 net.cpp:139] Memory required for data: 978800
I0428 19:39:07.027683 24214 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:07.027698 24214 net.cpp:86] Creating Layer relu2
I0428 19:39:07.027700 24214 net.cpp:408] relu2 <- ip2
I0428 19:39:07.027706 24214 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:07.027896 24214 net.cpp:124] Setting up relu2
I0428 19:39:07.027904 24214 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:07.027909 24214 net.cpp:139] Memory required for data: 982800
I0428 19:39:07.027911 24214 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:07.027917 24214 net.cpp:86] Creating Layer ip3
I0428 19:39:07.027920 24214 net.cpp:408] ip3 <- ip2
I0428 19:39:07.027925 24214 net.cpp:382] ip3 -> ip3
I0428 19:39:07.028051 24214 net.cpp:124] Setting up ip3
I0428 19:39:07.028059 24214 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:07.028061 24214 net.cpp:139] Memory required for data: 986800
I0428 19:39:07.028071 24214 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:07.028075 24214 net.cpp:86] Creating Layer relu3
I0428 19:39:07.028079 24214 net.cpp:408] relu3 <- ip3
I0428 19:39:07.028082 24214 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:07.028990 24214 net.cpp:124] Setting up relu3
I0428 19:39:07.029005 24214 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:07.029008 24214 net.cpp:139] Memory required for data: 990800
I0428 19:39:07.029012 24214 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:07.029019 24214 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:07.029023 24214 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:07.029028 24214 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:07.029043 24214 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:07.029088 24214 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:07.029093 24214 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:07.029098 24214 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:07.029103 24214 net.cpp:139] Memory required for data: 998800
I0428 19:39:07.029105 24214 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:07.029111 24214 net.cpp:86] Creating Layer accuracy
I0428 19:39:07.029115 24214 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:07.029120 24214 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:07.029126 24214 net.cpp:382] accuracy -> accuracy
I0428 19:39:07.029140 24214 net.cpp:124] Setting up accuracy
I0428 19:39:07.029145 24214 net.cpp:131] Top shape: (1)
I0428 19:39:07.029153 24214 net.cpp:139] Memory required for data: 998804
I0428 19:39:07.029156 24214 layer_factory.hpp:77] Creating layer loss
I0428 19:39:07.029161 24214 net.cpp:86] Creating Layer loss
I0428 19:39:07.029165 24214 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:07.029170 24214 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:07.029176 24214 net.cpp:382] loss -> loss
I0428 19:39:07.029183 24214 layer_factory.hpp:77] Creating layer loss
I0428 19:39:07.029474 24214 net.cpp:124] Setting up loss
I0428 19:39:07.029484 24214 net.cpp:131] Top shape: (1)
I0428 19:39:07.029486 24214 net.cpp:134]     with loss weight 1
I0428 19:39:07.029492 24214 net.cpp:139] Memory required for data: 998808
I0428 19:39:07.029520 24214 net.cpp:200] loss needs backward computation.
I0428 19:39:07.029523 24214 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:07.029527 24214 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:07.029536 24214 net.cpp:200] relu3 needs backward computation.
I0428 19:39:07.029539 24214 net.cpp:200] ip3 needs backward computation.
I0428 19:39:07.029542 24214 net.cpp:200] relu2 needs backward computation.
I0428 19:39:07.029546 24214 net.cpp:200] ip2 needs backward computation.
I0428 19:39:07.029547 24214 net.cpp:200] relu1 needs backward computation.
I0428 19:39:07.029551 24214 net.cpp:200] ip1 needs backward computation.
I0428 19:39:07.029559 24214 net.cpp:200] pool1 needs backward computation.
I0428 19:39:07.029562 24214 net.cpp:200] conv1 needs backward computation.
I0428 19:39:07.029566 24214 net.cpp:200] pool0 needs backward computation.
I0428 19:39:07.029573 24214 net.cpp:200] conv0 needs backward computation.
I0428 19:39:07.029577 24214 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:07.029582 24214 net.cpp:202] mnist does not need backward computation.
I0428 19:39:07.029584 24214 net.cpp:244] This network produces output accuracy
I0428 19:39:07.029587 24214 net.cpp:244] This network produces output loss
I0428 19:39:07.029599 24214 net.cpp:257] Network initialization done.
I0428 19:39:07.029639 24214 solver.cpp:56] Solver scaffolding done.
I0428 19:39:07.029989 24214 caffe.cpp:248] Starting Optimization
I0428 19:39:07.029995 24214 solver.cpp:273] Solving LeNet
I0428 19:39:07.029999 24214 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:07.030854 24214 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:07.032976 24214 blocking_queue.cpp:49] Waiting for data
I0428 19:39:07.105031 24221 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:07.105463 24214 solver.cpp:398]     Test net output #0: accuracy = 0.1038
I0428 19:39:07.105480 24214 solver.cpp:398]     Test net output #1: loss = 2.30126 (* 1 = 2.30126 loss)
I0428 19:39:07.107409 24214 solver.cpp:219] Iteration 0 (-1.06779e-42 iter/s, 0.0773847s/100 iters), loss = 2.30992
I0428 19:39:07.107434 24214 solver.cpp:238]     Train net output #0: loss = 2.30992 (* 1 = 2.30992 loss)
I0428 19:39:07.107460 24214 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:07.176607 24214 solver.cpp:219] Iteration 100 (1445.86 iter/s, 0.069163s/100 iters), loss = 1.61953
I0428 19:39:07.176647 24214 solver.cpp:238]     Train net output #0: loss = 1.61953 (* 1 = 1.61953 loss)
I0428 19:39:07.176653 24214 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:07.243958 24214 solver.cpp:219] Iteration 200 (1485.54 iter/s, 0.0673157s/100 iters), loss = 0.883575
I0428 19:39:07.243998 24214 solver.cpp:238]     Train net output #0: loss = 0.883575 (* 1 = 0.883575 loss)
I0428 19:39:07.244004 24214 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:07.310506 24214 solver.cpp:219] Iteration 300 (1503.38 iter/s, 0.066517s/100 iters), loss = 0.60281
I0428 19:39:07.310545 24214 solver.cpp:238]     Train net output #0: loss = 0.60281 (* 1 = 0.60281 loss)
I0428 19:39:07.310551 24214 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:07.378911 24214 solver.cpp:219] Iteration 400 (1462.58 iter/s, 0.0683725s/100 iters), loss = 0.575115
I0428 19:39:07.378949 24214 solver.cpp:238]     Train net output #0: loss = 0.575115 (* 1 = 0.575115 loss)
I0428 19:39:07.378955 24214 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:07.446161 24214 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:07.521653 24221 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:07.522095 24214 solver.cpp:398]     Test net output #0: accuracy = 0.8018
I0428 19:39:07.522114 24214 solver.cpp:398]     Test net output #1: loss = 0.608874 (* 1 = 0.608874 loss)
I0428 19:39:07.522845 24214 solver.cpp:219] Iteration 500 (694.944 iter/s, 0.143897s/100 iters), loss = 0.823908
I0428 19:39:07.522871 24214 solver.cpp:238]     Train net output #0: loss = 0.823908 (* 1 = 0.823908 loss)
I0428 19:39:07.522892 24214 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:07.592847 24214 solver.cpp:219] Iteration 600 (1429.42 iter/s, 0.0699587s/100 iters), loss = 0.518535
I0428 19:39:07.592871 24214 solver.cpp:238]     Train net output #0: loss = 0.518535 (* 1 = 0.518535 loss)
I0428 19:39:07.592893 24214 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:07.661669 24214 solver.cpp:219] Iteration 700 (1453.69 iter/s, 0.0687903s/100 iters), loss = 0.708183
I0428 19:39:07.661707 24214 solver.cpp:238]     Train net output #0: loss = 0.708183 (* 1 = 0.708183 loss)
I0428 19:39:07.661713 24214 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:07.735364 24214 solver.cpp:219] Iteration 800 (1357.62 iter/s, 0.0736583s/100 iters), loss = 0.438665
I0428 19:39:07.735427 24214 solver.cpp:238]     Train net output #0: loss = 0.438665 (* 1 = 0.438665 loss)
I0428 19:39:07.735460 24214 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:07.836180 24214 solver.cpp:219] Iteration 900 (992.553 iter/s, 0.10075s/100 iters), loss = 0.347735
I0428 19:39:07.836221 24214 solver.cpp:238]     Train net output #0: loss = 0.347735 (* 1 = 0.347735 loss)
I0428 19:39:07.836232 24214 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:07.864526 24220 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:07.917356 24214 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:07.918020 24214 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:07.918459 24214 solver.cpp:311] Iteration 1000, loss = 0.350414
I0428 19:39:07.918478 24214 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:07.993036 24221 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:07.993507 24214 solver.cpp:398]     Test net output #0: accuracy = 0.9052
I0428 19:39:07.993532 24214 solver.cpp:398]     Test net output #1: loss = 0.322606 (* 1 = 0.322606 loss)
I0428 19:39:07.993538 24214 solver.cpp:316] Optimization Done.
I0428 19:39:07.993542 24214 caffe.cpp:259] Optimization Done.
