I0428 19:52:47.855839 27630 caffe.cpp:218] Using GPUs 0
I0428 19:52:47.888418 27630 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:48.406134 27630 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test671.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:48.406270 27630 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test671.prototxt
I0428 19:52:48.406664 27630 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:48.406682 27630 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:48.406775 27630 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:48.406860 27630 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:48.406972 27630 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:48.407006 27630 net.cpp:86] Creating Layer mnist
I0428 19:52:48.407016 27630 net.cpp:382] mnist -> data
I0428 19:52:48.407038 27630 net.cpp:382] mnist -> label
I0428 19:52:48.408205 27630 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:48.410688 27630 net.cpp:124] Setting up mnist
I0428 19:52:48.410707 27630 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:48.410713 27630 net.cpp:131] Top shape: 64 (64)
I0428 19:52:48.410717 27630 net.cpp:139] Memory required for data: 200960
I0428 19:52:48.410723 27630 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:48.410740 27630 net.cpp:86] Creating Layer conv0
I0428 19:52:48.410747 27630 net.cpp:408] conv0 <- data
I0428 19:52:48.410759 27630 net.cpp:382] conv0 -> conv0
I0428 19:52:48.702306 27630 net.cpp:124] Setting up conv0
I0428 19:52:48.702337 27630 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:48.702342 27630 net.cpp:139] Memory required for data: 938240
I0428 19:52:48.702381 27630 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:48.702396 27630 net.cpp:86] Creating Layer pool0
I0428 19:52:48.702402 27630 net.cpp:408] pool0 <- conv0
I0428 19:52:48.702409 27630 net.cpp:382] pool0 -> pool0
I0428 19:52:48.702464 27630 net.cpp:124] Setting up pool0
I0428 19:52:48.702473 27630 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:48.702477 27630 net.cpp:139] Memory required for data: 1122560
I0428 19:52:48.702481 27630 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:48.702493 27630 net.cpp:86] Creating Layer conv1
I0428 19:52:48.702497 27630 net.cpp:408] conv1 <- pool0
I0428 19:52:48.702503 27630 net.cpp:382] conv1 -> conv1
I0428 19:52:48.705718 27630 net.cpp:124] Setting up conv1
I0428 19:52:48.705736 27630 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:48.705740 27630 net.cpp:139] Memory required for data: 1941760
I0428 19:52:48.705750 27630 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:48.705760 27630 net.cpp:86] Creating Layer pool1
I0428 19:52:48.705765 27630 net.cpp:408] pool1 <- conv1
I0428 19:52:48.705770 27630 net.cpp:382] pool1 -> pool1
I0428 19:52:48.705816 27630 net.cpp:124] Setting up pool1
I0428 19:52:48.705823 27630 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:48.705827 27630 net.cpp:139] Memory required for data: 2146560
I0428 19:52:48.705831 27630 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:48.705839 27630 net.cpp:86] Creating Layer ip1
I0428 19:52:48.705843 27630 net.cpp:408] ip1 <- pool1
I0428 19:52:48.705848 27630 net.cpp:382] ip1 -> ip1
I0428 19:52:48.706095 27630 net.cpp:124] Setting up ip1
I0428 19:52:48.706104 27630 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:48.706107 27630 net.cpp:139] Memory required for data: 2152960
I0428 19:52:48.706116 27630 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:48.706122 27630 net.cpp:86] Creating Layer relu1
I0428 19:52:48.706126 27630 net.cpp:408] relu1 <- ip1
I0428 19:52:48.706131 27630 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:48.706334 27630 net.cpp:124] Setting up relu1
I0428 19:52:48.706344 27630 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:48.706347 27630 net.cpp:139] Memory required for data: 2159360
I0428 19:52:48.706351 27630 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:48.706358 27630 net.cpp:86] Creating Layer ip2
I0428 19:52:48.706362 27630 net.cpp:408] ip2 <- ip1
I0428 19:52:48.706368 27630 net.cpp:382] ip2 -> ip2
I0428 19:52:48.706480 27630 net.cpp:124] Setting up ip2
I0428 19:52:48.706488 27630 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:48.706492 27630 net.cpp:139] Memory required for data: 2161920
I0428 19:52:48.706498 27630 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:48.706506 27630 net.cpp:86] Creating Layer relu2
I0428 19:52:48.706509 27630 net.cpp:408] relu2 <- ip2
I0428 19:52:48.706514 27630 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:48.707360 27630 net.cpp:124] Setting up relu2
I0428 19:52:48.707376 27630 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:48.707381 27630 net.cpp:139] Memory required for data: 2164480
I0428 19:52:48.707384 27630 layer_factory.hpp:77] Creating layer loss
I0428 19:52:48.707391 27630 net.cpp:86] Creating Layer loss
I0428 19:52:48.707396 27630 net.cpp:408] loss <- ip2
I0428 19:52:48.707401 27630 net.cpp:408] loss <- label
I0428 19:52:48.707407 27630 net.cpp:382] loss -> loss
I0428 19:52:48.707430 27630 layer_factory.hpp:77] Creating layer loss
I0428 19:52:48.707720 27630 net.cpp:124] Setting up loss
I0428 19:52:48.707731 27630 net.cpp:131] Top shape: (1)
I0428 19:52:48.707734 27630 net.cpp:134]     with loss weight 1
I0428 19:52:48.707752 27630 net.cpp:139] Memory required for data: 2164484
I0428 19:52:48.707756 27630 net.cpp:200] loss needs backward computation.
I0428 19:52:48.707762 27630 net.cpp:200] relu2 needs backward computation.
I0428 19:52:48.707765 27630 net.cpp:200] ip2 needs backward computation.
I0428 19:52:48.707768 27630 net.cpp:200] relu1 needs backward computation.
I0428 19:52:48.707772 27630 net.cpp:200] ip1 needs backward computation.
I0428 19:52:48.707787 27630 net.cpp:200] pool1 needs backward computation.
I0428 19:52:48.707792 27630 net.cpp:200] conv1 needs backward computation.
I0428 19:52:48.707795 27630 net.cpp:200] pool0 needs backward computation.
I0428 19:52:48.707799 27630 net.cpp:200] conv0 needs backward computation.
I0428 19:52:48.707803 27630 net.cpp:202] mnist does not need backward computation.
I0428 19:52:48.707808 27630 net.cpp:244] This network produces output loss
I0428 19:52:48.707818 27630 net.cpp:257] Network initialization done.
I0428 19:52:48.708158 27630 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test671.prototxt
I0428 19:52:48.708189 27630 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:48.708288 27630 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:48.708361 27630 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:48.708422 27630 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:48.708436 27630 net.cpp:86] Creating Layer mnist
I0428 19:52:48.708442 27630 net.cpp:382] mnist -> data
I0428 19:52:48.708451 27630 net.cpp:382] mnist -> label
I0428 19:52:48.708549 27630 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:48.710752 27630 net.cpp:124] Setting up mnist
I0428 19:52:48.710780 27630 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:48.710786 27630 net.cpp:131] Top shape: 100 (100)
I0428 19:52:48.710790 27630 net.cpp:139] Memory required for data: 314000
I0428 19:52:48.710795 27630 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:48.710803 27630 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:48.710808 27630 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:48.710813 27630 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:48.710821 27630 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:48.710871 27630 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:48.710891 27630 net.cpp:131] Top shape: 100 (100)
I0428 19:52:48.710896 27630 net.cpp:131] Top shape: 100 (100)
I0428 19:52:48.710899 27630 net.cpp:139] Memory required for data: 314800
I0428 19:52:48.710902 27630 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:48.710912 27630 net.cpp:86] Creating Layer conv0
I0428 19:52:48.710916 27630 net.cpp:408] conv0 <- data
I0428 19:52:48.710922 27630 net.cpp:382] conv0 -> conv0
I0428 19:52:48.712851 27630 net.cpp:124] Setting up conv0
I0428 19:52:48.712868 27630 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:48.712874 27630 net.cpp:139] Memory required for data: 1466800
I0428 19:52:48.712885 27630 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:48.712893 27630 net.cpp:86] Creating Layer pool0
I0428 19:52:48.712898 27630 net.cpp:408] pool0 <- conv0
I0428 19:52:48.712903 27630 net.cpp:382] pool0 -> pool0
I0428 19:52:48.712942 27630 net.cpp:124] Setting up pool0
I0428 19:52:48.712949 27630 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:48.712952 27630 net.cpp:139] Memory required for data: 1754800
I0428 19:52:48.712956 27630 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:48.712965 27630 net.cpp:86] Creating Layer conv1
I0428 19:52:48.712970 27630 net.cpp:408] conv1 <- pool0
I0428 19:52:48.712975 27630 net.cpp:382] conv1 -> conv1
I0428 19:52:48.714694 27630 net.cpp:124] Setting up conv1
I0428 19:52:48.714710 27630 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:48.714715 27630 net.cpp:139] Memory required for data: 3034800
I0428 19:52:48.714725 27630 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:48.714733 27630 net.cpp:86] Creating Layer pool1
I0428 19:52:48.714737 27630 net.cpp:408] pool1 <- conv1
I0428 19:52:48.714743 27630 net.cpp:382] pool1 -> pool1
I0428 19:52:48.714785 27630 net.cpp:124] Setting up pool1
I0428 19:52:48.714792 27630 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:48.714795 27630 net.cpp:139] Memory required for data: 3354800
I0428 19:52:48.714799 27630 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:48.714807 27630 net.cpp:86] Creating Layer ip1
I0428 19:52:48.714810 27630 net.cpp:408] ip1 <- pool1
I0428 19:52:48.714817 27630 net.cpp:382] ip1 -> ip1
I0428 19:52:48.715065 27630 net.cpp:124] Setting up ip1
I0428 19:52:48.715075 27630 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:48.715078 27630 net.cpp:139] Memory required for data: 3364800
I0428 19:52:48.715086 27630 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:48.715092 27630 net.cpp:86] Creating Layer relu1
I0428 19:52:48.715097 27630 net.cpp:408] relu1 <- ip1
I0428 19:52:48.715102 27630 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:48.715283 27630 net.cpp:124] Setting up relu1
I0428 19:52:48.715294 27630 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:48.715298 27630 net.cpp:139] Memory required for data: 3374800
I0428 19:52:48.715303 27630 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:48.715311 27630 net.cpp:86] Creating Layer ip2
I0428 19:52:48.715314 27630 net.cpp:408] ip2 <- ip1
I0428 19:52:48.715324 27630 net.cpp:382] ip2 -> ip2
I0428 19:52:48.715451 27630 net.cpp:124] Setting up ip2
I0428 19:52:48.715459 27630 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:48.715462 27630 net.cpp:139] Memory required for data: 3378800
I0428 19:52:48.715469 27630 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:48.715474 27630 net.cpp:86] Creating Layer relu2
I0428 19:52:48.715478 27630 net.cpp:408] relu2 <- ip2
I0428 19:52:48.715483 27630 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:48.715762 27630 net.cpp:124] Setting up relu2
I0428 19:52:48.715775 27630 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:48.715778 27630 net.cpp:139] Memory required for data: 3382800
I0428 19:52:48.715781 27630 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:52:48.715788 27630 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:52:48.715792 27630 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:52:48.715797 27630 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:52:48.715816 27630 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:52:48.715860 27630 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:52:48.715867 27630 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:48.715872 27630 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:48.715874 27630 net.cpp:139] Memory required for data: 3390800
I0428 19:52:48.715878 27630 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:48.715883 27630 net.cpp:86] Creating Layer accuracy
I0428 19:52:48.715888 27630 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:52:48.715893 27630 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:48.715898 27630 net.cpp:382] accuracy -> accuracy
I0428 19:52:48.715906 27630 net.cpp:124] Setting up accuracy
I0428 19:52:48.715911 27630 net.cpp:131] Top shape: (1)
I0428 19:52:48.715914 27630 net.cpp:139] Memory required for data: 3390804
I0428 19:52:48.715917 27630 layer_factory.hpp:77] Creating layer loss
I0428 19:52:48.715924 27630 net.cpp:86] Creating Layer loss
I0428 19:52:48.715927 27630 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:52:48.715931 27630 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:48.715936 27630 net.cpp:382] loss -> loss
I0428 19:52:48.715943 27630 layer_factory.hpp:77] Creating layer loss
I0428 19:52:48.716238 27630 net.cpp:124] Setting up loss
I0428 19:52:48.716248 27630 net.cpp:131] Top shape: (1)
I0428 19:52:48.716253 27630 net.cpp:134]     with loss weight 1
I0428 19:52:48.716259 27630 net.cpp:139] Memory required for data: 3390808
I0428 19:52:48.716264 27630 net.cpp:200] loss needs backward computation.
I0428 19:52:48.716270 27630 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:48.716274 27630 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:52:48.716279 27630 net.cpp:200] relu2 needs backward computation.
I0428 19:52:48.716281 27630 net.cpp:200] ip2 needs backward computation.
I0428 19:52:48.716285 27630 net.cpp:200] relu1 needs backward computation.
I0428 19:52:48.716289 27630 net.cpp:200] ip1 needs backward computation.
I0428 19:52:48.716292 27630 net.cpp:200] pool1 needs backward computation.
I0428 19:52:48.716302 27630 net.cpp:200] conv1 needs backward computation.
I0428 19:52:48.716306 27630 net.cpp:200] pool0 needs backward computation.
I0428 19:52:48.716310 27630 net.cpp:200] conv0 needs backward computation.
I0428 19:52:48.716315 27630 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:48.716318 27630 net.cpp:202] mnist does not need backward computation.
I0428 19:52:48.716322 27630 net.cpp:244] This network produces output accuracy
I0428 19:52:48.716326 27630 net.cpp:244] This network produces output loss
I0428 19:52:48.716339 27630 net.cpp:257] Network initialization done.
I0428 19:52:48.716382 27630 solver.cpp:56] Solver scaffolding done.
I0428 19:52:48.716723 27630 caffe.cpp:248] Starting Optimization
I0428 19:52:48.716730 27630 solver.cpp:273] Solving LeNet
I0428 19:52:48.716734 27630 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:48.717005 27630 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:48.721951 27630 blocking_queue.cpp:49] Waiting for data
I0428 19:52:48.793587 27637 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:48.794060 27630 solver.cpp:398]     Test net output #0: accuracy = 0.1268
I0428 19:52:48.794082 27630 solver.cpp:398]     Test net output #1: loss = 2.30604 (* 1 = 2.30604 loss)
I0428 19:52:48.797170 27630 solver.cpp:219] Iteration 0 (0 iter/s, 0.0804031s/100 iters), loss = 2.28673
I0428 19:52:48.797195 27630 solver.cpp:238]     Train net output #0: loss = 2.28673 (* 1 = 2.28673 loss)
I0428 19:52:48.797207 27630 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:48.894336 27630 solver.cpp:219] Iteration 100 (1029.57 iter/s, 0.0971275s/100 iters), loss = 0.426806
I0428 19:52:48.894362 27630 solver.cpp:238]     Train net output #0: loss = 0.426806 (* 1 = 0.426806 loss)
I0428 19:52:48.894369 27630 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:48.990159 27630 solver.cpp:219] Iteration 200 (1043.98 iter/s, 0.095787s/100 iters), loss = 0.702691
I0428 19:52:48.990196 27630 solver.cpp:238]     Train net output #0: loss = 0.702691 (* 1 = 0.702691 loss)
I0428 19:52:48.990202 27630 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:49.102746 27630 solver.cpp:219] Iteration 300 (888.576 iter/s, 0.11254s/100 iters), loss = 0.40402
I0428 19:52:49.102784 27630 solver.cpp:238]     Train net output #0: loss = 0.40402 (* 1 = 0.40402 loss)
I0428 19:52:49.102790 27630 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:49.206919 27630 solver.cpp:219] Iteration 400 (960.286 iter/s, 0.104136s/100 iters), loss = 0.315222
I0428 19:52:49.206964 27630 solver.cpp:238]     Train net output #0: loss = 0.315222 (* 1 = 0.315222 loss)
I0428 19:52:49.206974 27630 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:49.314551 27630 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:49.389765 27637 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:49.390257 27630 solver.cpp:398]     Test net output #0: accuracy = 0.8662
I0428 19:52:49.390282 27630 solver.cpp:398]     Test net output #1: loss = 0.359257 (* 1 = 0.359257 loss)
I0428 19:52:49.391340 27630 solver.cpp:219] Iteration 500 (542.408 iter/s, 0.184363s/100 iters), loss = 0.361597
I0428 19:52:49.391379 27630 solver.cpp:238]     Train net output #0: loss = 0.361597 (* 1 = 0.361597 loss)
I0428 19:52:49.391396 27630 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:49.493880 27630 solver.cpp:219] Iteration 600 (975.668 iter/s, 0.102494s/100 iters), loss = 0.438017
I0428 19:52:49.493906 27630 solver.cpp:238]     Train net output #0: loss = 0.438017 (* 1 = 0.438017 loss)
I0428 19:52:49.493911 27630 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:49.604156 27630 solver.cpp:219] Iteration 700 (907.139 iter/s, 0.110237s/100 iters), loss = 0.239104
I0428 19:52:49.604190 27630 solver.cpp:238]     Train net output #0: loss = 0.239104 (* 1 = 0.239104 loss)
I0428 19:52:49.604199 27630 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:49.712489 27630 solver.cpp:219] Iteration 800 (923.559 iter/s, 0.108277s/100 iters), loss = 0.509175
I0428 19:52:49.712525 27630 solver.cpp:238]     Train net output #0: loss = 0.509175 (* 1 = 0.509175 loss)
I0428 19:52:49.712534 27630 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:49.821128 27630 solver.cpp:219] Iteration 900 (920.875 iter/s, 0.108592s/100 iters), loss = 0.628541
I0428 19:52:49.821163 27630 solver.cpp:238]     Train net output #0: loss = 0.628541 (* 1 = 0.628541 loss)
I0428 19:52:49.821171 27630 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:49.855576 27636 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:49.925096 27630 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:49.926467 27630 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:49.927309 27630 solver.cpp:311] Iteration 1000, loss = 0.271653
I0428 19:52:49.927335 27630 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:50.029033 27637 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:50.029697 27630 solver.cpp:398]     Test net output #0: accuracy = 0.8749
I0428 19:52:50.029727 27630 solver.cpp:398]     Test net output #1: loss = 0.313821 (* 1 = 0.313821 loss)
I0428 19:52:50.029736 27630 solver.cpp:316] Optimization Done.
I0428 19:52:50.029742 27630 caffe.cpp:259] Optimization Done.
