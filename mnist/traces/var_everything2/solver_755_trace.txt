I0428 19:56:17.955775 28403 caffe.cpp:218] Using GPUs 0
I0428 19:56:17.993738 28403 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:18.452044 28403 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test755.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:18.452210 28403 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test755.prototxt
I0428 19:56:18.452728 28403 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:18.452765 28403 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:18.452931 28403 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:18.453011 28403 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:18.453097 28403 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:18.453117 28403 net.cpp:86] Creating Layer mnist
I0428 19:56:18.453125 28403 net.cpp:382] mnist -> data
I0428 19:56:18.453143 28403 net.cpp:382] mnist -> label
I0428 19:56:18.454121 28403 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:18.456142 28403 net.cpp:124] Setting up mnist
I0428 19:56:18.456172 28403 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:18.456177 28403 net.cpp:131] Top shape: 64 (64)
I0428 19:56:18.456181 28403 net.cpp:139] Memory required for data: 200960
I0428 19:56:18.456187 28403 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:18.456302 28403 net.cpp:86] Creating Layer conv0
I0428 19:56:18.456365 28403 net.cpp:408] conv0 <- data
I0428 19:56:18.456390 28403 net.cpp:382] conv0 -> conv0
I0428 19:56:18.775476 28403 net.cpp:124] Setting up conv0
I0428 19:56:18.775508 28403 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:18.775514 28403 net.cpp:139] Memory required for data: 1675520
I0428 19:56:18.775532 28403 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:18.775545 28403 net.cpp:86] Creating Layer pool0
I0428 19:56:18.775550 28403 net.cpp:408] pool0 <- conv0
I0428 19:56:18.775557 28403 net.cpp:382] pool0 -> pool0
I0428 19:56:18.775611 28403 net.cpp:124] Setting up pool0
I0428 19:56:18.775617 28403 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:18.775621 28403 net.cpp:139] Memory required for data: 2044160
I0428 19:56:18.775624 28403 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:18.775637 28403 net.cpp:86] Creating Layer conv1
I0428 19:56:18.775641 28403 net.cpp:408] conv1 <- pool0
I0428 19:56:18.775647 28403 net.cpp:382] conv1 -> conv1
I0428 19:56:18.777777 28403 net.cpp:124] Setting up conv1
I0428 19:56:18.777794 28403 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:18.777799 28403 net.cpp:139] Memory required for data: 2076928
I0428 19:56:18.777809 28403 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:18.777818 28403 net.cpp:86] Creating Layer pool1
I0428 19:56:18.777822 28403 net.cpp:408] pool1 <- conv1
I0428 19:56:18.777828 28403 net.cpp:382] pool1 -> pool1
I0428 19:56:18.777873 28403 net.cpp:124] Setting up pool1
I0428 19:56:18.777878 28403 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:18.777882 28403 net.cpp:139] Memory required for data: 2085120
I0428 19:56:18.777886 28403 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:18.777894 28403 net.cpp:86] Creating Layer ip1
I0428 19:56:18.777897 28403 net.cpp:408] ip1 <- pool1
I0428 19:56:18.777904 28403 net.cpp:382] ip1 -> ip1
I0428 19:56:18.778017 28403 net.cpp:124] Setting up ip1
I0428 19:56:18.778026 28403 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:18.778029 28403 net.cpp:139] Memory required for data: 2087680
I0428 19:56:18.778038 28403 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:18.778044 28403 net.cpp:86] Creating Layer relu1
I0428 19:56:18.778048 28403 net.cpp:408] relu1 <- ip1
I0428 19:56:18.778053 28403 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:18.778244 28403 net.cpp:124] Setting up relu1
I0428 19:56:18.778254 28403 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:18.778257 28403 net.cpp:139] Memory required for data: 2090240
I0428 19:56:18.778261 28403 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:18.778268 28403 net.cpp:86] Creating Layer ip2
I0428 19:56:18.778272 28403 net.cpp:408] ip2 <- ip1
I0428 19:56:18.778278 28403 net.cpp:382] ip2 -> ip2
I0428 19:56:18.778386 28403 net.cpp:124] Setting up ip2
I0428 19:56:18.778394 28403 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:18.778398 28403 net.cpp:139] Memory required for data: 2092800
I0428 19:56:18.778404 28403 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:18.778411 28403 net.cpp:86] Creating Layer relu2
I0428 19:56:18.778415 28403 net.cpp:408] relu2 <- ip2
I0428 19:56:18.778419 28403 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:18.779250 28403 net.cpp:124] Setting up relu2
I0428 19:56:18.779264 28403 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:18.779269 28403 net.cpp:139] Memory required for data: 2095360
I0428 19:56:18.779274 28403 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:18.779283 28403 net.cpp:86] Creating Layer ip3
I0428 19:56:18.779286 28403 net.cpp:408] ip3 <- ip2
I0428 19:56:18.779292 28403 net.cpp:382] ip3 -> ip3
I0428 19:56:18.779407 28403 net.cpp:124] Setting up ip3
I0428 19:56:18.779415 28403 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:18.779419 28403 net.cpp:139] Memory required for data: 2097920
I0428 19:56:18.779429 28403 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:18.779435 28403 net.cpp:86] Creating Layer relu3
I0428 19:56:18.779438 28403 net.cpp:408] relu3 <- ip3
I0428 19:56:18.779443 28403 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:18.779637 28403 net.cpp:124] Setting up relu3
I0428 19:56:18.779647 28403 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:18.779651 28403 net.cpp:139] Memory required for data: 2100480
I0428 19:56:18.779654 28403 layer_factory.hpp:77] Creating layer loss
I0428 19:56:18.779662 28403 net.cpp:86] Creating Layer loss
I0428 19:56:18.779666 28403 net.cpp:408] loss <- ip3
I0428 19:56:18.779670 28403 net.cpp:408] loss <- label
I0428 19:56:18.779677 28403 net.cpp:382] loss -> loss
I0428 19:56:18.779698 28403 layer_factory.hpp:77] Creating layer loss
I0428 19:56:18.779953 28403 net.cpp:124] Setting up loss
I0428 19:56:18.779964 28403 net.cpp:131] Top shape: (1)
I0428 19:56:18.779968 28403 net.cpp:134]     with loss weight 1
I0428 19:56:18.779984 28403 net.cpp:139] Memory required for data: 2100484
I0428 19:56:18.779989 28403 net.cpp:200] loss needs backward computation.
I0428 19:56:18.779994 28403 net.cpp:200] relu3 needs backward computation.
I0428 19:56:18.779996 28403 net.cpp:200] ip3 needs backward computation.
I0428 19:56:18.780000 28403 net.cpp:200] relu2 needs backward computation.
I0428 19:56:18.780004 28403 net.cpp:200] ip2 needs backward computation.
I0428 19:56:18.780007 28403 net.cpp:200] relu1 needs backward computation.
I0428 19:56:18.780010 28403 net.cpp:200] ip1 needs backward computation.
I0428 19:56:18.780014 28403 net.cpp:200] pool1 needs backward computation.
I0428 19:56:18.780017 28403 net.cpp:200] conv1 needs backward computation.
I0428 19:56:18.780021 28403 net.cpp:200] pool0 needs backward computation.
I0428 19:56:18.780025 28403 net.cpp:200] conv0 needs backward computation.
I0428 19:56:18.780030 28403 net.cpp:202] mnist does not need backward computation.
I0428 19:56:18.780032 28403 net.cpp:244] This network produces output loss
I0428 19:56:18.780043 28403 net.cpp:257] Network initialization done.
I0428 19:56:18.780424 28403 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test755.prototxt
I0428 19:56:18.780455 28403 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:18.780561 28403 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:18.780654 28403 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:18.780710 28403 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:18.780725 28403 net.cpp:86] Creating Layer mnist
I0428 19:56:18.780731 28403 net.cpp:382] mnist -> data
I0428 19:56:18.780740 28403 net.cpp:382] mnist -> label
I0428 19:56:18.780846 28403 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:18.783013 28403 net.cpp:124] Setting up mnist
I0428 19:56:18.783028 28403 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:18.783035 28403 net.cpp:131] Top shape: 100 (100)
I0428 19:56:18.783040 28403 net.cpp:139] Memory required for data: 314000
I0428 19:56:18.783044 28403 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:18.783056 28403 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:18.783061 28403 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:18.783066 28403 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:18.783074 28403 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:18.783131 28403 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:18.783141 28403 net.cpp:131] Top shape: 100 (100)
I0428 19:56:18.783146 28403 net.cpp:131] Top shape: 100 (100)
I0428 19:56:18.783150 28403 net.cpp:139] Memory required for data: 314800
I0428 19:56:18.783154 28403 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:18.783164 28403 net.cpp:86] Creating Layer conv0
I0428 19:56:18.783167 28403 net.cpp:408] conv0 <- data
I0428 19:56:18.783174 28403 net.cpp:382] conv0 -> conv0
I0428 19:56:18.785095 28403 net.cpp:124] Setting up conv0
I0428 19:56:18.785112 28403 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:18.785117 28403 net.cpp:139] Memory required for data: 2618800
I0428 19:56:18.785128 28403 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:18.785135 28403 net.cpp:86] Creating Layer pool0
I0428 19:56:18.785140 28403 net.cpp:408] pool0 <- conv0
I0428 19:56:18.785145 28403 net.cpp:382] pool0 -> pool0
I0428 19:56:18.785188 28403 net.cpp:124] Setting up pool0
I0428 19:56:18.785194 28403 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:18.785198 28403 net.cpp:139] Memory required for data: 3194800
I0428 19:56:18.785202 28403 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:18.785212 28403 net.cpp:86] Creating Layer conv1
I0428 19:56:18.785215 28403 net.cpp:408] conv1 <- pool0
I0428 19:56:18.785221 28403 net.cpp:382] conv1 -> conv1
I0428 19:56:18.787477 28403 net.cpp:124] Setting up conv1
I0428 19:56:18.787494 28403 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:18.787498 28403 net.cpp:139] Memory required for data: 3246000
I0428 19:56:18.787509 28403 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:18.787518 28403 net.cpp:86] Creating Layer pool1
I0428 19:56:18.787529 28403 net.cpp:408] pool1 <- conv1
I0428 19:56:18.787536 28403 net.cpp:382] pool1 -> pool1
I0428 19:56:18.787586 28403 net.cpp:124] Setting up pool1
I0428 19:56:18.787593 28403 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:18.787596 28403 net.cpp:139] Memory required for data: 3258800
I0428 19:56:18.787600 28403 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:18.787607 28403 net.cpp:86] Creating Layer ip1
I0428 19:56:18.787611 28403 net.cpp:408] ip1 <- pool1
I0428 19:56:18.787616 28403 net.cpp:382] ip1 -> ip1
I0428 19:56:18.787751 28403 net.cpp:124] Setting up ip1
I0428 19:56:18.787760 28403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:18.787776 28403 net.cpp:139] Memory required for data: 3262800
I0428 19:56:18.787786 28403 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:18.787792 28403 net.cpp:86] Creating Layer relu1
I0428 19:56:18.787796 28403 net.cpp:408] relu1 <- ip1
I0428 19:56:18.787801 28403 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:18.787999 28403 net.cpp:124] Setting up relu1
I0428 19:56:18.788010 28403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:18.788014 28403 net.cpp:139] Memory required for data: 3266800
I0428 19:56:18.788018 28403 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:18.788028 28403 net.cpp:86] Creating Layer ip2
I0428 19:56:18.788031 28403 net.cpp:408] ip2 <- ip1
I0428 19:56:18.788038 28403 net.cpp:382] ip2 -> ip2
I0428 19:56:18.788149 28403 net.cpp:124] Setting up ip2
I0428 19:56:18.788158 28403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:18.788162 28403 net.cpp:139] Memory required for data: 3270800
I0428 19:56:18.788168 28403 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:18.788173 28403 net.cpp:86] Creating Layer relu2
I0428 19:56:18.788177 28403 net.cpp:408] relu2 <- ip2
I0428 19:56:18.788182 28403 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:18.788349 28403 net.cpp:124] Setting up relu2
I0428 19:56:18.788358 28403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:18.788375 28403 net.cpp:139] Memory required for data: 3274800
I0428 19:56:18.788379 28403 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:18.788386 28403 net.cpp:86] Creating Layer ip3
I0428 19:56:18.788390 28403 net.cpp:408] ip3 <- ip2
I0428 19:56:18.788396 28403 net.cpp:382] ip3 -> ip3
I0428 19:56:18.788502 28403 net.cpp:124] Setting up ip3
I0428 19:56:18.788509 28403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:18.788513 28403 net.cpp:139] Memory required for data: 3278800
I0428 19:56:18.788522 28403 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:18.788528 28403 net.cpp:86] Creating Layer relu3
I0428 19:56:18.788532 28403 net.cpp:408] relu3 <- ip3
I0428 19:56:18.788537 28403 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:18.789446 28403 net.cpp:124] Setting up relu3
I0428 19:56:18.789463 28403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:18.789469 28403 net.cpp:139] Memory required for data: 3282800
I0428 19:56:18.789472 28403 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:18.789479 28403 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:18.789482 28403 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:18.789489 28403 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:18.789496 28403 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:18.789547 28403 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:18.789558 28403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:18.789563 28403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:18.789567 28403 net.cpp:139] Memory required for data: 3290800
I0428 19:56:18.789572 28403 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:18.789577 28403 net.cpp:86] Creating Layer accuracy
I0428 19:56:18.789582 28403 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:18.789587 28403 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:18.789592 28403 net.cpp:382] accuracy -> accuracy
I0428 19:56:18.789600 28403 net.cpp:124] Setting up accuracy
I0428 19:56:18.789605 28403 net.cpp:131] Top shape: (1)
I0428 19:56:18.789608 28403 net.cpp:139] Memory required for data: 3290804
I0428 19:56:18.789613 28403 layer_factory.hpp:77] Creating layer loss
I0428 19:56:18.789618 28403 net.cpp:86] Creating Layer loss
I0428 19:56:18.789621 28403 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:18.789625 28403 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:18.789631 28403 net.cpp:382] loss -> loss
I0428 19:56:18.789644 28403 layer_factory.hpp:77] Creating layer loss
I0428 19:56:18.789903 28403 net.cpp:124] Setting up loss
I0428 19:56:18.789914 28403 net.cpp:131] Top shape: (1)
I0428 19:56:18.789918 28403 net.cpp:134]     with loss weight 1
I0428 19:56:18.789925 28403 net.cpp:139] Memory required for data: 3290808
I0428 19:56:18.789942 28403 net.cpp:200] loss needs backward computation.
I0428 19:56:18.789947 28403 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:18.789952 28403 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:18.789955 28403 net.cpp:200] relu3 needs backward computation.
I0428 19:56:18.789959 28403 net.cpp:200] ip3 needs backward computation.
I0428 19:56:18.789963 28403 net.cpp:200] relu2 needs backward computation.
I0428 19:56:18.789966 28403 net.cpp:200] ip2 needs backward computation.
I0428 19:56:18.789970 28403 net.cpp:200] relu1 needs backward computation.
I0428 19:56:18.789974 28403 net.cpp:200] ip1 needs backward computation.
I0428 19:56:18.789988 28403 net.cpp:200] pool1 needs backward computation.
I0428 19:56:18.789991 28403 net.cpp:200] conv1 needs backward computation.
I0428 19:56:18.789995 28403 net.cpp:200] pool0 needs backward computation.
I0428 19:56:18.789999 28403 net.cpp:200] conv0 needs backward computation.
I0428 19:56:18.790004 28403 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:18.790009 28403 net.cpp:202] mnist does not need backward computation.
I0428 19:56:18.790012 28403 net.cpp:244] This network produces output accuracy
I0428 19:56:18.790016 28403 net.cpp:244] This network produces output loss
I0428 19:56:18.790029 28403 net.cpp:257] Network initialization done.
I0428 19:56:18.790078 28403 solver.cpp:56] Solver scaffolding done.
I0428 19:56:18.790490 28403 caffe.cpp:248] Starting Optimization
I0428 19:56:18.790498 28403 solver.cpp:273] Solving LeNet
I0428 19:56:18.790500 28403 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:18.791441 28403 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:18.795269 28403 blocking_queue.cpp:49] Waiting for data
I0428 19:56:18.865434 28410 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:18.865978 28403 solver.cpp:398]     Test net output #0: accuracy = 0.109
I0428 19:56:18.866003 28403 solver.cpp:398]     Test net output #1: loss = 2.29868 (* 1 = 2.29868 loss)
I0428 19:56:18.868693 28403 solver.cpp:219] Iteration 0 (-3.00186e-31 iter/s, 0.0781611s/100 iters), loss = 2.26767
I0428 19:56:18.868723 28403 solver.cpp:238]     Train net output #0: loss = 2.26767 (* 1 = 2.26767 loss)
I0428 19:56:18.868736 28403 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:18.947304 28403 solver.cpp:219] Iteration 100 (1272.74 iter/s, 0.0785705s/100 iters), loss = 1.56697
I0428 19:56:18.947335 28403 solver.cpp:238]     Train net output #0: loss = 1.56697 (* 1 = 1.56697 loss)
I0428 19:56:18.947343 28403 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:19.024025 28403 solver.cpp:219] Iteration 200 (1304.12 iter/s, 0.0766802s/100 iters), loss = 1.16673
I0428 19:56:19.024056 28403 solver.cpp:238]     Train net output #0: loss = 1.16673 (* 1 = 1.16673 loss)
I0428 19:56:19.024065 28403 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:19.101446 28403 solver.cpp:219] Iteration 300 (1292.33 iter/s, 0.0773798s/100 iters), loss = 0.869627
I0428 19:56:19.101476 28403 solver.cpp:238]     Train net output #0: loss = 0.869627 (* 1 = 0.869627 loss)
I0428 19:56:19.101485 28403 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:19.177693 28403 solver.cpp:219] Iteration 400 (1312.21 iter/s, 0.0762071s/100 iters), loss = 0.736766
I0428 19:56:19.177722 28403 solver.cpp:238]     Train net output #0: loss = 0.736766 (* 1 = 0.736766 loss)
I0428 19:56:19.177731 28403 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:19.253511 28403 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:19.306440 28410 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:19.306962 28403 solver.cpp:398]     Test net output #0: accuracy = 0.74
I0428 19:56:19.306987 28403 solver.cpp:398]     Test net output #1: loss = 0.749879 (* 1 = 0.749879 loss)
I0428 19:56:19.307793 28403 solver.cpp:219] Iteration 500 (768.88 iter/s, 0.130059s/100 iters), loss = 1.06856
I0428 19:56:19.307818 28403 solver.cpp:238]     Train net output #0: loss = 1.06856 (* 1 = 1.06856 loss)
I0428 19:56:19.307845 28403 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:19.383666 28403 solver.cpp:219] Iteration 600 (1318.59 iter/s, 0.0758385s/100 iters), loss = 0.696433
I0428 19:56:19.383694 28403 solver.cpp:238]     Train net output #0: loss = 0.696433 (* 1 = 0.696433 loss)
I0428 19:56:19.383702 28403 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:19.456377 28403 solver.cpp:219] Iteration 700 (1375.98 iter/s, 0.0726753s/100 iters), loss = 0.489253
I0428 19:56:19.456416 28403 solver.cpp:238]     Train net output #0: loss = 0.489253 (* 1 = 0.489253 loss)
I0428 19:56:19.456423 28403 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:19.545406 28403 solver.cpp:219] Iteration 800 (1123.74 iter/s, 0.0889887s/100 iters), loss = 0.528107
I0428 19:56:19.545460 28403 solver.cpp:238]     Train net output #0: loss = 0.528107 (* 1 = 0.528107 loss)
I0428 19:56:19.545475 28403 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:19.637809 28403 solver.cpp:219] Iteration 900 (1082.94 iter/s, 0.0923412s/100 iters), loss = 0.719297
I0428 19:56:19.637842 28403 solver.cpp:238]     Train net output #0: loss = 0.719297 (* 1 = 0.719297 loss)
I0428 19:56:19.637851 28403 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:19.664158 28409 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:19.714546 28403 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:19.715252 28403 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:19.715703 28403 solver.cpp:311] Iteration 1000, loss = 0.494783
I0428 19:56:19.715720 28403 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:19.769273 28410 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:19.769791 28403 solver.cpp:398]     Test net output #0: accuracy = 0.8096
I0428 19:56:19.769815 28403 solver.cpp:398]     Test net output #1: loss = 0.519746 (* 1 = 0.519746 loss)
I0428 19:56:19.769822 28403 solver.cpp:316] Optimization Done.
I0428 19:56:19.769826 28403 caffe.cpp:259] Optimization Done.
