I0428 19:30:47.742851 22412 caffe.cpp:218] Using GPUs 0
I0428 19:30:47.785130 22412 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:48.292749 22412 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test102.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:48.292917 22412 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test102.prototxt
I0428 19:30:48.293270 22412 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:48.293290 22412 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:48.293382 22412 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:48.293475 22412 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:48.293601 22412 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:48.293630 22412 net.cpp:86] Creating Layer mnist
I0428 19:30:48.293642 22412 net.cpp:382] mnist -> data
I0428 19:30:48.293673 22412 net.cpp:382] mnist -> label
I0428 19:30:48.294868 22412 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:48.297487 22412 net.cpp:124] Setting up mnist
I0428 19:30:48.297508 22412 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:48.297518 22412 net.cpp:131] Top shape: 64 (64)
I0428 19:30:48.297524 22412 net.cpp:139] Memory required for data: 200960
I0428 19:30:48.297535 22412 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:48.297557 22412 net.cpp:86] Creating Layer conv0
I0428 19:30:48.297569 22412 net.cpp:408] conv0 <- data
I0428 19:30:48.297585 22412 net.cpp:382] conv0 -> conv0
I0428 19:30:48.583919 22412 net.cpp:124] Setting up conv0
I0428 19:30:48.583950 22412 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:48.583956 22412 net.cpp:139] Memory required for data: 938240
I0428 19:30:48.583977 22412 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:48.583997 22412 net.cpp:86] Creating Layer pool0
I0428 19:30:48.584023 22412 net.cpp:408] pool0 <- conv0
I0428 19:30:48.584034 22412 net.cpp:382] pool0 -> pool0
I0428 19:30:48.584090 22412 net.cpp:124] Setting up pool0
I0428 19:30:48.584100 22412 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:48.584106 22412 net.cpp:139] Memory required for data: 1122560
I0428 19:30:48.584111 22412 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:48.584125 22412 net.cpp:86] Creating Layer ip1
I0428 19:30:48.584133 22412 net.cpp:408] ip1 <- pool0
I0428 19:30:48.584142 22412 net.cpp:382] ip1 -> ip1
I0428 19:30:48.584364 22412 net.cpp:124] Setting up ip1
I0428 19:30:48.584374 22412 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:48.584380 22412 net.cpp:139] Memory required for data: 1128960
I0428 19:30:48.584393 22412 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:48.584403 22412 net.cpp:86] Creating Layer relu1
I0428 19:30:48.584413 22412 net.cpp:408] relu1 <- ip1
I0428 19:30:48.584420 22412 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:48.584596 22412 net.cpp:124] Setting up relu1
I0428 19:30:48.584609 22412 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:48.584614 22412 net.cpp:139] Memory required for data: 1135360
I0428 19:30:48.584619 22412 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:48.584630 22412 net.cpp:86] Creating Layer ip2
I0428 19:30:48.584636 22412 net.cpp:408] ip2 <- ip1
I0428 19:30:48.584650 22412 net.cpp:382] ip2 -> ip2
I0428 19:30:48.584758 22412 net.cpp:124] Setting up ip2
I0428 19:30:48.584766 22412 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:48.584772 22412 net.cpp:139] Memory required for data: 1141760
I0428 19:30:48.584785 22412 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:48.584794 22412 net.cpp:86] Creating Layer relu2
I0428 19:30:48.584800 22412 net.cpp:408] relu2 <- ip2
I0428 19:30:48.584808 22412 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:48.585589 22412 net.cpp:124] Setting up relu2
I0428 19:30:48.585604 22412 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:48.585610 22412 net.cpp:139] Memory required for data: 1148160
I0428 19:30:48.585618 22412 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:48.585628 22412 net.cpp:86] Creating Layer ip3
I0428 19:30:48.585634 22412 net.cpp:408] ip3 <- ip2
I0428 19:30:48.585646 22412 net.cpp:382] ip3 -> ip3
I0428 19:30:48.585757 22412 net.cpp:124] Setting up ip3
I0428 19:30:48.585768 22412 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:48.585773 22412 net.cpp:139] Memory required for data: 1150720
I0428 19:30:48.585783 22412 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:48.585794 22412 net.cpp:86] Creating Layer relu3
I0428 19:30:48.585799 22412 net.cpp:408] relu3 <- ip3
I0428 19:30:48.585809 22412 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:48.585988 22412 net.cpp:124] Setting up relu3
I0428 19:30:48.585999 22412 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:48.586004 22412 net.cpp:139] Memory required for data: 1153280
I0428 19:30:48.586010 22412 layer_factory.hpp:77] Creating layer loss
I0428 19:30:48.586020 22412 net.cpp:86] Creating Layer loss
I0428 19:30:48.586026 22412 net.cpp:408] loss <- ip3
I0428 19:30:48.586033 22412 net.cpp:408] loss <- label
I0428 19:30:48.586042 22412 net.cpp:382] loss -> loss
I0428 19:30:48.586066 22412 layer_factory.hpp:77] Creating layer loss
I0428 19:30:48.586340 22412 net.cpp:124] Setting up loss
I0428 19:30:48.586352 22412 net.cpp:131] Top shape: (1)
I0428 19:30:48.586359 22412 net.cpp:134]     with loss weight 1
I0428 19:30:48.586380 22412 net.cpp:139] Memory required for data: 1153284
I0428 19:30:48.586385 22412 net.cpp:200] loss needs backward computation.
I0428 19:30:48.586392 22412 net.cpp:200] relu3 needs backward computation.
I0428 19:30:48.586398 22412 net.cpp:200] ip3 needs backward computation.
I0428 19:30:48.586403 22412 net.cpp:200] relu2 needs backward computation.
I0428 19:30:48.586408 22412 net.cpp:200] ip2 needs backward computation.
I0428 19:30:48.586414 22412 net.cpp:200] relu1 needs backward computation.
I0428 19:30:48.586419 22412 net.cpp:200] ip1 needs backward computation.
I0428 19:30:48.586450 22412 net.cpp:200] pool0 needs backward computation.
I0428 19:30:48.586457 22412 net.cpp:200] conv0 needs backward computation.
I0428 19:30:48.586462 22412 net.cpp:202] mnist does not need backward computation.
I0428 19:30:48.586467 22412 net.cpp:244] This network produces output loss
I0428 19:30:48.586483 22412 net.cpp:257] Network initialization done.
I0428 19:30:48.586784 22412 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test102.prototxt
I0428 19:30:48.586819 22412 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:48.586910 22412 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:48.587023 22412 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:48.587085 22412 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:48.587105 22412 net.cpp:86] Creating Layer mnist
I0428 19:30:48.587115 22412 net.cpp:382] mnist -> data
I0428 19:30:48.587126 22412 net.cpp:382] mnist -> label
I0428 19:30:48.587255 22412 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:48.589349 22412 net.cpp:124] Setting up mnist
I0428 19:30:48.589365 22412 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:48.589372 22412 net.cpp:131] Top shape: 100 (100)
I0428 19:30:48.589377 22412 net.cpp:139] Memory required for data: 314000
I0428 19:30:48.589383 22412 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:48.589401 22412 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:48.589406 22412 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:48.589416 22412 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:48.589428 22412 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:48.589500 22412 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:48.589509 22412 net.cpp:131] Top shape: 100 (100)
I0428 19:30:48.589516 22412 net.cpp:131] Top shape: 100 (100)
I0428 19:30:48.589521 22412 net.cpp:139] Memory required for data: 314800
I0428 19:30:48.589537 22412 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:48.589553 22412 net.cpp:86] Creating Layer conv0
I0428 19:30:48.589560 22412 net.cpp:408] conv0 <- data
I0428 19:30:48.589570 22412 net.cpp:382] conv0 -> conv0
I0428 19:30:48.591078 22412 net.cpp:124] Setting up conv0
I0428 19:30:48.591097 22412 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:48.591104 22412 net.cpp:139] Memory required for data: 1466800
I0428 19:30:48.591119 22412 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:48.591128 22412 net.cpp:86] Creating Layer pool0
I0428 19:30:48.591135 22412 net.cpp:408] pool0 <- conv0
I0428 19:30:48.591145 22412 net.cpp:382] pool0 -> pool0
I0428 19:30:48.591207 22412 net.cpp:124] Setting up pool0
I0428 19:30:48.591215 22412 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:48.591222 22412 net.cpp:139] Memory required for data: 1754800
I0428 19:30:48.591228 22412 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:48.591241 22412 net.cpp:86] Creating Layer ip1
I0428 19:30:48.591248 22412 net.cpp:408] ip1 <- pool0
I0428 19:30:48.591260 22412 net.cpp:382] ip1 -> ip1
I0428 19:30:48.591542 22412 net.cpp:124] Setting up ip1
I0428 19:30:48.591553 22412 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:48.591559 22412 net.cpp:139] Memory required for data: 1764800
I0428 19:30:48.591574 22412 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:48.591584 22412 net.cpp:86] Creating Layer relu1
I0428 19:30:48.591590 22412 net.cpp:408] relu1 <- ip1
I0428 19:30:48.591599 22412 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:48.591800 22412 net.cpp:124] Setting up relu1
I0428 19:30:48.591812 22412 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:48.591832 22412 net.cpp:139] Memory required for data: 1774800
I0428 19:30:48.591837 22412 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:48.591847 22412 net.cpp:86] Creating Layer ip2
I0428 19:30:48.591852 22412 net.cpp:408] ip2 <- ip1
I0428 19:30:48.591863 22412 net.cpp:382] ip2 -> ip2
I0428 19:30:48.591974 22412 net.cpp:124] Setting up ip2
I0428 19:30:48.591984 22412 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:48.591989 22412 net.cpp:139] Memory required for data: 1784800
I0428 19:30:48.592001 22412 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:48.592011 22412 net.cpp:86] Creating Layer relu2
I0428 19:30:48.592021 22412 net.cpp:408] relu2 <- ip2
I0428 19:30:48.592028 22412 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:48.592877 22412 net.cpp:124] Setting up relu2
I0428 19:30:48.592892 22412 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:48.592898 22412 net.cpp:139] Memory required for data: 1794800
I0428 19:30:48.592905 22412 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:48.592919 22412 net.cpp:86] Creating Layer ip3
I0428 19:30:48.592926 22412 net.cpp:408] ip3 <- ip2
I0428 19:30:48.592936 22412 net.cpp:382] ip3 -> ip3
I0428 19:30:48.593104 22412 net.cpp:124] Setting up ip3
I0428 19:30:48.593116 22412 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:48.593122 22412 net.cpp:139] Memory required for data: 1798800
I0428 19:30:48.593132 22412 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:48.593142 22412 net.cpp:86] Creating Layer relu3
I0428 19:30:48.593150 22412 net.cpp:408] relu3 <- ip3
I0428 19:30:48.593158 22412 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:48.593359 22412 net.cpp:124] Setting up relu3
I0428 19:30:48.593370 22412 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:48.593377 22412 net.cpp:139] Memory required for data: 1802800
I0428 19:30:48.593382 22412 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:48.593391 22412 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:48.593397 22412 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:48.593405 22412 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:48.593415 22412 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:48.593458 22412 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:48.593466 22412 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:48.593474 22412 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:48.593490 22412 net.cpp:139] Memory required for data: 1810800
I0428 19:30:48.593508 22412 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:48.593518 22412 net.cpp:86] Creating Layer accuracy
I0428 19:30:48.593523 22412 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:48.593530 22412 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:48.593540 22412 net.cpp:382] accuracy -> accuracy
I0428 19:30:48.593554 22412 net.cpp:124] Setting up accuracy
I0428 19:30:48.593564 22412 net.cpp:131] Top shape: (1)
I0428 19:30:48.593569 22412 net.cpp:139] Memory required for data: 1810804
I0428 19:30:48.593574 22412 layer_factory.hpp:77] Creating layer loss
I0428 19:30:48.593582 22412 net.cpp:86] Creating Layer loss
I0428 19:30:48.593588 22412 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:48.593595 22412 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:48.593603 22412 net.cpp:382] loss -> loss
I0428 19:30:48.593614 22412 layer_factory.hpp:77] Creating layer loss
I0428 19:30:48.593883 22412 net.cpp:124] Setting up loss
I0428 19:30:48.593894 22412 net.cpp:131] Top shape: (1)
I0428 19:30:48.593899 22412 net.cpp:134]     with loss weight 1
I0428 19:30:48.593909 22412 net.cpp:139] Memory required for data: 1810808
I0428 19:30:48.593915 22412 net.cpp:200] loss needs backward computation.
I0428 19:30:48.593921 22412 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:48.593927 22412 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:48.593932 22412 net.cpp:200] relu3 needs backward computation.
I0428 19:30:48.593938 22412 net.cpp:200] ip3 needs backward computation.
I0428 19:30:48.593943 22412 net.cpp:200] relu2 needs backward computation.
I0428 19:30:48.593948 22412 net.cpp:200] ip2 needs backward computation.
I0428 19:30:48.593953 22412 net.cpp:200] relu1 needs backward computation.
I0428 19:30:48.593958 22412 net.cpp:200] ip1 needs backward computation.
I0428 19:30:48.593963 22412 net.cpp:200] pool0 needs backward computation.
I0428 19:30:48.593968 22412 net.cpp:200] conv0 needs backward computation.
I0428 19:30:48.593974 22412 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:48.593981 22412 net.cpp:202] mnist does not need backward computation.
I0428 19:30:48.593986 22412 net.cpp:244] This network produces output accuracy
I0428 19:30:48.593992 22412 net.cpp:244] This network produces output loss
I0428 19:30:48.594010 22412 net.cpp:257] Network initialization done.
I0428 19:30:48.594055 22412 solver.cpp:56] Solver scaffolding done.
I0428 19:30:48.594336 22412 caffe.cpp:248] Starting Optimization
I0428 19:30:48.594348 22412 solver.cpp:273] Solving LeNet
I0428 19:30:48.594353 22412 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:48.595193 22412 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:48.598991 22412 blocking_queue.cpp:49] Waiting for data
I0428 19:30:48.673050 22419 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:48.673476 22412 solver.cpp:398]     Test net output #0: accuracy = 0.095
I0428 19:30:48.673497 22412 solver.cpp:398]     Test net output #1: loss = 2.3127 (* 1 = 2.3127 loss)
I0428 19:30:48.675083 22412 solver.cpp:219] Iteration 0 (0 iter/s, 0.0807003s/100 iters), loss = 2.32225
I0428 19:30:48.675123 22412 solver.cpp:238]     Train net output #0: loss = 2.32225 (* 1 = 2.32225 loss)
I0428 19:30:48.675143 22412 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:48.734477 22412 solver.cpp:219] Iteration 100 (1685.07 iter/s, 0.0593447s/100 iters), loss = 0.759816
I0428 19:30:48.734530 22412 solver.cpp:238]     Train net output #0: loss = 0.759816 (* 1 = 0.759816 loss)
I0428 19:30:48.734545 22412 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:48.795956 22412 solver.cpp:219] Iteration 200 (1627.71 iter/s, 0.0614361s/100 iters), loss = 0.586969
I0428 19:30:48.795985 22412 solver.cpp:238]     Train net output #0: loss = 0.586969 (* 1 = 0.586969 loss)
I0428 19:30:48.796011 22412 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:48.854840 22412 solver.cpp:219] Iteration 300 (1699.26 iter/s, 0.0588493s/100 iters), loss = 0.62914
I0428 19:30:48.854882 22412 solver.cpp:238]     Train net output #0: loss = 0.62914 (* 1 = 0.62914 loss)
I0428 19:30:48.854907 22412 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:48.914206 22412 solver.cpp:219] Iteration 400 (1685.41 iter/s, 0.0593327s/100 iters), loss = 0.383364
I0428 19:30:48.914233 22412 solver.cpp:238]     Train net output #0: loss = 0.383364 (* 1 = 0.383364 loss)
I0428 19:30:48.914259 22412 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:48.973395 22412 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:49.049870 22419 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:49.050297 22412 solver.cpp:398]     Test net output #0: accuracy = 0.8354
I0428 19:30:49.050319 22412 solver.cpp:398]     Test net output #1: loss = 0.470415 (* 1 = 0.470415 loss)
I0428 19:30:49.050987 22412 solver.cpp:219] Iteration 500 (731.299 iter/s, 0.136743s/100 iters), loss = 0.55364
I0428 19:30:49.051014 22412 solver.cpp:238]     Train net output #0: loss = 0.55364 (* 1 = 0.55364 loss)
I0428 19:30:49.051031 22412 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:49.110482 22412 solver.cpp:219] Iteration 600 (1681.73 iter/s, 0.0594627s/100 iters), loss = 0.334531
I0428 19:30:49.110543 22412 solver.cpp:238]     Train net output #0: loss = 0.334531 (* 1 = 0.334531 loss)
I0428 19:30:49.110553 22412 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:49.170363 22412 solver.cpp:219] Iteration 700 (1671.73 iter/s, 0.0598183s/100 iters), loss = 0.779469
I0428 19:30:49.170390 22412 solver.cpp:238]     Train net output #0: loss = 0.779469 (* 1 = 0.779469 loss)
I0428 19:30:49.170400 22412 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:49.228143 22412 solver.cpp:219] Iteration 800 (1731.68 iter/s, 0.0577475s/100 iters), loss = 0.44987
I0428 19:30:49.228170 22412 solver.cpp:238]     Train net output #0: loss = 0.44987 (* 1 = 0.44987 loss)
I0428 19:30:49.228195 22412 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:49.286881 22412 solver.cpp:219] Iteration 900 (1703.44 iter/s, 0.0587049s/100 iters), loss = 0.545594
I0428 19:30:49.286908 22412 solver.cpp:238]     Train net output #0: loss = 0.545594 (* 1 = 0.545594 loss)
I0428 19:30:49.286933 22412 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:49.306675 22418 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:49.345005 22412 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:49.345799 22412 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:49.346377 22412 solver.cpp:311] Iteration 1000, loss = 0.496888
I0428 19:30:49.346401 22412 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:49.421313 22419 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:49.421741 22412 solver.cpp:398]     Test net output #0: accuracy = 0.8598
I0428 19:30:49.421764 22412 solver.cpp:398]     Test net output #1: loss = 0.378873 (* 1 = 0.378873 loss)
I0428 19:30:49.421772 22412 solver.cpp:316] Optimization Done.
I0428 19:30:49.421777 22412 caffe.cpp:259] Optimization Done.
