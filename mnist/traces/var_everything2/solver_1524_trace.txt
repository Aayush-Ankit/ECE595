I0428 20:29:33.631703  3553 caffe.cpp:218] Using GPUs 0
I0428 20:29:33.672829  3553 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:29:34.191215  3553 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1524.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:29:34.191386  3553 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1524.prototxt
I0428 20:29:34.191776  3553 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:29:34.191799  3553 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:29:34.191905  3553 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:29:34.192013  3553 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:34.192150  3553 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:29:34.192183  3553 net.cpp:86] Creating Layer mnist
I0428 20:29:34.192198  3553 net.cpp:382] mnist -> data
I0428 20:29:34.192227  3553 net.cpp:382] mnist -> label
I0428 20:29:34.193464  3553 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:29:34.195945  3553 net.cpp:124] Setting up mnist
I0428 20:29:34.195966  3553 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:29:34.195976  3553 net.cpp:131] Top shape: 64 (64)
I0428 20:29:34.195981  3553 net.cpp:139] Memory required for data: 200960
I0428 20:29:34.195992  3553 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:34.196017  3553 net.cpp:86] Creating Layer conv0
I0428 20:29:34.196028  3553 net.cpp:408] conv0 <- data
I0428 20:29:34.196048  3553 net.cpp:382] conv0 -> conv0
I0428 20:29:34.486428  3553 net.cpp:124] Setting up conv0
I0428 20:29:34.486464  3553 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:29:34.486470  3553 net.cpp:139] Memory required for data: 14946560
I0428 20:29:34.486523  3553 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:34.486547  3553 net.cpp:86] Creating Layer pool0
I0428 20:29:34.486557  3553 net.cpp:408] pool0 <- conv0
I0428 20:29:34.486568  3553 net.cpp:382] pool0 -> pool0
I0428 20:29:34.486634  3553 net.cpp:124] Setting up pool0
I0428 20:29:34.486645  3553 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:29:34.486651  3553 net.cpp:139] Memory required for data: 18632960
I0428 20:29:34.486659  3553 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:34.486677  3553 net.cpp:86] Creating Layer conv1
I0428 20:29:34.486685  3553 net.cpp:408] conv1 <- pool0
I0428 20:29:34.486696  3553 net.cpp:382] conv1 -> conv1
I0428 20:29:34.489027  3553 net.cpp:124] Setting up conv1
I0428 20:29:34.489045  3553 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:29:34.489053  3553 net.cpp:139] Memory required for data: 18796800
I0428 20:29:34.489069  3553 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:34.489084  3553 net.cpp:86] Creating Layer pool1
I0428 20:29:34.489091  3553 net.cpp:408] pool1 <- conv1
I0428 20:29:34.489104  3553 net.cpp:382] pool1 -> pool1
I0428 20:29:34.489164  3553 net.cpp:124] Setting up pool1
I0428 20:29:34.489176  3553 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:29:34.489181  3553 net.cpp:139] Memory required for data: 18837760
I0428 20:29:34.489188  3553 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:34.489202  3553 net.cpp:86] Creating Layer ip1
I0428 20:29:34.489208  3553 net.cpp:408] ip1 <- pool1
I0428 20:29:34.489218  3553 net.cpp:382] ip1 -> ip1
I0428 20:29:34.489367  3553 net.cpp:124] Setting up ip1
I0428 20:29:34.489380  3553 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:34.489387  3553 net.cpp:139] Memory required for data: 18840320
I0428 20:29:34.489401  3553 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:34.489411  3553 net.cpp:86] Creating Layer relu1
I0428 20:29:34.489419  3553 net.cpp:408] relu1 <- ip1
I0428 20:29:34.489428  3553 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:34.489634  3553 net.cpp:124] Setting up relu1
I0428 20:29:34.489645  3553 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:34.489651  3553 net.cpp:139] Memory required for data: 18842880
I0428 20:29:34.489657  3553 layer_factory.hpp:77] Creating layer ip2
I0428 20:29:34.489670  3553 net.cpp:86] Creating Layer ip2
I0428 20:29:34.489676  3553 net.cpp:408] ip2 <- ip1
I0428 20:29:34.489686  3553 net.cpp:382] ip2 -> ip2
I0428 20:29:34.489809  3553 net.cpp:124] Setting up ip2
I0428 20:29:34.489817  3553 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:34.489825  3553 net.cpp:139] Memory required for data: 18845440
I0428 20:29:34.489835  3553 layer_factory.hpp:77] Creating layer relu2
I0428 20:29:34.489846  3553 net.cpp:86] Creating Layer relu2
I0428 20:29:34.489855  3553 net.cpp:408] relu2 <- ip2
I0428 20:29:34.489863  3553 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:29:34.490720  3553 net.cpp:124] Setting up relu2
I0428 20:29:34.490737  3553 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:34.490744  3553 net.cpp:139] Memory required for data: 18848000
I0428 20:29:34.490752  3553 layer_factory.hpp:77] Creating layer loss
I0428 20:29:34.490763  3553 net.cpp:86] Creating Layer loss
I0428 20:29:34.490770  3553 net.cpp:408] loss <- ip2
I0428 20:29:34.490778  3553 net.cpp:408] loss <- label
I0428 20:29:34.490789  3553 net.cpp:382] loss -> loss
I0428 20:29:34.490814  3553 layer_factory.hpp:77] Creating layer loss
I0428 20:29:34.491101  3553 net.cpp:124] Setting up loss
I0428 20:29:34.491116  3553 net.cpp:131] Top shape: (1)
I0428 20:29:34.491122  3553 net.cpp:134]     with loss weight 1
I0428 20:29:34.491145  3553 net.cpp:139] Memory required for data: 18848004
I0428 20:29:34.491153  3553 net.cpp:200] loss needs backward computation.
I0428 20:29:34.491160  3553 net.cpp:200] relu2 needs backward computation.
I0428 20:29:34.491168  3553 net.cpp:200] ip2 needs backward computation.
I0428 20:29:34.491173  3553 net.cpp:200] relu1 needs backward computation.
I0428 20:29:34.491179  3553 net.cpp:200] ip1 needs backward computation.
I0428 20:29:34.491200  3553 net.cpp:200] pool1 needs backward computation.
I0428 20:29:34.491207  3553 net.cpp:200] conv1 needs backward computation.
I0428 20:29:34.491214  3553 net.cpp:200] pool0 needs backward computation.
I0428 20:29:34.491220  3553 net.cpp:200] conv0 needs backward computation.
I0428 20:29:34.491228  3553 net.cpp:202] mnist does not need backward computation.
I0428 20:29:34.491235  3553 net.cpp:244] This network produces output loss
I0428 20:29:34.491250  3553 net.cpp:257] Network initialization done.
I0428 20:29:34.491606  3553 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1524.prototxt
I0428 20:29:34.491646  3553 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:29:34.491755  3553 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:29:34.491873  3553 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:34.491942  3553 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:29:34.491964  3553 net.cpp:86] Creating Layer mnist
I0428 20:29:34.491973  3553 net.cpp:382] mnist -> data
I0428 20:29:34.491988  3553 net.cpp:382] mnist -> label
I0428 20:29:34.492130  3553 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:29:34.494694  3553 net.cpp:124] Setting up mnist
I0428 20:29:34.494714  3553 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:29:34.494724  3553 net.cpp:131] Top shape: 100 (100)
I0428 20:29:34.494730  3553 net.cpp:139] Memory required for data: 314000
I0428 20:29:34.494737  3553 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:29:34.494750  3553 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:29:34.494756  3553 net.cpp:408] label_mnist_1_split <- label
I0428 20:29:34.494766  3553 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:29:34.494779  3553 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:29:34.494876  3553 net.cpp:124] Setting up label_mnist_1_split
I0428 20:29:34.494889  3553 net.cpp:131] Top shape: 100 (100)
I0428 20:29:34.494896  3553 net.cpp:131] Top shape: 100 (100)
I0428 20:29:34.494902  3553 net.cpp:139] Memory required for data: 314800
I0428 20:29:34.494909  3553 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:34.494925  3553 net.cpp:86] Creating Layer conv0
I0428 20:29:34.494932  3553 net.cpp:408] conv0 <- data
I0428 20:29:34.494942  3553 net.cpp:382] conv0 -> conv0
I0428 20:29:34.496685  3553 net.cpp:124] Setting up conv0
I0428 20:29:34.496704  3553 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:29:34.496711  3553 net.cpp:139] Memory required for data: 23354800
I0428 20:29:34.496728  3553 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:34.496742  3553 net.cpp:86] Creating Layer pool0
I0428 20:29:34.496749  3553 net.cpp:408] pool0 <- conv0
I0428 20:29:34.496759  3553 net.cpp:382] pool0 -> pool0
I0428 20:29:34.496821  3553 net.cpp:124] Setting up pool0
I0428 20:29:34.496834  3553 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:29:34.496840  3553 net.cpp:139] Memory required for data: 29114800
I0428 20:29:34.496845  3553 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:34.496868  3553 net.cpp:86] Creating Layer conv1
I0428 20:29:34.496876  3553 net.cpp:408] conv1 <- pool0
I0428 20:29:34.496887  3553 net.cpp:382] conv1 -> conv1
I0428 20:29:34.498654  3553 net.cpp:124] Setting up conv1
I0428 20:29:34.498672  3553 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:29:34.498679  3553 net.cpp:139] Memory required for data: 29370800
I0428 20:29:34.498694  3553 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:34.498706  3553 net.cpp:86] Creating Layer pool1
I0428 20:29:34.498715  3553 net.cpp:408] pool1 <- conv1
I0428 20:29:34.498725  3553 net.cpp:382] pool1 -> pool1
I0428 20:29:34.498777  3553 net.cpp:124] Setting up pool1
I0428 20:29:34.498788  3553 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:29:34.498795  3553 net.cpp:139] Memory required for data: 29434800
I0428 20:29:34.498800  3553 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:34.498812  3553 net.cpp:86] Creating Layer ip1
I0428 20:29:34.498819  3553 net.cpp:408] ip1 <- pool1
I0428 20:29:34.498829  3553 net.cpp:382] ip1 -> ip1
I0428 20:29:34.498967  3553 net.cpp:124] Setting up ip1
I0428 20:29:34.498978  3553 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:34.498986  3553 net.cpp:139] Memory required for data: 29438800
I0428 20:29:34.499001  3553 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:34.499011  3553 net.cpp:86] Creating Layer relu1
I0428 20:29:34.499018  3553 net.cpp:408] relu1 <- ip1
I0428 20:29:34.499028  3553 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:34.499227  3553 net.cpp:124] Setting up relu1
I0428 20:29:34.499238  3553 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:34.499244  3553 net.cpp:139] Memory required for data: 29442800
I0428 20:29:34.499253  3553 layer_factory.hpp:77] Creating layer ip2
I0428 20:29:34.499265  3553 net.cpp:86] Creating Layer ip2
I0428 20:29:34.499274  3553 net.cpp:408] ip2 <- ip1
I0428 20:29:34.499289  3553 net.cpp:382] ip2 -> ip2
I0428 20:29:34.499413  3553 net.cpp:124] Setting up ip2
I0428 20:29:34.499423  3553 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:34.499433  3553 net.cpp:139] Memory required for data: 29446800
I0428 20:29:34.499444  3553 layer_factory.hpp:77] Creating layer relu2
I0428 20:29:34.499454  3553 net.cpp:86] Creating Layer relu2
I0428 20:29:34.499459  3553 net.cpp:408] relu2 <- ip2
I0428 20:29:34.499469  3553 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:29:34.499761  3553 net.cpp:124] Setting up relu2
I0428 20:29:34.499775  3553 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:34.499783  3553 net.cpp:139] Memory required for data: 29450800
I0428 20:29:34.499789  3553 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:29:34.499799  3553 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:29:34.499805  3553 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:29:34.499817  3553 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:29:34.499843  3553 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:29:34.499894  3553 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:29:34.499904  3553 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:34.499912  3553 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:34.499922  3553 net.cpp:139] Memory required for data: 29458800
I0428 20:29:34.499928  3553 layer_factory.hpp:77] Creating layer accuracy
I0428 20:29:34.499938  3553 net.cpp:86] Creating Layer accuracy
I0428 20:29:34.499945  3553 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:29:34.499953  3553 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:29:34.499963  3553 net.cpp:382] accuracy -> accuracy
I0428 20:29:34.499977  3553 net.cpp:124] Setting up accuracy
I0428 20:29:34.499989  3553 net.cpp:131] Top shape: (1)
I0428 20:29:34.499995  3553 net.cpp:139] Memory required for data: 29458804
I0428 20:29:34.500005  3553 layer_factory.hpp:77] Creating layer loss
I0428 20:29:34.500013  3553 net.cpp:86] Creating Layer loss
I0428 20:29:34.500020  3553 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:29:34.500028  3553 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:29:34.500037  3553 net.cpp:382] loss -> loss
I0428 20:29:34.500049  3553 layer_factory.hpp:77] Creating layer loss
I0428 20:29:34.500331  3553 net.cpp:124] Setting up loss
I0428 20:29:34.500344  3553 net.cpp:131] Top shape: (1)
I0428 20:29:34.500351  3553 net.cpp:134]     with loss weight 1
I0428 20:29:34.500365  3553 net.cpp:139] Memory required for data: 29458808
I0428 20:29:34.500371  3553 net.cpp:200] loss needs backward computation.
I0428 20:29:34.500380  3553 net.cpp:202] accuracy does not need backward computation.
I0428 20:29:34.500387  3553 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:29:34.500393  3553 net.cpp:200] relu2 needs backward computation.
I0428 20:29:34.500399  3553 net.cpp:200] ip2 needs backward computation.
I0428 20:29:34.500406  3553 net.cpp:200] relu1 needs backward computation.
I0428 20:29:34.500412  3553 net.cpp:200] ip1 needs backward computation.
I0428 20:29:34.500418  3553 net.cpp:200] pool1 needs backward computation.
I0428 20:29:34.500427  3553 net.cpp:200] conv1 needs backward computation.
I0428 20:29:34.500433  3553 net.cpp:200] pool0 needs backward computation.
I0428 20:29:34.500444  3553 net.cpp:200] conv0 needs backward computation.
I0428 20:29:34.500452  3553 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:29:34.500459  3553 net.cpp:202] mnist does not need backward computation.
I0428 20:29:34.500465  3553 net.cpp:244] This network produces output accuracy
I0428 20:29:34.500473  3553 net.cpp:244] This network produces output loss
I0428 20:29:34.500490  3553 net.cpp:257] Network initialization done.
I0428 20:29:34.500542  3553 solver.cpp:56] Solver scaffolding done.
I0428 20:29:34.500926  3553 caffe.cpp:248] Starting Optimization
I0428 20:29:34.500934  3553 solver.cpp:273] Solving LeNet
I0428 20:29:34.500941  3553 solver.cpp:274] Learning Rate Policy: inv
I0428 20:29:34.501153  3553 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:29:34.593571  3560 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:34.595922  3553 solver.cpp:398]     Test net output #0: accuracy = 0.0836
I0428 20:29:34.595945  3553 solver.cpp:398]     Test net output #1: loss = 2.35025 (* 1 = 2.35025 loss)
I0428 20:29:34.601096  3553 solver.cpp:219] Iteration 0 (0 iter/s, 0.100102s/100 iters), loss = 2.32952
I0428 20:29:34.601125  3553 solver.cpp:238]     Train net output #0: loss = 2.32952 (* 1 = 2.32952 loss)
I0428 20:29:34.601173  3553 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:29:34.811045  3553 solver.cpp:219] Iteration 100 (476.414 iter/s, 0.209902s/100 iters), loss = 0.812417
I0428 20:29:34.811105  3553 solver.cpp:238]     Train net output #0: loss = 0.812417 (* 1 = 0.812417 loss)
I0428 20:29:34.811125  3553 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:29:35.023815  3553 solver.cpp:219] Iteration 200 (470.143 iter/s, 0.212701s/100 iters), loss = 1.24579
I0428 20:29:35.023897  3553 solver.cpp:238]     Train net output #0: loss = 1.24579 (* 1 = 1.24579 loss)
I0428 20:29:35.023919  3553 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:29:35.239977  3553 solver.cpp:219] Iteration 300 (462.81 iter/s, 0.216071s/100 iters), loss = 1.17732
I0428 20:29:35.240036  3553 solver.cpp:238]     Train net output #0: loss = 1.17732 (* 1 = 1.17732 loss)
I0428 20:29:35.240057  3553 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:29:35.457615  3553 solver.cpp:219] Iteration 400 (459.628 iter/s, 0.217567s/100 iters), loss = 1.14005
I0428 20:29:35.457674  3553 solver.cpp:238]     Train net output #0: loss = 1.14005 (* 1 = 1.14005 loss)
I0428 20:29:35.457696  3553 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:29:35.675333  3553 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:29:35.777500  3560 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:35.780971  3553 solver.cpp:398]     Test net output #0: accuracy = 0.6775
I0428 20:29:35.780997  3553 solver.cpp:398]     Test net output #1: loss = 1.00377 (* 1 = 1.00377 loss)
I0428 20:29:35.782874  3553 solver.cpp:219] Iteration 500 (307.515 iter/s, 0.325188s/100 iters), loss = 0.831797
I0428 20:29:35.782902  3553 solver.cpp:238]     Train net output #0: loss = 0.831797 (* 1 = 0.831797 loss)
I0428 20:29:35.782910  3553 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:29:35.984112  3553 solver.cpp:219] Iteration 600 (497.044 iter/s, 0.201189s/100 iters), loss = 0.762356
I0428 20:29:35.984165  3553 solver.cpp:238]     Train net output #0: loss = 0.762356 (* 1 = 0.762356 loss)
I0428 20:29:35.984179  3553 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:29:36.202188  3553 solver.cpp:219] Iteration 700 (458.7 iter/s, 0.218008s/100 iters), loss = 0.775219
I0428 20:29:36.202239  3553 solver.cpp:238]     Train net output #0: loss = 0.775219 (* 1 = 0.775219 loss)
I0428 20:29:36.202253  3553 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:29:36.419509  3553 solver.cpp:219] Iteration 800 (460.291 iter/s, 0.217254s/100 iters), loss = 0.683427
I0428 20:29:36.419559  3553 solver.cpp:238]     Train net output #0: loss = 0.683427 (* 1 = 0.683427 loss)
I0428 20:29:36.419571  3553 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:29:36.636144  3553 solver.cpp:219] Iteration 900 (461.749 iter/s, 0.216568s/100 iters), loss = 0.690733
I0428 20:29:36.636195  3553 solver.cpp:238]     Train net output #0: loss = 0.690733 (* 1 = 0.690733 loss)
I0428 20:29:36.636206  3553 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:29:36.708139  3559 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:36.849786  3553 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:29:36.851897  3553 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:29:36.853260  3553 solver.cpp:311] Iteration 1000, loss = 0.711161
I0428 20:29:36.853292  3553 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:29:36.952955  3560 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:36.955575  3553 solver.cpp:398]     Test net output #0: accuracy = 0.8671
I0428 20:29:36.955600  3553 solver.cpp:398]     Test net output #1: loss = 0.568029 (* 1 = 0.568029 loss)
I0428 20:29:36.955606  3553 solver.cpp:316] Optimization Done.
I0428 20:29:36.955610  3553 caffe.cpp:259] Optimization Done.
