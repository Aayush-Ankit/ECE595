I0428 20:38:43.676674  5158 caffe.cpp:218] Using GPUs 0
I0428 20:38:43.713235  5158 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:44.168908  5158 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1669.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:44.169064  5158 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1669.prototxt
I0428 20:38:44.169458  5158 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:44.169488  5158 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:44.169571  5158 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:44.169637  5158 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:44.169719  5158 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:44.169739  5158 net.cpp:86] Creating Layer mnist
I0428 20:38:44.169747  5158 net.cpp:382] mnist -> data
I0428 20:38:44.169776  5158 net.cpp:382] mnist -> label
I0428 20:38:44.170672  5158 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:44.172722  5158 net.cpp:124] Setting up mnist
I0428 20:38:44.172751  5158 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:44.172756  5158 net.cpp:131] Top shape: 64 (64)
I0428 20:38:44.172760  5158 net.cpp:139] Memory required for data: 200960
I0428 20:38:44.172765  5158 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:44.172857  5158 net.cpp:86] Creating Layer conv0
I0428 20:38:44.172878  5158 net.cpp:408] conv0 <- data
I0428 20:38:44.172889  5158 net.cpp:382] conv0 -> conv0
I0428 20:38:44.398056  5158 net.cpp:124] Setting up conv0
I0428 20:38:44.398097  5158 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:44.398115  5158 net.cpp:139] Memory required for data: 14946560
I0428 20:38:44.398130  5158 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:44.398142  5158 net.cpp:86] Creating Layer pool0
I0428 20:38:44.398146  5158 net.cpp:408] pool0 <- conv0
I0428 20:38:44.398167  5158 net.cpp:382] pool0 -> pool0
I0428 20:38:44.398227  5158 net.cpp:124] Setting up pool0
I0428 20:38:44.398242  5158 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:44.398246  5158 net.cpp:139] Memory required for data: 18632960
I0428 20:38:44.398248  5158 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:44.398258  5158 net.cpp:86] Creating Layer conv1
I0428 20:38:44.398260  5158 net.cpp:408] conv1 <- pool0
I0428 20:38:44.398265  5158 net.cpp:382] conv1 -> conv1
I0428 20:38:44.402215  5158 net.cpp:124] Setting up conv1
I0428 20:38:44.402245  5158 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:44.402248  5158 net.cpp:139] Memory required for data: 20271360
I0428 20:38:44.402256  5158 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:44.402264  5158 net.cpp:86] Creating Layer pool1
I0428 20:38:44.402268  5158 net.cpp:408] pool1 <- conv1
I0428 20:38:44.402273  5158 net.cpp:382] pool1 -> pool1
I0428 20:38:44.402326  5158 net.cpp:124] Setting up pool1
I0428 20:38:44.402331  5158 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:44.402334  5158 net.cpp:139] Memory required for data: 20680960
I0428 20:38:44.402338  5158 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:44.402345  5158 net.cpp:86] Creating Layer ip1
I0428 20:38:44.402348  5158 net.cpp:408] ip1 <- pool1
I0428 20:38:44.402353  5158 net.cpp:382] ip1 -> ip1
I0428 20:38:44.402915  5158 net.cpp:124] Setting up ip1
I0428 20:38:44.402921  5158 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:44.402940  5158 net.cpp:139] Memory required for data: 20693760
I0428 20:38:44.402945  5158 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:44.402952  5158 net.cpp:86] Creating Layer relu1
I0428 20:38:44.402956  5158 net.cpp:408] relu1 <- ip1
I0428 20:38:44.402961  5158 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:44.403141  5158 net.cpp:124] Setting up relu1
I0428 20:38:44.403151  5158 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:44.403153  5158 net.cpp:139] Memory required for data: 20706560
I0428 20:38:44.403156  5158 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:44.403163  5158 net.cpp:86] Creating Layer ip2
I0428 20:38:44.403167  5158 net.cpp:408] ip2 <- ip1
I0428 20:38:44.403172  5158 net.cpp:382] ip2 -> ip2
I0428 20:38:44.403288  5158 net.cpp:124] Setting up ip2
I0428 20:38:44.403295  5158 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:44.403298  5158 net.cpp:139] Memory required for data: 20709120
I0428 20:38:44.403303  5158 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:44.403311  5158 net.cpp:86] Creating Layer relu2
I0428 20:38:44.403314  5158 net.cpp:408] relu2 <- ip2
I0428 20:38:44.403318  5158 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:44.404057  5158 net.cpp:124] Setting up relu2
I0428 20:38:44.404085  5158 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:44.404088  5158 net.cpp:139] Memory required for data: 20711680
I0428 20:38:44.404093  5158 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:44.404099  5158 net.cpp:86] Creating Layer ip3
I0428 20:38:44.404103  5158 net.cpp:408] ip3 <- ip2
I0428 20:38:44.404109  5158 net.cpp:382] ip3 -> ip3
I0428 20:38:44.404211  5158 net.cpp:124] Setting up ip3
I0428 20:38:44.404218  5158 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:44.404222  5158 net.cpp:139] Memory required for data: 20714240
I0428 20:38:44.404229  5158 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:44.404233  5158 net.cpp:86] Creating Layer relu3
I0428 20:38:44.404237  5158 net.cpp:408] relu3 <- ip3
I0428 20:38:44.404255  5158 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:44.404429  5158 net.cpp:124] Setting up relu3
I0428 20:38:44.404438  5158 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:44.404441  5158 net.cpp:139] Memory required for data: 20716800
I0428 20:38:44.404444  5158 layer_factory.hpp:77] Creating layer loss
I0428 20:38:44.404453  5158 net.cpp:86] Creating Layer loss
I0428 20:38:44.404456  5158 net.cpp:408] loss <- ip3
I0428 20:38:44.404460  5158 net.cpp:408] loss <- label
I0428 20:38:44.404466  5158 net.cpp:382] loss -> loss
I0428 20:38:44.404480  5158 layer_factory.hpp:77] Creating layer loss
I0428 20:38:44.404738  5158 net.cpp:124] Setting up loss
I0428 20:38:44.404747  5158 net.cpp:131] Top shape: (1)
I0428 20:38:44.404750  5158 net.cpp:134]     with loss weight 1
I0428 20:38:44.404783  5158 net.cpp:139] Memory required for data: 20716804
I0428 20:38:44.404786  5158 net.cpp:200] loss needs backward computation.
I0428 20:38:44.404790  5158 net.cpp:200] relu3 needs backward computation.
I0428 20:38:44.404793  5158 net.cpp:200] ip3 needs backward computation.
I0428 20:38:44.404795  5158 net.cpp:200] relu2 needs backward computation.
I0428 20:38:44.404798  5158 net.cpp:200] ip2 needs backward computation.
I0428 20:38:44.404800  5158 net.cpp:200] relu1 needs backward computation.
I0428 20:38:44.404803  5158 net.cpp:200] ip1 needs backward computation.
I0428 20:38:44.404805  5158 net.cpp:200] pool1 needs backward computation.
I0428 20:38:44.404830  5158 net.cpp:200] conv1 needs backward computation.
I0428 20:38:44.404834  5158 net.cpp:200] pool0 needs backward computation.
I0428 20:38:44.404836  5158 net.cpp:200] conv0 needs backward computation.
I0428 20:38:44.404855  5158 net.cpp:202] mnist does not need backward computation.
I0428 20:38:44.404858  5158 net.cpp:244] This network produces output loss
I0428 20:38:44.404870  5158 net.cpp:257] Network initialization done.
I0428 20:38:44.405277  5158 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1669.prototxt
I0428 20:38:44.405318  5158 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:44.405412  5158 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:44.405508  5158 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:44.405551  5158 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:44.405565  5158 net.cpp:86] Creating Layer mnist
I0428 20:38:44.405570  5158 net.cpp:382] mnist -> data
I0428 20:38:44.405577  5158 net.cpp:382] mnist -> label
I0428 20:38:44.405663  5158 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:44.407527  5158 net.cpp:124] Setting up mnist
I0428 20:38:44.407555  5158 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:44.407560  5158 net.cpp:131] Top shape: 100 (100)
I0428 20:38:44.407563  5158 net.cpp:139] Memory required for data: 314000
I0428 20:38:44.407567  5158 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:44.407573  5158 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:44.407577  5158 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:44.407608  5158 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:44.407615  5158 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:44.407675  5158 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:44.407680  5158 net.cpp:131] Top shape: 100 (100)
I0428 20:38:44.407685  5158 net.cpp:131] Top shape: 100 (100)
I0428 20:38:44.407687  5158 net.cpp:139] Memory required for data: 314800
I0428 20:38:44.407691  5158 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:44.407699  5158 net.cpp:86] Creating Layer conv0
I0428 20:38:44.407702  5158 net.cpp:408] conv0 <- data
I0428 20:38:44.407708  5158 net.cpp:382] conv0 -> conv0
I0428 20:38:44.409565  5158 net.cpp:124] Setting up conv0
I0428 20:38:44.409579  5158 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:44.409597  5158 net.cpp:139] Memory required for data: 23354800
I0428 20:38:44.409621  5158 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:44.409629  5158 net.cpp:86] Creating Layer pool0
I0428 20:38:44.409632  5158 net.cpp:408] pool0 <- conv0
I0428 20:38:44.409637  5158 net.cpp:382] pool0 -> pool0
I0428 20:38:44.409675  5158 net.cpp:124] Setting up pool0
I0428 20:38:44.409680  5158 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:44.409683  5158 net.cpp:139] Memory required for data: 29114800
I0428 20:38:44.409685  5158 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:44.409694  5158 net.cpp:86] Creating Layer conv1
I0428 20:38:44.409698  5158 net.cpp:408] conv1 <- pool0
I0428 20:38:44.409704  5158 net.cpp:382] conv1 -> conv1
I0428 20:38:44.412713  5158 net.cpp:124] Setting up conv1
I0428 20:38:44.412727  5158 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:44.412731  5158 net.cpp:139] Memory required for data: 31674800
I0428 20:38:44.412740  5158 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:44.412747  5158 net.cpp:86] Creating Layer pool1
I0428 20:38:44.412751  5158 net.cpp:408] pool1 <- conv1
I0428 20:38:44.412757  5158 net.cpp:382] pool1 -> pool1
I0428 20:38:44.412852  5158 net.cpp:124] Setting up pool1
I0428 20:38:44.412860  5158 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:44.412863  5158 net.cpp:139] Memory required for data: 32314800
I0428 20:38:44.412866  5158 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:44.412873  5158 net.cpp:86] Creating Layer ip1
I0428 20:38:44.412878  5158 net.cpp:408] ip1 <- pool1
I0428 20:38:44.412884  5158 net.cpp:382] ip1 -> ip1
I0428 20:38:44.413513  5158 net.cpp:124] Setting up ip1
I0428 20:38:44.413532  5158 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:44.413537  5158 net.cpp:139] Memory required for data: 32334800
I0428 20:38:44.413544  5158 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:44.413552  5158 net.cpp:86] Creating Layer relu1
I0428 20:38:44.413555  5158 net.cpp:408] relu1 <- ip1
I0428 20:38:44.413561  5158 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:44.413763  5158 net.cpp:124] Setting up relu1
I0428 20:38:44.413772  5158 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:44.413775  5158 net.cpp:139] Memory required for data: 32354800
I0428 20:38:44.413779  5158 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:44.413786  5158 net.cpp:86] Creating Layer ip2
I0428 20:38:44.413790  5158 net.cpp:408] ip2 <- ip1
I0428 20:38:44.413795  5158 net.cpp:382] ip2 -> ip2
I0428 20:38:44.413938  5158 net.cpp:124] Setting up ip2
I0428 20:38:44.413949  5158 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:44.413952  5158 net.cpp:139] Memory required for data: 32358800
I0428 20:38:44.413957  5158 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:44.413964  5158 net.cpp:86] Creating Layer relu2
I0428 20:38:44.413966  5158 net.cpp:408] relu2 <- ip2
I0428 20:38:44.413970  5158 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:44.414126  5158 net.cpp:124] Setting up relu2
I0428 20:38:44.414134  5158 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:44.414137  5158 net.cpp:139] Memory required for data: 32362800
I0428 20:38:44.414141  5158 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:44.414146  5158 net.cpp:86] Creating Layer ip3
I0428 20:38:44.414149  5158 net.cpp:408] ip3 <- ip2
I0428 20:38:44.414155  5158 net.cpp:382] ip3 -> ip3
I0428 20:38:44.414266  5158 net.cpp:124] Setting up ip3
I0428 20:38:44.414273  5158 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:44.414276  5158 net.cpp:139] Memory required for data: 32366800
I0428 20:38:44.414284  5158 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:44.414291  5158 net.cpp:86] Creating Layer relu3
I0428 20:38:44.414294  5158 net.cpp:408] relu3 <- ip3
I0428 20:38:44.414304  5158 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:44.415122  5158 net.cpp:124] Setting up relu3
I0428 20:38:44.415134  5158 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:44.415138  5158 net.cpp:139] Memory required for data: 32370800
I0428 20:38:44.415141  5158 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:44.415148  5158 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:44.415153  5158 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:44.415158  5158 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:44.415163  5158 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:44.415201  5158 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:44.415207  5158 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:44.415211  5158 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:44.415215  5158 net.cpp:139] Memory required for data: 32378800
I0428 20:38:44.415217  5158 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:44.415221  5158 net.cpp:86] Creating Layer accuracy
I0428 20:38:44.415225  5158 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:44.415228  5158 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:44.415233  5158 net.cpp:382] accuracy -> accuracy
I0428 20:38:44.415241  5158 net.cpp:124] Setting up accuracy
I0428 20:38:44.415244  5158 net.cpp:131] Top shape: (1)
I0428 20:38:44.415246  5158 net.cpp:139] Memory required for data: 32378804
I0428 20:38:44.415249  5158 layer_factory.hpp:77] Creating layer loss
I0428 20:38:44.415253  5158 net.cpp:86] Creating Layer loss
I0428 20:38:44.415256  5158 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:44.415261  5158 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:44.415263  5158 net.cpp:382] loss -> loss
I0428 20:38:44.415272  5158 layer_factory.hpp:77] Creating layer loss
I0428 20:38:44.415540  5158 net.cpp:124] Setting up loss
I0428 20:38:44.415549  5158 net.cpp:131] Top shape: (1)
I0428 20:38:44.415552  5158 net.cpp:134]     with loss weight 1
I0428 20:38:44.415567  5158 net.cpp:139] Memory required for data: 32378808
I0428 20:38:44.415570  5158 net.cpp:200] loss needs backward computation.
I0428 20:38:44.415575  5158 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:44.415578  5158 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:44.415580  5158 net.cpp:200] relu3 needs backward computation.
I0428 20:38:44.415583  5158 net.cpp:200] ip3 needs backward computation.
I0428 20:38:44.415586  5158 net.cpp:200] relu2 needs backward computation.
I0428 20:38:44.415591  5158 net.cpp:200] ip2 needs backward computation.
I0428 20:38:44.415594  5158 net.cpp:200] relu1 needs backward computation.
I0428 20:38:44.415596  5158 net.cpp:200] ip1 needs backward computation.
I0428 20:38:44.415599  5158 net.cpp:200] pool1 needs backward computation.
I0428 20:38:44.415602  5158 net.cpp:200] conv1 needs backward computation.
I0428 20:38:44.415606  5158 net.cpp:200] pool0 needs backward computation.
I0428 20:38:44.415608  5158 net.cpp:200] conv0 needs backward computation.
I0428 20:38:44.415612  5158 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:44.415616  5158 net.cpp:202] mnist does not need backward computation.
I0428 20:38:44.415619  5158 net.cpp:244] This network produces output accuracy
I0428 20:38:44.415622  5158 net.cpp:244] This network produces output loss
I0428 20:38:44.415633  5158 net.cpp:257] Network initialization done.
I0428 20:38:44.415688  5158 solver.cpp:56] Solver scaffolding done.
I0428 20:38:44.416064  5158 caffe.cpp:248] Starting Optimization
I0428 20:38:44.416069  5158 solver.cpp:273] Solving LeNet
I0428 20:38:44.416087  5158 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:44.417593  5158 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:44.549805  5165 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:44.553376  5158 solver.cpp:398]     Test net output #0: accuracy = 0.1124
I0428 20:38:44.553417  5158 solver.cpp:398]     Test net output #1: loss = 2.2774 (* 1 = 2.2774 loss)
I0428 20:38:44.559401  5158 solver.cpp:219] Iteration 0 (-5.67526e-43 iter/s, 0.143281s/100 iters), loss = 2.26575
I0428 20:38:44.559432  5158 solver.cpp:238]     Train net output #0: loss = 2.26575 (* 1 = 2.26575 loss)
I0428 20:38:44.559443  5158 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:44.833449  5158 solver.cpp:219] Iteration 100 (364.968 iter/s, 0.273997s/100 iters), loss = 0.355931
I0428 20:38:44.833498  5158 solver.cpp:238]     Train net output #0: loss = 0.355931 (* 1 = 0.355931 loss)
I0428 20:38:44.833504  5158 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:45.097054  5158 solver.cpp:219] Iteration 200 (379.43 iter/s, 0.263553s/100 iters), loss = 0.196516
I0428 20:38:45.097129  5158 solver.cpp:238]     Train net output #0: loss = 0.196516 (* 1 = 0.196516 loss)
I0428 20:38:45.097136  5158 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:45.361438  5158 solver.cpp:219] Iteration 300 (378.345 iter/s, 0.264309s/100 iters), loss = 0.31476
I0428 20:38:45.361479  5158 solver.cpp:238]     Train net output #0: loss = 0.31476 (* 1 = 0.31476 loss)
I0428 20:38:45.361485  5158 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:45.628679  5158 solver.cpp:219] Iteration 400 (374.281 iter/s, 0.267179s/100 iters), loss = 0.0351525
I0428 20:38:45.628712  5158 solver.cpp:238]     Train net output #0: loss = 0.0351525 (* 1 = 0.0351525 loss)
I0428 20:38:45.628720  5158 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:45.892506  5158 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:46.016955  5165 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:46.020210  5158 solver.cpp:398]     Test net output #0: accuracy = 0.9726
I0428 20:38:46.020248  5158 solver.cpp:398]     Test net output #1: loss = 0.0952688 (* 1 = 0.0952688 loss)
I0428 20:38:46.022965  5158 solver.cpp:219] Iteration 500 (253.659 iter/s, 0.394231s/100 iters), loss = 0.0843789
I0428 20:38:46.023005  5158 solver.cpp:238]     Train net output #0: loss = 0.0843789 (* 1 = 0.0843789 loss)
I0428 20:38:46.023030  5158 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:46.299410  5158 solver.cpp:219] Iteration 600 (361.789 iter/s, 0.276404s/100 iters), loss = 0.0607963
I0428 20:38:46.299437  5158 solver.cpp:238]     Train net output #0: loss = 0.0607963 (* 1 = 0.0607963 loss)
I0428 20:38:46.299443  5158 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:46.581650  5158 solver.cpp:219] Iteration 700 (354.366 iter/s, 0.282194s/100 iters), loss = 0.140329
I0428 20:38:46.581691  5158 solver.cpp:238]     Train net output #0: loss = 0.14033 (* 1 = 0.14033 loss)
I0428 20:38:46.581697  5158 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:46.867259  5158 solver.cpp:219] Iteration 800 (350.202 iter/s, 0.28555s/100 iters), loss = 0.2481
I0428 20:38:46.867285  5158 solver.cpp:238]     Train net output #0: loss = 0.2481 (* 1 = 0.2481 loss)
I0428 20:38:46.867291  5158 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:47.152379  5158 solver.cpp:219] Iteration 900 (350.784 iter/s, 0.285075s/100 iters), loss = 0.124474
I0428 20:38:47.152422  5158 solver.cpp:238]     Train net output #0: loss = 0.124474 (* 1 = 0.124474 loss)
I0428 20:38:47.152429  5158 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:47.247022  5164 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:47.436079  5158 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:47.442008  5158 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:47.445463  5158 solver.cpp:311] Iteration 1000, loss = 0.0941852
I0428 20:38:47.445479  5158 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:47.575616  5165 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:47.579176  5158 solver.cpp:398]     Test net output #0: accuracy = 0.9798
I0428 20:38:47.579212  5158 solver.cpp:398]     Test net output #1: loss = 0.0633895 (* 1 = 0.0633895 loss)
I0428 20:38:47.579218  5158 solver.cpp:316] Optimization Done.
I0428 20:38:47.579221  5158 caffe.cpp:259] Optimization Done.
