I0428 19:54:49.340791 28063 caffe.cpp:218] Using GPUs 0
I0428 19:54:49.376086 28063 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:54:49.885562 28063 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test719.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:54:49.885700 28063 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test719.prototxt
I0428 19:54:49.886108 28063 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:54:49.886128 28063 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:54:49.886229 28063 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:54:49.886304 28063 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:49.886400 28063 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:54:49.886423 28063 net.cpp:86] Creating Layer mnist
I0428 19:54:49.886432 28063 net.cpp:382] mnist -> data
I0428 19:54:49.886453 28063 net.cpp:382] mnist -> label
I0428 19:54:49.887531 28063 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:54:49.889930 28063 net.cpp:124] Setting up mnist
I0428 19:54:49.889968 28063 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:54:49.889976 28063 net.cpp:131] Top shape: 64 (64)
I0428 19:54:49.889981 28063 net.cpp:139] Memory required for data: 200960
I0428 19:54:49.889987 28063 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:49.890003 28063 net.cpp:86] Creating Layer conv0
I0428 19:54:49.890024 28063 net.cpp:408] conv0 <- data
I0428 19:54:49.890036 28063 net.cpp:382] conv0 -> conv0
I0428 19:54:50.154724 28063 net.cpp:124] Setting up conv0
I0428 19:54:50.154765 28063 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:54:50.154769 28063 net.cpp:139] Memory required for data: 938240
I0428 19:54:50.154784 28063 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:50.154813 28063 net.cpp:86] Creating Layer pool0
I0428 19:54:50.154816 28063 net.cpp:408] pool0 <- conv0
I0428 19:54:50.154821 28063 net.cpp:382] pool0 -> pool0
I0428 19:54:50.154866 28063 net.cpp:124] Setting up pool0
I0428 19:54:50.154873 28063 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:54:50.154876 28063 net.cpp:139] Memory required for data: 1122560
I0428 19:54:50.154880 28063 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:50.154891 28063 net.cpp:86] Creating Layer conv1
I0428 19:54:50.154897 28063 net.cpp:408] conv1 <- pool0
I0428 19:54:50.154902 28063 net.cpp:382] conv1 -> conv1
I0428 19:54:50.157771 28063 net.cpp:124] Setting up conv1
I0428 19:54:50.157802 28063 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:54:50.157806 28063 net.cpp:139] Memory required for data: 2760960
I0428 19:54:50.157814 28063 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:50.157822 28063 net.cpp:86] Creating Layer pool1
I0428 19:54:50.157840 28063 net.cpp:408] pool1 <- conv1
I0428 19:54:50.157845 28063 net.cpp:382] pool1 -> pool1
I0428 19:54:50.157883 28063 net.cpp:124] Setting up pool1
I0428 19:54:50.157904 28063 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:54:50.157910 28063 net.cpp:139] Memory required for data: 3170560
I0428 19:54:50.157913 28063 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:50.157922 28063 net.cpp:86] Creating Layer ip1
I0428 19:54:50.157924 28063 net.cpp:408] ip1 <- pool1
I0428 19:54:50.157929 28063 net.cpp:382] ip1 -> ip1
I0428 19:54:50.158121 28063 net.cpp:124] Setting up ip1
I0428 19:54:50.158128 28063 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:50.158131 28063 net.cpp:139] Memory required for data: 3173120
I0428 19:54:50.158138 28063 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:50.158144 28063 net.cpp:86] Creating Layer relu1
I0428 19:54:50.158151 28063 net.cpp:408] relu1 <- ip1
I0428 19:54:50.158155 28063 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:50.158357 28063 net.cpp:124] Setting up relu1
I0428 19:54:50.158366 28063 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:50.158370 28063 net.cpp:139] Memory required for data: 3175680
I0428 19:54:50.158372 28063 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:50.158378 28063 net.cpp:86] Creating Layer ip2
I0428 19:54:50.158381 28063 net.cpp:408] ip2 <- ip1
I0428 19:54:50.158386 28063 net.cpp:382] ip2 -> ip2
I0428 19:54:50.158480 28063 net.cpp:124] Setting up ip2
I0428 19:54:50.158486 28063 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:54:50.158489 28063 net.cpp:139] Memory required for data: 3182080
I0428 19:54:50.158495 28063 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:50.158500 28063 net.cpp:86] Creating Layer relu2
I0428 19:54:50.158504 28063 net.cpp:408] relu2 <- ip2
I0428 19:54:50.158509 28063 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:50.159325 28063 net.cpp:124] Setting up relu2
I0428 19:54:50.159337 28063 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:54:50.159358 28063 net.cpp:139] Memory required for data: 3188480
I0428 19:54:50.159361 28063 layer_factory.hpp:77] Creating layer ip3
I0428 19:54:50.159368 28063 net.cpp:86] Creating Layer ip3
I0428 19:54:50.159371 28063 net.cpp:408] ip3 <- ip2
I0428 19:54:50.159376 28063 net.cpp:382] ip3 -> ip3
I0428 19:54:50.159468 28063 net.cpp:124] Setting up ip3
I0428 19:54:50.159476 28063 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:50.159478 28063 net.cpp:139] Memory required for data: 3191040
I0428 19:54:50.159485 28063 layer_factory.hpp:77] Creating layer relu3
I0428 19:54:50.159497 28063 net.cpp:86] Creating Layer relu3
I0428 19:54:50.159500 28063 net.cpp:408] relu3 <- ip3
I0428 19:54:50.159504 28063 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:54:50.159682 28063 net.cpp:124] Setting up relu3
I0428 19:54:50.159690 28063 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:50.159693 28063 net.cpp:139] Memory required for data: 3193600
I0428 19:54:50.159696 28063 layer_factory.hpp:77] Creating layer loss
I0428 19:54:50.159703 28063 net.cpp:86] Creating Layer loss
I0428 19:54:50.159706 28063 net.cpp:408] loss <- ip3
I0428 19:54:50.159710 28063 net.cpp:408] loss <- label
I0428 19:54:50.159715 28063 net.cpp:382] loss -> loss
I0428 19:54:50.159732 28063 layer_factory.hpp:77] Creating layer loss
I0428 19:54:50.159950 28063 net.cpp:124] Setting up loss
I0428 19:54:50.159972 28063 net.cpp:131] Top shape: (1)
I0428 19:54:50.159976 28063 net.cpp:134]     with loss weight 1
I0428 19:54:50.159991 28063 net.cpp:139] Memory required for data: 3193604
I0428 19:54:50.159994 28063 net.cpp:200] loss needs backward computation.
I0428 19:54:50.159997 28063 net.cpp:200] relu3 needs backward computation.
I0428 19:54:50.160001 28063 net.cpp:200] ip3 needs backward computation.
I0428 19:54:50.160003 28063 net.cpp:200] relu2 needs backward computation.
I0428 19:54:50.160006 28063 net.cpp:200] ip2 needs backward computation.
I0428 19:54:50.160009 28063 net.cpp:200] relu1 needs backward computation.
I0428 19:54:50.160012 28063 net.cpp:200] ip1 needs backward computation.
I0428 19:54:50.160014 28063 net.cpp:200] pool1 needs backward computation.
I0428 19:54:50.160017 28063 net.cpp:200] conv1 needs backward computation.
I0428 19:54:50.160020 28063 net.cpp:200] pool0 needs backward computation.
I0428 19:54:50.160023 28063 net.cpp:200] conv0 needs backward computation.
I0428 19:54:50.160027 28063 net.cpp:202] mnist does not need backward computation.
I0428 19:54:50.160029 28063 net.cpp:244] This network produces output loss
I0428 19:54:50.160038 28063 net.cpp:257] Network initialization done.
I0428 19:54:50.160434 28063 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test719.prototxt
I0428 19:54:50.160476 28063 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:54:50.160594 28063 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:54:50.160668 28063 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:50.160711 28063 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:54:50.160722 28063 net.cpp:86] Creating Layer mnist
I0428 19:54:50.160727 28063 net.cpp:382] mnist -> data
I0428 19:54:50.160734 28063 net.cpp:382] mnist -> label
I0428 19:54:50.160835 28063 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:54:50.162782 28063 net.cpp:124] Setting up mnist
I0428 19:54:50.162808 28063 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:54:50.162829 28063 net.cpp:131] Top shape: 100 (100)
I0428 19:54:50.162832 28063 net.cpp:139] Memory required for data: 314000
I0428 19:54:50.162853 28063 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:54:50.162883 28063 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:54:50.162904 28063 net.cpp:408] label_mnist_1_split <- label
I0428 19:54:50.162909 28063 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:54:50.162916 28063 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:54:50.163024 28063 net.cpp:124] Setting up label_mnist_1_split
I0428 19:54:50.163033 28063 net.cpp:131] Top shape: 100 (100)
I0428 19:54:50.163036 28063 net.cpp:131] Top shape: 100 (100)
I0428 19:54:50.163039 28063 net.cpp:139] Memory required for data: 314800
I0428 19:54:50.163043 28063 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:50.163053 28063 net.cpp:86] Creating Layer conv0
I0428 19:54:50.163058 28063 net.cpp:408] conv0 <- data
I0428 19:54:50.163064 28063 net.cpp:382] conv0 -> conv0
I0428 19:54:50.164788 28063 net.cpp:124] Setting up conv0
I0428 19:54:50.164803 28063 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:54:50.164845 28063 net.cpp:139] Memory required for data: 1466800
I0428 19:54:50.164870 28063 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:50.164892 28063 net.cpp:86] Creating Layer pool0
I0428 19:54:50.164896 28063 net.cpp:408] pool0 <- conv0
I0428 19:54:50.164902 28063 net.cpp:382] pool0 -> pool0
I0428 19:54:50.164985 28063 net.cpp:124] Setting up pool0
I0428 19:54:50.164994 28063 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:54:50.164997 28063 net.cpp:139] Memory required for data: 1754800
I0428 19:54:50.165000 28063 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:50.165010 28063 net.cpp:86] Creating Layer conv1
I0428 19:54:50.165014 28063 net.cpp:408] conv1 <- pool0
I0428 19:54:50.165019 28063 net.cpp:382] conv1 -> conv1
I0428 19:54:50.166751 28063 net.cpp:124] Setting up conv1
I0428 19:54:50.166784 28063 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:54:50.166788 28063 net.cpp:139] Memory required for data: 4314800
I0428 19:54:50.166797 28063 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:50.166803 28063 net.cpp:86] Creating Layer pool1
I0428 19:54:50.166806 28063 net.cpp:408] pool1 <- conv1
I0428 19:54:50.166813 28063 net.cpp:382] pool1 -> pool1
I0428 19:54:50.166867 28063 net.cpp:124] Setting up pool1
I0428 19:54:50.166874 28063 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:54:50.166877 28063 net.cpp:139] Memory required for data: 4954800
I0428 19:54:50.166882 28063 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:50.166888 28063 net.cpp:86] Creating Layer ip1
I0428 19:54:50.166893 28063 net.cpp:408] ip1 <- pool1
I0428 19:54:50.166898 28063 net.cpp:382] ip1 -> ip1
I0428 19:54:50.167117 28063 net.cpp:124] Setting up ip1
I0428 19:54:50.167125 28063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:50.167157 28063 net.cpp:139] Memory required for data: 4958800
I0428 19:54:50.167165 28063 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:50.167171 28063 net.cpp:86] Creating Layer relu1
I0428 19:54:50.167174 28063 net.cpp:408] relu1 <- ip1
I0428 19:54:50.167181 28063 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:50.167379 28063 net.cpp:124] Setting up relu1
I0428 19:54:50.167388 28063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:50.167392 28063 net.cpp:139] Memory required for data: 4962800
I0428 19:54:50.167395 28063 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:50.167402 28063 net.cpp:86] Creating Layer ip2
I0428 19:54:50.167404 28063 net.cpp:408] ip2 <- ip1
I0428 19:54:50.167412 28063 net.cpp:382] ip2 -> ip2
I0428 19:54:50.167511 28063 net.cpp:124] Setting up ip2
I0428 19:54:50.167518 28063 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:54:50.167521 28063 net.cpp:139] Memory required for data: 4972800
I0428 19:54:50.167526 28063 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:50.167531 28063 net.cpp:86] Creating Layer relu2
I0428 19:54:50.167534 28063 net.cpp:408] relu2 <- ip2
I0428 19:54:50.167539 28063 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:50.167822 28063 net.cpp:124] Setting up relu2
I0428 19:54:50.167831 28063 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:54:50.167834 28063 net.cpp:139] Memory required for data: 4982800
I0428 19:54:50.167837 28063 layer_factory.hpp:77] Creating layer ip3
I0428 19:54:50.167845 28063 net.cpp:86] Creating Layer ip3
I0428 19:54:50.167848 28063 net.cpp:408] ip3 <- ip2
I0428 19:54:50.167853 28063 net.cpp:382] ip3 -> ip3
I0428 19:54:50.167958 28063 net.cpp:124] Setting up ip3
I0428 19:54:50.167965 28063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:50.167969 28063 net.cpp:139] Memory required for data: 4986800
I0428 19:54:50.167978 28063 layer_factory.hpp:77] Creating layer relu3
I0428 19:54:50.167996 28063 net.cpp:86] Creating Layer relu3
I0428 19:54:50.168000 28063 net.cpp:408] relu3 <- ip3
I0428 19:54:50.168005 28063 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:54:50.168856 28063 net.cpp:124] Setting up relu3
I0428 19:54:50.168869 28063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:50.168889 28063 net.cpp:139] Memory required for data: 4990800
I0428 19:54:50.168892 28063 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:54:50.168900 28063 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:54:50.168903 28063 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:54:50.168907 28063 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:54:50.168915 28063 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:54:50.168953 28063 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:54:50.168961 28063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:50.168964 28063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:50.168967 28063 net.cpp:139] Memory required for data: 4998800
I0428 19:54:50.168970 28063 layer_factory.hpp:77] Creating layer accuracy
I0428 19:54:50.168977 28063 net.cpp:86] Creating Layer accuracy
I0428 19:54:50.168979 28063 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:54:50.168983 28063 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:54:50.168988 28063 net.cpp:382] accuracy -> accuracy
I0428 19:54:50.168997 28063 net.cpp:124] Setting up accuracy
I0428 19:54:50.169003 28063 net.cpp:131] Top shape: (1)
I0428 19:54:50.169005 28063 net.cpp:139] Memory required for data: 4998804
I0428 19:54:50.169015 28063 layer_factory.hpp:77] Creating layer loss
I0428 19:54:50.169021 28063 net.cpp:86] Creating Layer loss
I0428 19:54:50.169024 28063 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:54:50.169029 28063 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:54:50.169034 28063 net.cpp:382] loss -> loss
I0428 19:54:50.169040 28063 layer_factory.hpp:77] Creating layer loss
I0428 19:54:50.169307 28063 net.cpp:124] Setting up loss
I0428 19:54:50.169330 28063 net.cpp:131] Top shape: (1)
I0428 19:54:50.169333 28063 net.cpp:134]     with loss weight 1
I0428 19:54:50.169365 28063 net.cpp:139] Memory required for data: 4998808
I0428 19:54:50.169369 28063 net.cpp:200] loss needs backward computation.
I0428 19:54:50.169373 28063 net.cpp:202] accuracy does not need backward computation.
I0428 19:54:50.169378 28063 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:54:50.169380 28063 net.cpp:200] relu3 needs backward computation.
I0428 19:54:50.169384 28063 net.cpp:200] ip3 needs backward computation.
I0428 19:54:50.169386 28063 net.cpp:200] relu2 needs backward computation.
I0428 19:54:50.169390 28063 net.cpp:200] ip2 needs backward computation.
I0428 19:54:50.169394 28063 net.cpp:200] relu1 needs backward computation.
I0428 19:54:50.169395 28063 net.cpp:200] ip1 needs backward computation.
I0428 19:54:50.169399 28063 net.cpp:200] pool1 needs backward computation.
I0428 19:54:50.169401 28063 net.cpp:200] conv1 needs backward computation.
I0428 19:54:50.169404 28063 net.cpp:200] pool0 needs backward computation.
I0428 19:54:50.169409 28063 net.cpp:200] conv0 needs backward computation.
I0428 19:54:50.169411 28063 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:54:50.169415 28063 net.cpp:202] mnist does not need backward computation.
I0428 19:54:50.169419 28063 net.cpp:244] This network produces output accuracy
I0428 19:54:50.169421 28063 net.cpp:244] This network produces output loss
I0428 19:54:50.169433 28063 net.cpp:257] Network initialization done.
I0428 19:54:50.169486 28063 solver.cpp:56] Solver scaffolding done.
I0428 19:54:50.169852 28063 caffe.cpp:248] Starting Optimization
I0428 19:54:50.169858 28063 solver.cpp:273] Solving LeNet
I0428 19:54:50.169862 28063 solver.cpp:274] Learning Rate Policy: inv
I0428 19:54:50.170133 28063 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:54:50.175263 28063 blocking_queue.cpp:49] Waiting for data
I0428 19:54:50.246310 28070 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:50.246892 28063 solver.cpp:398]     Test net output #0: accuracy = 0.135
I0428 19:54:50.246911 28063 solver.cpp:398]     Test net output #1: loss = 2.29877 (* 1 = 2.29877 loss)
I0428 19:54:50.250680 28063 solver.cpp:219] Iteration 0 (-1.40137e-31 iter/s, 0.0807639s/100 iters), loss = 2.28879
I0428 19:54:50.250705 28063 solver.cpp:238]     Train net output #0: loss = 2.28879 (* 1 = 2.28879 loss)
I0428 19:54:50.250730 28063 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:54:50.395375 28063 solver.cpp:219] Iteration 100 (691.293 iter/s, 0.144656s/100 iters), loss = 1.46065
I0428 19:54:50.395416 28063 solver.cpp:238]     Train net output #0: loss = 1.46065 (* 1 = 1.46065 loss)
I0428 19:54:50.395421 28063 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:54:50.550552 28063 solver.cpp:219] Iteration 200 (644.586 iter/s, 0.155138s/100 iters), loss = 0.799468
I0428 19:54:50.550583 28063 solver.cpp:238]     Train net output #0: loss = 0.799468 (* 1 = 0.799468 loss)
I0428 19:54:50.550591 28063 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:54:50.703086 28063 solver.cpp:219] Iteration 300 (655.781 iter/s, 0.15249s/100 iters), loss = 0.853275
I0428 19:54:50.703116 28063 solver.cpp:238]     Train net output #0: loss = 0.853275 (* 1 = 0.853275 loss)
I0428 19:54:50.703125 28063 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:54:50.846207 28063 solver.cpp:219] Iteration 400 (698.917 iter/s, 0.143078s/100 iters), loss = 0.410718
I0428 19:54:50.846233 28063 solver.cpp:238]     Train net output #0: loss = 0.410718 (* 1 = 0.410718 loss)
I0428 19:54:50.846240 28063 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:54:50.986575 28063 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:54:51.039885 28070 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:51.041683 28063 solver.cpp:398]     Test net output #0: accuracy = 0.8403
I0428 19:54:51.041718 28063 solver.cpp:398]     Test net output #1: loss = 0.452975 (* 1 = 0.452975 loss)
I0428 19:54:51.043191 28063 solver.cpp:219] Iteration 500 (507.762 iter/s, 0.196943s/100 iters), loss = 0.401739
I0428 19:54:51.043243 28063 solver.cpp:238]     Train net output #0: loss = 0.401739 (* 1 = 0.401739 loss)
I0428 19:54:51.043267 28063 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:54:51.187916 28063 solver.cpp:219] Iteration 600 (691.279 iter/s, 0.144659s/100 iters), loss = 0.261425
I0428 19:54:51.187958 28063 solver.cpp:238]     Train net output #0: loss = 0.261425 (* 1 = 0.261425 loss)
I0428 19:54:51.187964 28063 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:54:51.335187 28063 solver.cpp:219] Iteration 700 (679.197 iter/s, 0.147233s/100 iters), loss = 0.362618
I0428 19:54:51.335213 28063 solver.cpp:238]     Train net output #0: loss = 0.362618 (* 1 = 0.362618 loss)
I0428 19:54:51.335220 28063 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:54:51.483655 28063 solver.cpp:219] Iteration 800 (673.728 iter/s, 0.148428s/100 iters), loss = 0.56261
I0428 19:54:51.483685 28063 solver.cpp:238]     Train net output #0: loss = 0.56261 (* 1 = 0.56261 loss)
I0428 19:54:51.483707 28063 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:54:51.627176 28063 solver.cpp:219] Iteration 900 (696.972 iter/s, 0.143478s/100 iters), loss = 0.467646
I0428 19:54:51.627200 28063 solver.cpp:238]     Train net output #0: loss = 0.467646 (* 1 = 0.467646 loss)
I0428 19:54:51.627223 28063 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:54:51.675204 28069 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:51.769323 28063 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:54:51.771078 28063 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:54:51.771839 28063 solver.cpp:311] Iteration 1000, loss = 0.345831
I0428 19:54:51.771854 28063 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:54:51.848037 28070 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:51.848637 28063 solver.cpp:398]     Test net output #0: accuracy = 0.8661
I0428 19:54:51.848675 28063 solver.cpp:398]     Test net output #1: loss = 0.359056 (* 1 = 0.359056 loss)
I0428 19:54:51.848680 28063 solver.cpp:316] Optimization Done.
I0428 19:54:51.848683 28063 caffe.cpp:259] Optimization Done.
