I0428 20:36:13.176265  4763 caffe.cpp:218] Using GPUs 0
I0428 20:36:13.210057  4763 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:36:13.726037  4763 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1633.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:36:13.726168  4763 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1633.prototxt
I0428 20:36:13.726544  4763 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:36:13.726575  4763 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:36:13.726660  4763 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:13.726737  4763 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:13.726836  4763 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:36:13.726855  4763 net.cpp:86] Creating Layer mnist
I0428 20:36:13.726861  4763 net.cpp:382] mnist -> data
I0428 20:36:13.726879  4763 net.cpp:382] mnist -> label
I0428 20:36:13.727846  4763 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:36:13.729977  4763 net.cpp:124] Setting up mnist
I0428 20:36:13.730023  4763 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:36:13.730028  4763 net.cpp:131] Top shape: 64 (64)
I0428 20:36:13.730032  4763 net.cpp:139] Memory required for data: 200960
I0428 20:36:13.730038  4763 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:13.730051  4763 net.cpp:86] Creating Layer conv0
I0428 20:36:13.730068  4763 net.cpp:408] conv0 <- data
I0428 20:36:13.730078  4763 net.cpp:382] conv0 -> conv0
I0428 20:36:13.970242  4763 net.cpp:124] Setting up conv0
I0428 20:36:13.970285  4763 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:36:13.970289  4763 net.cpp:139] Memory required for data: 14946560
I0428 20:36:13.970304  4763 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:13.970316  4763 net.cpp:86] Creating Layer pool0
I0428 20:36:13.970319  4763 net.cpp:408] pool0 <- conv0
I0428 20:36:13.970325  4763 net.cpp:382] pool0 -> pool0
I0428 20:36:13.970388  4763 net.cpp:124] Setting up pool0
I0428 20:36:13.970394  4763 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:36:13.970397  4763 net.cpp:139] Memory required for data: 18632960
I0428 20:36:13.970401  4763 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:13.970410  4763 net.cpp:86] Creating Layer conv1
I0428 20:36:13.970413  4763 net.cpp:408] conv1 <- pool0
I0428 20:36:13.970418  4763 net.cpp:382] conv1 -> conv1
I0428 20:36:13.973803  4763 net.cpp:124] Setting up conv1
I0428 20:36:13.973834  4763 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:36:13.973837  4763 net.cpp:139] Memory required for data: 19452160
I0428 20:36:13.973845  4763 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:13.973855  4763 net.cpp:86] Creating Layer pool1
I0428 20:36:13.973858  4763 net.cpp:408] pool1 <- conv1
I0428 20:36:13.973862  4763 net.cpp:382] pool1 -> pool1
I0428 20:36:13.973913  4763 net.cpp:124] Setting up pool1
I0428 20:36:13.973919  4763 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:36:13.973922  4763 net.cpp:139] Memory required for data: 19656960
I0428 20:36:13.973924  4763 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:13.973932  4763 net.cpp:86] Creating Layer ip1
I0428 20:36:13.973934  4763 net.cpp:408] ip1 <- pool1
I0428 20:36:13.973938  4763 net.cpp:382] ip1 -> ip1
I0428 20:36:13.974270  4763 net.cpp:124] Setting up ip1
I0428 20:36:13.974278  4763 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:13.974298  4763 net.cpp:139] Memory required for data: 19669760
I0428 20:36:13.974304  4763 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:13.974309  4763 net.cpp:86] Creating Layer relu1
I0428 20:36:13.974313  4763 net.cpp:408] relu1 <- ip1
I0428 20:36:13.974318  4763 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:13.974478  4763 net.cpp:124] Setting up relu1
I0428 20:36:13.974486  4763 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:13.974489  4763 net.cpp:139] Memory required for data: 19682560
I0428 20:36:13.974493  4763 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:13.974498  4763 net.cpp:86] Creating Layer ip2
I0428 20:36:13.974501  4763 net.cpp:408] ip2 <- ip1
I0428 20:36:13.974506  4763 net.cpp:382] ip2 -> ip2
I0428 20:36:13.974613  4763 net.cpp:124] Setting up ip2
I0428 20:36:13.974620  4763 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:36:13.974623  4763 net.cpp:139] Memory required for data: 19688960
I0428 20:36:13.974628  4763 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:13.974634  4763 net.cpp:86] Creating Layer relu2
I0428 20:36:13.974637  4763 net.cpp:408] relu2 <- ip2
I0428 20:36:13.974642  4763 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:13.975432  4763 net.cpp:124] Setting up relu2
I0428 20:36:13.975445  4763 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:36:13.975463  4763 net.cpp:139] Memory required for data: 19695360
I0428 20:36:13.975467  4763 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:13.975474  4763 net.cpp:86] Creating Layer ip3
I0428 20:36:13.975478  4763 net.cpp:408] ip3 <- ip2
I0428 20:36:13.975484  4763 net.cpp:382] ip3 -> ip3
I0428 20:36:13.975581  4763 net.cpp:124] Setting up ip3
I0428 20:36:13.975589  4763 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:13.975592  4763 net.cpp:139] Memory required for data: 19697920
I0428 20:36:13.975600  4763 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:13.975605  4763 net.cpp:86] Creating Layer relu3
I0428 20:36:13.975607  4763 net.cpp:408] relu3 <- ip3
I0428 20:36:13.975625  4763 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:13.975793  4763 net.cpp:124] Setting up relu3
I0428 20:36:13.975802  4763 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:13.975805  4763 net.cpp:139] Memory required for data: 19700480
I0428 20:36:13.975808  4763 layer_factory.hpp:77] Creating layer loss
I0428 20:36:13.975814  4763 net.cpp:86] Creating Layer loss
I0428 20:36:13.975817  4763 net.cpp:408] loss <- ip3
I0428 20:36:13.975821  4763 net.cpp:408] loss <- label
I0428 20:36:13.975826  4763 net.cpp:382] loss -> loss
I0428 20:36:13.975844  4763 layer_factory.hpp:77] Creating layer loss
I0428 20:36:13.976083  4763 net.cpp:124] Setting up loss
I0428 20:36:13.976092  4763 net.cpp:131] Top shape: (1)
I0428 20:36:13.976095  4763 net.cpp:134]     with loss weight 1
I0428 20:36:13.976109  4763 net.cpp:139] Memory required for data: 19700484
I0428 20:36:13.976114  4763 net.cpp:200] loss needs backward computation.
I0428 20:36:13.976116  4763 net.cpp:200] relu3 needs backward computation.
I0428 20:36:13.976119  4763 net.cpp:200] ip3 needs backward computation.
I0428 20:36:13.976122  4763 net.cpp:200] relu2 needs backward computation.
I0428 20:36:13.976125  4763 net.cpp:200] ip2 needs backward computation.
I0428 20:36:13.976128  4763 net.cpp:200] relu1 needs backward computation.
I0428 20:36:13.976130  4763 net.cpp:200] ip1 needs backward computation.
I0428 20:36:13.976133  4763 net.cpp:200] pool1 needs backward computation.
I0428 20:36:13.976136  4763 net.cpp:200] conv1 needs backward computation.
I0428 20:36:13.976140  4763 net.cpp:200] pool0 needs backward computation.
I0428 20:36:13.976142  4763 net.cpp:200] conv0 needs backward computation.
I0428 20:36:13.976145  4763 net.cpp:202] mnist does not need backward computation.
I0428 20:36:13.976148  4763 net.cpp:244] This network produces output loss
I0428 20:36:13.976157  4763 net.cpp:257] Network initialization done.
I0428 20:36:13.976522  4763 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1633.prototxt
I0428 20:36:13.976582  4763 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:36:13.976686  4763 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:13.976768  4763 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:13.976830  4763 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:36:13.976858  4763 net.cpp:86] Creating Layer mnist
I0428 20:36:13.976881  4763 net.cpp:382] mnist -> data
I0428 20:36:13.976888  4763 net.cpp:382] mnist -> label
I0428 20:36:13.976986  4763 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:36:13.978432  4763 net.cpp:124] Setting up mnist
I0428 20:36:13.978444  4763 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:36:13.978464  4763 net.cpp:131] Top shape: 100 (100)
I0428 20:36:13.978467  4763 net.cpp:139] Memory required for data: 314000
I0428 20:36:13.978471  4763 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:36:13.978477  4763 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:36:13.978480  4763 net.cpp:408] label_mnist_1_split <- label
I0428 20:36:13.978488  4763 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:36:13.978494  4763 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:36:13.978593  4763 net.cpp:124] Setting up label_mnist_1_split
I0428 20:36:13.978602  4763 net.cpp:131] Top shape: 100 (100)
I0428 20:36:13.978605  4763 net.cpp:131] Top shape: 100 (100)
I0428 20:36:13.978608  4763 net.cpp:139] Memory required for data: 314800
I0428 20:36:13.978611  4763 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:13.978621  4763 net.cpp:86] Creating Layer conv0
I0428 20:36:13.978624  4763 net.cpp:408] conv0 <- data
I0428 20:36:13.978629  4763 net.cpp:382] conv0 -> conv0
I0428 20:36:13.980293  4763 net.cpp:124] Setting up conv0
I0428 20:36:13.980305  4763 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:36:13.980325  4763 net.cpp:139] Memory required for data: 23354800
I0428 20:36:13.980334  4763 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:13.980341  4763 net.cpp:86] Creating Layer pool0
I0428 20:36:13.980345  4763 net.cpp:408] pool0 <- conv0
I0428 20:36:13.980348  4763 net.cpp:382] pool0 -> pool0
I0428 20:36:13.980401  4763 net.cpp:124] Setting up pool0
I0428 20:36:13.980406  4763 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:36:13.980408  4763 net.cpp:139] Memory required for data: 29114800
I0428 20:36:13.980412  4763 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:13.980420  4763 net.cpp:86] Creating Layer conv1
I0428 20:36:13.980423  4763 net.cpp:408] conv1 <- pool0
I0428 20:36:13.980429  4763 net.cpp:382] conv1 -> conv1
I0428 20:36:13.983496  4763 net.cpp:124] Setting up conv1
I0428 20:36:13.983526  4763 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:36:13.983530  4763 net.cpp:139] Memory required for data: 30394800
I0428 20:36:13.983538  4763 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:13.983544  4763 net.cpp:86] Creating Layer pool1
I0428 20:36:13.983547  4763 net.cpp:408] pool1 <- conv1
I0428 20:36:13.983552  4763 net.cpp:382] pool1 -> pool1
I0428 20:36:13.983604  4763 net.cpp:124] Setting up pool1
I0428 20:36:13.983610  4763 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:36:13.983613  4763 net.cpp:139] Memory required for data: 30714800
I0428 20:36:13.983616  4763 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:13.983623  4763 net.cpp:86] Creating Layer ip1
I0428 20:36:13.983626  4763 net.cpp:408] ip1 <- pool1
I0428 20:36:13.983633  4763 net.cpp:382] ip1 -> ip1
I0428 20:36:13.983958  4763 net.cpp:124] Setting up ip1
I0428 20:36:13.984006  4763 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:13.984009  4763 net.cpp:139] Memory required for data: 30734800
I0428 20:36:13.984016  4763 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:13.984021  4763 net.cpp:86] Creating Layer relu1
I0428 20:36:13.984025  4763 net.cpp:408] relu1 <- ip1
I0428 20:36:13.984030  4763 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:13.984189  4763 net.cpp:124] Setting up relu1
I0428 20:36:13.984200  4763 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:13.984202  4763 net.cpp:139] Memory required for data: 30754800
I0428 20:36:13.984205  4763 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:13.984211  4763 net.cpp:86] Creating Layer ip2
I0428 20:36:13.984215  4763 net.cpp:408] ip2 <- ip1
I0428 20:36:13.984220  4763 net.cpp:382] ip2 -> ip2
I0428 20:36:13.984345  4763 net.cpp:124] Setting up ip2
I0428 20:36:13.984354  4763 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:36:13.984356  4763 net.cpp:139] Memory required for data: 30764800
I0428 20:36:13.984361  4763 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:13.984365  4763 net.cpp:86] Creating Layer relu2
I0428 20:36:13.984369  4763 net.cpp:408] relu2 <- ip2
I0428 20:36:13.984374  4763 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:13.984575  4763 net.cpp:124] Setting up relu2
I0428 20:36:13.984599  4763 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:36:13.984603  4763 net.cpp:139] Memory required for data: 30774800
I0428 20:36:13.984606  4763 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:13.984613  4763 net.cpp:86] Creating Layer ip3
I0428 20:36:13.984617  4763 net.cpp:408] ip3 <- ip2
I0428 20:36:13.984623  4763 net.cpp:382] ip3 -> ip3
I0428 20:36:13.984729  4763 net.cpp:124] Setting up ip3
I0428 20:36:13.984735  4763 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:13.984740  4763 net.cpp:139] Memory required for data: 30778800
I0428 20:36:13.984748  4763 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:13.984752  4763 net.cpp:86] Creating Layer relu3
I0428 20:36:13.984755  4763 net.cpp:408] relu3 <- ip3
I0428 20:36:13.984760  4763 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:13.985625  4763 net.cpp:124] Setting up relu3
I0428 20:36:13.985637  4763 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:13.985657  4763 net.cpp:139] Memory required for data: 30782800
I0428 20:36:13.985661  4763 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:36:13.985667  4763 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:36:13.985672  4763 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:36:13.985678  4763 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:36:13.985684  4763 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:36:13.985745  4763 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:36:13.985759  4763 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:13.985769  4763 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:13.985771  4763 net.cpp:139] Memory required for data: 30790800
I0428 20:36:13.985774  4763 layer_factory.hpp:77] Creating layer accuracy
I0428 20:36:13.985780  4763 net.cpp:86] Creating Layer accuracy
I0428 20:36:13.985783  4763 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:36:13.985787  4763 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:36:13.985793  4763 net.cpp:382] accuracy -> accuracy
I0428 20:36:13.985805  4763 net.cpp:124] Setting up accuracy
I0428 20:36:13.985810  4763 net.cpp:131] Top shape: (1)
I0428 20:36:13.985812  4763 net.cpp:139] Memory required for data: 30790804
I0428 20:36:13.985816  4763 layer_factory.hpp:77] Creating layer loss
I0428 20:36:13.985821  4763 net.cpp:86] Creating Layer loss
I0428 20:36:13.985824  4763 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:36:13.985827  4763 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:36:13.985833  4763 net.cpp:382] loss -> loss
I0428 20:36:13.985839  4763 layer_factory.hpp:77] Creating layer loss
I0428 20:36:13.986129  4763 net.cpp:124] Setting up loss
I0428 20:36:13.986140  4763 net.cpp:131] Top shape: (1)
I0428 20:36:13.986142  4763 net.cpp:134]     with loss weight 1
I0428 20:36:13.986160  4763 net.cpp:139] Memory required for data: 30790808
I0428 20:36:13.986163  4763 net.cpp:200] loss needs backward computation.
I0428 20:36:13.986173  4763 net.cpp:202] accuracy does not need backward computation.
I0428 20:36:13.986178  4763 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:36:13.986181  4763 net.cpp:200] relu3 needs backward computation.
I0428 20:36:13.986184  4763 net.cpp:200] ip3 needs backward computation.
I0428 20:36:13.986187  4763 net.cpp:200] relu2 needs backward computation.
I0428 20:36:13.986191  4763 net.cpp:200] ip2 needs backward computation.
I0428 20:36:13.986193  4763 net.cpp:200] relu1 needs backward computation.
I0428 20:36:13.986196  4763 net.cpp:200] ip1 needs backward computation.
I0428 20:36:13.986199  4763 net.cpp:200] pool1 needs backward computation.
I0428 20:36:13.986202  4763 net.cpp:200] conv1 needs backward computation.
I0428 20:36:13.986207  4763 net.cpp:200] pool0 needs backward computation.
I0428 20:36:13.986209  4763 net.cpp:200] conv0 needs backward computation.
I0428 20:36:13.986213  4763 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:36:13.986217  4763 net.cpp:202] mnist does not need backward computation.
I0428 20:36:13.986219  4763 net.cpp:244] This network produces output accuracy
I0428 20:36:13.986223  4763 net.cpp:244] This network produces output loss
I0428 20:36:13.986234  4763 net.cpp:257] Network initialization done.
I0428 20:36:13.986279  4763 solver.cpp:56] Solver scaffolding done.
I0428 20:36:13.986655  4763 caffe.cpp:248] Starting Optimization
I0428 20:36:13.986661  4763 solver.cpp:273] Solving LeNet
I0428 20:36:13.986663  4763 solver.cpp:274] Learning Rate Policy: inv
I0428 20:36:13.986883  4763 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:36:14.095866  4770 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:14.098672  4763 solver.cpp:398]     Test net output #0: accuracy = 0.0953
I0428 20:36:14.098691  4763 solver.cpp:398]     Test net output #1: loss = 2.31682 (* 1 = 2.31682 loss)
I0428 20:36:14.108567  4763 solver.cpp:219] Iteration 0 (-8.09115e-31 iter/s, 0.121857s/100 iters), loss = 2.29485
I0428 20:36:14.108592  4763 solver.cpp:238]     Train net output #0: loss = 2.29485 (* 1 = 2.29485 loss)
I0428 20:36:14.108603  4763 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:36:14.347403  4763 solver.cpp:219] Iteration 100 (418.8 iter/s, 0.238777s/100 iters), loss = 0.619032
I0428 20:36:14.347446  4763 solver.cpp:238]     Train net output #0: loss = 0.619032 (* 1 = 0.619032 loss)
I0428 20:36:14.347453  4763 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:36:14.597151  4763 solver.cpp:219] Iteration 200 (400.503 iter/s, 0.249686s/100 iters), loss = 0.91352
I0428 20:36:14.597192  4763 solver.cpp:238]     Train net output #0: loss = 0.91352 (* 1 = 0.91352 loss)
I0428 20:36:14.597198  4763 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:36:14.848556  4763 solver.cpp:219] Iteration 300 (397.834 iter/s, 0.251361s/100 iters), loss = 0.86744
I0428 20:36:14.848593  4763 solver.cpp:238]     Train net output #0: loss = 0.86744 (* 1 = 0.86744 loss)
I0428 20:36:14.848600  4763 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:36:15.098209  4763 solver.cpp:219] Iteration 400 (400.625 iter/s, 0.24961s/100 iters), loss = 0.728668
I0428 20:36:15.098253  4763 solver.cpp:238]     Train net output #0: loss = 0.728668 (* 1 = 0.728668 loss)
I0428 20:36:15.098259  4763 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:36:15.337348  4763 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:36:15.445894  4770 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:15.448755  4763 solver.cpp:398]     Test net output #0: accuracy = 0.6885
I0428 20:36:15.448793  4763 solver.cpp:398]     Test net output #1: loss = 0.763298 (* 1 = 0.763298 loss)
I0428 20:36:15.451057  4763 solver.cpp:219] Iteration 500 (283.446 iter/s, 0.352801s/100 iters), loss = 0.763312
I0428 20:36:15.451097  4763 solver.cpp:238]     Train net output #0: loss = 0.763312 (* 1 = 0.763312 loss)
I0428 20:36:15.451118  4763 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:36:15.685540  4763 solver.cpp:219] Iteration 600 (426.545 iter/s, 0.234442s/100 iters), loss = 0.962318
I0428 20:36:15.685572  4763 solver.cpp:238]     Train net output #0: loss = 0.962318 (* 1 = 0.962318 loss)
I0428 20:36:15.685578  4763 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:36:15.920840  4763 solver.cpp:219] Iteration 700 (425.078 iter/s, 0.235251s/100 iters), loss = 0.686537
I0428 20:36:15.920881  4763 solver.cpp:238]     Train net output #0: loss = 0.686537 (* 1 = 0.686537 loss)
I0428 20:36:15.920887  4763 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:36:16.156396  4763 solver.cpp:219] Iteration 800 (424.628 iter/s, 0.2355s/100 iters), loss = 0.939086
I0428 20:36:16.156432  4763 solver.cpp:238]     Train net output #0: loss = 0.939086 (* 1 = 0.939086 loss)
I0428 20:36:16.156440  4763 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:36:16.388206  4763 solver.cpp:219] Iteration 900 (431.466 iter/s, 0.231768s/100 iters), loss = 0.997892
I0428 20:36:16.388247  4763 solver.cpp:238]     Train net output #0: loss = 0.997892 (* 1 = 0.997892 loss)
I0428 20:36:16.388253  4763 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:36:16.464274  4769 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:16.617760  4763 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:36:16.622294  4763 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:36:16.624358  4763 solver.cpp:311] Iteration 1000, loss = 0.720623
I0428 20:36:16.624373  4763 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:36:16.729943  4770 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:16.733956  4763 solver.cpp:398]     Test net output #0: accuracy = 0.6899
I0428 20:36:16.733974  4763 solver.cpp:398]     Test net output #1: loss = 0.745 (* 1 = 0.745 loss)
I0428 20:36:16.733996  4763 solver.cpp:316] Optimization Done.
I0428 20:36:16.733999  4763 caffe.cpp:259] Optimization Done.
