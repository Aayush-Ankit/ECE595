I0428 19:35:18.301728 23483 caffe.cpp:218] Using GPUs 0
I0428 19:35:18.337679 23483 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:18.842902 23483 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test222.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:18.843044 23483 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test222.prototxt
I0428 19:35:18.843410 23483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:18.843426 23483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:18.843513 23483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:18.843587 23483 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:18.843683 23483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:18.843706 23483 net.cpp:86] Creating Layer mnist
I0428 19:35:18.843715 23483 net.cpp:382] mnist -> data
I0428 19:35:18.843739 23483 net.cpp:382] mnist -> label
I0428 19:35:18.844830 23483 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:18.847285 23483 net.cpp:124] Setting up mnist
I0428 19:35:18.847302 23483 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:18.847308 23483 net.cpp:131] Top shape: 64 (64)
I0428 19:35:18.847312 23483 net.cpp:139] Memory required for data: 200960
I0428 19:35:18.847318 23483 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:18.847368 23483 net.cpp:86] Creating Layer conv0
I0428 19:35:18.847376 23483 net.cpp:408] conv0 <- data
I0428 19:35:18.847388 23483 net.cpp:382] conv0 -> conv0
I0428 19:35:19.133038 23483 net.cpp:124] Setting up conv0
I0428 19:35:19.133066 23483 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:19.133070 23483 net.cpp:139] Memory required for data: 7573760
I0428 19:35:19.133085 23483 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:19.133098 23483 net.cpp:86] Creating Layer pool0
I0428 19:35:19.133121 23483 net.cpp:408] pool0 <- conv0
I0428 19:35:19.133128 23483 net.cpp:382] pool0 -> pool0
I0428 19:35:19.133177 23483 net.cpp:124] Setting up pool0
I0428 19:35:19.133184 23483 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:19.133188 23483 net.cpp:139] Memory required for data: 9416960
I0428 19:35:19.133190 23483 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:19.133198 23483 net.cpp:86] Creating Layer ip1
I0428 19:35:19.133201 23483 net.cpp:408] ip1 <- pool0
I0428 19:35:19.133206 23483 net.cpp:382] ip1 -> ip1
I0428 19:35:19.135171 23483 net.cpp:124] Setting up ip1
I0428 19:35:19.135185 23483 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:19.135188 23483 net.cpp:139] Memory required for data: 9423360
I0428 19:35:19.135196 23483 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:19.135203 23483 net.cpp:86] Creating Layer relu1
I0428 19:35:19.135207 23483 net.cpp:408] relu1 <- ip1
I0428 19:35:19.135212 23483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:19.135385 23483 net.cpp:124] Setting up relu1
I0428 19:35:19.135396 23483 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:19.135401 23483 net.cpp:139] Memory required for data: 9429760
I0428 19:35:19.135403 23483 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:19.135411 23483 net.cpp:86] Creating Layer ip2
I0428 19:35:19.135413 23483 net.cpp:408] ip2 <- ip1
I0428 19:35:19.135419 23483 net.cpp:382] ip2 -> ip2
I0428 19:35:19.135534 23483 net.cpp:124] Setting up ip2
I0428 19:35:19.135541 23483 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:19.135545 23483 net.cpp:139] Memory required for data: 9442560
I0428 19:35:19.135552 23483 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:19.135558 23483 net.cpp:86] Creating Layer relu2
I0428 19:35:19.135561 23483 net.cpp:408] relu2 <- ip2
I0428 19:35:19.135566 23483 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:19.136322 23483 net.cpp:124] Setting up relu2
I0428 19:35:19.136334 23483 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:19.136337 23483 net.cpp:139] Memory required for data: 9455360
I0428 19:35:19.136342 23483 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:19.136348 23483 net.cpp:86] Creating Layer ip3
I0428 19:35:19.136351 23483 net.cpp:408] ip3 <- ip2
I0428 19:35:19.136358 23483 net.cpp:382] ip3 -> ip3
I0428 19:35:19.136466 23483 net.cpp:124] Setting up ip3
I0428 19:35:19.136473 23483 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:19.136476 23483 net.cpp:139] Memory required for data: 9457920
I0428 19:35:19.136482 23483 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:19.136487 23483 net.cpp:86] Creating Layer relu3
I0428 19:35:19.136490 23483 net.cpp:408] relu3 <- ip3
I0428 19:35:19.136497 23483 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:19.136651 23483 net.cpp:124] Setting up relu3
I0428 19:35:19.136659 23483 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:19.136662 23483 net.cpp:139] Memory required for data: 9460480
I0428 19:35:19.136665 23483 layer_factory.hpp:77] Creating layer loss
I0428 19:35:19.136675 23483 net.cpp:86] Creating Layer loss
I0428 19:35:19.136682 23483 net.cpp:408] loss <- ip3
I0428 19:35:19.136687 23483 net.cpp:408] loss <- label
I0428 19:35:19.136692 23483 net.cpp:382] loss -> loss
I0428 19:35:19.136705 23483 layer_factory.hpp:77] Creating layer loss
I0428 19:35:19.136987 23483 net.cpp:124] Setting up loss
I0428 19:35:19.136997 23483 net.cpp:131] Top shape: (1)
I0428 19:35:19.137001 23483 net.cpp:134]     with loss weight 1
I0428 19:35:19.137017 23483 net.cpp:139] Memory required for data: 9460484
I0428 19:35:19.137019 23483 net.cpp:200] loss needs backward computation.
I0428 19:35:19.137023 23483 net.cpp:200] relu3 needs backward computation.
I0428 19:35:19.137025 23483 net.cpp:200] ip3 needs backward computation.
I0428 19:35:19.137028 23483 net.cpp:200] relu2 needs backward computation.
I0428 19:35:19.137032 23483 net.cpp:200] ip2 needs backward computation.
I0428 19:35:19.137033 23483 net.cpp:200] relu1 needs backward computation.
I0428 19:35:19.137037 23483 net.cpp:200] ip1 needs backward computation.
I0428 19:35:19.137048 23483 net.cpp:200] pool0 needs backward computation.
I0428 19:35:19.137051 23483 net.cpp:200] conv0 needs backward computation.
I0428 19:35:19.137055 23483 net.cpp:202] mnist does not need backward computation.
I0428 19:35:19.137058 23483 net.cpp:244] This network produces output loss
I0428 19:35:19.137068 23483 net.cpp:257] Network initialization done.
I0428 19:35:19.137362 23483 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test222.prototxt
I0428 19:35:19.137387 23483 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:19.137470 23483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:19.137538 23483 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:19.137583 23483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:19.137598 23483 net.cpp:86] Creating Layer mnist
I0428 19:35:19.137601 23483 net.cpp:382] mnist -> data
I0428 19:35:19.137610 23483 net.cpp:382] mnist -> label
I0428 19:35:19.137699 23483 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:19.138815 23483 net.cpp:124] Setting up mnist
I0428 19:35:19.138829 23483 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:19.138834 23483 net.cpp:131] Top shape: 100 (100)
I0428 19:35:19.138837 23483 net.cpp:139] Memory required for data: 314000
I0428 19:35:19.138841 23483 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:19.138850 23483 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:19.138856 23483 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:19.138862 23483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:19.138869 23483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:19.138918 23483 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:19.138926 23483 net.cpp:131] Top shape: 100 (100)
I0428 19:35:19.138929 23483 net.cpp:131] Top shape: 100 (100)
I0428 19:35:19.138932 23483 net.cpp:139] Memory required for data: 314800
I0428 19:35:19.138944 23483 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:19.138954 23483 net.cpp:86] Creating Layer conv0
I0428 19:35:19.138959 23483 net.cpp:408] conv0 <- data
I0428 19:35:19.138964 23483 net.cpp:382] conv0 -> conv0
I0428 19:35:19.140678 23483 net.cpp:124] Setting up conv0
I0428 19:35:19.140693 23483 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:19.140697 23483 net.cpp:139] Memory required for data: 11834800
I0428 19:35:19.140707 23483 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:19.140713 23483 net.cpp:86] Creating Layer pool0
I0428 19:35:19.140717 23483 net.cpp:408] pool0 <- conv0
I0428 19:35:19.140722 23483 net.cpp:382] pool0 -> pool0
I0428 19:35:19.140759 23483 net.cpp:124] Setting up pool0
I0428 19:35:19.140766 23483 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:19.140769 23483 net.cpp:139] Memory required for data: 14714800
I0428 19:35:19.140772 23483 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:19.140779 23483 net.cpp:86] Creating Layer ip1
I0428 19:35:19.140782 23483 net.cpp:408] ip1 <- pool0
I0428 19:35:19.140787 23483 net.cpp:382] ip1 -> ip1
I0428 19:35:19.142798 23483 net.cpp:124] Setting up ip1
I0428 19:35:19.142812 23483 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:19.142815 23483 net.cpp:139] Memory required for data: 14724800
I0428 19:35:19.142823 23483 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:19.142830 23483 net.cpp:86] Creating Layer relu1
I0428 19:35:19.142833 23483 net.cpp:408] relu1 <- ip1
I0428 19:35:19.142838 23483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:19.143052 23483 net.cpp:124] Setting up relu1
I0428 19:35:19.143062 23483 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:19.143065 23483 net.cpp:139] Memory required for data: 14734800
I0428 19:35:19.143069 23483 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:19.143075 23483 net.cpp:86] Creating Layer ip2
I0428 19:35:19.143079 23483 net.cpp:408] ip2 <- ip1
I0428 19:35:19.143085 23483 net.cpp:382] ip2 -> ip2
I0428 19:35:19.143195 23483 net.cpp:124] Setting up ip2
I0428 19:35:19.143203 23483 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:19.143205 23483 net.cpp:139] Memory required for data: 14754800
I0428 19:35:19.143213 23483 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:19.143218 23483 net.cpp:86] Creating Layer relu2
I0428 19:35:19.143220 23483 net.cpp:408] relu2 <- ip2
I0428 19:35:19.143240 23483 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:19.144048 23483 net.cpp:124] Setting up relu2
I0428 19:35:19.144060 23483 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:19.144063 23483 net.cpp:139] Memory required for data: 14774800
I0428 19:35:19.144068 23483 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:19.144074 23483 net.cpp:86] Creating Layer ip3
I0428 19:35:19.144078 23483 net.cpp:408] ip3 <- ip2
I0428 19:35:19.144083 23483 net.cpp:382] ip3 -> ip3
I0428 19:35:19.144240 23483 net.cpp:124] Setting up ip3
I0428 19:35:19.144249 23483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:19.144253 23483 net.cpp:139] Memory required for data: 14778800
I0428 19:35:19.144258 23483 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:19.144263 23483 net.cpp:86] Creating Layer relu3
I0428 19:35:19.144266 23483 net.cpp:408] relu3 <- ip3
I0428 19:35:19.144270 23483 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:19.144445 23483 net.cpp:124] Setting up relu3
I0428 19:35:19.144470 23483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:19.144474 23483 net.cpp:139] Memory required for data: 14782800
I0428 19:35:19.144476 23483 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:19.144481 23483 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:19.144485 23483 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:19.144490 23483 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:19.144495 23483 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:19.144544 23483 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:19.144551 23483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:19.144567 23483 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:19.144569 23483 net.cpp:139] Memory required for data: 14790800
I0428 19:35:19.144578 23483 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:19.144583 23483 net.cpp:86] Creating Layer accuracy
I0428 19:35:19.144587 23483 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:19.144590 23483 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:19.144596 23483 net.cpp:382] accuracy -> accuracy
I0428 19:35:19.144608 23483 net.cpp:124] Setting up accuracy
I0428 19:35:19.144613 23483 net.cpp:131] Top shape: (1)
I0428 19:35:19.144615 23483 net.cpp:139] Memory required for data: 14790804
I0428 19:35:19.144618 23483 layer_factory.hpp:77] Creating layer loss
I0428 19:35:19.144623 23483 net.cpp:86] Creating Layer loss
I0428 19:35:19.144626 23483 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:19.144649 23483 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:19.144655 23483 net.cpp:382] loss -> loss
I0428 19:35:19.144661 23483 layer_factory.hpp:77] Creating layer loss
I0428 19:35:19.144917 23483 net.cpp:124] Setting up loss
I0428 19:35:19.144927 23483 net.cpp:131] Top shape: (1)
I0428 19:35:19.144937 23483 net.cpp:134]     with loss weight 1
I0428 19:35:19.144942 23483 net.cpp:139] Memory required for data: 14790808
I0428 19:35:19.144946 23483 net.cpp:200] loss needs backward computation.
I0428 19:35:19.144951 23483 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:19.144955 23483 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:19.144958 23483 net.cpp:200] relu3 needs backward computation.
I0428 19:35:19.144961 23483 net.cpp:200] ip3 needs backward computation.
I0428 19:35:19.144964 23483 net.cpp:200] relu2 needs backward computation.
I0428 19:35:19.144968 23483 net.cpp:200] ip2 needs backward computation.
I0428 19:35:19.144970 23483 net.cpp:200] relu1 needs backward computation.
I0428 19:35:19.144978 23483 net.cpp:200] ip1 needs backward computation.
I0428 19:35:19.144980 23483 net.cpp:200] pool0 needs backward computation.
I0428 19:35:19.144984 23483 net.cpp:200] conv0 needs backward computation.
I0428 19:35:19.144986 23483 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:19.144990 23483 net.cpp:202] mnist does not need backward computation.
I0428 19:35:19.144994 23483 net.cpp:244] This network produces output accuracy
I0428 19:35:19.144996 23483 net.cpp:244] This network produces output loss
I0428 19:35:19.145012 23483 net.cpp:257] Network initialization done.
I0428 19:35:19.145054 23483 solver.cpp:56] Solver scaffolding done.
I0428 19:35:19.145383 23483 caffe.cpp:248] Starting Optimization
I0428 19:35:19.145391 23483 solver.cpp:273] Solving LeNet
I0428 19:35:19.145393 23483 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:19.146715 23483 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:19.245201 23490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:19.247797 23483 solver.cpp:398]     Test net output #0: accuracy = 0.1
I0428 19:35:19.247817 23483 solver.cpp:398]     Test net output #1: loss = 2.32273 (* 1 = 2.32273 loss)
I0428 19:35:19.252358 23483 solver.cpp:219] Iteration 0 (-7.73517e-43 iter/s, 0.106906s/100 iters), loss = 2.31035
I0428 19:35:19.252382 23483 solver.cpp:238]     Train net output #0: loss = 2.31035 (* 1 = 2.31035 loss)
I0428 19:35:19.252409 23483 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:19.395282 23483 solver.cpp:219] Iteration 100 (699.869 iter/s, 0.142884s/100 iters), loss = 0.986545
I0428 19:35:19.395323 23483 solver.cpp:238]     Train net output #0: loss = 0.986545 (* 1 = 0.986545 loss)
I0428 19:35:19.395328 23483 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:19.536286 23483 solver.cpp:219] Iteration 200 (709.464 iter/s, 0.140952s/100 iters), loss = 0.80791
I0428 19:35:19.536325 23483 solver.cpp:238]     Train net output #0: loss = 0.80791 (* 1 = 0.80791 loss)
I0428 19:35:19.536330 23483 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:19.680565 23483 solver.cpp:219] Iteration 300 (693.35 iter/s, 0.144227s/100 iters), loss = 0.522508
I0428 19:35:19.680603 23483 solver.cpp:238]     Train net output #0: loss = 0.522508 (* 1 = 0.522508 loss)
I0428 19:35:19.680608 23483 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:19.823853 23483 solver.cpp:219] Iteration 400 (698.137 iter/s, 0.143238s/100 iters), loss = 0.517736
I0428 19:35:19.823875 23483 solver.cpp:238]     Train net output #0: loss = 0.517736 (* 1 = 0.517736 loss)
I0428 19:35:19.823881 23483 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:19.963461 23483 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:20.057425 23490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:20.060139 23483 solver.cpp:398]     Test net output #0: accuracy = 0.7787
I0428 19:35:20.060174 23483 solver.cpp:398]     Test net output #1: loss = 0.58838 (* 1 = 0.58838 loss)
I0428 19:35:20.061563 23483 solver.cpp:219] Iteration 500 (420.751 iter/s, 0.23767s/100 iters), loss = 0.772275
I0428 19:35:20.061588 23483 solver.cpp:238]     Train net output #0: loss = 0.772275 (* 1 = 0.772275 loss)
I0428 19:35:20.061594 23483 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:20.206740 23483 solver.cpp:219] Iteration 600 (688.986 iter/s, 0.145141s/100 iters), loss = 0.465869
I0428 19:35:20.206779 23483 solver.cpp:238]     Train net output #0: loss = 0.465869 (* 1 = 0.465869 loss)
I0428 19:35:20.206785 23483 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:20.348026 23483 solver.cpp:219] Iteration 700 (707.967 iter/s, 0.14125s/100 iters), loss = 0.430992
I0428 19:35:20.348065 23483 solver.cpp:238]     Train net output #0: loss = 0.430992 (* 1 = 0.430992 loss)
I0428 19:35:20.348085 23483 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:20.487773 23483 solver.cpp:219] Iteration 800 (715.761 iter/s, 0.139711s/100 iters), loss = 0.519985
I0428 19:35:20.487797 23483 solver.cpp:238]     Train net output #0: loss = 0.519985 (* 1 = 0.519985 loss)
I0428 19:35:20.487803 23483 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:20.628662 23483 solver.cpp:219] Iteration 900 (709.959 iter/s, 0.140853s/100 iters), loss = 0.265158
I0428 19:35:20.628685 23483 solver.cpp:238]     Train net output #0: loss = 0.265158 (* 1 = 0.265158 loss)
I0428 19:35:20.628691 23483 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:20.676431 23489 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:20.769464 23483 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:20.773607 23483 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:20.775779 23483 solver.cpp:311] Iteration 1000, loss = 0.379323
I0428 19:35:20.775794 23483 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:20.813370 23483 blocking_queue.cpp:49] Waiting for data
I0428 19:35:20.873203 23490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:20.874620 23483 solver.cpp:398]     Test net output #0: accuracy = 0.8732
I0428 19:35:20.874655 23483 solver.cpp:398]     Test net output #1: loss = 0.338446 (* 1 = 0.338446 loss)
I0428 19:35:20.874660 23483 solver.cpp:316] Optimization Done.
I0428 19:35:20.874663 23483 caffe.cpp:259] Optimization Done.
