I0428 20:18:47.613009  1239 caffe.cpp:218] Using GPUs 0
I0428 20:18:47.648643  1239 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:48.158033  1239 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1327.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:48.158174  1239 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1327.prototxt
I0428 20:18:48.158524  1239 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:48.158540  1239 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:48.158622  1239 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:18:48.158691  1239 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:48.158790  1239 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:48.158816  1239 net.cpp:86] Creating Layer mnist
I0428 20:18:48.158823  1239 net.cpp:382] mnist -> data
I0428 20:18:48.158845  1239 net.cpp:382] mnist -> label
I0428 20:18:48.159936  1239 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:48.162410  1239 net.cpp:124] Setting up mnist
I0428 20:18:48.162432  1239 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:48.162438  1239 net.cpp:131] Top shape: 64 (64)
I0428 20:18:48.162442  1239 net.cpp:139] Memory required for data: 200960
I0428 20:18:48.162449  1239 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:48.162468  1239 net.cpp:86] Creating Layer conv0
I0428 20:18:48.162474  1239 net.cpp:408] conv0 <- data
I0428 20:18:48.162487  1239 net.cpp:382] conv0 -> conv0
I0428 20:18:48.454295  1239 net.cpp:124] Setting up conv0
I0428 20:18:48.454324  1239 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:48.454329  1239 net.cpp:139] Memory required for data: 7573760
I0428 20:18:48.454346  1239 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:48.454360  1239 net.cpp:86] Creating Layer pool0
I0428 20:18:48.454365  1239 net.cpp:408] pool0 <- conv0
I0428 20:18:48.454370  1239 net.cpp:382] pool0 -> pool0
I0428 20:18:48.454426  1239 net.cpp:124] Setting up pool0
I0428 20:18:48.454433  1239 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:48.454453  1239 net.cpp:139] Memory required for data: 9416960
I0428 20:18:48.454458  1239 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:48.454470  1239 net.cpp:86] Creating Layer conv1
I0428 20:18:48.454475  1239 net.cpp:408] conv1 <- pool0
I0428 20:18:48.454480  1239 net.cpp:382] conv1 -> conv1
I0428 20:18:48.456686  1239 net.cpp:124] Setting up conv1
I0428 20:18:48.456702  1239 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:18:48.456707  1239 net.cpp:139] Memory required for data: 9826560
I0428 20:18:48.456715  1239 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:48.456723  1239 net.cpp:86] Creating Layer pool1
I0428 20:18:48.456727  1239 net.cpp:408] pool1 <- conv1
I0428 20:18:48.456733  1239 net.cpp:382] pool1 -> pool1
I0428 20:18:48.456773  1239 net.cpp:124] Setting up pool1
I0428 20:18:48.456779  1239 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:18:48.456784  1239 net.cpp:139] Memory required for data: 9928960
I0428 20:18:48.456787  1239 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:48.456795  1239 net.cpp:86] Creating Layer ip1
I0428 20:18:48.456799  1239 net.cpp:408] ip1 <- pool1
I0428 20:18:48.456804  1239 net.cpp:382] ip1 -> ip1
I0428 20:18:48.456944  1239 net.cpp:124] Setting up ip1
I0428 20:18:48.456954  1239 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:48.456956  1239 net.cpp:139] Memory required for data: 9931520
I0428 20:18:48.456964  1239 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:48.456971  1239 net.cpp:86] Creating Layer relu1
I0428 20:18:48.456974  1239 net.cpp:408] relu1 <- ip1
I0428 20:18:48.456979  1239 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:48.457157  1239 net.cpp:124] Setting up relu1
I0428 20:18:48.457167  1239 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:48.457170  1239 net.cpp:139] Memory required for data: 9934080
I0428 20:18:48.457173  1239 layer_factory.hpp:77] Creating layer loss
I0428 20:18:48.457180  1239 net.cpp:86] Creating Layer loss
I0428 20:18:48.457183  1239 net.cpp:408] loss <- ip1
I0428 20:18:48.457187  1239 net.cpp:408] loss <- label
I0428 20:18:48.457193  1239 net.cpp:382] loss -> loss
I0428 20:18:48.457212  1239 layer_factory.hpp:77] Creating layer loss
I0428 20:18:48.458076  1239 net.cpp:124] Setting up loss
I0428 20:18:48.458089  1239 net.cpp:131] Top shape: (1)
I0428 20:18:48.458093  1239 net.cpp:134]     with loss weight 1
I0428 20:18:48.458108  1239 net.cpp:139] Memory required for data: 9934084
I0428 20:18:48.458113  1239 net.cpp:200] loss needs backward computation.
I0428 20:18:48.458117  1239 net.cpp:200] relu1 needs backward computation.
I0428 20:18:48.458120  1239 net.cpp:200] ip1 needs backward computation.
I0428 20:18:48.458124  1239 net.cpp:200] pool1 needs backward computation.
I0428 20:18:48.458127  1239 net.cpp:200] conv1 needs backward computation.
I0428 20:18:48.458130  1239 net.cpp:200] pool0 needs backward computation.
I0428 20:18:48.458133  1239 net.cpp:200] conv0 needs backward computation.
I0428 20:18:48.458137  1239 net.cpp:202] mnist does not need backward computation.
I0428 20:18:48.458140  1239 net.cpp:244] This network produces output loss
I0428 20:18:48.458149  1239 net.cpp:257] Network initialization done.
I0428 20:18:48.458436  1239 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1327.prototxt
I0428 20:18:48.458461  1239 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:48.458547  1239 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:18:48.458623  1239 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:48.458673  1239 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:48.458688  1239 net.cpp:86] Creating Layer mnist
I0428 20:18:48.458693  1239 net.cpp:382] mnist -> data
I0428 20:18:48.458700  1239 net.cpp:382] mnist -> label
I0428 20:18:48.458791  1239 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:48.460904  1239 net.cpp:124] Setting up mnist
I0428 20:18:48.460924  1239 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:48.460934  1239 net.cpp:131] Top shape: 100 (100)
I0428 20:18:48.460939  1239 net.cpp:139] Memory required for data: 314000
I0428 20:18:48.460947  1239 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:48.460961  1239 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:48.460968  1239 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:48.460974  1239 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:48.460984  1239 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:48.461141  1239 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:48.461156  1239 net.cpp:131] Top shape: 100 (100)
I0428 20:18:48.461164  1239 net.cpp:131] Top shape: 100 (100)
I0428 20:18:48.461169  1239 net.cpp:139] Memory required for data: 314800
I0428 20:18:48.461175  1239 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:48.461190  1239 net.cpp:86] Creating Layer conv0
I0428 20:18:48.461196  1239 net.cpp:408] conv0 <- data
I0428 20:18:48.461206  1239 net.cpp:382] conv0 -> conv0
I0428 20:18:48.462532  1239 net.cpp:124] Setting up conv0
I0428 20:18:48.462553  1239 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:48.462564  1239 net.cpp:139] Memory required for data: 11834800
I0428 20:18:48.462580  1239 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:48.462599  1239 net.cpp:86] Creating Layer pool0
I0428 20:18:48.462605  1239 net.cpp:408] pool0 <- conv0
I0428 20:18:48.462613  1239 net.cpp:382] pool0 -> pool0
I0428 20:18:48.462671  1239 net.cpp:124] Setting up pool0
I0428 20:18:48.462683  1239 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:48.462690  1239 net.cpp:139] Memory required for data: 14714800
I0428 20:18:48.462695  1239 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:48.462710  1239 net.cpp:86] Creating Layer conv1
I0428 20:18:48.462721  1239 net.cpp:408] conv1 <- pool0
I0428 20:18:48.462731  1239 net.cpp:382] conv1 -> conv1
I0428 20:18:48.465363  1239 net.cpp:124] Setting up conv1
I0428 20:18:48.465384  1239 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:18:48.465390  1239 net.cpp:139] Memory required for data: 15354800
I0428 20:18:48.465404  1239 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:48.465415  1239 net.cpp:86] Creating Layer pool1
I0428 20:18:48.465436  1239 net.cpp:408] pool1 <- conv1
I0428 20:18:48.465447  1239 net.cpp:382] pool1 -> pool1
I0428 20:18:48.465504  1239 net.cpp:124] Setting up pool1
I0428 20:18:48.465518  1239 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:18:48.465524  1239 net.cpp:139] Memory required for data: 15514800
I0428 20:18:48.465529  1239 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:48.465540  1239 net.cpp:86] Creating Layer ip1
I0428 20:18:48.465546  1239 net.cpp:408] ip1 <- pool1
I0428 20:18:48.465555  1239 net.cpp:382] ip1 -> ip1
I0428 20:18:48.465751  1239 net.cpp:124] Setting up ip1
I0428 20:18:48.465770  1239 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:48.465776  1239 net.cpp:139] Memory required for data: 15518800
I0428 20:18:48.465790  1239 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:48.465800  1239 net.cpp:86] Creating Layer relu1
I0428 20:18:48.465806  1239 net.cpp:408] relu1 <- ip1
I0428 20:18:48.465813  1239 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:48.467015  1239 net.cpp:124] Setting up relu1
I0428 20:18:48.467032  1239 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:48.467038  1239 net.cpp:139] Memory required for data: 15522800
I0428 20:18:48.467044  1239 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:18:48.467056  1239 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:18:48.467061  1239 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:18:48.467070  1239 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:18:48.467082  1239 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:18:48.467139  1239 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:18:48.467151  1239 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:48.467159  1239 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:48.467164  1239 net.cpp:139] Memory required for data: 15530800
I0428 20:18:48.467170  1239 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:48.467177  1239 net.cpp:86] Creating Layer accuracy
I0428 20:18:48.467183  1239 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:18:48.467191  1239 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:48.467200  1239 net.cpp:382] accuracy -> accuracy
I0428 20:18:48.467211  1239 net.cpp:124] Setting up accuracy
I0428 20:18:48.467218  1239 net.cpp:131] Top shape: (1)
I0428 20:18:48.467223  1239 net.cpp:139] Memory required for data: 15530804
I0428 20:18:48.467228  1239 layer_factory.hpp:77] Creating layer loss
I0428 20:18:48.467236  1239 net.cpp:86] Creating Layer loss
I0428 20:18:48.467242  1239 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:18:48.467248  1239 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:48.467257  1239 net.cpp:382] loss -> loss
I0428 20:18:48.467267  1239 layer_factory.hpp:77] Creating layer loss
I0428 20:18:48.467628  1239 net.cpp:124] Setting up loss
I0428 20:18:48.467644  1239 net.cpp:131] Top shape: (1)
I0428 20:18:48.467649  1239 net.cpp:134]     with loss weight 1
I0428 20:18:48.467660  1239 net.cpp:139] Memory required for data: 15530808
I0428 20:18:48.467666  1239 net.cpp:200] loss needs backward computation.
I0428 20:18:48.467674  1239 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:48.467680  1239 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:18:48.467685  1239 net.cpp:200] relu1 needs backward computation.
I0428 20:18:48.467691  1239 net.cpp:200] ip1 needs backward computation.
I0428 20:18:48.467696  1239 net.cpp:200] pool1 needs backward computation.
I0428 20:18:48.467702  1239 net.cpp:200] conv1 needs backward computation.
I0428 20:18:48.467708  1239 net.cpp:200] pool0 needs backward computation.
I0428 20:18:48.467713  1239 net.cpp:200] conv0 needs backward computation.
I0428 20:18:48.467720  1239 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:48.467726  1239 net.cpp:202] mnist does not need backward computation.
I0428 20:18:48.467731  1239 net.cpp:244] This network produces output accuracy
I0428 20:18:48.467737  1239 net.cpp:244] This network produces output loss
I0428 20:18:48.467767  1239 net.cpp:257] Network initialization done.
I0428 20:18:48.467819  1239 solver.cpp:56] Solver scaffolding done.
I0428 20:18:48.468152  1239 caffe.cpp:248] Starting Optimization
I0428 20:18:48.468164  1239 solver.cpp:273] Solving LeNet
I0428 20:18:48.468170  1239 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:48.468369  1239 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:48.478461  1239 blocking_queue.cpp:49] Waiting for data
I0428 20:18:48.544806  1246 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:48.545534  1239 solver.cpp:398]     Test net output #0: accuracy = 0.0912
I0428 20:18:48.545554  1239 solver.cpp:398]     Test net output #1: loss = 2.3825 (* 1 = 2.3825 loss)
I0428 20:18:48.549728  1239 solver.cpp:219] Iteration 0 (-5.73587e-31 iter/s, 0.0815307s/100 iters), loss = 2.39242
I0428 20:18:48.549751  1239 solver.cpp:238]     Train net output #0: loss = 2.39242 (* 1 = 2.39242 loss)
I0428 20:18:48.549778  1239 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:48.680968  1239 solver.cpp:219] Iteration 100 (762.171 iter/s, 0.131204s/100 iters), loss = 0.690726
I0428 20:18:48.680994  1239 solver.cpp:238]     Train net output #0: loss = 0.690726 (* 1 = 0.690726 loss)
I0428 20:18:48.681015  1239 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:48.811481  1239 solver.cpp:219] Iteration 200 (766.424 iter/s, 0.130476s/100 iters), loss = 0.544193
I0428 20:18:48.811520  1239 solver.cpp:238]     Train net output #0: loss = 0.544193 (* 1 = 0.544193 loss)
I0428 20:18:48.811543  1239 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:48.941781  1239 solver.cpp:219] Iteration 300 (767.751 iter/s, 0.130251s/100 iters), loss = 0.182772
I0428 20:18:48.941819  1239 solver.cpp:238]     Train net output #0: loss = 0.182772 (* 1 = 0.182772 loss)
I0428 20:18:48.941825  1239 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:49.073454  1239 solver.cpp:219] Iteration 400 (759.657 iter/s, 0.131638s/100 iters), loss = 0.0879057
I0428 20:18:49.073498  1239 solver.cpp:238]     Train net output #0: loss = 0.0879058 (* 1 = 0.0879058 loss)
I0428 20:18:49.073504  1239 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:49.193457  1239 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:49.269928  1246 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:49.270668  1239 solver.cpp:398]     Test net output #0: accuracy = 0.9657
I0428 20:18:49.270694  1239 solver.cpp:398]     Test net output #1: loss = 0.115299 (* 1 = 0.115299 loss)
I0428 20:18:49.271986  1239 solver.cpp:219] Iteration 500 (503.847 iter/s, 0.198473s/100 iters), loss = 0.18085
I0428 20:18:49.272023  1239 solver.cpp:238]     Train net output #0: loss = 0.18085 (* 1 = 0.18085 loss)
I0428 20:18:49.272032  1239 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:49.404688  1239 solver.cpp:219] Iteration 600 (753.84 iter/s, 0.132654s/100 iters), loss = 0.113724
I0428 20:18:49.404718  1239 solver.cpp:238]     Train net output #0: loss = 0.113724 (* 1 = 0.113724 loss)
I0428 20:18:49.404726  1239 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:49.535213  1239 solver.cpp:219] Iteration 700 (766.37 iter/s, 0.130485s/100 iters), loss = 0.148665
I0428 20:18:49.535239  1239 solver.cpp:238]     Train net output #0: loss = 0.148665 (* 1 = 0.148665 loss)
I0428 20:18:49.535245  1239 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:49.667289  1239 solver.cpp:219] Iteration 800 (757.36 iter/s, 0.132038s/100 iters), loss = 0.209777
I0428 20:18:49.667313  1239 solver.cpp:238]     Train net output #0: loss = 0.209777 (* 1 = 0.209777 loss)
I0428 20:18:49.667335  1239 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:49.797714  1239 solver.cpp:219] Iteration 900 (766.924 iter/s, 0.130391s/100 iters), loss = 0.154894
I0428 20:18:49.797739  1239 solver.cpp:238]     Train net output #0: loss = 0.154894 (* 1 = 0.154894 loss)
I0428 20:18:49.797760  1239 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:49.838636  1245 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:49.917428  1239 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:49.918771  1239 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:49.919626  1239 solver.cpp:311] Iteration 1000, loss = 0.0736046
I0428 20:18:49.919643  1239 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:49.994917  1246 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:49.995620  1239 solver.cpp:398]     Test net output #0: accuracy = 0.9761
I0428 20:18:49.995654  1239 solver.cpp:398]     Test net output #1: loss = 0.0740233 (* 1 = 0.0740233 loss)
I0428 20:18:49.995659  1239 solver.cpp:316] Optimization Done.
I0428 20:18:49.995662  1239 caffe.cpp:259] Optimization Done.
