I0428 19:39:08.269991 24222 caffe.cpp:218] Using GPUs 0
I0428 19:39:08.306388 24222 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:08.748916 24222 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test295.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:08.749054 24222 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test295.prototxt
I0428 19:39:08.749389 24222 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:08.749424 24222 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:08.749531 24222 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:08.749624 24222 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:08.749744 24222 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:08.749788 24222 net.cpp:86] Creating Layer mnist
I0428 19:39:08.749799 24222 net.cpp:382] mnist -> data
I0428 19:39:08.749821 24222 net.cpp:382] mnist -> label
I0428 19:39:08.750953 24222 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:08.753146 24222 net.cpp:124] Setting up mnist
I0428 19:39:08.753180 24222 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:08.753188 24222 net.cpp:131] Top shape: 64 (64)
I0428 19:39:08.753193 24222 net.cpp:139] Memory required for data: 200960
I0428 19:39:08.753202 24222 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:08.753221 24222 net.cpp:86] Creating Layer conv0
I0428 19:39:08.753242 24222 net.cpp:408] conv0 <- data
I0428 19:39:08.753257 24222 net.cpp:382] conv0 -> conv0
I0428 19:39:08.986353 24222 net.cpp:124] Setting up conv0
I0428 19:39:08.986382 24222 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:08.986402 24222 net.cpp:139] Memory required for data: 495872
I0428 19:39:08.986438 24222 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:08.986455 24222 net.cpp:86] Creating Layer pool0
I0428 19:39:08.986466 24222 net.cpp:408] pool0 <- conv0
I0428 19:39:08.986475 24222 net.cpp:382] pool0 -> pool0
I0428 19:39:08.986528 24222 net.cpp:124] Setting up pool0
I0428 19:39:08.986537 24222 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:08.986542 24222 net.cpp:139] Memory required for data: 569600
I0428 19:39:08.986547 24222 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:08.986562 24222 net.cpp:86] Creating Layer conv1
I0428 19:39:08.986568 24222 net.cpp:408] conv1 <- pool0
I0428 19:39:08.986577 24222 net.cpp:382] conv1 -> conv1
I0428 19:39:08.988487 24222 net.cpp:124] Setting up conv1
I0428 19:39:08.988504 24222 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:08.988512 24222 net.cpp:139] Memory required for data: 602368
I0428 19:39:08.988525 24222 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:08.988538 24222 net.cpp:86] Creating Layer pool1
I0428 19:39:08.988548 24222 net.cpp:408] pool1 <- conv1
I0428 19:39:08.988559 24222 net.cpp:382] pool1 -> pool1
I0428 19:39:08.988625 24222 net.cpp:124] Setting up pool1
I0428 19:39:08.988636 24222 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:08.988641 24222 net.cpp:139] Memory required for data: 610560
I0428 19:39:08.988646 24222 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:08.988656 24222 net.cpp:86] Creating Layer ip1
I0428 19:39:08.988662 24222 net.cpp:408] ip1 <- pool1
I0428 19:39:08.988672 24222 net.cpp:382] ip1 -> ip1
I0428 19:39:08.988782 24222 net.cpp:124] Setting up ip1
I0428 19:39:08.988791 24222 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:08.988796 24222 net.cpp:139] Memory required for data: 616960
I0428 19:39:08.988816 24222 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:08.988843 24222 net.cpp:86] Creating Layer relu1
I0428 19:39:08.988850 24222 net.cpp:408] relu1 <- ip1
I0428 19:39:08.988873 24222 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:08.989075 24222 net.cpp:124] Setting up relu1
I0428 19:39:08.989086 24222 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:08.989091 24222 net.cpp:139] Memory required for data: 623360
I0428 19:39:08.989096 24222 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:08.989107 24222 net.cpp:86] Creating Layer ip2
I0428 19:39:08.989114 24222 net.cpp:408] ip2 <- ip1
I0428 19:39:08.989123 24222 net.cpp:382] ip2 -> ip2
I0428 19:39:08.989258 24222 net.cpp:124] Setting up ip2
I0428 19:39:08.989265 24222 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:08.989270 24222 net.cpp:139] Memory required for data: 625920
I0428 19:39:08.989279 24222 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:08.989289 24222 net.cpp:86] Creating Layer relu2
I0428 19:39:08.989295 24222 net.cpp:408] relu2 <- ip2
I0428 19:39:08.989303 24222 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:08.990057 24222 net.cpp:124] Setting up relu2
I0428 19:39:08.990072 24222 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:08.990077 24222 net.cpp:139] Memory required for data: 628480
I0428 19:39:08.990082 24222 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:08.990092 24222 net.cpp:86] Creating Layer ip3
I0428 19:39:08.990097 24222 net.cpp:408] ip3 <- ip2
I0428 19:39:08.990108 24222 net.cpp:382] ip3 -> ip3
I0428 19:39:08.990216 24222 net.cpp:124] Setting up ip3
I0428 19:39:08.990226 24222 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:08.990231 24222 net.cpp:139] Memory required for data: 631040
I0428 19:39:08.990242 24222 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:08.990252 24222 net.cpp:86] Creating Layer relu3
I0428 19:39:08.990258 24222 net.cpp:408] relu3 <- ip3
I0428 19:39:08.990265 24222 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:08.990450 24222 net.cpp:124] Setting up relu3
I0428 19:39:08.990463 24222 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:08.990468 24222 net.cpp:139] Memory required for data: 633600
I0428 19:39:08.990471 24222 layer_factory.hpp:77] Creating layer loss
I0428 19:39:08.990495 24222 net.cpp:86] Creating Layer loss
I0428 19:39:08.990501 24222 net.cpp:408] loss <- ip3
I0428 19:39:08.990507 24222 net.cpp:408] loss <- label
I0428 19:39:08.990515 24222 net.cpp:382] loss -> loss
I0428 19:39:08.990537 24222 layer_factory.hpp:77] Creating layer loss
I0428 19:39:08.990789 24222 net.cpp:124] Setting up loss
I0428 19:39:08.990816 24222 net.cpp:131] Top shape: (1)
I0428 19:39:08.990821 24222 net.cpp:134]     with loss weight 1
I0428 19:39:08.990840 24222 net.cpp:139] Memory required for data: 633604
I0428 19:39:08.990845 24222 net.cpp:200] loss needs backward computation.
I0428 19:39:08.990851 24222 net.cpp:200] relu3 needs backward computation.
I0428 19:39:08.990856 24222 net.cpp:200] ip3 needs backward computation.
I0428 19:39:08.990861 24222 net.cpp:200] relu2 needs backward computation.
I0428 19:39:08.990881 24222 net.cpp:200] ip2 needs backward computation.
I0428 19:39:08.990886 24222 net.cpp:200] relu1 needs backward computation.
I0428 19:39:08.990891 24222 net.cpp:200] ip1 needs backward computation.
I0428 19:39:08.990896 24222 net.cpp:200] pool1 needs backward computation.
I0428 19:39:08.990901 24222 net.cpp:200] conv1 needs backward computation.
I0428 19:39:08.990906 24222 net.cpp:200] pool0 needs backward computation.
I0428 19:39:08.990911 24222 net.cpp:200] conv0 needs backward computation.
I0428 19:39:08.990916 24222 net.cpp:202] mnist does not need backward computation.
I0428 19:39:08.990921 24222 net.cpp:244] This network produces output loss
I0428 19:39:08.990936 24222 net.cpp:257] Network initialization done.
I0428 19:39:08.991271 24222 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test295.prototxt
I0428 19:39:08.991304 24222 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:08.991400 24222 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:08.991531 24222 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:08.991606 24222 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:08.991623 24222 net.cpp:86] Creating Layer mnist
I0428 19:39:08.991632 24222 net.cpp:382] mnist -> data
I0428 19:39:08.991643 24222 net.cpp:382] mnist -> label
I0428 19:39:08.991761 24222 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:08.993854 24222 net.cpp:124] Setting up mnist
I0428 19:39:08.993885 24222 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:08.993893 24222 net.cpp:131] Top shape: 100 (100)
I0428 19:39:08.993913 24222 net.cpp:139] Memory required for data: 314000
I0428 19:39:08.993919 24222 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:08.993937 24222 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:08.993943 24222 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:08.993953 24222 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:08.993964 24222 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:08.994091 24222 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:08.994101 24222 net.cpp:131] Top shape: 100 (100)
I0428 19:39:08.994107 24222 net.cpp:131] Top shape: 100 (100)
I0428 19:39:08.994112 24222 net.cpp:139] Memory required for data: 314800
I0428 19:39:08.994117 24222 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:08.994132 24222 net.cpp:86] Creating Layer conv0
I0428 19:39:08.994139 24222 net.cpp:408] conv0 <- data
I0428 19:39:08.994148 24222 net.cpp:382] conv0 -> conv0
I0428 19:39:08.995725 24222 net.cpp:124] Setting up conv0
I0428 19:39:08.995741 24222 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:08.995748 24222 net.cpp:139] Memory required for data: 775600
I0428 19:39:08.995761 24222 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:08.995772 24222 net.cpp:86] Creating Layer pool0
I0428 19:39:08.995779 24222 net.cpp:408] pool0 <- conv0
I0428 19:39:08.995789 24222 net.cpp:382] pool0 -> pool0
I0428 19:39:08.995832 24222 net.cpp:124] Setting up pool0
I0428 19:39:08.995841 24222 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:08.995846 24222 net.cpp:139] Memory required for data: 890800
I0428 19:39:08.995851 24222 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:08.995867 24222 net.cpp:86] Creating Layer conv1
I0428 19:39:08.995873 24222 net.cpp:408] conv1 <- pool0
I0428 19:39:08.995882 24222 net.cpp:382] conv1 -> conv1
I0428 19:39:08.997584 24222 net.cpp:124] Setting up conv1
I0428 19:39:08.997601 24222 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:08.997607 24222 net.cpp:139] Memory required for data: 942000
I0428 19:39:08.997622 24222 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:08.997632 24222 net.cpp:86] Creating Layer pool1
I0428 19:39:08.997638 24222 net.cpp:408] pool1 <- conv1
I0428 19:39:08.997648 24222 net.cpp:382] pool1 -> pool1
I0428 19:39:08.997691 24222 net.cpp:124] Setting up pool1
I0428 19:39:08.997699 24222 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:08.997705 24222 net.cpp:139] Memory required for data: 954800
I0428 19:39:08.997710 24222 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:08.997720 24222 net.cpp:86] Creating Layer ip1
I0428 19:39:08.997725 24222 net.cpp:408] ip1 <- pool1
I0428 19:39:08.997735 24222 net.cpp:382] ip1 -> ip1
I0428 19:39:08.997846 24222 net.cpp:124] Setting up ip1
I0428 19:39:08.997855 24222 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:08.997871 24222 net.cpp:139] Memory required for data: 964800
I0428 19:39:08.997884 24222 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:08.997894 24222 net.cpp:86] Creating Layer relu1
I0428 19:39:08.997903 24222 net.cpp:408] relu1 <- ip1
I0428 19:39:08.997911 24222 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:08.998100 24222 net.cpp:124] Setting up relu1
I0428 19:39:08.998111 24222 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:08.998116 24222 net.cpp:139] Memory required for data: 974800
I0428 19:39:08.998121 24222 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:08.998133 24222 net.cpp:86] Creating Layer ip2
I0428 19:39:08.998139 24222 net.cpp:408] ip2 <- ip1
I0428 19:39:08.998163 24222 net.cpp:382] ip2 -> ip2
I0428 19:39:08.998330 24222 net.cpp:124] Setting up ip2
I0428 19:39:08.998340 24222 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:08.998345 24222 net.cpp:139] Memory required for data: 978800
I0428 19:39:08.998354 24222 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:08.998363 24222 net.cpp:86] Creating Layer relu2
I0428 19:39:08.998368 24222 net.cpp:408] relu2 <- ip2
I0428 19:39:08.998378 24222 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:08.998603 24222 net.cpp:124] Setting up relu2
I0428 19:39:08.998615 24222 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:08.998620 24222 net.cpp:139] Memory required for data: 982800
I0428 19:39:08.998627 24222 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:08.998638 24222 net.cpp:86] Creating Layer ip3
I0428 19:39:08.998644 24222 net.cpp:408] ip3 <- ip2
I0428 19:39:08.998654 24222 net.cpp:382] ip3 -> ip3
I0428 19:39:08.998787 24222 net.cpp:124] Setting up ip3
I0428 19:39:08.998797 24222 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:08.998802 24222 net.cpp:139] Memory required for data: 986800
I0428 19:39:08.998814 24222 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:08.998823 24222 net.cpp:86] Creating Layer relu3
I0428 19:39:08.998832 24222 net.cpp:408] relu3 <- ip3
I0428 19:39:08.998841 24222 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:08.999680 24222 net.cpp:124] Setting up relu3
I0428 19:39:08.999693 24222 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:08.999698 24222 net.cpp:139] Memory required for data: 990800
I0428 19:39:08.999704 24222 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:08.999713 24222 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:08.999719 24222 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:08.999729 24222 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:08.999738 24222 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:08.999796 24222 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:08.999804 24222 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:08.999810 24222 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:08.999816 24222 net.cpp:139] Memory required for data: 998800
I0428 19:39:08.999822 24222 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:08.999831 24222 net.cpp:86] Creating Layer accuracy
I0428 19:39:08.999836 24222 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:08.999843 24222 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:08.999851 24222 net.cpp:382] accuracy -> accuracy
I0428 19:39:08.999862 24222 net.cpp:124] Setting up accuracy
I0428 19:39:08.999869 24222 net.cpp:131] Top shape: (1)
I0428 19:39:08.999876 24222 net.cpp:139] Memory required for data: 998804
I0428 19:39:08.999881 24222 layer_factory.hpp:77] Creating layer loss
I0428 19:39:08.999889 24222 net.cpp:86] Creating Layer loss
I0428 19:39:08.999896 24222 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:08.999902 24222 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:08.999908 24222 net.cpp:382] loss -> loss
I0428 19:39:08.999918 24222 layer_factory.hpp:77] Creating layer loss
I0428 19:39:09.000174 24222 net.cpp:124] Setting up loss
I0428 19:39:09.000183 24222 net.cpp:131] Top shape: (1)
I0428 19:39:09.000190 24222 net.cpp:134]     with loss weight 1
I0428 19:39:09.000198 24222 net.cpp:139] Memory required for data: 998808
I0428 19:39:09.000216 24222 net.cpp:200] loss needs backward computation.
I0428 19:39:09.000222 24222 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:09.000229 24222 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:09.000234 24222 net.cpp:200] relu3 needs backward computation.
I0428 19:39:09.000239 24222 net.cpp:200] ip3 needs backward computation.
I0428 19:39:09.000246 24222 net.cpp:200] relu2 needs backward computation.
I0428 19:39:09.000249 24222 net.cpp:200] ip2 needs backward computation.
I0428 19:39:09.000257 24222 net.cpp:200] relu1 needs backward computation.
I0428 19:39:09.000260 24222 net.cpp:200] ip1 needs backward computation.
I0428 19:39:09.000265 24222 net.cpp:200] pool1 needs backward computation.
I0428 19:39:09.000272 24222 net.cpp:200] conv1 needs backward computation.
I0428 19:39:09.000277 24222 net.cpp:200] pool0 needs backward computation.
I0428 19:39:09.000283 24222 net.cpp:200] conv0 needs backward computation.
I0428 19:39:09.000288 24222 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:09.000295 24222 net.cpp:202] mnist does not need backward computation.
I0428 19:39:09.000299 24222 net.cpp:244] This network produces output accuracy
I0428 19:39:09.000305 24222 net.cpp:244] This network produces output loss
I0428 19:39:09.000324 24222 net.cpp:257] Network initialization done.
I0428 19:39:09.000388 24222 solver.cpp:56] Solver scaffolding done.
I0428 19:39:09.000764 24222 caffe.cpp:248] Starting Optimization
I0428 19:39:09.000771 24222 solver.cpp:273] Solving LeNet
I0428 19:39:09.000777 24222 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:09.001595 24222 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:09.004282 24222 blocking_queue.cpp:49] Waiting for data
I0428 19:39:09.073635 24229 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:09.074123 24222 solver.cpp:398]     Test net output #0: accuracy = 0.1344
I0428 19:39:09.074147 24222 solver.cpp:398]     Test net output #1: loss = 2.31166 (* 1 = 2.31166 loss)
I0428 19:39:09.076005 24222 solver.cpp:219] Iteration 0 (0 iter/s, 0.0751964s/100 iters), loss = 2.2953
I0428 19:39:09.076079 24222 solver.cpp:238]     Train net output #0: loss = 2.2953 (* 1 = 2.2953 loss)
I0428 19:39:09.076097 24222 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:09.146251 24222 solver.cpp:219] Iteration 100 (1424.84 iter/s, 0.0701832s/100 iters), loss = 1.65912
I0428 19:39:09.146280 24222 solver.cpp:238]     Train net output #0: loss = 1.65912 (* 1 = 1.65912 loss)
I0428 19:39:09.146304 24222 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:09.214511 24222 solver.cpp:219] Iteration 200 (1465.8 iter/s, 0.068222s/100 iters), loss = 1.43917
I0428 19:39:09.214539 24222 solver.cpp:238]     Train net output #0: loss = 1.43917 (* 1 = 1.43917 loss)
I0428 19:39:09.214563 24222 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:09.282178 24222 solver.cpp:219] Iteration 300 (1478.59 iter/s, 0.0676322s/100 iters), loss = 1.16226
I0428 19:39:09.282207 24222 solver.cpp:238]     Train net output #0: loss = 1.16226 (* 1 = 1.16226 loss)
I0428 19:39:09.282233 24222 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:09.349268 24222 solver.cpp:219] Iteration 400 (1491.3 iter/s, 0.0670554s/100 iters), loss = 1.31876
I0428 19:39:09.349297 24222 solver.cpp:238]     Train net output #0: loss = 1.31876 (* 1 = 1.31876 loss)
I0428 19:39:09.349323 24222 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:09.417870 24222 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:09.480581 24229 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:09.481034 24222 solver.cpp:398]     Test net output #0: accuracy = 0.6617
I0428 19:39:09.481055 24222 solver.cpp:398]     Test net output #1: loss = 1.12188 (* 1 = 1.12188 loss)
I0428 19:39:09.481771 24222 solver.cpp:219] Iteration 500 (754.913 iter/s, 0.132466s/100 iters), loss = 1.25667
I0428 19:39:09.481817 24222 solver.cpp:238]     Train net output #0: loss = 1.25667 (* 1 = 1.25667 loss)
I0428 19:39:09.481845 24222 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:09.550801 24222 solver.cpp:219] Iteration 600 (1449.65 iter/s, 0.0689819s/100 iters), loss = 0.800378
I0428 19:39:09.550828 24222 solver.cpp:238]     Train net output #0: loss = 0.800378 (* 1 = 0.800378 loss)
I0428 19:39:09.550853 24222 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:09.617607 24222 solver.cpp:219] Iteration 700 (1497.61 iter/s, 0.066773s/100 iters), loss = 1.48947
I0428 19:39:09.617635 24222 solver.cpp:238]     Train net output #0: loss = 1.48947 (* 1 = 1.48947 loss)
I0428 19:39:09.617660 24222 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:09.684608 24222 solver.cpp:219] Iteration 800 (1493.26 iter/s, 0.0669676s/100 iters), loss = 1.02301
I0428 19:39:09.684635 24222 solver.cpp:238]     Train net output #0: loss = 1.02301 (* 1 = 1.02301 loss)
I0428 19:39:09.684660 24222 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:09.752658 24222 solver.cpp:219] Iteration 900 (1470.22 iter/s, 0.0680171s/100 iters), loss = 0.827484
I0428 19:39:09.752701 24222 solver.cpp:238]     Train net output #0: loss = 0.827484 (* 1 = 0.827484 loss)
I0428 19:39:09.752727 24222 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:09.775782 24228 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:09.820127 24222 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:09.820788 24222 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:09.821250 24222 solver.cpp:311] Iteration 1000, loss = 0.874
I0428 19:39:09.821266 24222 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:09.873950 24229 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:09.874413 24222 solver.cpp:398]     Test net output #0: accuracy = 0.7244
I0428 19:39:09.874450 24222 solver.cpp:398]     Test net output #1: loss = 0.924546 (* 1 = 0.924546 loss)
I0428 19:39:09.874459 24222 solver.cpp:316] Optimization Done.
I0428 19:39:09.874464 24222 caffe.cpp:259] Optimization Done.
