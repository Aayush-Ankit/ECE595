I0428 19:51:58.874552 27409 caffe.cpp:218] Using GPUs 0
I0428 19:51:58.910248 27409 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:59.366793 27409 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test649.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:59.366945 27409 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test649.prototxt
I0428 19:51:59.367305 27409 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:59.367336 27409 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:59.367416 27409 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:59.367478 27409 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:59.367558 27409 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:59.367578 27409 net.cpp:86] Creating Layer mnist
I0428 19:51:59.367584 27409 net.cpp:382] mnist -> data
I0428 19:51:59.367601 27409 net.cpp:382] mnist -> label
I0428 19:51:59.368547 27409 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:59.370880 27409 net.cpp:124] Setting up mnist
I0428 19:51:59.370911 27409 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:59.370931 27409 net.cpp:131] Top shape: 64 (64)
I0428 19:51:59.370935 27409 net.cpp:139] Memory required for data: 200960
I0428 19:51:59.370941 27409 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:59.370954 27409 net.cpp:86] Creating Layer conv0
I0428 19:51:59.370973 27409 net.cpp:408] conv0 <- data
I0428 19:51:59.370985 27409 net.cpp:382] conv0 -> conv0
I0428 19:51:59.597049 27409 net.cpp:124] Setting up conv0
I0428 19:51:59.597091 27409 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:59.597095 27409 net.cpp:139] Memory required for data: 938240
I0428 19:51:59.597110 27409 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:59.597121 27409 net.cpp:86] Creating Layer pool0
I0428 19:51:59.597126 27409 net.cpp:408] pool0 <- conv0
I0428 19:51:59.597146 27409 net.cpp:382] pool0 -> pool0
I0428 19:51:59.597213 27409 net.cpp:124] Setting up pool0
I0428 19:51:59.597218 27409 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:59.597220 27409 net.cpp:139] Memory required for data: 1122560
I0428 19:51:59.597223 27409 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:59.597234 27409 net.cpp:86] Creating Layer conv1
I0428 19:51:59.597236 27409 net.cpp:408] conv1 <- pool0
I0428 19:51:59.597241 27409 net.cpp:382] conv1 -> conv1
I0428 19:51:59.599977 27409 net.cpp:124] Setting up conv1
I0428 19:51:59.599992 27409 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:59.599997 27409 net.cpp:139] Memory required for data: 1532160
I0428 19:51:59.600004 27409 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:59.600010 27409 net.cpp:86] Creating Layer pool1
I0428 19:51:59.600013 27409 net.cpp:408] pool1 <- conv1
I0428 19:51:59.600034 27409 net.cpp:382] pool1 -> pool1
I0428 19:51:59.600071 27409 net.cpp:124] Setting up pool1
I0428 19:51:59.600080 27409 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:59.600081 27409 net.cpp:139] Memory required for data: 1634560
I0428 19:51:59.600085 27409 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:59.600092 27409 net.cpp:86] Creating Layer ip1
I0428 19:51:59.600095 27409 net.cpp:408] ip1 <- pool1
I0428 19:51:59.600100 27409 net.cpp:382] ip1 -> ip1
I0428 19:51:59.601090 27409 net.cpp:124] Setting up ip1
I0428 19:51:59.601102 27409 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:59.601105 27409 net.cpp:139] Memory required for data: 1640960
I0428 19:51:59.601114 27409 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:59.601121 27409 net.cpp:86] Creating Layer relu1
I0428 19:51:59.601125 27409 net.cpp:408] relu1 <- ip1
I0428 19:51:59.601130 27409 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:59.601323 27409 net.cpp:124] Setting up relu1
I0428 19:51:59.601346 27409 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:59.601354 27409 net.cpp:139] Memory required for data: 1647360
I0428 19:51:59.601357 27409 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:59.601363 27409 net.cpp:86] Creating Layer ip2
I0428 19:51:59.601366 27409 net.cpp:408] ip2 <- ip1
I0428 19:51:59.601372 27409 net.cpp:382] ip2 -> ip2
I0428 19:51:59.601470 27409 net.cpp:124] Setting up ip2
I0428 19:51:59.601476 27409 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:59.601480 27409 net.cpp:139] Memory required for data: 1653760
I0428 19:51:59.601485 27409 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:59.601491 27409 net.cpp:86] Creating Layer relu2
I0428 19:51:59.601495 27409 net.cpp:408] relu2 <- ip2
I0428 19:51:59.601498 27409 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:59.602334 27409 net.cpp:124] Setting up relu2
I0428 19:51:59.602345 27409 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:59.602349 27409 net.cpp:139] Memory required for data: 1660160
I0428 19:51:59.602352 27409 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:59.602360 27409 net.cpp:86] Creating Layer ip3
I0428 19:51:59.602362 27409 net.cpp:408] ip3 <- ip2
I0428 19:51:59.602368 27409 net.cpp:382] ip3 -> ip3
I0428 19:51:59.602469 27409 net.cpp:124] Setting up ip3
I0428 19:51:59.602476 27409 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:59.602479 27409 net.cpp:139] Memory required for data: 1662720
I0428 19:51:59.602486 27409 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:59.602491 27409 net.cpp:86] Creating Layer relu3
I0428 19:51:59.602494 27409 net.cpp:408] relu3 <- ip3
I0428 19:51:59.602499 27409 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:59.602661 27409 net.cpp:124] Setting up relu3
I0428 19:51:59.602669 27409 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:59.602672 27409 net.cpp:139] Memory required for data: 1665280
I0428 19:51:59.602675 27409 layer_factory.hpp:77] Creating layer loss
I0428 19:51:59.602682 27409 net.cpp:86] Creating Layer loss
I0428 19:51:59.602685 27409 net.cpp:408] loss <- ip3
I0428 19:51:59.602689 27409 net.cpp:408] loss <- label
I0428 19:51:59.602694 27409 net.cpp:382] loss -> loss
I0428 19:51:59.602707 27409 layer_factory.hpp:77] Creating layer loss
I0428 19:51:59.602960 27409 net.cpp:124] Setting up loss
I0428 19:51:59.602969 27409 net.cpp:131] Top shape: (1)
I0428 19:51:59.602972 27409 net.cpp:134]     with loss weight 1
I0428 19:51:59.602988 27409 net.cpp:139] Memory required for data: 1665284
I0428 19:51:59.602990 27409 net.cpp:200] loss needs backward computation.
I0428 19:51:59.602994 27409 net.cpp:200] relu3 needs backward computation.
I0428 19:51:59.602998 27409 net.cpp:200] ip3 needs backward computation.
I0428 19:51:59.603000 27409 net.cpp:200] relu2 needs backward computation.
I0428 19:51:59.603003 27409 net.cpp:200] ip2 needs backward computation.
I0428 19:51:59.603005 27409 net.cpp:200] relu1 needs backward computation.
I0428 19:51:59.603008 27409 net.cpp:200] ip1 needs backward computation.
I0428 19:51:59.603010 27409 net.cpp:200] pool1 needs backward computation.
I0428 19:51:59.603013 27409 net.cpp:200] conv1 needs backward computation.
I0428 19:51:59.603016 27409 net.cpp:200] pool0 needs backward computation.
I0428 19:51:59.603019 27409 net.cpp:200] conv0 needs backward computation.
I0428 19:51:59.603022 27409 net.cpp:202] mnist does not need backward computation.
I0428 19:51:59.603024 27409 net.cpp:244] This network produces output loss
I0428 19:51:59.603035 27409 net.cpp:257] Network initialization done.
I0428 19:51:59.603359 27409 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test649.prototxt
I0428 19:51:59.603384 27409 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:59.603474 27409 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:59.603550 27409 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:59.603601 27409 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:59.603616 27409 net.cpp:86] Creating Layer mnist
I0428 19:51:59.603621 27409 net.cpp:382] mnist -> data
I0428 19:51:59.603628 27409 net.cpp:382] mnist -> label
I0428 19:51:59.603708 27409 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:59.605835 27409 net.cpp:124] Setting up mnist
I0428 19:51:59.605865 27409 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:59.605870 27409 net.cpp:131] Top shape: 100 (100)
I0428 19:51:59.605872 27409 net.cpp:139] Memory required for data: 314000
I0428 19:51:59.605876 27409 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:59.605885 27409 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:59.605888 27409 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:59.605893 27409 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:59.605901 27409 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:59.605993 27409 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:59.606001 27409 net.cpp:131] Top shape: 100 (100)
I0428 19:51:59.606005 27409 net.cpp:131] Top shape: 100 (100)
I0428 19:51:59.606007 27409 net.cpp:139] Memory required for data: 314800
I0428 19:51:59.606010 27409 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:59.606019 27409 net.cpp:86] Creating Layer conv0
I0428 19:51:59.606022 27409 net.cpp:408] conv0 <- data
I0428 19:51:59.606029 27409 net.cpp:382] conv0 -> conv0
I0428 19:51:59.607620 27409 net.cpp:124] Setting up conv0
I0428 19:51:59.607631 27409 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:59.607651 27409 net.cpp:139] Memory required for data: 1466800
I0428 19:51:59.607671 27409 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:59.607677 27409 net.cpp:86] Creating Layer pool0
I0428 19:51:59.607681 27409 net.cpp:408] pool0 <- conv0
I0428 19:51:59.607686 27409 net.cpp:382] pool0 -> pool0
I0428 19:51:59.607738 27409 net.cpp:124] Setting up pool0
I0428 19:51:59.607744 27409 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:59.607746 27409 net.cpp:139] Memory required for data: 1754800
I0428 19:51:59.607749 27409 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:59.607758 27409 net.cpp:86] Creating Layer conv1
I0428 19:51:59.607761 27409 net.cpp:408] conv1 <- pool0
I0428 19:51:59.607767 27409 net.cpp:382] conv1 -> conv1
I0428 19:51:59.609905 27409 net.cpp:124] Setting up conv1
I0428 19:51:59.609932 27409 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:59.609936 27409 net.cpp:139] Memory required for data: 2394800
I0428 19:51:59.609943 27409 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:59.609951 27409 net.cpp:86] Creating Layer pool1
I0428 19:51:59.609954 27409 net.cpp:408] pool1 <- conv1
I0428 19:51:59.609958 27409 net.cpp:382] pool1 -> pool1
I0428 19:51:59.610038 27409 net.cpp:124] Setting up pool1
I0428 19:51:59.610062 27409 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:59.610067 27409 net.cpp:139] Memory required for data: 2554800
I0428 19:51:59.610070 27409 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:59.610077 27409 net.cpp:86] Creating Layer ip1
I0428 19:51:59.610081 27409 net.cpp:408] ip1 <- pool1
I0428 19:51:59.610087 27409 net.cpp:382] ip1 -> ip1
I0428 19:51:59.610260 27409 net.cpp:124] Setting up ip1
I0428 19:51:59.610271 27409 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:59.610286 27409 net.cpp:139] Memory required for data: 2564800
I0428 19:51:59.610294 27409 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:59.610301 27409 net.cpp:86] Creating Layer relu1
I0428 19:51:59.610303 27409 net.cpp:408] relu1 <- ip1
I0428 19:51:59.610311 27409 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:59.610503 27409 net.cpp:124] Setting up relu1
I0428 19:51:59.610512 27409 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:59.610515 27409 net.cpp:139] Memory required for data: 2574800
I0428 19:51:59.610518 27409 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:59.610527 27409 net.cpp:86] Creating Layer ip2
I0428 19:51:59.610529 27409 net.cpp:408] ip2 <- ip1
I0428 19:51:59.610534 27409 net.cpp:382] ip2 -> ip2
I0428 19:51:59.610687 27409 net.cpp:124] Setting up ip2
I0428 19:51:59.610695 27409 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:59.610698 27409 net.cpp:139] Memory required for data: 2584800
I0428 19:51:59.610703 27409 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:59.610709 27409 net.cpp:86] Creating Layer relu2
I0428 19:51:59.610713 27409 net.cpp:408] relu2 <- ip2
I0428 19:51:59.610718 27409 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:59.610869 27409 net.cpp:124] Setting up relu2
I0428 19:51:59.610877 27409 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:59.610880 27409 net.cpp:139] Memory required for data: 2594800
I0428 19:51:59.610883 27409 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:59.610890 27409 net.cpp:86] Creating Layer ip3
I0428 19:51:59.610893 27409 net.cpp:408] ip3 <- ip2
I0428 19:51:59.610898 27409 net.cpp:382] ip3 -> ip3
I0428 19:51:59.611006 27409 net.cpp:124] Setting up ip3
I0428 19:51:59.611012 27409 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:59.611016 27409 net.cpp:139] Memory required for data: 2598800
I0428 19:51:59.611022 27409 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:59.611028 27409 net.cpp:86] Creating Layer relu3
I0428 19:51:59.611032 27409 net.cpp:408] relu3 <- ip3
I0428 19:51:59.611034 27409 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:59.611810 27409 net.cpp:124] Setting up relu3
I0428 19:51:59.611822 27409 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:59.611841 27409 net.cpp:139] Memory required for data: 2602800
I0428 19:51:59.611845 27409 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:59.611850 27409 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:59.611852 27409 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:59.611857 27409 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:59.611862 27409 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:59.611899 27409 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:59.611904 27409 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:59.611907 27409 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:59.611910 27409 net.cpp:139] Memory required for data: 2610800
I0428 19:51:59.611912 27409 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:59.611917 27409 net.cpp:86] Creating Layer accuracy
I0428 19:51:59.611920 27409 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:59.611925 27409 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:59.611929 27409 net.cpp:382] accuracy -> accuracy
I0428 19:51:59.611935 27409 net.cpp:124] Setting up accuracy
I0428 19:51:59.611938 27409 net.cpp:131] Top shape: (1)
I0428 19:51:59.611941 27409 net.cpp:139] Memory required for data: 2610804
I0428 19:51:59.611944 27409 layer_factory.hpp:77] Creating layer loss
I0428 19:51:59.611949 27409 net.cpp:86] Creating Layer loss
I0428 19:51:59.611953 27409 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:59.611955 27409 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:59.611959 27409 net.cpp:382] loss -> loss
I0428 19:51:59.611964 27409 layer_factory.hpp:77] Creating layer loss
I0428 19:51:59.612205 27409 net.cpp:124] Setting up loss
I0428 19:51:59.612213 27409 net.cpp:131] Top shape: (1)
I0428 19:51:59.612216 27409 net.cpp:134]     with loss weight 1
I0428 19:51:59.612222 27409 net.cpp:139] Memory required for data: 2610808
I0428 19:51:59.612234 27409 net.cpp:200] loss needs backward computation.
I0428 19:51:59.612238 27409 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:59.612241 27409 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:59.612244 27409 net.cpp:200] relu3 needs backward computation.
I0428 19:51:59.612247 27409 net.cpp:200] ip3 needs backward computation.
I0428 19:51:59.612251 27409 net.cpp:200] relu2 needs backward computation.
I0428 19:51:59.612252 27409 net.cpp:200] ip2 needs backward computation.
I0428 19:51:59.612256 27409 net.cpp:200] relu1 needs backward computation.
I0428 19:51:59.612257 27409 net.cpp:200] ip1 needs backward computation.
I0428 19:51:59.612260 27409 net.cpp:200] pool1 needs backward computation.
I0428 19:51:59.612263 27409 net.cpp:200] conv1 needs backward computation.
I0428 19:51:59.612267 27409 net.cpp:200] pool0 needs backward computation.
I0428 19:51:59.612269 27409 net.cpp:200] conv0 needs backward computation.
I0428 19:51:59.612272 27409 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:59.612275 27409 net.cpp:202] mnist does not need backward computation.
I0428 19:51:59.612278 27409 net.cpp:244] This network produces output accuracy
I0428 19:51:59.612282 27409 net.cpp:244] This network produces output loss
I0428 19:51:59.612294 27409 net.cpp:257] Network initialization done.
I0428 19:51:59.612334 27409 solver.cpp:56] Solver scaffolding done.
I0428 19:51:59.612673 27409 caffe.cpp:248] Starting Optimization
I0428 19:51:59.612679 27409 solver.cpp:273] Solving LeNet
I0428 19:51:59.612680 27409 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:59.613507 27409 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:59.617980 27409 blocking_queue.cpp:49] Waiting for data
I0428 19:51:59.690569 27416 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:59.691136 27409 solver.cpp:398]     Test net output #0: accuracy = 0.0955
I0428 19:51:59.691174 27409 solver.cpp:398]     Test net output #1: loss = 2.30723 (* 1 = 2.30723 loss)
I0428 19:51:59.693166 27409 solver.cpp:219] Iteration 0 (-1.58881e-31 iter/s, 0.0804139s/100 iters), loss = 2.31673
I0428 19:51:59.693217 27409 solver.cpp:238]     Train net output #0: loss = 2.31673 (* 1 = 2.31673 loss)
I0428 19:51:59.693244 27409 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:59.788614 27409 solver.cpp:219] Iteration 100 (1048.4 iter/s, 0.0953836s/100 iters), loss = 1.13966
I0428 19:51:59.788637 27409 solver.cpp:238]     Train net output #0: loss = 1.13966 (* 1 = 1.13966 loss)
I0428 19:51:59.788643 27409 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:59.882194 27409 solver.cpp:219] Iteration 200 (1068.99 iter/s, 0.0935465s/100 iters), loss = 0.962118
I0428 19:51:59.882233 27409 solver.cpp:238]     Train net output #0: loss = 0.962118 (* 1 = 0.962118 loss)
I0428 19:51:59.882241 27409 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:59.969660 27409 solver.cpp:219] Iteration 300 (1143.96 iter/s, 0.0874158s/100 iters), loss = 1.37253
I0428 19:51:59.969700 27409 solver.cpp:238]     Train net output #0: loss = 1.37253 (* 1 = 1.37253 loss)
I0428 19:51:59.969707 27409 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:00.054428 27409 solver.cpp:219] Iteration 400 (1180.38 iter/s, 0.0847186s/100 iters), loss = 1.05173
I0428 19:52:00.054468 27409 solver.cpp:238]     Train net output #0: loss = 1.05173 (* 1 = 1.05173 loss)
I0428 19:52:00.054474 27409 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:00.144201 27409 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:00.219326 27416 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:00.219884 27409 solver.cpp:398]     Test net output #0: accuracy = 0.5894
I0428 19:52:00.219905 27409 solver.cpp:398]     Test net output #1: loss = 1.01317 (* 1 = 1.01317 loss)
I0428 19:52:00.220827 27409 solver.cpp:219] Iteration 500 (601.106 iter/s, 0.16636s/100 iters), loss = 0.911554
I0428 19:52:00.220909 27409 solver.cpp:238]     Train net output #0: loss = 0.911554 (* 1 = 0.911554 loss)
I0428 19:52:00.220932 27409 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:00.317329 27409 solver.cpp:219] Iteration 600 (1037.26 iter/s, 0.0964076s/100 iters), loss = 0.973912
I0428 19:52:00.317354 27409 solver.cpp:238]     Train net output #0: loss = 0.973912 (* 1 = 0.973912 loss)
I0428 19:52:00.317359 27409 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:00.403422 27409 solver.cpp:219] Iteration 700 (1162.03 iter/s, 0.0860559s/100 iters), loss = 0.963521
I0428 19:52:00.403471 27409 solver.cpp:238]     Train net output #0: loss = 0.963521 (* 1 = 0.963521 loss)
I0428 19:52:00.403478 27409 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:00.495040 27409 solver.cpp:219] Iteration 800 (1092.19 iter/s, 0.0915589s/100 iters), loss = 1.27012
I0428 19:52:00.495082 27409 solver.cpp:238]     Train net output #0: loss = 1.27012 (* 1 = 1.27012 loss)
I0428 19:52:00.495090 27409 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:00.581185 27409 solver.cpp:219] Iteration 900 (1161.51 iter/s, 0.0860948s/100 iters), loss = 0.991583
I0428 19:52:00.581241 27409 solver.cpp:238]     Train net output #0: loss = 0.991583 (* 1 = 0.991583 loss)
I0428 19:52:00.581248 27409 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:00.609403 27415 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:00.664705 27409 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:00.665758 27409 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:00.666306 27409 solver.cpp:311] Iteration 1000, loss = 1.06021
I0428 19:52:00.666321 27409 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:00.719211 27416 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:00.719753 27409 solver.cpp:398]     Test net output #0: accuracy = 0.5906
I0428 19:52:00.719789 27409 solver.cpp:398]     Test net output #1: loss = 1.00364 (* 1 = 1.00364 loss)
I0428 19:52:00.719794 27409 solver.cpp:316] Optimization Done.
I0428 19:52:00.719796 27409 caffe.cpp:259] Optimization Done.
