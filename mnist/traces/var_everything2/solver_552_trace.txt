I0428 19:48:41.716234 26548 caffe.cpp:218] Using GPUs 0
I0428 19:48:41.752228 26548 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:42.202072 26548 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test552.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:42.202208 26548 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test552.prototxt
I0428 19:48:42.202513 26548 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:42.202527 26548 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:42.202600 26548 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:48:42.202661 26548 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:42.202759 26548 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:42.202780 26548 net.cpp:86] Creating Layer mnist
I0428 19:48:42.202786 26548 net.cpp:382] mnist -> data
I0428 19:48:42.202805 26548 net.cpp:382] mnist -> label
I0428 19:48:42.203825 26548 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:42.206050 26548 net.cpp:124] Setting up mnist
I0428 19:48:42.206084 26548 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:42.206089 26548 net.cpp:131] Top shape: 64 (64)
I0428 19:48:42.206091 26548 net.cpp:139] Memory required for data: 200960
I0428 19:48:42.206099 26548 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:42.206111 26548 net.cpp:86] Creating Layer conv0
I0428 19:48:42.206116 26548 net.cpp:408] conv0 <- data
I0428 19:48:42.206127 26548 net.cpp:382] conv0 -> conv0
I0428 19:48:42.439419 26548 net.cpp:124] Setting up conv0
I0428 19:48:42.439445 26548 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:42.439465 26548 net.cpp:139] Memory required for data: 938240
I0428 19:48:42.439498 26548 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:42.439527 26548 net.cpp:86] Creating Layer pool0
I0428 19:48:42.439529 26548 net.cpp:408] pool0 <- conv0
I0428 19:48:42.439535 26548 net.cpp:382] pool0 -> pool0
I0428 19:48:42.439581 26548 net.cpp:124] Setting up pool0
I0428 19:48:42.439601 26548 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:42.439604 26548 net.cpp:139] Memory required for data: 1122560
I0428 19:48:42.439607 26548 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:42.439618 26548 net.cpp:86] Creating Layer conv1
I0428 19:48:42.439621 26548 net.cpp:408] conv1 <- pool0
I0428 19:48:42.439626 26548 net.cpp:382] conv1 -> conv1
I0428 19:48:42.441526 26548 net.cpp:124] Setting up conv1
I0428 19:48:42.441556 26548 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:48:42.441560 26548 net.cpp:139] Memory required for data: 1204480
I0428 19:48:42.441570 26548 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:42.441578 26548 net.cpp:86] Creating Layer pool1
I0428 19:48:42.441582 26548 net.cpp:408] pool1 <- conv1
I0428 19:48:42.441587 26548 net.cpp:382] pool1 -> pool1
I0428 19:48:42.441625 26548 net.cpp:124] Setting up pool1
I0428 19:48:42.441632 26548 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:48:42.441650 26548 net.cpp:139] Memory required for data: 1224960
I0428 19:48:42.441653 26548 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:42.441660 26548 net.cpp:86] Creating Layer ip1
I0428 19:48:42.441663 26548 net.cpp:408] ip1 <- pool1
I0428 19:48:42.441668 26548 net.cpp:382] ip1 -> ip1
I0428 19:48:42.442773 26548 net.cpp:124] Setting up ip1
I0428 19:48:42.442785 26548 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:42.442806 26548 net.cpp:139] Memory required for data: 1231360
I0428 19:48:42.442828 26548 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:42.442836 26548 net.cpp:86] Creating Layer relu1
I0428 19:48:42.442838 26548 net.cpp:408] relu1 <- ip1
I0428 19:48:42.442843 26548 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:42.443015 26548 net.cpp:124] Setting up relu1
I0428 19:48:42.443024 26548 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:48:42.443027 26548 net.cpp:139] Memory required for data: 1237760
I0428 19:48:42.443030 26548 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:42.443037 26548 net.cpp:86] Creating Layer ip2
I0428 19:48:42.443040 26548 net.cpp:408] ip2 <- ip1
I0428 19:48:42.443045 26548 net.cpp:382] ip2 -> ip2
I0428 19:48:42.443141 26548 net.cpp:124] Setting up ip2
I0428 19:48:42.443148 26548 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:42.443151 26548 net.cpp:139] Memory required for data: 1240320
I0428 19:48:42.443156 26548 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:42.443162 26548 net.cpp:86] Creating Layer relu2
I0428 19:48:42.443166 26548 net.cpp:408] relu2 <- ip2
I0428 19:48:42.443171 26548 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:42.443924 26548 net.cpp:124] Setting up relu2
I0428 19:48:42.443938 26548 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:42.443956 26548 net.cpp:139] Memory required for data: 1242880
I0428 19:48:42.443960 26548 layer_factory.hpp:77] Creating layer loss
I0428 19:48:42.443966 26548 net.cpp:86] Creating Layer loss
I0428 19:48:42.443970 26548 net.cpp:408] loss <- ip2
I0428 19:48:42.443974 26548 net.cpp:408] loss <- label
I0428 19:48:42.443980 26548 net.cpp:382] loss -> loss
I0428 19:48:42.444000 26548 layer_factory.hpp:77] Creating layer loss
I0428 19:48:42.444268 26548 net.cpp:124] Setting up loss
I0428 19:48:42.444279 26548 net.cpp:131] Top shape: (1)
I0428 19:48:42.444283 26548 net.cpp:134]     with loss weight 1
I0428 19:48:42.444296 26548 net.cpp:139] Memory required for data: 1242884
I0428 19:48:42.444300 26548 net.cpp:200] loss needs backward computation.
I0428 19:48:42.444304 26548 net.cpp:200] relu2 needs backward computation.
I0428 19:48:42.444308 26548 net.cpp:200] ip2 needs backward computation.
I0428 19:48:42.444310 26548 net.cpp:200] relu1 needs backward computation.
I0428 19:48:42.444313 26548 net.cpp:200] ip1 needs backward computation.
I0428 19:48:42.444316 26548 net.cpp:200] pool1 needs backward computation.
I0428 19:48:42.444329 26548 net.cpp:200] conv1 needs backward computation.
I0428 19:48:42.444334 26548 net.cpp:200] pool0 needs backward computation.
I0428 19:48:42.444336 26548 net.cpp:200] conv0 needs backward computation.
I0428 19:48:42.444339 26548 net.cpp:202] mnist does not need backward computation.
I0428 19:48:42.444342 26548 net.cpp:244] This network produces output loss
I0428 19:48:42.444351 26548 net.cpp:257] Network initialization done.
I0428 19:48:42.444653 26548 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test552.prototxt
I0428 19:48:42.444694 26548 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:42.444798 26548 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:48:42.444905 26548 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:42.444957 26548 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:42.444972 26548 net.cpp:86] Creating Layer mnist
I0428 19:48:42.444977 26548 net.cpp:382] mnist -> data
I0428 19:48:42.445000 26548 net.cpp:382] mnist -> label
I0428 19:48:42.445106 26548 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:42.447108 26548 net.cpp:124] Setting up mnist
I0428 19:48:42.447152 26548 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:42.447156 26548 net.cpp:131] Top shape: 100 (100)
I0428 19:48:42.447160 26548 net.cpp:139] Memory required for data: 314000
I0428 19:48:42.447163 26548 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:42.447187 26548 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:42.447191 26548 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:42.447196 26548 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:42.447202 26548 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:42.447248 26548 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:42.447263 26548 net.cpp:131] Top shape: 100 (100)
I0428 19:48:42.447268 26548 net.cpp:131] Top shape: 100 (100)
I0428 19:48:42.447270 26548 net.cpp:139] Memory required for data: 314800
I0428 19:48:42.447273 26548 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:42.447283 26548 net.cpp:86] Creating Layer conv0
I0428 19:48:42.447285 26548 net.cpp:408] conv0 <- data
I0428 19:48:42.447293 26548 net.cpp:382] conv0 -> conv0
I0428 19:48:42.449292 26548 net.cpp:124] Setting up conv0
I0428 19:48:42.449306 26548 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:42.449311 26548 net.cpp:139] Memory required for data: 1466800
I0428 19:48:42.449319 26548 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:42.449326 26548 net.cpp:86] Creating Layer pool0
I0428 19:48:42.449331 26548 net.cpp:408] pool0 <- conv0
I0428 19:48:42.449335 26548 net.cpp:382] pool0 -> pool0
I0428 19:48:42.449370 26548 net.cpp:124] Setting up pool0
I0428 19:48:42.449375 26548 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:42.449378 26548 net.cpp:139] Memory required for data: 1754800
I0428 19:48:42.449381 26548 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:42.449390 26548 net.cpp:86] Creating Layer conv1
I0428 19:48:42.449393 26548 net.cpp:408] conv1 <- pool0
I0428 19:48:42.449400 26548 net.cpp:382] conv1 -> conv1
I0428 19:48:42.451704 26548 net.cpp:124] Setting up conv1
I0428 19:48:42.451732 26548 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:48:42.451736 26548 net.cpp:139] Memory required for data: 1882800
I0428 19:48:42.451746 26548 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:42.451752 26548 net.cpp:86] Creating Layer pool1
I0428 19:48:42.451771 26548 net.cpp:408] pool1 <- conv1
I0428 19:48:42.451777 26548 net.cpp:382] pool1 -> pool1
I0428 19:48:42.451817 26548 net.cpp:124] Setting up pool1
I0428 19:48:42.451848 26548 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:48:42.451850 26548 net.cpp:139] Memory required for data: 1914800
I0428 19:48:42.451853 26548 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:42.451859 26548 net.cpp:86] Creating Layer ip1
I0428 19:48:42.451863 26548 net.cpp:408] ip1 <- pool1
I0428 19:48:42.451867 26548 net.cpp:382] ip1 -> ip1
I0428 19:48:42.452008 26548 net.cpp:124] Setting up ip1
I0428 19:48:42.452016 26548 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:42.452019 26548 net.cpp:139] Memory required for data: 1924800
I0428 19:48:42.452026 26548 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:42.452033 26548 net.cpp:86] Creating Layer relu1
I0428 19:48:42.452035 26548 net.cpp:408] relu1 <- ip1
I0428 19:48:42.452041 26548 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:42.452266 26548 net.cpp:124] Setting up relu1
I0428 19:48:42.452275 26548 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:48:42.452277 26548 net.cpp:139] Memory required for data: 1934800
I0428 19:48:42.452280 26548 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:42.452288 26548 net.cpp:86] Creating Layer ip2
I0428 19:48:42.452292 26548 net.cpp:408] ip2 <- ip1
I0428 19:48:42.452297 26548 net.cpp:382] ip2 -> ip2
I0428 19:48:42.452392 26548 net.cpp:124] Setting up ip2
I0428 19:48:42.452399 26548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:42.452402 26548 net.cpp:139] Memory required for data: 1938800
I0428 19:48:42.452409 26548 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:42.452412 26548 net.cpp:86] Creating Layer relu2
I0428 19:48:42.452415 26548 net.cpp:408] relu2 <- ip2
I0428 19:48:42.452419 26548 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:42.452590 26548 net.cpp:124] Setting up relu2
I0428 19:48:42.452599 26548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:42.452601 26548 net.cpp:139] Memory required for data: 1942800
I0428 19:48:42.452603 26548 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:48:42.452608 26548 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:48:42.452618 26548 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:48:42.452625 26548 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:48:42.452641 26548 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:48:42.452675 26548 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:48:42.452680 26548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:42.452684 26548 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:42.452687 26548 net.cpp:139] Memory required for data: 1950800
I0428 19:48:42.452690 26548 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:42.452695 26548 net.cpp:86] Creating Layer accuracy
I0428 19:48:42.452698 26548 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:48:42.452719 26548 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:42.452723 26548 net.cpp:382] accuracy -> accuracy
I0428 19:48:42.452731 26548 net.cpp:124] Setting up accuracy
I0428 19:48:42.452735 26548 net.cpp:131] Top shape: (1)
I0428 19:48:42.452739 26548 net.cpp:139] Memory required for data: 1950804
I0428 19:48:42.452741 26548 layer_factory.hpp:77] Creating layer loss
I0428 19:48:42.452765 26548 net.cpp:86] Creating Layer loss
I0428 19:48:42.452769 26548 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:48:42.452772 26548 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:42.452776 26548 net.cpp:382] loss -> loss
I0428 19:48:42.452782 26548 layer_factory.hpp:77] Creating layer loss
I0428 19:48:42.453135 26548 net.cpp:124] Setting up loss
I0428 19:48:42.453164 26548 net.cpp:131] Top shape: (1)
I0428 19:48:42.453167 26548 net.cpp:134]     with loss weight 1
I0428 19:48:42.453184 26548 net.cpp:139] Memory required for data: 1950808
I0428 19:48:42.453187 26548 net.cpp:200] loss needs backward computation.
I0428 19:48:42.453191 26548 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:42.453209 26548 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:48:42.453219 26548 net.cpp:200] relu2 needs backward computation.
I0428 19:48:42.453222 26548 net.cpp:200] ip2 needs backward computation.
I0428 19:48:42.453224 26548 net.cpp:200] relu1 needs backward computation.
I0428 19:48:42.453233 26548 net.cpp:200] ip1 needs backward computation.
I0428 19:48:42.453236 26548 net.cpp:200] pool1 needs backward computation.
I0428 19:48:42.453239 26548 net.cpp:200] conv1 needs backward computation.
I0428 19:48:42.453241 26548 net.cpp:200] pool0 needs backward computation.
I0428 19:48:42.453244 26548 net.cpp:200] conv0 needs backward computation.
I0428 19:48:42.453248 26548 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:42.453256 26548 net.cpp:202] mnist does not need backward computation.
I0428 19:48:42.453259 26548 net.cpp:244] This network produces output accuracy
I0428 19:48:42.453263 26548 net.cpp:244] This network produces output loss
I0428 19:48:42.453276 26548 net.cpp:257] Network initialization done.
I0428 19:48:42.453310 26548 solver.cpp:56] Solver scaffolding done.
I0428 19:48:42.453652 26548 caffe.cpp:248] Starting Optimization
I0428 19:48:42.453660 26548 solver.cpp:273] Solving LeNet
I0428 19:48:42.453661 26548 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:42.454593 26548 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:42.458189 26548 blocking_queue.cpp:49] Waiting for data
I0428 19:48:42.529196 26555 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:42.529747 26548 solver.cpp:398]     Test net output #0: accuracy = 0.0992
I0428 19:48:42.529767 26548 solver.cpp:398]     Test net output #1: loss = 2.3087 (* 1 = 2.3087 loss)
I0428 19:48:42.531458 26548 solver.cpp:219] Iteration 0 (-1.06359e-42 iter/s, 0.0777658s/100 iters), loss = 2.30688
I0428 19:48:42.531512 26548 solver.cpp:238]     Train net output #0: loss = 2.30688 (* 1 = 2.30688 loss)
I0428 19:48:42.531527 26548 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:42.613790 26548 solver.cpp:219] Iteration 100 (1215.49 iter/s, 0.0822716s/100 iters), loss = 1.27715
I0428 19:48:42.613847 26548 solver.cpp:238]     Train net output #0: loss = 1.27715 (* 1 = 1.27715 loss)
I0428 19:48:42.613862 26548 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:42.695458 26548 solver.cpp:219] Iteration 200 (1225.36 iter/s, 0.0816087s/100 iters), loss = 0.974858
I0428 19:48:42.695510 26548 solver.cpp:238]     Train net output #0: loss = 0.974858 (* 1 = 0.974858 loss)
I0428 19:48:42.695528 26548 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:42.762854 26548 solver.cpp:219] Iteration 300 (1485.02 iter/s, 0.0673391s/100 iters), loss = 1.03462
I0428 19:48:42.762881 26548 solver.cpp:238]     Train net output #0: loss = 1.03462 (* 1 = 1.03462 loss)
I0428 19:48:42.762887 26548 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:42.828343 26548 solver.cpp:219] Iteration 400 (1527.79 iter/s, 0.0654542s/100 iters), loss = 1.05743
I0428 19:48:42.828382 26548 solver.cpp:238]     Train net output #0: loss = 1.05743 (* 1 = 1.05743 loss)
I0428 19:48:42.828388 26548 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:42.893921 26548 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:42.970619 26555 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:42.971243 26548 solver.cpp:398]     Test net output #0: accuracy = 0.6629
I0428 19:48:42.971282 26548 solver.cpp:398]     Test net output #1: loss = 1.05368 (* 1 = 1.05368 loss)
I0428 19:48:42.972242 26548 solver.cpp:219] Iteration 500 (695.132 iter/s, 0.143858s/100 iters), loss = 1.03016
I0428 19:48:42.972280 26548 solver.cpp:238]     Train net output #0: loss = 1.03016 (* 1 = 1.03016 loss)
I0428 19:48:42.972293 26548 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:43.049405 26548 solver.cpp:219] Iteration 600 (1296.74 iter/s, 0.0771165s/100 iters), loss = 1.0499
I0428 19:48:43.049437 26548 solver.cpp:238]     Train net output #0: loss = 1.0499 (* 1 = 1.0499 loss)
I0428 19:48:43.049456 26548 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:43.116678 26548 solver.cpp:219] Iteration 700 (1487.33 iter/s, 0.0672347s/100 iters), loss = 1.4425
I0428 19:48:43.116706 26548 solver.cpp:238]     Train net output #0: loss = 1.4425 (* 1 = 1.4425 loss)
I0428 19:48:43.116726 26548 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:43.197310 26548 solver.cpp:219] Iteration 800 (1240.84 iter/s, 0.0805909s/100 iters), loss = 1.15422
I0428 19:48:43.197355 26548 solver.cpp:238]     Train net output #0: loss = 1.15422 (* 1 = 1.15422 loss)
I0428 19:48:43.197366 26548 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:43.272590 26548 solver.cpp:219] Iteration 900 (1329.3 iter/s, 0.0752273s/100 iters), loss = 1.05301
I0428 19:48:43.272619 26548 solver.cpp:238]     Train net output #0: loss = 1.05301 (* 1 = 1.05301 loss)
I0428 19:48:43.272627 26548 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:43.295146 26554 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:43.343093 26548 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:43.344000 26548 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:43.344636 26548 solver.cpp:311] Iteration 1000, loss = 1.17332
I0428 19:48:43.344662 26548 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:43.419203 26555 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:43.419737 26548 solver.cpp:398]     Test net output #0: accuracy = 0.6756
I0428 19:48:43.419764 26548 solver.cpp:398]     Test net output #1: loss = 1.00029 (* 1 = 1.00029 loss)
I0428 19:48:43.419771 26548 solver.cpp:316] Optimization Done.
I0428 19:48:43.419776 26548 caffe.cpp:259] Optimization Done.
