I0428 20:23:36.853400  2264 caffe.cpp:218] Using GPUs 0
I0428 20:23:36.890167  2264 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:37.427479  2264 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1424.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:37.427640  2264 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1424.prototxt
I0428 20:23:37.428118  2264 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:37.428141  2264 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:37.428252  2264 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:37.428334  2264 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:37.428434  2264 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:37.428462  2264 net.cpp:86] Creating Layer mnist
I0428 20:23:37.428472  2264 net.cpp:382] mnist -> data
I0428 20:23:37.428493  2264 net.cpp:382] mnist -> label
I0428 20:23:37.429780  2264 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:37.432581  2264 net.cpp:124] Setting up mnist
I0428 20:23:37.432621  2264 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:37.432627  2264 net.cpp:131] Top shape: 64 (64)
I0428 20:23:37.432631  2264 net.cpp:139] Memory required for data: 200960
I0428 20:23:37.432638  2264 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:37.432659  2264 net.cpp:86] Creating Layer conv0
I0428 20:23:37.432680  2264 net.cpp:408] conv0 <- data
I0428 20:23:37.432710  2264 net.cpp:382] conv0 -> conv0
I0428 20:23:37.719065  2264 net.cpp:124] Setting up conv0
I0428 20:23:37.719113  2264 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:37.719120  2264 net.cpp:139] Memory required for data: 7573760
I0428 20:23:37.719141  2264 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:37.719156  2264 net.cpp:86] Creating Layer pool0
I0428 20:23:37.719162  2264 net.cpp:408] pool0 <- conv0
I0428 20:23:37.719169  2264 net.cpp:382] pool0 -> pool0
I0428 20:23:37.719239  2264 net.cpp:124] Setting up pool0
I0428 20:23:37.719249  2264 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:37.719254  2264 net.cpp:139] Memory required for data: 9416960
I0428 20:23:37.719259  2264 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:37.719271  2264 net.cpp:86] Creating Layer conv1
I0428 20:23:37.719279  2264 net.cpp:408] conv1 <- pool0
I0428 20:23:37.719300  2264 net.cpp:382] conv1 -> conv1
I0428 20:23:37.723942  2264 net.cpp:124] Setting up conv1
I0428 20:23:37.723958  2264 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:37.723963  2264 net.cpp:139] Memory required for data: 11055360
I0428 20:23:37.723973  2264 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:37.723984  2264 net.cpp:86] Creating Layer pool1
I0428 20:23:37.723987  2264 net.cpp:408] pool1 <- conv1
I0428 20:23:37.723994  2264 net.cpp:382] pool1 -> pool1
I0428 20:23:37.724078  2264 net.cpp:124] Setting up pool1
I0428 20:23:37.724092  2264 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:37.724112  2264 net.cpp:139] Memory required for data: 11464960
I0428 20:23:37.724117  2264 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:37.724125  2264 net.cpp:86] Creating Layer ip1
I0428 20:23:37.724130  2264 net.cpp:408] ip1 <- pool1
I0428 20:23:37.724136  2264 net.cpp:382] ip1 -> ip1
I0428 20:23:37.725543  2264 net.cpp:124] Setting up ip1
I0428 20:23:37.725556  2264 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:37.725577  2264 net.cpp:139] Memory required for data: 11467520
I0428 20:23:37.725603  2264 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:37.725612  2264 net.cpp:86] Creating Layer relu1
I0428 20:23:37.725617  2264 net.cpp:408] relu1 <- ip1
I0428 20:23:37.725623  2264 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:37.725836  2264 net.cpp:124] Setting up relu1
I0428 20:23:37.725847  2264 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:37.725852  2264 net.cpp:139] Memory required for data: 11470080
I0428 20:23:37.725857  2264 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:37.725867  2264 net.cpp:86] Creating Layer ip2
I0428 20:23:37.725873  2264 net.cpp:408] ip2 <- ip1
I0428 20:23:37.725895  2264 net.cpp:382] ip2 -> ip2
I0428 20:23:37.726035  2264 net.cpp:124] Setting up ip2
I0428 20:23:37.726044  2264 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:37.726049  2264 net.cpp:139] Memory required for data: 11482880
I0428 20:23:37.726058  2264 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:37.726065  2264 net.cpp:86] Creating Layer relu2
I0428 20:23:37.726073  2264 net.cpp:408] relu2 <- ip2
I0428 20:23:37.726094  2264 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:37.727123  2264 net.cpp:124] Setting up relu2
I0428 20:23:37.727138  2264 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:37.727157  2264 net.cpp:139] Memory required for data: 11495680
I0428 20:23:37.727161  2264 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:37.727171  2264 net.cpp:86] Creating Layer ip3
I0428 20:23:37.727175  2264 net.cpp:408] ip3 <- ip2
I0428 20:23:37.727183  2264 net.cpp:382] ip3 -> ip3
I0428 20:23:37.727326  2264 net.cpp:124] Setting up ip3
I0428 20:23:37.727337  2264 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:37.727341  2264 net.cpp:139] Memory required for data: 11498240
I0428 20:23:37.727352  2264 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:37.727361  2264 net.cpp:86] Creating Layer relu3
I0428 20:23:37.727366  2264 net.cpp:408] relu3 <- ip3
I0428 20:23:37.727372  2264 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:37.727591  2264 net.cpp:124] Setting up relu3
I0428 20:23:37.727602  2264 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:37.727605  2264 net.cpp:139] Memory required for data: 11500800
I0428 20:23:37.727613  2264 layer_factory.hpp:77] Creating layer loss
I0428 20:23:37.727620  2264 net.cpp:86] Creating Layer loss
I0428 20:23:37.727624  2264 net.cpp:408] loss <- ip3
I0428 20:23:37.727630  2264 net.cpp:408] loss <- label
I0428 20:23:37.727639  2264 net.cpp:382] loss -> loss
I0428 20:23:37.727676  2264 layer_factory.hpp:77] Creating layer loss
I0428 20:23:37.728016  2264 net.cpp:124] Setting up loss
I0428 20:23:37.728027  2264 net.cpp:131] Top shape: (1)
I0428 20:23:37.728034  2264 net.cpp:134]     with loss weight 1
I0428 20:23:37.728052  2264 net.cpp:139] Memory required for data: 11500804
I0428 20:23:37.728058  2264 net.cpp:200] loss needs backward computation.
I0428 20:23:37.728080  2264 net.cpp:200] relu3 needs backward computation.
I0428 20:23:37.728083  2264 net.cpp:200] ip3 needs backward computation.
I0428 20:23:37.728087  2264 net.cpp:200] relu2 needs backward computation.
I0428 20:23:37.728091  2264 net.cpp:200] ip2 needs backward computation.
I0428 20:23:37.728097  2264 net.cpp:200] relu1 needs backward computation.
I0428 20:23:37.728101  2264 net.cpp:200] ip1 needs backward computation.
I0428 20:23:37.728106  2264 net.cpp:200] pool1 needs backward computation.
I0428 20:23:37.728109  2264 net.cpp:200] conv1 needs backward computation.
I0428 20:23:37.728114  2264 net.cpp:200] pool0 needs backward computation.
I0428 20:23:37.728119  2264 net.cpp:200] conv0 needs backward computation.
I0428 20:23:37.728124  2264 net.cpp:202] mnist does not need backward computation.
I0428 20:23:37.728128  2264 net.cpp:244] This network produces output loss
I0428 20:23:37.728142  2264 net.cpp:257] Network initialization done.
I0428 20:23:37.728651  2264 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1424.prototxt
I0428 20:23:37.728687  2264 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:37.728807  2264 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:37.728976  2264 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:37.729027  2264 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:37.729048  2264 net.cpp:86] Creating Layer mnist
I0428 20:23:37.729058  2264 net.cpp:382] mnist -> data
I0428 20:23:37.729069  2264 net.cpp:382] mnist -> label
I0428 20:23:37.729214  2264 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:37.730674  2264 net.cpp:124] Setting up mnist
I0428 20:23:37.730689  2264 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:37.730695  2264 net.cpp:131] Top shape: 100 (100)
I0428 20:23:37.730700  2264 net.cpp:139] Memory required for data: 314000
I0428 20:23:37.730705  2264 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:37.730717  2264 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:37.730723  2264 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:37.730731  2264 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:37.730741  2264 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:37.730823  2264 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:37.730834  2264 net.cpp:131] Top shape: 100 (100)
I0428 20:23:37.730841  2264 net.cpp:131] Top shape: 100 (100)
I0428 20:23:37.730862  2264 net.cpp:139] Memory required for data: 314800
I0428 20:23:37.730866  2264 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:37.730878  2264 net.cpp:86] Creating Layer conv0
I0428 20:23:37.730882  2264 net.cpp:408] conv0 <- data
I0428 20:23:37.730891  2264 net.cpp:382] conv0 -> conv0
I0428 20:23:37.732915  2264 net.cpp:124] Setting up conv0
I0428 20:23:37.732949  2264 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:37.732954  2264 net.cpp:139] Memory required for data: 11834800
I0428 20:23:37.732966  2264 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:37.732975  2264 net.cpp:86] Creating Layer pool0
I0428 20:23:37.732980  2264 net.cpp:408] pool0 <- conv0
I0428 20:23:37.732985  2264 net.cpp:382] pool0 -> pool0
I0428 20:23:37.733044  2264 net.cpp:124] Setting up pool0
I0428 20:23:37.733054  2264 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:37.733058  2264 net.cpp:139] Memory required for data: 14714800
I0428 20:23:37.733063  2264 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:37.733077  2264 net.cpp:86] Creating Layer conv1
I0428 20:23:37.733083  2264 net.cpp:408] conv1 <- pool0
I0428 20:23:37.733106  2264 net.cpp:382] conv1 -> conv1
I0428 20:23:37.737344  2264 net.cpp:124] Setting up conv1
I0428 20:23:37.737360  2264 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:37.737365  2264 net.cpp:139] Memory required for data: 17274800
I0428 20:23:37.737375  2264 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:37.737385  2264 net.cpp:86] Creating Layer pool1
I0428 20:23:37.737390  2264 net.cpp:408] pool1 <- conv1
I0428 20:23:37.737396  2264 net.cpp:382] pool1 -> pool1
I0428 20:23:37.737453  2264 net.cpp:124] Setting up pool1
I0428 20:23:37.737463  2264 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:37.737468  2264 net.cpp:139] Memory required for data: 17914800
I0428 20:23:37.737471  2264 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:37.737479  2264 net.cpp:86] Creating Layer ip1
I0428 20:23:37.737483  2264 net.cpp:408] ip1 <- pool1
I0428 20:23:37.737491  2264 net.cpp:382] ip1 -> ip1
I0428 20:23:37.737817  2264 net.cpp:124] Setting up ip1
I0428 20:23:37.737838  2264 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:37.737843  2264 net.cpp:139] Memory required for data: 17918800
I0428 20:23:37.737854  2264 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:37.737876  2264 net.cpp:86] Creating Layer relu1
I0428 20:23:37.737884  2264 net.cpp:408] relu1 <- ip1
I0428 20:23:37.737906  2264 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:37.738163  2264 net.cpp:124] Setting up relu1
I0428 20:23:37.738189  2264 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:37.738194  2264 net.cpp:139] Memory required for data: 17922800
I0428 20:23:37.738215  2264 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:37.738240  2264 net.cpp:86] Creating Layer ip2
I0428 20:23:37.738245  2264 net.cpp:408] ip2 <- ip1
I0428 20:23:37.738252  2264 net.cpp:382] ip2 -> ip2
I0428 20:23:37.738384  2264 net.cpp:124] Setting up ip2
I0428 20:23:37.738394  2264 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:37.738397  2264 net.cpp:139] Memory required for data: 17942800
I0428 20:23:37.738405  2264 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:37.738412  2264 net.cpp:86] Creating Layer relu2
I0428 20:23:37.738416  2264 net.cpp:408] relu2 <- ip2
I0428 20:23:37.738423  2264 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:37.738703  2264 net.cpp:124] Setting up relu2
I0428 20:23:37.738724  2264 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:37.738729  2264 net.cpp:139] Memory required for data: 17962800
I0428 20:23:37.738734  2264 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:37.738744  2264 net.cpp:86] Creating Layer ip3
I0428 20:23:37.738751  2264 net.cpp:408] ip3 <- ip2
I0428 20:23:37.738765  2264 net.cpp:382] ip3 -> ip3
I0428 20:23:37.738936  2264 net.cpp:124] Setting up ip3
I0428 20:23:37.738945  2264 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:37.738951  2264 net.cpp:139] Memory required for data: 17966800
I0428 20:23:37.738977  2264 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:37.738986  2264 net.cpp:86] Creating Layer relu3
I0428 20:23:37.738991  2264 net.cpp:408] relu3 <- ip3
I0428 20:23:37.738996  2264 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:37.740016  2264 net.cpp:124] Setting up relu3
I0428 20:23:37.740033  2264 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:37.740038  2264 net.cpp:139] Memory required for data: 17970800
I0428 20:23:37.740043  2264 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:37.740051  2264 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:37.740056  2264 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:37.740062  2264 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:37.740070  2264 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:37.740154  2264 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:37.740162  2264 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:37.740183  2264 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:37.740188  2264 net.cpp:139] Memory required for data: 17978800
I0428 20:23:37.740192  2264 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:37.740200  2264 net.cpp:86] Creating Layer accuracy
I0428 20:23:37.740205  2264 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:37.740211  2264 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:37.740232  2264 net.cpp:382] accuracy -> accuracy
I0428 20:23:37.740242  2264 net.cpp:124] Setting up accuracy
I0428 20:23:37.740250  2264 net.cpp:131] Top shape: (1)
I0428 20:23:37.740270  2264 net.cpp:139] Memory required for data: 17978804
I0428 20:23:37.740275  2264 layer_factory.hpp:77] Creating layer loss
I0428 20:23:37.740281  2264 net.cpp:86] Creating Layer loss
I0428 20:23:37.740286  2264 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:37.740293  2264 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:37.740300  2264 net.cpp:382] loss -> loss
I0428 20:23:37.740309  2264 layer_factory.hpp:77] Creating layer loss
I0428 20:23:37.740669  2264 net.cpp:124] Setting up loss
I0428 20:23:37.740679  2264 net.cpp:131] Top shape: (1)
I0428 20:23:37.740700  2264 net.cpp:134]     with loss weight 1
I0428 20:23:37.740716  2264 net.cpp:139] Memory required for data: 17978808
I0428 20:23:37.740721  2264 net.cpp:200] loss needs backward computation.
I0428 20:23:37.740726  2264 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:37.740731  2264 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:37.740736  2264 net.cpp:200] relu3 needs backward computation.
I0428 20:23:37.740739  2264 net.cpp:200] ip3 needs backward computation.
I0428 20:23:37.740743  2264 net.cpp:200] relu2 needs backward computation.
I0428 20:23:37.740747  2264 net.cpp:200] ip2 needs backward computation.
I0428 20:23:37.740751  2264 net.cpp:200] relu1 needs backward computation.
I0428 20:23:37.740756  2264 net.cpp:200] ip1 needs backward computation.
I0428 20:23:37.740759  2264 net.cpp:200] pool1 needs backward computation.
I0428 20:23:37.740764  2264 net.cpp:200] conv1 needs backward computation.
I0428 20:23:37.740768  2264 net.cpp:200] pool0 needs backward computation.
I0428 20:23:37.740792  2264 net.cpp:200] conv0 needs backward computation.
I0428 20:23:37.740797  2264 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:37.740840  2264 net.cpp:202] mnist does not need backward computation.
I0428 20:23:37.740845  2264 net.cpp:244] This network produces output accuracy
I0428 20:23:37.740850  2264 net.cpp:244] This network produces output loss
I0428 20:23:37.740885  2264 net.cpp:257] Network initialization done.
I0428 20:23:37.740957  2264 solver.cpp:56] Solver scaffolding done.
I0428 20:23:37.741451  2264 caffe.cpp:248] Starting Optimization
I0428 20:23:37.741458  2264 solver.cpp:273] Solving LeNet
I0428 20:23:37.741462  2264 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:37.742480  2264 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:37.838455  2271 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:37.841930  2264 solver.cpp:398]     Test net output #0: accuracy = 0.1687
I0428 20:23:37.841954  2264 solver.cpp:398]     Test net output #1: loss = 2.30856 (* 1 = 2.30856 loss)
I0428 20:23:37.848785  2264 solver.cpp:219] Iteration 0 (-1.9849e-31 iter/s, 0.107277s/100 iters), loss = 2.31142
I0428 20:23:37.848852  2264 solver.cpp:238]     Train net output #0: loss = 2.31142 (* 1 = 2.31142 loss)
I0428 20:23:37.848883  2264 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:38.075002  2264 solver.cpp:219] Iteration 100 (442.19 iter/s, 0.226147s/100 iters), loss = 1.69725
I0428 20:23:38.075031  2264 solver.cpp:238]     Train net output #0: loss = 1.69725 (* 1 = 1.69725 loss)
I0428 20:23:38.075039  2264 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:38.294764  2264 solver.cpp:219] Iteration 200 (455.13 iter/s, 0.219718s/100 iters), loss = 1.96365
I0428 20:23:38.294806  2264 solver.cpp:238]     Train net output #0: loss = 1.96365 (* 1 = 1.96365 loss)
I0428 20:23:38.294812  2264 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:38.513830  2264 solver.cpp:219] Iteration 300 (456.579 iter/s, 0.21902s/100 iters), loss = 1.49053
I0428 20:23:38.513882  2264 solver.cpp:238]     Train net output #0: loss = 1.49053 (* 1 = 1.49053 loss)
I0428 20:23:38.513895  2264 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:38.742741  2264 solver.cpp:219] Iteration 400 (436.954 iter/s, 0.228857s/100 iters), loss = 1.5183
I0428 20:23:38.742770  2264 solver.cpp:238]     Train net output #0: loss = 1.5183 (* 1 = 1.5183 loss)
I0428 20:23:38.742779  2264 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:38.952822  2264 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:39.038574  2271 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:39.041700  2264 solver.cpp:398]     Test net output #0: accuracy = 0.6386
I0428 20:23:39.041751  2264 solver.cpp:398]     Test net output #1: loss = 1.10353 (* 1 = 1.10353 loss)
I0428 20:23:39.043601  2264 solver.cpp:219] Iteration 500 (332.431 iter/s, 0.300814s/100 iters), loss = 1.25552
I0428 20:23:39.043637  2264 solver.cpp:238]     Train net output #0: loss = 1.25552 (* 1 = 1.25552 loss)
I0428 20:23:39.043658  2264 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:39.246531  2264 solver.cpp:219] Iteration 600 (492.87 iter/s, 0.202893s/100 iters), loss = 0.83199
I0428 20:23:39.246574  2264 solver.cpp:238]     Train net output #0: loss = 0.83199 (* 1 = 0.83199 loss)
I0428 20:23:39.246580  2264 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:39.456557  2264 solver.cpp:219] Iteration 700 (476.226 iter/s, 0.209985s/100 iters), loss = 0.800854
I0428 20:23:39.456595  2264 solver.cpp:238]     Train net output #0: loss = 0.800854 (* 1 = 0.800854 loss)
I0428 20:23:39.456603  2264 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:39.683173  2264 solver.cpp:219] Iteration 800 (441.374 iter/s, 0.226565s/100 iters), loss = 1.05262
I0428 20:23:39.683231  2264 solver.cpp:238]     Train net output #0: loss = 1.05262 (* 1 = 1.05262 loss)
I0428 20:23:39.683244  2264 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:39.926811  2264 solver.cpp:219] Iteration 900 (410.569 iter/s, 0.243565s/100 iters), loss = 0.675796
I0428 20:23:39.926863  2264 solver.cpp:238]     Train net output #0: loss = 0.675796 (* 1 = 0.675796 loss)
I0428 20:23:39.926875  2264 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:40.007297  2270 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:40.165333  2264 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:40.171526  2264 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:40.174053  2264 solver.cpp:311] Iteration 1000, loss = 0.872332
I0428 20:23:40.174080  2264 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:40.267968  2271 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:40.270450  2264 solver.cpp:398]     Test net output #0: accuracy = 0.6812
I0428 20:23:40.270475  2264 solver.cpp:398]     Test net output #1: loss = 0.998462 (* 1 = 0.998462 loss)
I0428 20:23:40.270481  2264 solver.cpp:316] Optimization Done.
I0428 20:23:40.270485  2264 caffe.cpp:259] Optimization Done.
