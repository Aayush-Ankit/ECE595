I0428 19:39:38.115000 24347 caffe.cpp:218] Using GPUs 0
I0428 19:39:38.155015 24347 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:38.624804 24347 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test310.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:38.625005 24347 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test310.prototxt
I0428 19:39:38.625397 24347 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:38.625427 24347 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:38.625529 24347 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:38.625591 24347 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:38.625671 24347 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:38.625690 24347 net.cpp:86] Creating Layer mnist
I0428 19:39:38.625697 24347 net.cpp:382] mnist -> data
I0428 19:39:38.625716 24347 net.cpp:382] mnist -> label
I0428 19:39:38.626734 24347 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:38.629040 24347 net.cpp:124] Setting up mnist
I0428 19:39:38.629071 24347 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:38.629077 24347 net.cpp:131] Top shape: 64 (64)
I0428 19:39:38.629081 24347 net.cpp:139] Memory required for data: 200960
I0428 19:39:38.629102 24347 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:38.629117 24347 net.cpp:86] Creating Layer conv0
I0428 19:39:38.629149 24347 net.cpp:408] conv0 <- data
I0428 19:39:38.629159 24347 net.cpp:382] conv0 -> conv0
I0428 19:39:38.863456 24347 net.cpp:124] Setting up conv0
I0428 19:39:38.863498 24347 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:38.863502 24347 net.cpp:139] Memory required for data: 495872
I0428 19:39:38.863517 24347 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:38.863546 24347 net.cpp:86] Creating Layer pool0
I0428 19:39:38.863550 24347 net.cpp:408] pool0 <- conv0
I0428 19:39:38.863556 24347 net.cpp:382] pool0 -> pool0
I0428 19:39:38.863638 24347 net.cpp:124] Setting up pool0
I0428 19:39:38.863646 24347 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:38.863649 24347 net.cpp:139] Memory required for data: 569600
I0428 19:39:38.863652 24347 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:38.863664 24347 net.cpp:86] Creating Layer conv1
I0428 19:39:38.863667 24347 net.cpp:408] conv1 <- pool0
I0428 19:39:38.863672 24347 net.cpp:382] conv1 -> conv1
I0428 19:39:38.865694 24347 net.cpp:124] Setting up conv1
I0428 19:39:38.865723 24347 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:38.865727 24347 net.cpp:139] Memory required for data: 602368
I0428 19:39:38.865736 24347 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:38.865746 24347 net.cpp:86] Creating Layer pool1
I0428 19:39:38.865749 24347 net.cpp:408] pool1 <- conv1
I0428 19:39:38.865754 24347 net.cpp:382] pool1 -> pool1
I0428 19:39:38.865792 24347 net.cpp:124] Setting up pool1
I0428 19:39:38.865799 24347 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:38.865803 24347 net.cpp:139] Memory required for data: 610560
I0428 19:39:38.865806 24347 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:38.865813 24347 net.cpp:86] Creating Layer ip1
I0428 19:39:38.865816 24347 net.cpp:408] ip1 <- pool1
I0428 19:39:38.865821 24347 net.cpp:382] ip1 -> ip1
I0428 19:39:38.866785 24347 net.cpp:124] Setting up ip1
I0428 19:39:38.866797 24347 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:38.866816 24347 net.cpp:139] Memory required for data: 623360
I0428 19:39:38.866825 24347 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:38.866832 24347 net.cpp:86] Creating Layer relu1
I0428 19:39:38.866834 24347 net.cpp:408] relu1 <- ip1
I0428 19:39:38.866839 24347 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:38.867023 24347 net.cpp:124] Setting up relu1
I0428 19:39:38.867033 24347 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:38.867036 24347 net.cpp:139] Memory required for data: 636160
I0428 19:39:38.867039 24347 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:38.867046 24347 net.cpp:86] Creating Layer ip2
I0428 19:39:38.867050 24347 net.cpp:408] ip2 <- ip1
I0428 19:39:38.867055 24347 net.cpp:382] ip2 -> ip2
I0428 19:39:38.867179 24347 net.cpp:124] Setting up ip2
I0428 19:39:38.867187 24347 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:38.867190 24347 net.cpp:139] Memory required for data: 648960
I0428 19:39:38.867195 24347 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:38.867202 24347 net.cpp:86] Creating Layer relu2
I0428 19:39:38.867204 24347 net.cpp:408] relu2 <- ip2
I0428 19:39:38.867208 24347 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:38.867961 24347 net.cpp:124] Setting up relu2
I0428 19:39:38.867974 24347 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:38.867988 24347 net.cpp:139] Memory required for data: 661760
I0428 19:39:38.867993 24347 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:38.868000 24347 net.cpp:86] Creating Layer ip3
I0428 19:39:38.868005 24347 net.cpp:408] ip3 <- ip2
I0428 19:39:38.868010 24347 net.cpp:382] ip3 -> ip3
I0428 19:39:38.868134 24347 net.cpp:124] Setting up ip3
I0428 19:39:38.868142 24347 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:38.868145 24347 net.cpp:139] Memory required for data: 664320
I0428 19:39:38.868155 24347 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:38.868162 24347 net.cpp:86] Creating Layer relu3
I0428 19:39:38.868165 24347 net.cpp:408] relu3 <- ip3
I0428 19:39:38.868170 24347 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:38.868351 24347 net.cpp:124] Setting up relu3
I0428 19:39:38.868361 24347 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:38.868365 24347 net.cpp:139] Memory required for data: 666880
I0428 19:39:38.868368 24347 layer_factory.hpp:77] Creating layer loss
I0428 19:39:38.868374 24347 net.cpp:86] Creating Layer loss
I0428 19:39:38.868377 24347 net.cpp:408] loss <- ip3
I0428 19:39:38.868381 24347 net.cpp:408] loss <- label
I0428 19:39:38.868387 24347 net.cpp:382] loss -> loss
I0428 19:39:38.868402 24347 layer_factory.hpp:77] Creating layer loss
I0428 19:39:38.868655 24347 net.cpp:124] Setting up loss
I0428 19:39:38.868664 24347 net.cpp:131] Top shape: (1)
I0428 19:39:38.868669 24347 net.cpp:134]     with loss weight 1
I0428 19:39:38.868683 24347 net.cpp:139] Memory required for data: 666884
I0428 19:39:38.868687 24347 net.cpp:200] loss needs backward computation.
I0428 19:39:38.868691 24347 net.cpp:200] relu3 needs backward computation.
I0428 19:39:38.868695 24347 net.cpp:200] ip3 needs backward computation.
I0428 19:39:38.868698 24347 net.cpp:200] relu2 needs backward computation.
I0428 19:39:38.868701 24347 net.cpp:200] ip2 needs backward computation.
I0428 19:39:38.868705 24347 net.cpp:200] relu1 needs backward computation.
I0428 19:39:38.868708 24347 net.cpp:200] ip1 needs backward computation.
I0428 19:39:38.868711 24347 net.cpp:200] pool1 needs backward computation.
I0428 19:39:38.868715 24347 net.cpp:200] conv1 needs backward computation.
I0428 19:39:38.868718 24347 net.cpp:200] pool0 needs backward computation.
I0428 19:39:38.868721 24347 net.cpp:200] conv0 needs backward computation.
I0428 19:39:38.868726 24347 net.cpp:202] mnist does not need backward computation.
I0428 19:39:38.868728 24347 net.cpp:244] This network produces output loss
I0428 19:39:38.868739 24347 net.cpp:257] Network initialization done.
I0428 19:39:38.869179 24347 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test310.prototxt
I0428 19:39:38.869237 24347 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:38.869328 24347 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:38.869407 24347 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:38.869452 24347 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:38.869467 24347 net.cpp:86] Creating Layer mnist
I0428 19:39:38.869472 24347 net.cpp:382] mnist -> data
I0428 19:39:38.869480 24347 net.cpp:382] mnist -> label
I0428 19:39:38.869566 24347 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:38.871675 24347 net.cpp:124] Setting up mnist
I0428 19:39:38.871704 24347 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:38.871711 24347 net.cpp:131] Top shape: 100 (100)
I0428 19:39:38.871713 24347 net.cpp:139] Memory required for data: 314000
I0428 19:39:38.871717 24347 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:38.871723 24347 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:38.871726 24347 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:38.871731 24347 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:38.871738 24347 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:38.871835 24347 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:38.871842 24347 net.cpp:131] Top shape: 100 (100)
I0428 19:39:38.871846 24347 net.cpp:131] Top shape: 100 (100)
I0428 19:39:38.871850 24347 net.cpp:139] Memory required for data: 314800
I0428 19:39:38.871852 24347 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:38.871861 24347 net.cpp:86] Creating Layer conv0
I0428 19:39:38.871865 24347 net.cpp:408] conv0 <- data
I0428 19:39:38.871870 24347 net.cpp:382] conv0 -> conv0
I0428 19:39:38.873641 24347 net.cpp:124] Setting up conv0
I0428 19:39:38.873669 24347 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:38.873673 24347 net.cpp:139] Memory required for data: 775600
I0428 19:39:38.873682 24347 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:38.873689 24347 net.cpp:86] Creating Layer pool0
I0428 19:39:38.873693 24347 net.cpp:408] pool0 <- conv0
I0428 19:39:38.873698 24347 net.cpp:382] pool0 -> pool0
I0428 19:39:38.873733 24347 net.cpp:124] Setting up pool0
I0428 19:39:38.873739 24347 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:38.873742 24347 net.cpp:139] Memory required for data: 890800
I0428 19:39:38.873745 24347 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:38.873754 24347 net.cpp:86] Creating Layer conv1
I0428 19:39:38.873756 24347 net.cpp:408] conv1 <- pool0
I0428 19:39:38.873761 24347 net.cpp:382] conv1 -> conv1
I0428 19:39:38.875371 24347 net.cpp:124] Setting up conv1
I0428 19:39:38.875401 24347 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:38.875404 24347 net.cpp:139] Memory required for data: 942000
I0428 19:39:38.875413 24347 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:38.875422 24347 net.cpp:86] Creating Layer pool1
I0428 19:39:38.875425 24347 net.cpp:408] pool1 <- conv1
I0428 19:39:38.875432 24347 net.cpp:382] pool1 -> pool1
I0428 19:39:38.875486 24347 net.cpp:124] Setting up pool1
I0428 19:39:38.875491 24347 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:38.875495 24347 net.cpp:139] Memory required for data: 954800
I0428 19:39:38.875499 24347 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:38.875507 24347 net.cpp:86] Creating Layer ip1
I0428 19:39:38.875517 24347 net.cpp:408] ip1 <- pool1
I0428 19:39:38.875524 24347 net.cpp:382] ip1 -> ip1
I0428 19:39:38.875663 24347 net.cpp:124] Setting up ip1
I0428 19:39:38.875671 24347 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:38.875690 24347 net.cpp:139] Memory required for data: 974800
I0428 19:39:38.875699 24347 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:38.875705 24347 net.cpp:86] Creating Layer relu1
I0428 19:39:38.875708 24347 net.cpp:408] relu1 <- ip1
I0428 19:39:38.875715 24347 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:38.875902 24347 net.cpp:124] Setting up relu1
I0428 19:39:38.875911 24347 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:38.875921 24347 net.cpp:139] Memory required for data: 994800
I0428 19:39:38.875923 24347 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:38.875931 24347 net.cpp:86] Creating Layer ip2
I0428 19:39:38.875936 24347 net.cpp:408] ip2 <- ip1
I0428 19:39:38.875939 24347 net.cpp:382] ip2 -> ip2
I0428 19:39:38.876056 24347 net.cpp:124] Setting up ip2
I0428 19:39:38.876063 24347 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:38.876066 24347 net.cpp:139] Memory required for data: 1014800
I0428 19:39:38.876071 24347 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:38.876077 24347 net.cpp:86] Creating Layer relu2
I0428 19:39:38.876080 24347 net.cpp:408] relu2 <- ip2
I0428 19:39:38.876085 24347 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:38.876309 24347 net.cpp:124] Setting up relu2
I0428 19:39:38.876318 24347 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:38.876322 24347 net.cpp:139] Memory required for data: 1034800
I0428 19:39:38.876324 24347 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:38.876332 24347 net.cpp:86] Creating Layer ip3
I0428 19:39:38.876334 24347 net.cpp:408] ip3 <- ip2
I0428 19:39:38.876339 24347 net.cpp:382] ip3 -> ip3
I0428 19:39:38.876480 24347 net.cpp:124] Setting up ip3
I0428 19:39:38.876487 24347 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:38.876490 24347 net.cpp:139] Memory required for data: 1038800
I0428 19:39:38.876499 24347 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:38.876505 24347 net.cpp:86] Creating Layer relu3
I0428 19:39:38.876508 24347 net.cpp:408] relu3 <- ip3
I0428 19:39:38.876513 24347 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:38.877400 24347 net.cpp:124] Setting up relu3
I0428 19:39:38.877429 24347 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:38.877432 24347 net.cpp:139] Memory required for data: 1042800
I0428 19:39:38.877435 24347 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:38.877441 24347 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:38.877444 24347 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:38.877449 24347 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:38.877455 24347 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:38.877507 24347 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:38.877513 24347 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:38.877518 24347 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:38.877521 24347 net.cpp:139] Memory required for data: 1050800
I0428 19:39:38.877526 24347 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:38.877530 24347 net.cpp:86] Creating Layer accuracy
I0428 19:39:38.877533 24347 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:38.877537 24347 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:38.877543 24347 net.cpp:382] accuracy -> accuracy
I0428 19:39:38.877550 24347 net.cpp:124] Setting up accuracy
I0428 19:39:38.877554 24347 net.cpp:131] Top shape: (1)
I0428 19:39:38.877562 24347 net.cpp:139] Memory required for data: 1050804
I0428 19:39:38.877569 24347 layer_factory.hpp:77] Creating layer loss
I0428 19:39:38.877575 24347 net.cpp:86] Creating Layer loss
I0428 19:39:38.877579 24347 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:38.877583 24347 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:38.877591 24347 net.cpp:382] loss -> loss
I0428 19:39:38.877599 24347 layer_factory.hpp:77] Creating layer loss
I0428 19:39:38.877867 24347 net.cpp:124] Setting up loss
I0428 19:39:38.877877 24347 net.cpp:131] Top shape: (1)
I0428 19:39:38.877882 24347 net.cpp:134]     with loss weight 1
I0428 19:39:38.877887 24347 net.cpp:139] Memory required for data: 1050808
I0428 19:39:38.877902 24347 net.cpp:200] loss needs backward computation.
I0428 19:39:38.877907 24347 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:38.877910 24347 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:38.877914 24347 net.cpp:200] relu3 needs backward computation.
I0428 19:39:38.877918 24347 net.cpp:200] ip3 needs backward computation.
I0428 19:39:38.877920 24347 net.cpp:200] relu2 needs backward computation.
I0428 19:39:38.877923 24347 net.cpp:200] ip2 needs backward computation.
I0428 19:39:38.877925 24347 net.cpp:200] relu1 needs backward computation.
I0428 19:39:38.877928 24347 net.cpp:200] ip1 needs backward computation.
I0428 19:39:38.877931 24347 net.cpp:200] pool1 needs backward computation.
I0428 19:39:38.877935 24347 net.cpp:200] conv1 needs backward computation.
I0428 19:39:38.877938 24347 net.cpp:200] pool0 needs backward computation.
I0428 19:39:38.877941 24347 net.cpp:200] conv0 needs backward computation.
I0428 19:39:38.877945 24347 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:38.877949 24347 net.cpp:202] mnist does not need backward computation.
I0428 19:39:38.877952 24347 net.cpp:244] This network produces output accuracy
I0428 19:39:38.877956 24347 net.cpp:244] This network produces output loss
I0428 19:39:38.877985 24347 net.cpp:257] Network initialization done.
I0428 19:39:38.878027 24347 solver.cpp:56] Solver scaffolding done.
I0428 19:39:38.878382 24347 caffe.cpp:248] Starting Optimization
I0428 19:39:38.878387 24347 solver.cpp:273] Solving LeNet
I0428 19:39:38.878391 24347 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:38.879318 24347 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:38.881577 24347 blocking_queue.cpp:49] Waiting for data
I0428 19:39:38.953603 24354 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:38.954017 24347 solver.cpp:398]     Test net output #0: accuracy = 0.1031
I0428 19:39:38.954035 24347 solver.cpp:398]     Test net output #1: loss = 2.3272 (* 1 = 2.3272 loss)
I0428 19:39:38.955734 24347 solver.cpp:219] Iteration 0 (-1.06919e-42 iter/s, 0.0772956s/100 iters), loss = 2.34023
I0428 19:39:38.955776 24347 solver.cpp:238]     Train net output #0: loss = 2.34023 (* 1 = 2.34023 loss)
I0428 19:39:38.955788 24347 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:39.025153 24347 solver.cpp:219] Iteration 100 (1441.6 iter/s, 0.0693673s/100 iters), loss = 0.808607
I0428 19:39:39.025193 24347 solver.cpp:238]     Train net output #0: loss = 0.808607 (* 1 = 0.808607 loss)
I0428 19:39:39.025199 24347 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:39.092555 24347 solver.cpp:219] Iteration 200 (1484.7 iter/s, 0.0673536s/100 iters), loss = 0.532091
I0428 19:39:39.092579 24347 solver.cpp:238]     Train net output #0: loss = 0.532091 (* 1 = 0.532091 loss)
I0428 19:39:39.092602 24347 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:39.164963 24347 solver.cpp:219] Iteration 300 (1381.79 iter/s, 0.07237s/100 iters), loss = 0.615044
I0428 19:39:39.164994 24347 solver.cpp:238]     Train net output #0: loss = 0.615044 (* 1 = 0.615044 loss)
I0428 19:39:39.165001 24347 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:39.239183 24347 solver.cpp:219] Iteration 400 (1348.04 iter/s, 0.0741816s/100 iters), loss = 0.500558
I0428 19:39:39.239213 24347 solver.cpp:238]     Train net output #0: loss = 0.500558 (* 1 = 0.500558 loss)
I0428 19:39:39.239220 24347 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:39.312549 24347 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:39.387907 24354 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:39.388526 24347 solver.cpp:398]     Test net output #0: accuracy = 0.8847
I0428 19:39:39.388558 24347 solver.cpp:398]     Test net output #1: loss = 0.357138 (* 1 = 0.357138 loss)
I0428 19:39:39.389641 24347 solver.cpp:219] Iteration 500 (664.839 iter/s, 0.150412s/100 iters), loss = 0.537567
I0428 19:39:39.389677 24347 solver.cpp:238]     Train net output #0: loss = 0.537567 (* 1 = 0.537567 loss)
I0428 19:39:39.389711 24347 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:39.464043 24347 solver.cpp:219] Iteration 600 (1344.79 iter/s, 0.0743609s/100 iters), loss = 0.276582
I0428 19:39:39.464069 24347 solver.cpp:238]     Train net output #0: loss = 0.276582 (* 1 = 0.276582 loss)
I0428 19:39:39.464076 24347 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:39.531144 24347 solver.cpp:219] Iteration 700 (1491.05 iter/s, 0.0670669s/100 iters), loss = 0.363121
I0428 19:39:39.531183 24347 solver.cpp:238]     Train net output #0: loss = 0.363121 (* 1 = 0.363121 loss)
I0428 19:39:39.531188 24347 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:39.597713 24347 solver.cpp:219] Iteration 800 (1502.91 iter/s, 0.0665375s/100 iters), loss = 0.316587
I0428 19:39:39.597753 24347 solver.cpp:238]     Train net output #0: loss = 0.316587 (* 1 = 0.316587 loss)
I0428 19:39:39.597757 24347 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:39.665134 24347 solver.cpp:219] Iteration 900 (1483.91 iter/s, 0.0673894s/100 iters), loss = 0.21984
I0428 19:39:39.665174 24347 solver.cpp:238]     Train net output #0: loss = 0.21984 (* 1 = 0.21984 loss)
I0428 19:39:39.665181 24347 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:39.687273 24353 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:39.730131 24347 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:39.730876 24347 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:39.731416 24347 solver.cpp:311] Iteration 1000, loss = 0.222068
I0428 19:39:39.731429 24347 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:39.793495 24354 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:39.794116 24347 solver.cpp:398]     Test net output #0: accuracy = 0.9318
I0428 19:39:39.794157 24347 solver.cpp:398]     Test net output #1: loss = 0.211206 (* 1 = 0.211206 loss)
I0428 19:39:39.794164 24347 solver.cpp:316] Optimization Done.
I0428 19:39:39.794168 24347 caffe.cpp:259] Optimization Done.
