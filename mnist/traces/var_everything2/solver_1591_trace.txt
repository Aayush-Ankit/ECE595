I0428 20:33:36.027348  4318 caffe.cpp:218] Using GPUs 0
I0428 20:33:36.058848  4318 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:36.550928  4318 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1591.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:36.551051  4318 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1591.prototxt
I0428 20:33:36.551376  4318 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:36.551393  4318 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:36.551491  4318 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:36.551555  4318 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:36.551638  4318 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:36.551657  4318 net.cpp:86] Creating Layer mnist
I0428 20:33:36.551664  4318 net.cpp:382] mnist -> data
I0428 20:33:36.551682  4318 net.cpp:382] mnist -> label
I0428 20:33:36.552676  4318 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:36.554939  4318 net.cpp:124] Setting up mnist
I0428 20:33:36.554970  4318 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:36.554975  4318 net.cpp:131] Top shape: 64 (64)
I0428 20:33:36.554977  4318 net.cpp:139] Memory required for data: 200960
I0428 20:33:36.554983  4318 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:36.555022  4318 net.cpp:86] Creating Layer conv0
I0428 20:33:36.555038  4318 net.cpp:408] conv0 <- data
I0428 20:33:36.555049  4318 net.cpp:382] conv0 -> conv0
I0428 20:33:36.791460  4318 net.cpp:124] Setting up conv0
I0428 20:33:36.791501  4318 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:36.791507  4318 net.cpp:139] Memory required for data: 14946560
I0428 20:33:36.791519  4318 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:36.791532  4318 net.cpp:86] Creating Layer pool0
I0428 20:33:36.791537  4318 net.cpp:408] pool0 <- conv0
I0428 20:33:36.791558  4318 net.cpp:382] pool0 -> pool0
I0428 20:33:36.791604  4318 net.cpp:124] Setting up pool0
I0428 20:33:36.791610  4318 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:36.791613  4318 net.cpp:139] Memory required for data: 18632960
I0428 20:33:36.791616  4318 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:36.791627  4318 net.cpp:86] Creating Layer conv1
I0428 20:33:36.791630  4318 net.cpp:408] conv1 <- pool0
I0428 20:33:36.791635  4318 net.cpp:382] conv1 -> conv1
I0428 20:33:36.793984  4318 net.cpp:124] Setting up conv1
I0428 20:33:36.794014  4318 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:36.794018  4318 net.cpp:139] Memory required for data: 19042560
I0428 20:33:36.794026  4318 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:36.794035  4318 net.cpp:86] Creating Layer pool1
I0428 20:33:36.794039  4318 net.cpp:408] pool1 <- conv1
I0428 20:33:36.794044  4318 net.cpp:382] pool1 -> pool1
I0428 20:33:36.794116  4318 net.cpp:124] Setting up pool1
I0428 20:33:36.794123  4318 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:36.794126  4318 net.cpp:139] Memory required for data: 19144960
I0428 20:33:36.794129  4318 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:36.794138  4318 net.cpp:86] Creating Layer ip1
I0428 20:33:36.794142  4318 net.cpp:408] ip1 <- pool1
I0428 20:33:36.794147  4318 net.cpp:382] ip1 -> ip1
I0428 20:33:36.794386  4318 net.cpp:124] Setting up ip1
I0428 20:33:36.794410  4318 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:36.794414  4318 net.cpp:139] Memory required for data: 19157760
I0428 20:33:36.794436  4318 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:36.794443  4318 net.cpp:86] Creating Layer relu1
I0428 20:33:36.794447  4318 net.cpp:408] relu1 <- ip1
I0428 20:33:36.794451  4318 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:36.794641  4318 net.cpp:124] Setting up relu1
I0428 20:33:36.794651  4318 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:36.794654  4318 net.cpp:139] Memory required for data: 19170560
I0428 20:33:36.794657  4318 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:36.794663  4318 net.cpp:86] Creating Layer ip2
I0428 20:33:36.794667  4318 net.cpp:408] ip2 <- ip1
I0428 20:33:36.794672  4318 net.cpp:382] ip2 -> ip2
I0428 20:33:36.794785  4318 net.cpp:124] Setting up ip2
I0428 20:33:36.794793  4318 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:36.794796  4318 net.cpp:139] Memory required for data: 19173120
I0428 20:33:36.794801  4318 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:36.794823  4318 net.cpp:86] Creating Layer relu2
I0428 20:33:36.794826  4318 net.cpp:408] relu2 <- ip2
I0428 20:33:36.794831  4318 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:36.795656  4318 net.cpp:124] Setting up relu2
I0428 20:33:36.795668  4318 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:36.795688  4318 net.cpp:139] Memory required for data: 19175680
I0428 20:33:36.795691  4318 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:36.795698  4318 net.cpp:86] Creating Layer ip3
I0428 20:33:36.795701  4318 net.cpp:408] ip3 <- ip2
I0428 20:33:36.795707  4318 net.cpp:382] ip3 -> ip3
I0428 20:33:36.795809  4318 net.cpp:124] Setting up ip3
I0428 20:33:36.795816  4318 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:36.795819  4318 net.cpp:139] Memory required for data: 19178240
I0428 20:33:36.795827  4318 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:36.795832  4318 net.cpp:86] Creating Layer relu3
I0428 20:33:36.795836  4318 net.cpp:408] relu3 <- ip3
I0428 20:33:36.795840  4318 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:36.796020  4318 net.cpp:124] Setting up relu3
I0428 20:33:36.796027  4318 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:36.796031  4318 net.cpp:139] Memory required for data: 19180800
I0428 20:33:36.796035  4318 layer_factory.hpp:77] Creating layer loss
I0428 20:33:36.796041  4318 net.cpp:86] Creating Layer loss
I0428 20:33:36.796043  4318 net.cpp:408] loss <- ip3
I0428 20:33:36.796046  4318 net.cpp:408] loss <- label
I0428 20:33:36.796051  4318 net.cpp:382] loss -> loss
I0428 20:33:36.796064  4318 layer_factory.hpp:77] Creating layer loss
I0428 20:33:36.796329  4318 net.cpp:124] Setting up loss
I0428 20:33:36.796337  4318 net.cpp:131] Top shape: (1)
I0428 20:33:36.796341  4318 net.cpp:134]     with loss weight 1
I0428 20:33:36.796371  4318 net.cpp:139] Memory required for data: 19180804
I0428 20:33:36.796375  4318 net.cpp:200] loss needs backward computation.
I0428 20:33:36.796380  4318 net.cpp:200] relu3 needs backward computation.
I0428 20:33:36.796382  4318 net.cpp:200] ip3 needs backward computation.
I0428 20:33:36.796386  4318 net.cpp:200] relu2 needs backward computation.
I0428 20:33:36.796387  4318 net.cpp:200] ip2 needs backward computation.
I0428 20:33:36.796391  4318 net.cpp:200] relu1 needs backward computation.
I0428 20:33:36.796393  4318 net.cpp:200] ip1 needs backward computation.
I0428 20:33:36.796396  4318 net.cpp:200] pool1 needs backward computation.
I0428 20:33:36.796399  4318 net.cpp:200] conv1 needs backward computation.
I0428 20:33:36.796402  4318 net.cpp:200] pool0 needs backward computation.
I0428 20:33:36.796406  4318 net.cpp:200] conv0 needs backward computation.
I0428 20:33:36.796408  4318 net.cpp:202] mnist does not need backward computation.
I0428 20:33:36.796411  4318 net.cpp:244] This network produces output loss
I0428 20:33:36.796422  4318 net.cpp:257] Network initialization done.
I0428 20:33:36.796839  4318 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1591.prototxt
I0428 20:33:36.796897  4318 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:36.796993  4318 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:36.797077  4318 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:36.797122  4318 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:36.797134  4318 net.cpp:86] Creating Layer mnist
I0428 20:33:36.797139  4318 net.cpp:382] mnist -> data
I0428 20:33:36.797148  4318 net.cpp:382] mnist -> label
I0428 20:33:36.797271  4318 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:36.799334  4318 net.cpp:124] Setting up mnist
I0428 20:33:36.799361  4318 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:36.799368  4318 net.cpp:131] Top shape: 100 (100)
I0428 20:33:36.799371  4318 net.cpp:139] Memory required for data: 314000
I0428 20:33:36.799374  4318 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:36.799404  4318 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:36.799409  4318 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:36.799415  4318 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:36.799422  4318 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:36.799546  4318 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:36.799553  4318 net.cpp:131] Top shape: 100 (100)
I0428 20:33:36.799557  4318 net.cpp:131] Top shape: 100 (100)
I0428 20:33:36.799576  4318 net.cpp:139] Memory required for data: 314800
I0428 20:33:36.799579  4318 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:36.799589  4318 net.cpp:86] Creating Layer conv0
I0428 20:33:36.799608  4318 net.cpp:408] conv0 <- data
I0428 20:33:36.799614  4318 net.cpp:382] conv0 -> conv0
I0428 20:33:36.801334  4318 net.cpp:124] Setting up conv0
I0428 20:33:36.801349  4318 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:36.801353  4318 net.cpp:139] Memory required for data: 23354800
I0428 20:33:36.801362  4318 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:36.801368  4318 net.cpp:86] Creating Layer pool0
I0428 20:33:36.801372  4318 net.cpp:408] pool0 <- conv0
I0428 20:33:36.801376  4318 net.cpp:382] pool0 -> pool0
I0428 20:33:36.801411  4318 net.cpp:124] Setting up pool0
I0428 20:33:36.801416  4318 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:36.801419  4318 net.cpp:139] Memory required for data: 29114800
I0428 20:33:36.801421  4318 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:36.801430  4318 net.cpp:86] Creating Layer conv1
I0428 20:33:36.801434  4318 net.cpp:408] conv1 <- pool0
I0428 20:33:36.801439  4318 net.cpp:382] conv1 -> conv1
I0428 20:33:36.803519  4318 net.cpp:124] Setting up conv1
I0428 20:33:36.803532  4318 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:36.803536  4318 net.cpp:139] Memory required for data: 29754800
I0428 20:33:36.803562  4318 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:36.803570  4318 net.cpp:86] Creating Layer pool1
I0428 20:33:36.803573  4318 net.cpp:408] pool1 <- conv1
I0428 20:33:36.803578  4318 net.cpp:382] pool1 -> pool1
I0428 20:33:36.803618  4318 net.cpp:124] Setting up pool1
I0428 20:33:36.803627  4318 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:36.803630  4318 net.cpp:139] Memory required for data: 29914800
I0428 20:33:36.803633  4318 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:36.803639  4318 net.cpp:86] Creating Layer ip1
I0428 20:33:36.803643  4318 net.cpp:408] ip1 <- pool1
I0428 20:33:36.803648  4318 net.cpp:382] ip1 -> ip1
I0428 20:33:36.803876  4318 net.cpp:124] Setting up ip1
I0428 20:33:36.803894  4318 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:36.803899  4318 net.cpp:139] Memory required for data: 29934800
I0428 20:33:36.803905  4318 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:36.803913  4318 net.cpp:86] Creating Layer relu1
I0428 20:33:36.803916  4318 net.cpp:408] relu1 <- ip1
I0428 20:33:36.803921  4318 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:36.804096  4318 net.cpp:124] Setting up relu1
I0428 20:33:36.804105  4318 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:36.804111  4318 net.cpp:139] Memory required for data: 29954800
I0428 20:33:36.804113  4318 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:36.804122  4318 net.cpp:86] Creating Layer ip2
I0428 20:33:36.804126  4318 net.cpp:408] ip2 <- ip1
I0428 20:33:36.804131  4318 net.cpp:382] ip2 -> ip2
I0428 20:33:36.804239  4318 net.cpp:124] Setting up ip2
I0428 20:33:36.804246  4318 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:36.804270  4318 net.cpp:139] Memory required for data: 29958800
I0428 20:33:36.804276  4318 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:36.804282  4318 net.cpp:86] Creating Layer relu2
I0428 20:33:36.804286  4318 net.cpp:408] relu2 <- ip2
I0428 20:33:36.804289  4318 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:36.804558  4318 net.cpp:124] Setting up relu2
I0428 20:33:36.804566  4318 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:36.804569  4318 net.cpp:139] Memory required for data: 29962800
I0428 20:33:36.804572  4318 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:36.804579  4318 net.cpp:86] Creating Layer ip3
I0428 20:33:36.804582  4318 net.cpp:408] ip3 <- ip2
I0428 20:33:36.804603  4318 net.cpp:382] ip3 -> ip3
I0428 20:33:36.804723  4318 net.cpp:124] Setting up ip3
I0428 20:33:36.804733  4318 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:36.804736  4318 net.cpp:139] Memory required for data: 29966800
I0428 20:33:36.804745  4318 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:36.804750  4318 net.cpp:86] Creating Layer relu3
I0428 20:33:36.804754  4318 net.cpp:408] relu3 <- ip3
I0428 20:33:36.804757  4318 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:36.805655  4318 net.cpp:124] Setting up relu3
I0428 20:33:36.805670  4318 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:36.805675  4318 net.cpp:139] Memory required for data: 29970800
I0428 20:33:36.805678  4318 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:36.805694  4318 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:36.805697  4318 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:36.805704  4318 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:36.805711  4318 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:36.805748  4318 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:36.805755  4318 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:36.805760  4318 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:36.805763  4318 net.cpp:139] Memory required for data: 29978800
I0428 20:33:36.805765  4318 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:36.805773  4318 net.cpp:86] Creating Layer accuracy
I0428 20:33:36.805775  4318 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:36.805780  4318 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:36.805784  4318 net.cpp:382] accuracy -> accuracy
I0428 20:33:36.805799  4318 net.cpp:124] Setting up accuracy
I0428 20:33:36.805802  4318 net.cpp:131] Top shape: (1)
I0428 20:33:36.805809  4318 net.cpp:139] Memory required for data: 29978804
I0428 20:33:36.805812  4318 layer_factory.hpp:77] Creating layer loss
I0428 20:33:36.805819  4318 net.cpp:86] Creating Layer loss
I0428 20:33:36.805824  4318 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:36.805826  4318 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:36.805830  4318 net.cpp:382] loss -> loss
I0428 20:33:36.805836  4318 layer_factory.hpp:77] Creating layer loss
I0428 20:33:36.806143  4318 net.cpp:124] Setting up loss
I0428 20:33:36.806152  4318 net.cpp:131] Top shape: (1)
I0428 20:33:36.806156  4318 net.cpp:134]     with loss weight 1
I0428 20:33:36.806174  4318 net.cpp:139] Memory required for data: 29978808
I0428 20:33:36.806177  4318 net.cpp:200] loss needs backward computation.
I0428 20:33:36.806181  4318 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:36.806185  4318 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:36.806190  4318 net.cpp:200] relu3 needs backward computation.
I0428 20:33:36.806192  4318 net.cpp:200] ip3 needs backward computation.
I0428 20:33:36.806195  4318 net.cpp:200] relu2 needs backward computation.
I0428 20:33:36.806200  4318 net.cpp:200] ip2 needs backward computation.
I0428 20:33:36.806202  4318 net.cpp:200] relu1 needs backward computation.
I0428 20:33:36.806205  4318 net.cpp:200] ip1 needs backward computation.
I0428 20:33:36.806210  4318 net.cpp:200] pool1 needs backward computation.
I0428 20:33:36.806212  4318 net.cpp:200] conv1 needs backward computation.
I0428 20:33:36.806216  4318 net.cpp:200] pool0 needs backward computation.
I0428 20:33:36.806219  4318 net.cpp:200] conv0 needs backward computation.
I0428 20:33:36.806223  4318 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:36.806227  4318 net.cpp:202] mnist does not need backward computation.
I0428 20:33:36.806231  4318 net.cpp:244] This network produces output accuracy
I0428 20:33:36.806234  4318 net.cpp:244] This network produces output loss
I0428 20:33:36.806248  4318 net.cpp:257] Network initialization done.
I0428 20:33:36.806293  4318 solver.cpp:56] Solver scaffolding done.
I0428 20:33:36.806692  4318 caffe.cpp:248] Starting Optimization
I0428 20:33:36.806699  4318 solver.cpp:273] Solving LeNet
I0428 20:33:36.806704  4318 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:36.807569  4318 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:36.905833  4325 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:36.908366  4318 solver.cpp:398]     Test net output #0: accuracy = 0.1218
I0428 20:33:36.908406  4318 solver.cpp:398]     Test net output #1: loss = 2.3017 (* 1 = 2.3017 loss)
I0428 20:33:36.914089  4318 solver.cpp:219] Iteration 0 (0 iter/s, 0.107354s/100 iters), loss = 2.2982
I0428 20:33:36.914129  4318 solver.cpp:238]     Train net output #0: loss = 2.2982 (* 1 = 2.2982 loss)
I0428 20:33:36.914140  4318 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:37.131062  4318 solver.cpp:219] Iteration 100 (460.98 iter/s, 0.216929s/100 iters), loss = 1.50847
I0428 20:33:37.131093  4318 solver.cpp:238]     Train net output #0: loss = 1.50847 (* 1 = 1.50847 loss)
I0428 20:33:37.131101  4318 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:37.344396  4318 solver.cpp:219] Iteration 200 (468.859 iter/s, 0.213284s/100 iters), loss = 1.5426
I0428 20:33:37.344429  4318 solver.cpp:238]     Train net output #0: loss = 1.5426 (* 1 = 1.5426 loss)
I0428 20:33:37.344436  4318 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:37.558629  4318 solver.cpp:219] Iteration 300 (466.893 iter/s, 0.214182s/100 iters), loss = 1.97018
I0428 20:33:37.558673  4318 solver.cpp:238]     Train net output #0: loss = 1.97018 (* 1 = 1.97018 loss)
I0428 20:33:37.558686  4318 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:37.777312  4318 solver.cpp:219] Iteration 400 (457.406 iter/s, 0.218624s/100 iters), loss = 1.88364
I0428 20:33:37.777344  4318 solver.cpp:238]     Train net output #0: loss = 1.88364 (* 1 = 1.88364 loss)
I0428 20:33:37.777353  4318 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:37.987164  4318 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:38.087987  4325 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:38.090735  4318 solver.cpp:398]     Test net output #0: accuracy = 0.3947
I0428 20:33:38.090764  4318 solver.cpp:398]     Test net output #1: loss = 1.64462 (* 1 = 1.64462 loss)
I0428 20:33:38.092823  4318 solver.cpp:219] Iteration 500 (317.003 iter/s, 0.315454s/100 iters), loss = 1.5514
I0428 20:33:38.092852  4318 solver.cpp:238]     Train net output #0: loss = 1.5514 (* 1 = 1.5514 loss)
I0428 20:33:38.092878  4318 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:38.318156  4318 solver.cpp:219] Iteration 600 (443.886 iter/s, 0.225283s/100 iters), loss = 1.4806
I0428 20:33:38.318202  4318 solver.cpp:238]     Train net output #0: loss = 1.4806 (* 1 = 1.4806 loss)
I0428 20:33:38.318213  4318 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:38.540632  4318 solver.cpp:219] Iteration 700 (449.612 iter/s, 0.222414s/100 iters), loss = 1.51589
I0428 20:33:38.540668  4318 solver.cpp:238]     Train net output #0: loss = 1.51589 (* 1 = 1.51589 loss)
I0428 20:33:38.540676  4318 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:38.760043  4318 solver.cpp:219] Iteration 800 (455.873 iter/s, 0.219359s/100 iters), loss = 1.7354
I0428 20:33:38.760079  4318 solver.cpp:238]     Train net output #0: loss = 1.7354 (* 1 = 1.7354 loss)
I0428 20:33:38.760088  4318 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:38.978098  4318 solver.cpp:219] Iteration 900 (458.708 iter/s, 0.218003s/100 iters), loss = 1.85348
I0428 20:33:38.978134  4318 solver.cpp:238]     Train net output #0: loss = 1.85348 (* 1 = 1.85348 loss)
I0428 20:33:38.978143  4318 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:39.050770  4324 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:39.194226  4318 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:39.197055  4318 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:39.198662  4318 solver.cpp:311] Iteration 1000, loss = 1.62666
I0428 20:33:39.198681  4318 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:39.297724  4325 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:39.300276  4318 solver.cpp:398]     Test net output #0: accuracy = 0.3947
I0428 20:33:39.300300  4318 solver.cpp:398]     Test net output #1: loss = 1.64004 (* 1 = 1.64004 loss)
I0428 20:33:39.300307  4318 solver.cpp:316] Optimization Done.
I0428 20:33:39.300309  4318 caffe.cpp:259] Optimization Done.
