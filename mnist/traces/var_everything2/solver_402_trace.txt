I0428 19:42:44.243916 25139 caffe.cpp:218] Using GPUs 0
I0428 19:42:44.275905 25139 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:44.789677 25139 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test402.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:44.789816 25139 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test402.prototxt
I0428 19:42:44.790235 25139 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:44.790254 25139 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:44.790359 25139 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:44.790439 25139 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:44.790539 25139 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:44.790563 25139 net.cpp:86] Creating Layer mnist
I0428 19:42:44.790573 25139 net.cpp:382] mnist -> data
I0428 19:42:44.790596 25139 net.cpp:382] mnist -> label
I0428 19:42:44.791683 25139 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:44.794138 25139 net.cpp:124] Setting up mnist
I0428 19:42:44.794157 25139 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:44.794162 25139 net.cpp:131] Top shape: 64 (64)
I0428 19:42:44.794167 25139 net.cpp:139] Memory required for data: 200960
I0428 19:42:44.794173 25139 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:44.794205 25139 net.cpp:86] Creating Layer conv0
I0428 19:42:44.794226 25139 net.cpp:408] conv0 <- data
I0428 19:42:44.794240 25139 net.cpp:382] conv0 -> conv0
I0428 19:42:45.087307 25139 net.cpp:124] Setting up conv0
I0428 19:42:45.087338 25139 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:45.087342 25139 net.cpp:139] Memory required for data: 495872
I0428 19:42:45.087360 25139 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:45.087375 25139 net.cpp:86] Creating Layer pool0
I0428 19:42:45.087380 25139 net.cpp:408] pool0 <- conv0
I0428 19:42:45.087388 25139 net.cpp:382] pool0 -> pool0
I0428 19:42:45.087442 25139 net.cpp:124] Setting up pool0
I0428 19:42:45.087451 25139 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:45.087455 25139 net.cpp:139] Memory required for data: 569600
I0428 19:42:45.087458 25139 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:45.087472 25139 net.cpp:86] Creating Layer conv1
I0428 19:42:45.087478 25139 net.cpp:408] conv1 <- pool0
I0428 19:42:45.087486 25139 net.cpp:382] conv1 -> conv1
I0428 19:42:45.090606 25139 net.cpp:124] Setting up conv1
I0428 19:42:45.090626 25139 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:45.090632 25139 net.cpp:139] Memory required for data: 979200
I0428 19:42:45.090643 25139 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:45.090651 25139 net.cpp:86] Creating Layer pool1
I0428 19:42:45.090656 25139 net.cpp:408] pool1 <- conv1
I0428 19:42:45.090662 25139 net.cpp:382] pool1 -> pool1
I0428 19:42:45.090705 25139 net.cpp:124] Setting up pool1
I0428 19:42:45.090714 25139 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:45.090718 25139 net.cpp:139] Memory required for data: 1081600
I0428 19:42:45.090721 25139 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:45.090731 25139 net.cpp:86] Creating Layer ip1
I0428 19:42:45.090735 25139 net.cpp:408] ip1 <- pool1
I0428 19:42:45.090741 25139 net.cpp:382] ip1 -> ip1
I0428 19:42:45.090883 25139 net.cpp:124] Setting up ip1
I0428 19:42:45.090893 25139 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:45.090895 25139 net.cpp:139] Memory required for data: 1084160
I0428 19:42:45.090904 25139 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:45.090914 25139 net.cpp:86] Creating Layer relu1
I0428 19:42:45.090917 25139 net.cpp:408] relu1 <- ip1
I0428 19:42:45.090922 25139 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:45.091122 25139 net.cpp:124] Setting up relu1
I0428 19:42:45.091132 25139 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:45.091136 25139 net.cpp:139] Memory required for data: 1086720
I0428 19:42:45.091140 25139 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:45.091147 25139 net.cpp:86] Creating Layer ip2
I0428 19:42:45.091154 25139 net.cpp:408] ip2 <- ip1
I0428 19:42:45.091161 25139 net.cpp:382] ip2 -> ip2
I0428 19:42:45.091270 25139 net.cpp:124] Setting up ip2
I0428 19:42:45.091277 25139 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:45.091281 25139 net.cpp:139] Memory required for data: 1089280
I0428 19:42:45.091289 25139 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:45.091295 25139 net.cpp:86] Creating Layer relu2
I0428 19:42:45.091301 25139 net.cpp:408] relu2 <- ip2
I0428 19:42:45.091305 25139 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:45.092144 25139 net.cpp:124] Setting up relu2
I0428 19:42:45.092160 25139 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:45.092164 25139 net.cpp:139] Memory required for data: 1091840
I0428 19:42:45.092169 25139 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:45.092176 25139 net.cpp:86] Creating Layer ip3
I0428 19:42:45.092180 25139 net.cpp:408] ip3 <- ip2
I0428 19:42:45.092186 25139 net.cpp:382] ip3 -> ip3
I0428 19:42:45.092303 25139 net.cpp:124] Setting up ip3
I0428 19:42:45.092313 25139 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:45.092316 25139 net.cpp:139] Memory required for data: 1094400
I0428 19:42:45.092325 25139 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:45.092334 25139 net.cpp:86] Creating Layer relu3
I0428 19:42:45.092337 25139 net.cpp:408] relu3 <- ip3
I0428 19:42:45.092342 25139 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:45.092537 25139 net.cpp:124] Setting up relu3
I0428 19:42:45.092547 25139 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:45.092551 25139 net.cpp:139] Memory required for data: 1096960
I0428 19:42:45.092555 25139 layer_factory.hpp:77] Creating layer loss
I0428 19:42:45.092562 25139 net.cpp:86] Creating Layer loss
I0428 19:42:45.092566 25139 net.cpp:408] loss <- ip3
I0428 19:42:45.092571 25139 net.cpp:408] loss <- label
I0428 19:42:45.092577 25139 net.cpp:382] loss -> loss
I0428 19:42:45.092595 25139 layer_factory.hpp:77] Creating layer loss
I0428 19:42:45.092870 25139 net.cpp:124] Setting up loss
I0428 19:42:45.092881 25139 net.cpp:131] Top shape: (1)
I0428 19:42:45.092885 25139 net.cpp:134]     with loss weight 1
I0428 19:42:45.092902 25139 net.cpp:139] Memory required for data: 1096964
I0428 19:42:45.092906 25139 net.cpp:200] loss needs backward computation.
I0428 19:42:45.092911 25139 net.cpp:200] relu3 needs backward computation.
I0428 19:42:45.092914 25139 net.cpp:200] ip3 needs backward computation.
I0428 19:42:45.092917 25139 net.cpp:200] relu2 needs backward computation.
I0428 19:42:45.092921 25139 net.cpp:200] ip2 needs backward computation.
I0428 19:42:45.092924 25139 net.cpp:200] relu1 needs backward computation.
I0428 19:42:45.092927 25139 net.cpp:200] ip1 needs backward computation.
I0428 19:42:45.092932 25139 net.cpp:200] pool1 needs backward computation.
I0428 19:42:45.092936 25139 net.cpp:200] conv1 needs backward computation.
I0428 19:42:45.092939 25139 net.cpp:200] pool0 needs backward computation.
I0428 19:42:45.092943 25139 net.cpp:200] conv0 needs backward computation.
I0428 19:42:45.092948 25139 net.cpp:202] mnist does not need backward computation.
I0428 19:42:45.092952 25139 net.cpp:244] This network produces output loss
I0428 19:42:45.092962 25139 net.cpp:257] Network initialization done.
I0428 19:42:45.093345 25139 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test402.prototxt
I0428 19:42:45.093376 25139 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:45.093487 25139 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:45.093581 25139 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:45.093634 25139 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:45.093652 25139 net.cpp:86] Creating Layer mnist
I0428 19:42:45.093658 25139 net.cpp:382] mnist -> data
I0428 19:42:45.093668 25139 net.cpp:382] mnist -> label
I0428 19:42:45.093767 25139 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:45.095955 25139 net.cpp:124] Setting up mnist
I0428 19:42:45.095971 25139 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:45.095979 25139 net.cpp:131] Top shape: 100 (100)
I0428 19:42:45.095984 25139 net.cpp:139] Memory required for data: 314000
I0428 19:42:45.095988 25139 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:45.095999 25139 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:45.096004 25139 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:45.096009 25139 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:45.096016 25139 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:45.096112 25139 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:45.096122 25139 net.cpp:131] Top shape: 100 (100)
I0428 19:42:45.096127 25139 net.cpp:131] Top shape: 100 (100)
I0428 19:42:45.096129 25139 net.cpp:139] Memory required for data: 314800
I0428 19:42:45.096133 25139 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:45.096143 25139 net.cpp:86] Creating Layer conv0
I0428 19:42:45.096149 25139 net.cpp:408] conv0 <- data
I0428 19:42:45.096155 25139 net.cpp:382] conv0 -> conv0
I0428 19:42:45.098031 25139 net.cpp:124] Setting up conv0
I0428 19:42:45.098048 25139 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:45.098053 25139 net.cpp:139] Memory required for data: 775600
I0428 19:42:45.098063 25139 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:45.098071 25139 net.cpp:86] Creating Layer pool0
I0428 19:42:45.098075 25139 net.cpp:408] pool0 <- conv0
I0428 19:42:45.098081 25139 net.cpp:382] pool0 -> pool0
I0428 19:42:45.098124 25139 net.cpp:124] Setting up pool0
I0428 19:42:45.098131 25139 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:45.098134 25139 net.cpp:139] Memory required for data: 890800
I0428 19:42:45.098140 25139 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:45.098150 25139 net.cpp:86] Creating Layer conv1
I0428 19:42:45.098155 25139 net.cpp:408] conv1 <- pool0
I0428 19:42:45.098161 25139 net.cpp:382] conv1 -> conv1
I0428 19:42:45.099853 25139 net.cpp:124] Setting up conv1
I0428 19:42:45.099869 25139 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:45.099875 25139 net.cpp:139] Memory required for data: 1530800
I0428 19:42:45.099886 25139 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:45.099896 25139 net.cpp:86] Creating Layer pool1
I0428 19:42:45.099902 25139 net.cpp:408] pool1 <- conv1
I0428 19:42:45.099908 25139 net.cpp:382] pool1 -> pool1
I0428 19:42:45.099951 25139 net.cpp:124] Setting up pool1
I0428 19:42:45.099959 25139 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:45.099963 25139 net.cpp:139] Memory required for data: 1690800
I0428 19:42:45.099967 25139 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:45.099973 25139 net.cpp:86] Creating Layer ip1
I0428 19:42:45.099978 25139 net.cpp:408] ip1 <- pool1
I0428 19:42:45.099983 25139 net.cpp:382] ip1 -> ip1
I0428 19:42:45.100137 25139 net.cpp:124] Setting up ip1
I0428 19:42:45.100147 25139 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:45.100162 25139 net.cpp:139] Memory required for data: 1694800
I0428 19:42:45.100172 25139 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:45.100179 25139 net.cpp:86] Creating Layer relu1
I0428 19:42:45.100184 25139 net.cpp:408] relu1 <- ip1
I0428 19:42:45.100190 25139 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:45.100428 25139 net.cpp:124] Setting up relu1
I0428 19:42:45.100440 25139 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:45.100443 25139 net.cpp:139] Memory required for data: 1698800
I0428 19:42:45.100447 25139 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:45.100455 25139 net.cpp:86] Creating Layer ip2
I0428 19:42:45.100461 25139 net.cpp:408] ip2 <- ip1
I0428 19:42:45.100467 25139 net.cpp:382] ip2 -> ip2
I0428 19:42:45.100594 25139 net.cpp:124] Setting up ip2
I0428 19:42:45.100601 25139 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:45.100606 25139 net.cpp:139] Memory required for data: 1702800
I0428 19:42:45.100612 25139 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:45.100618 25139 net.cpp:86] Creating Layer relu2
I0428 19:42:45.100622 25139 net.cpp:408] relu2 <- ip2
I0428 19:42:45.100627 25139 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:45.100817 25139 net.cpp:124] Setting up relu2
I0428 19:42:45.100827 25139 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:45.100831 25139 net.cpp:139] Memory required for data: 1706800
I0428 19:42:45.100837 25139 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:45.100844 25139 net.cpp:86] Creating Layer ip3
I0428 19:42:45.100849 25139 net.cpp:408] ip3 <- ip2
I0428 19:42:45.100855 25139 net.cpp:382] ip3 -> ip3
I0428 19:42:45.100965 25139 net.cpp:124] Setting up ip3
I0428 19:42:45.100972 25139 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:45.100976 25139 net.cpp:139] Memory required for data: 1710800
I0428 19:42:45.100986 25139 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:45.100992 25139 net.cpp:86] Creating Layer relu3
I0428 19:42:45.100996 25139 net.cpp:408] relu3 <- ip3
I0428 19:42:45.101003 25139 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:45.101963 25139 net.cpp:124] Setting up relu3
I0428 19:42:45.101979 25139 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:45.101982 25139 net.cpp:139] Memory required for data: 1714800
I0428 19:42:45.101986 25139 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:45.101994 25139 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:45.101997 25139 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:45.102004 25139 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:45.102011 25139 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:45.102057 25139 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:45.102064 25139 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:45.102069 25139 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:45.102073 25139 net.cpp:139] Memory required for data: 1722800
I0428 19:42:45.102077 25139 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:45.102090 25139 net.cpp:86] Creating Layer accuracy
I0428 19:42:45.102094 25139 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:45.102099 25139 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:45.102104 25139 net.cpp:382] accuracy -> accuracy
I0428 19:42:45.102113 25139 net.cpp:124] Setting up accuracy
I0428 19:42:45.102118 25139 net.cpp:131] Top shape: (1)
I0428 19:42:45.102121 25139 net.cpp:139] Memory required for data: 1722804
I0428 19:42:45.102124 25139 layer_factory.hpp:77] Creating layer loss
I0428 19:42:45.102130 25139 net.cpp:86] Creating Layer loss
I0428 19:42:45.102134 25139 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:45.102138 25139 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:45.102144 25139 net.cpp:382] loss -> loss
I0428 19:42:45.102151 25139 layer_factory.hpp:77] Creating layer loss
I0428 19:42:45.102419 25139 net.cpp:124] Setting up loss
I0428 19:42:45.102433 25139 net.cpp:131] Top shape: (1)
I0428 19:42:45.102438 25139 net.cpp:134]     with loss weight 1
I0428 19:42:45.102447 25139 net.cpp:139] Memory required for data: 1722808
I0428 19:42:45.102463 25139 net.cpp:200] loss needs backward computation.
I0428 19:42:45.102468 25139 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:45.102473 25139 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:45.102476 25139 net.cpp:200] relu3 needs backward computation.
I0428 19:42:45.102481 25139 net.cpp:200] ip3 needs backward computation.
I0428 19:42:45.102484 25139 net.cpp:200] relu2 needs backward computation.
I0428 19:42:45.102489 25139 net.cpp:200] ip2 needs backward computation.
I0428 19:42:45.102494 25139 net.cpp:200] relu1 needs backward computation.
I0428 19:42:45.102496 25139 net.cpp:200] ip1 needs backward computation.
I0428 19:42:45.102501 25139 net.cpp:200] pool1 needs backward computation.
I0428 19:42:45.102505 25139 net.cpp:200] conv1 needs backward computation.
I0428 19:42:45.102509 25139 net.cpp:200] pool0 needs backward computation.
I0428 19:42:45.102514 25139 net.cpp:200] conv0 needs backward computation.
I0428 19:42:45.102519 25139 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:45.102524 25139 net.cpp:202] mnist does not need backward computation.
I0428 19:42:45.102527 25139 net.cpp:244] This network produces output accuracy
I0428 19:42:45.102532 25139 net.cpp:244] This network produces output loss
I0428 19:42:45.102545 25139 net.cpp:257] Network initialization done.
I0428 19:42:45.102596 25139 solver.cpp:56] Solver scaffolding done.
I0428 19:42:45.103029 25139 caffe.cpp:248] Starting Optimization
I0428 19:42:45.103036 25139 solver.cpp:273] Solving LeNet
I0428 19:42:45.103039 25139 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:45.103312 25139 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:45.107659 25139 blocking_queue.cpp:49] Waiting for data
I0428 19:42:45.173015 25187 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:45.173504 25139 solver.cpp:398]     Test net output #0: accuracy = 0.0971
I0428 19:42:45.173529 25139 solver.cpp:398]     Test net output #1: loss = 2.30375 (* 1 = 2.30375 loss)
I0428 19:42:45.174880 25139 solver.cpp:219] Iteration 0 (0 iter/s, 0.0718121s/100 iters), loss = 2.31288
I0428 19:42:45.174907 25139 solver.cpp:238]     Train net output #0: loss = 2.31288 (* 1 = 2.31288 loss)
I0428 19:42:45.174921 25139 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:45.266602 25139 solver.cpp:219] Iteration 100 (1090.7 iter/s, 0.0916838s/100 iters), loss = 0.926531
I0428 19:42:45.266630 25139 solver.cpp:238]     Train net output #0: loss = 0.926531 (* 1 = 0.926531 loss)
I0428 19:42:45.266638 25139 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:45.355648 25139 solver.cpp:219] Iteration 200 (1123.51 iter/s, 0.0890069s/100 iters), loss = 0.858981
I0428 19:42:45.355675 25139 solver.cpp:238]     Train net output #0: loss = 0.858981 (* 1 = 0.858981 loss)
I0428 19:42:45.355682 25139 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:45.438004 25139 solver.cpp:219] Iteration 300 (1214.8 iter/s, 0.0823183s/100 iters), loss = 0.743753
I0428 19:42:45.438041 25139 solver.cpp:238]     Train net output #0: loss = 0.743753 (* 1 = 0.743753 loss)
I0428 19:42:45.438047 25139 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:45.522974 25139 solver.cpp:219] Iteration 400 (1177.33 iter/s, 0.0849379s/100 iters), loss = 0.700305
I0428 19:42:45.523012 25139 solver.cpp:238]     Train net output #0: loss = 0.700305 (* 1 = 0.700305 loss)
I0428 19:42:45.523018 25139 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:45.604791 25139 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:45.679631 25187 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:45.680102 25139 solver.cpp:398]     Test net output #0: accuracy = 0.8314
I0428 19:42:45.680136 25139 solver.cpp:398]     Test net output #1: loss = 0.490985 (* 1 = 0.490985 loss)
I0428 19:42:45.681068 25139 solver.cpp:219] Iteration 500 (632.677 iter/s, 0.158058s/100 iters), loss = 0.513241
I0428 19:42:45.681128 25139 solver.cpp:238]     Train net output #0: loss = 0.513241 (* 1 = 0.513241 loss)
I0428 19:42:45.681170 25139 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:45.763435 25139 solver.cpp:219] Iteration 600 (1214.86 iter/s, 0.0823142s/100 iters), loss = 0.221958
I0428 19:42:45.763474 25139 solver.cpp:238]     Train net output #0: loss = 0.221958 (* 1 = 0.221958 loss)
I0428 19:42:45.763480 25139 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:45.846688 25139 solver.cpp:219] Iteration 700 (1201.66 iter/s, 0.0832184s/100 iters), loss = 0.244757
I0428 19:42:45.846712 25139 solver.cpp:238]     Train net output #0: loss = 0.244757 (* 1 = 0.244757 loss)
I0428 19:42:45.846719 25139 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:45.932271 25139 solver.cpp:219] Iteration 800 (1168.92 iter/s, 0.0855491s/100 iters), loss = 0.383366
I0428 19:42:45.932312 25139 solver.cpp:238]     Train net output #0: loss = 0.383366 (* 1 = 0.383366 loss)
I0428 19:42:45.932319 25139 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:46.021455 25139 solver.cpp:219] Iteration 900 (1121.72 iter/s, 0.0891484s/100 iters), loss = 0.283503
I0428 19:42:46.021494 25139 solver.cpp:238]     Train net output #0: loss = 0.283503 (* 1 = 0.283503 loss)
I0428 19:42:46.021502 25139 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:46.049585 25183 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:46.103731 25139 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:46.104596 25139 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:46.105111 25139 solver.cpp:311] Iteration 1000, loss = 0.155283
I0428 19:42:46.105128 25139 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:46.179443 25187 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:46.179949 25139 solver.cpp:398]     Test net output #0: accuracy = 0.9483
I0428 19:42:46.179981 25139 solver.cpp:398]     Test net output #1: loss = 0.178417 (* 1 = 0.178417 loss)
I0428 19:42:46.179986 25139 solver.cpp:316] Optimization Done.
I0428 19:42:46.179991 25139 caffe.cpp:259] Optimization Done.
