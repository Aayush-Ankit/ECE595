I0428 20:02:46.635757 30054 caffe.cpp:218] Using GPUs 0
I0428 20:02:46.665271 30054 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:47.103838 30054 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test937.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:47.103966 30054 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test937.prototxt
I0428 20:02:47.104228 30054 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:47.104257 30054 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:47.104321 30054 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:02:47.104372 30054 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:47.104454 30054 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:47.104473 30054 net.cpp:86] Creating Layer mnist
I0428 20:02:47.104478 30054 net.cpp:382] mnist -> data
I0428 20:02:47.104497 30054 net.cpp:382] mnist -> label
I0428 20:02:47.105545 30054 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:47.107712 30054 net.cpp:124] Setting up mnist
I0428 20:02:47.107743 30054 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:47.107748 30054 net.cpp:131] Top shape: 64 (64)
I0428 20:02:47.107753 30054 net.cpp:139] Memory required for data: 200960
I0428 20:02:47.107758 30054 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:47.107770 30054 net.cpp:86] Creating Layer conv0
I0428 20:02:47.107774 30054 net.cpp:408] conv0 <- data
I0428 20:02:47.107784 30054 net.cpp:382] conv0 -> conv0
I0428 20:02:47.334753 30054 net.cpp:124] Setting up conv0
I0428 20:02:47.334779 30054 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:47.334784 30054 net.cpp:139] Memory required for data: 1675520
I0428 20:02:47.334797 30054 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:47.334808 30054 net.cpp:86] Creating Layer pool0
I0428 20:02:47.334812 30054 net.cpp:408] pool0 <- conv0
I0428 20:02:47.334817 30054 net.cpp:382] pool0 -> pool0
I0428 20:02:47.334875 30054 net.cpp:124] Setting up pool0
I0428 20:02:47.334882 30054 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:47.334898 30054 net.cpp:139] Memory required for data: 2044160
I0428 20:02:47.334903 30054 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:47.334913 30054 net.cpp:86] Creating Layer conv1
I0428 20:02:47.334916 30054 net.cpp:408] conv1 <- pool0
I0428 20:02:47.334920 30054 net.cpp:382] conv1 -> conv1
I0428 20:02:47.336920 30054 net.cpp:124] Setting up conv1
I0428 20:02:47.336951 30054 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:02:47.336956 30054 net.cpp:139] Memory required for data: 3682560
I0428 20:02:47.336966 30054 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:47.336973 30054 net.cpp:86] Creating Layer pool1
I0428 20:02:47.336977 30054 net.cpp:408] pool1 <- conv1
I0428 20:02:47.336982 30054 net.cpp:382] pool1 -> pool1
I0428 20:02:47.337018 30054 net.cpp:124] Setting up pool1
I0428 20:02:47.337023 30054 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:02:47.337026 30054 net.cpp:139] Memory required for data: 4092160
I0428 20:02:47.337029 30054 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:47.337036 30054 net.cpp:86] Creating Layer ip1
I0428 20:02:47.337039 30054 net.cpp:408] ip1 <- pool1
I0428 20:02:47.337044 30054 net.cpp:382] ip1 -> ip1
I0428 20:02:47.338100 30054 net.cpp:124] Setting up ip1
I0428 20:02:47.338114 30054 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:47.338132 30054 net.cpp:139] Memory required for data: 4094720
I0428 20:02:47.338140 30054 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:47.338146 30054 net.cpp:86] Creating Layer relu1
I0428 20:02:47.338150 30054 net.cpp:408] relu1 <- ip1
I0428 20:02:47.338155 30054 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:47.338327 30054 net.cpp:124] Setting up relu1
I0428 20:02:47.338335 30054 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:47.338354 30054 net.cpp:139] Memory required for data: 4097280
I0428 20:02:47.338357 30054 layer_factory.hpp:77] Creating layer loss
I0428 20:02:47.338368 30054 net.cpp:86] Creating Layer loss
I0428 20:02:47.338371 30054 net.cpp:408] loss <- ip1
I0428 20:02:47.338376 30054 net.cpp:408] loss <- label
I0428 20:02:47.338380 30054 net.cpp:382] loss -> loss
I0428 20:02:47.338392 30054 layer_factory.hpp:77] Creating layer loss
I0428 20:02:47.339203 30054 net.cpp:124] Setting up loss
I0428 20:02:47.339215 30054 net.cpp:131] Top shape: (1)
I0428 20:02:47.339234 30054 net.cpp:134]     with loss weight 1
I0428 20:02:47.339247 30054 net.cpp:139] Memory required for data: 4097284
I0428 20:02:47.339251 30054 net.cpp:200] loss needs backward computation.
I0428 20:02:47.339254 30054 net.cpp:200] relu1 needs backward computation.
I0428 20:02:47.339257 30054 net.cpp:200] ip1 needs backward computation.
I0428 20:02:47.339260 30054 net.cpp:200] pool1 needs backward computation.
I0428 20:02:47.339263 30054 net.cpp:200] conv1 needs backward computation.
I0428 20:02:47.339265 30054 net.cpp:200] pool0 needs backward computation.
I0428 20:02:47.339268 30054 net.cpp:200] conv0 needs backward computation.
I0428 20:02:47.339272 30054 net.cpp:202] mnist does not need backward computation.
I0428 20:02:47.339274 30054 net.cpp:244] This network produces output loss
I0428 20:02:47.339282 30054 net.cpp:257] Network initialization done.
I0428 20:02:47.339557 30054 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test937.prototxt
I0428 20:02:47.339581 30054 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:47.339655 30054 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:02:47.339723 30054 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:47.339778 30054 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:47.339793 30054 net.cpp:86] Creating Layer mnist
I0428 20:02:47.339798 30054 net.cpp:382] mnist -> data
I0428 20:02:47.339805 30054 net.cpp:382] mnist -> label
I0428 20:02:47.339885 30054 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:47.341859 30054 net.cpp:124] Setting up mnist
I0428 20:02:47.341889 30054 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:47.341894 30054 net.cpp:131] Top shape: 100 (100)
I0428 20:02:47.341898 30054 net.cpp:139] Memory required for data: 314000
I0428 20:02:47.341902 30054 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:47.341908 30054 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:47.341912 30054 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:47.341917 30054 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:47.341922 30054 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:47.341996 30054 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:47.342001 30054 net.cpp:131] Top shape: 100 (100)
I0428 20:02:47.342005 30054 net.cpp:131] Top shape: 100 (100)
I0428 20:02:47.342007 30054 net.cpp:139] Memory required for data: 314800
I0428 20:02:47.342025 30054 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:47.342032 30054 net.cpp:86] Creating Layer conv0
I0428 20:02:47.342034 30054 net.cpp:408] conv0 <- data
I0428 20:02:47.342039 30054 net.cpp:382] conv0 -> conv0
I0428 20:02:47.342977 30054 net.cpp:124] Setting up conv0
I0428 20:02:47.342988 30054 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:47.342991 30054 net.cpp:139] Memory required for data: 2618800
I0428 20:02:47.343000 30054 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:47.343006 30054 net.cpp:86] Creating Layer pool0
I0428 20:02:47.343009 30054 net.cpp:408] pool0 <- conv0
I0428 20:02:47.343014 30054 net.cpp:382] pool0 -> pool0
I0428 20:02:47.343067 30054 net.cpp:124] Setting up pool0
I0428 20:02:47.343073 30054 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:47.343076 30054 net.cpp:139] Memory required for data: 3194800
I0428 20:02:47.343080 30054 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:47.343086 30054 net.cpp:86] Creating Layer conv1
I0428 20:02:47.343089 30054 net.cpp:408] conv1 <- pool0
I0428 20:02:47.343094 30054 net.cpp:382] conv1 -> conv1
I0428 20:02:47.344738 30054 net.cpp:124] Setting up conv1
I0428 20:02:47.344751 30054 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:02:47.344763 30054 net.cpp:139] Memory required for data: 5754800
I0428 20:02:47.344770 30054 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:47.344776 30054 net.cpp:86] Creating Layer pool1
I0428 20:02:47.344790 30054 net.cpp:408] pool1 <- conv1
I0428 20:02:47.344801 30054 net.cpp:382] pool1 -> pool1
I0428 20:02:47.344857 30054 net.cpp:124] Setting up pool1
I0428 20:02:47.344864 30054 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:02:47.344867 30054 net.cpp:139] Memory required for data: 6394800
I0428 20:02:47.344871 30054 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:47.344877 30054 net.cpp:86] Creating Layer ip1
I0428 20:02:47.344880 30054 net.cpp:408] ip1 <- pool1
I0428 20:02:47.344884 30054 net.cpp:382] ip1 -> ip1
I0428 20:02:47.345080 30054 net.cpp:124] Setting up ip1
I0428 20:02:47.345088 30054 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:47.345091 30054 net.cpp:139] Memory required for data: 6398800
I0428 20:02:47.345098 30054 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:47.345104 30054 net.cpp:86] Creating Layer relu1
I0428 20:02:47.345108 30054 net.cpp:408] relu1 <- ip1
I0428 20:02:47.345127 30054 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:47.345983 30054 net.cpp:124] Setting up relu1
I0428 20:02:47.345995 30054 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:47.345999 30054 net.cpp:139] Memory required for data: 6402800
I0428 20:02:47.346001 30054 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:02:47.346007 30054 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:02:47.346010 30054 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:02:47.346026 30054 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:02:47.346032 30054 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:02:47.346071 30054 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:02:47.346077 30054 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:47.346081 30054 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:47.346083 30054 net.cpp:139] Memory required for data: 6410800
I0428 20:02:47.346086 30054 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:47.346091 30054 net.cpp:86] Creating Layer accuracy
I0428 20:02:47.346101 30054 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:02:47.346109 30054 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:47.346113 30054 net.cpp:382] accuracy -> accuracy
I0428 20:02:47.346120 30054 net.cpp:124] Setting up accuracy
I0428 20:02:47.346124 30054 net.cpp:131] Top shape: (1)
I0428 20:02:47.346127 30054 net.cpp:139] Memory required for data: 6410804
I0428 20:02:47.346129 30054 layer_factory.hpp:77] Creating layer loss
I0428 20:02:47.346133 30054 net.cpp:86] Creating Layer loss
I0428 20:02:47.346143 30054 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:02:47.346145 30054 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:47.346149 30054 net.cpp:382] loss -> loss
I0428 20:02:47.346160 30054 layer_factory.hpp:77] Creating layer loss
I0428 20:02:47.346408 30054 net.cpp:124] Setting up loss
I0428 20:02:47.346416 30054 net.cpp:131] Top shape: (1)
I0428 20:02:47.346421 30054 net.cpp:134]     with loss weight 1
I0428 20:02:47.346426 30054 net.cpp:139] Memory required for data: 6410808
I0428 20:02:47.346428 30054 net.cpp:200] loss needs backward computation.
I0428 20:02:47.346431 30054 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:47.346436 30054 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:02:47.346438 30054 net.cpp:200] relu1 needs backward computation.
I0428 20:02:47.346446 30054 net.cpp:200] ip1 needs backward computation.
I0428 20:02:47.346449 30054 net.cpp:200] pool1 needs backward computation.
I0428 20:02:47.346452 30054 net.cpp:200] conv1 needs backward computation.
I0428 20:02:47.346460 30054 net.cpp:200] pool0 needs backward computation.
I0428 20:02:47.346462 30054 net.cpp:200] conv0 needs backward computation.
I0428 20:02:47.346467 30054 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:47.346469 30054 net.cpp:202] mnist does not need backward computation.
I0428 20:02:47.346472 30054 net.cpp:244] This network produces output accuracy
I0428 20:02:47.346474 30054 net.cpp:244] This network produces output loss
I0428 20:02:47.346503 30054 net.cpp:257] Network initialization done.
I0428 20:02:47.346537 30054 solver.cpp:56] Solver scaffolding done.
I0428 20:02:47.346745 30054 caffe.cpp:248] Starting Optimization
I0428 20:02:47.346752 30054 solver.cpp:273] Solving LeNet
I0428 20:02:47.346755 30054 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:47.346860 30054 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:47.351487 30054 blocking_queue.cpp:49] Waiting for data
I0428 20:02:47.424459 30061 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:47.425040 30054 solver.cpp:398]     Test net output #0: accuracy = 0.1061
I0428 20:02:47.425060 30054 solver.cpp:398]     Test net output #1: loss = 2.338 (* 1 = 2.338 loss)
I0428 20:02:47.429051 30054 solver.cpp:219] Iteration 0 (-6.15048e-35 iter/s, 0.0822723s/100 iters), loss = 2.35443
I0428 20:02:47.429075 30054 solver.cpp:238]     Train net output #0: loss = 2.35443 (* 1 = 2.35443 loss)
I0428 20:02:47.429100 30054 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:47.577497 30054 solver.cpp:219] Iteration 100 (673.816 iter/s, 0.148409s/100 iters), loss = 0.550568
I0428 20:02:47.577538 30054 solver.cpp:238]     Train net output #0: loss = 0.550568 (* 1 = 0.550568 loss)
I0428 20:02:47.577544 30054 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:47.720948 30054 solver.cpp:219] Iteration 200 (697.36 iter/s, 0.143398s/100 iters), loss = 0.607436
I0428 20:02:47.720990 30054 solver.cpp:238]     Train net output #0: loss = 0.607436 (* 1 = 0.607436 loss)
I0428 20:02:47.720996 30054 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:47.866168 30054 solver.cpp:219] Iteration 300 (688.792 iter/s, 0.145182s/100 iters), loss = 0.509753
I0428 20:02:47.866209 30054 solver.cpp:238]     Train net output #0: loss = 0.509753 (* 1 = 0.509753 loss)
I0428 20:02:47.866214 30054 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:48.011374 30054 solver.cpp:219] Iteration 400 (688.996 iter/s, 0.145139s/100 iters), loss = 0.283292
I0428 20:02:48.011430 30054 solver.cpp:238]     Train net output #0: loss = 0.283292 (* 1 = 0.283292 loss)
I0428 20:02:48.011436 30054 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:48.154928 30054 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:48.230574 30061 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:48.231184 30054 solver.cpp:398]     Test net output #0: accuracy = 0.8718
I0428 20:02:48.231209 30054 solver.cpp:398]     Test net output #1: loss = 0.346634 (* 1 = 0.346634 loss)
I0428 20:02:48.232683 30054 solver.cpp:219] Iteration 500 (452.006 iter/s, 0.221236s/100 iters), loss = 0.419868
I0428 20:02:48.232720 30054 solver.cpp:238]     Train net output #0: loss = 0.419868 (* 1 = 0.419868 loss)
I0428 20:02:48.232733 30054 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:48.377719 30054 solver.cpp:219] Iteration 600 (689.74 iter/s, 0.144982s/100 iters), loss = 0.139781
I0428 20:02:48.377768 30054 solver.cpp:238]     Train net output #0: loss = 0.139782 (* 1 = 0.139782 loss)
I0428 20:02:48.377784 30054 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:48.534015 30054 solver.cpp:219] Iteration 700 (640.071 iter/s, 0.156233s/100 iters), loss = 0.133216
I0428 20:02:48.534068 30054 solver.cpp:238]     Train net output #0: loss = 0.133216 (* 1 = 0.133216 loss)
I0428 20:02:48.534078 30054 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:48.681753 30054 solver.cpp:219] Iteration 800 (677.134 iter/s, 0.147681s/100 iters), loss = 0.175698
I0428 20:02:48.681797 30054 solver.cpp:238]     Train net output #0: loss = 0.175698 (* 1 = 0.175698 loss)
I0428 20:02:48.681805 30054 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:48.826035 30054 solver.cpp:219] Iteration 900 (693.306 iter/s, 0.144237s/100 iters), loss = 0.140192
I0428 20:02:48.826078 30054 solver.cpp:238]     Train net output #0: loss = 0.140192 (* 1 = 0.140192 loss)
I0428 20:02:48.826086 30054 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:48.874357 30060 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:48.967944 30054 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:48.969746 30054 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:48.970605 30054 solver.cpp:311] Iteration 1000, loss = 0.142119
I0428 20:02:48.970623 30054 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:49.041121 30061 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:49.041738 30054 solver.cpp:398]     Test net output #0: accuracy = 0.9758
I0428 20:02:49.041764 30054 solver.cpp:398]     Test net output #1: loss = 0.0782137 (* 1 = 0.0782137 loss)
I0428 20:02:49.041779 30054 solver.cpp:316] Optimization Done.
I0428 20:02:49.041784 30054 caffe.cpp:259] Optimization Done.
