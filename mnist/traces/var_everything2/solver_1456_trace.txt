I0428 20:25:32.544957  2614 caffe.cpp:218] Using GPUs 0
I0428 20:25:32.581775  2614 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:25:33.094353  2614 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1456.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:25:33.094494  2614 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1456.prototxt
I0428 20:25:33.094898  2614 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:25:33.094916  2614 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:25:33.095015  2614 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:33.095088  2614 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:33.095186  2614 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:25:33.095209  2614 net.cpp:86] Creating Layer mnist
I0428 20:25:33.095217  2614 net.cpp:382] mnist -> data
I0428 20:25:33.095240  2614 net.cpp:382] mnist -> label
I0428 20:25:33.096325  2614 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:25:33.098795  2614 net.cpp:124] Setting up mnist
I0428 20:25:33.098814  2614 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:25:33.098820  2614 net.cpp:131] Top shape: 64 (64)
I0428 20:25:33.098824  2614 net.cpp:139] Memory required for data: 200960
I0428 20:25:33.098831  2614 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:33.098848  2614 net.cpp:86] Creating Layer conv0
I0428 20:25:33.098870  2614 net.cpp:408] conv0 <- data
I0428 20:25:33.098881  2614 net.cpp:382] conv0 -> conv0
I0428 20:25:33.391291  2614 net.cpp:124] Setting up conv0
I0428 20:25:33.391324  2614 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:25:33.391329  2614 net.cpp:139] Memory required for data: 14946560
I0428 20:25:33.391346  2614 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:33.391362  2614 net.cpp:86] Creating Layer pool0
I0428 20:25:33.391367  2614 net.cpp:408] pool0 <- conv0
I0428 20:25:33.391373  2614 net.cpp:382] pool0 -> pool0
I0428 20:25:33.391434  2614 net.cpp:124] Setting up pool0
I0428 20:25:33.391441  2614 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:25:33.391445  2614 net.cpp:139] Memory required for data: 18632960
I0428 20:25:33.391449  2614 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:33.391461  2614 net.cpp:86] Creating Layer conv1
I0428 20:25:33.391465  2614 net.cpp:408] conv1 <- pool0
I0428 20:25:33.391471  2614 net.cpp:382] conv1 -> conv1
I0428 20:25:33.394629  2614 net.cpp:124] Setting up conv1
I0428 20:25:33.394646  2614 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:25:33.394650  2614 net.cpp:139] Memory required for data: 18665728
I0428 20:25:33.394661  2614 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:33.394670  2614 net.cpp:86] Creating Layer pool1
I0428 20:25:33.394675  2614 net.cpp:408] pool1 <- conv1
I0428 20:25:33.394681  2614 net.cpp:382] pool1 -> pool1
I0428 20:25:33.394724  2614 net.cpp:124] Setting up pool1
I0428 20:25:33.394731  2614 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:25:33.394736  2614 net.cpp:139] Memory required for data: 18673920
I0428 20:25:33.394739  2614 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:33.394752  2614 net.cpp:86] Creating Layer ip1
I0428 20:25:33.394757  2614 net.cpp:408] ip1 <- pool1
I0428 20:25:33.394762  2614 net.cpp:382] ip1 -> ip1
I0428 20:25:33.394876  2614 net.cpp:124] Setting up ip1
I0428 20:25:33.394886  2614 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:33.394891  2614 net.cpp:139] Memory required for data: 18676480
I0428 20:25:33.394899  2614 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:33.394906  2614 net.cpp:86] Creating Layer relu1
I0428 20:25:33.394911  2614 net.cpp:408] relu1 <- ip1
I0428 20:25:33.394917  2614 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:33.395119  2614 net.cpp:124] Setting up relu1
I0428 20:25:33.395130  2614 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:33.395133  2614 net.cpp:139] Memory required for data: 18679040
I0428 20:25:33.395138  2614 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:33.395145  2614 net.cpp:86] Creating Layer ip2
I0428 20:25:33.395149  2614 net.cpp:408] ip2 <- ip1
I0428 20:25:33.395155  2614 net.cpp:382] ip2 -> ip2
I0428 20:25:33.395264  2614 net.cpp:124] Setting up ip2
I0428 20:25:33.395273  2614 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:33.395277  2614 net.cpp:139] Memory required for data: 18681600
I0428 20:25:33.395283  2614 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:33.395290  2614 net.cpp:86] Creating Layer relu2
I0428 20:25:33.395294  2614 net.cpp:408] relu2 <- ip2
I0428 20:25:33.395299  2614 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:33.396138  2614 net.cpp:124] Setting up relu2
I0428 20:25:33.396153  2614 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:33.396158  2614 net.cpp:139] Memory required for data: 18684160
I0428 20:25:33.396162  2614 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:33.396170  2614 net.cpp:86] Creating Layer ip3
I0428 20:25:33.396175  2614 net.cpp:408] ip3 <- ip2
I0428 20:25:33.396186  2614 net.cpp:382] ip3 -> ip3
I0428 20:25:33.396304  2614 net.cpp:124] Setting up ip3
I0428 20:25:33.396314  2614 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:33.396317  2614 net.cpp:139] Memory required for data: 18686720
I0428 20:25:33.396327  2614 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:33.396333  2614 net.cpp:86] Creating Layer relu3
I0428 20:25:33.396337  2614 net.cpp:408] relu3 <- ip3
I0428 20:25:33.396342  2614 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:33.396543  2614 net.cpp:124] Setting up relu3
I0428 20:25:33.396553  2614 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:33.396558  2614 net.cpp:139] Memory required for data: 18689280
I0428 20:25:33.396561  2614 layer_factory.hpp:77] Creating layer loss
I0428 20:25:33.396569  2614 net.cpp:86] Creating Layer loss
I0428 20:25:33.396572  2614 net.cpp:408] loss <- ip3
I0428 20:25:33.396576  2614 net.cpp:408] loss <- label
I0428 20:25:33.396584  2614 net.cpp:382] loss -> loss
I0428 20:25:33.396605  2614 layer_factory.hpp:77] Creating layer loss
I0428 20:25:33.396879  2614 net.cpp:124] Setting up loss
I0428 20:25:33.396891  2614 net.cpp:131] Top shape: (1)
I0428 20:25:33.396896  2614 net.cpp:134]     with loss weight 1
I0428 20:25:33.396914  2614 net.cpp:139] Memory required for data: 18689284
I0428 20:25:33.396917  2614 net.cpp:200] loss needs backward computation.
I0428 20:25:33.396922  2614 net.cpp:200] relu3 needs backward computation.
I0428 20:25:33.396926  2614 net.cpp:200] ip3 needs backward computation.
I0428 20:25:33.396929  2614 net.cpp:200] relu2 needs backward computation.
I0428 20:25:33.396934  2614 net.cpp:200] ip2 needs backward computation.
I0428 20:25:33.396936  2614 net.cpp:200] relu1 needs backward computation.
I0428 20:25:33.396940  2614 net.cpp:200] ip1 needs backward computation.
I0428 20:25:33.396944  2614 net.cpp:200] pool1 needs backward computation.
I0428 20:25:33.396948  2614 net.cpp:200] conv1 needs backward computation.
I0428 20:25:33.396951  2614 net.cpp:200] pool0 needs backward computation.
I0428 20:25:33.396955  2614 net.cpp:200] conv0 needs backward computation.
I0428 20:25:33.396960  2614 net.cpp:202] mnist does not need backward computation.
I0428 20:25:33.396965  2614 net.cpp:244] This network produces output loss
I0428 20:25:33.396975  2614 net.cpp:257] Network initialization done.
I0428 20:25:33.397369  2614 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1456.prototxt
I0428 20:25:33.397403  2614 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:25:33.397516  2614 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:33.397614  2614 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:33.397667  2614 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:25:33.397682  2614 net.cpp:86] Creating Layer mnist
I0428 20:25:33.397687  2614 net.cpp:382] mnist -> data
I0428 20:25:33.397697  2614 net.cpp:382] mnist -> label
I0428 20:25:33.397797  2614 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:25:33.399973  2614 net.cpp:124] Setting up mnist
I0428 20:25:33.399989  2614 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:25:33.399996  2614 net.cpp:131] Top shape: 100 (100)
I0428 20:25:33.399998  2614 net.cpp:139] Memory required for data: 314000
I0428 20:25:33.400003  2614 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:25:33.400018  2614 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:25:33.400023  2614 net.cpp:408] label_mnist_1_split <- label
I0428 20:25:33.400029  2614 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:25:33.400038  2614 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:25:33.400127  2614 net.cpp:124] Setting up label_mnist_1_split
I0428 20:25:33.400137  2614 net.cpp:131] Top shape: 100 (100)
I0428 20:25:33.400142  2614 net.cpp:131] Top shape: 100 (100)
I0428 20:25:33.400146  2614 net.cpp:139] Memory required for data: 314800
I0428 20:25:33.400149  2614 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:33.400161  2614 net.cpp:86] Creating Layer conv0
I0428 20:25:33.400168  2614 net.cpp:408] conv0 <- data
I0428 20:25:33.400176  2614 net.cpp:382] conv0 -> conv0
I0428 20:25:33.402070  2614 net.cpp:124] Setting up conv0
I0428 20:25:33.402088  2614 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:25:33.402093  2614 net.cpp:139] Memory required for data: 23354800
I0428 20:25:33.402104  2614 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:33.402112  2614 net.cpp:86] Creating Layer pool0
I0428 20:25:33.402117  2614 net.cpp:408] pool0 <- conv0
I0428 20:25:33.402122  2614 net.cpp:382] pool0 -> pool0
I0428 20:25:33.402168  2614 net.cpp:124] Setting up pool0
I0428 20:25:33.402176  2614 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:25:33.402180  2614 net.cpp:139] Memory required for data: 29114800
I0428 20:25:33.402184  2614 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:33.402199  2614 net.cpp:86] Creating Layer conv1
I0428 20:25:33.402204  2614 net.cpp:408] conv1 <- pool0
I0428 20:25:33.402210  2614 net.cpp:382] conv1 -> conv1
I0428 20:25:33.404001  2614 net.cpp:124] Setting up conv1
I0428 20:25:33.404017  2614 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:25:33.404021  2614 net.cpp:139] Memory required for data: 29166000
I0428 20:25:33.404034  2614 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:33.404042  2614 net.cpp:86] Creating Layer pool1
I0428 20:25:33.404047  2614 net.cpp:408] pool1 <- conv1
I0428 20:25:33.404052  2614 net.cpp:382] pool1 -> pool1
I0428 20:25:33.404099  2614 net.cpp:124] Setting up pool1
I0428 20:25:33.404115  2614 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:25:33.404119  2614 net.cpp:139] Memory required for data: 29178800
I0428 20:25:33.404132  2614 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:33.404139  2614 net.cpp:86] Creating Layer ip1
I0428 20:25:33.404144  2614 net.cpp:408] ip1 <- pool1
I0428 20:25:33.404151  2614 net.cpp:382] ip1 -> ip1
I0428 20:25:33.404274  2614 net.cpp:124] Setting up ip1
I0428 20:25:33.404284  2614 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:33.404300  2614 net.cpp:139] Memory required for data: 29182800
I0428 20:25:33.404310  2614 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:33.404320  2614 net.cpp:86] Creating Layer relu1
I0428 20:25:33.404327  2614 net.cpp:408] relu1 <- ip1
I0428 20:25:33.404332  2614 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:33.404597  2614 net.cpp:124] Setting up relu1
I0428 20:25:33.404606  2614 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:33.404610  2614 net.cpp:139] Memory required for data: 29186800
I0428 20:25:33.404614  2614 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:33.404623  2614 net.cpp:86] Creating Layer ip2
I0428 20:25:33.404628  2614 net.cpp:408] ip2 <- ip1
I0428 20:25:33.404633  2614 net.cpp:382] ip2 -> ip2
I0428 20:25:33.404768  2614 net.cpp:124] Setting up ip2
I0428 20:25:33.404778  2614 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:33.404781  2614 net.cpp:139] Memory required for data: 29190800
I0428 20:25:33.404788  2614 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:33.404794  2614 net.cpp:86] Creating Layer relu2
I0428 20:25:33.404798  2614 net.cpp:408] relu2 <- ip2
I0428 20:25:33.404805  2614 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:33.405007  2614 net.cpp:124] Setting up relu2
I0428 20:25:33.405017  2614 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:33.405021  2614 net.cpp:139] Memory required for data: 29194800
I0428 20:25:33.405025  2614 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:33.405045  2614 net.cpp:86] Creating Layer ip3
I0428 20:25:33.405048  2614 net.cpp:408] ip3 <- ip2
I0428 20:25:33.405055  2614 net.cpp:382] ip3 -> ip3
I0428 20:25:33.405171  2614 net.cpp:124] Setting up ip3
I0428 20:25:33.405181  2614 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:33.405186  2614 net.cpp:139] Memory required for data: 29198800
I0428 20:25:33.405194  2614 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:33.405200  2614 net.cpp:86] Creating Layer relu3
I0428 20:25:33.405205  2614 net.cpp:408] relu3 <- ip3
I0428 20:25:33.405210  2614 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:33.406136  2614 net.cpp:124] Setting up relu3
I0428 20:25:33.406152  2614 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:33.406155  2614 net.cpp:139] Memory required for data: 29202800
I0428 20:25:33.406159  2614 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:25:33.406167  2614 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:25:33.406172  2614 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:25:33.406178  2614 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:25:33.406186  2614 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:25:33.406239  2614 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:25:33.406249  2614 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:33.406253  2614 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:33.406256  2614 net.cpp:139] Memory required for data: 29210800
I0428 20:25:33.406260  2614 layer_factory.hpp:77] Creating layer accuracy
I0428 20:25:33.406267  2614 net.cpp:86] Creating Layer accuracy
I0428 20:25:33.406271  2614 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:25:33.406277  2614 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:25:33.406282  2614 net.cpp:382] accuracy -> accuracy
I0428 20:25:33.406291  2614 net.cpp:124] Setting up accuracy
I0428 20:25:33.406296  2614 net.cpp:131] Top shape: (1)
I0428 20:25:33.406301  2614 net.cpp:139] Memory required for data: 29210804
I0428 20:25:33.406304  2614 layer_factory.hpp:77] Creating layer loss
I0428 20:25:33.406311  2614 net.cpp:86] Creating Layer loss
I0428 20:25:33.406316  2614 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:25:33.406321  2614 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:25:33.406327  2614 net.cpp:382] loss -> loss
I0428 20:25:33.406332  2614 layer_factory.hpp:77] Creating layer loss
I0428 20:25:33.406615  2614 net.cpp:124] Setting up loss
I0428 20:25:33.406625  2614 net.cpp:131] Top shape: (1)
I0428 20:25:33.406630  2614 net.cpp:134]     with loss weight 1
I0428 20:25:33.406647  2614 net.cpp:139] Memory required for data: 29210808
I0428 20:25:33.406652  2614 net.cpp:200] loss needs backward computation.
I0428 20:25:33.406657  2614 net.cpp:202] accuracy does not need backward computation.
I0428 20:25:33.406661  2614 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:25:33.406666  2614 net.cpp:200] relu3 needs backward computation.
I0428 20:25:33.406669  2614 net.cpp:200] ip3 needs backward computation.
I0428 20:25:33.406672  2614 net.cpp:200] relu2 needs backward computation.
I0428 20:25:33.406675  2614 net.cpp:200] ip2 needs backward computation.
I0428 20:25:33.406680  2614 net.cpp:200] relu1 needs backward computation.
I0428 20:25:33.406683  2614 net.cpp:200] ip1 needs backward computation.
I0428 20:25:33.406687  2614 net.cpp:200] pool1 needs backward computation.
I0428 20:25:33.406690  2614 net.cpp:200] conv1 needs backward computation.
I0428 20:25:33.406694  2614 net.cpp:200] pool0 needs backward computation.
I0428 20:25:33.406697  2614 net.cpp:200] conv0 needs backward computation.
I0428 20:25:33.406702  2614 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:25:33.406707  2614 net.cpp:202] mnist does not need backward computation.
I0428 20:25:33.406721  2614 net.cpp:244] This network produces output accuracy
I0428 20:25:33.406726  2614 net.cpp:244] This network produces output loss
I0428 20:25:33.406740  2614 net.cpp:257] Network initialization done.
I0428 20:25:33.406791  2614 solver.cpp:56] Solver scaffolding done.
I0428 20:25:33.407300  2614 caffe.cpp:248] Starting Optimization
I0428 20:25:33.407307  2614 solver.cpp:273] Solving LeNet
I0428 20:25:33.407311  2614 solver.cpp:274] Learning Rate Policy: inv
I0428 20:25:33.408273  2614 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:25:33.507196  2630 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:33.509915  2614 solver.cpp:398]     Test net output #0: accuracy = 0.0426
I0428 20:25:33.509939  2614 solver.cpp:398]     Test net output #1: loss = 2.34715 (* 1 = 2.34715 loss)
I0428 20:25:33.514832  2614 solver.cpp:219] Iteration 0 (-1.75935e-31 iter/s, 0.107481s/100 iters), loss = 2.33621
I0428 20:25:33.514863  2614 solver.cpp:238]     Train net output #0: loss = 2.33621 (* 1 = 2.33621 loss)
I0428 20:25:33.514889  2614 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:25:33.726981  2614 solver.cpp:219] Iteration 100 (471.487 iter/s, 0.212095s/100 iters), loss = 1.03003
I0428 20:25:33.727028  2614 solver.cpp:238]     Train net output #0: loss = 1.03003 (* 1 = 1.03003 loss)
I0428 20:25:33.727038  2614 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:25:33.938316  2614 solver.cpp:219] Iteration 200 (473.322 iter/s, 0.211273s/100 iters), loss = 0.690549
I0428 20:25:33.938360  2614 solver.cpp:238]     Train net output #0: loss = 0.690549 (* 1 = 0.690549 loss)
I0428 20:25:33.938371  2614 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:25:34.155138  2614 solver.cpp:219] Iteration 300 (461.339 iter/s, 0.21676s/100 iters), loss = 0.60581
I0428 20:25:34.155184  2614 solver.cpp:238]     Train net output #0: loss = 0.60581 (* 1 = 0.60581 loss)
I0428 20:25:34.155194  2614 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:25:34.374600  2614 solver.cpp:219] Iteration 400 (455.786 iter/s, 0.219401s/100 iters), loss = 0.416264
I0428 20:25:34.374649  2614 solver.cpp:238]     Train net output #0: loss = 0.416264 (* 1 = 0.416264 loss)
I0428 20:25:34.374660  2614 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:25:34.586558  2614 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:25:34.686870  2630 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:34.689599  2614 solver.cpp:398]     Test net output #0: accuracy = 0.9082
I0428 20:25:34.689623  2614 solver.cpp:398]     Test net output #1: loss = 0.32176 (* 1 = 0.32176 loss)
I0428 20:25:34.691548  2614 solver.cpp:219] Iteration 500 (315.573 iter/s, 0.316884s/100 iters), loss = 0.501771
I0428 20:25:34.691575  2614 solver.cpp:238]     Train net output #0: loss = 0.501771 (* 1 = 0.501771 loss)
I0428 20:25:34.691601  2614 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:25:34.900954  2614 solver.cpp:219] Iteration 600 (477.649 iter/s, 0.209359s/100 iters), loss = 0.434351
I0428 20:25:34.901005  2614 solver.cpp:238]     Train net output #0: loss = 0.434351 (* 1 = 0.434351 loss)
I0428 20:25:34.901017  2614 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:35.120416  2614 solver.cpp:219] Iteration 700 (455.797 iter/s, 0.219396s/100 iters), loss = 0.296105
I0428 20:25:35.120470  2614 solver.cpp:238]     Train net output #0: loss = 0.296105 (* 1 = 0.296105 loss)
I0428 20:25:35.120482  2614 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:25:35.337708  2614 solver.cpp:219] Iteration 800 (460.356 iter/s, 0.217223s/100 iters), loss = 0.340751
I0428 20:25:35.337752  2614 solver.cpp:238]     Train net output #0: loss = 0.340751 (* 1 = 0.340751 loss)
I0428 20:25:35.337764  2614 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:25:35.557700  2614 solver.cpp:219] Iteration 900 (454.687 iter/s, 0.219932s/100 iters), loss = 0.279362
I0428 20:25:35.557749  2614 solver.cpp:238]     Train net output #0: loss = 0.279362 (* 1 = 0.279362 loss)
I0428 20:25:35.557761  2614 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:25:35.629755  2629 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:35.773221  2614 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:25:35.774968  2614 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:25:35.776119  2614 solver.cpp:311] Iteration 1000, loss = 0.218059
I0428 20:25:35.776146  2614 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:25:35.878409  2630 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:35.880969  2614 solver.cpp:398]     Test net output #0: accuracy = 0.9415
I0428 20:25:35.881007  2614 solver.cpp:398]     Test net output #1: loss = 0.193473 (* 1 = 0.193473 loss)
I0428 20:25:35.881014  2614 solver.cpp:316] Optimization Done.
I0428 20:25:35.881018  2614 caffe.cpp:259] Optimization Done.
