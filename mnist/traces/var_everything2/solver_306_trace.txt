I0428 19:39:30.234800 24315 caffe.cpp:218] Using GPUs 0
I0428 19:39:30.270723 24315 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:30.737882 24315 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test306.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:30.738011 24315 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test306.prototxt
I0428 19:39:30.738340 24315 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:30.738369 24315 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:30.738448 24315 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:30.738523 24315 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:30.738603 24315 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:30.738625 24315 net.cpp:86] Creating Layer mnist
I0428 19:39:30.738632 24315 net.cpp:382] mnist -> data
I0428 19:39:30.738651 24315 net.cpp:382] mnist -> label
I0428 19:39:30.739621 24315 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:30.741842 24315 net.cpp:124] Setting up mnist
I0428 19:39:30.741888 24315 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:30.741894 24315 net.cpp:131] Top shape: 64 (64)
I0428 19:39:30.741897 24315 net.cpp:139] Memory required for data: 200960
I0428 19:39:30.741904 24315 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:30.741917 24315 net.cpp:86] Creating Layer conv0
I0428 19:39:30.741935 24315 net.cpp:408] conv0 <- data
I0428 19:39:30.741946 24315 net.cpp:382] conv0 -> conv0
I0428 19:39:30.975994 24315 net.cpp:124] Setting up conv0
I0428 19:39:30.976038 24315 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:30.976043 24315 net.cpp:139] Memory required for data: 495872
I0428 19:39:30.976058 24315 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:30.976070 24315 net.cpp:86] Creating Layer pool0
I0428 19:39:30.976089 24315 net.cpp:408] pool0 <- conv0
I0428 19:39:30.976094 24315 net.cpp:382] pool0 -> pool0
I0428 19:39:30.976156 24315 net.cpp:124] Setting up pool0
I0428 19:39:30.976164 24315 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:30.976167 24315 net.cpp:139] Memory required for data: 569600
I0428 19:39:30.976171 24315 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:30.976181 24315 net.cpp:86] Creating Layer conv1
I0428 19:39:30.976186 24315 net.cpp:408] conv1 <- pool0
I0428 19:39:30.976207 24315 net.cpp:382] conv1 -> conv1
I0428 19:39:30.978113 24315 net.cpp:124] Setting up conv1
I0428 19:39:30.978128 24315 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:30.978132 24315 net.cpp:139] Memory required for data: 602368
I0428 19:39:30.978142 24315 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:30.978149 24315 net.cpp:86] Creating Layer pool1
I0428 19:39:30.978153 24315 net.cpp:408] pool1 <- conv1
I0428 19:39:30.978159 24315 net.cpp:382] pool1 -> pool1
I0428 19:39:30.978196 24315 net.cpp:124] Setting up pool1
I0428 19:39:30.978204 24315 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:30.978207 24315 net.cpp:139] Memory required for data: 610560
I0428 19:39:30.978210 24315 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:30.978222 24315 net.cpp:86] Creating Layer ip1
I0428 19:39:30.978229 24315 net.cpp:408] ip1 <- pool1
I0428 19:39:30.978250 24315 net.cpp:382] ip1 -> ip1
I0428 19:39:30.979254 24315 net.cpp:124] Setting up ip1
I0428 19:39:30.979265 24315 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:30.979285 24315 net.cpp:139] Memory required for data: 623360
I0428 19:39:30.979295 24315 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:30.979301 24315 net.cpp:86] Creating Layer relu1
I0428 19:39:30.979305 24315 net.cpp:408] relu1 <- ip1
I0428 19:39:30.979310 24315 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:30.979496 24315 net.cpp:124] Setting up relu1
I0428 19:39:30.979506 24315 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:30.979509 24315 net.cpp:139] Memory required for data: 636160
I0428 19:39:30.979512 24315 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:30.979519 24315 net.cpp:86] Creating Layer ip2
I0428 19:39:30.979522 24315 net.cpp:408] ip2 <- ip1
I0428 19:39:30.979528 24315 net.cpp:382] ip2 -> ip2
I0428 19:39:30.979630 24315 net.cpp:124] Setting up ip2
I0428 19:39:30.979637 24315 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:30.979655 24315 net.cpp:139] Memory required for data: 642560
I0428 19:39:30.979661 24315 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:30.979666 24315 net.cpp:86] Creating Layer relu2
I0428 19:39:30.979671 24315 net.cpp:408] relu2 <- ip2
I0428 19:39:30.979674 24315 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:30.980443 24315 net.cpp:124] Setting up relu2
I0428 19:39:30.980455 24315 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:30.980475 24315 net.cpp:139] Memory required for data: 648960
I0428 19:39:30.980479 24315 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:30.980501 24315 net.cpp:86] Creating Layer ip3
I0428 19:39:30.980505 24315 net.cpp:408] ip3 <- ip2
I0428 19:39:30.980511 24315 net.cpp:382] ip3 -> ip3
I0428 19:39:30.980625 24315 net.cpp:124] Setting up ip3
I0428 19:39:30.980633 24315 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:30.980636 24315 net.cpp:139] Memory required for data: 651520
I0428 19:39:30.980644 24315 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:30.980649 24315 net.cpp:86] Creating Layer relu3
I0428 19:39:30.980653 24315 net.cpp:408] relu3 <- ip3
I0428 19:39:30.980656 24315 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:30.980826 24315 net.cpp:124] Setting up relu3
I0428 19:39:30.980836 24315 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:30.980855 24315 net.cpp:139] Memory required for data: 654080
I0428 19:39:30.980859 24315 layer_factory.hpp:77] Creating layer loss
I0428 19:39:30.980880 24315 net.cpp:86] Creating Layer loss
I0428 19:39:30.980883 24315 net.cpp:408] loss <- ip3
I0428 19:39:30.980888 24315 net.cpp:408] loss <- label
I0428 19:39:30.980893 24315 net.cpp:382] loss -> loss
I0428 19:39:30.980911 24315 layer_factory.hpp:77] Creating layer loss
I0428 19:39:30.981155 24315 net.cpp:124] Setting up loss
I0428 19:39:30.981165 24315 net.cpp:131] Top shape: (1)
I0428 19:39:30.981184 24315 net.cpp:134]     with loss weight 1
I0428 19:39:30.981209 24315 net.cpp:139] Memory required for data: 654084
I0428 19:39:30.981214 24315 net.cpp:200] loss needs backward computation.
I0428 19:39:30.981217 24315 net.cpp:200] relu3 needs backward computation.
I0428 19:39:30.981220 24315 net.cpp:200] ip3 needs backward computation.
I0428 19:39:30.981223 24315 net.cpp:200] relu2 needs backward computation.
I0428 19:39:30.981226 24315 net.cpp:200] ip2 needs backward computation.
I0428 19:39:30.981245 24315 net.cpp:200] relu1 needs backward computation.
I0428 19:39:30.981248 24315 net.cpp:200] ip1 needs backward computation.
I0428 19:39:30.981251 24315 net.cpp:200] pool1 needs backward computation.
I0428 19:39:30.981254 24315 net.cpp:200] conv1 needs backward computation.
I0428 19:39:30.981258 24315 net.cpp:200] pool0 needs backward computation.
I0428 19:39:30.981261 24315 net.cpp:200] conv0 needs backward computation.
I0428 19:39:30.981266 24315 net.cpp:202] mnist does not need backward computation.
I0428 19:39:30.981269 24315 net.cpp:244] This network produces output loss
I0428 19:39:30.981278 24315 net.cpp:257] Network initialization done.
I0428 19:39:30.981686 24315 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test306.prototxt
I0428 19:39:30.981727 24315 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:30.981817 24315 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:30.981895 24315 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:30.981938 24315 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:30.981953 24315 net.cpp:86] Creating Layer mnist
I0428 19:39:30.981961 24315 net.cpp:382] mnist -> data
I0428 19:39:30.981984 24315 net.cpp:382] mnist -> label
I0428 19:39:30.982087 24315 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:30.984370 24315 net.cpp:124] Setting up mnist
I0428 19:39:30.984398 24315 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:30.984403 24315 net.cpp:131] Top shape: 100 (100)
I0428 19:39:30.984406 24315 net.cpp:139] Memory required for data: 314000
I0428 19:39:30.984411 24315 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:30.984421 24315 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:30.984424 24315 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:30.984428 24315 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:30.984436 24315 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:30.984549 24315 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:30.984557 24315 net.cpp:131] Top shape: 100 (100)
I0428 19:39:30.984561 24315 net.cpp:131] Top shape: 100 (100)
I0428 19:39:30.984565 24315 net.cpp:139] Memory required for data: 314800
I0428 19:39:30.984568 24315 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:30.984587 24315 net.cpp:86] Creating Layer conv0
I0428 19:39:30.984591 24315 net.cpp:408] conv0 <- data
I0428 19:39:30.984597 24315 net.cpp:382] conv0 -> conv0
I0428 19:39:30.986196 24315 net.cpp:124] Setting up conv0
I0428 19:39:30.986223 24315 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:30.986227 24315 net.cpp:139] Memory required for data: 775600
I0428 19:39:30.986237 24315 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:30.986243 24315 net.cpp:86] Creating Layer pool0
I0428 19:39:30.986245 24315 net.cpp:408] pool0 <- conv0
I0428 19:39:30.986251 24315 net.cpp:382] pool0 -> pool0
I0428 19:39:30.986287 24315 net.cpp:124] Setting up pool0
I0428 19:39:30.986292 24315 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:30.986295 24315 net.cpp:139] Memory required for data: 890800
I0428 19:39:30.986299 24315 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:30.986309 24315 net.cpp:86] Creating Layer conv1
I0428 19:39:30.986311 24315 net.cpp:408] conv1 <- pool0
I0428 19:39:30.986316 24315 net.cpp:382] conv1 -> conv1
I0428 19:39:30.987957 24315 net.cpp:124] Setting up conv1
I0428 19:39:30.987987 24315 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:30.987992 24315 net.cpp:139] Memory required for data: 942000
I0428 19:39:30.988000 24315 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:30.988008 24315 net.cpp:86] Creating Layer pool1
I0428 19:39:30.988011 24315 net.cpp:408] pool1 <- conv1
I0428 19:39:30.988016 24315 net.cpp:382] pool1 -> pool1
I0428 19:39:30.988055 24315 net.cpp:124] Setting up pool1
I0428 19:39:30.988062 24315 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:30.988066 24315 net.cpp:139] Memory required for data: 954800
I0428 19:39:30.988070 24315 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:30.988077 24315 net.cpp:86] Creating Layer ip1
I0428 19:39:30.988080 24315 net.cpp:408] ip1 <- pool1
I0428 19:39:30.988085 24315 net.cpp:382] ip1 -> ip1
I0428 19:39:30.988211 24315 net.cpp:124] Setting up ip1
I0428 19:39:30.988219 24315 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:30.988240 24315 net.cpp:139] Memory required for data: 974800
I0428 19:39:30.988247 24315 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:30.988255 24315 net.cpp:86] Creating Layer relu1
I0428 19:39:30.988260 24315 net.cpp:408] relu1 <- ip1
I0428 19:39:30.988263 24315 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:30.988437 24315 net.cpp:124] Setting up relu1
I0428 19:39:30.988447 24315 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:30.988452 24315 net.cpp:139] Memory required for data: 994800
I0428 19:39:30.988456 24315 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:30.988462 24315 net.cpp:86] Creating Layer ip2
I0428 19:39:30.988466 24315 net.cpp:408] ip2 <- ip1
I0428 19:39:30.988472 24315 net.cpp:382] ip2 -> ip2
I0428 19:39:30.988643 24315 net.cpp:124] Setting up ip2
I0428 19:39:30.988652 24315 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:30.988662 24315 net.cpp:139] Memory required for data: 1004800
I0428 19:39:30.988668 24315 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:30.988675 24315 net.cpp:86] Creating Layer relu2
I0428 19:39:30.988678 24315 net.cpp:408] relu2 <- ip2
I0428 19:39:30.988683 24315 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:30.988867 24315 net.cpp:124] Setting up relu2
I0428 19:39:30.988876 24315 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:30.988879 24315 net.cpp:139] Memory required for data: 1014800
I0428 19:39:30.988883 24315 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:30.988890 24315 net.cpp:86] Creating Layer ip3
I0428 19:39:30.988901 24315 net.cpp:408] ip3 <- ip2
I0428 19:39:30.988909 24315 net.cpp:382] ip3 -> ip3
I0428 19:39:30.989038 24315 net.cpp:124] Setting up ip3
I0428 19:39:30.989047 24315 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:30.989050 24315 net.cpp:139] Memory required for data: 1018800
I0428 19:39:30.989058 24315 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:30.989063 24315 net.cpp:86] Creating Layer relu3
I0428 19:39:30.989068 24315 net.cpp:408] relu3 <- ip3
I0428 19:39:30.989073 24315 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:30.989984 24315 net.cpp:124] Setting up relu3
I0428 19:39:30.990000 24315 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:30.990003 24315 net.cpp:139] Memory required for data: 1022800
I0428 19:39:30.990007 24315 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:30.990013 24315 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:30.990016 24315 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:30.990023 24315 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:30.990031 24315 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:30.990069 24315 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:30.990077 24315 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:30.990082 24315 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:30.990084 24315 net.cpp:139] Memory required for data: 1030800
I0428 19:39:30.990087 24315 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:30.990092 24315 net.cpp:86] Creating Layer accuracy
I0428 19:39:30.990097 24315 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:30.990100 24315 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:30.990105 24315 net.cpp:382] accuracy -> accuracy
I0428 19:39:30.990113 24315 net.cpp:124] Setting up accuracy
I0428 19:39:30.990118 24315 net.cpp:131] Top shape: (1)
I0428 19:39:30.990120 24315 net.cpp:139] Memory required for data: 1030804
I0428 19:39:30.990124 24315 layer_factory.hpp:77] Creating layer loss
I0428 19:39:30.990130 24315 net.cpp:86] Creating Layer loss
I0428 19:39:30.990134 24315 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:30.990137 24315 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:30.990142 24315 net.cpp:382] loss -> loss
I0428 19:39:30.990149 24315 layer_factory.hpp:77] Creating layer loss
I0428 19:39:30.990401 24315 net.cpp:124] Setting up loss
I0428 19:39:30.990411 24315 net.cpp:131] Top shape: (1)
I0428 19:39:30.990416 24315 net.cpp:134]     with loss weight 1
I0428 19:39:30.990422 24315 net.cpp:139] Memory required for data: 1030808
I0428 19:39:30.990435 24315 net.cpp:200] loss needs backward computation.
I0428 19:39:30.990440 24315 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:30.990445 24315 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:30.990448 24315 net.cpp:200] relu3 needs backward computation.
I0428 19:39:30.990453 24315 net.cpp:200] ip3 needs backward computation.
I0428 19:39:30.990455 24315 net.cpp:200] relu2 needs backward computation.
I0428 19:39:30.990458 24315 net.cpp:200] ip2 needs backward computation.
I0428 19:39:30.990468 24315 net.cpp:200] relu1 needs backward computation.
I0428 19:39:30.990470 24315 net.cpp:200] ip1 needs backward computation.
I0428 19:39:30.990473 24315 net.cpp:200] pool1 needs backward computation.
I0428 19:39:30.990478 24315 net.cpp:200] conv1 needs backward computation.
I0428 19:39:30.990480 24315 net.cpp:200] pool0 needs backward computation.
I0428 19:39:30.990484 24315 net.cpp:200] conv0 needs backward computation.
I0428 19:39:30.990495 24315 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:30.990500 24315 net.cpp:202] mnist does not need backward computation.
I0428 19:39:30.990504 24315 net.cpp:244] This network produces output accuracy
I0428 19:39:30.990507 24315 net.cpp:244] This network produces output loss
I0428 19:39:30.990520 24315 net.cpp:257] Network initialization done.
I0428 19:39:30.990563 24315 solver.cpp:56] Solver scaffolding done.
I0428 19:39:30.990979 24315 caffe.cpp:248] Starting Optimization
I0428 19:39:30.990986 24315 solver.cpp:273] Solving LeNet
I0428 19:39:30.990989 24315 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:30.991264 24315 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:30.994599 24315 blocking_queue.cpp:49] Waiting for data
I0428 19:39:31.064733 24322 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:31.065202 24315 solver.cpp:398]     Test net output #0: accuracy = 0.0919
I0428 19:39:31.065238 24315 solver.cpp:398]     Test net output #1: loss = 2.31497 (* 1 = 2.31497 loss)
I0428 19:39:31.066999 24315 solver.cpp:219] Iteration 0 (0 iter/s, 0.0759624s/100 iters), loss = 2.30651
I0428 19:39:31.067044 24315 solver.cpp:238]     Train net output #0: loss = 2.30651 (* 1 = 2.30651 loss)
I0428 19:39:31.067057 24315 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:31.133592 24315 solver.cpp:219] Iteration 100 (1502.9 iter/s, 0.066538s/100 iters), loss = 1.76171
I0428 19:39:31.133626 24315 solver.cpp:238]     Train net output #0: loss = 1.76171 (* 1 = 1.76171 loss)
I0428 19:39:31.133633 24315 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:31.199370 24315 solver.cpp:219] Iteration 200 (1521.01 iter/s, 0.0657459s/100 iters), loss = 2.01607
I0428 19:39:31.199409 24315 solver.cpp:238]     Train net output #0: loss = 2.01607 (* 1 = 2.01607 loss)
I0428 19:39:31.199414 24315 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:31.264271 24315 solver.cpp:219] Iteration 300 (1541.63 iter/s, 0.0648663s/100 iters), loss = 1.85012
I0428 19:39:31.264308 24315 solver.cpp:238]     Train net output #0: loss = 1.85012 (* 1 = 1.85012 loss)
I0428 19:39:31.264313 24315 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:31.329529 24315 solver.cpp:219] Iteration 400 (1533.09 iter/s, 0.0652276s/100 iters), loss = 1.83781
I0428 19:39:31.329566 24315 solver.cpp:238]     Train net output #0: loss = 1.83781 (* 1 = 1.83781 loss)
I0428 19:39:31.329571 24315 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:31.396255 24315 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:31.448645 24322 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:31.449163 24315 solver.cpp:398]     Test net output #0: accuracy = 0.5412
I0428 19:39:31.449198 24315 solver.cpp:398]     Test net output #1: loss = 1.39171 (* 1 = 1.39171 loss)
I0428 19:39:31.449961 24315 solver.cpp:219] Iteration 500 (830.573 iter/s, 0.120399s/100 iters), loss = 1.35382
I0428 19:39:31.450001 24315 solver.cpp:238]     Train net output #0: loss = 1.35382 (* 1 = 1.35382 loss)
I0428 19:39:31.450037 24315 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:31.515527 24315 solver.cpp:219] Iteration 600 (1525.93 iter/s, 0.065534s/100 iters), loss = 1.02043
I0428 19:39:31.515566 24315 solver.cpp:238]     Train net output #0: loss = 1.02043 (* 1 = 1.02043 loss)
I0428 19:39:31.515573 24315 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:31.580898 24315 solver.cpp:219] Iteration 700 (1530.54 iter/s, 0.0653365s/100 iters), loss = 1.22919
I0428 19:39:31.580921 24315 solver.cpp:238]     Train net output #0: loss = 1.22919 (* 1 = 1.22919 loss)
I0428 19:39:31.580927 24315 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:31.676585 24315 solver.cpp:219] Iteration 800 (1045.47 iter/s, 0.0956509s/100 iters), loss = 1.37309
I0428 19:39:31.676632 24315 solver.cpp:238]     Train net output #0: loss = 1.37309 (* 1 = 1.37309 loss)
I0428 19:39:31.676641 24315 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:31.750844 24315 solver.cpp:219] Iteration 900 (1347.45 iter/s, 0.0742144s/100 iters), loss = 1.22439
I0428 19:39:31.750872 24315 solver.cpp:238]     Train net output #0: loss = 1.22439 (* 1 = 1.22439 loss)
I0428 19:39:31.750880 24315 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:31.775297 24321 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:31.823477 24315 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:31.824206 24315 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:31.824668 24315 solver.cpp:311] Iteration 1000, loss = 1.06337
I0428 19:39:31.824687 24315 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:31.880852 24322 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:31.882185 24315 solver.cpp:398]     Test net output #0: accuracy = 0.6595
I0428 19:39:31.882221 24315 solver.cpp:398]     Test net output #1: loss = 1.10669 (* 1 = 1.10669 loss)
I0428 19:39:31.882230 24315 solver.cpp:316] Optimization Done.
I0428 19:39:31.882236 24315 caffe.cpp:259] Optimization Done.
