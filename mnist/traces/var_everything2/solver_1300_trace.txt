I0428 20:17:39.906635   924 caffe.cpp:218] Using GPUs 0
I0428 20:17:39.946180   924 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:40.402369   924 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1300.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:40.402518   924 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1300.prototxt
I0428 20:17:40.402887   924 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:40.402920   924 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:40.403003   924 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:40.403085   924 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:40.403183   924 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:40.403205   924 net.cpp:86] Creating Layer mnist
I0428 20:17:40.403211   924 net.cpp:382] mnist -> data
I0428 20:17:40.403229   924 net.cpp:382] mnist -> label
I0428 20:17:40.404274   924 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:40.406417   924 net.cpp:124] Setting up mnist
I0428 20:17:40.406446   924 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:40.406452   924 net.cpp:131] Top shape: 64 (64)
I0428 20:17:40.406455   924 net.cpp:139] Memory required for data: 200960
I0428 20:17:40.406461   924 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:40.406474   924 net.cpp:86] Creating Layer conv0
I0428 20:17:40.406491   924 net.cpp:408] conv0 <- data
I0428 20:17:40.406502   924 net.cpp:382] conv0 -> conv0
I0428 20:17:40.642858   924 net.cpp:124] Setting up conv0
I0428 20:17:40.642899   924 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:40.642902   924 net.cpp:139] Memory required for data: 7573760
I0428 20:17:40.642917   924 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:40.642945   924 net.cpp:86] Creating Layer pool0
I0428 20:17:40.642963   924 net.cpp:408] pool0 <- conv0
I0428 20:17:40.642968   924 net.cpp:382] pool0 -> pool0
I0428 20:17:40.643014   924 net.cpp:124] Setting up pool0
I0428 20:17:40.643021   924 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:40.643024   924 net.cpp:139] Memory required for data: 9416960
I0428 20:17:40.643028   924 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:40.643038   924 net.cpp:86] Creating Layer conv1
I0428 20:17:40.643041   924 net.cpp:408] conv1 <- pool0
I0428 20:17:40.643045   924 net.cpp:382] conv1 -> conv1
I0428 20:17:40.645941   924 net.cpp:124] Setting up conv1
I0428 20:17:40.645970   924 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:40.645973   924 net.cpp:139] Memory required for data: 9580800
I0428 20:17:40.645982   924 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:40.645989   924 net.cpp:86] Creating Layer pool1
I0428 20:17:40.645992   924 net.cpp:408] pool1 <- conv1
I0428 20:17:40.645998   924 net.cpp:382] pool1 -> pool1
I0428 20:17:40.646033   924 net.cpp:124] Setting up pool1
I0428 20:17:40.646037   924 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:40.646040   924 net.cpp:139] Memory required for data: 9621760
I0428 20:17:40.646044   924 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:40.646049   924 net.cpp:86] Creating Layer ip1
I0428 20:17:40.646052   924 net.cpp:408] ip1 <- pool1
I0428 20:17:40.646056   924 net.cpp:382] ip1 -> ip1
I0428 20:17:40.646173   924 net.cpp:124] Setting up ip1
I0428 20:17:40.646181   924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:40.646184   924 net.cpp:139] Memory required for data: 9624320
I0428 20:17:40.646191   924 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:40.646196   924 net.cpp:86] Creating Layer relu1
I0428 20:17:40.646199   924 net.cpp:408] relu1 <- ip1
I0428 20:17:40.646204   924 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:40.646363   924 net.cpp:124] Setting up relu1
I0428 20:17:40.646370   924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:40.646373   924 net.cpp:139] Memory required for data: 9626880
I0428 20:17:40.646376   924 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:40.646383   924 net.cpp:86] Creating Layer ip2
I0428 20:17:40.646385   924 net.cpp:408] ip2 <- ip1
I0428 20:17:40.646404   924 net.cpp:382] ip2 -> ip2
I0428 20:17:40.646507   924 net.cpp:124] Setting up ip2
I0428 20:17:40.646512   924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:40.646515   924 net.cpp:139] Memory required for data: 9629440
I0428 20:17:40.646520   924 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:40.646526   924 net.cpp:86] Creating Layer relu2
I0428 20:17:40.646529   924 net.cpp:408] relu2 <- ip2
I0428 20:17:40.646533   924 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:40.647294   924 net.cpp:124] Setting up relu2
I0428 20:17:40.647322   924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:40.647326   924 net.cpp:139] Memory required for data: 9632000
I0428 20:17:40.647330   924 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:40.647336   924 net.cpp:86] Creating Layer ip3
I0428 20:17:40.647339   924 net.cpp:408] ip3 <- ip2
I0428 20:17:40.647344   924 net.cpp:382] ip3 -> ip3
I0428 20:17:40.647436   924 net.cpp:124] Setting up ip3
I0428 20:17:40.647444   924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:40.647446   924 net.cpp:139] Memory required for data: 9634560
I0428 20:17:40.647454   924 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:40.647459   924 net.cpp:86] Creating Layer relu3
I0428 20:17:40.647461   924 net.cpp:408] relu3 <- ip3
I0428 20:17:40.647465   924 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:40.647632   924 net.cpp:124] Setting up relu3
I0428 20:17:40.647641   924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:40.647644   924 net.cpp:139] Memory required for data: 9637120
I0428 20:17:40.647646   924 layer_factory.hpp:77] Creating layer loss
I0428 20:17:40.647652   924 net.cpp:86] Creating Layer loss
I0428 20:17:40.647656   924 net.cpp:408] loss <- ip3
I0428 20:17:40.647660   924 net.cpp:408] loss <- label
I0428 20:17:40.647665   924 net.cpp:382] loss -> loss
I0428 20:17:40.647696   924 layer_factory.hpp:77] Creating layer loss
I0428 20:17:40.647909   924 net.cpp:124] Setting up loss
I0428 20:17:40.647919   924 net.cpp:131] Top shape: (1)
I0428 20:17:40.647922   924 net.cpp:134]     with loss weight 1
I0428 20:17:40.647935   924 net.cpp:139] Memory required for data: 9637124
I0428 20:17:40.647939   924 net.cpp:200] loss needs backward computation.
I0428 20:17:40.647943   924 net.cpp:200] relu3 needs backward computation.
I0428 20:17:40.647946   924 net.cpp:200] ip3 needs backward computation.
I0428 20:17:40.647948   924 net.cpp:200] relu2 needs backward computation.
I0428 20:17:40.647951   924 net.cpp:200] ip2 needs backward computation.
I0428 20:17:40.647954   924 net.cpp:200] relu1 needs backward computation.
I0428 20:17:40.647956   924 net.cpp:200] ip1 needs backward computation.
I0428 20:17:40.647960   924 net.cpp:200] pool1 needs backward computation.
I0428 20:17:40.647963   924 net.cpp:200] conv1 needs backward computation.
I0428 20:17:40.647965   924 net.cpp:200] pool0 needs backward computation.
I0428 20:17:40.647969   924 net.cpp:200] conv0 needs backward computation.
I0428 20:17:40.647971   924 net.cpp:202] mnist does not need backward computation.
I0428 20:17:40.647974   924 net.cpp:244] This network produces output loss
I0428 20:17:40.647982   924 net.cpp:257] Network initialization done.
I0428 20:17:40.648334   924 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1300.prototxt
I0428 20:17:40.648360   924 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:40.648452   924 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:40.648528   924 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:40.648571   924 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:40.648582   924 net.cpp:86] Creating Layer mnist
I0428 20:17:40.648586   924 net.cpp:382] mnist -> data
I0428 20:17:40.648594   924 net.cpp:382] mnist -> label
I0428 20:17:40.648701   924 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:40.650842   924 net.cpp:124] Setting up mnist
I0428 20:17:40.650871   924 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:40.650876   924 net.cpp:131] Top shape: 100 (100)
I0428 20:17:40.650880   924 net.cpp:139] Memory required for data: 314000
I0428 20:17:40.650883   924 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:40.650890   924 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:40.650893   924 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:40.650897   924 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:40.650903   924 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:40.650956   924 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:40.650962   924 net.cpp:131] Top shape: 100 (100)
I0428 20:17:40.650965   924 net.cpp:131] Top shape: 100 (100)
I0428 20:17:40.650969   924 net.cpp:139] Memory required for data: 314800
I0428 20:17:40.650971   924 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:40.650979   924 net.cpp:86] Creating Layer conv0
I0428 20:17:40.650981   924 net.cpp:408] conv0 <- data
I0428 20:17:40.650986   924 net.cpp:382] conv0 -> conv0
I0428 20:17:40.652530   924 net.cpp:124] Setting up conv0
I0428 20:17:40.652544   924 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:40.652547   924 net.cpp:139] Memory required for data: 11834800
I0428 20:17:40.652556   924 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:40.652562   924 net.cpp:86] Creating Layer pool0
I0428 20:17:40.652565   924 net.cpp:408] pool0 <- conv0
I0428 20:17:40.652570   924 net.cpp:382] pool0 -> pool0
I0428 20:17:40.652604   924 net.cpp:124] Setting up pool0
I0428 20:17:40.652609   924 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:40.652612   924 net.cpp:139] Memory required for data: 14714800
I0428 20:17:40.652614   924 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:40.652622   924 net.cpp:86] Creating Layer conv1
I0428 20:17:40.652626   924 net.cpp:408] conv1 <- pool0
I0428 20:17:40.652629   924 net.cpp:382] conv1 -> conv1
I0428 20:17:40.654279   924 net.cpp:124] Setting up conv1
I0428 20:17:40.654294   924 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:40.654304   924 net.cpp:139] Memory required for data: 14970800
I0428 20:17:40.654311   924 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:40.654320   924 net.cpp:86] Creating Layer pool1
I0428 20:17:40.654325   924 net.cpp:408] pool1 <- conv1
I0428 20:17:40.654330   924 net.cpp:382] pool1 -> pool1
I0428 20:17:40.654381   924 net.cpp:124] Setting up pool1
I0428 20:17:40.654387   924 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:40.654391   924 net.cpp:139] Memory required for data: 15034800
I0428 20:17:40.654393   924 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:40.654398   924 net.cpp:86] Creating Layer ip1
I0428 20:17:40.654417   924 net.cpp:408] ip1 <- pool1
I0428 20:17:40.654422   924 net.cpp:382] ip1 -> ip1
I0428 20:17:40.654531   924 net.cpp:124] Setting up ip1
I0428 20:17:40.654538   924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:40.654553   924 net.cpp:139] Memory required for data: 15038800
I0428 20:17:40.654561   924 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:40.654567   924 net.cpp:86] Creating Layer relu1
I0428 20:17:40.654570   924 net.cpp:408] relu1 <- ip1
I0428 20:17:40.654575   924 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:40.654765   924 net.cpp:124] Setting up relu1
I0428 20:17:40.654790   924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:40.654793   924 net.cpp:139] Memory required for data: 15042800
I0428 20:17:40.654796   924 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:40.654814   924 net.cpp:86] Creating Layer ip2
I0428 20:17:40.654816   924 net.cpp:408] ip2 <- ip1
I0428 20:17:40.654821   924 net.cpp:382] ip2 -> ip2
I0428 20:17:40.654917   924 net.cpp:124] Setting up ip2
I0428 20:17:40.654924   924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:40.654927   924 net.cpp:139] Memory required for data: 15046800
I0428 20:17:40.654932   924 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:40.654937   924 net.cpp:86] Creating Layer relu2
I0428 20:17:40.654947   924 net.cpp:408] relu2 <- ip2
I0428 20:17:40.654953   924 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:40.655133   924 net.cpp:124] Setting up relu2
I0428 20:17:40.655141   924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:40.655144   924 net.cpp:139] Memory required for data: 15050800
I0428 20:17:40.655154   924 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:40.655159   924 net.cpp:86] Creating Layer ip3
I0428 20:17:40.655163   924 net.cpp:408] ip3 <- ip2
I0428 20:17:40.655175   924 net.cpp:382] ip3 -> ip3
I0428 20:17:40.655292   924 net.cpp:124] Setting up ip3
I0428 20:17:40.655299   924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:40.655303   924 net.cpp:139] Memory required for data: 15054800
I0428 20:17:40.655310   924 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:40.655316   924 net.cpp:86] Creating Layer relu3
I0428 20:17:40.655319   924 net.cpp:408] relu3 <- ip3
I0428 20:17:40.655339   924 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:40.656216   924 net.cpp:124] Setting up relu3
I0428 20:17:40.656229   924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:40.656231   924 net.cpp:139] Memory required for data: 15058800
I0428 20:17:40.656235   924 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:17:40.656241   924 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:17:40.656244   924 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:17:40.656250   924 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:17:40.656255   924 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:17:40.656292   924 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:17:40.656298   924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:40.656301   924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:40.656303   924 net.cpp:139] Memory required for data: 15066800
I0428 20:17:40.656306   924 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:40.656314   924 net.cpp:86] Creating Layer accuracy
I0428 20:17:40.656317   924 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:17:40.656322   924 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:40.656327   924 net.cpp:382] accuracy -> accuracy
I0428 20:17:40.656333   924 net.cpp:124] Setting up accuracy
I0428 20:17:40.656337   924 net.cpp:131] Top shape: (1)
I0428 20:17:40.656339   924 net.cpp:139] Memory required for data: 15066804
I0428 20:17:40.656342   924 layer_factory.hpp:77] Creating layer loss
I0428 20:17:40.656345   924 net.cpp:86] Creating Layer loss
I0428 20:17:40.656349   924 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:17:40.656352   924 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:40.656358   924 net.cpp:382] loss -> loss
I0428 20:17:40.656363   924 layer_factory.hpp:77] Creating layer loss
I0428 20:17:40.656590   924 net.cpp:124] Setting up loss
I0428 20:17:40.656599   924 net.cpp:131] Top shape: (1)
I0428 20:17:40.656602   924 net.cpp:134]     with loss weight 1
I0428 20:17:40.656616   924 net.cpp:139] Memory required for data: 15066808
I0428 20:17:40.656620   924 net.cpp:200] loss needs backward computation.
I0428 20:17:40.656623   924 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:40.656626   924 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:17:40.656635   924 net.cpp:200] relu3 needs backward computation.
I0428 20:17:40.656638   924 net.cpp:200] ip3 needs backward computation.
I0428 20:17:40.656641   924 net.cpp:200] relu2 needs backward computation.
I0428 20:17:40.656643   924 net.cpp:200] ip2 needs backward computation.
I0428 20:17:40.656646   924 net.cpp:200] relu1 needs backward computation.
I0428 20:17:40.656648   924 net.cpp:200] ip1 needs backward computation.
I0428 20:17:40.656652   924 net.cpp:200] pool1 needs backward computation.
I0428 20:17:40.656669   924 net.cpp:200] conv1 needs backward computation.
I0428 20:17:40.656672   924 net.cpp:200] pool0 needs backward computation.
I0428 20:17:40.656680   924 net.cpp:200] conv0 needs backward computation.
I0428 20:17:40.656683   924 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:40.656687   924 net.cpp:202] mnist does not need backward computation.
I0428 20:17:40.656688   924 net.cpp:244] This network produces output accuracy
I0428 20:17:40.656697   924 net.cpp:244] This network produces output loss
I0428 20:17:40.656708   924 net.cpp:257] Network initialization done.
I0428 20:17:40.656745   924 solver.cpp:56] Solver scaffolding done.
I0428 20:17:40.657081   924 caffe.cpp:248] Starting Optimization
I0428 20:17:40.657088   924 solver.cpp:273] Solving LeNet
I0428 20:17:40.657097   924 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:40.657274   924 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:40.663812   924 blocking_queue.cpp:49] Waiting for data
I0428 20:17:40.732257   931 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:40.733011   924 solver.cpp:398]     Test net output #0: accuracy = 0.0857
I0428 20:17:40.733028   924 solver.cpp:398]     Test net output #1: loss = 2.33012 (* 1 = 2.33012 loss)
I0428 20:17:40.737500   924 solver.cpp:219] Iteration 0 (0 iter/s, 0.0803779s/100 iters), loss = 2.31953
I0428 20:17:40.737524   924 solver.cpp:238]     Train net output #0: loss = 2.31953 (* 1 = 2.31953 loss)
I0428 20:17:40.737536   924 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:40.856972   924 solver.cpp:219] Iteration 100 (837.281 iter/s, 0.119434s/100 iters), loss = 1.01959
I0428 20:17:40.856995   924 solver.cpp:238]     Train net output #0: loss = 1.01959 (* 1 = 1.01959 loss)
I0428 20:17:40.857002   924 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:40.976240   924 solver.cpp:219] Iteration 200 (838.69 iter/s, 0.119234s/100 iters), loss = 0.525785
I0428 20:17:40.976263   924 solver.cpp:238]     Train net output #0: loss = 0.525785 (* 1 = 0.525785 loss)
I0428 20:17:40.976269   924 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:41.095615   924 solver.cpp:219] Iteration 300 (837.935 iter/s, 0.119341s/100 iters), loss = 0.364168
I0428 20:17:41.095638   924 solver.cpp:238]     Train net output #0: loss = 0.364168 (* 1 = 0.364168 loss)
I0428 20:17:41.095644   924 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:41.215698   924 solver.cpp:219] Iteration 400 (832.989 iter/s, 0.12005s/100 iters), loss = 0.61672
I0428 20:17:41.215723   924 solver.cpp:238]     Train net output #0: loss = 0.61672 (* 1 = 0.61672 loss)
I0428 20:17:41.215744   924 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:41.335494   924 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:41.399511   931 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:41.401123   924 solver.cpp:398]     Test net output #0: accuracy = 0.9111
I0428 20:17:41.401144   924 solver.cpp:398]     Test net output #1: loss = 0.433996 (* 1 = 0.433996 loss)
I0428 20:17:41.402303   924 solver.cpp:219] Iteration 500 (536.001 iter/s, 0.186567s/100 iters), loss = 0.500529
I0428 20:17:41.402343   924 solver.cpp:238]     Train net output #0: loss = 0.500529 (* 1 = 0.500529 loss)
I0428 20:17:41.402350   924 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:41.528451   924 solver.cpp:219] Iteration 600 (793.031 iter/s, 0.126098s/100 iters), loss = 0.406816
I0428 20:17:41.528479   924 solver.cpp:238]     Train net output #0: loss = 0.406816 (* 1 = 0.406816 loss)
I0428 20:17:41.528501   924 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:41.653659   924 solver.cpp:219] Iteration 700 (798.916 iter/s, 0.12517s/100 iters), loss = 0.488273
I0428 20:17:41.653684   924 solver.cpp:238]     Train net output #0: loss = 0.488273 (* 1 = 0.488273 loss)
I0428 20:17:41.653707   924 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:41.776401   924 solver.cpp:219] Iteration 800 (814.957 iter/s, 0.122706s/100 iters), loss = 0.44488
I0428 20:17:41.776427   924 solver.cpp:238]     Train net output #0: loss = 0.44488 (* 1 = 0.44488 loss)
I0428 20:17:41.776450   924 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:41.897064   924 solver.cpp:219] Iteration 900 (829.014 iter/s, 0.120625s/100 iters), loss = 0.394301
I0428 20:17:41.897089   924 solver.cpp:238]     Train net output #0: loss = 0.394301 (* 1 = 0.394301 loss)
I0428 20:17:41.897114   924 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:41.936326   930 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:42.013304   924 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:42.014402   924 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:42.015130   924 solver.cpp:311] Iteration 1000, loss = 0.438145
I0428 20:17:42.015146   924 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:42.078312   931 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:42.079931   924 solver.cpp:398]     Test net output #0: accuracy = 0.9535
I0428 20:17:42.079948   924 solver.cpp:398]     Test net output #1: loss = 0.340497 (* 1 = 0.340497 loss)
I0428 20:17:42.079953   924 solver.cpp:316] Optimization Done.
I0428 20:17:42.079955   924 caffe.cpp:259] Optimization Done.
