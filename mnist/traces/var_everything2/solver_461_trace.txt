I0428 19:44:58.859133 25715 caffe.cpp:218] Using GPUs 0
I0428 19:44:58.891885 25715 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:44:59.395959 25715 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test461.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:44:59.396100 25715 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test461.prototxt
I0428 19:44:59.396518 25715 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:44:59.396538 25715 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:44:59.396642 25715 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:59.396723 25715 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:59.396826 25715 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:44:59.396850 25715 net.cpp:86] Creating Layer mnist
I0428 19:44:59.396859 25715 net.cpp:382] mnist -> data
I0428 19:44:59.396883 25715 net.cpp:382] mnist -> label
I0428 19:44:59.397974 25715 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:44:59.400445 25715 net.cpp:124] Setting up mnist
I0428 19:44:59.400462 25715 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:44:59.400468 25715 net.cpp:131] Top shape: 64 (64)
I0428 19:44:59.400471 25715 net.cpp:139] Memory required for data: 200960
I0428 19:44:59.400478 25715 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:59.400519 25715 net.cpp:86] Creating Layer conv0
I0428 19:44:59.400543 25715 net.cpp:408] conv0 <- data
I0428 19:44:59.400557 25715 net.cpp:382] conv0 -> conv0
I0428 19:44:59.641810 25715 net.cpp:124] Setting up conv0
I0428 19:44:59.641852 25715 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:44:59.641856 25715 net.cpp:139] Memory required for data: 495872
I0428 19:44:59.641871 25715 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:59.641883 25715 net.cpp:86] Creating Layer pool0
I0428 19:44:59.641887 25715 net.cpp:408] pool0 <- conv0
I0428 19:44:59.641892 25715 net.cpp:382] pool0 -> pool0
I0428 19:44:59.641973 25715 net.cpp:124] Setting up pool0
I0428 19:44:59.641983 25715 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:44:59.641986 25715 net.cpp:139] Memory required for data: 569600
I0428 19:44:59.641990 25715 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:59.642019 25715 net.cpp:86] Creating Layer conv1
I0428 19:44:59.642024 25715 net.cpp:408] conv1 <- pool0
I0428 19:44:59.642030 25715 net.cpp:382] conv1 -> conv1
I0428 19:44:59.644752 25715 net.cpp:124] Setting up conv1
I0428 19:44:59.644768 25715 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:44:59.644773 25715 net.cpp:139] Memory required for data: 1388800
I0428 19:44:59.644785 25715 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:59.644834 25715 net.cpp:86] Creating Layer pool1
I0428 19:44:59.644839 25715 net.cpp:408] pool1 <- conv1
I0428 19:44:59.644843 25715 net.cpp:382] pool1 -> pool1
I0428 19:44:59.644898 25715 net.cpp:124] Setting up pool1
I0428 19:44:59.644922 25715 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:44:59.644940 25715 net.cpp:139] Memory required for data: 1593600
I0428 19:44:59.644943 25715 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:59.644966 25715 net.cpp:86] Creating Layer ip1
I0428 19:44:59.644969 25715 net.cpp:408] ip1 <- pool1
I0428 19:44:59.644974 25715 net.cpp:382] ip1 -> ip1
I0428 19:44:59.645386 25715 net.cpp:124] Setting up ip1
I0428 19:44:59.645392 25715 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:44:59.645411 25715 net.cpp:139] Memory required for data: 1606400
I0428 19:44:59.645418 25715 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:59.645424 25715 net.cpp:86] Creating Layer relu1
I0428 19:44:59.645427 25715 net.cpp:408] relu1 <- ip1
I0428 19:44:59.645431 25715 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:59.645599 25715 net.cpp:124] Setting up relu1
I0428 19:44:59.645607 25715 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:44:59.645611 25715 net.cpp:139] Memory required for data: 1619200
I0428 19:44:59.645613 25715 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:59.645618 25715 net.cpp:86] Creating Layer ip2
I0428 19:44:59.645622 25715 net.cpp:408] ip2 <- ip1
I0428 19:44:59.645627 25715 net.cpp:382] ip2 -> ip2
I0428 19:44:59.645745 25715 net.cpp:124] Setting up ip2
I0428 19:44:59.645752 25715 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:59.645756 25715 net.cpp:139] Memory required for data: 1621760
I0428 19:44:59.645761 25715 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:59.645766 25715 net.cpp:86] Creating Layer relu2
I0428 19:44:59.645769 25715 net.cpp:408] relu2 <- ip2
I0428 19:44:59.645773 25715 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:59.646522 25715 net.cpp:124] Setting up relu2
I0428 19:44:59.646533 25715 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:59.646551 25715 net.cpp:139] Memory required for data: 1624320
I0428 19:44:59.646554 25715 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:59.646561 25715 net.cpp:86] Creating Layer ip3
I0428 19:44:59.646564 25715 net.cpp:408] ip3 <- ip2
I0428 19:44:59.646570 25715 net.cpp:382] ip3 -> ip3
I0428 19:44:59.646664 25715 net.cpp:124] Setting up ip3
I0428 19:44:59.646672 25715 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:59.646675 25715 net.cpp:139] Memory required for data: 1626880
I0428 19:44:59.646682 25715 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:59.646687 25715 net.cpp:86] Creating Layer relu3
I0428 19:44:59.646690 25715 net.cpp:408] relu3 <- ip3
I0428 19:44:59.646694 25715 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:59.646847 25715 net.cpp:124] Setting up relu3
I0428 19:44:59.646857 25715 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:59.646859 25715 net.cpp:139] Memory required for data: 1629440
I0428 19:44:59.646862 25715 layer_factory.hpp:77] Creating layer loss
I0428 19:44:59.646868 25715 net.cpp:86] Creating Layer loss
I0428 19:44:59.646872 25715 net.cpp:408] loss <- ip3
I0428 19:44:59.646875 25715 net.cpp:408] loss <- label
I0428 19:44:59.646880 25715 net.cpp:382] loss -> loss
I0428 19:44:59.646896 25715 layer_factory.hpp:77] Creating layer loss
I0428 19:44:59.647125 25715 net.cpp:124] Setting up loss
I0428 19:44:59.647135 25715 net.cpp:131] Top shape: (1)
I0428 19:44:59.647152 25715 net.cpp:134]     with loss weight 1
I0428 19:44:59.647167 25715 net.cpp:139] Memory required for data: 1629444
I0428 19:44:59.647171 25715 net.cpp:200] loss needs backward computation.
I0428 19:44:59.647174 25715 net.cpp:200] relu3 needs backward computation.
I0428 19:44:59.647177 25715 net.cpp:200] ip3 needs backward computation.
I0428 19:44:59.647181 25715 net.cpp:200] relu2 needs backward computation.
I0428 19:44:59.647183 25715 net.cpp:200] ip2 needs backward computation.
I0428 19:44:59.647186 25715 net.cpp:200] relu1 needs backward computation.
I0428 19:44:59.647188 25715 net.cpp:200] ip1 needs backward computation.
I0428 19:44:59.647192 25715 net.cpp:200] pool1 needs backward computation.
I0428 19:44:59.647195 25715 net.cpp:200] conv1 needs backward computation.
I0428 19:44:59.647198 25715 net.cpp:200] pool0 needs backward computation.
I0428 19:44:59.647202 25715 net.cpp:200] conv0 needs backward computation.
I0428 19:44:59.647204 25715 net.cpp:202] mnist does not need backward computation.
I0428 19:44:59.647207 25715 net.cpp:244] This network produces output loss
I0428 19:44:59.647217 25715 net.cpp:257] Network initialization done.
I0428 19:44:59.647578 25715 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test461.prototxt
I0428 19:44:59.647631 25715 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:44:59.647717 25715 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:59.647791 25715 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:59.647833 25715 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:44:59.647845 25715 net.cpp:86] Creating Layer mnist
I0428 19:44:59.647850 25715 net.cpp:382] mnist -> data
I0428 19:44:59.647856 25715 net.cpp:382] mnist -> label
I0428 19:44:59.647934 25715 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:44:59.650009 25715 net.cpp:124] Setting up mnist
I0428 19:44:59.650037 25715 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:44:59.650041 25715 net.cpp:131] Top shape: 100 (100)
I0428 19:44:59.650044 25715 net.cpp:139] Memory required for data: 314000
I0428 19:44:59.650048 25715 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:44:59.650071 25715 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:44:59.650075 25715 net.cpp:408] label_mnist_1_split <- label
I0428 19:44:59.650080 25715 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:44:59.650086 25715 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:44:59.650135 25715 net.cpp:124] Setting up label_mnist_1_split
I0428 19:44:59.650140 25715 net.cpp:131] Top shape: 100 (100)
I0428 19:44:59.650143 25715 net.cpp:131] Top shape: 100 (100)
I0428 19:44:59.650146 25715 net.cpp:139] Memory required for data: 314800
I0428 19:44:59.650148 25715 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:59.650156 25715 net.cpp:86] Creating Layer conv0
I0428 19:44:59.650159 25715 net.cpp:408] conv0 <- data
I0428 19:44:59.650164 25715 net.cpp:382] conv0 -> conv0
I0428 19:44:59.651862 25715 net.cpp:124] Setting up conv0
I0428 19:44:59.651891 25715 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:44:59.651895 25715 net.cpp:139] Memory required for data: 775600
I0428 19:44:59.651903 25715 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:59.651909 25715 net.cpp:86] Creating Layer pool0
I0428 19:44:59.651912 25715 net.cpp:408] pool0 <- conv0
I0428 19:44:59.651917 25715 net.cpp:382] pool0 -> pool0
I0428 19:44:59.651952 25715 net.cpp:124] Setting up pool0
I0428 19:44:59.651957 25715 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:44:59.651959 25715 net.cpp:139] Memory required for data: 890800
I0428 19:44:59.651962 25715 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:59.651970 25715 net.cpp:86] Creating Layer conv1
I0428 19:44:59.651973 25715 net.cpp:408] conv1 <- pool0
I0428 19:44:59.651978 25715 net.cpp:382] conv1 -> conv1
I0428 19:44:59.653530 25715 net.cpp:124] Setting up conv1
I0428 19:44:59.653543 25715 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:44:59.653565 25715 net.cpp:139] Memory required for data: 2170800
I0428 19:44:59.653573 25715 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:59.653581 25715 net.cpp:86] Creating Layer pool1
I0428 19:44:59.653585 25715 net.cpp:408] pool1 <- conv1
I0428 19:44:59.653590 25715 net.cpp:382] pool1 -> pool1
I0428 19:44:59.653625 25715 net.cpp:124] Setting up pool1
I0428 19:44:59.653630 25715 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:44:59.653633 25715 net.cpp:139] Memory required for data: 2490800
I0428 19:44:59.653636 25715 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:59.653641 25715 net.cpp:86] Creating Layer ip1
I0428 19:44:59.653645 25715 net.cpp:408] ip1 <- pool1
I0428 19:44:59.653650 25715 net.cpp:382] ip1 -> ip1
I0428 19:44:59.654028 25715 net.cpp:124] Setting up ip1
I0428 19:44:59.654036 25715 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:44:59.654068 25715 net.cpp:139] Memory required for data: 2510800
I0428 19:44:59.654076 25715 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:59.654080 25715 net.cpp:86] Creating Layer relu1
I0428 19:44:59.654084 25715 net.cpp:408] relu1 <- ip1
I0428 19:44:59.654088 25715 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:59.654268 25715 net.cpp:124] Setting up relu1
I0428 19:44:59.654276 25715 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:44:59.654279 25715 net.cpp:139] Memory required for data: 2530800
I0428 19:44:59.654284 25715 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:59.654290 25715 net.cpp:86] Creating Layer ip2
I0428 19:44:59.654294 25715 net.cpp:408] ip2 <- ip1
I0428 19:44:59.654299 25715 net.cpp:382] ip2 -> ip2
I0428 19:44:59.654410 25715 net.cpp:124] Setting up ip2
I0428 19:44:59.654417 25715 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:59.654420 25715 net.cpp:139] Memory required for data: 2534800
I0428 19:44:59.654425 25715 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:59.654430 25715 net.cpp:86] Creating Layer relu2
I0428 19:44:59.654433 25715 net.cpp:408] relu2 <- ip2
I0428 19:44:59.654438 25715 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:59.654678 25715 net.cpp:124] Setting up relu2
I0428 19:44:59.654687 25715 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:59.654691 25715 net.cpp:139] Memory required for data: 2538800
I0428 19:44:59.654695 25715 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:59.654700 25715 net.cpp:86] Creating Layer ip3
I0428 19:44:59.654702 25715 net.cpp:408] ip3 <- ip2
I0428 19:44:59.654713 25715 net.cpp:382] ip3 -> ip3
I0428 19:44:59.654820 25715 net.cpp:124] Setting up ip3
I0428 19:44:59.654827 25715 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:59.654831 25715 net.cpp:139] Memory required for data: 2542800
I0428 19:44:59.654839 25715 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:59.654844 25715 net.cpp:86] Creating Layer relu3
I0428 19:44:59.654847 25715 net.cpp:408] relu3 <- ip3
I0428 19:44:59.654851 25715 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:59.655683 25715 net.cpp:124] Setting up relu3
I0428 19:44:59.655694 25715 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:59.655712 25715 net.cpp:139] Memory required for data: 2546800
I0428 19:44:59.655715 25715 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:44:59.655721 25715 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:44:59.655725 25715 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:44:59.655730 25715 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:44:59.655735 25715 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:44:59.655773 25715 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:44:59.655778 25715 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:59.655781 25715 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:59.655784 25715 net.cpp:139] Memory required for data: 2554800
I0428 19:44:59.655787 25715 layer_factory.hpp:77] Creating layer accuracy
I0428 19:44:59.655791 25715 net.cpp:86] Creating Layer accuracy
I0428 19:44:59.655794 25715 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:44:59.655798 25715 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:44:59.655802 25715 net.cpp:382] accuracy -> accuracy
I0428 19:44:59.655808 25715 net.cpp:124] Setting up accuracy
I0428 19:44:59.655812 25715 net.cpp:131] Top shape: (1)
I0428 19:44:59.655814 25715 net.cpp:139] Memory required for data: 2554804
I0428 19:44:59.655817 25715 layer_factory.hpp:77] Creating layer loss
I0428 19:44:59.655822 25715 net.cpp:86] Creating Layer loss
I0428 19:44:59.655823 25715 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:44:59.655827 25715 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:44:59.655831 25715 net.cpp:382] loss -> loss
I0428 19:44:59.655836 25715 layer_factory.hpp:77] Creating layer loss
I0428 19:44:59.656085 25715 net.cpp:124] Setting up loss
I0428 19:44:59.656093 25715 net.cpp:131] Top shape: (1)
I0428 19:44:59.656097 25715 net.cpp:134]     with loss weight 1
I0428 19:44:59.656103 25715 net.cpp:139] Memory required for data: 2554808
I0428 19:44:59.656116 25715 net.cpp:200] loss needs backward computation.
I0428 19:44:59.656121 25715 net.cpp:202] accuracy does not need backward computation.
I0428 19:44:59.656126 25715 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:44:59.656128 25715 net.cpp:200] relu3 needs backward computation.
I0428 19:44:59.656131 25715 net.cpp:200] ip3 needs backward computation.
I0428 19:44:59.656134 25715 net.cpp:200] relu2 needs backward computation.
I0428 19:44:59.656137 25715 net.cpp:200] ip2 needs backward computation.
I0428 19:44:59.656141 25715 net.cpp:200] relu1 needs backward computation.
I0428 19:44:59.656143 25715 net.cpp:200] ip1 needs backward computation.
I0428 19:44:59.656147 25715 net.cpp:200] pool1 needs backward computation.
I0428 19:44:59.656150 25715 net.cpp:200] conv1 needs backward computation.
I0428 19:44:59.656153 25715 net.cpp:200] pool0 needs backward computation.
I0428 19:44:59.656157 25715 net.cpp:200] conv0 needs backward computation.
I0428 19:44:59.656160 25715 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:44:59.656164 25715 net.cpp:202] mnist does not need backward computation.
I0428 19:44:59.656167 25715 net.cpp:244] This network produces output accuracy
I0428 19:44:59.656170 25715 net.cpp:244] This network produces output loss
I0428 19:44:59.656196 25715 net.cpp:257] Network initialization done.
I0428 19:44:59.656236 25715 solver.cpp:56] Solver scaffolding done.
I0428 19:44:59.656571 25715 caffe.cpp:248] Starting Optimization
I0428 19:44:59.656577 25715 solver.cpp:273] Solving LeNet
I0428 19:44:59.656579 25715 solver.cpp:274] Learning Rate Policy: inv
I0428 19:44:59.657464 25715 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:44:59.661054 25715 blocking_queue.cpp:49] Waiting for data
I0428 19:44:59.736171 25722 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:59.736670 25715 solver.cpp:398]     Test net output #0: accuracy = 0.0943
I0428 19:44:59.736706 25715 solver.cpp:398]     Test net output #1: loss = 2.31109 (* 1 = 2.31109 loss)
I0428 19:44:59.739310 25715 solver.cpp:219] Iteration 0 (-4.53935e-31 iter/s, 0.0826911s/100 iters), loss = 2.32225
I0428 19:44:59.739349 25715 solver.cpp:238]     Train net output #0: loss = 2.32225 (* 1 = 2.32225 loss)
I0428 19:44:59.739377 25715 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:44:59.847534 25715 solver.cpp:219] Iteration 100 (924.443 iter/s, 0.108173s/100 iters), loss = 1.67139
I0428 19:44:59.847576 25715 solver.cpp:238]     Train net output #0: loss = 1.67139 (* 1 = 1.67139 loss)
I0428 19:44:59.847584 25715 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:44:59.951340 25715 solver.cpp:219] Iteration 200 (963.677 iter/s, 0.103769s/100 iters), loss = 1.53157
I0428 19:44:59.951378 25715 solver.cpp:238]     Train net output #0: loss = 1.53157 (* 1 = 1.53157 loss)
I0428 19:44:59.951385 25715 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:00.054045 25715 solver.cpp:219] Iteration 300 (974.117 iter/s, 0.102657s/100 iters), loss = 1.2794
I0428 19:45:00.054082 25715 solver.cpp:238]     Train net output #0: loss = 1.2794 (* 1 = 1.2794 loss)
I0428 19:45:00.054090 25715 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:00.157116 25715 solver.cpp:219] Iteration 400 (970.516 iter/s, 0.103038s/100 iters), loss = 1.03621
I0428 19:45:00.157157 25715 solver.cpp:238]     Train net output #0: loss = 1.03621 (* 1 = 1.03621 loss)
I0428 19:45:00.157165 25715 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:00.260002 25715 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:00.336475 25722 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:00.337010 25715 solver.cpp:398]     Test net output #0: accuracy = 0.4788
I0428 19:45:00.337049 25715 solver.cpp:398]     Test net output #1: loss = 1.28248 (* 1 = 1.28248 loss)
I0428 19:45:00.338172 25715 solver.cpp:219] Iteration 500 (552.485 iter/s, 0.181s/100 iters), loss = 1.27907
I0428 19:45:00.338220 25715 solver.cpp:238]     Train net output #0: loss = 1.27907 (* 1 = 1.27907 loss)
I0428 19:45:00.338243 25715 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:00.449805 25715 solver.cpp:219] Iteration 600 (896.257 iter/s, 0.111575s/100 iters), loss = 1.32762
I0428 19:45:00.449847 25715 solver.cpp:238]     Train net output #0: loss = 1.32762 (* 1 = 1.32762 loss)
I0428 19:45:00.449854 25715 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:00.564829 25715 solver.cpp:219] Iteration 700 (869.774 iter/s, 0.114972s/100 iters), loss = 1.34997
I0428 19:45:00.564868 25715 solver.cpp:238]     Train net output #0: loss = 1.34997 (* 1 = 1.34997 loss)
I0428 19:45:00.564894 25715 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:00.675621 25715 solver.cpp:219] Iteration 800 (902.979 iter/s, 0.110745s/100 iters), loss = 1.27254
I0428 19:45:00.675650 25715 solver.cpp:238]     Train net output #0: loss = 1.27254 (* 1 = 1.27254 loss)
I0428 19:45:00.675657 25715 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:00.779518 25715 solver.cpp:219] Iteration 900 (962.852 iter/s, 0.103858s/100 iters), loss = 1.19227
I0428 19:45:00.779559 25715 solver.cpp:238]     Train net output #0: loss = 1.19227 (* 1 = 1.19227 loss)
I0428 19:45:00.779567 25715 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:00.813972 25721 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:00.881939 25715 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:00.883572 25715 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:00.884331 25715 solver.cpp:311] Iteration 1000, loss = 1.32836
I0428 19:45:00.884346 25715 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:00.958046 25722 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:00.958571 25715 solver.cpp:398]     Test net output #0: accuracy = 0.4874
I0428 19:45:00.958590 25715 solver.cpp:398]     Test net output #1: loss = 1.22616 (* 1 = 1.22616 loss)
I0428 19:45:00.958611 25715 solver.cpp:316] Optimization Done.
I0428 19:45:00.958614 25715 caffe.cpp:259] Optimization Done.
