I0428 20:23:33.277766  2256 caffe.cpp:218] Using GPUs 0
I0428 20:23:33.309785  2256 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:33.802544  2256 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1423.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:33.802678  2256 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1423.prototxt
I0428 20:23:33.803016  2256 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:33.803045  2256 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:33.803122  2256 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:33.803182  2256 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:33.803278  2256 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:33.803298  2256 net.cpp:86] Creating Layer mnist
I0428 20:23:33.803304  2256 net.cpp:382] mnist -> data
I0428 20:23:33.803323  2256 net.cpp:382] mnist -> label
I0428 20:23:33.804276  2256 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:33.806533  2256 net.cpp:124] Setting up mnist
I0428 20:23:33.806548  2256 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:33.806555  2256 net.cpp:131] Top shape: 64 (64)
I0428 20:23:33.806557  2256 net.cpp:139] Memory required for data: 200960
I0428 20:23:33.806563  2256 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:33.806576  2256 net.cpp:86] Creating Layer conv0
I0428 20:23:33.806593  2256 net.cpp:408] conv0 <- data
I0428 20:23:33.806603  2256 net.cpp:382] conv0 -> conv0
I0428 20:23:34.046031  2256 net.cpp:124] Setting up conv0
I0428 20:23:34.046072  2256 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:34.046077  2256 net.cpp:139] Memory required for data: 7573760
I0428 20:23:34.046092  2256 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:34.046121  2256 net.cpp:86] Creating Layer pool0
I0428 20:23:34.046126  2256 net.cpp:408] pool0 <- conv0
I0428 20:23:34.046131  2256 net.cpp:382] pool0 -> pool0
I0428 20:23:34.046180  2256 net.cpp:124] Setting up pool0
I0428 20:23:34.046186  2256 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:34.046190  2256 net.cpp:139] Memory required for data: 9416960
I0428 20:23:34.046192  2256 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:34.046218  2256 net.cpp:86] Creating Layer conv1
I0428 20:23:34.046223  2256 net.cpp:408] conv1 <- pool0
I0428 20:23:34.046228  2256 net.cpp:382] conv1 -> conv1
I0428 20:23:34.049805  2256 net.cpp:124] Setting up conv1
I0428 20:23:34.049834  2256 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:34.049839  2256 net.cpp:139] Memory required for data: 11055360
I0428 20:23:34.049846  2256 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:34.049855  2256 net.cpp:86] Creating Layer pool1
I0428 20:23:34.049859  2256 net.cpp:408] pool1 <- conv1
I0428 20:23:34.049865  2256 net.cpp:382] pool1 -> pool1
I0428 20:23:34.049916  2256 net.cpp:124] Setting up pool1
I0428 20:23:34.049921  2256 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:34.049923  2256 net.cpp:139] Memory required for data: 11464960
I0428 20:23:34.049926  2256 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:34.049933  2256 net.cpp:86] Creating Layer ip1
I0428 20:23:34.049944  2256 net.cpp:408] ip1 <- pool1
I0428 20:23:34.049948  2256 net.cpp:382] ip1 -> ip1
I0428 20:23:34.051038  2256 net.cpp:124] Setting up ip1
I0428 20:23:34.051049  2256 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:34.051054  2256 net.cpp:139] Memory required for data: 11467520
I0428 20:23:34.051075  2256 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:34.051084  2256 net.cpp:86] Creating Layer relu1
I0428 20:23:34.051086  2256 net.cpp:408] relu1 <- ip1
I0428 20:23:34.051091  2256 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:34.051291  2256 net.cpp:124] Setting up relu1
I0428 20:23:34.051301  2256 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:34.051303  2256 net.cpp:139] Memory required for data: 11470080
I0428 20:23:34.051307  2256 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:34.051316  2256 net.cpp:86] Creating Layer ip2
I0428 20:23:34.051318  2256 net.cpp:408] ip2 <- ip1
I0428 20:23:34.051324  2256 net.cpp:382] ip2 -> ip2
I0428 20:23:34.051448  2256 net.cpp:124] Setting up ip2
I0428 20:23:34.051457  2256 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:34.051460  2256 net.cpp:139] Memory required for data: 11482880
I0428 20:23:34.051466  2256 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:34.051472  2256 net.cpp:86] Creating Layer relu2
I0428 20:23:34.051476  2256 net.cpp:408] relu2 <- ip2
I0428 20:23:34.051481  2256 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:34.052281  2256 net.cpp:124] Setting up relu2
I0428 20:23:34.052294  2256 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:34.052297  2256 net.cpp:139] Memory required for data: 11495680
I0428 20:23:34.052300  2256 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:34.052309  2256 net.cpp:86] Creating Layer ip3
I0428 20:23:34.052312  2256 net.cpp:408] ip3 <- ip2
I0428 20:23:34.052320  2256 net.cpp:382] ip3 -> ip3
I0428 20:23:34.052424  2256 net.cpp:124] Setting up ip3
I0428 20:23:34.052433  2256 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:34.052434  2256 net.cpp:139] Memory required for data: 11498240
I0428 20:23:34.052443  2256 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:34.052448  2256 net.cpp:86] Creating Layer relu3
I0428 20:23:34.052450  2256 net.cpp:408] relu3 <- ip3
I0428 20:23:34.052459  2256 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:34.052670  2256 net.cpp:124] Setting up relu3
I0428 20:23:34.052680  2256 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:34.052683  2256 net.cpp:139] Memory required for data: 11500800
I0428 20:23:34.052686  2256 layer_factory.hpp:77] Creating layer loss
I0428 20:23:34.052692  2256 net.cpp:86] Creating Layer loss
I0428 20:23:34.052696  2256 net.cpp:408] loss <- ip3
I0428 20:23:34.052700  2256 net.cpp:408] loss <- label
I0428 20:23:34.052706  2256 net.cpp:382] loss -> loss
I0428 20:23:34.052721  2256 layer_factory.hpp:77] Creating layer loss
I0428 20:23:34.053047  2256 net.cpp:124] Setting up loss
I0428 20:23:34.053057  2256 net.cpp:131] Top shape: (1)
I0428 20:23:34.053061  2256 net.cpp:134]     with loss weight 1
I0428 20:23:34.053076  2256 net.cpp:139] Memory required for data: 11500804
I0428 20:23:34.053081  2256 net.cpp:200] loss needs backward computation.
I0428 20:23:34.053084  2256 net.cpp:200] relu3 needs backward computation.
I0428 20:23:34.053087  2256 net.cpp:200] ip3 needs backward computation.
I0428 20:23:34.053091  2256 net.cpp:200] relu2 needs backward computation.
I0428 20:23:34.053093  2256 net.cpp:200] ip2 needs backward computation.
I0428 20:23:34.053097  2256 net.cpp:200] relu1 needs backward computation.
I0428 20:23:34.053099  2256 net.cpp:200] ip1 needs backward computation.
I0428 20:23:34.053102  2256 net.cpp:200] pool1 needs backward computation.
I0428 20:23:34.053105  2256 net.cpp:200] conv1 needs backward computation.
I0428 20:23:34.053108  2256 net.cpp:200] pool0 needs backward computation.
I0428 20:23:34.053112  2256 net.cpp:200] conv0 needs backward computation.
I0428 20:23:34.053115  2256 net.cpp:202] mnist does not need backward computation.
I0428 20:23:34.053118  2256 net.cpp:244] This network produces output loss
I0428 20:23:34.053143  2256 net.cpp:257] Network initialization done.
I0428 20:23:34.053495  2256 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1423.prototxt
I0428 20:23:34.053529  2256 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:34.053645  2256 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:34.053735  2256 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:34.053781  2256 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:34.053792  2256 net.cpp:86] Creating Layer mnist
I0428 20:23:34.053797  2256 net.cpp:382] mnist -> data
I0428 20:23:34.053805  2256 net.cpp:382] mnist -> label
I0428 20:23:34.053926  2256 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:34.055037  2256 net.cpp:124] Setting up mnist
I0428 20:23:34.055063  2256 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:34.055068  2256 net.cpp:131] Top shape: 100 (100)
I0428 20:23:34.055070  2256 net.cpp:139] Memory required for data: 314000
I0428 20:23:34.055073  2256 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:34.055105  2256 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:34.055109  2256 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:34.055115  2256 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:34.055124  2256 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:34.055171  2256 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:34.055177  2256 net.cpp:131] Top shape: 100 (100)
I0428 20:23:34.055181  2256 net.cpp:131] Top shape: 100 (100)
I0428 20:23:34.055184  2256 net.cpp:139] Memory required for data: 314800
I0428 20:23:34.055187  2256 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:34.055197  2256 net.cpp:86] Creating Layer conv0
I0428 20:23:34.055200  2256 net.cpp:408] conv0 <- data
I0428 20:23:34.055207  2256 net.cpp:382] conv0 -> conv0
I0428 20:23:34.057391  2256 net.cpp:124] Setting up conv0
I0428 20:23:34.057415  2256 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:34.057422  2256 net.cpp:139] Memory required for data: 11834800
I0428 20:23:34.057449  2256 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:34.057459  2256 net.cpp:86] Creating Layer pool0
I0428 20:23:34.057469  2256 net.cpp:408] pool0 <- conv0
I0428 20:23:34.057478  2256 net.cpp:382] pool0 -> pool0
I0428 20:23:34.057541  2256 net.cpp:124] Setting up pool0
I0428 20:23:34.057555  2256 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:34.057561  2256 net.cpp:139] Memory required for data: 14714800
I0428 20:23:34.057567  2256 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:34.057585  2256 net.cpp:86] Creating Layer conv1
I0428 20:23:34.057596  2256 net.cpp:408] conv1 <- pool0
I0428 20:23:34.057607  2256 net.cpp:382] conv1 -> conv1
I0428 20:23:34.062067  2256 net.cpp:124] Setting up conv1
I0428 20:23:34.062086  2256 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:34.062093  2256 net.cpp:139] Memory required for data: 17274800
I0428 20:23:34.062121  2256 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:34.062134  2256 net.cpp:86] Creating Layer pool1
I0428 20:23:34.062142  2256 net.cpp:408] pool1 <- conv1
I0428 20:23:34.062150  2256 net.cpp:382] pool1 -> pool1
I0428 20:23:34.062208  2256 net.cpp:124] Setting up pool1
I0428 20:23:34.062218  2256 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:34.062225  2256 net.cpp:139] Memory required for data: 17914800
I0428 20:23:34.062230  2256 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:34.062239  2256 net.cpp:86] Creating Layer ip1
I0428 20:23:34.062247  2256 net.cpp:408] ip1 <- pool1
I0428 20:23:34.062255  2256 net.cpp:382] ip1 -> ip1
I0428 20:23:34.062563  2256 net.cpp:124] Setting up ip1
I0428 20:23:34.062594  2256 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:34.062602  2256 net.cpp:139] Memory required for data: 17918800
I0428 20:23:34.062615  2256 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:34.062625  2256 net.cpp:86] Creating Layer relu1
I0428 20:23:34.062633  2256 net.cpp:408] relu1 <- ip1
I0428 20:23:34.062640  2256 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:34.062891  2256 net.cpp:124] Setting up relu1
I0428 20:23:34.062903  2256 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:34.062911  2256 net.cpp:139] Memory required for data: 17922800
I0428 20:23:34.062916  2256 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:34.062927  2256 net.cpp:86] Creating Layer ip2
I0428 20:23:34.062933  2256 net.cpp:408] ip2 <- ip1
I0428 20:23:34.062943  2256 net.cpp:382] ip2 -> ip2
I0428 20:23:34.063123  2256 net.cpp:124] Setting up ip2
I0428 20:23:34.063134  2256 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:34.063141  2256 net.cpp:139] Memory required for data: 17942800
I0428 20:23:34.063151  2256 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:34.063160  2256 net.cpp:86] Creating Layer relu2
I0428 20:23:34.063166  2256 net.cpp:408] relu2 <- ip2
I0428 20:23:34.063176  2256 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:34.063444  2256 net.cpp:124] Setting up relu2
I0428 20:23:34.063475  2256 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:34.063482  2256 net.cpp:139] Memory required for data: 17962800
I0428 20:23:34.063488  2256 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:34.063500  2256 net.cpp:86] Creating Layer ip3
I0428 20:23:34.063508  2256 net.cpp:408] ip3 <- ip2
I0428 20:23:34.063515  2256 net.cpp:382] ip3 -> ip3
I0428 20:23:34.063679  2256 net.cpp:124] Setting up ip3
I0428 20:23:34.063690  2256 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:34.063696  2256 net.cpp:139] Memory required for data: 17966800
I0428 20:23:34.063709  2256 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:34.063720  2256 net.cpp:86] Creating Layer relu3
I0428 20:23:34.063729  2256 net.cpp:408] relu3 <- ip3
I0428 20:23:34.063735  2256 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:34.064826  2256 net.cpp:124] Setting up relu3
I0428 20:23:34.064848  2256 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:34.064857  2256 net.cpp:139] Memory required for data: 17970800
I0428 20:23:34.064864  2256 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:34.064875  2256 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:34.064883  2256 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:34.064893  2256 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:34.064904  2256 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:34.064972  2256 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:34.064985  2256 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:34.064995  2256 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:34.065001  2256 net.cpp:139] Memory required for data: 17978800
I0428 20:23:34.065006  2256 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:34.065016  2256 net.cpp:86] Creating Layer accuracy
I0428 20:23:34.065023  2256 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:34.065032  2256 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:34.065042  2256 net.cpp:382] accuracy -> accuracy
I0428 20:23:34.065057  2256 net.cpp:124] Setting up accuracy
I0428 20:23:34.065068  2256 net.cpp:131] Top shape: (1)
I0428 20:23:34.065074  2256 net.cpp:139] Memory required for data: 17978804
I0428 20:23:34.065079  2256 layer_factory.hpp:77] Creating layer loss
I0428 20:23:34.065088  2256 net.cpp:86] Creating Layer loss
I0428 20:23:34.065095  2256 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:34.065101  2256 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:34.065110  2256 net.cpp:382] loss -> loss
I0428 20:23:34.065122  2256 layer_factory.hpp:77] Creating layer loss
I0428 20:23:34.065529  2256 net.cpp:124] Setting up loss
I0428 20:23:34.065542  2256 net.cpp:131] Top shape: (1)
I0428 20:23:34.065551  2256 net.cpp:134]     with loss weight 1
I0428 20:23:34.065592  2256 net.cpp:139] Memory required for data: 17978808
I0428 20:23:34.065598  2256 net.cpp:200] loss needs backward computation.
I0428 20:23:34.065605  2256 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:34.065613  2256 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:34.065619  2256 net.cpp:200] relu3 needs backward computation.
I0428 20:23:34.065624  2256 net.cpp:200] ip3 needs backward computation.
I0428 20:23:34.065629  2256 net.cpp:200] relu2 needs backward computation.
I0428 20:23:34.065634  2256 net.cpp:200] ip2 needs backward computation.
I0428 20:23:34.065640  2256 net.cpp:200] relu1 needs backward computation.
I0428 20:23:34.065645  2256 net.cpp:200] ip1 needs backward computation.
I0428 20:23:34.065651  2256 net.cpp:200] pool1 needs backward computation.
I0428 20:23:34.065659  2256 net.cpp:200] conv1 needs backward computation.
I0428 20:23:34.065665  2256 net.cpp:200] pool0 needs backward computation.
I0428 20:23:34.065670  2256 net.cpp:200] conv0 needs backward computation.
I0428 20:23:34.065677  2256 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:34.065685  2256 net.cpp:202] mnist does not need backward computation.
I0428 20:23:34.065690  2256 net.cpp:244] This network produces output accuracy
I0428 20:23:34.065696  2256 net.cpp:244] This network produces output loss
I0428 20:23:34.065716  2256 net.cpp:257] Network initialization done.
I0428 20:23:34.065786  2256 solver.cpp:56] Solver scaffolding done.
I0428 20:23:34.066346  2256 caffe.cpp:248] Starting Optimization
I0428 20:23:34.066360  2256 solver.cpp:273] Solving LeNet
I0428 20:23:34.066365  2256 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:34.067414  2256 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:34.156548  2263 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:34.159615  2256 solver.cpp:398]     Test net output #0: accuracy = 0.1023
I0428 20:23:34.159636  2256 solver.cpp:398]     Test net output #1: loss = 2.30136 (* 1 = 2.30136 loss)
I0428 20:23:34.165156  2256 solver.cpp:219] Iteration 0 (-8.3517e-31 iter/s, 0.0987464s/100 iters), loss = 2.30516
I0428 20:23:34.165181  2256 solver.cpp:238]     Train net output #0: loss = 2.30516 (* 1 = 2.30516 loss)
I0428 20:23:34.165211  2256 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:34.385336  2256 solver.cpp:219] Iteration 100 (454.291 iter/s, 0.220123s/100 iters), loss = 1.10932
I0428 20:23:34.385370  2256 solver.cpp:238]     Train net output #0: loss = 1.10932 (* 1 = 1.10932 loss)
I0428 20:23:34.385380  2256 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:34.596370  2256 solver.cpp:219] Iteration 200 (473.967 iter/s, 0.210985s/100 iters), loss = 0.424475
I0428 20:23:34.596395  2256 solver.cpp:238]     Train net output #0: loss = 0.424475 (* 1 = 0.424475 loss)
I0428 20:23:34.596402  2256 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:34.812432  2256 solver.cpp:219] Iteration 300 (462.923 iter/s, 0.216019s/100 iters), loss = 0.747862
I0428 20:23:34.812469  2256 solver.cpp:238]     Train net output #0: loss = 0.747862 (* 1 = 0.747862 loss)
I0428 20:23:34.812479  2256 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:35.038048  2256 solver.cpp:219] Iteration 400 (443.334 iter/s, 0.225564s/100 iters), loss = 0.743861
I0428 20:23:35.038081  2256 solver.cpp:238]     Train net output #0: loss = 0.743861 (* 1 = 0.743861 loss)
I0428 20:23:35.038090  2256 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:35.261920  2256 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:35.352113  2263 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:35.355324  2256 solver.cpp:398]     Test net output #0: accuracy = 0.8653
I0428 20:23:35.355350  2256 solver.cpp:398]     Test net output #1: loss = 0.369822 (* 1 = 0.369822 loss)
I0428 20:23:35.357451  2256 solver.cpp:219] Iteration 500 (313.137 iter/s, 0.319349s/100 iters), loss = 0.506211
I0428 20:23:35.357480  2256 solver.cpp:238]     Train net output #0: loss = 0.506211 (* 1 = 0.506211 loss)
I0428 20:23:35.357504  2256 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:35.584883  2256 solver.cpp:219] Iteration 600 (439.78 iter/s, 0.227386s/100 iters), loss = 0.182188
I0428 20:23:35.584914  2256 solver.cpp:238]     Train net output #0: loss = 0.182188 (* 1 = 0.182188 loss)
I0428 20:23:35.584923  2256 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:35.808300  2256 solver.cpp:219] Iteration 700 (447.687 iter/s, 0.22337s/100 iters), loss = 0.335221
I0428 20:23:35.808326  2256 solver.cpp:238]     Train net output #0: loss = 0.335221 (* 1 = 0.335221 loss)
I0428 20:23:35.808333  2256 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:36.021854  2256 solver.cpp:219] Iteration 800 (468.364 iter/s, 0.213509s/100 iters), loss = 0.35937
I0428 20:23:36.021891  2256 solver.cpp:238]     Train net output #0: loss = 0.359371 (* 1 = 0.359371 loss)
I0428 20:23:36.021901  2256 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:36.245029  2256 solver.cpp:219] Iteration 900 (448.194 iter/s, 0.223118s/100 iters), loss = 0.228835
I0428 20:23:36.245091  2256 solver.cpp:238]     Train net output #0: loss = 0.228835 (* 1 = 0.228835 loss)
I0428 20:23:36.245108  2256 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:36.327096  2262 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:36.476680  2256 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:36.481642  2256 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:36.483621  2256 solver.cpp:311] Iteration 1000, loss = 0.17728
I0428 20:23:36.483640  2256 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:36.571890  2263 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:36.575188  2256 solver.cpp:398]     Test net output #0: accuracy = 0.8806
I0428 20:23:36.575213  2256 solver.cpp:398]     Test net output #1: loss = 0.308948 (* 1 = 0.308948 loss)
I0428 20:23:36.575222  2256 solver.cpp:316] Optimization Done.
I0428 20:23:36.575225  2256 caffe.cpp:259] Optimization Done.
