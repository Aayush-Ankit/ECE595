I0428 20:17:37.458267   911 caffe.cpp:218] Using GPUs 0
I0428 20:17:37.495096   911 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:37.947373   911 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1299.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:37.947520   911 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1299.prototxt
I0428 20:17:37.947855   911 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:37.947868   911 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:37.947944   911 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:37.948004   911 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:37.948082   911 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:37.948101   911 net.cpp:86] Creating Layer mnist
I0428 20:17:37.948107   911 net.cpp:382] mnist -> data
I0428 20:17:37.948125   911 net.cpp:382] mnist -> label
I0428 20:17:37.949125   911 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:37.951329   911 net.cpp:124] Setting up mnist
I0428 20:17:37.951359   911 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:37.951364   911 net.cpp:131] Top shape: 64 (64)
I0428 20:17:37.951367   911 net.cpp:139] Memory required for data: 200960
I0428 20:17:37.951373   911 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:37.951396   911 net.cpp:86] Creating Layer conv0
I0428 20:17:37.951413   911 net.cpp:408] conv0 <- data
I0428 20:17:37.951422   911 net.cpp:382] conv0 -> conv0
I0428 20:17:38.177609   911 net.cpp:124] Setting up conv0
I0428 20:17:38.177651   911 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:38.177655   911 net.cpp:139] Memory required for data: 7573760
I0428 20:17:38.177670   911 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:38.177683   911 net.cpp:86] Creating Layer pool0
I0428 20:17:38.177687   911 net.cpp:408] pool0 <- conv0
I0428 20:17:38.177707   911 net.cpp:382] pool0 -> pool0
I0428 20:17:38.177753   911 net.cpp:124] Setting up pool0
I0428 20:17:38.177768   911 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:38.177772   911 net.cpp:139] Memory required for data: 9416960
I0428 20:17:38.177774   911 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:38.177784   911 net.cpp:86] Creating Layer conv1
I0428 20:17:38.177788   911 net.cpp:408] conv1 <- pool0
I0428 20:17:38.177793   911 net.cpp:382] conv1 -> conv1
I0428 20:17:38.180572   911 net.cpp:124] Setting up conv1
I0428 20:17:38.180600   911 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:38.180604   911 net.cpp:139] Memory required for data: 9580800
I0428 20:17:38.180613   911 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:38.180619   911 net.cpp:86] Creating Layer pool1
I0428 20:17:38.180622   911 net.cpp:408] pool1 <- conv1
I0428 20:17:38.180626   911 net.cpp:382] pool1 -> pool1
I0428 20:17:38.180676   911 net.cpp:124] Setting up pool1
I0428 20:17:38.180682   911 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:38.180685   911 net.cpp:139] Memory required for data: 9621760
I0428 20:17:38.180688   911 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:38.180694   911 net.cpp:86] Creating Layer ip1
I0428 20:17:38.180697   911 net.cpp:408] ip1 <- pool1
I0428 20:17:38.180702   911 net.cpp:382] ip1 -> ip1
I0428 20:17:38.180822   911 net.cpp:124] Setting up ip1
I0428 20:17:38.180830   911 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:38.180833   911 net.cpp:139] Memory required for data: 9624320
I0428 20:17:38.180857   911 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:38.180867   911 net.cpp:86] Creating Layer relu1
I0428 20:17:38.180871   911 net.cpp:408] relu1 <- ip1
I0428 20:17:38.180876   911 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:38.181061   911 net.cpp:124] Setting up relu1
I0428 20:17:38.181069   911 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:38.181073   911 net.cpp:139] Memory required for data: 9626880
I0428 20:17:38.181077   911 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:38.181082   911 net.cpp:86] Creating Layer ip2
I0428 20:17:38.181087   911 net.cpp:408] ip2 <- ip1
I0428 20:17:38.181092   911 net.cpp:382] ip2 -> ip2
I0428 20:17:38.181239   911 net.cpp:124] Setting up ip2
I0428 20:17:38.181246   911 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:38.181248   911 net.cpp:139] Memory required for data: 9629440
I0428 20:17:38.181253   911 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:38.181259   911 net.cpp:86] Creating Layer relu2
I0428 20:17:38.181262   911 net.cpp:408] relu2 <- ip2
I0428 20:17:38.181265   911 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:38.182001   911 net.cpp:124] Setting up relu2
I0428 20:17:38.182013   911 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:38.182016   911 net.cpp:139] Memory required for data: 9632000
I0428 20:17:38.182020   911 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:38.182027   911 net.cpp:86] Creating Layer ip3
I0428 20:17:38.182031   911 net.cpp:408] ip3 <- ip2
I0428 20:17:38.182036   911 net.cpp:382] ip3 -> ip3
I0428 20:17:38.182159   911 net.cpp:124] Setting up ip3
I0428 20:17:38.182166   911 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:38.182169   911 net.cpp:139] Memory required for data: 9634560
I0428 20:17:38.182176   911 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:38.182181   911 net.cpp:86] Creating Layer relu3
I0428 20:17:38.182184   911 net.cpp:408] relu3 <- ip3
I0428 20:17:38.182188   911 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:38.182353   911 net.cpp:124] Setting up relu3
I0428 20:17:38.182360   911 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:38.182363   911 net.cpp:139] Memory required for data: 9637120
I0428 20:17:38.182366   911 layer_factory.hpp:77] Creating layer loss
I0428 20:17:38.182371   911 net.cpp:86] Creating Layer loss
I0428 20:17:38.182374   911 net.cpp:408] loss <- ip3
I0428 20:17:38.182379   911 net.cpp:408] loss <- label
I0428 20:17:38.182384   911 net.cpp:382] loss -> loss
I0428 20:17:38.182399   911 layer_factory.hpp:77] Creating layer loss
I0428 20:17:38.182600   911 net.cpp:124] Setting up loss
I0428 20:17:38.182624   911 net.cpp:131] Top shape: (1)
I0428 20:17:38.182627   911 net.cpp:134]     with loss weight 1
I0428 20:17:38.182644   911 net.cpp:139] Memory required for data: 9637124
I0428 20:17:38.182648   911 net.cpp:200] loss needs backward computation.
I0428 20:17:38.182651   911 net.cpp:200] relu3 needs backward computation.
I0428 20:17:38.182654   911 net.cpp:200] ip3 needs backward computation.
I0428 20:17:38.182657   911 net.cpp:200] relu2 needs backward computation.
I0428 20:17:38.182659   911 net.cpp:200] ip2 needs backward computation.
I0428 20:17:38.182662   911 net.cpp:200] relu1 needs backward computation.
I0428 20:17:38.182664   911 net.cpp:200] ip1 needs backward computation.
I0428 20:17:38.182667   911 net.cpp:200] pool1 needs backward computation.
I0428 20:17:38.182670   911 net.cpp:200] conv1 needs backward computation.
I0428 20:17:38.182672   911 net.cpp:200] pool0 needs backward computation.
I0428 20:17:38.182675   911 net.cpp:200] conv0 needs backward computation.
I0428 20:17:38.182678   911 net.cpp:202] mnist does not need backward computation.
I0428 20:17:38.182680   911 net.cpp:244] This network produces output loss
I0428 20:17:38.182689   911 net.cpp:257] Network initialization done.
I0428 20:17:38.182994   911 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1299.prototxt
I0428 20:17:38.183037   911 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:38.183152   911 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:38.183239   911 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:38.183282   911 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:38.183296   911 net.cpp:86] Creating Layer mnist
I0428 20:17:38.183301   911 net.cpp:382] mnist -> data
I0428 20:17:38.183310   911 net.cpp:382] mnist -> label
I0428 20:17:38.183408   911 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:38.185425   911 net.cpp:124] Setting up mnist
I0428 20:17:38.185453   911 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:38.185458   911 net.cpp:131] Top shape: 100 (100)
I0428 20:17:38.185461   911 net.cpp:139] Memory required for data: 314000
I0428 20:17:38.185464   911 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:38.185549   911 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:38.185552   911 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:38.185559   911 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:38.185564   911 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:38.185614   911 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:38.185621   911 net.cpp:131] Top shape: 100 (100)
I0428 20:17:38.185626   911 net.cpp:131] Top shape: 100 (100)
I0428 20:17:38.185628   911 net.cpp:139] Memory required for data: 314800
I0428 20:17:38.185631   911 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:38.185639   911 net.cpp:86] Creating Layer conv0
I0428 20:17:38.185642   911 net.cpp:408] conv0 <- data
I0428 20:17:38.185648   911 net.cpp:382] conv0 -> conv0
I0428 20:17:38.187412   911 net.cpp:124] Setting up conv0
I0428 20:17:38.187427   911 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:38.187432   911 net.cpp:139] Memory required for data: 11834800
I0428 20:17:38.187440   911 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:38.187446   911 net.cpp:86] Creating Layer pool0
I0428 20:17:38.187449   911 net.cpp:408] pool0 <- conv0
I0428 20:17:38.187455   911 net.cpp:382] pool0 -> pool0
I0428 20:17:38.187491   911 net.cpp:124] Setting up pool0
I0428 20:17:38.187496   911 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:38.187500   911 net.cpp:139] Memory required for data: 14714800
I0428 20:17:38.187502   911 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:38.187512   911 net.cpp:86] Creating Layer conv1
I0428 20:17:38.187515   911 net.cpp:408] conv1 <- pool0
I0428 20:17:38.187520   911 net.cpp:382] conv1 -> conv1
I0428 20:17:38.189251   911 net.cpp:124] Setting up conv1
I0428 20:17:38.189265   911 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:38.189270   911 net.cpp:139] Memory required for data: 14970800
I0428 20:17:38.189277   911 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:38.189285   911 net.cpp:86] Creating Layer pool1
I0428 20:17:38.189287   911 net.cpp:408] pool1 <- conv1
I0428 20:17:38.189293   911 net.cpp:382] pool1 -> pool1
I0428 20:17:38.189328   911 net.cpp:124] Setting up pool1
I0428 20:17:38.189333   911 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:38.189337   911 net.cpp:139] Memory required for data: 15034800
I0428 20:17:38.189339   911 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:38.189345   911 net.cpp:86] Creating Layer ip1
I0428 20:17:38.189348   911 net.cpp:408] ip1 <- pool1
I0428 20:17:38.189353   911 net.cpp:382] ip1 -> ip1
I0428 20:17:38.189457   911 net.cpp:124] Setting up ip1
I0428 20:17:38.189465   911 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:38.189477   911 net.cpp:139] Memory required for data: 15038800
I0428 20:17:38.189484   911 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:38.189489   911 net.cpp:86] Creating Layer relu1
I0428 20:17:38.189492   911 net.cpp:408] relu1 <- ip1
I0428 20:17:38.189498   911 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:38.189694   911 net.cpp:124] Setting up relu1
I0428 20:17:38.189703   911 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:38.189707   911 net.cpp:139] Memory required for data: 15042800
I0428 20:17:38.189709   911 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:38.189716   911 net.cpp:86] Creating Layer ip2
I0428 20:17:38.189719   911 net.cpp:408] ip2 <- ip1
I0428 20:17:38.189724   911 net.cpp:382] ip2 -> ip2
I0428 20:17:38.189817   911 net.cpp:124] Setting up ip2
I0428 20:17:38.189824   911 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:38.189827   911 net.cpp:139] Memory required for data: 15046800
I0428 20:17:38.189832   911 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:38.189836   911 net.cpp:86] Creating Layer relu2
I0428 20:17:38.189841   911 net.cpp:408] relu2 <- ip2
I0428 20:17:38.189846   911 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:38.190006   911 net.cpp:124] Setting up relu2
I0428 20:17:38.190013   911 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:38.190016   911 net.cpp:139] Memory required for data: 15050800
I0428 20:17:38.190018   911 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:38.190024   911 net.cpp:86] Creating Layer ip3
I0428 20:17:38.190027   911 net.cpp:408] ip3 <- ip2
I0428 20:17:38.190032   911 net.cpp:382] ip3 -> ip3
I0428 20:17:38.190155   911 net.cpp:124] Setting up ip3
I0428 20:17:38.190162   911 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:38.190165   911 net.cpp:139] Memory required for data: 15054800
I0428 20:17:38.190173   911 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:38.190178   911 net.cpp:86] Creating Layer relu3
I0428 20:17:38.190181   911 net.cpp:408] relu3 <- ip3
I0428 20:17:38.190186   911 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:38.191040   911 net.cpp:124] Setting up relu3
I0428 20:17:38.191051   911 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:38.191056   911 net.cpp:139] Memory required for data: 15058800
I0428 20:17:38.191058   911 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:17:38.191064   911 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:17:38.191067   911 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:17:38.191072   911 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:17:38.191078   911 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:17:38.191128   911 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:17:38.191134   911 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:38.191138   911 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:38.191140   911 net.cpp:139] Memory required for data: 15066800
I0428 20:17:38.191143   911 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:38.191148   911 net.cpp:86] Creating Layer accuracy
I0428 20:17:38.191151   911 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:17:38.191155   911 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:38.191159   911 net.cpp:382] accuracy -> accuracy
I0428 20:17:38.191166   911 net.cpp:124] Setting up accuracy
I0428 20:17:38.191169   911 net.cpp:131] Top shape: (1)
I0428 20:17:38.191172   911 net.cpp:139] Memory required for data: 15066804
I0428 20:17:38.191175   911 layer_factory.hpp:77] Creating layer loss
I0428 20:17:38.191179   911 net.cpp:86] Creating Layer loss
I0428 20:17:38.191182   911 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:17:38.191185   911 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:38.191192   911 net.cpp:382] loss -> loss
I0428 20:17:38.191197   911 layer_factory.hpp:77] Creating layer loss
I0428 20:17:38.191427   911 net.cpp:124] Setting up loss
I0428 20:17:38.191437   911 net.cpp:131] Top shape: (1)
I0428 20:17:38.191439   911 net.cpp:134]     with loss weight 1
I0428 20:17:38.191454   911 net.cpp:139] Memory required for data: 15066808
I0428 20:17:38.191457   911 net.cpp:200] loss needs backward computation.
I0428 20:17:38.191462   911 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:38.191464   911 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:17:38.191468   911 net.cpp:200] relu3 needs backward computation.
I0428 20:17:38.191476   911 net.cpp:200] ip3 needs backward computation.
I0428 20:17:38.191479   911 net.cpp:200] relu2 needs backward computation.
I0428 20:17:38.191481   911 net.cpp:200] ip2 needs backward computation.
I0428 20:17:38.191484   911 net.cpp:200] relu1 needs backward computation.
I0428 20:17:38.191488   911 net.cpp:200] ip1 needs backward computation.
I0428 20:17:38.191490   911 net.cpp:200] pool1 needs backward computation.
I0428 20:17:38.191499   911 net.cpp:200] conv1 needs backward computation.
I0428 20:17:38.191503   911 net.cpp:200] pool0 needs backward computation.
I0428 20:17:38.191505   911 net.cpp:200] conv0 needs backward computation.
I0428 20:17:38.191514   911 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:38.191517   911 net.cpp:202] mnist does not need backward computation.
I0428 20:17:38.191519   911 net.cpp:244] This network produces output accuracy
I0428 20:17:38.191522   911 net.cpp:244] This network produces output loss
I0428 20:17:38.191540   911 net.cpp:257] Network initialization done.
I0428 20:17:38.191588   911 solver.cpp:56] Solver scaffolding done.
I0428 20:17:38.191915   911 caffe.cpp:248] Starting Optimization
I0428 20:17:38.191922   911 solver.cpp:273] Solving LeNet
I0428 20:17:38.191926   911 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:38.192090   911 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:38.199414   911 blocking_queue.cpp:49] Waiting for data
I0428 20:17:38.270226   922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:38.270949   911 solver.cpp:398]     Test net output #0: accuracy = 0.1037
I0428 20:17:38.270970   911 solver.cpp:398]     Test net output #1: loss = 2.34813 (* 1 = 2.34813 loss)
I0428 20:17:38.275398   911 solver.cpp:219] Iteration 0 (0 iter/s, 0.0834476s/100 iters), loss = 2.37896
I0428 20:17:38.275421   911 solver.cpp:238]     Train net output #0: loss = 2.37896 (* 1 = 2.37896 loss)
I0428 20:17:38.275432   911 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:38.394485   911 solver.cpp:219] Iteration 100 (839.982 iter/s, 0.11905s/100 iters), loss = 0.614912
I0428 20:17:38.394510   911 solver.cpp:238]     Train net output #0: loss = 0.614912 (* 1 = 0.614912 loss)
I0428 20:17:38.394531   911 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:38.515064   911 solver.cpp:219] Iteration 200 (829.585 iter/s, 0.120542s/100 iters), loss = 0.46826
I0428 20:17:38.515090   911 solver.cpp:238]     Train net output #0: loss = 0.46826 (* 1 = 0.46826 loss)
I0428 20:17:38.515096   911 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:38.643306   911 solver.cpp:219] Iteration 300 (780.003 iter/s, 0.128205s/100 iters), loss = 0.243402
I0428 20:17:38.643332   911 solver.cpp:238]     Train net output #0: loss = 0.243402 (* 1 = 0.243402 loss)
I0428 20:17:38.643354   911 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:38.763201   911 solver.cpp:219] Iteration 400 (834.325 iter/s, 0.119857s/100 iters), loss = 0.25452
I0428 20:17:38.763240   911 solver.cpp:238]     Train net output #0: loss = 0.25452 (* 1 = 0.25452 loss)
I0428 20:17:38.763247   911 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:38.879518   911 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:38.955967   922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:38.956723   911 solver.cpp:398]     Test net output #0: accuracy = 0.9463
I0428 20:17:38.956743   911 solver.cpp:398]     Test net output #1: loss = 0.177253 (* 1 = 0.177253 loss)
I0428 20:17:38.957933   911 solver.cpp:219] Iteration 500 (513.626 iter/s, 0.194694s/100 iters), loss = 0.121657
I0428 20:17:38.957972   911 solver.cpp:238]     Train net output #0: loss = 0.121657 (* 1 = 0.121657 loss)
I0428 20:17:38.957978   911 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:39.083704   911 solver.cpp:219] Iteration 600 (795.411 iter/s, 0.125721s/100 iters), loss = 0.129854
I0428 20:17:39.083750   911 solver.cpp:238]     Train net output #0: loss = 0.129854 (* 1 = 0.129854 loss)
I0428 20:17:39.083756   911 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:39.204432   911 solver.cpp:219] Iteration 700 (828.684 iter/s, 0.120673s/100 iters), loss = 0.209589
I0428 20:17:39.204457   911 solver.cpp:238]     Train net output #0: loss = 0.209589 (* 1 = 0.209589 loss)
I0428 20:17:39.204464   911 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:39.324031   911 solver.cpp:219] Iteration 800 (836.377 iter/s, 0.119563s/100 iters), loss = 0.401337
I0428 20:17:39.324069   911 solver.cpp:238]     Train net output #0: loss = 0.401337 (* 1 = 0.401337 loss)
I0428 20:17:39.324091   911 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:39.443109   911 solver.cpp:219] Iteration 900 (840.032 iter/s, 0.119043s/100 iters), loss = 0.22163
I0428 20:17:39.443148   911 solver.cpp:238]     Train net output #0: loss = 0.22163 (* 1 = 0.22163 loss)
I0428 20:17:39.443156   911 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:39.482451   919 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:39.559959   911 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:39.561091   911 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:39.561873   911 solver.cpp:311] Iteration 1000, loss = 0.169843
I0428 20:17:39.561888   911 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:39.638810   922 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:39.639567   911 solver.cpp:398]     Test net output #0: accuracy = 0.9608
I0428 20:17:39.639585   911 solver.cpp:398]     Test net output #1: loss = 0.128352 (* 1 = 0.128352 loss)
I0428 20:17:39.639590   911 solver.cpp:316] Optimization Done.
I0428 20:17:39.639592   911 caffe.cpp:259] Optimization Done.
