I0428 19:47:01.622117 26103 caffe.cpp:218] Using GPUs 0
I0428 19:47:01.664788 26103 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:02.274617 26103 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test504.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:02.274791 26103 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test504.prototxt
I0428 19:47:02.275362 26103 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:02.275388 26103 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:02.275526 26103 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:02.275625 26103 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:02.275750 26103 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:02.275780 26103 net.cpp:86] Creating Layer mnist
I0428 19:47:02.275791 26103 net.cpp:382] mnist -> data
I0428 19:47:02.275820 26103 net.cpp:382] mnist -> label
I0428 19:47:02.277225 26103 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:02.280400 26103 net.cpp:124] Setting up mnist
I0428 19:47:02.280421 26103 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:02.280431 26103 net.cpp:131] Top shape: 64 (64)
I0428 19:47:02.280436 26103 net.cpp:139] Memory required for data: 200960
I0428 19:47:02.280447 26103 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:02.280467 26103 net.cpp:86] Creating Layer conv0
I0428 19:47:02.280494 26103 net.cpp:408] conv0 <- data
I0428 19:47:02.280510 26103 net.cpp:382] conv0 -> conv0
I0428 19:47:02.589736 26103 net.cpp:124] Setting up conv0
I0428 19:47:02.589767 26103 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:47:02.589773 26103 net.cpp:139] Memory required for data: 495872
I0428 19:47:02.589808 26103 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:02.589825 26103 net.cpp:86] Creating Layer pool0
I0428 19:47:02.589830 26103 net.cpp:408] pool0 <- conv0
I0428 19:47:02.589838 26103 net.cpp:382] pool0 -> pool0
I0428 19:47:02.589897 26103 net.cpp:124] Setting up pool0
I0428 19:47:02.589907 26103 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:47:02.589911 26103 net.cpp:139] Memory required for data: 569600
I0428 19:47:02.589916 26103 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:02.589929 26103 net.cpp:86] Creating Layer conv1
I0428 19:47:02.589934 26103 net.cpp:408] conv1 <- pool0
I0428 19:47:02.589941 26103 net.cpp:382] conv1 -> conv1
I0428 19:47:02.593722 26103 net.cpp:124] Setting up conv1
I0428 19:47:02.593739 26103 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:47:02.593744 26103 net.cpp:139] Memory required for data: 2208000
I0428 19:47:02.593770 26103 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:02.593780 26103 net.cpp:86] Creating Layer pool1
I0428 19:47:02.593786 26103 net.cpp:408] pool1 <- conv1
I0428 19:47:02.593792 26103 net.cpp:382] pool1 -> pool1
I0428 19:47:02.593834 26103 net.cpp:124] Setting up pool1
I0428 19:47:02.593843 26103 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:47:02.593848 26103 net.cpp:139] Memory required for data: 2617600
I0428 19:47:02.593852 26103 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:02.593868 26103 net.cpp:86] Creating Layer ip1
I0428 19:47:02.593871 26103 net.cpp:408] ip1 <- pool1
I0428 19:47:02.593878 26103 net.cpp:382] ip1 -> ip1
I0428 19:47:02.595885 26103 net.cpp:124] Setting up ip1
I0428 19:47:02.595901 26103 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:02.595906 26103 net.cpp:139] Memory required for data: 2630400
I0428 19:47:02.595918 26103 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:02.595927 26103 net.cpp:86] Creating Layer relu1
I0428 19:47:02.595932 26103 net.cpp:408] relu1 <- ip1
I0428 19:47:02.595939 26103 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:02.596174 26103 net.cpp:124] Setting up relu1
I0428 19:47:02.596185 26103 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:02.596190 26103 net.cpp:139] Memory required for data: 2643200
I0428 19:47:02.596195 26103 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:02.596205 26103 net.cpp:86] Creating Layer ip2
I0428 19:47:02.596210 26103 net.cpp:408] ip2 <- ip1
I0428 19:47:02.596217 26103 net.cpp:382] ip2 -> ip2
I0428 19:47:02.597609 26103 net.cpp:124] Setting up ip2
I0428 19:47:02.597635 26103 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:02.597640 26103 net.cpp:139] Memory required for data: 2656000
I0428 19:47:02.597650 26103 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:02.597658 26103 net.cpp:86] Creating Layer relu2
I0428 19:47:02.597663 26103 net.cpp:408] relu2 <- ip2
I0428 19:47:02.597671 26103 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:02.598707 26103 net.cpp:124] Setting up relu2
I0428 19:47:02.598723 26103 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:02.598728 26103 net.cpp:139] Memory required for data: 2668800
I0428 19:47:02.598733 26103 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:02.598743 26103 net.cpp:86] Creating Layer ip3
I0428 19:47:02.598748 26103 net.cpp:408] ip3 <- ip2
I0428 19:47:02.598757 26103 net.cpp:382] ip3 -> ip3
I0428 19:47:02.598906 26103 net.cpp:124] Setting up ip3
I0428 19:47:02.598917 26103 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:02.598922 26103 net.cpp:139] Memory required for data: 2671360
I0428 19:47:02.598933 26103 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:02.598940 26103 net.cpp:86] Creating Layer relu3
I0428 19:47:02.598945 26103 net.cpp:408] relu3 <- ip3
I0428 19:47:02.598953 26103 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:02.599196 26103 net.cpp:124] Setting up relu3
I0428 19:47:02.599207 26103 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:02.599212 26103 net.cpp:139] Memory required for data: 2673920
I0428 19:47:02.599217 26103 layer_factory.hpp:77] Creating layer loss
I0428 19:47:02.599225 26103 net.cpp:86] Creating Layer loss
I0428 19:47:02.599230 26103 net.cpp:408] loss <- ip3
I0428 19:47:02.599236 26103 net.cpp:408] loss <- label
I0428 19:47:02.599242 26103 net.cpp:382] loss -> loss
I0428 19:47:02.599263 26103 layer_factory.hpp:77] Creating layer loss
I0428 19:47:02.599566 26103 net.cpp:124] Setting up loss
I0428 19:47:02.599578 26103 net.cpp:131] Top shape: (1)
I0428 19:47:02.599583 26103 net.cpp:134]     with loss weight 1
I0428 19:47:02.599604 26103 net.cpp:139] Memory required for data: 2673924
I0428 19:47:02.599609 26103 net.cpp:200] loss needs backward computation.
I0428 19:47:02.599616 26103 net.cpp:200] relu3 needs backward computation.
I0428 19:47:02.599620 26103 net.cpp:200] ip3 needs backward computation.
I0428 19:47:02.599624 26103 net.cpp:200] relu2 needs backward computation.
I0428 19:47:02.599628 26103 net.cpp:200] ip2 needs backward computation.
I0428 19:47:02.599633 26103 net.cpp:200] relu1 needs backward computation.
I0428 19:47:02.599637 26103 net.cpp:200] ip1 needs backward computation.
I0428 19:47:02.599642 26103 net.cpp:200] pool1 needs backward computation.
I0428 19:47:02.599647 26103 net.cpp:200] conv1 needs backward computation.
I0428 19:47:02.599651 26103 net.cpp:200] pool0 needs backward computation.
I0428 19:47:02.599656 26103 net.cpp:200] conv0 needs backward computation.
I0428 19:47:02.599661 26103 net.cpp:202] mnist does not need backward computation.
I0428 19:47:02.599666 26103 net.cpp:244] This network produces output loss
I0428 19:47:02.599689 26103 net.cpp:257] Network initialization done.
I0428 19:47:02.600162 26103 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test504.prototxt
I0428 19:47:02.600199 26103 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:02.600353 26103 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:02.600455 26103 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:02.600522 26103 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:02.600538 26103 net.cpp:86] Creating Layer mnist
I0428 19:47:02.600544 26103 net.cpp:382] mnist -> data
I0428 19:47:02.600569 26103 net.cpp:382] mnist -> label
I0428 19:47:02.600708 26103 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:02.602421 26103 net.cpp:124] Setting up mnist
I0428 19:47:02.602437 26103 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:02.602444 26103 net.cpp:131] Top shape: 100 (100)
I0428 19:47:02.602449 26103 net.cpp:139] Memory required for data: 314000
I0428 19:47:02.602454 26103 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:02.602468 26103 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:02.602474 26103 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:02.602497 26103 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:02.602506 26103 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:02.602596 26103 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:02.602607 26103 net.cpp:131] Top shape: 100 (100)
I0428 19:47:02.602612 26103 net.cpp:131] Top shape: 100 (100)
I0428 19:47:02.602617 26103 net.cpp:139] Memory required for data: 314800
I0428 19:47:02.602622 26103 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:02.602634 26103 net.cpp:86] Creating Layer conv0
I0428 19:47:02.602640 26103 net.cpp:408] conv0 <- data
I0428 19:47:02.602648 26103 net.cpp:382] conv0 -> conv0
I0428 19:47:02.604655 26103 net.cpp:124] Setting up conv0
I0428 19:47:02.604686 26103 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:47:02.604691 26103 net.cpp:139] Memory required for data: 775600
I0428 19:47:02.604704 26103 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:02.604713 26103 net.cpp:86] Creating Layer pool0
I0428 19:47:02.604718 26103 net.cpp:408] pool0 <- conv0
I0428 19:47:02.604724 26103 net.cpp:382] pool0 -> pool0
I0428 19:47:02.604775 26103 net.cpp:124] Setting up pool0
I0428 19:47:02.604785 26103 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:47:02.604790 26103 net.cpp:139] Memory required for data: 890800
I0428 19:47:02.604794 26103 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:02.604807 26103 net.cpp:86] Creating Layer conv1
I0428 19:47:02.604818 26103 net.cpp:408] conv1 <- pool0
I0428 19:47:02.604859 26103 net.cpp:382] conv1 -> conv1
I0428 19:47:02.607095 26103 net.cpp:124] Setting up conv1
I0428 19:47:02.607110 26103 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:47:02.607134 26103 net.cpp:139] Memory required for data: 3450800
I0428 19:47:02.607146 26103 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:02.607156 26103 net.cpp:86] Creating Layer pool1
I0428 19:47:02.607177 26103 net.cpp:408] pool1 <- conv1
I0428 19:47:02.607184 26103 net.cpp:382] pool1 -> pool1
I0428 19:47:02.607234 26103 net.cpp:124] Setting up pool1
I0428 19:47:02.607255 26103 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:47:02.607260 26103 net.cpp:139] Memory required for data: 4090800
I0428 19:47:02.607265 26103 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:02.607273 26103 net.cpp:86] Creating Layer ip1
I0428 19:47:02.607278 26103 net.cpp:408] ip1 <- pool1
I0428 19:47:02.607286 26103 net.cpp:382] ip1 -> ip1
I0428 19:47:02.608140 26103 net.cpp:124] Setting up ip1
I0428 19:47:02.608170 26103 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:02.608201 26103 net.cpp:139] Memory required for data: 4110800
I0428 19:47:02.608212 26103 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:02.608234 26103 net.cpp:86] Creating Layer relu1
I0428 19:47:02.608239 26103 net.cpp:408] relu1 <- ip1
I0428 19:47:02.608249 26103 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:02.608481 26103 net.cpp:124] Setting up relu1
I0428 19:47:02.608494 26103 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:02.608500 26103 net.cpp:139] Memory required for data: 4130800
I0428 19:47:02.608505 26103 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:02.608516 26103 net.cpp:86] Creating Layer ip2
I0428 19:47:02.608521 26103 net.cpp:408] ip2 <- ip1
I0428 19:47:02.608530 26103 net.cpp:382] ip2 -> ip2
I0428 19:47:02.608716 26103 net.cpp:124] Setting up ip2
I0428 19:47:02.608726 26103 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:02.608731 26103 net.cpp:139] Memory required for data: 4150800
I0428 19:47:02.608738 26103 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:02.608744 26103 net.cpp:86] Creating Layer relu2
I0428 19:47:02.608750 26103 net.cpp:408] relu2 <- ip2
I0428 19:47:02.608757 26103 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:02.609128 26103 net.cpp:124] Setting up relu2
I0428 19:47:02.609158 26103 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:02.609163 26103 net.cpp:139] Memory required for data: 4170800
I0428 19:47:02.609169 26103 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:02.609192 26103 net.cpp:86] Creating Layer ip3
I0428 19:47:02.609199 26103 net.cpp:408] ip3 <- ip2
I0428 19:47:02.609206 26103 net.cpp:382] ip3 -> ip3
I0428 19:47:02.609364 26103 net.cpp:124] Setting up ip3
I0428 19:47:02.609375 26103 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:02.609380 26103 net.cpp:139] Memory required for data: 4174800
I0428 19:47:02.609395 26103 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:02.609410 26103 net.cpp:86] Creating Layer relu3
I0428 19:47:02.609414 26103 net.cpp:408] relu3 <- ip3
I0428 19:47:02.609421 26103 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:02.610700 26103 net.cpp:124] Setting up relu3
I0428 19:47:02.610729 26103 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:02.610734 26103 net.cpp:139] Memory required for data: 4178800
I0428 19:47:02.610739 26103 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:02.610747 26103 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:02.610752 26103 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:02.610759 26103 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:02.610769 26103 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:02.610816 26103 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:02.610832 26103 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:02.610838 26103 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:02.610843 26103 net.cpp:139] Memory required for data: 4186800
I0428 19:47:02.610847 26103 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:02.610857 26103 net.cpp:86] Creating Layer accuracy
I0428 19:47:02.610860 26103 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:02.610867 26103 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:02.610873 26103 net.cpp:382] accuracy -> accuracy
I0428 19:47:02.610882 26103 net.cpp:124] Setting up accuracy
I0428 19:47:02.610888 26103 net.cpp:131] Top shape: (1)
I0428 19:47:02.610893 26103 net.cpp:139] Memory required for data: 4186804
I0428 19:47:02.610898 26103 layer_factory.hpp:77] Creating layer loss
I0428 19:47:02.610903 26103 net.cpp:86] Creating Layer loss
I0428 19:47:02.610908 26103 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:02.610913 26103 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:02.610921 26103 net.cpp:382] loss -> loss
I0428 19:47:02.610929 26103 layer_factory.hpp:77] Creating layer loss
I0428 19:47:02.611294 26103 net.cpp:124] Setting up loss
I0428 19:47:02.611320 26103 net.cpp:131] Top shape: (1)
I0428 19:47:02.611340 26103 net.cpp:134]     with loss weight 1
I0428 19:47:02.611371 26103 net.cpp:139] Memory required for data: 4186808
I0428 19:47:02.611377 26103 net.cpp:200] loss needs backward computation.
I0428 19:47:02.611382 26103 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:02.611388 26103 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:02.611393 26103 net.cpp:200] relu3 needs backward computation.
I0428 19:47:02.611398 26103 net.cpp:200] ip3 needs backward computation.
I0428 19:47:02.611403 26103 net.cpp:200] relu2 needs backward computation.
I0428 19:47:02.611407 26103 net.cpp:200] ip2 needs backward computation.
I0428 19:47:02.611412 26103 net.cpp:200] relu1 needs backward computation.
I0428 19:47:02.611416 26103 net.cpp:200] ip1 needs backward computation.
I0428 19:47:02.611421 26103 net.cpp:200] pool1 needs backward computation.
I0428 19:47:02.611426 26103 net.cpp:200] conv1 needs backward computation.
I0428 19:47:02.611430 26103 net.cpp:200] pool0 needs backward computation.
I0428 19:47:02.611435 26103 net.cpp:200] conv0 needs backward computation.
I0428 19:47:02.611441 26103 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:02.611448 26103 net.cpp:202] mnist does not need backward computation.
I0428 19:47:02.611451 26103 net.cpp:244] This network produces output accuracy
I0428 19:47:02.611456 26103 net.cpp:244] This network produces output loss
I0428 19:47:02.611474 26103 net.cpp:257] Network initialization done.
I0428 19:47:02.611536 26103 solver.cpp:56] Solver scaffolding done.
I0428 19:47:02.612016 26103 caffe.cpp:248] Starting Optimization
I0428 19:47:02.612025 26103 solver.cpp:273] Solving LeNet
I0428 19:47:02.612043 26103 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:02.613236 26103 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:02.618479 26103 blocking_queue.cpp:49] Waiting for data
I0428 19:47:02.687263 26110 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:02.688575 26103 solver.cpp:398]     Test net output #0: accuracy = 0.1123
I0428 19:47:02.688630 26103 solver.cpp:398]     Test net output #1: loss = 2.30285 (* 1 = 2.30285 loss)
I0428 19:47:02.694656 26103 solver.cpp:219] Iteration 0 (-9.83712e-43 iter/s, 0.0825641s/100 iters), loss = 2.30644
I0428 19:47:02.694715 26103 solver.cpp:238]     Train net output #0: loss = 2.30644 (* 1 = 2.30644 loss)
I0428 19:47:02.694747 26103 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:02.880942 26103 solver.cpp:219] Iteration 100 (537.033 iter/s, 0.186208s/100 iters), loss = 0.888659
I0428 19:47:02.880998 26103 solver.cpp:238]     Train net output #0: loss = 0.888659 (* 1 = 0.888659 loss)
I0428 19:47:02.881011 26103 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:03.062511 26103 solver.cpp:219] Iteration 200 (550.949 iter/s, 0.181505s/100 iters), loss = 0.5741
I0428 19:47:03.062569 26103 solver.cpp:238]     Train net output #0: loss = 0.5741 (* 1 = 0.5741 loss)
I0428 19:47:03.062582 26103 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:03.246476 26103 solver.cpp:219] Iteration 300 (543.779 iter/s, 0.183898s/100 iters), loss = 0.520103
I0428 19:47:03.246528 26103 solver.cpp:238]     Train net output #0: loss = 0.520103 (* 1 = 0.520103 loss)
I0428 19:47:03.246541 26103 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:03.428644 26103 solver.cpp:219] Iteration 400 (549.158 iter/s, 0.182097s/100 iters), loss = 0.300111
I0428 19:47:03.428699 26103 solver.cpp:238]     Train net output #0: loss = 0.300111 (* 1 = 0.300111 loss)
I0428 19:47:03.428710 26103 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:03.609350 26103 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:03.670159 26110 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:03.672158 26103 solver.cpp:398]     Test net output #0: accuracy = 0.8529
I0428 19:47:03.672190 26103 solver.cpp:398]     Test net output #1: loss = 0.39917 (* 1 = 0.39917 loss)
I0428 19:47:03.673782 26103 solver.cpp:219] Iteration 500 (408.049 iter/s, 0.245069s/100 iters), loss = 0.30868
I0428 19:47:03.673842 26103 solver.cpp:238]     Train net output #0: loss = 0.30868 (* 1 = 0.30868 loss)
I0428 19:47:03.673852 26103 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:03.844164 26103 solver.cpp:219] Iteration 600 (587.135 iter/s, 0.170319s/100 iters), loss = 0.246843
I0428 19:47:03.844208 26103 solver.cpp:238]     Train net output #0: loss = 0.246843 (* 1 = 0.246843 loss)
I0428 19:47:03.844219 26103 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:04.027254 26103 solver.cpp:219] Iteration 700 (546.353 iter/s, 0.183032s/100 iters), loss = 0.65478
I0428 19:47:04.027297 26103 solver.cpp:238]     Train net output #0: loss = 0.65478 (* 1 = 0.65478 loss)
I0428 19:47:04.027307 26103 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:04.208676 26103 solver.cpp:219] Iteration 800 (551.372 iter/s, 0.181366s/100 iters), loss = 0.287932
I0428 19:47:04.208719 26103 solver.cpp:238]     Train net output #0: loss = 0.287931 (* 1 = 0.287931 loss)
I0428 19:47:04.208736 26103 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:04.393478 26103 solver.cpp:219] Iteration 900 (541.29 iter/s, 0.184744s/100 iters), loss = 0.246949
I0428 19:47:04.393535 26103 solver.cpp:238]     Train net output #0: loss = 0.246949 (* 1 = 0.246949 loss)
I0428 19:47:04.393558 26103 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:04.454911 26109 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:04.576524 26103 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:04.580075 26103 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:04.581912 26103 solver.cpp:311] Iteration 1000, loss = 0.19937
I0428 19:47:04.581938 26103 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:04.650280 26110 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:04.650929 26103 solver.cpp:398]     Test net output #0: accuracy = 0.9633
I0428 19:47:04.650956 26103 solver.cpp:398]     Test net output #1: loss = 0.123654 (* 1 = 0.123654 loss)
I0428 19:47:04.650970 26103 solver.cpp:316] Optimization Done.
I0428 19:47:04.650974 26103 caffe.cpp:259] Optimization Done.
