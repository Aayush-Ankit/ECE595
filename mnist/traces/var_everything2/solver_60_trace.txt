I0428 19:29:29.173460 22033 caffe.cpp:218] Using GPUs 0
I0428 19:29:29.210824 22033 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:29.720342 22033 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test60.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:29.720489 22033 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test60.prototxt
I0428 19:29:29.720865 22033 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:29.720883 22033 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:29.720973 22033 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:29.721053 22033 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:29.721159 22033 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:29.721184 22033 net.cpp:86] Creating Layer mnist
I0428 19:29:29.721192 22033 net.cpp:382] mnist -> data
I0428 19:29:29.721215 22033 net.cpp:382] mnist -> label
I0428 19:29:29.722306 22033 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:29.724761 22033 net.cpp:124] Setting up mnist
I0428 19:29:29.724779 22033 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:29.724786 22033 net.cpp:131] Top shape: 64 (64)
I0428 19:29:29.724789 22033 net.cpp:139] Memory required for data: 200960
I0428 19:29:29.724797 22033 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:29.724820 22033 net.cpp:86] Creating Layer conv0
I0428 19:29:29.724828 22033 net.cpp:408] conv0 <- data
I0428 19:29:29.724862 22033 net.cpp:382] conv0 -> conv0
I0428 19:29:30.010658 22033 net.cpp:124] Setting up conv0
I0428 19:29:30.010685 22033 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:30.010689 22033 net.cpp:139] Memory required for data: 495872
I0428 19:29:30.010704 22033 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:30.010717 22033 net.cpp:86] Creating Layer pool0
I0428 19:29:30.010740 22033 net.cpp:408] pool0 <- conv0
I0428 19:29:30.010746 22033 net.cpp:382] pool0 -> pool0
I0428 19:29:30.010792 22033 net.cpp:124] Setting up pool0
I0428 19:29:30.010798 22033 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:30.010802 22033 net.cpp:139] Memory required for data: 569600
I0428 19:29:30.010804 22033 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:30.010812 22033 net.cpp:86] Creating Layer ip1
I0428 19:29:30.010815 22033 net.cpp:408] ip1 <- pool0
I0428 19:29:30.010819 22033 net.cpp:382] ip1 -> ip1
I0428 19:29:30.011768 22033 net.cpp:124] Setting up ip1
I0428 19:29:30.011796 22033 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:30.011801 22033 net.cpp:139] Memory required for data: 576000
I0428 19:29:30.011823 22033 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:30.011831 22033 net.cpp:86] Creating Layer relu1
I0428 19:29:30.011834 22033 net.cpp:408] relu1 <- ip1
I0428 19:29:30.011847 22033 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:30.012019 22033 net.cpp:124] Setting up relu1
I0428 19:29:30.012028 22033 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:30.012046 22033 net.cpp:139] Memory required for data: 582400
I0428 19:29:30.012049 22033 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:30.012056 22033 net.cpp:86] Creating Layer ip2
I0428 19:29:30.012059 22033 net.cpp:408] ip2 <- ip1
I0428 19:29:30.012064 22033 net.cpp:382] ip2 -> ip2
I0428 19:29:30.012171 22033 net.cpp:124] Setting up ip2
I0428 19:29:30.012177 22033 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:30.012181 22033 net.cpp:139] Memory required for data: 584960
I0428 19:29:30.012187 22033 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:30.012192 22033 net.cpp:86] Creating Layer relu2
I0428 19:29:30.012195 22033 net.cpp:408] relu2 <- ip2
I0428 19:29:30.012199 22033 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:30.012970 22033 net.cpp:124] Setting up relu2
I0428 19:29:30.013000 22033 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:30.013002 22033 net.cpp:139] Memory required for data: 587520
I0428 19:29:30.013006 22033 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:30.013015 22033 net.cpp:86] Creating Layer ip3
I0428 19:29:30.013017 22033 net.cpp:408] ip3 <- ip2
I0428 19:29:30.013023 22033 net.cpp:382] ip3 -> ip3
I0428 19:29:30.013149 22033 net.cpp:124] Setting up ip3
I0428 19:29:30.013155 22033 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:30.013159 22033 net.cpp:139] Memory required for data: 590080
I0428 19:29:30.013164 22033 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:30.013170 22033 net.cpp:86] Creating Layer relu3
I0428 19:29:30.013173 22033 net.cpp:408] relu3 <- ip3
I0428 19:29:30.013177 22033 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:30.013339 22033 net.cpp:124] Setting up relu3
I0428 19:29:30.013346 22033 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:30.013350 22033 net.cpp:139] Memory required for data: 592640
I0428 19:29:30.013352 22033 layer_factory.hpp:77] Creating layer loss
I0428 19:29:30.013358 22033 net.cpp:86] Creating Layer loss
I0428 19:29:30.013361 22033 net.cpp:408] loss <- ip3
I0428 19:29:30.013365 22033 net.cpp:408] loss <- label
I0428 19:29:30.013370 22033 net.cpp:382] loss -> loss
I0428 19:29:30.013388 22033 layer_factory.hpp:77] Creating layer loss
I0428 19:29:30.013613 22033 net.cpp:124] Setting up loss
I0428 19:29:30.013622 22033 net.cpp:131] Top shape: (1)
I0428 19:29:30.013626 22033 net.cpp:134]     with loss weight 1
I0428 19:29:30.013640 22033 net.cpp:139] Memory required for data: 592644
I0428 19:29:30.013644 22033 net.cpp:200] loss needs backward computation.
I0428 19:29:30.013648 22033 net.cpp:200] relu3 needs backward computation.
I0428 19:29:30.013651 22033 net.cpp:200] ip3 needs backward computation.
I0428 19:29:30.013654 22033 net.cpp:200] relu2 needs backward computation.
I0428 19:29:30.013658 22033 net.cpp:200] ip2 needs backward computation.
I0428 19:29:30.013660 22033 net.cpp:200] relu1 needs backward computation.
I0428 19:29:30.013664 22033 net.cpp:200] ip1 needs backward computation.
I0428 19:29:30.013676 22033 net.cpp:200] pool0 needs backward computation.
I0428 19:29:30.013680 22033 net.cpp:200] conv0 needs backward computation.
I0428 19:29:30.013684 22033 net.cpp:202] mnist does not need backward computation.
I0428 19:29:30.013686 22033 net.cpp:244] This network produces output loss
I0428 19:29:30.013695 22033 net.cpp:257] Network initialization done.
I0428 19:29:30.014042 22033 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test60.prototxt
I0428 19:29:30.014086 22033 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:30.014180 22033 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:30.014243 22033 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:30.014288 22033 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:30.014300 22033 net.cpp:86] Creating Layer mnist
I0428 19:29:30.014304 22033 net.cpp:382] mnist -> data
I0428 19:29:30.014312 22033 net.cpp:382] mnist -> label
I0428 19:29:30.014408 22033 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:30.016301 22033 net.cpp:124] Setting up mnist
I0428 19:29:30.016331 22033 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:30.016336 22033 net.cpp:131] Top shape: 100 (100)
I0428 19:29:30.016340 22033 net.cpp:139] Memory required for data: 314000
I0428 19:29:30.016345 22033 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:30.016351 22033 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:30.016355 22033 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:30.016360 22033 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:30.016366 22033 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:30.016424 22033 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:30.016430 22033 net.cpp:131] Top shape: 100 (100)
I0428 19:29:30.016433 22033 net.cpp:131] Top shape: 100 (100)
I0428 19:29:30.016436 22033 net.cpp:139] Memory required for data: 314800
I0428 19:29:30.016449 22033 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:30.016458 22033 net.cpp:86] Creating Layer conv0
I0428 19:29:30.016476 22033 net.cpp:408] conv0 <- data
I0428 19:29:30.016481 22033 net.cpp:382] conv0 -> conv0
I0428 19:29:30.018254 22033 net.cpp:124] Setting up conv0
I0428 19:29:30.018267 22033 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:30.018271 22033 net.cpp:139] Memory required for data: 775600
I0428 19:29:30.018280 22033 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:30.018287 22033 net.cpp:86] Creating Layer pool0
I0428 19:29:30.018290 22033 net.cpp:408] pool0 <- conv0
I0428 19:29:30.018296 22033 net.cpp:382] pool0 -> pool0
I0428 19:29:30.018328 22033 net.cpp:124] Setting up pool0
I0428 19:29:30.018333 22033 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:30.018337 22033 net.cpp:139] Memory required for data: 890800
I0428 19:29:30.018338 22033 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:30.018345 22033 net.cpp:86] Creating Layer ip1
I0428 19:29:30.018348 22033 net.cpp:408] ip1 <- pool0
I0428 19:29:30.018352 22033 net.cpp:382] ip1 -> ip1
I0428 19:29:30.018481 22033 net.cpp:124] Setting up ip1
I0428 19:29:30.018487 22033 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:30.018491 22033 net.cpp:139] Memory required for data: 900800
I0428 19:29:30.018497 22033 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:30.018501 22033 net.cpp:86] Creating Layer relu1
I0428 19:29:30.018504 22033 net.cpp:408] relu1 <- ip1
I0428 19:29:30.018509 22033 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:30.018661 22033 net.cpp:124] Setting up relu1
I0428 19:29:30.018669 22033 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:30.018672 22033 net.cpp:139] Memory required for data: 910800
I0428 19:29:30.018676 22033 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:30.018681 22033 net.cpp:86] Creating Layer ip2
I0428 19:29:30.018683 22033 net.cpp:408] ip2 <- ip1
I0428 19:29:30.018688 22033 net.cpp:382] ip2 -> ip2
I0428 19:29:30.018796 22033 net.cpp:124] Setting up ip2
I0428 19:29:30.018803 22033 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:30.018806 22033 net.cpp:139] Memory required for data: 914800
I0428 19:29:30.018813 22033 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:30.018817 22033 net.cpp:86] Creating Layer relu2
I0428 19:29:30.018821 22033 net.cpp:408] relu2 <- ip2
I0428 19:29:30.018826 22033 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:30.019759 22033 net.cpp:124] Setting up relu2
I0428 19:29:30.019771 22033 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:30.019775 22033 net.cpp:139] Memory required for data: 918800
I0428 19:29:30.019779 22033 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:30.019788 22033 net.cpp:86] Creating Layer ip3
I0428 19:29:30.019790 22033 net.cpp:408] ip3 <- ip2
I0428 19:29:30.019796 22033 net.cpp:382] ip3 -> ip3
I0428 19:29:30.019924 22033 net.cpp:124] Setting up ip3
I0428 19:29:30.019933 22033 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:30.019937 22033 net.cpp:139] Memory required for data: 922800
I0428 19:29:30.019942 22033 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:30.019954 22033 net.cpp:86] Creating Layer relu3
I0428 19:29:30.019958 22033 net.cpp:408] relu3 <- ip3
I0428 19:29:30.019963 22033 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:30.020117 22033 net.cpp:124] Setting up relu3
I0428 19:29:30.020124 22033 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:30.020128 22033 net.cpp:139] Memory required for data: 926800
I0428 19:29:30.020130 22033 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:30.020149 22033 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:30.020153 22033 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:30.020156 22033 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:30.020162 22033 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:30.020195 22033 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:30.020200 22033 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:30.020203 22033 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:30.020216 22033 net.cpp:139] Memory required for data: 934800
I0428 19:29:30.020220 22033 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:30.020225 22033 net.cpp:86] Creating Layer accuracy
I0428 19:29:30.020228 22033 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:30.020238 22033 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:30.020242 22033 net.cpp:382] accuracy -> accuracy
I0428 19:29:30.020256 22033 net.cpp:124] Setting up accuracy
I0428 19:29:30.020259 22033 net.cpp:131] Top shape: (1)
I0428 19:29:30.020262 22033 net.cpp:139] Memory required for data: 934804
I0428 19:29:30.020265 22033 layer_factory.hpp:77] Creating layer loss
I0428 19:29:30.020269 22033 net.cpp:86] Creating Layer loss
I0428 19:29:30.020272 22033 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:30.020277 22033 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:30.020280 22033 net.cpp:382] loss -> loss
I0428 19:29:30.020287 22033 layer_factory.hpp:77] Creating layer loss
I0428 19:29:30.020529 22033 net.cpp:124] Setting up loss
I0428 19:29:30.020537 22033 net.cpp:131] Top shape: (1)
I0428 19:29:30.020541 22033 net.cpp:134]     with loss weight 1
I0428 19:29:30.020547 22033 net.cpp:139] Memory required for data: 934808
I0428 19:29:30.020551 22033 net.cpp:200] loss needs backward computation.
I0428 19:29:30.020562 22033 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:30.020566 22033 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:30.020576 22033 net.cpp:200] relu3 needs backward computation.
I0428 19:29:30.020579 22033 net.cpp:200] ip3 needs backward computation.
I0428 19:29:30.020582 22033 net.cpp:200] relu2 needs backward computation.
I0428 19:29:30.020586 22033 net.cpp:200] ip2 needs backward computation.
I0428 19:29:30.020588 22033 net.cpp:200] relu1 needs backward computation.
I0428 19:29:30.020591 22033 net.cpp:200] ip1 needs backward computation.
I0428 19:29:30.020594 22033 net.cpp:200] pool0 needs backward computation.
I0428 19:29:30.020603 22033 net.cpp:200] conv0 needs backward computation.
I0428 19:29:30.020607 22033 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:30.020612 22033 net.cpp:202] mnist does not need backward computation.
I0428 19:29:30.020614 22033 net.cpp:244] This network produces output accuracy
I0428 19:29:30.020628 22033 net.cpp:244] This network produces output loss
I0428 19:29:30.020638 22033 net.cpp:257] Network initialization done.
I0428 19:29:30.020680 22033 solver.cpp:56] Solver scaffolding done.
I0428 19:29:30.020982 22033 caffe.cpp:248] Starting Optimization
I0428 19:29:30.020989 22033 solver.cpp:273] Solving LeNet
I0428 19:29:30.020992 22033 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:30.021160 22033 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:30.021330 22033 blocking_queue.cpp:49] Waiting for data
I0428 19:29:30.096604 22040 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:30.097081 22033 solver.cpp:398]     Test net output #0: accuracy = 0.1112
I0428 19:29:30.097111 22033 solver.cpp:398]     Test net output #1: loss = 2.3035 (* 1 = 2.3035 loss)
I0428 19:29:30.099288 22033 solver.cpp:219] Iteration 0 (-3.57095e-31 iter/s, 0.0782665s/100 iters), loss = 2.30982
I0428 19:29:30.099328 22033 solver.cpp:238]     Train net output #0: loss = 2.30982 (* 1 = 2.30982 loss)
I0428 19:29:30.099344 22033 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:30.171041 22033 solver.cpp:219] Iteration 100 (1394.63 iter/s, 0.0717036s/100 iters), loss = 2.00344
I0428 19:29:30.171074 22033 solver.cpp:238]     Train net output #0: loss = 2.00344 (* 1 = 2.00344 loss)
I0428 19:29:30.171083 22033 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:30.231989 22033 solver.cpp:219] Iteration 200 (1641.88 iter/s, 0.0609056s/100 iters), loss = 1.19979
I0428 19:29:30.232019 22033 solver.cpp:238]     Train net output #0: loss = 1.19979 (* 1 = 1.19979 loss)
I0428 19:29:30.232025 22033 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:30.287559 22033 solver.cpp:219] Iteration 300 (1800.75 iter/s, 0.0555325s/100 iters), loss = 1.23233
I0428 19:29:30.287611 22033 solver.cpp:238]     Train net output #0: loss = 1.23233 (* 1 = 1.23233 loss)
I0428 19:29:30.287617 22033 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:30.341223 22033 solver.cpp:219] Iteration 400 (1864.95 iter/s, 0.0536207s/100 iters), loss = 0.852035
I0428 19:29:30.341261 22033 solver.cpp:238]     Train net output #0: loss = 0.852035 (* 1 = 0.852035 loss)
I0428 19:29:30.341269 22033 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:30.394157 22033 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:30.465689 22040 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:30.466125 22033 solver.cpp:398]     Test net output #0: accuracy = 0.6519
I0428 19:29:30.466157 22033 solver.cpp:398]     Test net output #1: loss = 0.906118 (* 1 = 0.906118 loss)
I0428 19:29:30.466821 22033 solver.cpp:219] Iteration 500 (796.485 iter/s, 0.125552s/100 iters), loss = 0.849595
I0428 19:29:30.466845 22033 solver.cpp:238]     Train net output #0: loss = 0.849595 (* 1 = 0.849595 loss)
I0428 19:29:30.466851 22033 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:30.523100 22033 solver.cpp:219] Iteration 600 (1777.87 iter/s, 0.0562472s/100 iters), loss = 0.938511
I0428 19:29:30.523156 22033 solver.cpp:238]     Train net output #0: loss = 0.938511 (* 1 = 0.938511 loss)
I0428 19:29:30.523164 22033 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:30.577824 22033 solver.cpp:219] Iteration 700 (1829.41 iter/s, 0.0546624s/100 iters), loss = 0.761639
I0428 19:29:30.577849 22033 solver.cpp:238]     Train net output #0: loss = 0.761639 (* 1 = 0.761639 loss)
I0428 19:29:30.577872 22033 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:30.634086 22033 solver.cpp:219] Iteration 800 (1778.42 iter/s, 0.0562298s/100 iters), loss = 0.985616
I0428 19:29:30.634124 22033 solver.cpp:238]     Train net output #0: loss = 0.985616 (* 1 = 0.985616 loss)
I0428 19:29:30.634130 22033 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:30.691562 22033 solver.cpp:219] Iteration 900 (1740.78 iter/s, 0.0574454s/100 iters), loss = 0.809554
I0428 19:29:30.691601 22033 solver.cpp:238]     Train net output #0: loss = 0.809554 (* 1 = 0.809554 loss)
I0428 19:29:30.691607 22033 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:30.712092 22039 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:30.747797 22033 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:30.748544 22033 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:30.748989 22033 solver.cpp:311] Iteration 1000, loss = 0.69205
I0428 19:29:30.749006 22033 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:30.816040 22040 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:30.816444 22033 solver.cpp:398]     Test net output #0: accuracy = 0.7509
I0428 19:29:30.816465 22033 solver.cpp:398]     Test net output #1: loss = 0.67157 (* 1 = 0.67157 loss)
I0428 19:29:30.816470 22033 solver.cpp:316] Optimization Done.
I0428 19:29:30.816473 22033 caffe.cpp:259] Optimization Done.
