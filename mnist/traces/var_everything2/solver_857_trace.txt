I0428 19:59:45.780633 29319 caffe.cpp:218] Using GPUs 0
I0428 19:59:45.809422 29319 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:46.256398 29319 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test857.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:46.256536 29319 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test857.prototxt
I0428 19:59:46.256956 29319 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:46.256974 29319 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:46.257074 29319 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:46.257140 29319 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:46.257236 29319 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:46.257254 29319 net.cpp:86] Creating Layer mnist
I0428 19:59:46.257262 29319 net.cpp:382] mnist -> data
I0428 19:59:46.257282 29319 net.cpp:382] mnist -> label
I0428 19:59:46.258291 29319 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:46.260550 29319 net.cpp:124] Setting up mnist
I0428 19:59:46.260596 29319 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:46.260601 29319 net.cpp:131] Top shape: 64 (64)
I0428 19:59:46.260604 29319 net.cpp:139] Memory required for data: 200960
I0428 19:59:46.260610 29319 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:46.260646 29319 net.cpp:86] Creating Layer conv0
I0428 19:59:46.260664 29319 net.cpp:408] conv0 <- data
I0428 19:59:46.260675 29319 net.cpp:382] conv0 -> conv0
I0428 19:59:46.489661 29319 net.cpp:124] Setting up conv0
I0428 19:59:46.489688 29319 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:46.489691 29319 net.cpp:139] Memory required for data: 1675520
I0428 19:59:46.489706 29319 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:46.489718 29319 net.cpp:86] Creating Layer pool0
I0428 19:59:46.489722 29319 net.cpp:408] pool0 <- conv0
I0428 19:59:46.489727 29319 net.cpp:382] pool0 -> pool0
I0428 19:59:46.489792 29319 net.cpp:124] Setting up pool0
I0428 19:59:46.489807 29319 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:46.489810 29319 net.cpp:139] Memory required for data: 2044160
I0428 19:59:46.489814 29319 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:46.489823 29319 net.cpp:86] Creating Layer conv1
I0428 19:59:46.489826 29319 net.cpp:408] conv1 <- pool0
I0428 19:59:46.489831 29319 net.cpp:382] conv1 -> conv1
I0428 19:59:46.492739 29319 net.cpp:124] Setting up conv1
I0428 19:59:46.492754 29319 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:46.492774 29319 net.cpp:139] Memory required for data: 2208000
I0428 19:59:46.492784 29319 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:46.492790 29319 net.cpp:86] Creating Layer pool1
I0428 19:59:46.492794 29319 net.cpp:408] pool1 <- conv1
I0428 19:59:46.492799 29319 net.cpp:382] pool1 -> pool1
I0428 19:59:46.492874 29319 net.cpp:124] Setting up pool1
I0428 19:59:46.492897 29319 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:46.492902 29319 net.cpp:139] Memory required for data: 2248960
I0428 19:59:46.492904 29319 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:46.492913 29319 net.cpp:86] Creating Layer ip1
I0428 19:59:46.492915 29319 net.cpp:408] ip1 <- pool1
I0428 19:59:46.492936 29319 net.cpp:382] ip1 -> ip1
I0428 19:59:46.493999 29319 net.cpp:124] Setting up ip1
I0428 19:59:46.494011 29319 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:46.494031 29319 net.cpp:139] Memory required for data: 2261760
I0428 19:59:46.494040 29319 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:46.494045 29319 net.cpp:86] Creating Layer relu1
I0428 19:59:46.494050 29319 net.cpp:408] relu1 <- ip1
I0428 19:59:46.494055 29319 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:46.494247 29319 net.cpp:124] Setting up relu1
I0428 19:59:46.494257 29319 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:46.494261 29319 net.cpp:139] Memory required for data: 2274560
I0428 19:59:46.494263 29319 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:46.494269 29319 net.cpp:86] Creating Layer ip2
I0428 19:59:46.494272 29319 net.cpp:408] ip2 <- ip1
I0428 19:59:46.494277 29319 net.cpp:382] ip2 -> ip2
I0428 19:59:46.494385 29319 net.cpp:124] Setting up ip2
I0428 19:59:46.494392 29319 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:46.494395 29319 net.cpp:139] Memory required for data: 2287360
I0428 19:59:46.494400 29319 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:46.494406 29319 net.cpp:86] Creating Layer relu2
I0428 19:59:46.494410 29319 net.cpp:408] relu2 <- ip2
I0428 19:59:46.494413 29319 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:46.495241 29319 net.cpp:124] Setting up relu2
I0428 19:59:46.495254 29319 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:46.495273 29319 net.cpp:139] Memory required for data: 2300160
I0428 19:59:46.495277 29319 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:46.495283 29319 net.cpp:86] Creating Layer ip3
I0428 19:59:46.495287 29319 net.cpp:408] ip3 <- ip2
I0428 19:59:46.495292 29319 net.cpp:382] ip3 -> ip3
I0428 19:59:46.495389 29319 net.cpp:124] Setting up ip3
I0428 19:59:46.495398 29319 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:46.495400 29319 net.cpp:139] Memory required for data: 2302720
I0428 19:59:46.495407 29319 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:46.495412 29319 net.cpp:86] Creating Layer relu3
I0428 19:59:46.495415 29319 net.cpp:408] relu3 <- ip3
I0428 19:59:46.495419 29319 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:46.495623 29319 net.cpp:124] Setting up relu3
I0428 19:59:46.495632 29319 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:46.495635 29319 net.cpp:139] Memory required for data: 2305280
I0428 19:59:46.495638 29319 layer_factory.hpp:77] Creating layer loss
I0428 19:59:46.495645 29319 net.cpp:86] Creating Layer loss
I0428 19:59:46.495647 29319 net.cpp:408] loss <- ip3
I0428 19:59:46.495651 29319 net.cpp:408] loss <- label
I0428 19:59:46.495656 29319 net.cpp:382] loss -> loss
I0428 19:59:46.495669 29319 layer_factory.hpp:77] Creating layer loss
I0428 19:59:46.495900 29319 net.cpp:124] Setting up loss
I0428 19:59:46.495910 29319 net.cpp:131] Top shape: (1)
I0428 19:59:46.495914 29319 net.cpp:134]     with loss weight 1
I0428 19:59:46.495928 29319 net.cpp:139] Memory required for data: 2305284
I0428 19:59:46.495930 29319 net.cpp:200] loss needs backward computation.
I0428 19:59:46.495934 29319 net.cpp:200] relu3 needs backward computation.
I0428 19:59:46.495937 29319 net.cpp:200] ip3 needs backward computation.
I0428 19:59:46.495940 29319 net.cpp:200] relu2 needs backward computation.
I0428 19:59:46.495942 29319 net.cpp:200] ip2 needs backward computation.
I0428 19:59:46.495945 29319 net.cpp:200] relu1 needs backward computation.
I0428 19:59:46.495949 29319 net.cpp:200] ip1 needs backward computation.
I0428 19:59:46.495951 29319 net.cpp:200] pool1 needs backward computation.
I0428 19:59:46.495954 29319 net.cpp:200] conv1 needs backward computation.
I0428 19:59:46.495957 29319 net.cpp:200] pool0 needs backward computation.
I0428 19:59:46.495960 29319 net.cpp:200] conv0 needs backward computation.
I0428 19:59:46.495964 29319 net.cpp:202] mnist does not need backward computation.
I0428 19:59:46.495965 29319 net.cpp:244] This network produces output loss
I0428 19:59:46.495975 29319 net.cpp:257] Network initialization done.
I0428 19:59:46.496384 29319 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test857.prototxt
I0428 19:59:46.496425 29319 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:46.496512 29319 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:46.496587 29319 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:46.496628 29319 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:46.496644 29319 net.cpp:86] Creating Layer mnist
I0428 19:59:46.496649 29319 net.cpp:382] mnist -> data
I0428 19:59:46.496655 29319 net.cpp:382] mnist -> label
I0428 19:59:46.496733 29319 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:46.498781 29319 net.cpp:124] Setting up mnist
I0428 19:59:46.498811 29319 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:46.498831 29319 net.cpp:131] Top shape: 100 (100)
I0428 19:59:46.498834 29319 net.cpp:139] Memory required for data: 314000
I0428 19:59:46.498837 29319 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:46.498844 29319 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:46.498847 29319 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:46.498852 29319 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:46.498858 29319 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:46.498899 29319 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:46.498906 29319 net.cpp:131] Top shape: 100 (100)
I0428 19:59:46.498909 29319 net.cpp:131] Top shape: 100 (100)
I0428 19:59:46.498913 29319 net.cpp:139] Memory required for data: 314800
I0428 19:59:46.498915 29319 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:46.498924 29319 net.cpp:86] Creating Layer conv0
I0428 19:59:46.498926 29319 net.cpp:408] conv0 <- data
I0428 19:59:46.498931 29319 net.cpp:382] conv0 -> conv0
I0428 19:59:46.500535 29319 net.cpp:124] Setting up conv0
I0428 19:59:46.500564 29319 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:46.500568 29319 net.cpp:139] Memory required for data: 2618800
I0428 19:59:46.500576 29319 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:46.500582 29319 net.cpp:86] Creating Layer pool0
I0428 19:59:46.500586 29319 net.cpp:408] pool0 <- conv0
I0428 19:59:46.500589 29319 net.cpp:382] pool0 -> pool0
I0428 19:59:46.500639 29319 net.cpp:124] Setting up pool0
I0428 19:59:46.500646 29319 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:46.500648 29319 net.cpp:139] Memory required for data: 3194800
I0428 19:59:46.500651 29319 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:46.500659 29319 net.cpp:86] Creating Layer conv1
I0428 19:59:46.500663 29319 net.cpp:408] conv1 <- pool0
I0428 19:59:46.500668 29319 net.cpp:382] conv1 -> conv1
I0428 19:59:46.502929 29319 net.cpp:124] Setting up conv1
I0428 19:59:46.502959 29319 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:46.502964 29319 net.cpp:139] Memory required for data: 3450800
I0428 19:59:46.502971 29319 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:46.502979 29319 net.cpp:86] Creating Layer pool1
I0428 19:59:46.502981 29319 net.cpp:408] pool1 <- conv1
I0428 19:59:46.503003 29319 net.cpp:382] pool1 -> pool1
I0428 19:59:46.503043 29319 net.cpp:124] Setting up pool1
I0428 19:59:46.503051 29319 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:46.503053 29319 net.cpp:139] Memory required for data: 3514800
I0428 19:59:46.503057 29319 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:46.503064 29319 net.cpp:86] Creating Layer ip1
I0428 19:59:46.503067 29319 net.cpp:408] ip1 <- pool1
I0428 19:59:46.503073 29319 net.cpp:382] ip1 -> ip1
I0428 19:59:46.503229 29319 net.cpp:124] Setting up ip1
I0428 19:59:46.503237 29319 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:46.503250 29319 net.cpp:139] Memory required for data: 3534800
I0428 19:59:46.503258 29319 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:46.503263 29319 net.cpp:86] Creating Layer relu1
I0428 19:59:46.503267 29319 net.cpp:408] relu1 <- ip1
I0428 19:59:46.503270 29319 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:46.503536 29319 net.cpp:124] Setting up relu1
I0428 19:59:46.503546 29319 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:46.503551 29319 net.cpp:139] Memory required for data: 3554800
I0428 19:59:46.503553 29319 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:46.503566 29319 net.cpp:86] Creating Layer ip2
I0428 19:59:46.503571 29319 net.cpp:408] ip2 <- ip1
I0428 19:59:46.503576 29319 net.cpp:382] ip2 -> ip2
I0428 19:59:46.503701 29319 net.cpp:124] Setting up ip2
I0428 19:59:46.503710 29319 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:46.503712 29319 net.cpp:139] Memory required for data: 3574800
I0428 19:59:46.503717 29319 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:46.503723 29319 net.cpp:86] Creating Layer relu2
I0428 19:59:46.503726 29319 net.cpp:408] relu2 <- ip2
I0428 19:59:46.503731 29319 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:46.503916 29319 net.cpp:124] Setting up relu2
I0428 19:59:46.503924 29319 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:46.503927 29319 net.cpp:139] Memory required for data: 3594800
I0428 19:59:46.503931 29319 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:46.503937 29319 net.cpp:86] Creating Layer ip3
I0428 19:59:46.503939 29319 net.cpp:408] ip3 <- ip2
I0428 19:59:46.503944 29319 net.cpp:382] ip3 -> ip3
I0428 19:59:46.504045 29319 net.cpp:124] Setting up ip3
I0428 19:59:46.504051 29319 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:46.504055 29319 net.cpp:139] Memory required for data: 3598800
I0428 19:59:46.504062 29319 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:46.504066 29319 net.cpp:86] Creating Layer relu3
I0428 19:59:46.504070 29319 net.cpp:408] relu3 <- ip3
I0428 19:59:46.504075 29319 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:46.504997 29319 net.cpp:124] Setting up relu3
I0428 19:59:46.505008 29319 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:46.505028 29319 net.cpp:139] Memory required for data: 3602800
I0428 19:59:46.505033 29319 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:46.505039 29319 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:46.505043 29319 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:46.505048 29319 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:46.505054 29319 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:46.505095 29319 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:46.505102 29319 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:46.505106 29319 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:46.505110 29319 net.cpp:139] Memory required for data: 3610800
I0428 19:59:46.505112 29319 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:46.505118 29319 net.cpp:86] Creating Layer accuracy
I0428 19:59:46.505121 29319 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:46.505126 29319 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:46.505132 29319 net.cpp:382] accuracy -> accuracy
I0428 19:59:46.505139 29319 net.cpp:124] Setting up accuracy
I0428 19:59:46.505144 29319 net.cpp:131] Top shape: (1)
I0428 19:59:46.505147 29319 net.cpp:139] Memory required for data: 3610804
I0428 19:59:46.505169 29319 layer_factory.hpp:77] Creating layer loss
I0428 19:59:46.505174 29319 net.cpp:86] Creating Layer loss
I0428 19:59:46.505177 29319 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:46.505182 29319 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:46.505187 29319 net.cpp:382] loss -> loss
I0428 19:59:46.505198 29319 layer_factory.hpp:77] Creating layer loss
I0428 19:59:46.505450 29319 net.cpp:124] Setting up loss
I0428 19:59:46.505460 29319 net.cpp:131] Top shape: (1)
I0428 19:59:46.505462 29319 net.cpp:134]     with loss weight 1
I0428 19:59:46.505478 29319 net.cpp:139] Memory required for data: 3610808
I0428 19:59:46.505481 29319 net.cpp:200] loss needs backward computation.
I0428 19:59:46.505486 29319 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:46.505489 29319 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:46.505492 29319 net.cpp:200] relu3 needs backward computation.
I0428 19:59:46.505496 29319 net.cpp:200] ip3 needs backward computation.
I0428 19:59:46.505504 29319 net.cpp:200] relu2 needs backward computation.
I0428 19:59:46.505523 29319 net.cpp:200] ip2 needs backward computation.
I0428 19:59:46.505537 29319 net.cpp:200] relu1 needs backward computation.
I0428 19:59:46.505539 29319 net.cpp:200] ip1 needs backward computation.
I0428 19:59:46.505542 29319 net.cpp:200] pool1 needs backward computation.
I0428 19:59:46.505545 29319 net.cpp:200] conv1 needs backward computation.
I0428 19:59:46.505548 29319 net.cpp:200] pool0 needs backward computation.
I0428 19:59:46.505551 29319 net.cpp:200] conv0 needs backward computation.
I0428 19:59:46.505555 29319 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:46.505558 29319 net.cpp:202] mnist does not need backward computation.
I0428 19:59:46.505561 29319 net.cpp:244] This network produces output accuracy
I0428 19:59:46.505570 29319 net.cpp:244] This network produces output loss
I0428 19:59:46.505599 29319 net.cpp:257] Network initialization done.
I0428 19:59:46.505658 29319 solver.cpp:56] Solver scaffolding done.
I0428 19:59:46.506068 29319 caffe.cpp:248] Starting Optimization
I0428 19:59:46.506074 29319 solver.cpp:273] Solving LeNet
I0428 19:59:46.506077 29319 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:46.506959 29319 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:46.510669 29319 blocking_queue.cpp:49] Waiting for data
I0428 19:59:46.585453 29326 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:46.586015 29319 solver.cpp:398]     Test net output #0: accuracy = 0.0932
I0428 19:59:46.586055 29319 solver.cpp:398]     Test net output #1: loss = 2.30169 (* 1 = 2.30169 loss)
I0428 19:59:46.588635 29319 solver.cpp:219] Iteration 0 (-1.00772e-30 iter/s, 0.0825109s/100 iters), loss = 2.30156
I0428 19:59:46.588675 29319 solver.cpp:238]     Train net output #0: loss = 2.30156 (* 1 = 2.30156 loss)
I0428 19:59:46.588686 29319 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:46.669662 29319 solver.cpp:219] Iteration 100 (1234.69 iter/s, 0.0809923s/100 iters), loss = 0.399938
I0428 19:59:46.669704 29319 solver.cpp:238]     Train net output #0: loss = 0.399938 (* 1 = 0.399938 loss)
I0428 19:59:46.669710 29319 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:46.754487 29319 solver.cpp:219] Iteration 200 (1179.39 iter/s, 0.0847892s/100 iters), loss = 0.213478
I0428 19:59:46.754526 29319 solver.cpp:238]     Train net output #0: loss = 0.213478 (* 1 = 0.213478 loss)
I0428 19:59:46.754535 29319 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:46.837888 29319 solver.cpp:219] Iteration 300 (1199.49 iter/s, 0.083369s/100 iters), loss = 0.264802
I0428 19:59:46.837929 29319 solver.cpp:238]     Train net output #0: loss = 0.264802 (* 1 = 0.264802 loss)
I0428 19:59:46.837934 29319 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:46.915598 29319 solver.cpp:219] Iteration 400 (1287.37 iter/s, 0.0776776s/100 iters), loss = 0.123489
I0428 19:59:46.915637 29319 solver.cpp:238]     Train net output #0: loss = 0.123489 (* 1 = 0.123489 loss)
I0428 19:59:46.915643 29319 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:46.992447 29319 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:47.046461 29326 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:47.046967 29319 solver.cpp:398]     Test net output #0: accuracy = 0.9582
I0428 19:59:47.046999 29319 solver.cpp:398]     Test net output #1: loss = 0.134208 (* 1 = 0.134208 loss)
I0428 19:59:47.047845 29319 solver.cpp:219] Iteration 500 (756.357 iter/s, 0.132213s/100 iters), loss = 0.106252
I0428 19:59:47.047897 29319 solver.cpp:238]     Train net output #0: loss = 0.106252 (* 1 = 0.106252 loss)
I0428 19:59:47.047906 29319 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:47.133013 29319 solver.cpp:219] Iteration 600 (1174.77 iter/s, 0.0851231s/100 iters), loss = 0.176172
I0428 19:59:47.133051 29319 solver.cpp:238]     Train net output #0: loss = 0.176173 (* 1 = 0.176173 loss)
I0428 19:59:47.133057 29319 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:47.212347 29319 solver.cpp:219] Iteration 700 (1260.99 iter/s, 0.0793027s/100 iters), loss = 0.147536
I0428 19:59:47.212388 29319 solver.cpp:238]     Train net output #0: loss = 0.147536 (* 1 = 0.147536 loss)
I0428 19:59:47.212393 29319 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:47.290858 29319 solver.cpp:219] Iteration 800 (1274.52 iter/s, 0.0784609s/100 iters), loss = 0.204487
I0428 19:59:47.290899 29319 solver.cpp:238]     Train net output #0: loss = 0.204487 (* 1 = 0.204487 loss)
I0428 19:59:47.290904 29319 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:47.369204 29319 solver.cpp:219] Iteration 900 (1276.92 iter/s, 0.0783134s/100 iters), loss = 0.17023
I0428 19:59:47.369243 29319 solver.cpp:238]     Train net output #0: loss = 0.17023 (* 1 = 0.17023 loss)
I0428 19:59:47.369249 29319 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:47.395380 29325 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:47.446734 29319 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:47.447671 29319 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:47.448230 29319 solver.cpp:311] Iteration 1000, loss = 0.110532
I0428 19:59:47.448246 29319 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:47.502550 29326 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:47.503093 29319 solver.cpp:398]     Test net output #0: accuracy = 0.9697
I0428 19:59:47.503129 29319 solver.cpp:398]     Test net output #1: loss = 0.0911306 (* 1 = 0.0911306 loss)
I0428 19:59:47.503135 29319 solver.cpp:316] Optimization Done.
I0428 19:59:47.503139 29319 caffe.cpp:259] Optimization Done.
