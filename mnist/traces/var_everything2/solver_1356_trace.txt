I0428 20:20:07.334658  1489 caffe.cpp:218] Using GPUs 0
I0428 20:20:07.372725  1489 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:07.886556  1489 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1356.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:07.886699  1489 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1356.prototxt
I0428 20:20:07.887100  1489 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:07.887118  1489 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:07.887213  1489 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:07.887289  1489 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:07.887389  1489 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:07.887413  1489 net.cpp:86] Creating Layer mnist
I0428 20:20:07.887419  1489 net.cpp:382] mnist -> data
I0428 20:20:07.887442  1489 net.cpp:382] mnist -> label
I0428 20:20:07.888528  1489 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:07.891209  1489 net.cpp:124] Setting up mnist
I0428 20:20:07.891227  1489 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:07.891234  1489 net.cpp:131] Top shape: 64 (64)
I0428 20:20:07.891238  1489 net.cpp:139] Memory required for data: 200960
I0428 20:20:07.891245  1489 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:07.891263  1489 net.cpp:86] Creating Layer conv0
I0428 20:20:07.891284  1489 net.cpp:408] conv0 <- data
I0428 20:20:07.891296  1489 net.cpp:382] conv0 -> conv0
I0428 20:20:08.173894  1489 net.cpp:124] Setting up conv0
I0428 20:20:08.173921  1489 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:08.173925  1489 net.cpp:139] Memory required for data: 7573760
I0428 20:20:08.173940  1489 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:08.173954  1489 net.cpp:86] Creating Layer pool0
I0428 20:20:08.173959  1489 net.cpp:408] pool0 <- conv0
I0428 20:20:08.173964  1489 net.cpp:382] pool0 -> pool0
I0428 20:20:08.174008  1489 net.cpp:124] Setting up pool0
I0428 20:20:08.174013  1489 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:08.174016  1489 net.cpp:139] Memory required for data: 9416960
I0428 20:20:08.174019  1489 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:08.174031  1489 net.cpp:86] Creating Layer conv1
I0428 20:20:08.174033  1489 net.cpp:408] conv1 <- pool0
I0428 20:20:08.174037  1489 net.cpp:382] conv1 -> conv1
I0428 20:20:08.176064  1489 net.cpp:124] Setting up conv1
I0428 20:20:08.176077  1489 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:08.176096  1489 net.cpp:139] Memory required for data: 9826560
I0428 20:20:08.176105  1489 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:08.176113  1489 net.cpp:86] Creating Layer pool1
I0428 20:20:08.176117  1489 net.cpp:408] pool1 <- conv1
I0428 20:20:08.176122  1489 net.cpp:382] pool1 -> pool1
I0428 20:20:08.176187  1489 net.cpp:124] Setting up pool1
I0428 20:20:08.176205  1489 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:08.176208  1489 net.cpp:139] Memory required for data: 9928960
I0428 20:20:08.176211  1489 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:08.176218  1489 net.cpp:86] Creating Layer ip1
I0428 20:20:08.176221  1489 net.cpp:408] ip1 <- pool1
I0428 20:20:08.176225  1489 net.cpp:382] ip1 -> ip1
I0428 20:20:08.176445  1489 net.cpp:124] Setting up ip1
I0428 20:20:08.176452  1489 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:08.176455  1489 net.cpp:139] Memory required for data: 9941760
I0428 20:20:08.176462  1489 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:08.176467  1489 net.cpp:86] Creating Layer relu1
I0428 20:20:08.176470  1489 net.cpp:408] relu1 <- ip1
I0428 20:20:08.176475  1489 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:08.176666  1489 net.cpp:124] Setting up relu1
I0428 20:20:08.176674  1489 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:08.176677  1489 net.cpp:139] Memory required for data: 9954560
I0428 20:20:08.176681  1489 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:08.176687  1489 net.cpp:86] Creating Layer ip2
I0428 20:20:08.176690  1489 net.cpp:408] ip2 <- ip1
I0428 20:20:08.176695  1489 net.cpp:382] ip2 -> ip2
I0428 20:20:08.176791  1489 net.cpp:124] Setting up ip2
I0428 20:20:08.176798  1489 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:08.176801  1489 net.cpp:139] Memory required for data: 9957120
I0428 20:20:08.176807  1489 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:08.176822  1489 net.cpp:86] Creating Layer relu2
I0428 20:20:08.176826  1489 net.cpp:408] relu2 <- ip2
I0428 20:20:08.176829  1489 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:08.177681  1489 net.cpp:124] Setting up relu2
I0428 20:20:08.177695  1489 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:08.177697  1489 net.cpp:139] Memory required for data: 9959680
I0428 20:20:08.177701  1489 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:08.177707  1489 net.cpp:86] Creating Layer ip3
I0428 20:20:08.177726  1489 net.cpp:408] ip3 <- ip2
I0428 20:20:08.177732  1489 net.cpp:382] ip3 -> ip3
I0428 20:20:08.177831  1489 net.cpp:124] Setting up ip3
I0428 20:20:08.177839  1489 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:08.177841  1489 net.cpp:139] Memory required for data: 9962240
I0428 20:20:08.177850  1489 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:08.177855  1489 net.cpp:86] Creating Layer relu3
I0428 20:20:08.177873  1489 net.cpp:408] relu3 <- ip3
I0428 20:20:08.177877  1489 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:08.178069  1489 net.cpp:124] Setting up relu3
I0428 20:20:08.178078  1489 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:08.178081  1489 net.cpp:139] Memory required for data: 9964800
I0428 20:20:08.178083  1489 layer_factory.hpp:77] Creating layer loss
I0428 20:20:08.178089  1489 net.cpp:86] Creating Layer loss
I0428 20:20:08.178092  1489 net.cpp:408] loss <- ip3
I0428 20:20:08.178097  1489 net.cpp:408] loss <- label
I0428 20:20:08.178100  1489 net.cpp:382] loss -> loss
I0428 20:20:08.178117  1489 layer_factory.hpp:77] Creating layer loss
I0428 20:20:08.178334  1489 net.cpp:124] Setting up loss
I0428 20:20:08.178344  1489 net.cpp:131] Top shape: (1)
I0428 20:20:08.178347  1489 net.cpp:134]     with loss weight 1
I0428 20:20:08.178361  1489 net.cpp:139] Memory required for data: 9964804
I0428 20:20:08.178365  1489 net.cpp:200] loss needs backward computation.
I0428 20:20:08.178369  1489 net.cpp:200] relu3 needs backward computation.
I0428 20:20:08.178371  1489 net.cpp:200] ip3 needs backward computation.
I0428 20:20:08.178375  1489 net.cpp:200] relu2 needs backward computation.
I0428 20:20:08.178376  1489 net.cpp:200] ip2 needs backward computation.
I0428 20:20:08.178380  1489 net.cpp:200] relu1 needs backward computation.
I0428 20:20:08.178382  1489 net.cpp:200] ip1 needs backward computation.
I0428 20:20:08.178385  1489 net.cpp:200] pool1 needs backward computation.
I0428 20:20:08.178388  1489 net.cpp:200] conv1 needs backward computation.
I0428 20:20:08.178391  1489 net.cpp:200] pool0 needs backward computation.
I0428 20:20:08.178395  1489 net.cpp:200] conv0 needs backward computation.
I0428 20:20:08.178397  1489 net.cpp:202] mnist does not need backward computation.
I0428 20:20:08.178400  1489 net.cpp:244] This network produces output loss
I0428 20:20:08.178408  1489 net.cpp:257] Network initialization done.
I0428 20:20:08.178788  1489 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1356.prototxt
I0428 20:20:08.178829  1489 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:08.178917  1489 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:08.178995  1489 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:08.179040  1489 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:08.179052  1489 net.cpp:86] Creating Layer mnist
I0428 20:20:08.179056  1489 net.cpp:382] mnist -> data
I0428 20:20:08.179064  1489 net.cpp:382] mnist -> label
I0428 20:20:08.179177  1489 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:08.181053  1489 net.cpp:124] Setting up mnist
I0428 20:20:08.181083  1489 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:08.181088  1489 net.cpp:131] Top shape: 100 (100)
I0428 20:20:08.181092  1489 net.cpp:139] Memory required for data: 314000
I0428 20:20:08.181097  1489 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:08.181102  1489 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:08.181107  1489 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:08.181112  1489 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:08.181118  1489 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:08.181167  1489 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:08.181172  1489 net.cpp:131] Top shape: 100 (100)
I0428 20:20:08.181176  1489 net.cpp:131] Top shape: 100 (100)
I0428 20:20:08.181180  1489 net.cpp:139] Memory required for data: 314800
I0428 20:20:08.181182  1489 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:08.181191  1489 net.cpp:86] Creating Layer conv0
I0428 20:20:08.181195  1489 net.cpp:408] conv0 <- data
I0428 20:20:08.181200  1489 net.cpp:382] conv0 -> conv0
I0428 20:20:08.183017  1489 net.cpp:124] Setting up conv0
I0428 20:20:08.183030  1489 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:08.183034  1489 net.cpp:139] Memory required for data: 11834800
I0428 20:20:08.183043  1489 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:08.183049  1489 net.cpp:86] Creating Layer pool0
I0428 20:20:08.183053  1489 net.cpp:408] pool0 <- conv0
I0428 20:20:08.183058  1489 net.cpp:382] pool0 -> pool0
I0428 20:20:08.183090  1489 net.cpp:124] Setting up pool0
I0428 20:20:08.183095  1489 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:08.183099  1489 net.cpp:139] Memory required for data: 14714800
I0428 20:20:08.183101  1489 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:08.183109  1489 net.cpp:86] Creating Layer conv1
I0428 20:20:08.183112  1489 net.cpp:408] conv1 <- pool0
I0428 20:20:08.183117  1489 net.cpp:382] conv1 -> conv1
I0428 20:20:08.184895  1489 net.cpp:124] Setting up conv1
I0428 20:20:08.184928  1489 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:08.184932  1489 net.cpp:139] Memory required for data: 15354800
I0428 20:20:08.184942  1489 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:08.184948  1489 net.cpp:86] Creating Layer pool1
I0428 20:20:08.184958  1489 net.cpp:408] pool1 <- conv1
I0428 20:20:08.184964  1489 net.cpp:382] pool1 -> pool1
I0428 20:20:08.185021  1489 net.cpp:124] Setting up pool1
I0428 20:20:08.185027  1489 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:08.185030  1489 net.cpp:139] Memory required for data: 15514800
I0428 20:20:08.185039  1489 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:08.185047  1489 net.cpp:86] Creating Layer ip1
I0428 20:20:08.185051  1489 net.cpp:408] ip1 <- pool1
I0428 20:20:08.185057  1489 net.cpp:382] ip1 -> ip1
I0428 20:20:08.185323  1489 net.cpp:124] Setting up ip1
I0428 20:20:08.185344  1489 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:08.185358  1489 net.cpp:139] Memory required for data: 15534800
I0428 20:20:08.185365  1489 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:08.185370  1489 net.cpp:86] Creating Layer relu1
I0428 20:20:08.185374  1489 net.cpp:408] relu1 <- ip1
I0428 20:20:08.185379  1489 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:08.185559  1489 net.cpp:124] Setting up relu1
I0428 20:20:08.185570  1489 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:08.185573  1489 net.cpp:139] Memory required for data: 15554800
I0428 20:20:08.185576  1489 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:08.185583  1489 net.cpp:86] Creating Layer ip2
I0428 20:20:08.185586  1489 net.cpp:408] ip2 <- ip1
I0428 20:20:08.185600  1489 net.cpp:382] ip2 -> ip2
I0428 20:20:08.185736  1489 net.cpp:124] Setting up ip2
I0428 20:20:08.185744  1489 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:08.185746  1489 net.cpp:139] Memory required for data: 15558800
I0428 20:20:08.185752  1489 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:08.185756  1489 net.cpp:86] Creating Layer relu2
I0428 20:20:08.185760  1489 net.cpp:408] relu2 <- ip2
I0428 20:20:08.185765  1489 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:08.185961  1489 net.cpp:124] Setting up relu2
I0428 20:20:08.185969  1489 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:08.185973  1489 net.cpp:139] Memory required for data: 15562800
I0428 20:20:08.185982  1489 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:08.185987  1489 net.cpp:86] Creating Layer ip3
I0428 20:20:08.185991  1489 net.cpp:408] ip3 <- ip2
I0428 20:20:08.185997  1489 net.cpp:382] ip3 -> ip3
I0428 20:20:08.186187  1489 net.cpp:124] Setting up ip3
I0428 20:20:08.186194  1489 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:08.186198  1489 net.cpp:139] Memory required for data: 15566800
I0428 20:20:08.186206  1489 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:08.186210  1489 net.cpp:86] Creating Layer relu3
I0428 20:20:08.186214  1489 net.cpp:408] relu3 <- ip3
I0428 20:20:08.186219  1489 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:08.187047  1489 net.cpp:124] Setting up relu3
I0428 20:20:08.187059  1489 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:08.187062  1489 net.cpp:139] Memory required for data: 15570800
I0428 20:20:08.187065  1489 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:08.187072  1489 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:08.187074  1489 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:08.187079  1489 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:08.187085  1489 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:08.187126  1489 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:08.187131  1489 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:08.187134  1489 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:08.187144  1489 net.cpp:139] Memory required for data: 15578800
I0428 20:20:08.187146  1489 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:08.187151  1489 net.cpp:86] Creating Layer accuracy
I0428 20:20:08.187155  1489 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:08.187157  1489 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:08.187163  1489 net.cpp:382] accuracy -> accuracy
I0428 20:20:08.187170  1489 net.cpp:124] Setting up accuracy
I0428 20:20:08.187173  1489 net.cpp:131] Top shape: (1)
I0428 20:20:08.187176  1489 net.cpp:139] Memory required for data: 15578804
I0428 20:20:08.187178  1489 layer_factory.hpp:77] Creating layer loss
I0428 20:20:08.187182  1489 net.cpp:86] Creating Layer loss
I0428 20:20:08.187186  1489 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:08.187189  1489 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:08.187193  1489 net.cpp:382] loss -> loss
I0428 20:20:08.187199  1489 layer_factory.hpp:77] Creating layer loss
I0428 20:20:08.187445  1489 net.cpp:124] Setting up loss
I0428 20:20:08.187454  1489 net.cpp:131] Top shape: (1)
I0428 20:20:08.187458  1489 net.cpp:134]     with loss weight 1
I0428 20:20:08.187474  1489 net.cpp:139] Memory required for data: 15578808
I0428 20:20:08.187479  1489 net.cpp:200] loss needs backward computation.
I0428 20:20:08.187481  1489 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:08.187486  1489 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:08.187495  1489 net.cpp:200] relu3 needs backward computation.
I0428 20:20:08.187499  1489 net.cpp:200] ip3 needs backward computation.
I0428 20:20:08.187500  1489 net.cpp:200] relu2 needs backward computation.
I0428 20:20:08.187523  1489 net.cpp:200] ip2 needs backward computation.
I0428 20:20:08.187526  1489 net.cpp:200] relu1 needs backward computation.
I0428 20:20:08.187528  1489 net.cpp:200] ip1 needs backward computation.
I0428 20:20:08.187531  1489 net.cpp:200] pool1 needs backward computation.
I0428 20:20:08.187535  1489 net.cpp:200] conv1 needs backward computation.
I0428 20:20:08.187543  1489 net.cpp:200] pool0 needs backward computation.
I0428 20:20:08.187546  1489 net.cpp:200] conv0 needs backward computation.
I0428 20:20:08.187549  1489 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:08.187558  1489 net.cpp:202] mnist does not need backward computation.
I0428 20:20:08.187561  1489 net.cpp:244] This network produces output accuracy
I0428 20:20:08.187564  1489 net.cpp:244] This network produces output loss
I0428 20:20:08.187575  1489 net.cpp:257] Network initialization done.
I0428 20:20:08.187615  1489 solver.cpp:56] Solver scaffolding done.
I0428 20:20:08.187991  1489 caffe.cpp:248] Starting Optimization
I0428 20:20:08.187999  1489 solver.cpp:273] Solving LeNet
I0428 20:20:08.188002  1489 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:08.188838  1489 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:08.195379  1489 blocking_queue.cpp:49] Waiting for data
I0428 20:20:08.266746  1496 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:08.267523  1489 solver.cpp:398]     Test net output #0: accuracy = 0.0873
I0428 20:20:08.267541  1489 solver.cpp:398]     Test net output #1: loss = 2.33219 (* 1 = 2.33219 loss)
I0428 20:20:08.271827  1489 solver.cpp:219] Iteration 0 (0 iter/s, 0.083799s/100 iters), loss = 2.36073
I0428 20:20:08.271850  1489 solver.cpp:238]     Train net output #0: loss = 2.36073 (* 1 = 2.36073 loss)
I0428 20:20:08.271877  1489 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:08.407676  1489 solver.cpp:219] Iteration 100 (736.322 iter/s, 0.13581s/100 iters), loss = 0.338703
I0428 20:20:08.407701  1489 solver.cpp:238]     Train net output #0: loss = 0.338703 (* 1 = 0.338703 loss)
I0428 20:20:08.407707  1489 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:08.557868  1489 solver.cpp:219] Iteration 200 (665.99 iter/s, 0.150152s/100 iters), loss = 0.363201
I0428 20:20:08.557904  1489 solver.cpp:238]     Train net output #0: loss = 0.363201 (* 1 = 0.363201 loss)
I0428 20:20:08.557914  1489 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:08.697404  1489 solver.cpp:219] Iteration 300 (716.901 iter/s, 0.139489s/100 iters), loss = 0.238485
I0428 20:20:08.697432  1489 solver.cpp:238]     Train net output #0: loss = 0.238485 (* 1 = 0.238485 loss)
I0428 20:20:08.697438  1489 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:08.838927  1489 solver.cpp:219] Iteration 400 (706.793 iter/s, 0.141484s/100 iters), loss = 0.169942
I0428 20:20:08.838951  1489 solver.cpp:238]     Train net output #0: loss = 0.169942 (* 1 = 0.169942 loss)
I0428 20:20:08.838958  1489 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:08.979949  1489 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:09.048713  1496 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:09.050950  1489 solver.cpp:398]     Test net output #0: accuracy = 0.9556
I0428 20:20:09.050969  1489 solver.cpp:398]     Test net output #1: loss = 0.141308 (* 1 = 0.141308 loss)
I0428 20:20:09.052191  1489 solver.cpp:219] Iteration 500 (468.989 iter/s, 0.213224s/100 iters), loss = 0.111979
I0428 20:20:09.052232  1489 solver.cpp:238]     Train net output #0: loss = 0.111979 (* 1 = 0.111979 loss)
I0428 20:20:09.052238  1489 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:09.189376  1489 solver.cpp:219] Iteration 600 (729.208 iter/s, 0.137135s/100 iters), loss = 0.0789587
I0428 20:20:09.189400  1489 solver.cpp:238]     Train net output #0: loss = 0.0789587 (* 1 = 0.0789587 loss)
I0428 20:20:09.189406  1489 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:09.332165  1489 solver.cpp:219] Iteration 700 (700.522 iter/s, 0.142751s/100 iters), loss = 0.229554
I0428 20:20:09.332196  1489 solver.cpp:238]     Train net output #0: loss = 0.229554 (* 1 = 0.229554 loss)
I0428 20:20:09.332206  1489 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:09.469739  1489 solver.cpp:219] Iteration 800 (727.112 iter/s, 0.13753s/100 iters), loss = 0.223122
I0428 20:20:09.469777  1489 solver.cpp:238]     Train net output #0: loss = 0.223121 (* 1 = 0.223121 loss)
I0428 20:20:09.469802  1489 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:09.611773  1489 solver.cpp:219] Iteration 900 (704.296 iter/s, 0.141986s/100 iters), loss = 0.137804
I0428 20:20:09.611802  1489 solver.cpp:238]     Train net output #0: loss = 0.137804 (* 1 = 0.137804 loss)
I0428 20:20:09.611809  1489 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:09.658687  1495 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:09.748411  1489 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:09.750143  1489 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:09.751196  1489 solver.cpp:311] Iteration 1000, loss = 0.106136
I0428 20:20:09.751212  1489 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:09.815968  1496 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:09.817692  1489 solver.cpp:398]     Test net output #0: accuracy = 0.9757
I0428 20:20:09.817711  1489 solver.cpp:398]     Test net output #1: loss = 0.0811768 (* 1 = 0.0811768 loss)
I0428 20:20:09.817716  1489 solver.cpp:316] Optimization Done.
I0428 20:20:09.817719  1489 caffe.cpp:259] Optimization Done.
