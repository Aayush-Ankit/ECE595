I0428 19:45:27.332537 25808 caffe.cpp:218] Using GPUs 0
I0428 19:45:27.370179 25808 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:45:27.881978 25808 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test472.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:45:27.882122 25808 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test472.prototxt
I0428 19:45:27.882505 25808 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:45:27.882524 25808 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:45:27.882614 25808 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:27.882691 25808 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:27.882791 25808 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:45:27.882815 25808 net.cpp:86] Creating Layer mnist
I0428 19:45:27.882823 25808 net.cpp:382] mnist -> data
I0428 19:45:27.882848 25808 net.cpp:382] mnist -> label
I0428 19:45:27.883954 25808 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:45:27.886417 25808 net.cpp:124] Setting up mnist
I0428 19:45:27.886438 25808 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:45:27.886445 25808 net.cpp:131] Top shape: 64 (64)
I0428 19:45:27.886448 25808 net.cpp:139] Memory required for data: 200960
I0428 19:45:27.886456 25808 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:27.886472 25808 net.cpp:86] Creating Layer conv0
I0428 19:45:27.886485 25808 net.cpp:408] conv0 <- data
I0428 19:45:27.886497 25808 net.cpp:382] conv0 -> conv0
I0428 19:45:28.169975 25808 net.cpp:124] Setting up conv0
I0428 19:45:28.170002 25808 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:45:28.170006 25808 net.cpp:139] Memory required for data: 495872
I0428 19:45:28.170040 25808 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:28.170063 25808 net.cpp:86] Creating Layer pool0
I0428 19:45:28.170066 25808 net.cpp:408] pool0 <- conv0
I0428 19:45:28.170073 25808 net.cpp:382] pool0 -> pool0
I0428 19:45:28.170142 25808 net.cpp:124] Setting up pool0
I0428 19:45:28.170150 25808 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:45:28.170155 25808 net.cpp:139] Memory required for data: 569600
I0428 19:45:28.170157 25808 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:28.170169 25808 net.cpp:86] Creating Layer conv1
I0428 19:45:28.170176 25808 net.cpp:408] conv1 <- pool0
I0428 19:45:28.170181 25808 net.cpp:382] conv1 -> conv1
I0428 19:45:28.172880 25808 net.cpp:124] Setting up conv1
I0428 19:45:28.172895 25808 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:45:28.172899 25808 net.cpp:139] Memory required for data: 2208000
I0428 19:45:28.172909 25808 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:28.172915 25808 net.cpp:86] Creating Layer pool1
I0428 19:45:28.172919 25808 net.cpp:408] pool1 <- conv1
I0428 19:45:28.172924 25808 net.cpp:382] pool1 -> pool1
I0428 19:45:28.172966 25808 net.cpp:124] Setting up pool1
I0428 19:45:28.172972 25808 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:45:28.172976 25808 net.cpp:139] Memory required for data: 2617600
I0428 19:45:28.172978 25808 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:28.172986 25808 net.cpp:86] Creating Layer ip1
I0428 19:45:28.172989 25808 net.cpp:408] ip1 <- pool1
I0428 19:45:28.172994 25808 net.cpp:382] ip1 -> ip1
I0428 19:45:28.173173 25808 net.cpp:124] Setting up ip1
I0428 19:45:28.173182 25808 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:28.173184 25808 net.cpp:139] Memory required for data: 2620160
I0428 19:45:28.173192 25808 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:28.173199 25808 net.cpp:86] Creating Layer relu1
I0428 19:45:28.173203 25808 net.cpp:408] relu1 <- ip1
I0428 19:45:28.173207 25808 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:28.173367 25808 net.cpp:124] Setting up relu1
I0428 19:45:28.173375 25808 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:28.173378 25808 net.cpp:139] Memory required for data: 2622720
I0428 19:45:28.173382 25808 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:28.173388 25808 net.cpp:86] Creating Layer ip2
I0428 19:45:28.173390 25808 net.cpp:408] ip2 <- ip1
I0428 19:45:28.173395 25808 net.cpp:382] ip2 -> ip2
I0428 19:45:28.173486 25808 net.cpp:124] Setting up ip2
I0428 19:45:28.173492 25808 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:28.173496 25808 net.cpp:139] Memory required for data: 2625280
I0428 19:45:28.173501 25808 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:28.173507 25808 net.cpp:86] Creating Layer relu2
I0428 19:45:28.173511 25808 net.cpp:408] relu2 <- ip2
I0428 19:45:28.173514 25808 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:28.174249 25808 net.cpp:124] Setting up relu2
I0428 19:45:28.174263 25808 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:28.174266 25808 net.cpp:139] Memory required for data: 2627840
I0428 19:45:28.174269 25808 layer_factory.hpp:77] Creating layer loss
I0428 19:45:28.174275 25808 net.cpp:86] Creating Layer loss
I0428 19:45:28.174279 25808 net.cpp:408] loss <- ip2
I0428 19:45:28.174283 25808 net.cpp:408] loss <- label
I0428 19:45:28.174289 25808 net.cpp:382] loss -> loss
I0428 19:45:28.174305 25808 layer_factory.hpp:77] Creating layer loss
I0428 19:45:28.174526 25808 net.cpp:124] Setting up loss
I0428 19:45:28.174545 25808 net.cpp:131] Top shape: (1)
I0428 19:45:28.174547 25808 net.cpp:134]     with loss weight 1
I0428 19:45:28.174563 25808 net.cpp:139] Memory required for data: 2627844
I0428 19:45:28.174567 25808 net.cpp:200] loss needs backward computation.
I0428 19:45:28.174571 25808 net.cpp:200] relu2 needs backward computation.
I0428 19:45:28.174574 25808 net.cpp:200] ip2 needs backward computation.
I0428 19:45:28.174577 25808 net.cpp:200] relu1 needs backward computation.
I0428 19:45:28.174581 25808 net.cpp:200] ip1 needs backward computation.
I0428 19:45:28.174595 25808 net.cpp:200] pool1 needs backward computation.
I0428 19:45:28.174598 25808 net.cpp:200] conv1 needs backward computation.
I0428 19:45:28.174602 25808 net.cpp:200] pool0 needs backward computation.
I0428 19:45:28.174605 25808 net.cpp:200] conv0 needs backward computation.
I0428 19:45:28.174608 25808 net.cpp:202] mnist does not need backward computation.
I0428 19:45:28.174612 25808 net.cpp:244] This network produces output loss
I0428 19:45:28.174619 25808 net.cpp:257] Network initialization done.
I0428 19:45:28.174903 25808 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test472.prototxt
I0428 19:45:28.174926 25808 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:45:28.175006 25808 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:28.175068 25808 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:28.175112 25808 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:45:28.175142 25808 net.cpp:86] Creating Layer mnist
I0428 19:45:28.175145 25808 net.cpp:382] mnist -> data
I0428 19:45:28.175153 25808 net.cpp:382] mnist -> label
I0428 19:45:28.175241 25808 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:45:28.177162 25808 net.cpp:124] Setting up mnist
I0428 19:45:28.177176 25808 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:45:28.177198 25808 net.cpp:131] Top shape: 100 (100)
I0428 19:45:28.177201 25808 net.cpp:139] Memory required for data: 314000
I0428 19:45:28.177206 25808 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:45:28.177212 25808 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:45:28.177217 25808 net.cpp:408] label_mnist_1_split <- label
I0428 19:45:28.177220 25808 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:45:28.177227 25808 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:45:28.177271 25808 net.cpp:124] Setting up label_mnist_1_split
I0428 19:45:28.177289 25808 net.cpp:131] Top shape: 100 (100)
I0428 19:45:28.177294 25808 net.cpp:131] Top shape: 100 (100)
I0428 19:45:28.177296 25808 net.cpp:139] Memory required for data: 314800
I0428 19:45:28.177300 25808 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:28.177309 25808 net.cpp:86] Creating Layer conv0
I0428 19:45:28.177314 25808 net.cpp:408] conv0 <- data
I0428 19:45:28.177319 25808 net.cpp:382] conv0 -> conv0
I0428 19:45:28.179033 25808 net.cpp:124] Setting up conv0
I0428 19:45:28.179047 25808 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:45:28.179051 25808 net.cpp:139] Memory required for data: 775600
I0428 19:45:28.179060 25808 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:28.179066 25808 net.cpp:86] Creating Layer pool0
I0428 19:45:28.179070 25808 net.cpp:408] pool0 <- conv0
I0428 19:45:28.179075 25808 net.cpp:382] pool0 -> pool0
I0428 19:45:28.179110 25808 net.cpp:124] Setting up pool0
I0428 19:45:28.179116 25808 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:45:28.179119 25808 net.cpp:139] Memory required for data: 890800
I0428 19:45:28.179122 25808 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:28.179131 25808 net.cpp:86] Creating Layer conv1
I0428 19:45:28.179134 25808 net.cpp:408] conv1 <- pool0
I0428 19:45:28.179139 25808 net.cpp:382] conv1 -> conv1
I0428 19:45:28.180598 25808 net.cpp:124] Setting up conv1
I0428 19:45:28.180610 25808 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:45:28.180613 25808 net.cpp:139] Memory required for data: 3450800
I0428 19:45:28.180622 25808 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:28.180629 25808 net.cpp:86] Creating Layer pool1
I0428 19:45:28.180632 25808 net.cpp:408] pool1 <- conv1
I0428 19:45:28.180639 25808 net.cpp:382] pool1 -> pool1
I0428 19:45:28.180673 25808 net.cpp:124] Setting up pool1
I0428 19:45:28.180681 25808 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:45:28.180685 25808 net.cpp:139] Memory required for data: 4090800
I0428 19:45:28.180687 25808 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:28.180693 25808 net.cpp:86] Creating Layer ip1
I0428 19:45:28.180696 25808 net.cpp:408] ip1 <- pool1
I0428 19:45:28.180701 25808 net.cpp:382] ip1 -> ip1
I0428 19:45:28.180943 25808 net.cpp:124] Setting up ip1
I0428 19:45:28.180953 25808 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:28.180963 25808 net.cpp:139] Memory required for data: 4094800
I0428 19:45:28.180979 25808 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:28.180984 25808 net.cpp:86] Creating Layer relu1
I0428 19:45:28.180989 25808 net.cpp:408] relu1 <- ip1
I0428 19:45:28.180999 25808 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:28.181171 25808 net.cpp:124] Setting up relu1
I0428 19:45:28.181180 25808 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:28.181185 25808 net.cpp:139] Memory required for data: 4098800
I0428 19:45:28.181188 25808 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:28.181196 25808 net.cpp:86] Creating Layer ip2
I0428 19:45:28.181216 25808 net.cpp:408] ip2 <- ip1
I0428 19:45:28.181221 25808 net.cpp:382] ip2 -> ip2
I0428 19:45:28.181371 25808 net.cpp:124] Setting up ip2
I0428 19:45:28.181380 25808 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:28.181382 25808 net.cpp:139] Memory required for data: 4102800
I0428 19:45:28.181388 25808 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:28.181392 25808 net.cpp:86] Creating Layer relu2
I0428 19:45:28.181396 25808 net.cpp:408] relu2 <- ip2
I0428 19:45:28.181401 25808 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:28.181614 25808 net.cpp:124] Setting up relu2
I0428 19:45:28.181623 25808 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:28.181627 25808 net.cpp:139] Memory required for data: 4106800
I0428 19:45:28.181645 25808 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:45:28.181650 25808 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:45:28.181654 25808 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:45:28.181658 25808 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:45:28.181677 25808 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:45:28.181744 25808 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:45:28.181751 25808 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:28.181756 25808 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:28.181758 25808 net.cpp:139] Memory required for data: 4114800
I0428 19:45:28.181762 25808 layer_factory.hpp:77] Creating layer accuracy
I0428 19:45:28.181767 25808 net.cpp:86] Creating Layer accuracy
I0428 19:45:28.181771 25808 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:45:28.181776 25808 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:45:28.181780 25808 net.cpp:382] accuracy -> accuracy
I0428 19:45:28.181787 25808 net.cpp:124] Setting up accuracy
I0428 19:45:28.181792 25808 net.cpp:131] Top shape: (1)
I0428 19:45:28.181794 25808 net.cpp:139] Memory required for data: 4114804
I0428 19:45:28.181797 25808 layer_factory.hpp:77] Creating layer loss
I0428 19:45:28.181802 25808 net.cpp:86] Creating Layer loss
I0428 19:45:28.181805 25808 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:45:28.181809 25808 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:45:28.181814 25808 net.cpp:382] loss -> loss
I0428 19:45:28.181820 25808 layer_factory.hpp:77] Creating layer loss
I0428 19:45:28.182073 25808 net.cpp:124] Setting up loss
I0428 19:45:28.182082 25808 net.cpp:131] Top shape: (1)
I0428 19:45:28.182086 25808 net.cpp:134]     with loss weight 1
I0428 19:45:28.182092 25808 net.cpp:139] Memory required for data: 4114808
I0428 19:45:28.182096 25808 net.cpp:200] loss needs backward computation.
I0428 19:45:28.182099 25808 net.cpp:202] accuracy does not need backward computation.
I0428 19:45:28.182102 25808 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:45:28.182106 25808 net.cpp:200] relu2 needs backward computation.
I0428 19:45:28.182108 25808 net.cpp:200] ip2 needs backward computation.
I0428 19:45:28.182111 25808 net.cpp:200] relu1 needs backward computation.
I0428 19:45:28.182114 25808 net.cpp:200] ip1 needs backward computation.
I0428 19:45:28.182117 25808 net.cpp:200] pool1 needs backward computation.
I0428 19:45:28.182121 25808 net.cpp:200] conv1 needs backward computation.
I0428 19:45:28.182130 25808 net.cpp:200] pool0 needs backward computation.
I0428 19:45:28.182133 25808 net.cpp:200] conv0 needs backward computation.
I0428 19:45:28.182142 25808 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:45:28.182147 25808 net.cpp:202] mnist does not need backward computation.
I0428 19:45:28.182149 25808 net.cpp:244] This network produces output accuracy
I0428 19:45:28.182153 25808 net.cpp:244] This network produces output loss
I0428 19:45:28.182164 25808 net.cpp:257] Network initialization done.
I0428 19:45:28.182201 25808 solver.cpp:56] Solver scaffolding done.
I0428 19:45:28.182466 25808 caffe.cpp:248] Starting Optimization
I0428 19:45:28.182471 25808 solver.cpp:273] Solving LeNet
I0428 19:45:28.182473 25808 solver.cpp:274] Learning Rate Policy: inv
I0428 19:45:28.182621 25808 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:45:28.187137 25808 blocking_queue.cpp:49] Waiting for data
I0428 19:45:28.259407 25815 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:28.259981 25808 solver.cpp:398]     Test net output #0: accuracy = 0.0977
I0428 19:45:28.260015 25808 solver.cpp:398]     Test net output #1: loss = 2.30803 (* 1 = 2.30803 loss)
I0428 19:45:28.263564 25808 solver.cpp:219] Iteration 0 (0 iter/s, 0.0810639s/100 iters), loss = 2.31463
I0428 19:45:28.263603 25808 solver.cpp:238]     Train net output #0: loss = 2.31463 (* 1 = 2.31463 loss)
I0428 19:45:28.263614 25808 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:45:28.404709 25808 solver.cpp:219] Iteration 100 (708.686 iter/s, 0.141106s/100 iters), loss = 0.449438
I0428 19:45:28.404734 25808 solver.cpp:238]     Train net output #0: loss = 0.449438 (* 1 = 0.449438 loss)
I0428 19:45:28.404755 25808 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:45:28.554520 25808 solver.cpp:219] Iteration 200 (667.685 iter/s, 0.149771s/100 iters), loss = 0.196621
I0428 19:45:28.554584 25808 solver.cpp:238]     Train net output #0: loss = 0.196621 (* 1 = 0.196621 loss)
I0428 19:45:28.554596 25808 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:28.715098 25808 solver.cpp:219] Iteration 300 (623.046 iter/s, 0.160502s/100 iters), loss = 0.298383
I0428 19:45:28.715142 25808 solver.cpp:238]     Train net output #0: loss = 0.298383 (* 1 = 0.298383 loss)
I0428 19:45:28.715158 25808 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:28.877529 25808 solver.cpp:219] Iteration 400 (615.864 iter/s, 0.162374s/100 iters), loss = 0.125417
I0428 19:45:28.877573 25808 solver.cpp:238]     Train net output #0: loss = 0.125417 (* 1 = 0.125417 loss)
I0428 19:45:28.877590 25808 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:29.036732 25808 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:29.109599 25815 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:29.110204 25808 solver.cpp:398]     Test net output #0: accuracy = 0.953
I0428 19:45:29.110231 25808 solver.cpp:398]     Test net output #1: loss = 0.165148 (* 1 = 0.165148 loss)
I0428 19:45:29.111723 25808 solver.cpp:219] Iteration 500 (427.105 iter/s, 0.234134s/100 iters), loss = 0.139472
I0428 19:45:29.111753 25808 solver.cpp:238]     Train net output #0: loss = 0.139473 (* 1 = 0.139473 loss)
I0428 19:45:29.111762 25808 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:29.273180 25808 solver.cpp:219] Iteration 600 (619.54 iter/s, 0.16141s/100 iters), loss = 0.101738
I0428 19:45:29.273226 25808 solver.cpp:238]     Train net output #0: loss = 0.101738 (* 1 = 0.101738 loss)
I0428 19:45:29.273236 25808 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:29.440259 25808 solver.cpp:219] Iteration 700 (598.74 iter/s, 0.167017s/100 iters), loss = 0.155085
I0428 19:45:29.440310 25808 solver.cpp:238]     Train net output #0: loss = 0.155085 (* 1 = 0.155085 loss)
I0428 19:45:29.440323 25808 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:29.609798 25808 solver.cpp:219] Iteration 800 (590.061 iter/s, 0.169474s/100 iters), loss = 0.238307
I0428 19:45:29.609849 25808 solver.cpp:238]     Train net output #0: loss = 0.238307 (* 1 = 0.238307 loss)
I0428 19:45:29.609863 25808 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:29.778645 25808 solver.cpp:219] Iteration 900 (592.492 iter/s, 0.168779s/100 iters), loss = 0.132615
I0428 19:45:29.778694 25808 solver.cpp:238]     Train net output #0: loss = 0.132615 (* 1 = 0.132615 loss)
I0428 19:45:29.778707 25808 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:29.835350 25814 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:29.947682 25808 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:29.949570 25808 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:29.950539 25808 solver.cpp:311] Iteration 1000, loss = 0.138401
I0428 19:45:29.950568 25808 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:30.023449 25815 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:30.024072 25808 solver.cpp:398]     Test net output #0: accuracy = 0.971
I0428 19:45:30.024099 25808 solver.cpp:398]     Test net output #1: loss = 0.092752 (* 1 = 0.092752 loss)
I0428 19:45:30.024106 25808 solver.cpp:316] Optimization Done.
I0428 19:45:30.024111 25808 caffe.cpp:259] Optimization Done.
