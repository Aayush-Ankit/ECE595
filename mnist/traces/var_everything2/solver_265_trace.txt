I0428 19:37:53.319658 23935 caffe.cpp:218] Using GPUs 0
I0428 19:37:53.359813 23935 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:53.902328 23935 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test265.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:53.902470 23935 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test265.prototxt
I0428 19:37:53.902843 23935 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:53.902861 23935 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:53.902948 23935 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:53.903023 23935 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:53.903127 23935 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:53.903152 23935 net.cpp:86] Creating Layer mnist
I0428 19:37:53.903163 23935 net.cpp:382] mnist -> data
I0428 19:37:53.903185 23935 net.cpp:382] mnist -> label
I0428 19:37:53.904276 23935 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:53.906744 23935 net.cpp:124] Setting up mnist
I0428 19:37:53.906761 23935 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:53.906767 23935 net.cpp:131] Top shape: 64 (64)
I0428 19:37:53.906771 23935 net.cpp:139] Memory required for data: 200960
I0428 19:37:53.906779 23935 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:53.906816 23935 net.cpp:86] Creating Layer conv0
I0428 19:37:53.906826 23935 net.cpp:408] conv0 <- data
I0428 19:37:53.906839 23935 net.cpp:382] conv0 -> conv0
I0428 19:37:54.199676 23935 net.cpp:124] Setting up conv0
I0428 19:37:54.199708 23935 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:54.199713 23935 net.cpp:139] Memory required for data: 14946560
I0428 19:37:54.199731 23935 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:54.199746 23935 net.cpp:86] Creating Layer pool0
I0428 19:37:54.199774 23935 net.cpp:408] pool0 <- conv0
I0428 19:37:54.199784 23935 net.cpp:382] pool0 -> pool0
I0428 19:37:54.199842 23935 net.cpp:124] Setting up pool0
I0428 19:37:54.199851 23935 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:54.199856 23935 net.cpp:139] Memory required for data: 18632960
I0428 19:37:54.199859 23935 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:54.199868 23935 net.cpp:86] Creating Layer ip1
I0428 19:37:54.199872 23935 net.cpp:408] ip1 <- pool0
I0428 19:37:54.199878 23935 net.cpp:382] ip1 -> ip1
I0428 19:37:54.206030 23935 net.cpp:124] Setting up ip1
I0428 19:37:54.206046 23935 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:54.206050 23935 net.cpp:139] Memory required for data: 18645760
I0428 19:37:54.206060 23935 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:54.206068 23935 net.cpp:86] Creating Layer relu1
I0428 19:37:54.206073 23935 net.cpp:408] relu1 <- ip1
I0428 19:37:54.206079 23935 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:54.206288 23935 net.cpp:124] Setting up relu1
I0428 19:37:54.206300 23935 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:54.206303 23935 net.cpp:139] Memory required for data: 18658560
I0428 19:37:54.206307 23935 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:54.206315 23935 net.cpp:86] Creating Layer ip2
I0428 19:37:54.206320 23935 net.cpp:408] ip2 <- ip1
I0428 19:37:54.206326 23935 net.cpp:382] ip2 -> ip2
I0428 19:37:54.206442 23935 net.cpp:124] Setting up ip2
I0428 19:37:54.206451 23935 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:54.206455 23935 net.cpp:139] Memory required for data: 18661120
I0428 19:37:54.206465 23935 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:54.206470 23935 net.cpp:86] Creating Layer relu2
I0428 19:37:54.206473 23935 net.cpp:408] relu2 <- ip2
I0428 19:37:54.206480 23935 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:54.207339 23935 net.cpp:124] Setting up relu2
I0428 19:37:54.207353 23935 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:54.207357 23935 net.cpp:139] Memory required for data: 18663680
I0428 19:37:54.207362 23935 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:54.207370 23935 net.cpp:86] Creating Layer ip3
I0428 19:37:54.207375 23935 net.cpp:408] ip3 <- ip2
I0428 19:37:54.207381 23935 net.cpp:382] ip3 -> ip3
I0428 19:37:54.207496 23935 net.cpp:124] Setting up ip3
I0428 19:37:54.207505 23935 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:54.207509 23935 net.cpp:139] Memory required for data: 18666240
I0428 19:37:54.207516 23935 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:54.207523 23935 net.cpp:86] Creating Layer relu3
I0428 19:37:54.207527 23935 net.cpp:408] relu3 <- ip3
I0428 19:37:54.207532 23935 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:54.207710 23935 net.cpp:124] Setting up relu3
I0428 19:37:54.207721 23935 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:54.207726 23935 net.cpp:139] Memory required for data: 18668800
I0428 19:37:54.207729 23935 layer_factory.hpp:77] Creating layer loss
I0428 19:37:54.207736 23935 net.cpp:86] Creating Layer loss
I0428 19:37:54.207741 23935 net.cpp:408] loss <- ip3
I0428 19:37:54.207744 23935 net.cpp:408] loss <- label
I0428 19:37:54.207751 23935 net.cpp:382] loss -> loss
I0428 19:37:54.207768 23935 layer_factory.hpp:77] Creating layer loss
I0428 19:37:54.208036 23935 net.cpp:124] Setting up loss
I0428 19:37:54.208047 23935 net.cpp:131] Top shape: (1)
I0428 19:37:54.208052 23935 net.cpp:134]     with loss weight 1
I0428 19:37:54.208068 23935 net.cpp:139] Memory required for data: 18668804
I0428 19:37:54.208072 23935 net.cpp:200] loss needs backward computation.
I0428 19:37:54.208076 23935 net.cpp:200] relu3 needs backward computation.
I0428 19:37:54.208081 23935 net.cpp:200] ip3 needs backward computation.
I0428 19:37:54.208084 23935 net.cpp:200] relu2 needs backward computation.
I0428 19:37:54.208087 23935 net.cpp:200] ip2 needs backward computation.
I0428 19:37:54.208091 23935 net.cpp:200] relu1 needs backward computation.
I0428 19:37:54.208094 23935 net.cpp:200] ip1 needs backward computation.
I0428 19:37:54.208112 23935 net.cpp:200] pool0 needs backward computation.
I0428 19:37:54.208115 23935 net.cpp:200] conv0 needs backward computation.
I0428 19:37:54.208119 23935 net.cpp:202] mnist does not need backward computation.
I0428 19:37:54.208122 23935 net.cpp:244] This network produces output loss
I0428 19:37:54.208132 23935 net.cpp:257] Network initialization done.
I0428 19:37:54.208464 23935 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test265.prototxt
I0428 19:37:54.208493 23935 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:54.208588 23935 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:54.208662 23935 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:54.208714 23935 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:54.208727 23935 net.cpp:86] Creating Layer mnist
I0428 19:37:54.208734 23935 net.cpp:382] mnist -> data
I0428 19:37:54.208742 23935 net.cpp:382] mnist -> label
I0428 19:37:54.208849 23935 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:54.211030 23935 net.cpp:124] Setting up mnist
I0428 19:37:54.211045 23935 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:54.211051 23935 net.cpp:131] Top shape: 100 (100)
I0428 19:37:54.211055 23935 net.cpp:139] Memory required for data: 314000
I0428 19:37:54.211060 23935 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:54.211067 23935 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:54.211071 23935 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:54.211078 23935 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:54.211086 23935 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:54.211215 23935 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:54.211225 23935 net.cpp:131] Top shape: 100 (100)
I0428 19:37:54.211230 23935 net.cpp:131] Top shape: 100 (100)
I0428 19:37:54.211233 23935 net.cpp:139] Memory required for data: 314800
I0428 19:37:54.211251 23935 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:54.211262 23935 net.cpp:86] Creating Layer conv0
I0428 19:37:54.211266 23935 net.cpp:408] conv0 <- data
I0428 19:37:54.211272 23935 net.cpp:382] conv0 -> conv0
I0428 19:37:54.212985 23935 net.cpp:124] Setting up conv0
I0428 19:37:54.213001 23935 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:54.213006 23935 net.cpp:139] Memory required for data: 23354800
I0428 19:37:54.213017 23935 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:54.213026 23935 net.cpp:86] Creating Layer pool0
I0428 19:37:54.213030 23935 net.cpp:408] pool0 <- conv0
I0428 19:37:54.213037 23935 net.cpp:382] pool0 -> pool0
I0428 19:37:54.213080 23935 net.cpp:124] Setting up pool0
I0428 19:37:54.213088 23935 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:54.213091 23935 net.cpp:139] Memory required for data: 29114800
I0428 19:37:54.213094 23935 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:54.213102 23935 net.cpp:86] Creating Layer ip1
I0428 19:37:54.213107 23935 net.cpp:408] ip1 <- pool0
I0428 19:37:54.213114 23935 net.cpp:382] ip1 -> ip1
I0428 19:37:54.219277 23935 net.cpp:124] Setting up ip1
I0428 19:37:54.219292 23935 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:54.219297 23935 net.cpp:139] Memory required for data: 29134800
I0428 19:37:54.219307 23935 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:54.219313 23935 net.cpp:86] Creating Layer relu1
I0428 19:37:54.219318 23935 net.cpp:408] relu1 <- ip1
I0428 19:37:54.219326 23935 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:54.219522 23935 net.cpp:124] Setting up relu1
I0428 19:37:54.219533 23935 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:54.219537 23935 net.cpp:139] Memory required for data: 29154800
I0428 19:37:54.219542 23935 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:54.219548 23935 net.cpp:86] Creating Layer ip2
I0428 19:37:54.219552 23935 net.cpp:408] ip2 <- ip1
I0428 19:37:54.219558 23935 net.cpp:382] ip2 -> ip2
I0428 19:37:54.219681 23935 net.cpp:124] Setting up ip2
I0428 19:37:54.219689 23935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:54.219693 23935 net.cpp:139] Memory required for data: 29158800
I0428 19:37:54.219702 23935 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:54.219707 23935 net.cpp:86] Creating Layer relu2
I0428 19:37:54.219712 23935 net.cpp:408] relu2 <- ip2
I0428 19:37:54.219717 23935 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:54.220577 23935 net.cpp:124] Setting up relu2
I0428 19:37:54.220592 23935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:54.220597 23935 net.cpp:139] Memory required for data: 29162800
I0428 19:37:54.220602 23935 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:54.220610 23935 net.cpp:86] Creating Layer ip3
I0428 19:37:54.220614 23935 net.cpp:408] ip3 <- ip2
I0428 19:37:54.220621 23935 net.cpp:382] ip3 -> ip3
I0428 19:37:54.220742 23935 net.cpp:124] Setting up ip3
I0428 19:37:54.220752 23935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:54.220757 23935 net.cpp:139] Memory required for data: 29166800
I0428 19:37:54.220763 23935 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:54.220768 23935 net.cpp:86] Creating Layer relu3
I0428 19:37:54.220772 23935 net.cpp:408] relu3 <- ip3
I0428 19:37:54.220777 23935 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:54.220966 23935 net.cpp:124] Setting up relu3
I0428 19:37:54.220978 23935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:54.220983 23935 net.cpp:139] Memory required for data: 29170800
I0428 19:37:54.220986 23935 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:54.220993 23935 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:54.220996 23935 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:54.221001 23935 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:54.221009 23935 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:54.221050 23935 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:54.221057 23935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:54.221074 23935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:54.221079 23935 net.cpp:139] Memory required for data: 29178800
I0428 19:37:54.221082 23935 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:54.221089 23935 net.cpp:86] Creating Layer accuracy
I0428 19:37:54.221093 23935 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:54.221098 23935 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:54.221103 23935 net.cpp:382] accuracy -> accuracy
I0428 19:37:54.221112 23935 net.cpp:124] Setting up accuracy
I0428 19:37:54.221117 23935 net.cpp:131] Top shape: (1)
I0428 19:37:54.221120 23935 net.cpp:139] Memory required for data: 29178804
I0428 19:37:54.221124 23935 layer_factory.hpp:77] Creating layer loss
I0428 19:37:54.221129 23935 net.cpp:86] Creating Layer loss
I0428 19:37:54.221133 23935 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:54.221138 23935 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:54.221143 23935 net.cpp:382] loss -> loss
I0428 19:37:54.221150 23935 layer_factory.hpp:77] Creating layer loss
I0428 19:37:54.221424 23935 net.cpp:124] Setting up loss
I0428 19:37:54.221436 23935 net.cpp:131] Top shape: (1)
I0428 19:37:54.221439 23935 net.cpp:134]     with loss weight 1
I0428 19:37:54.221446 23935 net.cpp:139] Memory required for data: 29178808
I0428 19:37:54.221451 23935 net.cpp:200] loss needs backward computation.
I0428 19:37:54.221456 23935 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:54.221460 23935 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:54.221464 23935 net.cpp:200] relu3 needs backward computation.
I0428 19:37:54.221467 23935 net.cpp:200] ip3 needs backward computation.
I0428 19:37:54.221472 23935 net.cpp:200] relu2 needs backward computation.
I0428 19:37:54.221474 23935 net.cpp:200] ip2 needs backward computation.
I0428 19:37:54.221478 23935 net.cpp:200] relu1 needs backward computation.
I0428 19:37:54.221482 23935 net.cpp:200] ip1 needs backward computation.
I0428 19:37:54.221485 23935 net.cpp:200] pool0 needs backward computation.
I0428 19:37:54.221489 23935 net.cpp:200] conv0 needs backward computation.
I0428 19:37:54.221493 23935 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:54.221498 23935 net.cpp:202] mnist does not need backward computation.
I0428 19:37:54.221501 23935 net.cpp:244] This network produces output accuracy
I0428 19:37:54.221505 23935 net.cpp:244] This network produces output loss
I0428 19:37:54.221518 23935 net.cpp:257] Network initialization done.
I0428 19:37:54.221560 23935 solver.cpp:56] Solver scaffolding done.
I0428 19:37:54.221880 23935 caffe.cpp:248] Starting Optimization
I0428 19:37:54.221887 23935 solver.cpp:273] Solving LeNet
I0428 19:37:54.221891 23935 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:54.223985 23935 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:54.391571 23942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:54.396373 23935 solver.cpp:398]     Test net output #0: accuracy = 0.124
I0428 19:37:54.396399 23935 solver.cpp:398]     Test net output #1: loss = 2.31452 (* 1 = 2.31452 loss)
I0428 19:37:54.401901 23935 solver.cpp:219] Iteration 0 (0 iter/s, 0.179978s/100 iters), loss = 2.30574
I0428 19:37:54.401932 23935 solver.cpp:238]     Train net output #0: loss = 2.30574 (* 1 = 2.30574 loss)
I0428 19:37:54.401945 23935 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:54.645221 23935 solver.cpp:219] Iteration 100 (411.065 iter/s, 0.243271s/100 iters), loss = 0.732333
I0428 19:37:54.645257 23935 solver.cpp:238]     Train net output #0: loss = 0.732333 (* 1 = 0.732333 loss)
I0428 19:37:54.645267 23935 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:54.892829 23935 solver.cpp:219] Iteration 200 (403.967 iter/s, 0.247545s/100 iters), loss = 1.01889
I0428 19:37:54.892866 23935 solver.cpp:238]     Train net output #0: loss = 1.01889 (* 1 = 1.01889 loss)
I0428 19:37:54.892875 23935 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:55.139108 23935 solver.cpp:219] Iteration 300 (406.134 iter/s, 0.246224s/100 iters), loss = 0.50657
I0428 19:37:55.139160 23935 solver.cpp:238]     Train net output #0: loss = 0.50657 (* 1 = 0.50657 loss)
I0428 19:37:55.139170 23935 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:55.379447 23935 solver.cpp:219] Iteration 400 (416.2 iter/s, 0.240269s/100 iters), loss = 0.348784
I0428 19:37:55.379483 23935 solver.cpp:238]     Train net output #0: loss = 0.348784 (* 1 = 0.348784 loss)
I0428 19:37:55.379493 23935 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:55.619061 23935 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:55.783965 23942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:55.788749 23935 solver.cpp:398]     Test net output #0: accuracy = 0.8585
I0428 19:37:55.788774 23935 solver.cpp:398]     Test net output #1: loss = 0.395079 (* 1 = 0.395079 loss)
I0428 19:37:55.791035 23935 solver.cpp:219] Iteration 500 (242.997 iter/s, 0.411528s/100 iters), loss = 0.485134
I0428 19:37:55.791064 23935 solver.cpp:238]     Train net output #0: loss = 0.485134 (* 1 = 0.485134 loss)
I0428 19:37:55.791071 23935 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:56.032601 23935 solver.cpp:219] Iteration 600 (414.042 iter/s, 0.241522s/100 iters), loss = 0.437656
I0428 19:37:56.032627 23935 solver.cpp:238]     Train net output #0: loss = 0.437656 (* 1 = 0.437656 loss)
I0428 19:37:56.032634 23935 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:56.270715 23935 solver.cpp:219] Iteration 700 (420.045 iter/s, 0.23807s/100 iters), loss = 0.438328
I0428 19:37:56.270740 23935 solver.cpp:238]     Train net output #0: loss = 0.438328 (* 1 = 0.438328 loss)
I0428 19:37:56.270745 23935 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:56.509171 23935 solver.cpp:219] Iteration 800 (419.439 iter/s, 0.238414s/100 iters), loss = 0.432809
I0428 19:37:56.509212 23935 solver.cpp:238]     Train net output #0: loss = 0.432809 (* 1 = 0.432809 loss)
I0428 19:37:56.509219 23935 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:56.747442 23935 solver.cpp:219] Iteration 900 (419.792 iter/s, 0.238213s/100 iters), loss = 0.230218
I0428 19:37:56.747483 23935 solver.cpp:238]     Train net output #0: loss = 0.230218 (* 1 = 0.230218 loss)
I0428 19:37:56.747489 23935 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:56.826949 23941 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:56.985918 23935 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:56.997169 23935 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:57.003464 23935 solver.cpp:311] Iteration 1000, loss = 0.320483
I0428 19:37:57.003484 23935 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:57.162150 23942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:57.166759 23935 solver.cpp:398]     Test net output #0: accuracy = 0.8758
I0428 19:37:57.166793 23935 solver.cpp:398]     Test net output #1: loss = 0.323138 (* 1 = 0.323138 loss)
I0428 19:37:57.166798 23935 solver.cpp:316] Optimization Done.
I0428 19:37:57.166801 23935 caffe.cpp:259] Optimization Done.
