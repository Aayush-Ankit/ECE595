I0428 20:01:01.651520 29634 caffe.cpp:218] Using GPUs 0
I0428 20:01:01.689265 29634 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:01:02.202034 29634 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test892.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:01:02.202183 29634 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test892.prototxt
I0428 20:01:02.202595 29634 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:01:02.202615 29634 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:01:02.202715 29634 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:02.202795 29634 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:02.202894 29634 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:01:02.202917 29634 net.cpp:86] Creating Layer mnist
I0428 20:01:02.202924 29634 net.cpp:382] mnist -> data
I0428 20:01:02.202949 29634 net.cpp:382] mnist -> label
I0428 20:01:02.204062 29634 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:01:02.206568 29634 net.cpp:124] Setting up mnist
I0428 20:01:02.206589 29634 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:01:02.206595 29634 net.cpp:131] Top shape: 64 (64)
I0428 20:01:02.206598 29634 net.cpp:139] Memory required for data: 200960
I0428 20:01:02.206605 29634 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:02.206624 29634 net.cpp:86] Creating Layer conv0
I0428 20:01:02.206657 29634 net.cpp:408] conv0 <- data
I0428 20:01:02.206670 29634 net.cpp:382] conv0 -> conv0
I0428 20:01:02.494951 29634 net.cpp:124] Setting up conv0
I0428 20:01:02.494977 29634 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:01:02.494982 29634 net.cpp:139] Memory required for data: 1675520
I0428 20:01:02.494997 29634 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:02.495009 29634 net.cpp:86] Creating Layer pool0
I0428 20:01:02.495013 29634 net.cpp:408] pool0 <- conv0
I0428 20:01:02.495018 29634 net.cpp:382] pool0 -> pool0
I0428 20:01:02.495081 29634 net.cpp:124] Setting up pool0
I0428 20:01:02.495086 29634 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:01:02.495090 29634 net.cpp:139] Memory required for data: 2044160
I0428 20:01:02.495092 29634 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:02.495103 29634 net.cpp:86] Creating Layer conv1
I0428 20:01:02.495106 29634 net.cpp:408] conv1 <- pool0
I0428 20:01:02.495111 29634 net.cpp:382] conv1 -> conv1
I0428 20:01:02.497864 29634 net.cpp:124] Setting up conv1
I0428 20:01:02.497895 29634 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:01:02.497898 29634 net.cpp:139] Memory required for data: 2453760
I0428 20:01:02.497907 29634 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:02.497915 29634 net.cpp:86] Creating Layer pool1
I0428 20:01:02.497933 29634 net.cpp:408] pool1 <- conv1
I0428 20:01:02.497938 29634 net.cpp:382] pool1 -> pool1
I0428 20:01:02.497977 29634 net.cpp:124] Setting up pool1
I0428 20:01:02.497982 29634 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:01:02.497985 29634 net.cpp:139] Memory required for data: 2556160
I0428 20:01:02.497988 29634 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:02.498000 29634 net.cpp:86] Creating Layer ip1
I0428 20:01:02.498003 29634 net.cpp:408] ip1 <- pool1
I0428 20:01:02.498008 29634 net.cpp:382] ip1 -> ip1
I0428 20:01:02.498224 29634 net.cpp:124] Setting up ip1
I0428 20:01:02.498232 29634 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:02.498235 29634 net.cpp:139] Memory required for data: 2568960
I0428 20:01:02.498242 29634 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:02.498262 29634 net.cpp:86] Creating Layer relu1
I0428 20:01:02.498265 29634 net.cpp:408] relu1 <- ip1
I0428 20:01:02.498268 29634 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:02.498419 29634 net.cpp:124] Setting up relu1
I0428 20:01:02.498427 29634 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:02.498430 29634 net.cpp:139] Memory required for data: 2581760
I0428 20:01:02.498433 29634 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:02.498440 29634 net.cpp:86] Creating Layer ip2
I0428 20:01:02.498442 29634 net.cpp:408] ip2 <- ip1
I0428 20:01:02.498446 29634 net.cpp:382] ip2 -> ip2
I0428 20:01:02.499420 29634 net.cpp:124] Setting up ip2
I0428 20:01:02.499433 29634 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:01:02.499451 29634 net.cpp:139] Memory required for data: 2588160
I0428 20:01:02.499457 29634 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:02.499464 29634 net.cpp:86] Creating Layer relu2
I0428 20:01:02.499469 29634 net.cpp:408] relu2 <- ip2
I0428 20:01:02.499472 29634 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:02.500180 29634 net.cpp:124] Setting up relu2
I0428 20:01:02.500222 29634 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:01:02.500226 29634 net.cpp:139] Memory required for data: 2594560
I0428 20:01:02.500229 29634 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:02.500236 29634 net.cpp:86] Creating Layer ip3
I0428 20:01:02.500239 29634 net.cpp:408] ip3 <- ip2
I0428 20:01:02.500246 29634 net.cpp:382] ip3 -> ip3
I0428 20:01:02.500356 29634 net.cpp:124] Setting up ip3
I0428 20:01:02.500368 29634 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:02.500373 29634 net.cpp:139] Memory required for data: 2597120
I0428 20:01:02.500383 29634 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:02.500388 29634 net.cpp:86] Creating Layer relu3
I0428 20:01:02.500391 29634 net.cpp:408] relu3 <- ip3
I0428 20:01:02.500396 29634 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:02.500591 29634 net.cpp:124] Setting up relu3
I0428 20:01:02.500600 29634 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:02.500603 29634 net.cpp:139] Memory required for data: 2599680
I0428 20:01:02.500607 29634 layer_factory.hpp:77] Creating layer loss
I0428 20:01:02.500612 29634 net.cpp:86] Creating Layer loss
I0428 20:01:02.500615 29634 net.cpp:408] loss <- ip3
I0428 20:01:02.500619 29634 net.cpp:408] loss <- label
I0428 20:01:02.500624 29634 net.cpp:382] loss -> loss
I0428 20:01:02.500641 29634 layer_factory.hpp:77] Creating layer loss
I0428 20:01:02.500949 29634 net.cpp:124] Setting up loss
I0428 20:01:02.500959 29634 net.cpp:131] Top shape: (1)
I0428 20:01:02.500979 29634 net.cpp:134]     with loss weight 1
I0428 20:01:02.500994 29634 net.cpp:139] Memory required for data: 2599684
I0428 20:01:02.500998 29634 net.cpp:200] loss needs backward computation.
I0428 20:01:02.501003 29634 net.cpp:200] relu3 needs backward computation.
I0428 20:01:02.501005 29634 net.cpp:200] ip3 needs backward computation.
I0428 20:01:02.501008 29634 net.cpp:200] relu2 needs backward computation.
I0428 20:01:02.501011 29634 net.cpp:200] ip2 needs backward computation.
I0428 20:01:02.501014 29634 net.cpp:200] relu1 needs backward computation.
I0428 20:01:02.501018 29634 net.cpp:200] ip1 needs backward computation.
I0428 20:01:02.501020 29634 net.cpp:200] pool1 needs backward computation.
I0428 20:01:02.501024 29634 net.cpp:200] conv1 needs backward computation.
I0428 20:01:02.501027 29634 net.cpp:200] pool0 needs backward computation.
I0428 20:01:02.501030 29634 net.cpp:200] conv0 needs backward computation.
I0428 20:01:02.501034 29634 net.cpp:202] mnist does not need backward computation.
I0428 20:01:02.501037 29634 net.cpp:244] This network produces output loss
I0428 20:01:02.501047 29634 net.cpp:257] Network initialization done.
I0428 20:01:02.501437 29634 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test892.prototxt
I0428 20:01:02.501480 29634 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:01:02.501596 29634 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:02.501672 29634 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:02.501714 29634 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:01:02.501726 29634 net.cpp:86] Creating Layer mnist
I0428 20:01:02.501730 29634 net.cpp:382] mnist -> data
I0428 20:01:02.501737 29634 net.cpp:382] mnist -> label
I0428 20:01:02.501833 29634 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:01:02.503873 29634 net.cpp:124] Setting up mnist
I0428 20:01:02.503885 29634 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:01:02.503906 29634 net.cpp:131] Top shape: 100 (100)
I0428 20:01:02.503909 29634 net.cpp:139] Memory required for data: 314000
I0428 20:01:02.503912 29634 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:01:02.503923 29634 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:01:02.503929 29634 net.cpp:408] label_mnist_1_split <- label
I0428 20:01:02.503934 29634 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:01:02.503942 29634 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:01:02.503998 29634 net.cpp:124] Setting up label_mnist_1_split
I0428 20:01:02.504004 29634 net.cpp:131] Top shape: 100 (100)
I0428 20:01:02.504009 29634 net.cpp:131] Top shape: 100 (100)
I0428 20:01:02.504011 29634 net.cpp:139] Memory required for data: 314800
I0428 20:01:02.504029 29634 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:02.504039 29634 net.cpp:86] Creating Layer conv0
I0428 20:01:02.504041 29634 net.cpp:408] conv0 <- data
I0428 20:01:02.504047 29634 net.cpp:382] conv0 -> conv0
I0428 20:01:02.505771 29634 net.cpp:124] Setting up conv0
I0428 20:01:02.505800 29634 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:01:02.505805 29634 net.cpp:139] Memory required for data: 2618800
I0428 20:01:02.505813 29634 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:02.505820 29634 net.cpp:86] Creating Layer pool0
I0428 20:01:02.505823 29634 net.cpp:408] pool0 <- conv0
I0428 20:01:02.505828 29634 net.cpp:382] pool0 -> pool0
I0428 20:01:02.505863 29634 net.cpp:124] Setting up pool0
I0428 20:01:02.505868 29634 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:01:02.505872 29634 net.cpp:139] Memory required for data: 3194800
I0428 20:01:02.505874 29634 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:02.505897 29634 net.cpp:86] Creating Layer conv1
I0428 20:01:02.505899 29634 net.cpp:408] conv1 <- pool0
I0428 20:01:02.505904 29634 net.cpp:382] conv1 -> conv1
I0428 20:01:02.508076 29634 net.cpp:124] Setting up conv1
I0428 20:01:02.508103 29634 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:01:02.508123 29634 net.cpp:139] Memory required for data: 3834800
I0428 20:01:02.508131 29634 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:02.508137 29634 net.cpp:86] Creating Layer pool1
I0428 20:01:02.508141 29634 net.cpp:408] pool1 <- conv1
I0428 20:01:02.508146 29634 net.cpp:382] pool1 -> pool1
I0428 20:01:02.508218 29634 net.cpp:124] Setting up pool1
I0428 20:01:02.508230 29634 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:01:02.508234 29634 net.cpp:139] Memory required for data: 3994800
I0428 20:01:02.508239 29634 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:02.508245 29634 net.cpp:86] Creating Layer ip1
I0428 20:01:02.508249 29634 net.cpp:408] ip1 <- pool1
I0428 20:01:02.508254 29634 net.cpp:382] ip1 -> ip1
I0428 20:01:02.508476 29634 net.cpp:124] Setting up ip1
I0428 20:01:02.508486 29634 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:02.508498 29634 net.cpp:139] Memory required for data: 4014800
I0428 20:01:02.508507 29634 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:02.508512 29634 net.cpp:86] Creating Layer relu1
I0428 20:01:02.508515 29634 net.cpp:408] relu1 <- ip1
I0428 20:01:02.508519 29634 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:02.508714 29634 net.cpp:124] Setting up relu1
I0428 20:01:02.508723 29634 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:02.508726 29634 net.cpp:139] Memory required for data: 4034800
I0428 20:01:02.508729 29634 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:02.508735 29634 net.cpp:86] Creating Layer ip2
I0428 20:01:02.508738 29634 net.cpp:408] ip2 <- ip1
I0428 20:01:02.508744 29634 net.cpp:382] ip2 -> ip2
I0428 20:01:02.508911 29634 net.cpp:124] Setting up ip2
I0428 20:01:02.508920 29634 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:01:02.508940 29634 net.cpp:139] Memory required for data: 4044800
I0428 20:01:02.508946 29634 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:02.508951 29634 net.cpp:86] Creating Layer relu2
I0428 20:01:02.508956 29634 net.cpp:408] relu2 <- ip2
I0428 20:01:02.508961 29634 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:02.509119 29634 net.cpp:124] Setting up relu2
I0428 20:01:02.509129 29634 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:01:02.509132 29634 net.cpp:139] Memory required for data: 4054800
I0428 20:01:02.509135 29634 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:02.509140 29634 net.cpp:86] Creating Layer ip3
I0428 20:01:02.509145 29634 net.cpp:408] ip3 <- ip2
I0428 20:01:02.509165 29634 net.cpp:382] ip3 -> ip3
I0428 20:01:02.509333 29634 net.cpp:124] Setting up ip3
I0428 20:01:02.509341 29634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:02.509344 29634 net.cpp:139] Memory required for data: 4058800
I0428 20:01:02.509352 29634 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:02.509357 29634 net.cpp:86] Creating Layer relu3
I0428 20:01:02.509361 29634 net.cpp:408] relu3 <- ip3
I0428 20:01:02.509364 29634 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:02.510120 29634 net.cpp:124] Setting up relu3
I0428 20:01:02.510149 29634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:02.510152 29634 net.cpp:139] Memory required for data: 4062800
I0428 20:01:02.510155 29634 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:01:02.510176 29634 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:01:02.510180 29634 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:01:02.510185 29634 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:01:02.510192 29634 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:01:02.510231 29634 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:01:02.510236 29634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:02.510239 29634 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:02.510242 29634 net.cpp:139] Memory required for data: 4070800
I0428 20:01:02.510246 29634 layer_factory.hpp:77] Creating layer accuracy
I0428 20:01:02.510251 29634 net.cpp:86] Creating Layer accuracy
I0428 20:01:02.510253 29634 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:01:02.510257 29634 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:01:02.510262 29634 net.cpp:382] accuracy -> accuracy
I0428 20:01:02.510269 29634 net.cpp:124] Setting up accuracy
I0428 20:01:02.510273 29634 net.cpp:131] Top shape: (1)
I0428 20:01:02.510277 29634 net.cpp:139] Memory required for data: 4070804
I0428 20:01:02.510279 29634 layer_factory.hpp:77] Creating layer loss
I0428 20:01:02.510283 29634 net.cpp:86] Creating Layer loss
I0428 20:01:02.510287 29634 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:01:02.510290 29634 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:01:02.510295 29634 net.cpp:382] loss -> loss
I0428 20:01:02.510300 29634 layer_factory.hpp:77] Creating layer loss
I0428 20:01:02.510576 29634 net.cpp:124] Setting up loss
I0428 20:01:02.510588 29634 net.cpp:131] Top shape: (1)
I0428 20:01:02.510593 29634 net.cpp:134]     with loss weight 1
I0428 20:01:02.510612 29634 net.cpp:139] Memory required for data: 4070808
I0428 20:01:02.510617 29634 net.cpp:200] loss needs backward computation.
I0428 20:01:02.510620 29634 net.cpp:202] accuracy does not need backward computation.
I0428 20:01:02.510624 29634 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:01:02.510627 29634 net.cpp:200] relu3 needs backward computation.
I0428 20:01:02.510629 29634 net.cpp:200] ip3 needs backward computation.
I0428 20:01:02.510633 29634 net.cpp:200] relu2 needs backward computation.
I0428 20:01:02.510637 29634 net.cpp:200] ip2 needs backward computation.
I0428 20:01:02.510639 29634 net.cpp:200] relu1 needs backward computation.
I0428 20:01:02.510641 29634 net.cpp:200] ip1 needs backward computation.
I0428 20:01:02.510644 29634 net.cpp:200] pool1 needs backward computation.
I0428 20:01:02.510648 29634 net.cpp:200] conv1 needs backward computation.
I0428 20:01:02.510651 29634 net.cpp:200] pool0 needs backward computation.
I0428 20:01:02.510669 29634 net.cpp:200] conv0 needs backward computation.
I0428 20:01:02.510673 29634 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:01:02.510677 29634 net.cpp:202] mnist does not need backward computation.
I0428 20:01:02.510680 29634 net.cpp:244] This network produces output accuracy
I0428 20:01:02.510684 29634 net.cpp:244] This network produces output loss
I0428 20:01:02.510694 29634 net.cpp:257] Network initialization done.
I0428 20:01:02.510736 29634 solver.cpp:56] Solver scaffolding done.
I0428 20:01:02.511077 29634 caffe.cpp:248] Starting Optimization
I0428 20:01:02.511085 29634 solver.cpp:273] Solving LeNet
I0428 20:01:02.511087 29634 solver.cpp:274] Learning Rate Policy: inv
I0428 20:01:02.511270 29634 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:01:02.545308 29634 blocking_queue.cpp:49] Waiting for data
I0428 20:01:02.560276 29642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:02.560891 29634 solver.cpp:398]     Test net output #0: accuracy = 0.0853
I0428 20:01:02.560925 29634 solver.cpp:398]     Test net output #1: loss = 2.3127 (* 1 = 2.3127 loss)
I0428 20:01:02.563338 29634 solver.cpp:219] Iteration 0 (4.35883 iter/s, 0.0522271s/100 iters), loss = 2.32117
I0428 20:01:02.563377 29634 solver.cpp:238]     Train net output #0: loss = 2.32117 (* 1 = 2.32117 loss)
I0428 20:01:02.563388 29634 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:01:02.652233 29634 solver.cpp:219] Iteration 100 (1125.33 iter/s, 0.0888627s/100 iters), loss = 0.274254
I0428 20:01:02.652273 29634 solver.cpp:238]     Train net output #0: loss = 0.274254 (* 1 = 0.274254 loss)
I0428 20:01:02.652279 29634 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:01:02.741158 29634 solver.cpp:219] Iteration 200 (1124.97 iter/s, 0.0888915s/100 iters), loss = 0.206849
I0428 20:01:02.741199 29634 solver.cpp:238]     Train net output #0: loss = 0.206849 (* 1 = 0.206849 loss)
I0428 20:01:02.741204 29634 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:01:02.829799 29634 solver.cpp:219] Iteration 300 (1128.57 iter/s, 0.0886077s/100 iters), loss = 0.247608
I0428 20:01:02.829838 29634 solver.cpp:238]     Train net output #0: loss = 0.247608 (* 1 = 0.247608 loss)
I0428 20:01:02.829844 29634 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:01:02.918422 29634 solver.cpp:219] Iteration 400 (1128.78 iter/s, 0.0885914s/100 iters), loss = 0.0853104
I0428 20:01:02.918462 29634 solver.cpp:238]     Train net output #0: loss = 0.0853103 (* 1 = 0.0853103 loss)
I0428 20:01:02.918467 29634 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:01:03.006372 29634 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:01:03.053598 29642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:03.054211 29634 solver.cpp:398]     Test net output #0: accuracy = 0.9653
I0428 20:01:03.054245 29634 solver.cpp:398]     Test net output #1: loss = 0.115179 (* 1 = 0.115179 loss)
I0428 20:01:03.055186 29634 solver.cpp:219] Iteration 500 (731.458 iter/s, 0.136713s/100 iters), loss = 0.100673
I0428 20:01:03.055253 29634 solver.cpp:238]     Train net output #0: loss = 0.100673 (* 1 = 0.100673 loss)
I0428 20:01:03.055263 29634 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:01:03.155182 29634 solver.cpp:219] Iteration 600 (1000.76 iter/s, 0.0999238s/100 iters), loss = 0.0917014
I0428 20:01:03.155226 29634 solver.cpp:238]     Train net output #0: loss = 0.0917013 (* 1 = 0.0917013 loss)
I0428 20:01:03.155236 29634 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:01:03.255914 29634 solver.cpp:219] Iteration 700 (993.087 iter/s, 0.100696s/100 iters), loss = 0.207919
I0428 20:01:03.255955 29634 solver.cpp:238]     Train net output #0: loss = 0.207919 (* 1 = 0.207919 loss)
I0428 20:01:03.255961 29634 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:01:03.344728 29634 solver.cpp:219] Iteration 800 (1126.38 iter/s, 0.0887798s/100 iters), loss = 0.31795
I0428 20:01:03.344784 29634 solver.cpp:238]     Train net output #0: loss = 0.31795 (* 1 = 0.31795 loss)
I0428 20:01:03.344790 29634 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:01:03.433921 29634 solver.cpp:219] Iteration 900 (1121.84 iter/s, 0.0891392s/100 iters), loss = 0.154196
I0428 20:01:03.433954 29634 solver.cpp:238]     Train net output #0: loss = 0.154196 (* 1 = 0.154196 loss)
I0428 20:01:03.433960 29634 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:01:03.463348 29641 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:03.521239 29634 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:01:03.522436 29634 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:01:03.523109 29634 solver.cpp:311] Iteration 1000, loss = 0.103336
I0428 20:01:03.523124 29634 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:01:03.597945 29642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:03.598459 29634 solver.cpp:398]     Test net output #0: accuracy = 0.9752
I0428 20:01:03.598479 29634 solver.cpp:398]     Test net output #1: loss = 0.0770123 (* 1 = 0.0770123 loss)
I0428 20:01:03.598485 29634 solver.cpp:316] Optimization Done.
I0428 20:01:03.598489 29634 caffe.cpp:259] Optimization Done.
