I0428 20:08:30.582599 31400 caffe.cpp:218] Using GPUs 0
I0428 20:08:30.618017 31400 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:31.068996 31400 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1085.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:31.069200 31400 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1085.prototxt
I0428 20:08:31.069533 31400 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:31.069555 31400 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:31.069643 31400 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:31.069732 31400 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:31.069838 31400 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:31.069864 31400 net.cpp:86] Creating Layer mnist
I0428 20:08:31.069875 31400 net.cpp:382] mnist -> data
I0428 20:08:31.069898 31400 net.cpp:382] mnist -> label
I0428 20:08:31.070979 31400 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:31.073185 31400 net.cpp:124] Setting up mnist
I0428 20:08:31.073202 31400 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:31.073211 31400 net.cpp:131] Top shape: 64 (64)
I0428 20:08:31.073216 31400 net.cpp:139] Memory required for data: 200960
I0428 20:08:31.073225 31400 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:31.073262 31400 net.cpp:86] Creating Layer conv0
I0428 20:08:31.073283 31400 net.cpp:408] conv0 <- data
I0428 20:08:31.073319 31400 net.cpp:382] conv0 -> conv0
I0428 20:08:31.306934 31400 net.cpp:124] Setting up conv0
I0428 20:08:31.306982 31400 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:31.306988 31400 net.cpp:139] Memory required for data: 3887360
I0428 20:08:31.307010 31400 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:31.307029 31400 net.cpp:86] Creating Layer pool0
I0428 20:08:31.307039 31400 net.cpp:408] pool0 <- conv0
I0428 20:08:31.307049 31400 net.cpp:382] pool0 -> pool0
I0428 20:08:31.307119 31400 net.cpp:124] Setting up pool0
I0428 20:08:31.307128 31400 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:31.307134 31400 net.cpp:139] Memory required for data: 4808960
I0428 20:08:31.307139 31400 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:31.307155 31400 net.cpp:86] Creating Layer conv1
I0428 20:08:31.307162 31400 net.cpp:408] conv1 <- pool0
I0428 20:08:31.307171 31400 net.cpp:382] conv1 -> conv1
I0428 20:08:31.310071 31400 net.cpp:124] Setting up conv1
I0428 20:08:31.310087 31400 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:31.310094 31400 net.cpp:139] Memory required for data: 4972800
I0428 20:08:31.310124 31400 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:31.310135 31400 net.cpp:86] Creating Layer pool1
I0428 20:08:31.310147 31400 net.cpp:408] pool1 <- conv1
I0428 20:08:31.310154 31400 net.cpp:382] pool1 -> pool1
I0428 20:08:31.310199 31400 net.cpp:124] Setting up pool1
I0428 20:08:31.310206 31400 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:31.310227 31400 net.cpp:139] Memory required for data: 5013760
I0428 20:08:31.310232 31400 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:31.310243 31400 net.cpp:86] Creating Layer ip1
I0428 20:08:31.310252 31400 net.cpp:408] ip1 <- pool1
I0428 20:08:31.310262 31400 net.cpp:382] ip1 -> ip1
I0428 20:08:31.310425 31400 net.cpp:124] Setting up ip1
I0428 20:08:31.310434 31400 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:31.310439 31400 net.cpp:139] Memory required for data: 5026560
I0428 20:08:31.310451 31400 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:31.310461 31400 net.cpp:86] Creating Layer relu1
I0428 20:08:31.310467 31400 net.cpp:408] relu1 <- ip1
I0428 20:08:31.310475 31400 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:31.310657 31400 net.cpp:124] Setting up relu1
I0428 20:08:31.310665 31400 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:31.310670 31400 net.cpp:139] Memory required for data: 5039360
I0428 20:08:31.310675 31400 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:31.310686 31400 net.cpp:86] Creating Layer ip2
I0428 20:08:31.310691 31400 net.cpp:408] ip2 <- ip1
I0428 20:08:31.310699 31400 net.cpp:382] ip2 -> ip2
I0428 20:08:31.310801 31400 net.cpp:124] Setting up ip2
I0428 20:08:31.310809 31400 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:31.310813 31400 net.cpp:139] Memory required for data: 5041920
I0428 20:08:31.310822 31400 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:31.310833 31400 net.cpp:86] Creating Layer relu2
I0428 20:08:31.310838 31400 net.cpp:408] relu2 <- ip2
I0428 20:08:31.310845 31400 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:31.311645 31400 net.cpp:124] Setting up relu2
I0428 20:08:31.311657 31400 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:31.311662 31400 net.cpp:139] Memory required for data: 5044480
I0428 20:08:31.311668 31400 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:31.311681 31400 net.cpp:86] Creating Layer ip3
I0428 20:08:31.311687 31400 net.cpp:408] ip3 <- ip2
I0428 20:08:31.311697 31400 net.cpp:382] ip3 -> ip3
I0428 20:08:31.311800 31400 net.cpp:124] Setting up ip3
I0428 20:08:31.311808 31400 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:31.311813 31400 net.cpp:139] Memory required for data: 5047040
I0428 20:08:31.311825 31400 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:31.311835 31400 net.cpp:86] Creating Layer relu3
I0428 20:08:31.311841 31400 net.cpp:408] relu3 <- ip3
I0428 20:08:31.311846 31400 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:31.312034 31400 net.cpp:124] Setting up relu3
I0428 20:08:31.312044 31400 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:31.312049 31400 net.cpp:139] Memory required for data: 5049600
I0428 20:08:31.312055 31400 layer_factory.hpp:77] Creating layer loss
I0428 20:08:31.312063 31400 net.cpp:86] Creating Layer loss
I0428 20:08:31.312068 31400 net.cpp:408] loss <- ip3
I0428 20:08:31.312074 31400 net.cpp:408] loss <- label
I0428 20:08:31.312084 31400 net.cpp:382] loss -> loss
I0428 20:08:31.312103 31400 layer_factory.hpp:77] Creating layer loss
I0428 20:08:31.312335 31400 net.cpp:124] Setting up loss
I0428 20:08:31.312345 31400 net.cpp:131] Top shape: (1)
I0428 20:08:31.312350 31400 net.cpp:134]     with loss weight 1
I0428 20:08:31.312369 31400 net.cpp:139] Memory required for data: 5049604
I0428 20:08:31.312376 31400 net.cpp:200] loss needs backward computation.
I0428 20:08:31.312381 31400 net.cpp:200] relu3 needs backward computation.
I0428 20:08:31.312402 31400 net.cpp:200] ip3 needs backward computation.
I0428 20:08:31.312407 31400 net.cpp:200] relu2 needs backward computation.
I0428 20:08:31.312425 31400 net.cpp:200] ip2 needs backward computation.
I0428 20:08:31.312429 31400 net.cpp:200] relu1 needs backward computation.
I0428 20:08:31.312449 31400 net.cpp:200] ip1 needs backward computation.
I0428 20:08:31.312453 31400 net.cpp:200] pool1 needs backward computation.
I0428 20:08:31.312458 31400 net.cpp:200] conv1 needs backward computation.
I0428 20:08:31.312463 31400 net.cpp:200] pool0 needs backward computation.
I0428 20:08:31.312469 31400 net.cpp:200] conv0 needs backward computation.
I0428 20:08:31.312474 31400 net.cpp:202] mnist does not need backward computation.
I0428 20:08:31.312479 31400 net.cpp:244] This network produces output loss
I0428 20:08:31.312510 31400 net.cpp:257] Network initialization done.
I0428 20:08:31.312950 31400 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1085.prototxt
I0428 20:08:31.312985 31400 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:31.313087 31400 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:31.313243 31400 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:31.313333 31400 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:31.313350 31400 net.cpp:86] Creating Layer mnist
I0428 20:08:31.313357 31400 net.cpp:382] mnist -> data
I0428 20:08:31.313369 31400 net.cpp:382] mnist -> label
I0428 20:08:31.313506 31400 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:31.315681 31400 net.cpp:124] Setting up mnist
I0428 20:08:31.315712 31400 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:31.315722 31400 net.cpp:131] Top shape: 100 (100)
I0428 20:08:31.315727 31400 net.cpp:139] Memory required for data: 314000
I0428 20:08:31.315733 31400 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:31.315757 31400 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:31.315763 31400 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:31.315770 31400 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:31.315781 31400 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:31.315891 31400 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:31.315901 31400 net.cpp:131] Top shape: 100 (100)
I0428 20:08:31.315908 31400 net.cpp:131] Top shape: 100 (100)
I0428 20:08:31.315913 31400 net.cpp:139] Memory required for data: 314800
I0428 20:08:31.315918 31400 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:31.315933 31400 net.cpp:86] Creating Layer conv0
I0428 20:08:31.315940 31400 net.cpp:408] conv0 <- data
I0428 20:08:31.315953 31400 net.cpp:382] conv0 -> conv0
I0428 20:08:31.317634 31400 net.cpp:124] Setting up conv0
I0428 20:08:31.317651 31400 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:31.317656 31400 net.cpp:139] Memory required for data: 6074800
I0428 20:08:31.317669 31400 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:31.317680 31400 net.cpp:86] Creating Layer pool0
I0428 20:08:31.317687 31400 net.cpp:408] pool0 <- conv0
I0428 20:08:31.317694 31400 net.cpp:382] pool0 -> pool0
I0428 20:08:31.317737 31400 net.cpp:124] Setting up pool0
I0428 20:08:31.317745 31400 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:31.317750 31400 net.cpp:139] Memory required for data: 7514800
I0428 20:08:31.317755 31400 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:31.317770 31400 net.cpp:86] Creating Layer conv1
I0428 20:08:31.317775 31400 net.cpp:408] conv1 <- pool0
I0428 20:08:31.317785 31400 net.cpp:382] conv1 -> conv1
I0428 20:08:31.320003 31400 net.cpp:124] Setting up conv1
I0428 20:08:31.320039 31400 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:31.320046 31400 net.cpp:139] Memory required for data: 7770800
I0428 20:08:31.320060 31400 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:31.320072 31400 net.cpp:86] Creating Layer pool1
I0428 20:08:31.320089 31400 net.cpp:408] pool1 <- conv1
I0428 20:08:31.320099 31400 net.cpp:382] pool1 -> pool1
I0428 20:08:31.320145 31400 net.cpp:124] Setting up pool1
I0428 20:08:31.320154 31400 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:31.320166 31400 net.cpp:139] Memory required for data: 7834800
I0428 20:08:31.320173 31400 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:31.320195 31400 net.cpp:86] Creating Layer ip1
I0428 20:08:31.320201 31400 net.cpp:408] ip1 <- pool1
I0428 20:08:31.320209 31400 net.cpp:382] ip1 -> ip1
I0428 20:08:31.320406 31400 net.cpp:124] Setting up ip1
I0428 20:08:31.320415 31400 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:31.320430 31400 net.cpp:139] Memory required for data: 7854800
I0428 20:08:31.320442 31400 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:31.320453 31400 net.cpp:86] Creating Layer relu1
I0428 20:08:31.320461 31400 net.cpp:408] relu1 <- ip1
I0428 20:08:31.320468 31400 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:31.320636 31400 net.cpp:124] Setting up relu1
I0428 20:08:31.320646 31400 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:31.320650 31400 net.cpp:139] Memory required for data: 7874800
I0428 20:08:31.320657 31400 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:31.320669 31400 net.cpp:86] Creating Layer ip2
I0428 20:08:31.320677 31400 net.cpp:408] ip2 <- ip1
I0428 20:08:31.320686 31400 net.cpp:382] ip2 -> ip2
I0428 20:08:31.320847 31400 net.cpp:124] Setting up ip2
I0428 20:08:31.320857 31400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:31.320861 31400 net.cpp:139] Memory required for data: 7878800
I0428 20:08:31.320885 31400 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:31.320894 31400 net.cpp:86] Creating Layer relu2
I0428 20:08:31.320899 31400 net.cpp:408] relu2 <- ip2
I0428 20:08:31.320905 31400 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:31.321141 31400 net.cpp:124] Setting up relu2
I0428 20:08:31.321151 31400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:31.321157 31400 net.cpp:139] Memory required for data: 7882800
I0428 20:08:31.321162 31400 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:31.321172 31400 net.cpp:86] Creating Layer ip3
I0428 20:08:31.321192 31400 net.cpp:408] ip3 <- ip2
I0428 20:08:31.321202 31400 net.cpp:382] ip3 -> ip3
I0428 20:08:31.321349 31400 net.cpp:124] Setting up ip3
I0428 20:08:31.321359 31400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:31.321364 31400 net.cpp:139] Memory required for data: 7886800
I0428 20:08:31.321377 31400 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:31.321386 31400 net.cpp:86] Creating Layer relu3
I0428 20:08:31.321393 31400 net.cpp:408] relu3 <- ip3
I0428 20:08:31.321403 31400 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:31.322136 31400 net.cpp:124] Setting up relu3
I0428 20:08:31.322150 31400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:31.322157 31400 net.cpp:139] Memory required for data: 7890800
I0428 20:08:31.322162 31400 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:31.322170 31400 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:31.322175 31400 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:31.322185 31400 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:31.322194 31400 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:31.322257 31400 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:31.322288 31400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:31.322294 31400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:31.322299 31400 net.cpp:139] Memory required for data: 7898800
I0428 20:08:31.322304 31400 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:31.322315 31400 net.cpp:86] Creating Layer accuracy
I0428 20:08:31.322320 31400 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:31.322327 31400 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:31.322336 31400 net.cpp:382] accuracy -> accuracy
I0428 20:08:31.322348 31400 net.cpp:124] Setting up accuracy
I0428 20:08:31.322357 31400 net.cpp:131] Top shape: (1)
I0428 20:08:31.322374 31400 net.cpp:139] Memory required for data: 7898804
I0428 20:08:31.322381 31400 layer_factory.hpp:77] Creating layer loss
I0428 20:08:31.322387 31400 net.cpp:86] Creating Layer loss
I0428 20:08:31.322401 31400 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:31.322407 31400 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:31.322414 31400 net.cpp:382] loss -> loss
I0428 20:08:31.322437 31400 layer_factory.hpp:77] Creating layer loss
I0428 20:08:31.322785 31400 net.cpp:124] Setting up loss
I0428 20:08:31.322801 31400 net.cpp:131] Top shape: (1)
I0428 20:08:31.322806 31400 net.cpp:134]     with loss weight 1
I0428 20:08:31.322825 31400 net.cpp:139] Memory required for data: 7898808
I0428 20:08:31.322831 31400 net.cpp:200] loss needs backward computation.
I0428 20:08:31.322836 31400 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:31.322842 31400 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:31.322847 31400 net.cpp:200] relu3 needs backward computation.
I0428 20:08:31.322851 31400 net.cpp:200] ip3 needs backward computation.
I0428 20:08:31.322856 31400 net.cpp:200] relu2 needs backward computation.
I0428 20:08:31.322860 31400 net.cpp:200] ip2 needs backward computation.
I0428 20:08:31.322865 31400 net.cpp:200] relu1 needs backward computation.
I0428 20:08:31.322870 31400 net.cpp:200] ip1 needs backward computation.
I0428 20:08:31.322875 31400 net.cpp:200] pool1 needs backward computation.
I0428 20:08:31.322880 31400 net.cpp:200] conv1 needs backward computation.
I0428 20:08:31.322885 31400 net.cpp:200] pool0 needs backward computation.
I0428 20:08:31.322890 31400 net.cpp:200] conv0 needs backward computation.
I0428 20:08:31.322896 31400 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:31.322901 31400 net.cpp:202] mnist does not need backward computation.
I0428 20:08:31.322906 31400 net.cpp:244] This network produces output accuracy
I0428 20:08:31.322911 31400 net.cpp:244] This network produces output loss
I0428 20:08:31.322927 31400 net.cpp:257] Network initialization done.
I0428 20:08:31.322973 31400 solver.cpp:56] Solver scaffolding done.
I0428 20:08:31.323310 31400 caffe.cpp:248] Starting Optimization
I0428 20:08:31.323318 31400 solver.cpp:273] Solving LeNet
I0428 20:08:31.323323 31400 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:31.324136 31400 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:31.328392 31400 blocking_queue.cpp:49] Waiting for data
I0428 20:08:31.433913 31407 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:31.434556 31400 solver.cpp:398]     Test net output #0: accuracy = 0.122
I0428 20:08:31.434592 31400 solver.cpp:398]     Test net output #1: loss = 2.31403 (* 1 = 2.31403 loss)
I0428 20:08:31.438128 31400 solver.cpp:219] Iteration 0 (0 iter/s, 0.114774s/100 iters), loss = 2.30974
I0428 20:08:31.438171 31400 solver.cpp:238]     Train net output #0: loss = 2.30974 (* 1 = 2.30974 loss)
I0428 20:08:31.438218 31400 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:31.540225 31400 solver.cpp:219] Iteration 100 (979.99 iter/s, 0.102042s/100 iters), loss = 0.56781
I0428 20:08:31.540253 31400 solver.cpp:238]     Train net output #0: loss = 0.56781 (* 1 = 0.56781 loss)
I0428 20:08:31.540278 31400 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:31.633055 31400 solver.cpp:219] Iteration 200 (1077.86 iter/s, 0.0927764s/100 iters), loss = 0.336773
I0428 20:08:31.633085 31400 solver.cpp:238]     Train net output #0: loss = 0.336773 (* 1 = 0.336773 loss)
I0428 20:08:31.633095 31400 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:31.723439 31400 solver.cpp:219] Iteration 300 (1106.83 iter/s, 0.0903483s/100 iters), loss = 0.213647
I0428 20:08:31.723466 31400 solver.cpp:238]     Train net output #0: loss = 0.213647 (* 1 = 0.213647 loss)
I0428 20:08:31.723490 31400 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:31.822006 31400 solver.cpp:219] Iteration 400 (1014.88 iter/s, 0.0985334s/100 iters), loss = 0.178127
I0428 20:08:31.822032 31400 solver.cpp:238]     Train net output #0: loss = 0.178127 (* 1 = 0.178127 loss)
I0428 20:08:31.822057 31400 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:31.916064 31400 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:31.970338 31407 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:31.970944 31400 solver.cpp:398]     Test net output #0: accuracy = 0.9545
I0428 20:08:31.970963 31400 solver.cpp:398]     Test net output #1: loss = 0.149035 (* 1 = 0.149035 loss)
I0428 20:08:31.972025 31400 solver.cpp:219] Iteration 500 (666.737 iter/s, 0.149984s/100 iters), loss = 0.123004
I0428 20:08:31.972067 31400 solver.cpp:238]     Train net output #0: loss = 0.123003 (* 1 = 0.123003 loss)
I0428 20:08:31.972079 31400 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:32.072788 31400 solver.cpp:219] Iteration 600 (992.915 iter/s, 0.100714s/100 iters), loss = 0.129742
I0428 20:08:32.072837 31400 solver.cpp:238]     Train net output #0: loss = 0.129742 (* 1 = 0.129742 loss)
I0428 20:08:32.072865 31400 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:32.164521 31400 solver.cpp:219] Iteration 700 (1090.58 iter/s, 0.091694s/100 iters), loss = 0.15745
I0428 20:08:32.164551 31400 solver.cpp:238]     Train net output #0: loss = 0.15745 (* 1 = 0.15745 loss)
I0428 20:08:32.164575 31400 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:32.262537 31400 solver.cpp:219] Iteration 800 (1020.61 iter/s, 0.0979804s/100 iters), loss = 0.186285
I0428 20:08:32.262565 31400 solver.cpp:238]     Train net output #0: loss = 0.186285 (* 1 = 0.186285 loss)
I0428 20:08:32.262590 31400 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:32.354699 31400 solver.cpp:219] Iteration 900 (1085.47 iter/s, 0.0921263s/100 iters), loss = 0.169109
I0428 20:08:32.354727 31400 solver.cpp:238]     Train net output #0: loss = 0.169109 (* 1 = 0.169109 loss)
I0428 20:08:32.354753 31400 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:32.385118 31406 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:32.444255 31400 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:32.445266 31400 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:32.445924 31400 solver.cpp:311] Iteration 1000, loss = 0.139068
I0428 20:08:32.445940 31400 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:32.520640 31407 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:32.521229 31400 solver.cpp:398]     Test net output #0: accuracy = 0.9762
I0428 20:08:32.521250 31400 solver.cpp:398]     Test net output #1: loss = 0.0768781 (* 1 = 0.0768781 loss)
I0428 20:08:32.521257 31400 solver.cpp:316] Optimization Done.
I0428 20:08:32.521262 31400 caffe.cpp:259] Optimization Done.
