I0428 19:56:44.687686 28507 caffe.cpp:218] Using GPUs 0
I0428 19:56:44.725013 28507 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:45.182368 28507 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test768.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:45.182514 28507 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test768.prototxt
I0428 19:56:45.182862 28507 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:45.182878 28507 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:45.182976 28507 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:45.183056 28507 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:45.183137 28507 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:45.183156 28507 net.cpp:86] Creating Layer mnist
I0428 19:56:45.183164 28507 net.cpp:382] mnist -> data
I0428 19:56:45.183198 28507 net.cpp:382] mnist -> label
I0428 19:56:45.184206 28507 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:45.186483 28507 net.cpp:124] Setting up mnist
I0428 19:56:45.186497 28507 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:45.186502 28507 net.cpp:131] Top shape: 64 (64)
I0428 19:56:45.186506 28507 net.cpp:139] Memory required for data: 200960
I0428 19:56:45.186511 28507 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:45.186549 28507 net.cpp:86] Creating Layer conv0
I0428 19:56:45.186568 28507 net.cpp:408] conv0 <- data
I0428 19:56:45.186578 28507 net.cpp:382] conv0 -> conv0
I0428 19:56:45.431104 28507 net.cpp:124] Setting up conv0
I0428 19:56:45.431131 28507 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:45.431135 28507 net.cpp:139] Memory required for data: 1675520
I0428 19:56:45.431152 28507 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:45.431165 28507 net.cpp:86] Creating Layer pool0
I0428 19:56:45.431170 28507 net.cpp:408] pool0 <- conv0
I0428 19:56:45.431175 28507 net.cpp:382] pool0 -> pool0
I0428 19:56:45.431223 28507 net.cpp:124] Setting up pool0
I0428 19:56:45.431231 28507 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:45.431234 28507 net.cpp:139] Memory required for data: 2044160
I0428 19:56:45.431237 28507 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:45.431248 28507 net.cpp:86] Creating Layer conv1
I0428 19:56:45.431252 28507 net.cpp:408] conv1 <- pool0
I0428 19:56:45.431257 28507 net.cpp:382] conv1 -> conv1
I0428 19:56:45.433399 28507 net.cpp:124] Setting up conv1
I0428 19:56:45.433414 28507 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:45.433418 28507 net.cpp:139] Memory required for data: 2076928
I0428 19:56:45.433428 28507 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:45.433435 28507 net.cpp:86] Creating Layer pool1
I0428 19:56:45.433439 28507 net.cpp:408] pool1 <- conv1
I0428 19:56:45.433444 28507 net.cpp:382] pool1 -> pool1
I0428 19:56:45.433500 28507 net.cpp:124] Setting up pool1
I0428 19:56:45.433507 28507 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:45.433511 28507 net.cpp:139] Memory required for data: 2085120
I0428 19:56:45.433513 28507 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:45.433521 28507 net.cpp:86] Creating Layer ip1
I0428 19:56:45.433524 28507 net.cpp:408] ip1 <- pool1
I0428 19:56:45.433529 28507 net.cpp:382] ip1 -> ip1
I0428 19:56:45.433634 28507 net.cpp:124] Setting up ip1
I0428 19:56:45.433642 28507 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:45.433645 28507 net.cpp:139] Memory required for data: 2091520
I0428 19:56:45.433653 28507 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:45.433660 28507 net.cpp:86] Creating Layer relu1
I0428 19:56:45.433663 28507 net.cpp:408] relu1 <- ip1
I0428 19:56:45.433667 28507 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:45.433894 28507 net.cpp:124] Setting up relu1
I0428 19:56:45.433903 28507 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:45.433907 28507 net.cpp:139] Memory required for data: 2097920
I0428 19:56:45.433912 28507 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:45.433918 28507 net.cpp:86] Creating Layer ip2
I0428 19:56:45.433921 28507 net.cpp:408] ip2 <- ip1
I0428 19:56:45.433928 28507 net.cpp:382] ip2 -> ip2
I0428 19:56:45.434947 28507 net.cpp:124] Setting up ip2
I0428 19:56:45.434958 28507 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:45.434978 28507 net.cpp:139] Memory required for data: 2110720
I0428 19:56:45.434985 28507 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:45.434993 28507 net.cpp:86] Creating Layer relu2
I0428 19:56:45.434998 28507 net.cpp:408] relu2 <- ip2
I0428 19:56:45.435003 28507 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:45.435820 28507 net.cpp:124] Setting up relu2
I0428 19:56:45.435848 28507 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:45.435853 28507 net.cpp:139] Memory required for data: 2123520
I0428 19:56:45.435855 28507 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:45.435878 28507 net.cpp:86] Creating Layer ip3
I0428 19:56:45.435897 28507 net.cpp:408] ip3 <- ip2
I0428 19:56:45.435902 28507 net.cpp:382] ip3 -> ip3
I0428 19:56:45.436027 28507 net.cpp:124] Setting up ip3
I0428 19:56:45.436035 28507 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:45.436039 28507 net.cpp:139] Memory required for data: 2126080
I0428 19:56:45.436048 28507 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:45.436054 28507 net.cpp:86] Creating Layer relu3
I0428 19:56:45.436058 28507 net.cpp:408] relu3 <- ip3
I0428 19:56:45.436063 28507 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:45.436256 28507 net.cpp:124] Setting up relu3
I0428 19:56:45.436266 28507 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:45.436270 28507 net.cpp:139] Memory required for data: 2128640
I0428 19:56:45.436273 28507 layer_factory.hpp:77] Creating layer loss
I0428 19:56:45.436285 28507 net.cpp:86] Creating Layer loss
I0428 19:56:45.436288 28507 net.cpp:408] loss <- ip3
I0428 19:56:45.436293 28507 net.cpp:408] loss <- label
I0428 19:56:45.436313 28507 net.cpp:382] loss -> loss
I0428 19:56:45.436332 28507 layer_factory.hpp:77] Creating layer loss
I0428 19:56:45.436594 28507 net.cpp:124] Setting up loss
I0428 19:56:45.436604 28507 net.cpp:131] Top shape: (1)
I0428 19:56:45.436607 28507 net.cpp:134]     with loss weight 1
I0428 19:56:45.436621 28507 net.cpp:139] Memory required for data: 2128644
I0428 19:56:45.436625 28507 net.cpp:200] loss needs backward computation.
I0428 19:56:45.436630 28507 net.cpp:200] relu3 needs backward computation.
I0428 19:56:45.436632 28507 net.cpp:200] ip3 needs backward computation.
I0428 19:56:45.436635 28507 net.cpp:200] relu2 needs backward computation.
I0428 19:56:45.436638 28507 net.cpp:200] ip2 needs backward computation.
I0428 19:56:45.436641 28507 net.cpp:200] relu1 needs backward computation.
I0428 19:56:45.436645 28507 net.cpp:200] ip1 needs backward computation.
I0428 19:56:45.436647 28507 net.cpp:200] pool1 needs backward computation.
I0428 19:56:45.436650 28507 net.cpp:200] conv1 needs backward computation.
I0428 19:56:45.436653 28507 net.cpp:200] pool0 needs backward computation.
I0428 19:56:45.436656 28507 net.cpp:200] conv0 needs backward computation.
I0428 19:56:45.436660 28507 net.cpp:202] mnist does not need backward computation.
I0428 19:56:45.436663 28507 net.cpp:244] This network produces output loss
I0428 19:56:45.436672 28507 net.cpp:257] Network initialization done.
I0428 19:56:45.437055 28507 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test768.prototxt
I0428 19:56:45.437115 28507 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:45.437216 28507 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:45.437322 28507 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:45.437368 28507 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:45.437381 28507 net.cpp:86] Creating Layer mnist
I0428 19:56:45.437386 28507 net.cpp:382] mnist -> data
I0428 19:56:45.437396 28507 net.cpp:382] mnist -> label
I0428 19:56:45.437500 28507 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:45.439697 28507 net.cpp:124] Setting up mnist
I0428 19:56:45.439710 28507 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:45.439715 28507 net.cpp:131] Top shape: 100 (100)
I0428 19:56:45.439718 28507 net.cpp:139] Memory required for data: 314000
I0428 19:56:45.439723 28507 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:45.439729 28507 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:45.439733 28507 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:45.439767 28507 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:45.439775 28507 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:45.439815 28507 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:45.439822 28507 net.cpp:131] Top shape: 100 (100)
I0428 19:56:45.439826 28507 net.cpp:131] Top shape: 100 (100)
I0428 19:56:45.439829 28507 net.cpp:139] Memory required for data: 314800
I0428 19:56:45.439832 28507 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:45.439841 28507 net.cpp:86] Creating Layer conv0
I0428 19:56:45.439846 28507 net.cpp:408] conv0 <- data
I0428 19:56:45.439851 28507 net.cpp:382] conv0 -> conv0
I0428 19:56:45.441429 28507 net.cpp:124] Setting up conv0
I0428 19:56:45.441443 28507 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:45.441447 28507 net.cpp:139] Memory required for data: 2618800
I0428 19:56:45.441457 28507 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:45.441463 28507 net.cpp:86] Creating Layer pool0
I0428 19:56:45.441468 28507 net.cpp:408] pool0 <- conv0
I0428 19:56:45.441473 28507 net.cpp:382] pool0 -> pool0
I0428 19:56:45.441511 28507 net.cpp:124] Setting up pool0
I0428 19:56:45.441516 28507 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:45.441519 28507 net.cpp:139] Memory required for data: 3194800
I0428 19:56:45.441522 28507 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:45.441535 28507 net.cpp:86] Creating Layer conv1
I0428 19:56:45.441539 28507 net.cpp:408] conv1 <- pool0
I0428 19:56:45.441543 28507 net.cpp:382] conv1 -> conv1
I0428 19:56:45.443775 28507 net.cpp:124] Setting up conv1
I0428 19:56:45.443789 28507 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:45.443794 28507 net.cpp:139] Memory required for data: 3246000
I0428 19:56:45.443802 28507 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:45.443826 28507 net.cpp:86] Creating Layer pool1
I0428 19:56:45.443830 28507 net.cpp:408] pool1 <- conv1
I0428 19:56:45.443835 28507 net.cpp:382] pool1 -> pool1
I0428 19:56:45.443892 28507 net.cpp:124] Setting up pool1
I0428 19:56:45.443898 28507 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:45.443900 28507 net.cpp:139] Memory required for data: 3258800
I0428 19:56:45.443903 28507 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:45.443909 28507 net.cpp:86] Creating Layer ip1
I0428 19:56:45.443914 28507 net.cpp:408] ip1 <- pool1
I0428 19:56:45.443920 28507 net.cpp:382] ip1 -> ip1
I0428 19:56:45.444033 28507 net.cpp:124] Setting up ip1
I0428 19:56:45.444041 28507 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:45.444054 28507 net.cpp:139] Memory required for data: 3268800
I0428 19:56:45.444063 28507 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:45.444068 28507 net.cpp:86] Creating Layer relu1
I0428 19:56:45.444072 28507 net.cpp:408] relu1 <- ip1
I0428 19:56:45.444078 28507 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:45.444334 28507 net.cpp:124] Setting up relu1
I0428 19:56:45.444344 28507 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:45.444346 28507 net.cpp:139] Memory required for data: 3278800
I0428 19:56:45.444350 28507 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:45.444365 28507 net.cpp:86] Creating Layer ip2
I0428 19:56:45.444373 28507 net.cpp:408] ip2 <- ip1
I0428 19:56:45.444380 28507 net.cpp:382] ip2 -> ip2
I0428 19:56:45.444494 28507 net.cpp:124] Setting up ip2
I0428 19:56:45.444504 28507 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:45.444507 28507 net.cpp:139] Memory required for data: 3298800
I0428 19:56:45.444514 28507 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:45.444517 28507 net.cpp:86] Creating Layer relu2
I0428 19:56:45.444520 28507 net.cpp:408] relu2 <- ip2
I0428 19:56:45.444525 28507 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:45.444711 28507 net.cpp:124] Setting up relu2
I0428 19:56:45.444725 28507 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:45.444730 28507 net.cpp:139] Memory required for data: 3318800
I0428 19:56:45.444739 28507 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:45.444744 28507 net.cpp:86] Creating Layer ip3
I0428 19:56:45.444748 28507 net.cpp:408] ip3 <- ip2
I0428 19:56:45.444759 28507 net.cpp:382] ip3 -> ip3
I0428 19:56:45.444895 28507 net.cpp:124] Setting up ip3
I0428 19:56:45.444905 28507 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:45.444913 28507 net.cpp:139] Memory required for data: 3322800
I0428 19:56:45.444922 28507 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:45.444929 28507 net.cpp:86] Creating Layer relu3
I0428 19:56:45.444932 28507 net.cpp:408] relu3 <- ip3
I0428 19:56:45.444937 28507 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:45.445843 28507 net.cpp:124] Setting up relu3
I0428 19:56:45.445855 28507 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:45.445859 28507 net.cpp:139] Memory required for data: 3326800
I0428 19:56:45.445863 28507 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:45.445868 28507 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:45.445871 28507 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:45.445878 28507 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:45.445885 28507 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:45.445930 28507 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:45.445935 28507 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:45.445940 28507 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:45.445942 28507 net.cpp:139] Memory required for data: 3334800
I0428 19:56:45.445945 28507 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:45.445951 28507 net.cpp:86] Creating Layer accuracy
I0428 19:56:45.445955 28507 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:45.445960 28507 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:45.445964 28507 net.cpp:382] accuracy -> accuracy
I0428 19:56:45.445971 28507 net.cpp:124] Setting up accuracy
I0428 19:56:45.445976 28507 net.cpp:131] Top shape: (1)
I0428 19:56:45.445978 28507 net.cpp:139] Memory required for data: 3334804
I0428 19:56:45.445981 28507 layer_factory.hpp:77] Creating layer loss
I0428 19:56:45.445986 28507 net.cpp:86] Creating Layer loss
I0428 19:56:45.445991 28507 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:45.445993 28507 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:45.445998 28507 net.cpp:382] loss -> loss
I0428 19:56:45.446017 28507 layer_factory.hpp:77] Creating layer loss
I0428 19:56:45.446272 28507 net.cpp:124] Setting up loss
I0428 19:56:45.446282 28507 net.cpp:131] Top shape: (1)
I0428 19:56:45.446285 28507 net.cpp:134]     with loss weight 1
I0428 19:56:45.446291 28507 net.cpp:139] Memory required for data: 3334808
I0428 19:56:45.446306 28507 net.cpp:200] loss needs backward computation.
I0428 19:56:45.446318 28507 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:45.446322 28507 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:45.446331 28507 net.cpp:200] relu3 needs backward computation.
I0428 19:56:45.446334 28507 net.cpp:200] ip3 needs backward computation.
I0428 19:56:45.446337 28507 net.cpp:200] relu2 needs backward computation.
I0428 19:56:45.446341 28507 net.cpp:200] ip2 needs backward computation.
I0428 19:56:45.446342 28507 net.cpp:200] relu1 needs backward computation.
I0428 19:56:45.446352 28507 net.cpp:200] ip1 needs backward computation.
I0428 19:56:45.446354 28507 net.cpp:200] pool1 needs backward computation.
I0428 19:56:45.446357 28507 net.cpp:200] conv1 needs backward computation.
I0428 19:56:45.446367 28507 net.cpp:200] pool0 needs backward computation.
I0428 19:56:45.446369 28507 net.cpp:200] conv0 needs backward computation.
I0428 19:56:45.446373 28507 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:45.446378 28507 net.cpp:202] mnist does not need backward computation.
I0428 19:56:45.446382 28507 net.cpp:244] This network produces output accuracy
I0428 19:56:45.446390 28507 net.cpp:244] This network produces output loss
I0428 19:56:45.446401 28507 net.cpp:257] Network initialization done.
I0428 19:56:45.446444 28507 solver.cpp:56] Solver scaffolding done.
I0428 19:56:45.446784 28507 caffe.cpp:248] Starting Optimization
I0428 19:56:45.446791 28507 solver.cpp:273] Solving LeNet
I0428 19:56:45.446794 28507 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:45.447676 28507 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:45.451402 28507 blocking_queue.cpp:49] Waiting for data
I0428 19:56:45.522336 28514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:45.522963 28507 solver.cpp:398]     Test net output #0: accuracy = 0.1082
I0428 19:56:45.522995 28507 solver.cpp:398]     Test net output #1: loss = 2.30085 (* 1 = 2.30085 loss)
I0428 19:56:45.526399 28507 solver.cpp:219] Iteration 0 (0 iter/s, 0.0795751s/100 iters), loss = 2.30888
I0428 19:56:45.526435 28507 solver.cpp:238]     Train net output #0: loss = 2.30888 (* 1 = 2.30888 loss)
I0428 19:56:45.526455 28507 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:45.609525 28507 solver.cpp:219] Iteration 100 (1203.7 iter/s, 0.0830771s/100 iters), loss = 0.994562
I0428 19:56:45.609557 28507 solver.cpp:238]     Train net output #0: loss = 0.994562 (* 1 = 0.994562 loss)
I0428 19:56:45.609565 28507 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:45.684506 28507 solver.cpp:219] Iteration 200 (1334.36 iter/s, 0.0749425s/100 iters), loss = 0.694022
I0428 19:56:45.684530 28507 solver.cpp:238]     Train net output #0: loss = 0.694022 (* 1 = 0.694022 loss)
I0428 19:56:45.684537 28507 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:45.758016 28507 solver.cpp:219] Iteration 300 (1360.97 iter/s, 0.0734771s/100 iters), loss = 0.237009
I0428 19:56:45.758040 28507 solver.cpp:238]     Train net output #0: loss = 0.237009 (* 1 = 0.237009 loss)
I0428 19:56:45.758046 28507 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:45.831619 28507 solver.cpp:219] Iteration 400 (1359.24 iter/s, 0.0735703s/100 iters), loss = 0.215046
I0428 19:56:45.831643 28507 solver.cpp:238]     Train net output #0: loss = 0.215046 (* 1 = 0.215046 loss)
I0428 19:56:45.831650 28507 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:45.904103 28507 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:45.956521 28514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:45.957037 28507 solver.cpp:398]     Test net output #0: accuracy = 0.9143
I0428 19:56:45.957072 28507 solver.cpp:398]     Test net output #1: loss = 0.272945 (* 1 = 0.272945 loss)
I0428 19:56:45.957922 28507 solver.cpp:219] Iteration 500 (791.965 iter/s, 0.126268s/100 iters), loss = 0.275641
I0428 19:56:45.957949 28507 solver.cpp:238]     Train net output #0: loss = 0.275641 (* 1 = 0.275641 loss)
I0428 19:56:45.957978 28507 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:46.033761 28507 solver.cpp:219] Iteration 600 (1319.22 iter/s, 0.0758026s/100 iters), loss = 0.192905
I0428 19:56:46.033784 28507 solver.cpp:238]     Train net output #0: loss = 0.192905 (* 1 = 0.192905 loss)
I0428 19:56:46.033807 28507 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:46.109472 28507 solver.cpp:219] Iteration 700 (1321.38 iter/s, 0.0756787s/100 iters), loss = 0.332918
I0428 19:56:46.109498 28507 solver.cpp:238]     Train net output #0: loss = 0.332918 (* 1 = 0.332918 loss)
I0428 19:56:46.109508 28507 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:46.184118 28507 solver.cpp:219] Iteration 800 (1340.26 iter/s, 0.0746126s/100 iters), loss = 0.223141
I0428 19:56:46.184142 28507 solver.cpp:238]     Train net output #0: loss = 0.223141 (* 1 = 0.223141 loss)
I0428 19:56:46.184166 28507 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:46.258870 28507 solver.cpp:219] Iteration 900 (1338.36 iter/s, 0.0747182s/100 iters), loss = 0.323369
I0428 19:56:46.258894 28507 solver.cpp:238]     Train net output #0: loss = 0.323369 (* 1 = 0.323369 loss)
I0428 19:56:46.258919 28507 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:46.284024 28513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:46.333216 28507 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:46.333948 28507 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:46.334388 28507 solver.cpp:311] Iteration 1000, loss = 0.30077
I0428 19:56:46.334404 28507 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:46.408648 28514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:46.409145 28507 solver.cpp:398]     Test net output #0: accuracy = 0.9497
I0428 19:56:46.409164 28507 solver.cpp:398]     Test net output #1: loss = 0.16584 (* 1 = 0.16584 loss)
I0428 19:56:46.409169 28507 solver.cpp:316] Optimization Done.
I0428 19:56:46.409173 28507 caffe.cpp:259] Optimization Done.
