I0428 20:08:17.499685 31348 caffe.cpp:218] Using GPUs 0
I0428 20:08:17.536260 31348 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:17.990223 31348 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1079.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:17.990380 31348 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1079.prototxt
I0428 20:08:17.990787 31348 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:17.990828 31348 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:17.990912 31348 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:17.990978 31348 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:17.991063 31348 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:17.991086 31348 net.cpp:86] Creating Layer mnist
I0428 20:08:17.991108 31348 net.cpp:382] mnist -> data
I0428 20:08:17.991128 31348 net.cpp:382] mnist -> label
I0428 20:08:17.992041 31348 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:17.994333 31348 net.cpp:124] Setting up mnist
I0428 20:08:17.994348 31348 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:17.994352 31348 net.cpp:131] Top shape: 64 (64)
I0428 20:08:17.994355 31348 net.cpp:139] Memory required for data: 200960
I0428 20:08:17.994361 31348 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:17.994375 31348 net.cpp:86] Creating Layer conv0
I0428 20:08:17.994393 31348 net.cpp:408] conv0 <- data
I0428 20:08:17.994421 31348 net.cpp:382] conv0 -> conv0
I0428 20:08:18.222285 31348 net.cpp:124] Setting up conv0
I0428 20:08:18.222311 31348 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:18.222316 31348 net.cpp:139] Memory required for data: 3887360
I0428 20:08:18.222329 31348 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:18.222340 31348 net.cpp:86] Creating Layer pool0
I0428 20:08:18.222344 31348 net.cpp:408] pool0 <- conv0
I0428 20:08:18.222349 31348 net.cpp:382] pool0 -> pool0
I0428 20:08:18.222406 31348 net.cpp:124] Setting up pool0
I0428 20:08:18.222414 31348 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:18.222416 31348 net.cpp:139] Memory required for data: 4808960
I0428 20:08:18.222419 31348 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:18.222429 31348 net.cpp:86] Creating Layer conv1
I0428 20:08:18.222435 31348 net.cpp:408] conv1 <- pool0
I0428 20:08:18.222455 31348 net.cpp:382] conv1 -> conv1
I0428 20:08:18.225304 31348 net.cpp:124] Setting up conv1
I0428 20:08:18.225318 31348 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:18.225322 31348 net.cpp:139] Memory required for data: 4972800
I0428 20:08:18.225330 31348 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:18.225337 31348 net.cpp:86] Creating Layer pool1
I0428 20:08:18.225340 31348 net.cpp:408] pool1 <- conv1
I0428 20:08:18.225344 31348 net.cpp:382] pool1 -> pool1
I0428 20:08:18.225394 31348 net.cpp:124] Setting up pool1
I0428 20:08:18.225401 31348 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:18.225404 31348 net.cpp:139] Memory required for data: 5013760
I0428 20:08:18.225407 31348 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:18.225414 31348 net.cpp:86] Creating Layer ip1
I0428 20:08:18.225417 31348 net.cpp:408] ip1 <- pool1
I0428 20:08:18.225421 31348 net.cpp:382] ip1 -> ip1
I0428 20:08:18.226336 31348 net.cpp:124] Setting up ip1
I0428 20:08:18.226346 31348 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:18.226366 31348 net.cpp:139] Memory required for data: 5020160
I0428 20:08:18.226374 31348 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:18.226395 31348 net.cpp:86] Creating Layer relu1
I0428 20:08:18.226399 31348 net.cpp:408] relu1 <- ip1
I0428 20:08:18.226403 31348 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:18.226590 31348 net.cpp:124] Setting up relu1
I0428 20:08:18.226599 31348 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:18.226603 31348 net.cpp:139] Memory required for data: 5026560
I0428 20:08:18.226608 31348 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:18.226613 31348 net.cpp:86] Creating Layer ip2
I0428 20:08:18.226618 31348 net.cpp:408] ip2 <- ip1
I0428 20:08:18.226622 31348 net.cpp:382] ip2 -> ip2
I0428 20:08:18.226735 31348 net.cpp:124] Setting up ip2
I0428 20:08:18.226742 31348 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:18.226763 31348 net.cpp:139] Memory required for data: 5032960
I0428 20:08:18.226768 31348 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:18.226774 31348 net.cpp:86] Creating Layer relu2
I0428 20:08:18.226778 31348 net.cpp:408] relu2 <- ip2
I0428 20:08:18.226781 31348 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:18.227566 31348 net.cpp:124] Setting up relu2
I0428 20:08:18.227578 31348 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:18.227582 31348 net.cpp:139] Memory required for data: 5039360
I0428 20:08:18.227586 31348 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:18.227593 31348 net.cpp:86] Creating Layer ip3
I0428 20:08:18.227596 31348 net.cpp:408] ip3 <- ip2
I0428 20:08:18.227602 31348 net.cpp:382] ip3 -> ip3
I0428 20:08:18.227711 31348 net.cpp:124] Setting up ip3
I0428 20:08:18.227720 31348 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:18.227722 31348 net.cpp:139] Memory required for data: 5041920
I0428 20:08:18.227730 31348 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:18.227737 31348 net.cpp:86] Creating Layer relu3
I0428 20:08:18.227741 31348 net.cpp:408] relu3 <- ip3
I0428 20:08:18.227744 31348 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:18.227908 31348 net.cpp:124] Setting up relu3
I0428 20:08:18.227917 31348 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:18.227921 31348 net.cpp:139] Memory required for data: 5044480
I0428 20:08:18.227923 31348 layer_factory.hpp:77] Creating layer loss
I0428 20:08:18.227929 31348 net.cpp:86] Creating Layer loss
I0428 20:08:18.227932 31348 net.cpp:408] loss <- ip3
I0428 20:08:18.227936 31348 net.cpp:408] loss <- label
I0428 20:08:18.227941 31348 net.cpp:382] loss -> loss
I0428 20:08:18.227973 31348 layer_factory.hpp:77] Creating layer loss
I0428 20:08:18.228185 31348 net.cpp:124] Setting up loss
I0428 20:08:18.228194 31348 net.cpp:131] Top shape: (1)
I0428 20:08:18.228198 31348 net.cpp:134]     with loss weight 1
I0428 20:08:18.228211 31348 net.cpp:139] Memory required for data: 5044484
I0428 20:08:18.228215 31348 net.cpp:200] loss needs backward computation.
I0428 20:08:18.228219 31348 net.cpp:200] relu3 needs backward computation.
I0428 20:08:18.228221 31348 net.cpp:200] ip3 needs backward computation.
I0428 20:08:18.228224 31348 net.cpp:200] relu2 needs backward computation.
I0428 20:08:18.228227 31348 net.cpp:200] ip2 needs backward computation.
I0428 20:08:18.228230 31348 net.cpp:200] relu1 needs backward computation.
I0428 20:08:18.228233 31348 net.cpp:200] ip1 needs backward computation.
I0428 20:08:18.228236 31348 net.cpp:200] pool1 needs backward computation.
I0428 20:08:18.228240 31348 net.cpp:200] conv1 needs backward computation.
I0428 20:08:18.228242 31348 net.cpp:200] pool0 needs backward computation.
I0428 20:08:18.228245 31348 net.cpp:200] conv0 needs backward computation.
I0428 20:08:18.228248 31348 net.cpp:202] mnist does not need backward computation.
I0428 20:08:18.228251 31348 net.cpp:244] This network produces output loss
I0428 20:08:18.228260 31348 net.cpp:257] Network initialization done.
I0428 20:08:18.228597 31348 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1079.prototxt
I0428 20:08:18.228639 31348 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:18.228729 31348 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:18.228808 31348 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:18.228893 31348 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:18.228906 31348 net.cpp:86] Creating Layer mnist
I0428 20:08:18.228926 31348 net.cpp:382] mnist -> data
I0428 20:08:18.228935 31348 net.cpp:382] mnist -> label
I0428 20:08:18.229027 31348 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:18.231009 31348 net.cpp:124] Setting up mnist
I0428 20:08:18.231053 31348 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:18.231058 31348 net.cpp:131] Top shape: 100 (100)
I0428 20:08:18.231061 31348 net.cpp:139] Memory required for data: 314000
I0428 20:08:18.231065 31348 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:18.231092 31348 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:18.231096 31348 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:18.231101 31348 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:18.231108 31348 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:18.231168 31348 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:18.231174 31348 net.cpp:131] Top shape: 100 (100)
I0428 20:08:18.231178 31348 net.cpp:131] Top shape: 100 (100)
I0428 20:08:18.231181 31348 net.cpp:139] Memory required for data: 314800
I0428 20:08:18.231184 31348 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:18.231194 31348 net.cpp:86] Creating Layer conv0
I0428 20:08:18.231196 31348 net.cpp:408] conv0 <- data
I0428 20:08:18.231201 31348 net.cpp:382] conv0 -> conv0
I0428 20:08:18.233222 31348 net.cpp:124] Setting up conv0
I0428 20:08:18.233250 31348 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:18.233254 31348 net.cpp:139] Memory required for data: 6074800
I0428 20:08:18.233274 31348 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:18.233280 31348 net.cpp:86] Creating Layer pool0
I0428 20:08:18.233284 31348 net.cpp:408] pool0 <- conv0
I0428 20:08:18.233289 31348 net.cpp:382] pool0 -> pool0
I0428 20:08:18.233340 31348 net.cpp:124] Setting up pool0
I0428 20:08:18.233346 31348 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:18.233350 31348 net.cpp:139] Memory required for data: 7514800
I0428 20:08:18.233352 31348 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:18.233361 31348 net.cpp:86] Creating Layer conv1
I0428 20:08:18.233363 31348 net.cpp:408] conv1 <- pool0
I0428 20:08:18.233368 31348 net.cpp:382] conv1 -> conv1
I0428 20:08:18.235543 31348 net.cpp:124] Setting up conv1
I0428 20:08:18.235556 31348 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:18.235575 31348 net.cpp:139] Memory required for data: 7770800
I0428 20:08:18.235584 31348 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:18.235590 31348 net.cpp:86] Creating Layer pool1
I0428 20:08:18.235605 31348 net.cpp:408] pool1 <- conv1
I0428 20:08:18.235610 31348 net.cpp:382] pool1 -> pool1
I0428 20:08:18.235669 31348 net.cpp:124] Setting up pool1
I0428 20:08:18.235676 31348 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:18.235678 31348 net.cpp:139] Memory required for data: 7834800
I0428 20:08:18.235682 31348 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:18.235699 31348 net.cpp:86] Creating Layer ip1
I0428 20:08:18.235702 31348 net.cpp:408] ip1 <- pool1
I0428 20:08:18.235707 31348 net.cpp:382] ip1 -> ip1
I0428 20:08:18.235895 31348 net.cpp:124] Setting up ip1
I0428 20:08:18.235904 31348 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:18.235919 31348 net.cpp:139] Memory required for data: 7844800
I0428 20:08:18.235936 31348 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:18.235941 31348 net.cpp:86] Creating Layer relu1
I0428 20:08:18.235945 31348 net.cpp:408] relu1 <- ip1
I0428 20:08:18.235954 31348 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:18.236136 31348 net.cpp:124] Setting up relu1
I0428 20:08:18.236145 31348 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:18.236148 31348 net.cpp:139] Memory required for data: 7854800
I0428 20:08:18.236151 31348 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:18.236160 31348 net.cpp:86] Creating Layer ip2
I0428 20:08:18.236163 31348 net.cpp:408] ip2 <- ip1
I0428 20:08:18.236168 31348 net.cpp:382] ip2 -> ip2
I0428 20:08:18.236268 31348 net.cpp:124] Setting up ip2
I0428 20:08:18.236275 31348 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:18.236279 31348 net.cpp:139] Memory required for data: 7864800
I0428 20:08:18.236284 31348 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:18.236289 31348 net.cpp:86] Creating Layer relu2
I0428 20:08:18.236292 31348 net.cpp:408] relu2 <- ip2
I0428 20:08:18.236296 31348 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:18.236452 31348 net.cpp:124] Setting up relu2
I0428 20:08:18.236460 31348 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:18.236464 31348 net.cpp:139] Memory required for data: 7874800
I0428 20:08:18.236466 31348 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:18.236472 31348 net.cpp:86] Creating Layer ip3
I0428 20:08:18.236475 31348 net.cpp:408] ip3 <- ip2
I0428 20:08:18.236480 31348 net.cpp:382] ip3 -> ip3
I0428 20:08:18.236573 31348 net.cpp:124] Setting up ip3
I0428 20:08:18.236580 31348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:18.236583 31348 net.cpp:139] Memory required for data: 7878800
I0428 20:08:18.236591 31348 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:18.236596 31348 net.cpp:86] Creating Layer relu3
I0428 20:08:18.236614 31348 net.cpp:408] relu3 <- ip3
I0428 20:08:18.236619 31348 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:18.237543 31348 net.cpp:124] Setting up relu3
I0428 20:08:18.237555 31348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:18.237571 31348 net.cpp:139] Memory required for data: 7882800
I0428 20:08:18.237574 31348 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:18.237581 31348 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:18.237601 31348 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:18.237622 31348 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:18.237629 31348 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:18.237686 31348 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:18.237694 31348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:18.237713 31348 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:18.237716 31348 net.cpp:139] Memory required for data: 7890800
I0428 20:08:18.237721 31348 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:18.237726 31348 net.cpp:86] Creating Layer accuracy
I0428 20:08:18.237730 31348 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:18.237735 31348 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:18.237740 31348 net.cpp:382] accuracy -> accuracy
I0428 20:08:18.237747 31348 net.cpp:124] Setting up accuracy
I0428 20:08:18.237751 31348 net.cpp:131] Top shape: (1)
I0428 20:08:18.237756 31348 net.cpp:139] Memory required for data: 7890804
I0428 20:08:18.237759 31348 layer_factory.hpp:77] Creating layer loss
I0428 20:08:18.237764 31348 net.cpp:86] Creating Layer loss
I0428 20:08:18.237767 31348 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:18.237771 31348 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:18.237776 31348 net.cpp:382] loss -> loss
I0428 20:08:18.237783 31348 layer_factory.hpp:77] Creating layer loss
I0428 20:08:18.238087 31348 net.cpp:124] Setting up loss
I0428 20:08:18.238114 31348 net.cpp:131] Top shape: (1)
I0428 20:08:18.238118 31348 net.cpp:134]     with loss weight 1
I0428 20:08:18.238152 31348 net.cpp:139] Memory required for data: 7890808
I0428 20:08:18.238159 31348 net.cpp:200] loss needs backward computation.
I0428 20:08:18.238167 31348 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:18.238173 31348 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:18.238179 31348 net.cpp:200] relu3 needs backward computation.
I0428 20:08:18.238184 31348 net.cpp:200] ip3 needs backward computation.
I0428 20:08:18.238189 31348 net.cpp:200] relu2 needs backward computation.
I0428 20:08:18.238198 31348 net.cpp:200] ip2 needs backward computation.
I0428 20:08:18.238203 31348 net.cpp:200] relu1 needs backward computation.
I0428 20:08:18.238206 31348 net.cpp:200] ip1 needs backward computation.
I0428 20:08:18.238210 31348 net.cpp:200] pool1 needs backward computation.
I0428 20:08:18.238214 31348 net.cpp:200] conv1 needs backward computation.
I0428 20:08:18.238217 31348 net.cpp:200] pool0 needs backward computation.
I0428 20:08:18.238221 31348 net.cpp:200] conv0 needs backward computation.
I0428 20:08:18.238231 31348 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:18.238235 31348 net.cpp:202] mnist does not need backward computation.
I0428 20:08:18.238240 31348 net.cpp:244] This network produces output accuracy
I0428 20:08:18.238242 31348 net.cpp:244] This network produces output loss
I0428 20:08:18.238255 31348 net.cpp:257] Network initialization done.
I0428 20:08:18.238306 31348 solver.cpp:56] Solver scaffolding done.
I0428 20:08:18.238708 31348 caffe.cpp:248] Starting Optimization
I0428 20:08:18.238729 31348 solver.cpp:273] Solving LeNet
I0428 20:08:18.238732 31348 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:18.239666 31348 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:18.244892 31348 blocking_queue.cpp:49] Waiting for data
I0428 20:08:18.311506 31356 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:18.312119 31348 solver.cpp:398]     Test net output #0: accuracy = 0.1709
I0428 20:08:18.312155 31348 solver.cpp:398]     Test net output #1: loss = 2.29186 (* 1 = 2.29186 loss)
I0428 20:08:18.315731 31348 solver.cpp:219] Iteration 0 (-1.05658e-42 iter/s, 0.0769546s/100 iters), loss = 2.28529
I0428 20:08:18.315754 31348 solver.cpp:238]     Train net output #0: loss = 2.28529 (* 1 = 2.28529 loss)
I0428 20:08:18.315765 31348 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:18.405489 31348 solver.cpp:219] Iteration 100 (1114.52 iter/s, 0.0897249s/100 iters), loss = 0.278385
I0428 20:08:18.405529 31348 solver.cpp:238]     Train net output #0: loss = 0.278385 (* 1 = 0.278385 loss)
I0428 20:08:18.405535 31348 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:18.508425 31348 solver.cpp:219] Iteration 200 (971.839 iter/s, 0.102898s/100 iters), loss = 0.21345
I0428 20:08:18.508472 31348 solver.cpp:238]     Train net output #0: loss = 0.21345 (* 1 = 0.21345 loss)
I0428 20:08:18.508479 31348 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:18.602601 31348 solver.cpp:219] Iteration 300 (1062.47 iter/s, 0.0941199s/100 iters), loss = 0.265462
I0428 20:08:18.602641 31348 solver.cpp:238]     Train net output #0: loss = 0.265462 (* 1 = 0.265462 loss)
I0428 20:08:18.602663 31348 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:18.692536 31348 solver.cpp:219] Iteration 400 (1112.5 iter/s, 0.0898876s/100 iters), loss = 0.126895
I0428 20:08:18.692575 31348 solver.cpp:238]     Train net output #0: loss = 0.126895 (* 1 = 0.126895 loss)
I0428 20:08:18.692582 31348 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:18.782814 31348 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:18.838726 31356 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:18.839339 31348 solver.cpp:398]     Test net output #0: accuracy = 0.9612
I0428 20:08:18.839373 31348 solver.cpp:398]     Test net output #1: loss = 0.121282 (* 1 = 0.121282 loss)
I0428 20:08:18.840287 31348 solver.cpp:219] Iteration 500 (677.054 iter/s, 0.147699s/100 iters), loss = 0.103173
I0428 20:08:18.840348 31348 solver.cpp:238]     Train net output #0: loss = 0.103173 (* 1 = 0.103173 loss)
I0428 20:08:18.840356 31348 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:18.931046 31348 solver.cpp:219] Iteration 600 (1102.66 iter/s, 0.0906895s/100 iters), loss = 0.0999586
I0428 20:08:18.931085 31348 solver.cpp:238]     Train net output #0: loss = 0.0999585 (* 1 = 0.0999585 loss)
I0428 20:08:18.931092 31348 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:19.022500 31348 solver.cpp:219] Iteration 700 (1093.86 iter/s, 0.0914196s/100 iters), loss = 0.136792
I0428 20:08:19.022542 31348 solver.cpp:238]     Train net output #0: loss = 0.136792 (* 1 = 0.136792 loss)
I0428 20:08:19.022549 31348 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:19.117553 31348 solver.cpp:219] Iteration 800 (1052.6 iter/s, 0.0950026s/100 iters), loss = 0.113931
I0428 20:08:19.117578 31348 solver.cpp:238]     Train net output #0: loss = 0.113931 (* 1 = 0.113931 loss)
I0428 20:08:19.117585 31348 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:19.206815 31348 solver.cpp:219] Iteration 900 (1120.73 iter/s, 0.0892275s/100 iters), loss = 0.181858
I0428 20:08:19.206854 31348 solver.cpp:238]     Train net output #0: loss = 0.181858 (* 1 = 0.181858 loss)
I0428 20:08:19.206861 31348 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:19.236779 31354 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:19.303032 31348 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:19.303891 31348 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:19.304471 31348 solver.cpp:311] Iteration 1000, loss = 0.110392
I0428 20:08:19.304507 31348 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:19.358613 31356 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:19.360093 31348 solver.cpp:398]     Test net output #0: accuracy = 0.9732
I0428 20:08:19.360128 31348 solver.cpp:398]     Test net output #1: loss = 0.0834257 (* 1 = 0.0834257 loss)
I0428 20:08:19.360134 31348 solver.cpp:316] Optimization Done.
I0428 20:08:19.360137 31348 caffe.cpp:259] Optimization Done.
