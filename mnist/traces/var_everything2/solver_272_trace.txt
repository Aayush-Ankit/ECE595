I0428 19:38:21.735476 24002 caffe.cpp:218] Using GPUs 0
I0428 19:38:21.775826 24002 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:22.221935 24002 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test272.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:22.222075 24002 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test272.prototxt
I0428 19:38:22.222362 24002 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:22.222380 24002 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:22.222452 24002 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:22.222534 24002 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:22.222638 24002 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:22.222663 24002 net.cpp:86] Creating Layer mnist
I0428 19:38:22.222687 24002 net.cpp:382] mnist -> data
I0428 19:38:22.222714 24002 net.cpp:382] mnist -> label
I0428 19:38:22.223683 24002 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:22.225951 24002 net.cpp:124] Setting up mnist
I0428 19:38:22.225985 24002 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:22.225992 24002 net.cpp:131] Top shape: 64 (64)
I0428 19:38:22.226007 24002 net.cpp:139] Memory required for data: 200960
I0428 19:38:22.226016 24002 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:22.226037 24002 net.cpp:86] Creating Layer conv0
I0428 19:38:22.226047 24002 net.cpp:408] conv0 <- data
I0428 19:38:22.226060 24002 net.cpp:382] conv0 -> conv0
I0428 19:38:22.451050 24002 net.cpp:124] Setting up conv0
I0428 19:38:22.451077 24002 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:38:22.451082 24002 net.cpp:139] Memory required for data: 14946560
I0428 19:38:22.451117 24002 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:22.451134 24002 net.cpp:86] Creating Layer pool0
I0428 19:38:22.451160 24002 net.cpp:408] pool0 <- conv0
I0428 19:38:22.451170 24002 net.cpp:382] pool0 -> pool0
I0428 19:38:22.451225 24002 net.cpp:124] Setting up pool0
I0428 19:38:22.451234 24002 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:38:22.451239 24002 net.cpp:139] Memory required for data: 18632960
I0428 19:38:22.451243 24002 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:22.451254 24002 net.cpp:86] Creating Layer ip1
I0428 19:38:22.451259 24002 net.cpp:408] ip1 <- pool0
I0428 19:38:22.451267 24002 net.cpp:382] ip1 -> ip1
I0428 19:38:22.456305 24002 net.cpp:124] Setting up ip1
I0428 19:38:22.456318 24002 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:38:22.456339 24002 net.cpp:139] Memory required for data: 18645760
I0428 19:38:22.456367 24002 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:22.456377 24002 net.cpp:86] Creating Layer relu1
I0428 19:38:22.456382 24002 net.cpp:408] relu1 <- ip1
I0428 19:38:22.456389 24002 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:22.456557 24002 net.cpp:124] Setting up relu1
I0428 19:38:22.456568 24002 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:38:22.456571 24002 net.cpp:139] Memory required for data: 18658560
I0428 19:38:22.456576 24002 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:22.456586 24002 net.cpp:86] Creating Layer ip2
I0428 19:38:22.456591 24002 net.cpp:408] ip2 <- ip1
I0428 19:38:22.456600 24002 net.cpp:382] ip2 -> ip2
I0428 19:38:22.456727 24002 net.cpp:124] Setting up ip2
I0428 19:38:22.456735 24002 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:38:22.456740 24002 net.cpp:139] Memory required for data: 18671360
I0428 19:38:22.456751 24002 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:22.456763 24002 net.cpp:86] Creating Layer relu2
I0428 19:38:22.456771 24002 net.cpp:408] relu2 <- ip2
I0428 19:38:22.456779 24002 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:22.457607 24002 net.cpp:124] Setting up relu2
I0428 19:38:22.457620 24002 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:38:22.457626 24002 net.cpp:139] Memory required for data: 18684160
I0428 19:38:22.457631 24002 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:22.457641 24002 net.cpp:86] Creating Layer ip3
I0428 19:38:22.457648 24002 net.cpp:408] ip3 <- ip2
I0428 19:38:22.457655 24002 net.cpp:382] ip3 -> ip3
I0428 19:38:22.457782 24002 net.cpp:124] Setting up ip3
I0428 19:38:22.457790 24002 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:22.457794 24002 net.cpp:139] Memory required for data: 18686720
I0428 19:38:22.457803 24002 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:22.457811 24002 net.cpp:86] Creating Layer relu3
I0428 19:38:22.457818 24002 net.cpp:408] relu3 <- ip3
I0428 19:38:22.457823 24002 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:22.457962 24002 net.cpp:124] Setting up relu3
I0428 19:38:22.457970 24002 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:22.457974 24002 net.cpp:139] Memory required for data: 18689280
I0428 19:38:22.457979 24002 layer_factory.hpp:77] Creating layer loss
I0428 19:38:22.457988 24002 net.cpp:86] Creating Layer loss
I0428 19:38:22.457993 24002 net.cpp:408] loss <- ip3
I0428 19:38:22.457998 24002 net.cpp:408] loss <- label
I0428 19:38:22.458005 24002 net.cpp:382] loss -> loss
I0428 19:38:22.458026 24002 layer_factory.hpp:77] Creating layer loss
I0428 19:38:22.458257 24002 net.cpp:124] Setting up loss
I0428 19:38:22.458266 24002 net.cpp:131] Top shape: (1)
I0428 19:38:22.458271 24002 net.cpp:134]     with loss weight 1
I0428 19:38:22.458305 24002 net.cpp:139] Memory required for data: 18689284
I0428 19:38:22.458312 24002 net.cpp:200] loss needs backward computation.
I0428 19:38:22.458333 24002 net.cpp:200] relu3 needs backward computation.
I0428 19:38:22.458338 24002 net.cpp:200] ip3 needs backward computation.
I0428 19:38:22.458343 24002 net.cpp:200] relu2 needs backward computation.
I0428 19:38:22.458348 24002 net.cpp:200] ip2 needs backward computation.
I0428 19:38:22.458353 24002 net.cpp:200] relu1 needs backward computation.
I0428 19:38:22.458358 24002 net.cpp:200] ip1 needs backward computation.
I0428 19:38:22.458374 24002 net.cpp:200] pool0 needs backward computation.
I0428 19:38:22.458379 24002 net.cpp:200] conv0 needs backward computation.
I0428 19:38:22.458384 24002 net.cpp:202] mnist does not need backward computation.
I0428 19:38:22.458389 24002 net.cpp:244] This network produces output loss
I0428 19:38:22.458401 24002 net.cpp:257] Network initialization done.
I0428 19:38:22.458716 24002 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test272.prototxt
I0428 19:38:22.458750 24002 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:22.458834 24002 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:22.458942 24002 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:22.459033 24002 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:22.459050 24002 net.cpp:86] Creating Layer mnist
I0428 19:38:22.459059 24002 net.cpp:382] mnist -> data
I0428 19:38:22.459069 24002 net.cpp:382] mnist -> label
I0428 19:38:22.459177 24002 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:22.461230 24002 net.cpp:124] Setting up mnist
I0428 19:38:22.461244 24002 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:22.461252 24002 net.cpp:131] Top shape: 100 (100)
I0428 19:38:22.461257 24002 net.cpp:139] Memory required for data: 314000
I0428 19:38:22.461263 24002 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:22.461272 24002 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:22.461277 24002 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:22.461285 24002 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:22.461295 24002 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:22.461403 24002 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:22.461412 24002 net.cpp:131] Top shape: 100 (100)
I0428 19:38:22.461419 24002 net.cpp:131] Top shape: 100 (100)
I0428 19:38:22.461423 24002 net.cpp:139] Memory required for data: 314800
I0428 19:38:22.461441 24002 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:22.461454 24002 net.cpp:86] Creating Layer conv0
I0428 19:38:22.461472 24002 net.cpp:408] conv0 <- data
I0428 19:38:22.461479 24002 net.cpp:382] conv0 -> conv0
I0428 19:38:22.463018 24002 net.cpp:124] Setting up conv0
I0428 19:38:22.463033 24002 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:38:22.463039 24002 net.cpp:139] Memory required for data: 23354800
I0428 19:38:22.463066 24002 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:22.463076 24002 net.cpp:86] Creating Layer pool0
I0428 19:38:22.463083 24002 net.cpp:408] pool0 <- conv0
I0428 19:38:22.463090 24002 net.cpp:382] pool0 -> pool0
I0428 19:38:22.463130 24002 net.cpp:124] Setting up pool0
I0428 19:38:22.463138 24002 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:38:22.463143 24002 net.cpp:139] Memory required for data: 29114800
I0428 19:38:22.463148 24002 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:22.463158 24002 net.cpp:86] Creating Layer ip1
I0428 19:38:22.463163 24002 net.cpp:408] ip1 <- pool0
I0428 19:38:22.463171 24002 net.cpp:382] ip1 -> ip1
I0428 19:38:22.468370 24002 net.cpp:124] Setting up ip1
I0428 19:38:22.468384 24002 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:38:22.468389 24002 net.cpp:139] Memory required for data: 29134800
I0428 19:38:22.468415 24002 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:22.468425 24002 net.cpp:86] Creating Layer relu1
I0428 19:38:22.468443 24002 net.cpp:408] relu1 <- ip1
I0428 19:38:22.468451 24002 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:22.468614 24002 net.cpp:124] Setting up relu1
I0428 19:38:22.468623 24002 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:38:22.468628 24002 net.cpp:139] Memory required for data: 29154800
I0428 19:38:22.468632 24002 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:22.468641 24002 net.cpp:86] Creating Layer ip2
I0428 19:38:22.468646 24002 net.cpp:408] ip2 <- ip1
I0428 19:38:22.468653 24002 net.cpp:382] ip2 -> ip2
I0428 19:38:22.468761 24002 net.cpp:124] Setting up ip2
I0428 19:38:22.468770 24002 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:38:22.468775 24002 net.cpp:139] Memory required for data: 29174800
I0428 19:38:22.468786 24002 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:22.468796 24002 net.cpp:86] Creating Layer relu2
I0428 19:38:22.468803 24002 net.cpp:408] relu2 <- ip2
I0428 19:38:22.468832 24002 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:22.469574 24002 net.cpp:124] Setting up relu2
I0428 19:38:22.469604 24002 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:38:22.469609 24002 net.cpp:139] Memory required for data: 29194800
I0428 19:38:22.469614 24002 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:22.469624 24002 net.cpp:86] Creating Layer ip3
I0428 19:38:22.469630 24002 net.cpp:408] ip3 <- ip2
I0428 19:38:22.469653 24002 net.cpp:382] ip3 -> ip3
I0428 19:38:22.469761 24002 net.cpp:124] Setting up ip3
I0428 19:38:22.469771 24002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:22.469775 24002 net.cpp:139] Memory required for data: 29198800
I0428 19:38:22.469784 24002 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:22.469792 24002 net.cpp:86] Creating Layer relu3
I0428 19:38:22.469797 24002 net.cpp:408] relu3 <- ip3
I0428 19:38:22.469805 24002 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:22.469969 24002 net.cpp:124] Setting up relu3
I0428 19:38:22.469979 24002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:22.469983 24002 net.cpp:139] Memory required for data: 29202800
I0428 19:38:22.469988 24002 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:38:22.470005 24002 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:38:22.470010 24002 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:38:22.470017 24002 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:38:22.470026 24002 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:38:22.470062 24002 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:38:22.470070 24002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:22.470088 24002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:22.470093 24002 net.cpp:139] Memory required for data: 29210800
I0428 19:38:22.470098 24002 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:22.470109 24002 net.cpp:86] Creating Layer accuracy
I0428 19:38:22.470115 24002 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:38:22.470121 24002 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:22.470129 24002 net.cpp:382] accuracy -> accuracy
I0428 19:38:22.470139 24002 net.cpp:124] Setting up accuracy
I0428 19:38:22.470146 24002 net.cpp:131] Top shape: (1)
I0428 19:38:22.470151 24002 net.cpp:139] Memory required for data: 29210804
I0428 19:38:22.470155 24002 layer_factory.hpp:77] Creating layer loss
I0428 19:38:22.470162 24002 net.cpp:86] Creating Layer loss
I0428 19:38:22.470166 24002 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:38:22.470172 24002 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:22.470180 24002 net.cpp:382] loss -> loss
I0428 19:38:22.470188 24002 layer_factory.hpp:77] Creating layer loss
I0428 19:38:22.470444 24002 net.cpp:124] Setting up loss
I0428 19:38:22.470454 24002 net.cpp:131] Top shape: (1)
I0428 19:38:22.470460 24002 net.cpp:134]     with loss weight 1
I0428 19:38:22.470469 24002 net.cpp:139] Memory required for data: 29210808
I0428 19:38:22.470475 24002 net.cpp:200] loss needs backward computation.
I0428 19:38:22.470481 24002 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:22.470489 24002 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:38:22.470494 24002 net.cpp:200] relu3 needs backward computation.
I0428 19:38:22.470497 24002 net.cpp:200] ip3 needs backward computation.
I0428 19:38:22.470504 24002 net.cpp:200] relu2 needs backward computation.
I0428 19:38:22.470507 24002 net.cpp:200] ip2 needs backward computation.
I0428 19:38:22.470512 24002 net.cpp:200] relu1 needs backward computation.
I0428 19:38:22.470517 24002 net.cpp:200] ip1 needs backward computation.
I0428 19:38:22.470522 24002 net.cpp:200] pool0 needs backward computation.
I0428 19:38:22.470527 24002 net.cpp:200] conv0 needs backward computation.
I0428 19:38:22.470533 24002 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:22.470540 24002 net.cpp:202] mnist does not need backward computation.
I0428 19:38:22.470543 24002 net.cpp:244] This network produces output accuracy
I0428 19:38:22.470548 24002 net.cpp:244] This network produces output loss
I0428 19:38:22.470563 24002 net.cpp:257] Network initialization done.
I0428 19:38:22.470604 24002 solver.cpp:56] Solver scaffolding done.
I0428 19:38:22.470896 24002 caffe.cpp:248] Starting Optimization
I0428 19:38:22.470901 24002 solver.cpp:273] Solving LeNet
I0428 19:38:22.470906 24002 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:22.472698 24002 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:22.633988 24010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:22.638650 24002 solver.cpp:398]     Test net output #0: accuracy = 0.1196
I0428 19:38:22.638671 24002 solver.cpp:398]     Test net output #1: loss = 2.30294 (* 1 = 2.30294 loss)
I0428 19:38:22.643620 24002 solver.cpp:219] Iteration 0 (-5.22485e-31 iter/s, 0.17268s/100 iters), loss = 2.29385
I0428 19:38:22.643647 24002 solver.cpp:238]     Train net output #0: loss = 2.29385 (* 1 = 2.29385 loss)
I0428 19:38:22.643679 24002 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:22.882365 24002 solver.cpp:219] Iteration 100 (418.935 iter/s, 0.238701s/100 iters), loss = 1.14333
I0428 19:38:22.882396 24002 solver.cpp:238]     Train net output #0: loss = 1.14333 (* 1 = 1.14333 loss)
I0428 19:38:22.882407 24002 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:23.119263 24002 solver.cpp:219] Iteration 200 (422.205 iter/s, 0.236852s/100 iters), loss = 1.47718
I0428 19:38:23.119293 24002 solver.cpp:238]     Train net output #0: loss = 1.47718 (* 1 = 1.47718 loss)
I0428 19:38:23.119319 24002 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:23.356086 24002 solver.cpp:219] Iteration 300 (422.337 iter/s, 0.236778s/100 iters), loss = 0.944407
I0428 19:38:23.356129 24002 solver.cpp:238]     Train net output #0: loss = 0.944407 (* 1 = 0.944407 loss)
I0428 19:38:23.356155 24002 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:23.591454 24002 solver.cpp:219] Iteration 400 (424.969 iter/s, 0.235311s/100 iters), loss = 1.09081
I0428 19:38:23.591482 24002 solver.cpp:238]     Train net output #0: loss = 1.09081 (* 1 = 1.09081 loss)
I0428 19:38:23.591507 24002 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:23.826534 24002 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:23.986754 24010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:23.991547 24002 solver.cpp:398]     Test net output #0: accuracy = 0.7555
I0428 19:38:23.991587 24002 solver.cpp:398]     Test net output #1: loss = 0.854334 (* 1 = 0.854334 loss)
I0428 19:38:23.993885 24002 solver.cpp:219] Iteration 500 (248.521 iter/s, 0.40238s/100 iters), loss = 1.06024
I0428 19:38:23.993909 24002 solver.cpp:238]     Train net output #0: loss = 1.06024 (* 1 = 1.06024 loss)
I0428 19:38:23.993930 24002 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:24.235956 24002 solver.cpp:219] Iteration 600 (413.171 iter/s, 0.242031s/100 iters), loss = 0.643032
I0428 19:38:24.235987 24002 solver.cpp:238]     Train net output #0: loss = 0.643032 (* 1 = 0.643032 loss)
I0428 19:38:24.235998 24002 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:24.476171 24002 solver.cpp:219] Iteration 700 (416.377 iter/s, 0.240167s/100 iters), loss = 0.888877
I0428 19:38:24.476205 24002 solver.cpp:238]     Train net output #0: loss = 0.888877 (* 1 = 0.888877 loss)
I0428 19:38:24.476231 24002 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:24.714507 24002 solver.cpp:219] Iteration 800 (419.66 iter/s, 0.238288s/100 iters), loss = 0.792579
I0428 19:38:24.714537 24002 solver.cpp:238]     Train net output #0: loss = 0.792579 (* 1 = 0.792579 loss)
I0428 19:38:24.714563 24002 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:38:24.952538 24002 solver.cpp:219] Iteration 900 (420.193 iter/s, 0.237986s/100 iters), loss = 0.7988
I0428 19:38:24.952569 24002 solver.cpp:238]     Train net output #0: loss = 0.7988 (* 1 = 0.7988 loss)
I0428 19:38:24.952580 24002 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:38:25.031641 24008 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:25.187635 24002 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:38:25.199656 24002 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:38:25.206006 24002 solver.cpp:311] Iteration 1000, loss = 0.756428
I0428 19:38:25.206027 24002 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:38:25.365059 24010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:25.369638 24002 solver.cpp:398]     Test net output #0: accuracy = 0.7758
I0428 19:38:25.369663 24002 solver.cpp:398]     Test net output #1: loss = 0.774133 (* 1 = 0.774133 loss)
I0428 19:38:25.369688 24002 solver.cpp:316] Optimization Done.
I0428 19:38:25.369693 24002 caffe.cpp:259] Optimization Done.
