I0428 19:42:59.515588 25236 caffe.cpp:218] Using GPUs 0
I0428 19:42:59.547358 25236 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:00.009701 25236 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test409.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:00.009869 25236 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test409.prototxt
I0428 19:43:00.010231 25236 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:00.010251 25236 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:00.010337 25236 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:00.010426 25236 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:00.010534 25236 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:00.010560 25236 net.cpp:86] Creating Layer mnist
I0428 19:43:00.010568 25236 net.cpp:382] mnist -> data
I0428 19:43:00.010594 25236 net.cpp:382] mnist -> label
I0428 19:43:00.011824 25236 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:00.014071 25236 net.cpp:124] Setting up mnist
I0428 19:43:00.014103 25236 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:00.014113 25236 net.cpp:131] Top shape: 64 (64)
I0428 19:43:00.014118 25236 net.cpp:139] Memory required for data: 200960
I0428 19:43:00.014127 25236 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:00.014147 25236 net.cpp:86] Creating Layer conv0
I0428 19:43:00.014168 25236 net.cpp:408] conv0 <- data
I0428 19:43:00.014183 25236 net.cpp:382] conv0 -> conv0
I0428 19:43:00.242023 25236 net.cpp:124] Setting up conv0
I0428 19:43:00.242050 25236 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:00.242055 25236 net.cpp:139] Memory required for data: 495872
I0428 19:43:00.242076 25236 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:00.242092 25236 net.cpp:86] Creating Layer pool0
I0428 19:43:00.242103 25236 net.cpp:408] pool0 <- conv0
I0428 19:43:00.242112 25236 net.cpp:382] pool0 -> pool0
I0428 19:43:00.242166 25236 net.cpp:124] Setting up pool0
I0428 19:43:00.242174 25236 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:00.242178 25236 net.cpp:139] Memory required for data: 569600
I0428 19:43:00.242183 25236 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:00.242198 25236 net.cpp:86] Creating Layer conv1
I0428 19:43:00.242204 25236 net.cpp:408] conv1 <- pool0
I0428 19:43:00.242215 25236 net.cpp:382] conv1 -> conv1
I0428 19:43:00.244925 25236 net.cpp:124] Setting up conv1
I0428 19:43:00.244941 25236 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:00.244947 25236 net.cpp:139] Memory required for data: 979200
I0428 19:43:00.244976 25236 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:00.244988 25236 net.cpp:86] Creating Layer pool1
I0428 19:43:00.244995 25236 net.cpp:408] pool1 <- conv1
I0428 19:43:00.245003 25236 net.cpp:382] pool1 -> pool1
I0428 19:43:00.245046 25236 net.cpp:124] Setting up pool1
I0428 19:43:00.245055 25236 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:00.245060 25236 net.cpp:139] Memory required for data: 1081600
I0428 19:43:00.245065 25236 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:00.245075 25236 net.cpp:86] Creating Layer ip1
I0428 19:43:00.245092 25236 net.cpp:408] ip1 <- pool1
I0428 19:43:00.245100 25236 net.cpp:382] ip1 -> ip1
I0428 19:43:00.245282 25236 net.cpp:124] Setting up ip1
I0428 19:43:00.245292 25236 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:00.245297 25236 net.cpp:139] Memory required for data: 1084160
I0428 19:43:00.245321 25236 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:00.245335 25236 net.cpp:86] Creating Layer relu1
I0428 19:43:00.245345 25236 net.cpp:408] relu1 <- ip1
I0428 19:43:00.245353 25236 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:00.245535 25236 net.cpp:124] Setting up relu1
I0428 19:43:00.245546 25236 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:00.245551 25236 net.cpp:139] Memory required for data: 1086720
I0428 19:43:00.245558 25236 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:00.245568 25236 net.cpp:86] Creating Layer ip2
I0428 19:43:00.245574 25236 net.cpp:408] ip2 <- ip1
I0428 19:43:00.245597 25236 net.cpp:382] ip2 -> ip2
I0428 19:43:00.245753 25236 net.cpp:124] Setting up ip2
I0428 19:43:00.245760 25236 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:00.245765 25236 net.cpp:139] Memory required for data: 1099520
I0428 19:43:00.245774 25236 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:00.245784 25236 net.cpp:86] Creating Layer relu2
I0428 19:43:00.245789 25236 net.cpp:408] relu2 <- ip2
I0428 19:43:00.245795 25236 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:00.246574 25236 net.cpp:124] Setting up relu2
I0428 19:43:00.246587 25236 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:00.246592 25236 net.cpp:139] Memory required for data: 1112320
I0428 19:43:00.246598 25236 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:00.246608 25236 net.cpp:86] Creating Layer ip3
I0428 19:43:00.246613 25236 net.cpp:408] ip3 <- ip2
I0428 19:43:00.246623 25236 net.cpp:382] ip3 -> ip3
I0428 19:43:00.246742 25236 net.cpp:124] Setting up ip3
I0428 19:43:00.246752 25236 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:00.246757 25236 net.cpp:139] Memory required for data: 1114880
I0428 19:43:00.246769 25236 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:00.246779 25236 net.cpp:86] Creating Layer relu3
I0428 19:43:00.246785 25236 net.cpp:408] relu3 <- ip3
I0428 19:43:00.246793 25236 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:00.246955 25236 net.cpp:124] Setting up relu3
I0428 19:43:00.246965 25236 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:00.246970 25236 net.cpp:139] Memory required for data: 1117440
I0428 19:43:00.246975 25236 layer_factory.hpp:77] Creating layer loss
I0428 19:43:00.246984 25236 net.cpp:86] Creating Layer loss
I0428 19:43:00.246989 25236 net.cpp:408] loss <- ip3
I0428 19:43:00.246996 25236 net.cpp:408] loss <- label
I0428 19:43:00.247004 25236 net.cpp:382] loss -> loss
I0428 19:43:00.247036 25236 layer_factory.hpp:77] Creating layer loss
I0428 19:43:00.247251 25236 net.cpp:124] Setting up loss
I0428 19:43:00.247261 25236 net.cpp:131] Top shape: (1)
I0428 19:43:00.247282 25236 net.cpp:134]     with loss weight 1
I0428 19:43:00.247300 25236 net.cpp:139] Memory required for data: 1117444
I0428 19:43:00.247306 25236 net.cpp:200] loss needs backward computation.
I0428 19:43:00.247313 25236 net.cpp:200] relu3 needs backward computation.
I0428 19:43:00.247318 25236 net.cpp:200] ip3 needs backward computation.
I0428 19:43:00.247323 25236 net.cpp:200] relu2 needs backward computation.
I0428 19:43:00.247328 25236 net.cpp:200] ip2 needs backward computation.
I0428 19:43:00.247333 25236 net.cpp:200] relu1 needs backward computation.
I0428 19:43:00.247336 25236 net.cpp:200] ip1 needs backward computation.
I0428 19:43:00.247341 25236 net.cpp:200] pool1 needs backward computation.
I0428 19:43:00.247347 25236 net.cpp:200] conv1 needs backward computation.
I0428 19:43:00.247352 25236 net.cpp:200] pool0 needs backward computation.
I0428 19:43:00.247371 25236 net.cpp:200] conv0 needs backward computation.
I0428 19:43:00.247377 25236 net.cpp:202] mnist does not need backward computation.
I0428 19:43:00.247382 25236 net.cpp:244] This network produces output loss
I0428 19:43:00.247398 25236 net.cpp:257] Network initialization done.
I0428 19:43:00.247745 25236 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test409.prototxt
I0428 19:43:00.247776 25236 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:00.247867 25236 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:00.247989 25236 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:00.248045 25236 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:00.248065 25236 net.cpp:86] Creating Layer mnist
I0428 19:43:00.248073 25236 net.cpp:382] mnist -> data
I0428 19:43:00.248085 25236 net.cpp:382] mnist -> label
I0428 19:43:00.248198 25236 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:00.250391 25236 net.cpp:124] Setting up mnist
I0428 19:43:00.250406 25236 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:00.250416 25236 net.cpp:131] Top shape: 100 (100)
I0428 19:43:00.250421 25236 net.cpp:139] Memory required for data: 314000
I0428 19:43:00.250427 25236 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:00.250437 25236 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:00.250442 25236 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:00.250450 25236 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:00.250461 25236 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:00.250555 25236 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:00.250563 25236 net.cpp:131] Top shape: 100 (100)
I0428 19:43:00.250569 25236 net.cpp:131] Top shape: 100 (100)
I0428 19:43:00.250576 25236 net.cpp:139] Memory required for data: 314800
I0428 19:43:00.250581 25236 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:00.250593 25236 net.cpp:86] Creating Layer conv0
I0428 19:43:00.250600 25236 net.cpp:408] conv0 <- data
I0428 19:43:00.250609 25236 net.cpp:382] conv0 -> conv0
I0428 19:43:00.252068 25236 net.cpp:124] Setting up conv0
I0428 19:43:00.252082 25236 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:00.252102 25236 net.cpp:139] Memory required for data: 775600
I0428 19:43:00.252116 25236 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:00.252126 25236 net.cpp:86] Creating Layer pool0
I0428 19:43:00.252133 25236 net.cpp:408] pool0 <- conv0
I0428 19:43:00.252141 25236 net.cpp:382] pool0 -> pool0
I0428 19:43:00.252182 25236 net.cpp:124] Setting up pool0
I0428 19:43:00.252189 25236 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:00.252194 25236 net.cpp:139] Memory required for data: 890800
I0428 19:43:00.252199 25236 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:00.252213 25236 net.cpp:86] Creating Layer conv1
I0428 19:43:00.252218 25236 net.cpp:408] conv1 <- pool0
I0428 19:43:00.252228 25236 net.cpp:382] conv1 -> conv1
I0428 19:43:00.253882 25236 net.cpp:124] Setting up conv1
I0428 19:43:00.253898 25236 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:00.253904 25236 net.cpp:139] Memory required for data: 1530800
I0428 19:43:00.253917 25236 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:00.253927 25236 net.cpp:86] Creating Layer pool1
I0428 19:43:00.253933 25236 net.cpp:408] pool1 <- conv1
I0428 19:43:00.253942 25236 net.cpp:382] pool1 -> pool1
I0428 19:43:00.253985 25236 net.cpp:124] Setting up pool1
I0428 19:43:00.253994 25236 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:00.253999 25236 net.cpp:139] Memory required for data: 1690800
I0428 19:43:00.254005 25236 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:00.254014 25236 net.cpp:86] Creating Layer ip1
I0428 19:43:00.254020 25236 net.cpp:408] ip1 <- pool1
I0428 19:43:00.254029 25236 net.cpp:382] ip1 -> ip1
I0428 19:43:00.254153 25236 net.cpp:124] Setting up ip1
I0428 19:43:00.254163 25236 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:00.254179 25236 net.cpp:139] Memory required for data: 1694800
I0428 19:43:00.254191 25236 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:00.254200 25236 net.cpp:86] Creating Layer relu1
I0428 19:43:00.254206 25236 net.cpp:408] relu1 <- ip1
I0428 19:43:00.254214 25236 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:00.254371 25236 net.cpp:124] Setting up relu1
I0428 19:43:00.254381 25236 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:00.254386 25236 net.cpp:139] Memory required for data: 1698800
I0428 19:43:00.254391 25236 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:00.254402 25236 net.cpp:86] Creating Layer ip2
I0428 19:43:00.254410 25236 net.cpp:408] ip2 <- ip1
I0428 19:43:00.254417 25236 net.cpp:382] ip2 -> ip2
I0428 19:43:00.254544 25236 net.cpp:124] Setting up ip2
I0428 19:43:00.254552 25236 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:00.254557 25236 net.cpp:139] Memory required for data: 1718800
I0428 19:43:00.254577 25236 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:00.254586 25236 net.cpp:86] Creating Layer relu2
I0428 19:43:00.254592 25236 net.cpp:408] relu2 <- ip2
I0428 19:43:00.254600 25236 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:00.254848 25236 net.cpp:124] Setting up relu2
I0428 19:43:00.254858 25236 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:00.254863 25236 net.cpp:139] Memory required for data: 1738800
I0428 19:43:00.254868 25236 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:00.254876 25236 net.cpp:86] Creating Layer ip3
I0428 19:43:00.254883 25236 net.cpp:408] ip3 <- ip2
I0428 19:43:00.254891 25236 net.cpp:382] ip3 -> ip3
I0428 19:43:00.255000 25236 net.cpp:124] Setting up ip3
I0428 19:43:00.255010 25236 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:00.255015 25236 net.cpp:139] Memory required for data: 1742800
I0428 19:43:00.255029 25236 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:00.255038 25236 net.cpp:86] Creating Layer relu3
I0428 19:43:00.255043 25236 net.cpp:408] relu3 <- ip3
I0428 19:43:00.255050 25236 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:00.255890 25236 net.cpp:124] Setting up relu3
I0428 19:43:00.255903 25236 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:00.255908 25236 net.cpp:139] Memory required for data: 1746800
I0428 19:43:00.255913 25236 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:00.255921 25236 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:00.255928 25236 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:00.255934 25236 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:00.255944 25236 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:00.255985 25236 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:00.255993 25236 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:00.256000 25236 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:00.256005 25236 net.cpp:139] Memory required for data: 1754800
I0428 19:43:00.256009 25236 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:00.256018 25236 net.cpp:86] Creating Layer accuracy
I0428 19:43:00.256024 25236 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:00.256031 25236 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:00.256038 25236 net.cpp:382] accuracy -> accuracy
I0428 19:43:00.256048 25236 net.cpp:124] Setting up accuracy
I0428 19:43:00.256057 25236 net.cpp:131] Top shape: (1)
I0428 19:43:00.256062 25236 net.cpp:139] Memory required for data: 1754804
I0428 19:43:00.256067 25236 layer_factory.hpp:77] Creating layer loss
I0428 19:43:00.256073 25236 net.cpp:86] Creating Layer loss
I0428 19:43:00.256079 25236 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:00.256085 25236 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:00.256093 25236 net.cpp:382] loss -> loss
I0428 19:43:00.256103 25236 layer_factory.hpp:77] Creating layer loss
I0428 19:43:00.256366 25236 net.cpp:124] Setting up loss
I0428 19:43:00.256376 25236 net.cpp:131] Top shape: (1)
I0428 19:43:00.256382 25236 net.cpp:134]     with loss weight 1
I0428 19:43:00.256392 25236 net.cpp:139] Memory required for data: 1754808
I0428 19:43:00.256410 25236 net.cpp:200] loss needs backward computation.
I0428 19:43:00.256417 25236 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:00.256424 25236 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:00.256429 25236 net.cpp:200] relu3 needs backward computation.
I0428 19:43:00.256435 25236 net.cpp:200] ip3 needs backward computation.
I0428 19:43:00.256440 25236 net.cpp:200] relu2 needs backward computation.
I0428 19:43:00.256445 25236 net.cpp:200] ip2 needs backward computation.
I0428 19:43:00.256450 25236 net.cpp:200] relu1 needs backward computation.
I0428 19:43:00.256455 25236 net.cpp:200] ip1 needs backward computation.
I0428 19:43:00.256461 25236 net.cpp:200] pool1 needs backward computation.
I0428 19:43:00.256466 25236 net.cpp:200] conv1 needs backward computation.
I0428 19:43:00.256471 25236 net.cpp:200] pool0 needs backward computation.
I0428 19:43:00.256477 25236 net.cpp:200] conv0 needs backward computation.
I0428 19:43:00.256484 25236 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:00.256491 25236 net.cpp:202] mnist does not need backward computation.
I0428 19:43:00.256496 25236 net.cpp:244] This network produces output accuracy
I0428 19:43:00.256502 25236 net.cpp:244] This network produces output loss
I0428 19:43:00.256518 25236 net.cpp:257] Network initialization done.
I0428 19:43:00.256579 25236 solver.cpp:56] Solver scaffolding done.
I0428 19:43:00.256953 25236 caffe.cpp:248] Starting Optimization
I0428 19:43:00.256976 25236 solver.cpp:273] Solving LeNet
I0428 19:43:00.256981 25236 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:00.257824 25236 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:00.261095 25236 blocking_queue.cpp:49] Waiting for data
I0428 19:43:00.335561 25243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:00.336009 25236 solver.cpp:398]     Test net output #0: accuracy = 0.0898
I0428 19:43:00.336031 25236 solver.cpp:398]     Test net output #1: loss = 2.34461 (* 1 = 2.34461 loss)
I0428 19:43:00.337252 25236 solver.cpp:219] Iteration 0 (-1.05523e-30 iter/s, 0.0802335s/100 iters), loss = 2.36561
I0428 19:43:00.337296 25236 solver.cpp:238]     Train net output #0: loss = 2.36561 (* 1 = 2.36561 loss)
I0428 19:43:00.337314 25236 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:00.431504 25236 solver.cpp:219] Iteration 100 (1061.53 iter/s, 0.0942034s/100 iters), loss = 1.35065
I0428 19:43:00.431535 25236 solver.cpp:238]     Train net output #0: loss = 1.35065 (* 1 = 1.35065 loss)
I0428 19:43:00.431546 25236 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:00.516615 25236 solver.cpp:219] Iteration 200 (1175.45 iter/s, 0.0850739s/100 iters), loss = 1.3364
I0428 19:43:00.516644 25236 solver.cpp:238]     Train net output #0: loss = 1.3364 (* 1 = 1.3364 loss)
I0428 19:43:00.516670 25236 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:00.599704 25236 solver.cpp:219] Iteration 300 (1204.07 iter/s, 0.0830515s/100 iters), loss = 1.10113
I0428 19:43:00.599750 25236 solver.cpp:238]     Train net output #0: loss = 1.10113 (* 1 = 1.10113 loss)
I0428 19:43:00.599776 25236 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:00.689757 25236 solver.cpp:219] Iteration 400 (1111.07 iter/s, 0.0900035s/100 iters), loss = 0.967683
I0428 19:43:00.689791 25236 solver.cpp:238]     Train net output #0: loss = 0.967683 (* 1 = 0.967683 loss)
I0428 19:43:00.689803 25236 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:00.770903 25236 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:00.845983 25243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:00.846427 25236 solver.cpp:398]     Test net output #0: accuracy = 0.7595
I0428 19:43:00.846449 25236 solver.cpp:398]     Test net output #1: loss = 0.836343 (* 1 = 0.836343 loss)
I0428 19:43:00.847324 25236 solver.cpp:219] Iteration 500 (634.825 iter/s, 0.157524s/100 iters), loss = 0.664513
I0428 19:43:00.847353 25236 solver.cpp:238]     Train net output #0: loss = 0.664513 (* 1 = 0.664513 loss)
I0428 19:43:00.847383 25236 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:00.937839 25236 solver.cpp:219] Iteration 600 (1105.25 iter/s, 0.0904776s/100 iters), loss = 0.792028
I0428 19:43:00.937867 25236 solver.cpp:238]     Train net output #0: loss = 0.792028 (* 1 = 0.792028 loss)
I0428 19:43:00.937893 25236 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:01.023277 25236 solver.cpp:219] Iteration 700 (1170.91 iter/s, 0.0854037s/100 iters), loss = 0.978
I0428 19:43:01.023305 25236 solver.cpp:238]     Train net output #0: loss = 0.978 (* 1 = 0.978 loss)
I0428 19:43:01.023331 25236 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:01.105761 25236 solver.cpp:219] Iteration 800 (1212.88 iter/s, 0.0824484s/100 iters), loss = 0.862342
I0428 19:43:01.105788 25236 solver.cpp:238]     Train net output #0: loss = 0.862342 (* 1 = 0.862342 loss)
I0428 19:43:01.105814 25236 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:01.187037 25236 solver.cpp:219] Iteration 900 (1230.89 iter/s, 0.0812423s/100 iters), loss = 0.952145
I0428 19:43:01.187064 25236 solver.cpp:238]     Train net output #0: loss = 0.952145 (* 1 = 0.952145 loss)
I0428 19:43:01.187090 25236 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:01.214395 25242 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:01.268316 25236 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:01.269170 25236 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:01.269656 25236 solver.cpp:311] Iteration 1000, loss = 0.975229
I0428 19:43:01.269673 25236 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:01.344480 25243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:01.344931 25236 solver.cpp:398]     Test net output #0: accuracy = 0.7708
I0428 19:43:01.344952 25236 solver.cpp:398]     Test net output #1: loss = 0.790896 (* 1 = 0.790896 loss)
I0428 19:43:01.344961 25236 solver.cpp:316] Optimization Done.
I0428 19:43:01.344967 25236 caffe.cpp:259] Optimization Done.
