I0428 20:18:45.002908  1231 caffe.cpp:218] Using GPUs 0
I0428 20:18:45.032686  1231 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:45.534721  1231 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1326.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:45.534862  1231 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1326.prototxt
I0428 20:18:45.535194  1231 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:45.535210  1231 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:45.535290  1231 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:18:45.535358  1231 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:45.535454  1231 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:45.535476  1231 net.cpp:86] Creating Layer mnist
I0428 20:18:45.535483  1231 net.cpp:382] mnist -> data
I0428 20:18:45.535506  1231 net.cpp:382] mnist -> label
I0428 20:18:45.536561  1231 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:45.538965  1231 net.cpp:124] Setting up mnist
I0428 20:18:45.538992  1231 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:45.539000  1231 net.cpp:131] Top shape: 64 (64)
I0428 20:18:45.539002  1231 net.cpp:139] Memory required for data: 200960
I0428 20:18:45.539010  1231 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:45.539026  1231 net.cpp:86] Creating Layer conv0
I0428 20:18:45.539032  1231 net.cpp:408] conv0 <- data
I0428 20:18:45.539043  1231 net.cpp:382] conv0 -> conv0
I0428 20:18:45.826850  1231 net.cpp:124] Setting up conv0
I0428 20:18:45.826884  1231 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:45.826889  1231 net.cpp:139] Memory required for data: 7573760
I0428 20:18:45.826907  1231 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:45.826921  1231 net.cpp:86] Creating Layer pool0
I0428 20:18:45.826926  1231 net.cpp:408] pool0 <- conv0
I0428 20:18:45.826932  1231 net.cpp:382] pool0 -> pool0
I0428 20:18:45.826989  1231 net.cpp:124] Setting up pool0
I0428 20:18:45.826997  1231 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:45.827021  1231 net.cpp:139] Memory required for data: 9416960
I0428 20:18:45.827025  1231 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:45.827039  1231 net.cpp:86] Creating Layer conv1
I0428 20:18:45.827044  1231 net.cpp:408] conv1 <- pool0
I0428 20:18:45.827049  1231 net.cpp:382] conv1 -> conv1
I0428 20:18:45.829404  1231 net.cpp:124] Setting up conv1
I0428 20:18:45.829422  1231 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:18:45.829427  1231 net.cpp:139] Memory required for data: 9826560
I0428 20:18:45.829437  1231 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:45.829447  1231 net.cpp:86] Creating Layer pool1
I0428 20:18:45.829452  1231 net.cpp:408] pool1 <- conv1
I0428 20:18:45.829457  1231 net.cpp:382] pool1 -> pool1
I0428 20:18:45.829501  1231 net.cpp:124] Setting up pool1
I0428 20:18:45.829507  1231 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:18:45.829511  1231 net.cpp:139] Memory required for data: 9928960
I0428 20:18:45.829514  1231 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:45.829522  1231 net.cpp:86] Creating Layer ip1
I0428 20:18:45.829526  1231 net.cpp:408] ip1 <- pool1
I0428 20:18:45.829532  1231 net.cpp:382] ip1 -> ip1
I0428 20:18:45.829674  1231 net.cpp:124] Setting up ip1
I0428 20:18:45.829681  1231 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:45.829685  1231 net.cpp:139] Memory required for data: 9931520
I0428 20:18:45.829694  1231 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:45.829700  1231 net.cpp:86] Creating Layer relu1
I0428 20:18:45.829704  1231 net.cpp:408] relu1 <- ip1
I0428 20:18:45.829710  1231 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:45.829908  1231 net.cpp:124] Setting up relu1
I0428 20:18:45.829918  1231 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:45.829922  1231 net.cpp:139] Memory required for data: 9934080
I0428 20:18:45.829926  1231 layer_factory.hpp:77] Creating layer loss
I0428 20:18:45.829932  1231 net.cpp:86] Creating Layer loss
I0428 20:18:45.829936  1231 net.cpp:408] loss <- ip1
I0428 20:18:45.829941  1231 net.cpp:408] loss <- label
I0428 20:18:45.829947  1231 net.cpp:382] loss -> loss
I0428 20:18:45.829963  1231 layer_factory.hpp:77] Creating layer loss
I0428 20:18:45.830898  1231 net.cpp:124] Setting up loss
I0428 20:18:45.830912  1231 net.cpp:131] Top shape: (1)
I0428 20:18:45.830916  1231 net.cpp:134]     with loss weight 1
I0428 20:18:45.830934  1231 net.cpp:139] Memory required for data: 9934084
I0428 20:18:45.830938  1231 net.cpp:200] loss needs backward computation.
I0428 20:18:45.830942  1231 net.cpp:200] relu1 needs backward computation.
I0428 20:18:45.830946  1231 net.cpp:200] ip1 needs backward computation.
I0428 20:18:45.830950  1231 net.cpp:200] pool1 needs backward computation.
I0428 20:18:45.830953  1231 net.cpp:200] conv1 needs backward computation.
I0428 20:18:45.830956  1231 net.cpp:200] pool0 needs backward computation.
I0428 20:18:45.830960  1231 net.cpp:200] conv0 needs backward computation.
I0428 20:18:45.830965  1231 net.cpp:202] mnist does not need backward computation.
I0428 20:18:45.830967  1231 net.cpp:244] This network produces output loss
I0428 20:18:45.830978  1231 net.cpp:257] Network initialization done.
I0428 20:18:45.831284  1231 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1326.prototxt
I0428 20:18:45.831312  1231 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:45.831401  1231 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:18:45.831490  1231 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:45.831542  1231 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:45.831557  1231 net.cpp:86] Creating Layer mnist
I0428 20:18:45.831564  1231 net.cpp:382] mnist -> data
I0428 20:18:45.831573  1231 net.cpp:382] mnist -> label
I0428 20:18:45.831676  1231 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:45.833889  1231 net.cpp:124] Setting up mnist
I0428 20:18:45.833904  1231 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:45.833910  1231 net.cpp:131] Top shape: 100 (100)
I0428 20:18:45.833914  1231 net.cpp:139] Memory required for data: 314000
I0428 20:18:45.833917  1231 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:45.833925  1231 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:45.833930  1231 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:45.833936  1231 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:45.833945  1231 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:45.833995  1231 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:45.834002  1231 net.cpp:131] Top shape: 100 (100)
I0428 20:18:45.834007  1231 net.cpp:131] Top shape: 100 (100)
I0428 20:18:45.834009  1231 net.cpp:139] Memory required for data: 314800
I0428 20:18:45.834013  1231 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:45.834024  1231 net.cpp:86] Creating Layer conv0
I0428 20:18:45.834028  1231 net.cpp:408] conv0 <- data
I0428 20:18:45.834034  1231 net.cpp:382] conv0 -> conv0
I0428 20:18:45.835168  1231 net.cpp:124] Setting up conv0
I0428 20:18:45.835183  1231 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:45.835187  1231 net.cpp:139] Memory required for data: 11834800
I0428 20:18:45.835197  1231 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:45.835206  1231 net.cpp:86] Creating Layer pool0
I0428 20:18:45.835211  1231 net.cpp:408] pool0 <- conv0
I0428 20:18:45.835216  1231 net.cpp:382] pool0 -> pool0
I0428 20:18:45.835261  1231 net.cpp:124] Setting up pool0
I0428 20:18:45.835269  1231 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:45.835273  1231 net.cpp:139] Memory required for data: 14714800
I0428 20:18:45.835276  1231 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:45.835288  1231 net.cpp:86] Creating Layer conv1
I0428 20:18:45.835290  1231 net.cpp:408] conv1 <- pool0
I0428 20:18:45.835297  1231 net.cpp:382] conv1 -> conv1
I0428 20:18:45.837254  1231 net.cpp:124] Setting up conv1
I0428 20:18:45.837270  1231 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:18:45.837275  1231 net.cpp:139] Memory required for data: 15354800
I0428 20:18:45.837285  1231 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:45.837294  1231 net.cpp:86] Creating Layer pool1
I0428 20:18:45.837311  1231 net.cpp:408] pool1 <- conv1
I0428 20:18:45.837318  1231 net.cpp:382] pool1 -> pool1
I0428 20:18:45.837364  1231 net.cpp:124] Setting up pool1
I0428 20:18:45.837370  1231 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:18:45.837374  1231 net.cpp:139] Memory required for data: 15514800
I0428 20:18:45.837386  1231 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:45.837395  1231 net.cpp:86] Creating Layer ip1
I0428 20:18:45.837399  1231 net.cpp:408] ip1 <- pool1
I0428 20:18:45.837405  1231 net.cpp:382] ip1 -> ip1
I0428 20:18:45.837550  1231 net.cpp:124] Setting up ip1
I0428 20:18:45.837560  1231 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:45.837563  1231 net.cpp:139] Memory required for data: 15518800
I0428 20:18:45.837573  1231 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:45.837580  1231 net.cpp:86] Creating Layer relu1
I0428 20:18:45.837584  1231 net.cpp:408] relu1 <- ip1
I0428 20:18:45.837589  1231 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:45.838531  1231 net.cpp:124] Setting up relu1
I0428 20:18:45.838546  1231 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:45.838551  1231 net.cpp:139] Memory required for data: 15522800
I0428 20:18:45.838554  1231 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:18:45.838563  1231 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:18:45.838567  1231 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:18:45.838573  1231 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:18:45.838580  1231 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:18:45.838627  1231 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:18:45.838635  1231 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:45.838640  1231 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:45.838644  1231 net.cpp:139] Memory required for data: 15530800
I0428 20:18:45.838649  1231 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:45.838654  1231 net.cpp:86] Creating Layer accuracy
I0428 20:18:45.838659  1231 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:18:45.838662  1231 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:45.838670  1231 net.cpp:382] accuracy -> accuracy
I0428 20:18:45.838677  1231 net.cpp:124] Setting up accuracy
I0428 20:18:45.838681  1231 net.cpp:131] Top shape: (1)
I0428 20:18:45.838685  1231 net.cpp:139] Memory required for data: 15530804
I0428 20:18:45.838690  1231 layer_factory.hpp:77] Creating layer loss
I0428 20:18:45.838695  1231 net.cpp:86] Creating Layer loss
I0428 20:18:45.838698  1231 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:18:45.838702  1231 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:45.838709  1231 net.cpp:382] loss -> loss
I0428 20:18:45.838716  1231 layer_factory.hpp:77] Creating layer loss
I0428 20:18:45.839000  1231 net.cpp:124] Setting up loss
I0428 20:18:45.839013  1231 net.cpp:131] Top shape: (1)
I0428 20:18:45.839017  1231 net.cpp:134]     with loss weight 1
I0428 20:18:45.839025  1231 net.cpp:139] Memory required for data: 15530808
I0428 20:18:45.839028  1231 net.cpp:200] loss needs backward computation.
I0428 20:18:45.839033  1231 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:45.839037  1231 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:18:45.839041  1231 net.cpp:200] relu1 needs backward computation.
I0428 20:18:45.839045  1231 net.cpp:200] ip1 needs backward computation.
I0428 20:18:45.839048  1231 net.cpp:200] pool1 needs backward computation.
I0428 20:18:45.839052  1231 net.cpp:200] conv1 needs backward computation.
I0428 20:18:45.839056  1231 net.cpp:200] pool0 needs backward computation.
I0428 20:18:45.839059  1231 net.cpp:200] conv0 needs backward computation.
I0428 20:18:45.839063  1231 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:45.839067  1231 net.cpp:202] mnist does not need backward computation.
I0428 20:18:45.839071  1231 net.cpp:244] This network produces output accuracy
I0428 20:18:45.839076  1231 net.cpp:244] This network produces output loss
I0428 20:18:45.839099  1231 net.cpp:257] Network initialization done.
I0428 20:18:45.839139  1231 solver.cpp:56] Solver scaffolding done.
I0428 20:18:45.839391  1231 caffe.cpp:248] Starting Optimization
I0428 20:18:45.839398  1231 solver.cpp:273] Solving LeNet
I0428 20:18:45.839402  1231 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:45.839645  1231 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:45.846637  1231 blocking_queue.cpp:49] Waiting for data
I0428 20:18:45.914614  1238 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:45.915539  1231 solver.cpp:398]     Test net output #0: accuracy = 0.0984
I0428 20:18:45.915566  1231 solver.cpp:398]     Test net output #1: loss = 2.30443 (* 1 = 2.30443 loss)
I0428 20:18:45.920132  1231 solver.cpp:219] Iteration 0 (0 iter/s, 0.0806984s/100 iters), loss = 2.29862
I0428 20:18:45.920161  1231 solver.cpp:238]     Train net output #0: loss = 2.29862 (* 1 = 2.29862 loss)
I0428 20:18:45.920176  1231 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:46.044842  1231 solver.cpp:219] Iteration 100 (802.157 iter/s, 0.124664s/100 iters), loss = 0.776778
I0428 20:18:46.044875  1231 solver.cpp:238]     Train net output #0: loss = 0.776778 (* 1 = 0.776778 loss)
I0428 20:18:46.044883  1231 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:46.175979  1231 solver.cpp:219] Iteration 200 (762.802 iter/s, 0.131096s/100 iters), loss = 1.21853
I0428 20:18:46.176020  1231 solver.cpp:238]     Train net output #0: loss = 1.21853 (* 1 = 1.21853 loss)
I0428 20:18:46.176026  1231 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:46.307204  1231 solver.cpp:219] Iteration 300 (762.266 iter/s, 0.131188s/100 iters), loss = 0.454585
I0428 20:18:46.307243  1231 solver.cpp:238]     Train net output #0: loss = 0.454585 (* 1 = 0.454585 loss)
I0428 20:18:46.307250  1231 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:46.439038  1231 solver.cpp:219] Iteration 400 (758.736 iter/s, 0.131798s/100 iters), loss = 0.275558
I0428 20:18:46.439077  1231 solver.cpp:238]     Train net output #0: loss = 0.275558 (* 1 = 0.275558 loss)
I0428 20:18:46.439083  1231 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:46.568598  1231 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:46.644785  1238 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:46.645557  1231 solver.cpp:398]     Test net output #0: accuracy = 0.9623
I0428 20:18:46.645578  1231 solver.cpp:398]     Test net output #1: loss = 0.1248 (* 1 = 0.1248 loss)
I0428 20:18:46.646826  1231 solver.cpp:219] Iteration 500 (481.352 iter/s, 0.207748s/100 iters), loss = 0.137323
I0428 20:18:46.646875  1231 solver.cpp:238]     Train net output #0: loss = 0.137323 (* 1 = 0.137323 loss)
I0428 20:18:46.646885  1231 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:46.776155  1231 solver.cpp:219] Iteration 600 (773.659 iter/s, 0.129256s/100 iters), loss = 0.0797007
I0428 20:18:46.776181  1231 solver.cpp:238]     Train net output #0: loss = 0.0797008 (* 1 = 0.0797008 loss)
I0428 20:18:46.776187  1231 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:46.895308  1231 solver.cpp:219] Iteration 700 (839.519 iter/s, 0.119116s/100 iters), loss = 0.165355
I0428 20:18:46.895334  1231 solver.cpp:238]     Train net output #0: loss = 0.165355 (* 1 = 0.165355 loss)
I0428 20:18:46.895339  1231 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:47.015413  1231 solver.cpp:219] Iteration 800 (832.854 iter/s, 0.120069s/100 iters), loss = 0.208491
I0428 20:18:47.015440  1231 solver.cpp:238]     Train net output #0: loss = 0.208491 (* 1 = 0.208491 loss)
I0428 20:18:47.015447  1231 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:47.138581  1231 solver.cpp:219] Iteration 900 (812.164 iter/s, 0.123128s/100 iters), loss = 0.106054
I0428 20:18:47.138613  1231 solver.cpp:238]     Train net output #0: loss = 0.106054 (* 1 = 0.106054 loss)
I0428 20:18:47.138622  1231 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:47.179893  1237 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:47.261718  1231 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:47.263128  1231 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:47.263980  1231 solver.cpp:311] Iteration 1000, loss = 0.110572
I0428 20:18:47.263998  1231 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:47.338791  1238 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:47.339501  1231 solver.cpp:398]     Test net output #0: accuracy = 0.973
I0428 20:18:47.339522  1231 solver.cpp:398]     Test net output #1: loss = 0.0844066 (* 1 = 0.0844066 loss)
I0428 20:18:47.339527  1231 solver.cpp:316] Optimization Done.
I0428 20:18:47.339530  1231 caffe.cpp:259] Optimization Done.
