I0428 20:27:18.335744  3016 caffe.cpp:218] Using GPUs 0
I0428 20:27:18.372961  3016 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:18.885437  3016 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1486.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:18.885581  3016 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1486.prototxt
I0428 20:27:18.885957  3016 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:18.885977  3016 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:18.886065  3016 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:18.886142  3016 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:18.886240  3016 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:18.886263  3016 net.cpp:86] Creating Layer mnist
I0428 20:27:18.886273  3016 net.cpp:382] mnist -> data
I0428 20:27:18.886296  3016 net.cpp:382] mnist -> label
I0428 20:27:18.887432  3016 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:18.890004  3016 net.cpp:124] Setting up mnist
I0428 20:27:18.890023  3016 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:18.890029  3016 net.cpp:131] Top shape: 64 (64)
I0428 20:27:18.890033  3016 net.cpp:139] Memory required for data: 200960
I0428 20:27:18.890039  3016 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:18.890058  3016 net.cpp:86] Creating Layer conv0
I0428 20:27:18.890063  3016 net.cpp:408] conv0 <- data
I0428 20:27:18.890076  3016 net.cpp:382] conv0 -> conv0
I0428 20:27:19.184069  3016 net.cpp:124] Setting up conv0
I0428 20:27:19.184100  3016 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:19.184105  3016 net.cpp:139] Memory required for data: 14946560
I0428 20:27:19.184146  3016 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:19.184162  3016 net.cpp:86] Creating Layer pool0
I0428 20:27:19.184167  3016 net.cpp:408] pool0 <- conv0
I0428 20:27:19.184173  3016 net.cpp:382] pool0 -> pool0
I0428 20:27:19.184234  3016 net.cpp:124] Setting up pool0
I0428 20:27:19.184243  3016 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:19.184247  3016 net.cpp:139] Memory required for data: 18632960
I0428 20:27:19.184252  3016 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:19.184264  3016 net.cpp:86] Creating Layer conv1
I0428 20:27:19.184273  3016 net.cpp:408] conv1 <- pool0
I0428 20:27:19.184278  3016 net.cpp:382] conv1 -> conv1
I0428 20:27:19.187634  3016 net.cpp:124] Setting up conv1
I0428 20:27:19.187654  3016 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:19.187659  3016 net.cpp:139] Memory required for data: 18714880
I0428 20:27:19.187669  3016 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:19.187678  3016 net.cpp:86] Creating Layer pool1
I0428 20:27:19.187682  3016 net.cpp:408] pool1 <- conv1
I0428 20:27:19.187688  3016 net.cpp:382] pool1 -> pool1
I0428 20:27:19.187734  3016 net.cpp:124] Setting up pool1
I0428 20:27:19.187742  3016 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:19.187747  3016 net.cpp:139] Memory required for data: 18735360
I0428 20:27:19.187750  3016 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:19.187764  3016 net.cpp:86] Creating Layer ip1
I0428 20:27:19.187770  3016 net.cpp:408] ip1 <- pool1
I0428 20:27:19.187777  3016 net.cpp:382] ip1 -> ip1
I0428 20:27:19.187897  3016 net.cpp:124] Setting up ip1
I0428 20:27:19.187906  3016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:19.187911  3016 net.cpp:139] Memory required for data: 18737920
I0428 20:27:19.187919  3016 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:19.187925  3016 net.cpp:86] Creating Layer relu1
I0428 20:27:19.187929  3016 net.cpp:408] relu1 <- ip1
I0428 20:27:19.187934  3016 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:19.188129  3016 net.cpp:124] Setting up relu1
I0428 20:27:19.188140  3016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:19.188144  3016 net.cpp:139] Memory required for data: 18740480
I0428 20:27:19.188148  3016 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:19.188155  3016 net.cpp:86] Creating Layer ip2
I0428 20:27:19.188159  3016 net.cpp:408] ip2 <- ip1
I0428 20:27:19.188165  3016 net.cpp:382] ip2 -> ip2
I0428 20:27:19.188277  3016 net.cpp:124] Setting up ip2
I0428 20:27:19.188283  3016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:19.188287  3016 net.cpp:139] Memory required for data: 18743040
I0428 20:27:19.188294  3016 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:19.188302  3016 net.cpp:86] Creating Layer relu2
I0428 20:27:19.188305  3016 net.cpp:408] relu2 <- ip2
I0428 20:27:19.188310  3016 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:19.189188  3016 net.cpp:124] Setting up relu2
I0428 20:27:19.189205  3016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:19.189209  3016 net.cpp:139] Memory required for data: 18745600
I0428 20:27:19.189213  3016 layer_factory.hpp:77] Creating layer loss
I0428 20:27:19.189220  3016 net.cpp:86] Creating Layer loss
I0428 20:27:19.189224  3016 net.cpp:408] loss <- ip2
I0428 20:27:19.189230  3016 net.cpp:408] loss <- label
I0428 20:27:19.189237  3016 net.cpp:382] loss -> loss
I0428 20:27:19.189261  3016 layer_factory.hpp:77] Creating layer loss
I0428 20:27:19.189532  3016 net.cpp:124] Setting up loss
I0428 20:27:19.189544  3016 net.cpp:131] Top shape: (1)
I0428 20:27:19.189548  3016 net.cpp:134]     with loss weight 1
I0428 20:27:19.189564  3016 net.cpp:139] Memory required for data: 18745604
I0428 20:27:19.189570  3016 net.cpp:200] loss needs backward computation.
I0428 20:27:19.189574  3016 net.cpp:200] relu2 needs backward computation.
I0428 20:27:19.189579  3016 net.cpp:200] ip2 needs backward computation.
I0428 20:27:19.189581  3016 net.cpp:200] relu1 needs backward computation.
I0428 20:27:19.189585  3016 net.cpp:200] ip1 needs backward computation.
I0428 20:27:19.189602  3016 net.cpp:200] pool1 needs backward computation.
I0428 20:27:19.189606  3016 net.cpp:200] conv1 needs backward computation.
I0428 20:27:19.189610  3016 net.cpp:200] pool0 needs backward computation.
I0428 20:27:19.189615  3016 net.cpp:200] conv0 needs backward computation.
I0428 20:27:19.189618  3016 net.cpp:202] mnist does not need backward computation.
I0428 20:27:19.189622  3016 net.cpp:244] This network produces output loss
I0428 20:27:19.189633  3016 net.cpp:257] Network initialization done.
I0428 20:27:19.189985  3016 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1486.prototxt
I0428 20:27:19.190026  3016 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:19.190146  3016 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:19.190223  3016 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:19.190284  3016 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:19.190297  3016 net.cpp:86] Creating Layer mnist
I0428 20:27:19.190304  3016 net.cpp:382] mnist -> data
I0428 20:27:19.190312  3016 net.cpp:382] mnist -> label
I0428 20:27:19.190417  3016 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:19.192669  3016 net.cpp:124] Setting up mnist
I0428 20:27:19.192687  3016 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:19.192694  3016 net.cpp:131] Top shape: 100 (100)
I0428 20:27:19.192698  3016 net.cpp:139] Memory required for data: 314000
I0428 20:27:19.192703  3016 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:19.192724  3016 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:19.192729  3016 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:19.192735  3016 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:19.192744  3016 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:19.192860  3016 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:19.192875  3016 net.cpp:131] Top shape: 100 (100)
I0428 20:27:19.192883  3016 net.cpp:131] Top shape: 100 (100)
I0428 20:27:19.192890  3016 net.cpp:139] Memory required for data: 314800
I0428 20:27:19.192898  3016 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:19.192912  3016 net.cpp:86] Creating Layer conv0
I0428 20:27:19.192920  3016 net.cpp:408] conv0 <- data
I0428 20:27:19.192930  3016 net.cpp:382] conv0 -> conv0
I0428 20:27:19.194665  3016 net.cpp:124] Setting up conv0
I0428 20:27:19.194681  3016 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:19.194686  3016 net.cpp:139] Memory required for data: 23354800
I0428 20:27:19.194697  3016 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:19.194705  3016 net.cpp:86] Creating Layer pool0
I0428 20:27:19.194710  3016 net.cpp:408] pool0 <- conv0
I0428 20:27:19.194716  3016 net.cpp:382] pool0 -> pool0
I0428 20:27:19.194758  3016 net.cpp:124] Setting up pool0
I0428 20:27:19.194766  3016 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:19.194768  3016 net.cpp:139] Memory required for data: 29114800
I0428 20:27:19.194772  3016 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:19.194782  3016 net.cpp:86] Creating Layer conv1
I0428 20:27:19.194787  3016 net.cpp:408] conv1 <- pool0
I0428 20:27:19.194792  3016 net.cpp:382] conv1 -> conv1
I0428 20:27:19.196574  3016 net.cpp:124] Setting up conv1
I0428 20:27:19.196591  3016 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:19.196596  3016 net.cpp:139] Memory required for data: 29242800
I0428 20:27:19.196607  3016 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:19.196615  3016 net.cpp:86] Creating Layer pool1
I0428 20:27:19.196619  3016 net.cpp:408] pool1 <- conv1
I0428 20:27:19.196625  3016 net.cpp:382] pool1 -> pool1
I0428 20:27:19.196679  3016 net.cpp:124] Setting up pool1
I0428 20:27:19.196689  3016 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:19.196693  3016 net.cpp:139] Memory required for data: 29274800
I0428 20:27:19.196698  3016 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:19.196705  3016 net.cpp:86] Creating Layer ip1
I0428 20:27:19.196709  3016 net.cpp:408] ip1 <- pool1
I0428 20:27:19.196715  3016 net.cpp:382] ip1 -> ip1
I0428 20:27:19.196840  3016 net.cpp:124] Setting up ip1
I0428 20:27:19.196849  3016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:19.196853  3016 net.cpp:139] Memory required for data: 29278800
I0428 20:27:19.196862  3016 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:19.196868  3016 net.cpp:86] Creating Layer relu1
I0428 20:27:19.196872  3016 net.cpp:408] relu1 <- ip1
I0428 20:27:19.196878  3016 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:19.197063  3016 net.cpp:124] Setting up relu1
I0428 20:27:19.197073  3016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:19.197078  3016 net.cpp:139] Memory required for data: 29282800
I0428 20:27:19.197082  3016 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:19.197090  3016 net.cpp:86] Creating Layer ip2
I0428 20:27:19.197094  3016 net.cpp:408] ip2 <- ip1
I0428 20:27:19.197100  3016 net.cpp:382] ip2 -> ip2
I0428 20:27:19.197211  3016 net.cpp:124] Setting up ip2
I0428 20:27:19.197218  3016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:19.197222  3016 net.cpp:139] Memory required for data: 29286800
I0428 20:27:19.197228  3016 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:19.197234  3016 net.cpp:86] Creating Layer relu2
I0428 20:27:19.197237  3016 net.cpp:408] relu2 <- ip2
I0428 20:27:19.197243  3016 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:19.197468  3016 net.cpp:124] Setting up relu2
I0428 20:27:19.197479  3016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:19.197482  3016 net.cpp:139] Memory required for data: 29290800
I0428 20:27:19.197486  3016 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:27:19.197492  3016 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:27:19.197497  3016 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:27:19.197502  3016 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:27:19.197523  3016 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:27:19.197578  3016 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:27:19.197588  3016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:19.197597  3016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:19.197602  3016 net.cpp:139] Memory required for data: 29298800
I0428 20:27:19.197608  3016 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:19.197618  3016 net.cpp:86] Creating Layer accuracy
I0428 20:27:19.197626  3016 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:27:19.197634  3016 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:19.197643  3016 net.cpp:382] accuracy -> accuracy
I0428 20:27:19.197659  3016 net.cpp:124] Setting up accuracy
I0428 20:27:19.197667  3016 net.cpp:131] Top shape: (1)
I0428 20:27:19.197680  3016 net.cpp:139] Memory required for data: 29298804
I0428 20:27:19.197687  3016 layer_factory.hpp:77] Creating layer loss
I0428 20:27:19.197695  3016 net.cpp:86] Creating Layer loss
I0428 20:27:19.197700  3016 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:27:19.197705  3016 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:19.197711  3016 net.cpp:382] loss -> loss
I0428 20:27:19.197720  3016 layer_factory.hpp:77] Creating layer loss
I0428 20:27:19.197986  3016 net.cpp:124] Setting up loss
I0428 20:27:19.198000  3016 net.cpp:131] Top shape: (1)
I0428 20:27:19.198005  3016 net.cpp:134]     with loss weight 1
I0428 20:27:19.198014  3016 net.cpp:139] Memory required for data: 29298808
I0428 20:27:19.198017  3016 net.cpp:200] loss needs backward computation.
I0428 20:27:19.198021  3016 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:19.198026  3016 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:27:19.198031  3016 net.cpp:200] relu2 needs backward computation.
I0428 20:27:19.198035  3016 net.cpp:200] ip2 needs backward computation.
I0428 20:27:19.198040  3016 net.cpp:200] relu1 needs backward computation.
I0428 20:27:19.198042  3016 net.cpp:200] ip1 needs backward computation.
I0428 20:27:19.198046  3016 net.cpp:200] pool1 needs backward computation.
I0428 20:27:19.198050  3016 net.cpp:200] conv1 needs backward computation.
I0428 20:27:19.198055  3016 net.cpp:200] pool0 needs backward computation.
I0428 20:27:19.198058  3016 net.cpp:200] conv0 needs backward computation.
I0428 20:27:19.198071  3016 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:19.198076  3016 net.cpp:202] mnist does not need backward computation.
I0428 20:27:19.198081  3016 net.cpp:244] This network produces output accuracy
I0428 20:27:19.198084  3016 net.cpp:244] This network produces output loss
I0428 20:27:19.198096  3016 net.cpp:257] Network initialization done.
I0428 20:27:19.198141  3016 solver.cpp:56] Solver scaffolding done.
I0428 20:27:19.198457  3016 caffe.cpp:248] Starting Optimization
I0428 20:27:19.198463  3016 solver.cpp:273] Solving LeNet
I0428 20:27:19.198467  3016 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:19.199393  3016 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:19.292872  3025 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:19.295205  3016 solver.cpp:398]     Test net output #0: accuracy = 0.0692
I0428 20:27:19.295227  3016 solver.cpp:398]     Test net output #1: loss = 2.35369 (* 1 = 2.35369 loss)
I0428 20:27:19.299584  3016 solver.cpp:219] Iteration 0 (0 iter/s, 0.101087s/100 iters), loss = 2.37918
I0428 20:27:19.299609  3016 solver.cpp:238]     Train net output #0: loss = 2.37918 (* 1 = 2.37918 loss)
I0428 20:27:19.299620  3016 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:19.493523  3016 solver.cpp:219] Iteration 100 (515.747 iter/s, 0.193893s/100 iters), loss = 0.446637
I0428 20:27:19.493572  3016 solver.cpp:238]     Train net output #0: loss = 0.446637 (* 1 = 0.446637 loss)
I0428 20:27:19.493585  3016 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:19.696111  3016 solver.cpp:219] Iteration 200 (493.765 iter/s, 0.202526s/100 iters), loss = 0.294737
I0428 20:27:19.696174  3016 solver.cpp:238]     Train net output #0: loss = 0.294737 (* 1 = 0.294737 loss)
I0428 20:27:19.696187  3016 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:19.895627  3016 solver.cpp:219] Iteration 300 (501.406 iter/s, 0.199439s/100 iters), loss = 0.345028
I0428 20:27:19.895664  3016 solver.cpp:238]     Train net output #0: loss = 0.345028 (* 1 = 0.345028 loss)
I0428 20:27:19.895673  3016 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:20.098032  3016 solver.cpp:219] Iteration 400 (494.189 iter/s, 0.202352s/100 iters), loss = 0.132209
I0428 20:27:20.098071  3016 solver.cpp:238]     Train net output #0: loss = 0.132209 (* 1 = 0.132209 loss)
I0428 20:27:20.098080  3016 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:20.297895  3016 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:20.394960  3025 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:20.396343  3016 solver.cpp:398]     Test net output #0: accuracy = 0.9304
I0428 20:27:20.396375  3016 solver.cpp:398]     Test net output #1: loss = 0.232336 (* 1 = 0.232336 loss)
I0428 20:27:20.398337  3016 solver.cpp:219] Iteration 500 (333.06 iter/s, 0.300246s/100 iters), loss = 0.298768
I0428 20:27:20.398368  3016 solver.cpp:238]     Train net output #0: loss = 0.298768 (* 1 = 0.298768 loss)
I0428 20:27:20.398375  3016 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:20.601794  3016 solver.cpp:219] Iteration 600 (491.617 iter/s, 0.20341s/100 iters), loss = 0.212104
I0428 20:27:20.601826  3016 solver.cpp:238]     Train net output #0: loss = 0.212104 (* 1 = 0.212104 loss)
I0428 20:27:20.601835  3016 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:20.809383  3016 solver.cpp:219] Iteration 700 (481.853 iter/s, 0.207532s/100 iters), loss = 0.183923
I0428 20:27:20.809442  3016 solver.cpp:238]     Train net output #0: loss = 0.183923 (* 1 = 0.183923 loss)
I0428 20:27:20.809455  3016 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:21.018654  3016 solver.cpp:219] Iteration 800 (478.011 iter/s, 0.2092s/100 iters), loss = 0.324483
I0428 20:27:21.018697  3016 solver.cpp:238]     Train net output #0: loss = 0.324483 (* 1 = 0.324483 loss)
I0428 20:27:21.018715  3016 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:21.226510  3016 solver.cpp:219] Iteration 900 (481.241 iter/s, 0.207796s/100 iters), loss = 0.234504
I0428 20:27:21.226549  3016 solver.cpp:238]     Train net output #0: loss = 0.234504 (* 1 = 0.234504 loss)
I0428 20:27:21.226559  3016 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:21.292770  3024 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:21.424674  3016 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:21.426769  3016 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:21.428143  3016 solver.cpp:311] Iteration 1000, loss = 0.141237
I0428 20:27:21.428176  3016 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:21.530627  3025 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:21.532894  3016 solver.cpp:398]     Test net output #0: accuracy = 0.9588
I0428 20:27:21.532925  3016 solver.cpp:398]     Test net output #1: loss = 0.135622 (* 1 = 0.135622 loss)
I0428 20:27:21.532932  3016 solver.cpp:316] Optimization Done.
I0428 20:27:21.532938  3016 caffe.cpp:259] Optimization Done.
