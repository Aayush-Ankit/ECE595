I0428 19:59:17.093003 29201 caffe.cpp:218] Using GPUs 0
I0428 19:59:17.132289 29201 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:17.589174 29201 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test843.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:17.589305 29201 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test843.prototxt
I0428 19:59:17.589632 29201 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:17.589646 29201 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:17.589745 29201 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:17.589808 29201 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:17.589889 29201 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:17.589908 29201 net.cpp:86] Creating Layer mnist
I0428 19:59:17.589915 29201 net.cpp:382] mnist -> data
I0428 19:59:17.589933 29201 net.cpp:382] mnist -> label
I0428 19:59:17.590912 29201 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:17.593072 29201 net.cpp:124] Setting up mnist
I0428 19:59:17.593104 29201 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:17.593111 29201 net.cpp:131] Top shape: 64 (64)
I0428 19:59:17.593113 29201 net.cpp:139] Memory required for data: 200960
I0428 19:59:17.593118 29201 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:17.593166 29201 net.cpp:86] Creating Layer conv0
I0428 19:59:17.593183 29201 net.cpp:408] conv0 <- data
I0428 19:59:17.593194 29201 net.cpp:382] conv0 -> conv0
I0428 19:59:17.825757 29201 net.cpp:124] Setting up conv0
I0428 19:59:17.825784 29201 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:17.825788 29201 net.cpp:139] Memory required for data: 1675520
I0428 19:59:17.825803 29201 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:17.825814 29201 net.cpp:86] Creating Layer pool0
I0428 19:59:17.825819 29201 net.cpp:408] pool0 <- conv0
I0428 19:59:17.825824 29201 net.cpp:382] pool0 -> pool0
I0428 19:59:17.825918 29201 net.cpp:124] Setting up pool0
I0428 19:59:17.825924 29201 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:17.825927 29201 net.cpp:139] Memory required for data: 2044160
I0428 19:59:17.825930 29201 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:17.825942 29201 net.cpp:86] Creating Layer conv1
I0428 19:59:17.825944 29201 net.cpp:408] conv1 <- pool0
I0428 19:59:17.825949 29201 net.cpp:382] conv1 -> conv1
I0428 19:59:17.828743 29201 net.cpp:124] Setting up conv1
I0428 19:59:17.828758 29201 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:17.828776 29201 net.cpp:139] Memory required for data: 2208000
I0428 19:59:17.828785 29201 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:17.828794 29201 net.cpp:86] Creating Layer pool1
I0428 19:59:17.828796 29201 net.cpp:408] pool1 <- conv1
I0428 19:59:17.828801 29201 net.cpp:382] pool1 -> pool1
I0428 19:59:17.828876 29201 net.cpp:124] Setting up pool1
I0428 19:59:17.828896 29201 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:17.828899 29201 net.cpp:139] Memory required for data: 2248960
I0428 19:59:17.828902 29201 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:17.828913 29201 net.cpp:86] Creating Layer ip1
I0428 19:59:17.828917 29201 net.cpp:408] ip1 <- pool1
I0428 19:59:17.828923 29201 net.cpp:382] ip1 -> ip1
I0428 19:59:17.829053 29201 net.cpp:124] Setting up ip1
I0428 19:59:17.829061 29201 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:17.829064 29201 net.cpp:139] Memory required for data: 2255360
I0428 19:59:17.829071 29201 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:17.829078 29201 net.cpp:86] Creating Layer relu1
I0428 19:59:17.829082 29201 net.cpp:408] relu1 <- ip1
I0428 19:59:17.829087 29201 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:17.829289 29201 net.cpp:124] Setting up relu1
I0428 19:59:17.829298 29201 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:17.829301 29201 net.cpp:139] Memory required for data: 2261760
I0428 19:59:17.829304 29201 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:17.829311 29201 net.cpp:86] Creating Layer ip2
I0428 19:59:17.829314 29201 net.cpp:408] ip2 <- ip1
I0428 19:59:17.829319 29201 net.cpp:382] ip2 -> ip2
I0428 19:59:17.829430 29201 net.cpp:124] Setting up ip2
I0428 19:59:17.829437 29201 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:17.829440 29201 net.cpp:139] Memory required for data: 2268160
I0428 19:59:17.829447 29201 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:17.829453 29201 net.cpp:86] Creating Layer relu2
I0428 19:59:17.829457 29201 net.cpp:408] relu2 <- ip2
I0428 19:59:17.829460 29201 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:17.830173 29201 net.cpp:124] Setting up relu2
I0428 19:59:17.830184 29201 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:17.830204 29201 net.cpp:139] Memory required for data: 2274560
I0428 19:59:17.830206 29201 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:17.830229 29201 net.cpp:86] Creating Layer ip3
I0428 19:59:17.830232 29201 net.cpp:408] ip3 <- ip2
I0428 19:59:17.830238 29201 net.cpp:382] ip3 -> ip3
I0428 19:59:17.830355 29201 net.cpp:124] Setting up ip3
I0428 19:59:17.830364 29201 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:17.830368 29201 net.cpp:139] Memory required for data: 2277120
I0428 19:59:17.830375 29201 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:17.830380 29201 net.cpp:86] Creating Layer relu3
I0428 19:59:17.830384 29201 net.cpp:408] relu3 <- ip3
I0428 19:59:17.830387 29201 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:17.830580 29201 net.cpp:124] Setting up relu3
I0428 19:59:17.830605 29201 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:17.830610 29201 net.cpp:139] Memory required for data: 2279680
I0428 19:59:17.830615 29201 layer_factory.hpp:77] Creating layer loss
I0428 19:59:17.830621 29201 net.cpp:86] Creating Layer loss
I0428 19:59:17.830624 29201 net.cpp:408] loss <- ip3
I0428 19:59:17.830628 29201 net.cpp:408] loss <- label
I0428 19:59:17.830647 29201 net.cpp:382] loss -> loss
I0428 19:59:17.830665 29201 layer_factory.hpp:77] Creating layer loss
I0428 19:59:17.830906 29201 net.cpp:124] Setting up loss
I0428 19:59:17.830915 29201 net.cpp:131] Top shape: (1)
I0428 19:59:17.830919 29201 net.cpp:134]     with loss weight 1
I0428 19:59:17.830931 29201 net.cpp:139] Memory required for data: 2279684
I0428 19:59:17.830935 29201 net.cpp:200] loss needs backward computation.
I0428 19:59:17.830937 29201 net.cpp:200] relu3 needs backward computation.
I0428 19:59:17.830940 29201 net.cpp:200] ip3 needs backward computation.
I0428 19:59:17.830943 29201 net.cpp:200] relu2 needs backward computation.
I0428 19:59:17.830945 29201 net.cpp:200] ip2 needs backward computation.
I0428 19:59:17.830948 29201 net.cpp:200] relu1 needs backward computation.
I0428 19:59:17.830965 29201 net.cpp:200] ip1 needs backward computation.
I0428 19:59:17.830968 29201 net.cpp:200] pool1 needs backward computation.
I0428 19:59:17.830971 29201 net.cpp:200] conv1 needs backward computation.
I0428 19:59:17.830974 29201 net.cpp:200] pool0 needs backward computation.
I0428 19:59:17.830977 29201 net.cpp:200] conv0 needs backward computation.
I0428 19:59:17.830981 29201 net.cpp:202] mnist does not need backward computation.
I0428 19:59:17.830982 29201 net.cpp:244] This network produces output loss
I0428 19:59:17.830992 29201 net.cpp:257] Network initialization done.
I0428 19:59:17.831326 29201 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test843.prototxt
I0428 19:59:17.831396 29201 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:17.831485 29201 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:17.831581 29201 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:17.831624 29201 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:17.831637 29201 net.cpp:86] Creating Layer mnist
I0428 19:59:17.831642 29201 net.cpp:382] mnist -> data
I0428 19:59:17.831650 29201 net.cpp:382] mnist -> label
I0428 19:59:17.831737 29201 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:17.833904 29201 net.cpp:124] Setting up mnist
I0428 19:59:17.833935 29201 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:17.833940 29201 net.cpp:131] Top shape: 100 (100)
I0428 19:59:17.833943 29201 net.cpp:139] Memory required for data: 314000
I0428 19:59:17.833947 29201 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:17.833981 29201 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:17.833984 29201 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:17.833989 29201 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:17.833995 29201 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:17.834043 29201 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:17.834062 29201 net.cpp:131] Top shape: 100 (100)
I0428 19:59:17.834066 29201 net.cpp:131] Top shape: 100 (100)
I0428 19:59:17.834069 29201 net.cpp:139] Memory required for data: 314800
I0428 19:59:17.834071 29201 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:17.834081 29201 net.cpp:86] Creating Layer conv0
I0428 19:59:17.834084 29201 net.cpp:408] conv0 <- data
I0428 19:59:17.834090 29201 net.cpp:382] conv0 -> conv0
I0428 19:59:17.835774 29201 net.cpp:124] Setting up conv0
I0428 19:59:17.835788 29201 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:17.835791 29201 net.cpp:139] Memory required for data: 2618800
I0428 19:59:17.835800 29201 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:17.835808 29201 net.cpp:86] Creating Layer pool0
I0428 19:59:17.835811 29201 net.cpp:408] pool0 <- conv0
I0428 19:59:17.835816 29201 net.cpp:382] pool0 -> pool0
I0428 19:59:17.835853 29201 net.cpp:124] Setting up pool0
I0428 19:59:17.835860 29201 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:17.835861 29201 net.cpp:139] Memory required for data: 3194800
I0428 19:59:17.835865 29201 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:17.835873 29201 net.cpp:86] Creating Layer conv1
I0428 19:59:17.835887 29201 net.cpp:408] conv1 <- pool0
I0428 19:59:17.835906 29201 net.cpp:382] conv1 -> conv1
I0428 19:59:17.838042 29201 net.cpp:124] Setting up conv1
I0428 19:59:17.838065 29201 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:17.838069 29201 net.cpp:139] Memory required for data: 3450800
I0428 19:59:17.838078 29201 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:17.838085 29201 net.cpp:86] Creating Layer pool1
I0428 19:59:17.838088 29201 net.cpp:408] pool1 <- conv1
I0428 19:59:17.838107 29201 net.cpp:382] pool1 -> pool1
I0428 19:59:17.838172 29201 net.cpp:124] Setting up pool1
I0428 19:59:17.838178 29201 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:17.838181 29201 net.cpp:139] Memory required for data: 3514800
I0428 19:59:17.838183 29201 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:17.838191 29201 net.cpp:86] Creating Layer ip1
I0428 19:59:17.838193 29201 net.cpp:408] ip1 <- pool1
I0428 19:59:17.838198 29201 net.cpp:382] ip1 -> ip1
I0428 19:59:17.838321 29201 net.cpp:124] Setting up ip1
I0428 19:59:17.838330 29201 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:17.838351 29201 net.cpp:139] Memory required for data: 3524800
I0428 19:59:17.838358 29201 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:17.838366 29201 net.cpp:86] Creating Layer relu1
I0428 19:59:17.838368 29201 net.cpp:408] relu1 <- ip1
I0428 19:59:17.838372 29201 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:17.838625 29201 net.cpp:124] Setting up relu1
I0428 19:59:17.838634 29201 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:17.838637 29201 net.cpp:139] Memory required for data: 3534800
I0428 19:59:17.838640 29201 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:17.838649 29201 net.cpp:86] Creating Layer ip2
I0428 19:59:17.838651 29201 net.cpp:408] ip2 <- ip1
I0428 19:59:17.838668 29201 net.cpp:382] ip2 -> ip2
I0428 19:59:17.838802 29201 net.cpp:124] Setting up ip2
I0428 19:59:17.838810 29201 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:17.838814 29201 net.cpp:139] Memory required for data: 3544800
I0428 19:59:17.838819 29201 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:17.838824 29201 net.cpp:86] Creating Layer relu2
I0428 19:59:17.838826 29201 net.cpp:408] relu2 <- ip2
I0428 19:59:17.838835 29201 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:17.838981 29201 net.cpp:124] Setting up relu2
I0428 19:59:17.838989 29201 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:17.838992 29201 net.cpp:139] Memory required for data: 3554800
I0428 19:59:17.838995 29201 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:17.839000 29201 net.cpp:86] Creating Layer ip3
I0428 19:59:17.839002 29201 net.cpp:408] ip3 <- ip2
I0428 19:59:17.839013 29201 net.cpp:382] ip3 -> ip3
I0428 19:59:17.839134 29201 net.cpp:124] Setting up ip3
I0428 19:59:17.839141 29201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:17.839144 29201 net.cpp:139] Memory required for data: 3558800
I0428 19:59:17.839153 29201 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:17.839159 29201 net.cpp:86] Creating Layer relu3
I0428 19:59:17.839162 29201 net.cpp:408] relu3 <- ip3
I0428 19:59:17.839167 29201 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:17.839973 29201 net.cpp:124] Setting up relu3
I0428 19:59:17.839985 29201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:17.839988 29201 net.cpp:139] Memory required for data: 3562800
I0428 19:59:17.839992 29201 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:17.839996 29201 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:17.839999 29201 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:17.840005 29201 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:17.840013 29201 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:17.840051 29201 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:17.840057 29201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:17.840060 29201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:17.840064 29201 net.cpp:139] Memory required for data: 3570800
I0428 19:59:17.840065 29201 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:17.840071 29201 net.cpp:86] Creating Layer accuracy
I0428 19:59:17.840075 29201 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:17.840078 29201 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:17.840083 29201 net.cpp:382] accuracy -> accuracy
I0428 19:59:17.840090 29201 net.cpp:124] Setting up accuracy
I0428 19:59:17.840093 29201 net.cpp:131] Top shape: (1)
I0428 19:59:17.840095 29201 net.cpp:139] Memory required for data: 3570804
I0428 19:59:17.840098 29201 layer_factory.hpp:77] Creating layer loss
I0428 19:59:17.840102 29201 net.cpp:86] Creating Layer loss
I0428 19:59:17.840106 29201 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:17.840108 29201 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:17.840112 29201 net.cpp:382] loss -> loss
I0428 19:59:17.840117 29201 layer_factory.hpp:77] Creating layer loss
I0428 19:59:17.840394 29201 net.cpp:124] Setting up loss
I0428 19:59:17.840405 29201 net.cpp:131] Top shape: (1)
I0428 19:59:17.840420 29201 net.cpp:134]     with loss weight 1
I0428 19:59:17.840435 29201 net.cpp:139] Memory required for data: 3570808
I0428 19:59:17.840440 29201 net.cpp:200] loss needs backward computation.
I0428 19:59:17.840443 29201 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:17.840446 29201 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:17.840450 29201 net.cpp:200] relu3 needs backward computation.
I0428 19:59:17.840452 29201 net.cpp:200] ip3 needs backward computation.
I0428 19:59:17.840456 29201 net.cpp:200] relu2 needs backward computation.
I0428 19:59:17.840463 29201 net.cpp:200] ip2 needs backward computation.
I0428 19:59:17.840466 29201 net.cpp:200] relu1 needs backward computation.
I0428 19:59:17.840469 29201 net.cpp:200] ip1 needs backward computation.
I0428 19:59:17.840471 29201 net.cpp:200] pool1 needs backward computation.
I0428 19:59:17.840474 29201 net.cpp:200] conv1 needs backward computation.
I0428 19:59:17.840483 29201 net.cpp:200] pool0 needs backward computation.
I0428 19:59:17.840487 29201 net.cpp:200] conv0 needs backward computation.
I0428 19:59:17.840489 29201 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:17.840493 29201 net.cpp:202] mnist does not need backward computation.
I0428 19:59:17.840507 29201 net.cpp:244] This network produces output accuracy
I0428 19:59:17.840510 29201 net.cpp:244] This network produces output loss
I0428 19:59:17.840526 29201 net.cpp:257] Network initialization done.
I0428 19:59:17.840576 29201 solver.cpp:56] Solver scaffolding done.
I0428 19:59:17.841013 29201 caffe.cpp:248] Starting Optimization
I0428 19:59:17.841022 29201 solver.cpp:273] Solving LeNet
I0428 19:59:17.841024 29201 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:17.841830 29201 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:17.845535 29201 blocking_queue.cpp:49] Waiting for data
I0428 19:59:17.917033 29209 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:17.917543 29201 solver.cpp:398]     Test net output #0: accuracy = 0.1078
I0428 19:59:17.917562 29201 solver.cpp:398]     Test net output #1: loss = 2.31378 (* 1 = 2.31378 loss)
I0428 19:59:17.920117 29201 solver.cpp:219] Iteration 0 (-1.16714e-31 iter/s, 0.0790681s/100 iters), loss = 2.30164
I0428 19:59:17.920140 29201 solver.cpp:238]     Train net output #0: loss = 2.30164 (* 1 = 2.30164 loss)
I0428 19:59:17.920166 29201 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:17.999480 29201 solver.cpp:219] Iteration 100 (1260.58 iter/s, 0.0793284s/100 iters), loss = 0.665676
I0428 19:59:17.999505 29201 solver.cpp:238]     Train net output #0: loss = 0.665676 (* 1 = 0.665676 loss)
I0428 19:59:17.999526 29201 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:18.076833 29201 solver.cpp:219] Iteration 200 (1293.32 iter/s, 0.0773201s/100 iters), loss = 0.235755
I0428 19:59:18.076858 29201 solver.cpp:238]     Train net output #0: loss = 0.235755 (* 1 = 0.235755 loss)
I0428 19:59:18.076864 29201 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:18.155130 29201 solver.cpp:219] Iteration 300 (1277.72 iter/s, 0.0782643s/100 iters), loss = 0.230119
I0428 19:59:18.155153 29201 solver.cpp:238]     Train net output #0: loss = 0.230119 (* 1 = 0.230119 loss)
I0428 19:59:18.155159 29201 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:18.233431 29201 solver.cpp:219] Iteration 400 (1277.65 iter/s, 0.0782684s/100 iters), loss = 0.126168
I0428 19:59:18.233456 29201 solver.cpp:238]     Train net output #0: loss = 0.126168 (* 1 = 0.126168 loss)
I0428 19:59:18.233463 29201 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:18.310482 29201 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:18.363056 29209 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:18.363576 29201 solver.cpp:398]     Test net output #0: accuracy = 0.9548
I0428 19:59:18.363595 29201 solver.cpp:398]     Test net output #1: loss = 0.146312 (* 1 = 0.146312 loss)
I0428 19:59:18.364393 29201 solver.cpp:219] Iteration 500 (763.799 iter/s, 0.130925s/100 iters), loss = 0.150915
I0428 19:59:18.364433 29201 solver.cpp:238]     Train net output #0: loss = 0.150915 (* 1 = 0.150915 loss)
I0428 19:59:18.364439 29201 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:18.451182 29201 solver.cpp:219] Iteration 600 (1152.87 iter/s, 0.08674s/100 iters), loss = 0.115152
I0428 19:59:18.451215 29201 solver.cpp:238]     Train net output #0: loss = 0.115152 (* 1 = 0.115152 loss)
I0428 19:59:18.451237 29201 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:18.537781 29201 solver.cpp:219] Iteration 700 (1155.33 iter/s, 0.0865557s/100 iters), loss = 0.299221
I0428 19:59:18.537807 29201 solver.cpp:238]     Train net output #0: loss = 0.299221 (* 1 = 0.299221 loss)
I0428 19:59:18.537818 29201 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:18.617188 29201 solver.cpp:219] Iteration 800 (1259.89 iter/s, 0.0793723s/100 iters), loss = 0.429952
I0428 19:59:18.617213 29201 solver.cpp:238]     Train net output #0: loss = 0.429952 (* 1 = 0.429952 loss)
I0428 19:59:18.617234 29201 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:18.694124 29201 solver.cpp:219] Iteration 900 (1300.36 iter/s, 0.0769015s/100 iters), loss = 0.206341
I0428 19:59:18.694149 29201 solver.cpp:238]     Train net output #0: loss = 0.206341 (* 1 = 0.206341 loss)
I0428 19:59:18.694170 29201 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:18.719848 29208 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:18.770153 29201 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:18.770998 29201 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:18.771476 29201 solver.cpp:311] Iteration 1000, loss = 0.13981
I0428 19:59:18.771492 29201 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:18.846060 29209 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:18.846576 29201 solver.cpp:398]     Test net output #0: accuracy = 0.9684
I0428 19:59:18.846596 29201 solver.cpp:398]     Test net output #1: loss = 0.0959134 (* 1 = 0.0959134 loss)
I0428 19:59:18.846601 29201 solver.cpp:316] Optimization Done.
I0428 19:59:18.846602 29201 caffe.cpp:259] Optimization Done.
