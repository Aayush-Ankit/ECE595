I0428 19:33:34.615156 23134 caffe.cpp:218] Using GPUs 0
I0428 19:33:34.654701 23134 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:35.114610 23134 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test183.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:35.114739 23134 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test183.prototxt
I0428 19:33:35.115048 23134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:35.115077 23134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:35.115162 23134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:35.115223 23134 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:35.115303 23134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:35.115324 23134 net.cpp:86] Creating Layer mnist
I0428 19:33:35.115329 23134 net.cpp:382] mnist -> data
I0428 19:33:35.115350 23134 net.cpp:382] mnist -> label
I0428 19:33:35.116355 23134 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:35.118691 23134 net.cpp:124] Setting up mnist
I0428 19:33:35.118737 23134 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:35.118743 23134 net.cpp:131] Top shape: 64 (64)
I0428 19:33:35.118746 23134 net.cpp:139] Memory required for data: 200960
I0428 19:33:35.118752 23134 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:35.118767 23134 net.cpp:86] Creating Layer conv0
I0428 19:33:35.118770 23134 net.cpp:408] conv0 <- data
I0428 19:33:35.118780 23134 net.cpp:382] conv0 -> conv0
I0428 19:33:35.347833 23134 net.cpp:124] Setting up conv0
I0428 19:33:35.347875 23134 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:35.347879 23134 net.cpp:139] Memory required for data: 3887360
I0428 19:33:35.347894 23134 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:35.347908 23134 net.cpp:86] Creating Layer pool0
I0428 19:33:35.347944 23134 net.cpp:408] pool0 <- conv0
I0428 19:33:35.347965 23134 net.cpp:382] pool0 -> pool0
I0428 19:33:35.348013 23134 net.cpp:124] Setting up pool0
I0428 19:33:35.348021 23134 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:35.348024 23134 net.cpp:139] Memory required for data: 4808960
I0428 19:33:35.348027 23134 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:35.348036 23134 net.cpp:86] Creating Layer ip1
I0428 19:33:35.348038 23134 net.cpp:408] ip1 <- pool0
I0428 19:33:35.348043 23134 net.cpp:382] ip1 -> ip1
I0428 19:33:35.349660 23134 net.cpp:124] Setting up ip1
I0428 19:33:35.349690 23134 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:35.349694 23134 net.cpp:139] Memory required for data: 4815360
I0428 19:33:35.349702 23134 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:35.349710 23134 net.cpp:86] Creating Layer relu1
I0428 19:33:35.349714 23134 net.cpp:408] relu1 <- ip1
I0428 19:33:35.349719 23134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:35.349925 23134 net.cpp:124] Setting up relu1
I0428 19:33:35.349933 23134 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:35.349937 23134 net.cpp:139] Memory required for data: 4821760
I0428 19:33:35.349941 23134 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:35.349948 23134 net.cpp:86] Creating Layer ip2
I0428 19:33:35.349952 23134 net.cpp:408] ip2 <- ip1
I0428 19:33:35.349972 23134 net.cpp:382] ip2 -> ip2
I0428 19:33:35.351011 23134 net.cpp:124] Setting up ip2
I0428 19:33:35.351040 23134 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:35.351045 23134 net.cpp:139] Memory required for data: 4834560
I0428 19:33:35.351054 23134 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:35.351061 23134 net.cpp:86] Creating Layer relu2
I0428 19:33:35.351065 23134 net.cpp:408] relu2 <- ip2
I0428 19:33:35.351071 23134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:35.351897 23134 net.cpp:124] Setting up relu2
I0428 19:33:35.351909 23134 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:35.351929 23134 net.cpp:139] Memory required for data: 4847360
I0428 19:33:35.351933 23134 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:35.351941 23134 net.cpp:86] Creating Layer ip3
I0428 19:33:35.351945 23134 net.cpp:408] ip3 <- ip2
I0428 19:33:35.351951 23134 net.cpp:382] ip3 -> ip3
I0428 19:33:35.352059 23134 net.cpp:124] Setting up ip3
I0428 19:33:35.352067 23134 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:35.352072 23134 net.cpp:139] Memory required for data: 4849920
I0428 19:33:35.352077 23134 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:35.352084 23134 net.cpp:86] Creating Layer relu3
I0428 19:33:35.352088 23134 net.cpp:408] relu3 <- ip3
I0428 19:33:35.352110 23134 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:35.352291 23134 net.cpp:124] Setting up relu3
I0428 19:33:35.352299 23134 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:35.352303 23134 net.cpp:139] Memory required for data: 4852480
I0428 19:33:35.352306 23134 layer_factory.hpp:77] Creating layer loss
I0428 19:33:35.352313 23134 net.cpp:86] Creating Layer loss
I0428 19:33:35.352315 23134 net.cpp:408] loss <- ip3
I0428 19:33:35.352319 23134 net.cpp:408] loss <- label
I0428 19:33:35.352324 23134 net.cpp:382] loss -> loss
I0428 19:33:35.352342 23134 layer_factory.hpp:77] Creating layer loss
I0428 19:33:35.352584 23134 net.cpp:124] Setting up loss
I0428 19:33:35.352593 23134 net.cpp:131] Top shape: (1)
I0428 19:33:35.352597 23134 net.cpp:134]     with loss weight 1
I0428 19:33:35.352613 23134 net.cpp:139] Memory required for data: 4852484
I0428 19:33:35.352617 23134 net.cpp:200] loss needs backward computation.
I0428 19:33:35.352620 23134 net.cpp:200] relu3 needs backward computation.
I0428 19:33:35.352624 23134 net.cpp:200] ip3 needs backward computation.
I0428 19:33:35.352627 23134 net.cpp:200] relu2 needs backward computation.
I0428 19:33:35.352630 23134 net.cpp:200] ip2 needs backward computation.
I0428 19:33:35.352633 23134 net.cpp:200] relu1 needs backward computation.
I0428 19:33:35.352636 23134 net.cpp:200] ip1 needs backward computation.
I0428 19:33:35.352650 23134 net.cpp:200] pool0 needs backward computation.
I0428 19:33:35.352653 23134 net.cpp:200] conv0 needs backward computation.
I0428 19:33:35.352658 23134 net.cpp:202] mnist does not need backward computation.
I0428 19:33:35.352660 23134 net.cpp:244] This network produces output loss
I0428 19:33:35.352669 23134 net.cpp:257] Network initialization done.
I0428 19:33:35.353014 23134 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test183.prototxt
I0428 19:33:35.353042 23134 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:35.353129 23134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:35.353210 23134 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:35.353298 23134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:35.353310 23134 net.cpp:86] Creating Layer mnist
I0428 19:33:35.353314 23134 net.cpp:382] mnist -> data
I0428 19:33:35.353322 23134 net.cpp:382] mnist -> label
I0428 19:33:35.353401 23134 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:35.354861 23134 net.cpp:124] Setting up mnist
I0428 19:33:35.354890 23134 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:35.354897 23134 net.cpp:131] Top shape: 100 (100)
I0428 19:33:35.354899 23134 net.cpp:139] Memory required for data: 314000
I0428 19:33:35.354903 23134 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:35.354939 23134 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:35.354943 23134 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:35.354949 23134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:35.354955 23134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:35.355000 23134 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:35.355005 23134 net.cpp:131] Top shape: 100 (100)
I0428 19:33:35.355010 23134 net.cpp:131] Top shape: 100 (100)
I0428 19:33:35.355012 23134 net.cpp:139] Memory required for data: 314800
I0428 19:33:35.355026 23134 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:35.355036 23134 net.cpp:86] Creating Layer conv0
I0428 19:33:35.355038 23134 net.cpp:408] conv0 <- data
I0428 19:33:35.355043 23134 net.cpp:382] conv0 -> conv0
I0428 19:33:35.356806 23134 net.cpp:124] Setting up conv0
I0428 19:33:35.356838 23134 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:35.356842 23134 net.cpp:139] Memory required for data: 6074800
I0428 19:33:35.356853 23134 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:35.356859 23134 net.cpp:86] Creating Layer pool0
I0428 19:33:35.356863 23134 net.cpp:408] pool0 <- conv0
I0428 19:33:35.356868 23134 net.cpp:382] pool0 -> pool0
I0428 19:33:35.356907 23134 net.cpp:124] Setting up pool0
I0428 19:33:35.356914 23134 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:35.356919 23134 net.cpp:139] Memory required for data: 7514800
I0428 19:33:35.356921 23134 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:35.356928 23134 net.cpp:86] Creating Layer ip1
I0428 19:33:35.356932 23134 net.cpp:408] ip1 <- pool0
I0428 19:33:35.356937 23134 net.cpp:382] ip1 -> ip1
I0428 19:33:35.357620 23134 net.cpp:124] Setting up ip1
I0428 19:33:35.357628 23134 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:35.357631 23134 net.cpp:139] Memory required for data: 7524800
I0428 19:33:35.357640 23134 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:35.357645 23134 net.cpp:86] Creating Layer relu1
I0428 19:33:35.357647 23134 net.cpp:408] relu1 <- ip1
I0428 19:33:35.357651 23134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:35.357868 23134 net.cpp:124] Setting up relu1
I0428 19:33:35.357877 23134 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:35.357880 23134 net.cpp:139] Memory required for data: 7534800
I0428 19:33:35.357883 23134 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:35.357889 23134 net.cpp:86] Creating Layer ip2
I0428 19:33:35.357892 23134 net.cpp:408] ip2 <- ip1
I0428 19:33:35.357897 23134 net.cpp:382] ip2 -> ip2
I0428 19:33:35.358070 23134 net.cpp:124] Setting up ip2
I0428 19:33:35.358078 23134 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:35.358083 23134 net.cpp:139] Memory required for data: 7554800
I0428 19:33:35.358090 23134 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:35.358096 23134 net.cpp:86] Creating Layer relu2
I0428 19:33:35.358099 23134 net.cpp:408] relu2 <- ip2
I0428 19:33:35.358104 23134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:35.359048 23134 net.cpp:124] Setting up relu2
I0428 19:33:35.359061 23134 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:35.359064 23134 net.cpp:139] Memory required for data: 7574800
I0428 19:33:35.359068 23134 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:35.359076 23134 net.cpp:86] Creating Layer ip3
I0428 19:33:35.359081 23134 net.cpp:408] ip3 <- ip2
I0428 19:33:35.359086 23134 net.cpp:382] ip3 -> ip3
I0428 19:33:35.359212 23134 net.cpp:124] Setting up ip3
I0428 19:33:35.359223 23134 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:35.359227 23134 net.cpp:139] Memory required for data: 7578800
I0428 19:33:35.359233 23134 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:35.359238 23134 net.cpp:86] Creating Layer relu3
I0428 19:33:35.359241 23134 net.cpp:408] relu3 <- ip3
I0428 19:33:35.359246 23134 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:35.359452 23134 net.cpp:124] Setting up relu3
I0428 19:33:35.359477 23134 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:35.359480 23134 net.cpp:139] Memory required for data: 7582800
I0428 19:33:35.359484 23134 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:35.359489 23134 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:35.359493 23134 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:35.359498 23134 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:35.359503 23134 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:35.359539 23134 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:35.359546 23134 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:35.359550 23134 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:35.359565 23134 net.cpp:139] Memory required for data: 7590800
I0428 19:33:35.359568 23134 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:35.359573 23134 net.cpp:86] Creating Layer accuracy
I0428 19:33:35.359577 23134 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:35.359582 23134 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:35.359587 23134 net.cpp:382] accuracy -> accuracy
I0428 19:33:35.359596 23134 net.cpp:124] Setting up accuracy
I0428 19:33:35.359599 23134 net.cpp:131] Top shape: (1)
I0428 19:33:35.359609 23134 net.cpp:139] Memory required for data: 7590804
I0428 19:33:35.359618 23134 layer_factory.hpp:77] Creating layer loss
I0428 19:33:35.359623 23134 net.cpp:86] Creating Layer loss
I0428 19:33:35.359632 23134 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:35.359642 23134 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:35.359647 23134 net.cpp:382] loss -> loss
I0428 19:33:35.359653 23134 layer_factory.hpp:77] Creating layer loss
I0428 19:33:35.360046 23134 net.cpp:124] Setting up loss
I0428 19:33:35.360056 23134 net.cpp:131] Top shape: (1)
I0428 19:33:35.360060 23134 net.cpp:134]     with loss weight 1
I0428 19:33:35.360067 23134 net.cpp:139] Memory required for data: 7590808
I0428 19:33:35.360072 23134 net.cpp:200] loss needs backward computation.
I0428 19:33:35.360076 23134 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:35.360080 23134 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:35.360085 23134 net.cpp:200] relu3 needs backward computation.
I0428 19:33:35.360087 23134 net.cpp:200] ip3 needs backward computation.
I0428 19:33:35.360090 23134 net.cpp:200] relu2 needs backward computation.
I0428 19:33:35.360093 23134 net.cpp:200] ip2 needs backward computation.
I0428 19:33:35.360097 23134 net.cpp:200] relu1 needs backward computation.
I0428 19:33:35.360116 23134 net.cpp:200] ip1 needs backward computation.
I0428 19:33:35.360118 23134 net.cpp:200] pool0 needs backward computation.
I0428 19:33:35.360121 23134 net.cpp:200] conv0 needs backward computation.
I0428 19:33:35.360141 23134 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:35.360152 23134 net.cpp:202] mnist does not need backward computation.
I0428 19:33:35.360153 23134 net.cpp:244] This network produces output accuracy
I0428 19:33:35.360157 23134 net.cpp:244] This network produces output loss
I0428 19:33:35.360168 23134 net.cpp:257] Network initialization done.
I0428 19:33:35.360210 23134 solver.cpp:56] Solver scaffolding done.
I0428 19:33:35.360512 23134 caffe.cpp:248] Starting Optimization
I0428 19:33:35.360517 23134 solver.cpp:273] Solving LeNet
I0428 19:33:35.360520 23134 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:35.362092 23134 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:35.427820 23141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:35.429942 23134 solver.cpp:398]     Test net output #0: accuracy = 0.1271
I0428 19:33:35.429961 23134 solver.cpp:398]     Test net output #1: loss = 2.29683 (* 1 = 2.29683 loss)
I0428 19:33:35.433382 23134 solver.cpp:219] Iteration 0 (-1.46015e-31 iter/s, 0.0728353s/100 iters), loss = 2.29352
I0428 19:33:35.433406 23134 solver.cpp:238]     Train net output #0: loss = 2.29352 (* 1 = 2.29352 loss)
I0428 19:33:35.433419 23134 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:35.530860 23134 solver.cpp:219] Iteration 100 (1026.22 iter/s, 0.0974449s/100 iters), loss = 1.46701
I0428 19:33:35.530884 23134 solver.cpp:238]     Train net output #0: loss = 1.46701 (* 1 = 1.46701 loss)
I0428 19:33:35.530890 23134 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:35.628127 23134 solver.cpp:219] Iteration 200 (1028.46 iter/s, 0.0972329s/100 iters), loss = 1.80147
I0428 19:33:35.628150 23134 solver.cpp:238]     Train net output #0: loss = 1.80147 (* 1 = 1.80147 loss)
I0428 19:33:35.628156 23134 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:35.725175 23134 solver.cpp:219] Iteration 300 (1030.76 iter/s, 0.0970156s/100 iters), loss = 1.08085
I0428 19:33:35.725209 23134 solver.cpp:238]     Train net output #0: loss = 1.08085 (* 1 = 1.08085 loss)
I0428 19:33:35.725216 23134 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:35.821377 23134 solver.cpp:219] Iteration 400 (1039.96 iter/s, 0.0961577s/100 iters), loss = 0.9683
I0428 19:33:35.821403 23134 solver.cpp:238]     Train net output #0: loss = 0.9683 (* 1 = 0.9683 loss)
I0428 19:33:35.821408 23134 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:35.916007 23134 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:35.979662 23141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:35.981950 23134 solver.cpp:398]     Test net output #0: accuracy = 0.8343
I0428 19:33:35.981967 23134 solver.cpp:398]     Test net output #1: loss = 0.669312 (* 1 = 0.669312 loss)
I0428 19:33:35.982882 23134 solver.cpp:219] Iteration 500 (619.32 iter/s, 0.161467s/100 iters), loss = 0.722761
I0428 19:33:35.982903 23134 solver.cpp:238]     Train net output #0: loss = 0.722761 (* 1 = 0.722761 loss)
I0428 19:33:35.982909 23134 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:36.079912 23134 solver.cpp:219] Iteration 600 (1030.92 iter/s, 0.0970004s/100 iters), loss = 0.171199
I0428 19:33:36.079936 23134 solver.cpp:238]     Train net output #0: loss = 0.171199 (* 1 = 0.171199 loss)
I0428 19:33:36.079958 23134 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:36.176861 23134 solver.cpp:219] Iteration 700 (1031.85 iter/s, 0.0969135s/100 iters), loss = 0.296683
I0428 19:33:36.176884 23134 solver.cpp:238]     Train net output #0: loss = 0.296683 (* 1 = 0.296683 loss)
I0428 19:33:36.176905 23134 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:36.272687 23134 solver.cpp:219] Iteration 800 (1043.94 iter/s, 0.0957911s/100 iters), loss = 0.341385
I0428 19:33:36.272714 23134 solver.cpp:238]     Train net output #0: loss = 0.341385 (* 1 = 0.341385 loss)
I0428 19:33:36.272720 23134 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:36.368294 23134 solver.cpp:219] Iteration 900 (1046.38 iter/s, 0.0955679s/100 iters), loss = 0.237537
I0428 19:33:36.368316 23134 solver.cpp:238]     Train net output #0: loss = 0.237537 (* 1 = 0.237537 loss)
I0428 19:33:36.368322 23134 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:36.400274 23140 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:36.463016 23134 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:36.464893 23134 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:36.466274 23134 solver.cpp:311] Iteration 1000, loss = 0.146221
I0428 19:33:36.466290 23134 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:36.530359 23141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:36.532598 23134 solver.cpp:398]     Test net output #0: accuracy = 0.9626
I0428 19:33:36.532615 23134 solver.cpp:398]     Test net output #1: loss = 0.117609 (* 1 = 0.117609 loss)
I0428 19:33:36.532619 23134 solver.cpp:316] Optimization Done.
I0428 19:33:36.532639 23134 caffe.cpp:259] Optimization Done.
