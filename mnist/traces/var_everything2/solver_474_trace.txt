I0428 19:45:33.188199 25826 caffe.cpp:218] Using GPUs 0
I0428 19:45:33.225286 25826 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:45:33.676026 25826 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test474.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:45:33.676165 25826 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test474.prototxt
I0428 19:45:33.676465 25826 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:45:33.676482 25826 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:45:33.676560 25826 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:33.676642 25826 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:33.676743 25826 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:45:33.676784 25826 net.cpp:86] Creating Layer mnist
I0428 19:45:33.676795 25826 net.cpp:382] mnist -> data
I0428 19:45:33.676842 25826 net.cpp:382] mnist -> label
I0428 19:45:33.677836 25826 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:45:33.680099 25826 net.cpp:124] Setting up mnist
I0428 19:45:33.680132 25826 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:45:33.680140 25826 net.cpp:131] Top shape: 64 (64)
I0428 19:45:33.680146 25826 net.cpp:139] Memory required for data: 200960
I0428 19:45:33.680155 25826 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:33.680188 25826 net.cpp:86] Creating Layer conv0
I0428 19:45:33.680197 25826 net.cpp:408] conv0 <- data
I0428 19:45:33.680213 25826 net.cpp:382] conv0 -> conv0
I0428 19:45:33.917093 25826 net.cpp:124] Setting up conv0
I0428 19:45:33.917119 25826 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:45:33.917124 25826 net.cpp:139] Memory required for data: 495872
I0428 19:45:33.917167 25826 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:33.917186 25826 net.cpp:86] Creating Layer pool0
I0428 19:45:33.917192 25826 net.cpp:408] pool0 <- conv0
I0428 19:45:33.917201 25826 net.cpp:382] pool0 -> pool0
I0428 19:45:33.917250 25826 net.cpp:124] Setting up pool0
I0428 19:45:33.917259 25826 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:45:33.917263 25826 net.cpp:139] Memory required for data: 569600
I0428 19:45:33.917268 25826 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:33.917284 25826 net.cpp:86] Creating Layer conv1
I0428 19:45:33.917289 25826 net.cpp:408] conv1 <- pool0
I0428 19:45:33.917297 25826 net.cpp:382] conv1 -> conv1
I0428 19:45:33.920193 25826 net.cpp:124] Setting up conv1
I0428 19:45:33.920208 25826 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:45:33.920213 25826 net.cpp:139] Memory required for data: 2208000
I0428 19:45:33.920243 25826 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:33.920255 25826 net.cpp:86] Creating Layer pool1
I0428 19:45:33.920265 25826 net.cpp:408] pool1 <- conv1
I0428 19:45:33.920272 25826 net.cpp:382] pool1 -> pool1
I0428 19:45:33.920316 25826 net.cpp:124] Setting up pool1
I0428 19:45:33.920325 25826 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:45:33.920330 25826 net.cpp:139] Memory required for data: 2617600
I0428 19:45:33.920333 25826 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:33.920346 25826 net.cpp:86] Creating Layer ip1
I0428 19:45:33.920353 25826 net.cpp:408] ip1 <- pool1
I0428 19:45:33.920361 25826 net.cpp:382] ip1 -> ip1
I0428 19:45:33.920696 25826 net.cpp:124] Setting up ip1
I0428 19:45:33.920706 25826 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:45:33.920709 25826 net.cpp:139] Memory required for data: 2624000
I0428 19:45:33.920722 25826 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:33.920732 25826 net.cpp:86] Creating Layer relu1
I0428 19:45:33.920740 25826 net.cpp:408] relu1 <- ip1
I0428 19:45:33.920749 25826 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:33.920974 25826 net.cpp:124] Setting up relu1
I0428 19:45:33.920984 25826 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:45:33.920989 25826 net.cpp:139] Memory required for data: 2630400
I0428 19:45:33.920994 25826 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:33.921005 25826 net.cpp:86] Creating Layer ip2
I0428 19:45:33.921010 25826 net.cpp:408] ip2 <- ip1
I0428 19:45:33.921018 25826 net.cpp:382] ip2 -> ip2
I0428 19:45:33.921121 25826 net.cpp:124] Setting up ip2
I0428 19:45:33.921129 25826 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:33.921134 25826 net.cpp:139] Memory required for data: 2632960
I0428 19:45:33.921157 25826 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:33.921185 25826 net.cpp:86] Creating Layer relu2
I0428 19:45:33.921205 25826 net.cpp:408] relu2 <- ip2
I0428 19:45:33.921211 25826 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:33.921968 25826 net.cpp:124] Setting up relu2
I0428 19:45:33.921983 25826 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:33.921986 25826 net.cpp:139] Memory required for data: 2635520
I0428 19:45:33.921993 25826 layer_factory.hpp:77] Creating layer loss
I0428 19:45:33.922003 25826 net.cpp:86] Creating Layer loss
I0428 19:45:33.922008 25826 net.cpp:408] loss <- ip2
I0428 19:45:33.922014 25826 net.cpp:408] loss <- label
I0428 19:45:33.922022 25826 net.cpp:382] loss -> loss
I0428 19:45:33.922060 25826 layer_factory.hpp:77] Creating layer loss
I0428 19:45:33.922307 25826 net.cpp:124] Setting up loss
I0428 19:45:33.922318 25826 net.cpp:131] Top shape: (1)
I0428 19:45:33.922323 25826 net.cpp:134]     with loss weight 1
I0428 19:45:33.922341 25826 net.cpp:139] Memory required for data: 2635524
I0428 19:45:33.922346 25826 net.cpp:200] loss needs backward computation.
I0428 19:45:33.922353 25826 net.cpp:200] relu2 needs backward computation.
I0428 19:45:33.922356 25826 net.cpp:200] ip2 needs backward computation.
I0428 19:45:33.922361 25826 net.cpp:200] relu1 needs backward computation.
I0428 19:45:33.922365 25826 net.cpp:200] ip1 needs backward computation.
I0428 19:45:33.922381 25826 net.cpp:200] pool1 needs backward computation.
I0428 19:45:33.922386 25826 net.cpp:200] conv1 needs backward computation.
I0428 19:45:33.922391 25826 net.cpp:200] pool0 needs backward computation.
I0428 19:45:33.922395 25826 net.cpp:200] conv0 needs backward computation.
I0428 19:45:33.922400 25826 net.cpp:202] mnist does not need backward computation.
I0428 19:45:33.922421 25826 net.cpp:244] This network produces output loss
I0428 19:45:33.922435 25826 net.cpp:257] Network initialization done.
I0428 19:45:33.922775 25826 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test474.prototxt
I0428 19:45:33.922807 25826 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:45:33.922926 25826 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:33.923022 25826 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:33.923076 25826 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:45:33.923094 25826 net.cpp:86] Creating Layer mnist
I0428 19:45:33.923102 25826 net.cpp:382] mnist -> data
I0428 19:45:33.923113 25826 net.cpp:382] mnist -> label
I0428 19:45:33.923240 25826 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:45:33.925287 25826 net.cpp:124] Setting up mnist
I0428 19:45:33.925317 25826 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:45:33.925324 25826 net.cpp:131] Top shape: 100 (100)
I0428 19:45:33.925329 25826 net.cpp:139] Memory required for data: 314000
I0428 19:45:33.925335 25826 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:45:33.925359 25826 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:45:33.925366 25826 net.cpp:408] label_mnist_1_split <- label
I0428 19:45:33.925374 25826 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:45:33.925384 25826 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:45:33.925484 25826 net.cpp:124] Setting up label_mnist_1_split
I0428 19:45:33.925503 25826 net.cpp:131] Top shape: 100 (100)
I0428 19:45:33.925510 25826 net.cpp:131] Top shape: 100 (100)
I0428 19:45:33.925515 25826 net.cpp:139] Memory required for data: 314800
I0428 19:45:33.925520 25826 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:33.925536 25826 net.cpp:86] Creating Layer conv0
I0428 19:45:33.925544 25826 net.cpp:408] conv0 <- data
I0428 19:45:33.925554 25826 net.cpp:382] conv0 -> conv0
I0428 19:45:33.927168 25826 net.cpp:124] Setting up conv0
I0428 19:45:33.927183 25826 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:45:33.927189 25826 net.cpp:139] Memory required for data: 775600
I0428 19:45:33.927203 25826 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:33.927212 25826 net.cpp:86] Creating Layer pool0
I0428 19:45:33.927219 25826 net.cpp:408] pool0 <- conv0
I0428 19:45:33.927230 25826 net.cpp:382] pool0 -> pool0
I0428 19:45:33.927271 25826 net.cpp:124] Setting up pool0
I0428 19:45:33.927280 25826 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:45:33.927284 25826 net.cpp:139] Memory required for data: 890800
I0428 19:45:33.927289 25826 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:33.927306 25826 net.cpp:86] Creating Layer conv1
I0428 19:45:33.927311 25826 net.cpp:408] conv1 <- pool0
I0428 19:45:33.927320 25826 net.cpp:382] conv1 -> conv1
I0428 19:45:33.929152 25826 net.cpp:124] Setting up conv1
I0428 19:45:33.929181 25826 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:45:33.929186 25826 net.cpp:139] Memory required for data: 3450800
I0428 19:45:33.929214 25826 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:33.929224 25826 net.cpp:86] Creating Layer pool1
I0428 19:45:33.929230 25826 net.cpp:408] pool1 <- conv1
I0428 19:45:33.929239 25826 net.cpp:382] pool1 -> pool1
I0428 19:45:33.929283 25826 net.cpp:124] Setting up pool1
I0428 19:45:33.929292 25826 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:45:33.929297 25826 net.cpp:139] Memory required for data: 4090800
I0428 19:45:33.929302 25826 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:33.929327 25826 net.cpp:86] Creating Layer ip1
I0428 19:45:33.929334 25826 net.cpp:408] ip1 <- pool1
I0428 19:45:33.929344 25826 net.cpp:382] ip1 -> ip1
I0428 19:45:33.929693 25826 net.cpp:124] Setting up ip1
I0428 19:45:33.929705 25826 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:45:33.929711 25826 net.cpp:139] Memory required for data: 4100800
I0428 19:45:33.929723 25826 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:33.929733 25826 net.cpp:86] Creating Layer relu1
I0428 19:45:33.929738 25826 net.cpp:408] relu1 <- ip1
I0428 19:45:33.929745 25826 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:33.929986 25826 net.cpp:124] Setting up relu1
I0428 19:45:33.929998 25826 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:45:33.930003 25826 net.cpp:139] Memory required for data: 4110800
I0428 19:45:33.930008 25826 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:33.930019 25826 net.cpp:86] Creating Layer ip2
I0428 19:45:33.930024 25826 net.cpp:408] ip2 <- ip1
I0428 19:45:33.930037 25826 net.cpp:382] ip2 -> ip2
I0428 19:45:33.930146 25826 net.cpp:124] Setting up ip2
I0428 19:45:33.930155 25826 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:33.930160 25826 net.cpp:139] Memory required for data: 4114800
I0428 19:45:33.930168 25826 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:33.930176 25826 net.cpp:86] Creating Layer relu2
I0428 19:45:33.930181 25826 net.cpp:408] relu2 <- ip2
I0428 19:45:33.930205 25826 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:33.930393 25826 net.cpp:124] Setting up relu2
I0428 19:45:33.930403 25826 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:33.930409 25826 net.cpp:139] Memory required for data: 4118800
I0428 19:45:33.930415 25826 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:45:33.930423 25826 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:45:33.930429 25826 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:45:33.930438 25826 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:45:33.930459 25826 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:45:33.930505 25826 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:45:33.930527 25826 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:33.930536 25826 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:33.930541 25826 net.cpp:139] Memory required for data: 4126800
I0428 19:45:33.930558 25826 layer_factory.hpp:77] Creating layer accuracy
I0428 19:45:33.930565 25826 net.cpp:86] Creating Layer accuracy
I0428 19:45:33.930572 25826 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:45:33.930577 25826 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:45:33.930585 25826 net.cpp:382] accuracy -> accuracy
I0428 19:45:33.930596 25826 net.cpp:124] Setting up accuracy
I0428 19:45:33.930603 25826 net.cpp:131] Top shape: (1)
I0428 19:45:33.930608 25826 net.cpp:139] Memory required for data: 4126804
I0428 19:45:33.930614 25826 layer_factory.hpp:77] Creating layer loss
I0428 19:45:33.930624 25826 net.cpp:86] Creating Layer loss
I0428 19:45:33.930629 25826 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:45:33.930635 25826 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:45:33.930642 25826 net.cpp:382] loss -> loss
I0428 19:45:33.930651 25826 layer_factory.hpp:77] Creating layer loss
I0428 19:45:33.930893 25826 net.cpp:124] Setting up loss
I0428 19:45:33.930903 25826 net.cpp:131] Top shape: (1)
I0428 19:45:33.930908 25826 net.cpp:134]     with loss weight 1
I0428 19:45:33.930917 25826 net.cpp:139] Memory required for data: 4126808
I0428 19:45:33.930922 25826 net.cpp:200] loss needs backward computation.
I0428 19:45:33.930927 25826 net.cpp:202] accuracy does not need backward computation.
I0428 19:45:33.930933 25826 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:45:33.930938 25826 net.cpp:200] relu2 needs backward computation.
I0428 19:45:33.930950 25826 net.cpp:200] ip2 needs backward computation.
I0428 19:45:33.930955 25826 net.cpp:200] relu1 needs backward computation.
I0428 19:45:33.930959 25826 net.cpp:200] ip1 needs backward computation.
I0428 19:45:33.930964 25826 net.cpp:200] pool1 needs backward computation.
I0428 19:45:33.930968 25826 net.cpp:200] conv1 needs backward computation.
I0428 19:45:33.930974 25826 net.cpp:200] pool0 needs backward computation.
I0428 19:45:33.930979 25826 net.cpp:200] conv0 needs backward computation.
I0428 19:45:33.930984 25826 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:45:33.930989 25826 net.cpp:202] mnist does not need backward computation.
I0428 19:45:33.930994 25826 net.cpp:244] This network produces output accuracy
I0428 19:45:33.930999 25826 net.cpp:244] This network produces output loss
I0428 19:45:33.931015 25826 net.cpp:257] Network initialization done.
I0428 19:45:33.931069 25826 solver.cpp:56] Solver scaffolding done.
I0428 19:45:33.931346 25826 caffe.cpp:248] Starting Optimization
I0428 19:45:33.931354 25826 solver.cpp:273] Solving LeNet
I0428 19:45:33.931357 25826 solver.cpp:274] Learning Rate Policy: inv
I0428 19:45:33.931519 25826 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:45:33.936396 25826 blocking_queue.cpp:49] Waiting for data
I0428 19:45:34.004200 25833 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:34.004784 25826 solver.cpp:398]     Test net output #0: accuracy = 0.1265
I0428 19:45:34.004813 25826 solver.cpp:398]     Test net output #1: loss = 2.29936 (* 1 = 2.29936 loss)
I0428 19:45:34.008568 25826 solver.cpp:219] Iteration 0 (0 iter/s, 0.0771703s/100 iters), loss = 2.31009
I0428 19:45:34.008594 25826 solver.cpp:238]     Train net output #0: loss = 2.31009 (* 1 = 2.31009 loss)
I0428 19:45:34.008625 25826 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:45:34.154794 25826 solver.cpp:219] Iteration 100 (684.072 iter/s, 0.146183s/100 iters), loss = 1.33284
I0428 19:45:34.154830 25826 solver.cpp:238]     Train net output #0: loss = 1.33284 (* 1 = 1.33284 loss)
I0428 19:45:34.154841 25826 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:45:34.308706 25826 solver.cpp:219] Iteration 200 (649.928 iter/s, 0.153863s/100 iters), loss = 0.307566
I0428 19:45:34.308768 25826 solver.cpp:238]     Train net output #0: loss = 0.307566 (* 1 = 0.307566 loss)
I0428 19:45:34.308785 25826 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:34.476007 25826 solver.cpp:219] Iteration 300 (597.981 iter/s, 0.167229s/100 iters), loss = 0.592792
I0428 19:45:34.476054 25826 solver.cpp:238]     Train net output #0: loss = 0.592792 (* 1 = 0.592792 loss)
I0428 19:45:34.476071 25826 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:34.642051 25826 solver.cpp:219] Iteration 400 (602.456 iter/s, 0.165987s/100 iters), loss = 0.20784
I0428 19:45:34.642099 25826 solver.cpp:238]     Train net output #0: loss = 0.20784 (* 1 = 0.20784 loss)
I0428 19:45:34.642117 25826 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:34.810117 25826 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:34.866998 25833 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:34.868770 25826 solver.cpp:398]     Test net output #0: accuracy = 0.8664
I0428 19:45:34.868800 25826 solver.cpp:398]     Test net output #1: loss = 0.349255 (* 1 = 0.349255 loss)
I0428 19:45:34.870245 25826 solver.cpp:219] Iteration 500 (438.335 iter/s, 0.228136s/100 iters), loss = 0.210998
I0428 19:45:34.870280 25826 solver.cpp:238]     Train net output #0: loss = 0.210998 (* 1 = 0.210998 loss)
I0428 19:45:34.870293 25826 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:35.033994 25826 solver.cpp:219] Iteration 600 (610.866 iter/s, 0.163702s/100 iters), loss = 0.403619
I0428 19:45:35.034041 25826 solver.cpp:238]     Train net output #0: loss = 0.403619 (* 1 = 0.403619 loss)
I0428 19:45:35.034067 25826 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:35.202457 25826 solver.cpp:219] Iteration 700 (593.807 iter/s, 0.168405s/100 iters), loss = 0.492609
I0428 19:45:35.202507 25826 solver.cpp:238]     Train net output #0: loss = 0.492609 (* 1 = 0.492609 loss)
I0428 19:45:35.202525 25826 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:35.374544 25826 solver.cpp:219] Iteration 800 (581.305 iter/s, 0.172027s/100 iters), loss = 0.416856
I0428 19:45:35.374596 25826 solver.cpp:238]     Train net output #0: loss = 0.416856 (* 1 = 0.416856 loss)
I0428 19:45:35.374614 25826 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:35.543751 25826 solver.cpp:219] Iteration 900 (591.208 iter/s, 0.169145s/100 iters), loss = 0.43711
I0428 19:45:35.543798 25826 solver.cpp:238]     Train net output #0: loss = 0.43711 (* 1 = 0.43711 loss)
I0428 19:45:35.543815 25826 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:35.598986 25832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:35.708925 25826 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:35.711184 25826 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:35.712291 25826 solver.cpp:311] Iteration 1000, loss = 0.423133
I0428 19:45:35.712314 25826 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:35.766921 25833 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:35.768759 25826 solver.cpp:398]     Test net output #0: accuracy = 0.8767
I0428 19:45:35.768786 25826 solver.cpp:398]     Test net output #1: loss = 0.313448 (* 1 = 0.313448 loss)
I0428 19:45:35.768815 25826 solver.cpp:316] Optimization Done.
I0428 19:45:35.768823 25826 caffe.cpp:259] Optimization Done.
