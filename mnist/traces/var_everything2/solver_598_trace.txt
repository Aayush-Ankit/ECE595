I0428 19:50:13.098883 26959 caffe.cpp:218] Using GPUs 0
I0428 19:50:13.131217 26959 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:13.597528 26959 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test598.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:13.597658 26959 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test598.prototxt
I0428 19:50:13.598024 26959 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:13.598054 26959 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:13.598160 26959 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:13.598217 26959 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:13.598299 26959 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:13.598316 26959 net.cpp:86] Creating Layer mnist
I0428 19:50:13.598322 26959 net.cpp:382] mnist -> data
I0428 19:50:13.598340 26959 net.cpp:382] mnist -> label
I0428 19:50:13.599246 26959 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:13.601433 26959 net.cpp:124] Setting up mnist
I0428 19:50:13.601464 26959 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:13.601467 26959 net.cpp:131] Top shape: 64 (64)
I0428 19:50:13.601471 26959 net.cpp:139] Memory required for data: 200960
I0428 19:50:13.601477 26959 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:13.601490 26959 net.cpp:86] Creating Layer conv0
I0428 19:50:13.601522 26959 net.cpp:408] conv0 <- data
I0428 19:50:13.601532 26959 net.cpp:382] conv0 -> conv0
I0428 19:50:13.829879 26959 net.cpp:124] Setting up conv0
I0428 19:50:13.829905 26959 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:13.829910 26959 net.cpp:139] Memory required for data: 938240
I0428 19:50:13.829922 26959 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:13.829933 26959 net.cpp:86] Creating Layer pool0
I0428 19:50:13.829937 26959 net.cpp:408] pool0 <- conv0
I0428 19:50:13.829942 26959 net.cpp:382] pool0 -> pool0
I0428 19:50:13.830001 26959 net.cpp:124] Setting up pool0
I0428 19:50:13.830006 26959 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:13.830009 26959 net.cpp:139] Memory required for data: 1122560
I0428 19:50:13.830013 26959 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:13.830023 26959 net.cpp:86] Creating Layer conv1
I0428 19:50:13.830025 26959 net.cpp:408] conv1 <- pool0
I0428 19:50:13.830030 26959 net.cpp:382] conv1 -> conv1
I0428 19:50:13.832865 26959 net.cpp:124] Setting up conv1
I0428 19:50:13.832880 26959 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:13.832898 26959 net.cpp:139] Memory required for data: 1286400
I0428 19:50:13.832906 26959 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:13.832913 26959 net.cpp:86] Creating Layer pool1
I0428 19:50:13.832917 26959 net.cpp:408] pool1 <- conv1
I0428 19:50:13.832921 26959 net.cpp:382] pool1 -> pool1
I0428 19:50:13.832974 26959 net.cpp:124] Setting up pool1
I0428 19:50:13.832980 26959 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:13.832998 26959 net.cpp:139] Memory required for data: 1327360
I0428 19:50:13.833000 26959 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:13.833008 26959 net.cpp:86] Creating Layer ip1
I0428 19:50:13.833010 26959 net.cpp:408] ip1 <- pool1
I0428 19:50:13.833014 26959 net.cpp:382] ip1 -> ip1
I0428 19:50:13.833117 26959 net.cpp:124] Setting up ip1
I0428 19:50:13.833124 26959 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:13.833127 26959 net.cpp:139] Memory required for data: 1329920
I0428 19:50:13.833134 26959 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:13.833140 26959 net.cpp:86] Creating Layer relu1
I0428 19:50:13.833143 26959 net.cpp:408] relu1 <- ip1
I0428 19:50:13.833148 26959 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:13.833302 26959 net.cpp:124] Setting up relu1
I0428 19:50:13.833312 26959 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:13.833314 26959 net.cpp:139] Memory required for data: 1332480
I0428 19:50:13.833317 26959 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:13.833323 26959 net.cpp:86] Creating Layer ip2
I0428 19:50:13.833325 26959 net.cpp:408] ip2 <- ip1
I0428 19:50:13.833330 26959 net.cpp:382] ip2 -> ip2
I0428 19:50:13.833417 26959 net.cpp:124] Setting up ip2
I0428 19:50:13.833425 26959 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:13.833428 26959 net.cpp:139] Memory required for data: 1335040
I0428 19:50:13.833433 26959 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:13.833438 26959 net.cpp:86] Creating Layer relu2
I0428 19:50:13.833441 26959 net.cpp:408] relu2 <- ip2
I0428 19:50:13.833446 26959 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:13.834199 26959 net.cpp:124] Setting up relu2
I0428 19:50:13.834211 26959 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:13.834230 26959 net.cpp:139] Memory required for data: 1337600
I0428 19:50:13.834234 26959 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:13.834240 26959 net.cpp:86] Creating Layer ip3
I0428 19:50:13.834245 26959 net.cpp:408] ip3 <- ip2
I0428 19:50:13.834250 26959 net.cpp:382] ip3 -> ip3
I0428 19:50:13.834375 26959 net.cpp:124] Setting up ip3
I0428 19:50:13.834383 26959 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:13.834386 26959 net.cpp:139] Memory required for data: 1340160
I0428 19:50:13.834394 26959 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:13.834399 26959 net.cpp:86] Creating Layer relu3
I0428 19:50:13.834401 26959 net.cpp:408] relu3 <- ip3
I0428 19:50:13.834405 26959 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:13.834561 26959 net.cpp:124] Setting up relu3
I0428 19:50:13.834569 26959 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:13.834573 26959 net.cpp:139] Memory required for data: 1342720
I0428 19:50:13.834575 26959 layer_factory.hpp:77] Creating layer loss
I0428 19:50:13.834581 26959 net.cpp:86] Creating Layer loss
I0428 19:50:13.834584 26959 net.cpp:408] loss <- ip3
I0428 19:50:13.834588 26959 net.cpp:408] loss <- label
I0428 19:50:13.834592 26959 net.cpp:382] loss -> loss
I0428 19:50:13.834609 26959 layer_factory.hpp:77] Creating layer loss
I0428 19:50:13.834867 26959 net.cpp:124] Setting up loss
I0428 19:50:13.834877 26959 net.cpp:131] Top shape: (1)
I0428 19:50:13.834880 26959 net.cpp:134]     with loss weight 1
I0428 19:50:13.834895 26959 net.cpp:139] Memory required for data: 1342724
I0428 19:50:13.834898 26959 net.cpp:200] loss needs backward computation.
I0428 19:50:13.834903 26959 net.cpp:200] relu3 needs backward computation.
I0428 19:50:13.834905 26959 net.cpp:200] ip3 needs backward computation.
I0428 19:50:13.834908 26959 net.cpp:200] relu2 needs backward computation.
I0428 19:50:13.834911 26959 net.cpp:200] ip2 needs backward computation.
I0428 19:50:13.834914 26959 net.cpp:200] relu1 needs backward computation.
I0428 19:50:13.834916 26959 net.cpp:200] ip1 needs backward computation.
I0428 19:50:13.834919 26959 net.cpp:200] pool1 needs backward computation.
I0428 19:50:13.834923 26959 net.cpp:200] conv1 needs backward computation.
I0428 19:50:13.834926 26959 net.cpp:200] pool0 needs backward computation.
I0428 19:50:13.834929 26959 net.cpp:200] conv0 needs backward computation.
I0428 19:50:13.834933 26959 net.cpp:202] mnist does not need backward computation.
I0428 19:50:13.834935 26959 net.cpp:244] This network produces output loss
I0428 19:50:13.834945 26959 net.cpp:257] Network initialization done.
I0428 19:50:13.835309 26959 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test598.prototxt
I0428 19:50:13.835351 26959 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:13.835443 26959 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:13.835522 26959 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:13.835568 26959 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:13.835582 26959 net.cpp:86] Creating Layer mnist
I0428 19:50:13.835597 26959 net.cpp:382] mnist -> data
I0428 19:50:13.835605 26959 net.cpp:382] mnist -> label
I0428 19:50:13.835700 26959 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:13.837682 26959 net.cpp:124] Setting up mnist
I0428 19:50:13.837710 26959 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:13.837715 26959 net.cpp:131] Top shape: 100 (100)
I0428 19:50:13.837734 26959 net.cpp:139] Memory required for data: 314000
I0428 19:50:13.837738 26959 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:13.837744 26959 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:13.837748 26959 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:13.837752 26959 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:13.837759 26959 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:13.837807 26959 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:13.837813 26959 net.cpp:131] Top shape: 100 (100)
I0428 19:50:13.837817 26959 net.cpp:131] Top shape: 100 (100)
I0428 19:50:13.837821 26959 net.cpp:139] Memory required for data: 314800
I0428 19:50:13.837823 26959 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:13.837831 26959 net.cpp:86] Creating Layer conv0
I0428 19:50:13.837834 26959 net.cpp:408] conv0 <- data
I0428 19:50:13.837838 26959 net.cpp:382] conv0 -> conv0
I0428 19:50:13.839470 26959 net.cpp:124] Setting up conv0
I0428 19:50:13.839511 26959 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:13.839514 26959 net.cpp:139] Memory required for data: 1466800
I0428 19:50:13.839539 26959 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:13.839545 26959 net.cpp:86] Creating Layer pool0
I0428 19:50:13.839548 26959 net.cpp:408] pool0 <- conv0
I0428 19:50:13.839553 26959 net.cpp:382] pool0 -> pool0
I0428 19:50:13.839587 26959 net.cpp:124] Setting up pool0
I0428 19:50:13.839593 26959 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:13.839596 26959 net.cpp:139] Memory required for data: 1754800
I0428 19:50:13.839598 26959 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:13.839607 26959 net.cpp:86] Creating Layer conv1
I0428 19:50:13.839609 26959 net.cpp:408] conv1 <- pool0
I0428 19:50:13.839614 26959 net.cpp:382] conv1 -> conv1
I0428 19:50:13.841635 26959 net.cpp:124] Setting up conv1
I0428 19:50:13.841648 26959 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:13.841652 26959 net.cpp:139] Memory required for data: 2010800
I0428 19:50:13.841660 26959 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:13.841682 26959 net.cpp:86] Creating Layer pool1
I0428 19:50:13.841694 26959 net.cpp:408] pool1 <- conv1
I0428 19:50:13.841699 26959 net.cpp:382] pool1 -> pool1
I0428 19:50:13.841738 26959 net.cpp:124] Setting up pool1
I0428 19:50:13.841744 26959 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:13.841747 26959 net.cpp:139] Memory required for data: 2074800
I0428 19:50:13.841750 26959 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:13.841768 26959 net.cpp:86] Creating Layer ip1
I0428 19:50:13.841771 26959 net.cpp:408] ip1 <- pool1
I0428 19:50:13.841775 26959 net.cpp:382] ip1 -> ip1
I0428 19:50:13.841888 26959 net.cpp:124] Setting up ip1
I0428 19:50:13.841897 26959 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:13.841909 26959 net.cpp:139] Memory required for data: 2078800
I0428 19:50:13.841924 26959 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:13.841935 26959 net.cpp:86] Creating Layer relu1
I0428 19:50:13.841938 26959 net.cpp:408] relu1 <- ip1
I0428 19:50:13.841943 26959 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:13.842104 26959 net.cpp:124] Setting up relu1
I0428 19:50:13.842113 26959 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:13.842116 26959 net.cpp:139] Memory required for data: 2082800
I0428 19:50:13.842137 26959 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:13.842144 26959 net.cpp:86] Creating Layer ip2
I0428 19:50:13.842149 26959 net.cpp:408] ip2 <- ip1
I0428 19:50:13.842154 26959 net.cpp:382] ip2 -> ip2
I0428 19:50:13.842257 26959 net.cpp:124] Setting up ip2
I0428 19:50:13.842264 26959 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:13.842267 26959 net.cpp:139] Memory required for data: 2086800
I0428 19:50:13.842272 26959 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:13.842278 26959 net.cpp:86] Creating Layer relu2
I0428 19:50:13.842279 26959 net.cpp:408] relu2 <- ip2
I0428 19:50:13.842284 26959 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:13.842461 26959 net.cpp:124] Setting up relu2
I0428 19:50:13.842485 26959 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:13.842489 26959 net.cpp:139] Memory required for data: 2090800
I0428 19:50:13.842492 26959 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:13.842497 26959 net.cpp:86] Creating Layer ip3
I0428 19:50:13.842501 26959 net.cpp:408] ip3 <- ip2
I0428 19:50:13.842507 26959 net.cpp:382] ip3 -> ip3
I0428 19:50:13.842607 26959 net.cpp:124] Setting up ip3
I0428 19:50:13.842615 26959 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:13.842619 26959 net.cpp:139] Memory required for data: 2094800
I0428 19:50:13.842639 26959 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:13.842645 26959 net.cpp:86] Creating Layer relu3
I0428 19:50:13.842648 26959 net.cpp:408] relu3 <- ip3
I0428 19:50:13.842653 26959 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:13.843533 26959 net.cpp:124] Setting up relu3
I0428 19:50:13.843546 26959 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:13.843549 26959 net.cpp:139] Memory required for data: 2098800
I0428 19:50:13.843554 26959 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:13.843559 26959 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:13.843562 26959 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:13.843567 26959 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:13.843575 26959 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:13.843616 26959 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:13.843622 26959 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:13.843626 26959 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:13.843629 26959 net.cpp:139] Memory required for data: 2106800
I0428 19:50:13.843632 26959 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:13.843637 26959 net.cpp:86] Creating Layer accuracy
I0428 19:50:13.843641 26959 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:13.843646 26959 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:13.843649 26959 net.cpp:382] accuracy -> accuracy
I0428 19:50:13.843657 26959 net.cpp:124] Setting up accuracy
I0428 19:50:13.843662 26959 net.cpp:131] Top shape: (1)
I0428 19:50:13.843665 26959 net.cpp:139] Memory required for data: 2106804
I0428 19:50:13.843668 26959 layer_factory.hpp:77] Creating layer loss
I0428 19:50:13.843672 26959 net.cpp:86] Creating Layer loss
I0428 19:50:13.843683 26959 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:13.843686 26959 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:13.843691 26959 net.cpp:382] loss -> loss
I0428 19:50:13.843698 26959 layer_factory.hpp:77] Creating layer loss
I0428 19:50:13.843946 26959 net.cpp:124] Setting up loss
I0428 19:50:13.843956 26959 net.cpp:131] Top shape: (1)
I0428 19:50:13.843961 26959 net.cpp:134]     with loss weight 1
I0428 19:50:13.843966 26959 net.cpp:139] Memory required for data: 2106808
I0428 19:50:13.843986 26959 net.cpp:200] loss needs backward computation.
I0428 19:50:13.843991 26959 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:13.844014 26959 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:13.844017 26959 net.cpp:200] relu3 needs backward computation.
I0428 19:50:13.844027 26959 net.cpp:200] ip3 needs backward computation.
I0428 19:50:13.844029 26959 net.cpp:200] relu2 needs backward computation.
I0428 19:50:13.844032 26959 net.cpp:200] ip2 needs backward computation.
I0428 19:50:13.844034 26959 net.cpp:200] relu1 needs backward computation.
I0428 19:50:13.844043 26959 net.cpp:200] ip1 needs backward computation.
I0428 19:50:13.844046 26959 net.cpp:200] pool1 needs backward computation.
I0428 19:50:13.844049 26959 net.cpp:200] conv1 needs backward computation.
I0428 19:50:13.844058 26959 net.cpp:200] pool0 needs backward computation.
I0428 19:50:13.844060 26959 net.cpp:200] conv0 needs backward computation.
I0428 19:50:13.844064 26959 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:13.844069 26959 net.cpp:202] mnist does not need backward computation.
I0428 19:50:13.844071 26959 net.cpp:244] This network produces output accuracy
I0428 19:50:13.844075 26959 net.cpp:244] This network produces output loss
I0428 19:50:13.844084 26959 net.cpp:257] Network initialization done.
I0428 19:50:13.844135 26959 solver.cpp:56] Solver scaffolding done.
I0428 19:50:13.844473 26959 caffe.cpp:248] Starting Optimization
I0428 19:50:13.844481 26959 solver.cpp:273] Solving LeNet
I0428 19:50:13.844483 26959 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:13.844645 26959 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:13.848561 26959 blocking_queue.cpp:49] Waiting for data
I0428 19:50:13.920341 26966 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:13.920874 26959 solver.cpp:398]     Test net output #0: accuracy = 0.067
I0428 19:50:13.920892 26959 solver.cpp:398]     Test net output #1: loss = 2.30488 (* 1 = 2.30488 loss)
I0428 19:50:13.922732 26959 solver.cpp:219] Iteration 0 (0 iter/s, 0.0782244s/100 iters), loss = 2.30895
I0428 19:50:13.922770 26959 solver.cpp:238]     Train net output #0: loss = 2.30895 (* 1 = 2.30895 loss)
I0428 19:50:13.922797 26959 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:14.001888 26959 solver.cpp:219] Iteration 100 (1264.09 iter/s, 0.0791081s/100 iters), loss = 1.71971
I0428 19:50:14.001911 26959 solver.cpp:238]     Train net output #0: loss = 1.71971 (* 1 = 1.71971 loss)
I0428 19:50:14.001917 26959 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:14.078215 26959 solver.cpp:219] Iteration 200 (1310.73 iter/s, 0.0762933s/100 iters), loss = 0.786328
I0428 19:50:14.078238 26959 solver.cpp:238]     Train net output #0: loss = 0.786328 (* 1 = 0.786328 loss)
I0428 19:50:14.078259 26959 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:14.155136 26959 solver.cpp:219] Iteration 300 (1300.57 iter/s, 0.0768891s/100 iters), loss = 0.917593
I0428 19:50:14.155158 26959 solver.cpp:238]     Train net output #0: loss = 0.917593 (* 1 = 0.917593 loss)
I0428 19:50:14.155179 26959 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:14.229701 26959 solver.cpp:219] Iteration 400 (1341.67 iter/s, 0.0745339s/100 iters), loss = 1.00492
I0428 19:50:14.229724 26959 solver.cpp:238]     Train net output #0: loss = 1.00492 (* 1 = 1.00492 loss)
I0428 19:50:14.229730 26959 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:14.302718 26959 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:14.377696 26966 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:14.378173 26959 solver.cpp:398]     Test net output #0: accuracy = 0.8253
I0428 19:50:14.378191 26959 solver.cpp:398]     Test net output #1: loss = 0.550768 (* 1 = 0.550768 loss)
I0428 19:50:14.379030 26959 solver.cpp:219] Iteration 500 (669.819 iter/s, 0.149294s/100 iters), loss = 0.689446
I0428 19:50:14.379051 26959 solver.cpp:238]     Train net output #0: loss = 0.689446 (* 1 = 0.689446 loss)
I0428 19:50:14.379071 26959 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:14.460574 26959 solver.cpp:219] Iteration 600 (1226.79 iter/s, 0.0815136s/100 iters), loss = 0.277849
I0428 19:50:14.460597 26959 solver.cpp:238]     Train net output #0: loss = 0.277849 (* 1 = 0.277849 loss)
I0428 19:50:14.460603 26959 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:14.537715 26959 solver.cpp:219] Iteration 700 (1296.86 iter/s, 0.0771092s/100 iters), loss = 0.533188
I0428 19:50:14.537739 26959 solver.cpp:238]     Train net output #0: loss = 0.533188 (* 1 = 0.533188 loss)
I0428 19:50:14.537744 26959 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:14.626289 26959 solver.cpp:219] Iteration 800 (1129.46 iter/s, 0.0885381s/100 iters), loss = 0.744068
I0428 19:50:14.626351 26959 solver.cpp:238]     Train net output #0: loss = 0.744068 (* 1 = 0.744068 loss)
I0428 19:50:14.626363 26959 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:14.710258 26959 solver.cpp:219] Iteration 900 (1191.9 iter/s, 0.0838995s/100 iters), loss = 0.335871
I0428 19:50:14.710288 26959 solver.cpp:238]     Train net output #0: loss = 0.335871 (* 1 = 0.335871 loss)
I0428 19:50:14.710294 26959 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:14.736374 26965 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:14.787246 26959 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:14.787968 26959 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:14.788431 26959 solver.cpp:311] Iteration 1000, loss = 0.352175
I0428 19:50:14.788449 26959 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:14.863983 26966 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:14.864768 26959 solver.cpp:398]     Test net output #0: accuracy = 0.857
I0428 19:50:14.864806 26959 solver.cpp:398]     Test net output #1: loss = 0.40557 (* 1 = 0.40557 loss)
I0428 19:50:14.864836 26959 solver.cpp:316] Optimization Done.
I0428 19:50:14.864843 26959 caffe.cpp:259] Optimization Done.
