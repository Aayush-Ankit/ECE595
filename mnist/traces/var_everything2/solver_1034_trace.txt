I0428 20:06:40.265061 30924 caffe.cpp:218] Using GPUs 0
I0428 20:06:40.302985 30924 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:40.813782 30924 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1034.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:40.813915 30924 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1034.prototxt
I0428 20:06:40.814323 30924 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:40.814342 30924 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:40.814448 30924 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:40.814527 30924 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:40.814616 30924 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:40.814640 30924 net.cpp:86] Creating Layer mnist
I0428 20:06:40.814647 30924 net.cpp:382] mnist -> data
I0428 20:06:40.814671 30924 net.cpp:382] mnist -> label
I0428 20:06:40.815793 30924 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:40.818349 30924 net.cpp:124] Setting up mnist
I0428 20:06:40.818369 30924 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:40.818377 30924 net.cpp:131] Top shape: 64 (64)
I0428 20:06:40.818379 30924 net.cpp:139] Memory required for data: 200960
I0428 20:06:40.818387 30924 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:40.818428 30924 net.cpp:86] Creating Layer conv0
I0428 20:06:40.818452 30924 net.cpp:408] conv0 <- data
I0428 20:06:40.818464 30924 net.cpp:382] conv0 -> conv0
I0428 20:06:41.066385 30924 net.cpp:124] Setting up conv0
I0428 20:06:41.066412 30924 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:41.066416 30924 net.cpp:139] Memory required for data: 3887360
I0428 20:06:41.066431 30924 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:41.066442 30924 net.cpp:86] Creating Layer pool0
I0428 20:06:41.066445 30924 net.cpp:408] pool0 <- conv0
I0428 20:06:41.066467 30924 net.cpp:382] pool0 -> pool0
I0428 20:06:41.066525 30924 net.cpp:124] Setting up pool0
I0428 20:06:41.066531 30924 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:41.066534 30924 net.cpp:139] Memory required for data: 4808960
I0428 20:06:41.066537 30924 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:41.066547 30924 net.cpp:86] Creating Layer conv1
I0428 20:06:41.066551 30924 net.cpp:408] conv1 <- pool0
I0428 20:06:41.066555 30924 net.cpp:382] conv1 -> conv1
I0428 20:06:41.069419 30924 net.cpp:124] Setting up conv1
I0428 20:06:41.069449 30924 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:41.069453 30924 net.cpp:139] Memory required for data: 4890880
I0428 20:06:41.069463 30924 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:41.069469 30924 net.cpp:86] Creating Layer pool1
I0428 20:06:41.069473 30924 net.cpp:408] pool1 <- conv1
I0428 20:06:41.069478 30924 net.cpp:382] pool1 -> pool1
I0428 20:06:41.069528 30924 net.cpp:124] Setting up pool1
I0428 20:06:41.069533 30924 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:41.069536 30924 net.cpp:139] Memory required for data: 4911360
I0428 20:06:41.069540 30924 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:41.069546 30924 net.cpp:86] Creating Layer ip1
I0428 20:06:41.069550 30924 net.cpp:408] ip1 <- pool1
I0428 20:06:41.069553 30924 net.cpp:382] ip1 -> ip1
I0428 20:06:41.069650 30924 net.cpp:124] Setting up ip1
I0428 20:06:41.069658 30924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:41.069661 30924 net.cpp:139] Memory required for data: 4913920
I0428 20:06:41.069669 30924 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:41.069674 30924 net.cpp:86] Creating Layer relu1
I0428 20:06:41.069677 30924 net.cpp:408] relu1 <- ip1
I0428 20:06:41.069681 30924 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:41.069855 30924 net.cpp:124] Setting up relu1
I0428 20:06:41.069864 30924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:41.069867 30924 net.cpp:139] Memory required for data: 4916480
I0428 20:06:41.069870 30924 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:41.069876 30924 net.cpp:86] Creating Layer ip2
I0428 20:06:41.069880 30924 net.cpp:408] ip2 <- ip1
I0428 20:06:41.069885 30924 net.cpp:382] ip2 -> ip2
I0428 20:06:41.069981 30924 net.cpp:124] Setting up ip2
I0428 20:06:41.069988 30924 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:41.069991 30924 net.cpp:139] Memory required for data: 4929280
I0428 20:06:41.069998 30924 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:41.070003 30924 net.cpp:86] Creating Layer relu2
I0428 20:06:41.070006 30924 net.cpp:408] relu2 <- ip2
I0428 20:06:41.070010 30924 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:41.070752 30924 net.cpp:124] Setting up relu2
I0428 20:06:41.070765 30924 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:06:41.070783 30924 net.cpp:139] Memory required for data: 4942080
I0428 20:06:41.070787 30924 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:41.070793 30924 net.cpp:86] Creating Layer ip3
I0428 20:06:41.070796 30924 net.cpp:408] ip3 <- ip2
I0428 20:06:41.070802 30924 net.cpp:382] ip3 -> ip3
I0428 20:06:41.070916 30924 net.cpp:124] Setting up ip3
I0428 20:06:41.070924 30924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:41.070927 30924 net.cpp:139] Memory required for data: 4944640
I0428 20:06:41.070935 30924 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:41.070940 30924 net.cpp:86] Creating Layer relu3
I0428 20:06:41.070942 30924 net.cpp:408] relu3 <- ip3
I0428 20:06:41.070946 30924 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:41.071135 30924 net.cpp:124] Setting up relu3
I0428 20:06:41.071146 30924 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:41.071149 30924 net.cpp:139] Memory required for data: 4947200
I0428 20:06:41.071153 30924 layer_factory.hpp:77] Creating layer loss
I0428 20:06:41.071159 30924 net.cpp:86] Creating Layer loss
I0428 20:06:41.071162 30924 net.cpp:408] loss <- ip3
I0428 20:06:41.071166 30924 net.cpp:408] loss <- label
I0428 20:06:41.071171 30924 net.cpp:382] loss -> loss
I0428 20:06:41.071200 30924 layer_factory.hpp:77] Creating layer loss
I0428 20:06:41.071437 30924 net.cpp:124] Setting up loss
I0428 20:06:41.071446 30924 net.cpp:131] Top shape: (1)
I0428 20:06:41.071449 30924 net.cpp:134]     with loss weight 1
I0428 20:06:41.071463 30924 net.cpp:139] Memory required for data: 4947204
I0428 20:06:41.071467 30924 net.cpp:200] loss needs backward computation.
I0428 20:06:41.071470 30924 net.cpp:200] relu3 needs backward computation.
I0428 20:06:41.071473 30924 net.cpp:200] ip3 needs backward computation.
I0428 20:06:41.071477 30924 net.cpp:200] relu2 needs backward computation.
I0428 20:06:41.071480 30924 net.cpp:200] ip2 needs backward computation.
I0428 20:06:41.071482 30924 net.cpp:200] relu1 needs backward computation.
I0428 20:06:41.071485 30924 net.cpp:200] ip1 needs backward computation.
I0428 20:06:41.071488 30924 net.cpp:200] pool1 needs backward computation.
I0428 20:06:41.071491 30924 net.cpp:200] conv1 needs backward computation.
I0428 20:06:41.071494 30924 net.cpp:200] pool0 needs backward computation.
I0428 20:06:41.071497 30924 net.cpp:200] conv0 needs backward computation.
I0428 20:06:41.071501 30924 net.cpp:202] mnist does not need backward computation.
I0428 20:06:41.071503 30924 net.cpp:244] This network produces output loss
I0428 20:06:41.071512 30924 net.cpp:257] Network initialization done.
I0428 20:06:41.071950 30924 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1034.prototxt
I0428 20:06:41.072012 30924 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:41.072108 30924 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:41.072221 30924 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:41.072264 30924 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:41.072280 30924 net.cpp:86] Creating Layer mnist
I0428 20:06:41.072284 30924 net.cpp:382] mnist -> data
I0428 20:06:41.072307 30924 net.cpp:382] mnist -> label
I0428 20:06:41.072387 30924 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:41.074410 30924 net.cpp:124] Setting up mnist
I0428 20:06:41.074455 30924 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:41.074460 30924 net.cpp:131] Top shape: 100 (100)
I0428 20:06:41.074463 30924 net.cpp:139] Memory required for data: 314000
I0428 20:06:41.074467 30924 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:41.074475 30924 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:41.074478 30924 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:41.074498 30924 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:41.074504 30924 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:41.074610 30924 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:41.074618 30924 net.cpp:131] Top shape: 100 (100)
I0428 20:06:41.074621 30924 net.cpp:131] Top shape: 100 (100)
I0428 20:06:41.074625 30924 net.cpp:139] Memory required for data: 314800
I0428 20:06:41.074627 30924 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:41.074635 30924 net.cpp:86] Creating Layer conv0
I0428 20:06:41.074638 30924 net.cpp:408] conv0 <- data
I0428 20:06:41.074643 30924 net.cpp:382] conv0 -> conv0
I0428 20:06:41.076408 30924 net.cpp:124] Setting up conv0
I0428 20:06:41.076422 30924 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:41.076442 30924 net.cpp:139] Memory required for data: 6074800
I0428 20:06:41.076450 30924 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:41.076457 30924 net.cpp:86] Creating Layer pool0
I0428 20:06:41.076460 30924 net.cpp:408] pool0 <- conv0
I0428 20:06:41.076465 30924 net.cpp:382] pool0 -> pool0
I0428 20:06:41.076517 30924 net.cpp:124] Setting up pool0
I0428 20:06:41.076522 30924 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:41.076525 30924 net.cpp:139] Memory required for data: 7514800
I0428 20:06:41.076529 30924 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:41.076536 30924 net.cpp:86] Creating Layer conv1
I0428 20:06:41.076540 30924 net.cpp:408] conv1 <- pool0
I0428 20:06:41.076545 30924 net.cpp:382] conv1 -> conv1
I0428 20:06:41.078781 30924 net.cpp:124] Setting up conv1
I0428 20:06:41.078811 30924 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:41.078815 30924 net.cpp:139] Memory required for data: 7642800
I0428 20:06:41.078824 30924 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:41.078831 30924 net.cpp:86] Creating Layer pool1
I0428 20:06:41.078835 30924 net.cpp:408] pool1 <- conv1
I0428 20:06:41.078840 30924 net.cpp:382] pool1 -> pool1
I0428 20:06:41.078913 30924 net.cpp:124] Setting up pool1
I0428 20:06:41.078919 30924 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:41.078922 30924 net.cpp:139] Memory required for data: 7674800
I0428 20:06:41.078927 30924 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:41.078932 30924 net.cpp:86] Creating Layer ip1
I0428 20:06:41.078941 30924 net.cpp:408] ip1 <- pool1
I0428 20:06:41.078951 30924 net.cpp:382] ip1 -> ip1
I0428 20:06:41.079102 30924 net.cpp:124] Setting up ip1
I0428 20:06:41.079114 30924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:41.079128 30924 net.cpp:139] Memory required for data: 7678800
I0428 20:06:41.079136 30924 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:41.079144 30924 net.cpp:86] Creating Layer relu1
I0428 20:06:41.079146 30924 net.cpp:408] relu1 <- ip1
I0428 20:06:41.079151 30924 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:41.079339 30924 net.cpp:124] Setting up relu1
I0428 20:06:41.079349 30924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:41.079355 30924 net.cpp:139] Memory required for data: 7682800
I0428 20:06:41.079358 30924 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:41.079365 30924 net.cpp:86] Creating Layer ip2
I0428 20:06:41.079368 30924 net.cpp:408] ip2 <- ip1
I0428 20:06:41.079375 30924 net.cpp:382] ip2 -> ip2
I0428 20:06:41.079493 30924 net.cpp:124] Setting up ip2
I0428 20:06:41.079499 30924 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:41.079502 30924 net.cpp:139] Memory required for data: 7702800
I0428 20:06:41.079509 30924 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:41.079516 30924 net.cpp:86] Creating Layer relu2
I0428 20:06:41.079519 30924 net.cpp:408] relu2 <- ip2
I0428 20:06:41.079532 30924 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:41.079704 30924 net.cpp:124] Setting up relu2
I0428 20:06:41.079713 30924 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:06:41.079717 30924 net.cpp:139] Memory required for data: 7722800
I0428 20:06:41.079720 30924 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:41.079728 30924 net.cpp:86] Creating Layer ip3
I0428 20:06:41.079731 30924 net.cpp:408] ip3 <- ip2
I0428 20:06:41.079738 30924 net.cpp:382] ip3 -> ip3
I0428 20:06:41.079839 30924 net.cpp:124] Setting up ip3
I0428 20:06:41.079846 30924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:41.079855 30924 net.cpp:139] Memory required for data: 7726800
I0428 20:06:41.079864 30924 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:41.079867 30924 net.cpp:86] Creating Layer relu3
I0428 20:06:41.079870 30924 net.cpp:408] relu3 <- ip3
I0428 20:06:41.079875 30924 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:41.080709 30924 net.cpp:124] Setting up relu3
I0428 20:06:41.080721 30924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:41.080740 30924 net.cpp:139] Memory required for data: 7730800
I0428 20:06:41.080744 30924 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:41.080765 30924 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:41.080768 30924 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:41.080775 30924 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:41.080781 30924 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:41.080843 30924 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:41.080852 30924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:41.080855 30924 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:41.080858 30924 net.cpp:139] Memory required for data: 7738800
I0428 20:06:41.080862 30924 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:41.080868 30924 net.cpp:86] Creating Layer accuracy
I0428 20:06:41.080871 30924 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:41.080875 30924 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:41.080880 30924 net.cpp:382] accuracy -> accuracy
I0428 20:06:41.080888 30924 net.cpp:124] Setting up accuracy
I0428 20:06:41.080893 30924 net.cpp:131] Top shape: (1)
I0428 20:06:41.080895 30924 net.cpp:139] Memory required for data: 7738804
I0428 20:06:41.080899 30924 layer_factory.hpp:77] Creating layer loss
I0428 20:06:41.080905 30924 net.cpp:86] Creating Layer loss
I0428 20:06:41.080909 30924 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:41.080914 30924 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:41.080917 30924 net.cpp:382] loss -> loss
I0428 20:06:41.080924 30924 layer_factory.hpp:77] Creating layer loss
I0428 20:06:41.081207 30924 net.cpp:124] Setting up loss
I0428 20:06:41.081217 30924 net.cpp:131] Top shape: (1)
I0428 20:06:41.081220 30924 net.cpp:134]     with loss weight 1
I0428 20:06:41.081226 30924 net.cpp:139] Memory required for data: 7738808
I0428 20:06:41.081239 30924 net.cpp:200] loss needs backward computation.
I0428 20:06:41.081244 30924 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:41.081248 30924 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:41.081251 30924 net.cpp:200] relu3 needs backward computation.
I0428 20:06:41.081254 30924 net.cpp:200] ip3 needs backward computation.
I0428 20:06:41.081257 30924 net.cpp:200] relu2 needs backward computation.
I0428 20:06:41.081260 30924 net.cpp:200] ip2 needs backward computation.
I0428 20:06:41.081262 30924 net.cpp:200] relu1 needs backward computation.
I0428 20:06:41.081265 30924 net.cpp:200] ip1 needs backward computation.
I0428 20:06:41.081269 30924 net.cpp:200] pool1 needs backward computation.
I0428 20:06:41.081271 30924 net.cpp:200] conv1 needs backward computation.
I0428 20:06:41.081274 30924 net.cpp:200] pool0 needs backward computation.
I0428 20:06:41.081279 30924 net.cpp:200] conv0 needs backward computation.
I0428 20:06:41.081284 30924 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:41.081286 30924 net.cpp:202] mnist does not need backward computation.
I0428 20:06:41.081290 30924 net.cpp:244] This network produces output accuracy
I0428 20:06:41.081292 30924 net.cpp:244] This network produces output loss
I0428 20:06:41.081305 30924 net.cpp:257] Network initialization done.
I0428 20:06:41.081346 30924 solver.cpp:56] Solver scaffolding done.
I0428 20:06:41.081740 30924 caffe.cpp:248] Starting Optimization
I0428 20:06:41.081748 30924 solver.cpp:273] Solving LeNet
I0428 20:06:41.081751 30924 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:41.082656 30924 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:41.087802 30924 blocking_queue.cpp:49] Waiting for data
I0428 20:06:41.158617 30931 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:41.159219 30924 solver.cpp:398]     Test net output #0: accuracy = 0.1083
I0428 20:06:41.159252 30924 solver.cpp:398]     Test net output #1: loss = 2.30139 (* 1 = 2.30139 loss)
I0428 20:06:41.162796 30924 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809955s/100 iters), loss = 2.28278
I0428 20:06:41.162833 30924 solver.cpp:238]     Train net output #0: loss = 2.28278 (* 1 = 2.28278 loss)
I0428 20:06:41.162859 30924 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:41.251471 30924 solver.cpp:219] Iteration 100 (1128.15 iter/s, 0.0886404s/100 iters), loss = 0.572654
I0428 20:06:41.251510 30924 solver.cpp:238]     Train net output #0: loss = 0.572654 (* 1 = 0.572654 loss)
I0428 20:06:41.251516 30924 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:41.339416 30924 solver.cpp:219] Iteration 200 (1137.51 iter/s, 0.0879114s/100 iters), loss = 0.338259
I0428 20:06:41.339455 30924 solver.cpp:238]     Train net output #0: loss = 0.338259 (* 1 = 0.338259 loss)
I0428 20:06:41.339460 30924 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:41.426966 30924 solver.cpp:219] Iteration 300 (1142.62 iter/s, 0.0875182s/100 iters), loss = 0.301633
I0428 20:06:41.427006 30924 solver.cpp:238]     Train net output #0: loss = 0.301633 (* 1 = 0.301633 loss)
I0428 20:06:41.427011 30924 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:41.514715 30924 solver.cpp:219] Iteration 400 (1140.04 iter/s, 0.087716s/100 iters), loss = 0.126799
I0428 20:06:41.514753 30924 solver.cpp:238]     Train net output #0: loss = 0.126799 (* 1 = 0.126799 loss)
I0428 20:06:41.514758 30924 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:41.601661 30924 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:41.656735 30931 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:41.657348 30924 solver.cpp:398]     Test net output #0: accuracy = 0.9385
I0428 20:06:41.657382 30924 solver.cpp:398]     Test net output #1: loss = 0.194254 (* 1 = 0.194254 loss)
I0428 20:06:41.658416 30924 solver.cpp:219] Iteration 500 (696.068 iter/s, 0.143664s/100 iters), loss = 0.232224
I0428 20:06:41.658454 30924 solver.cpp:238]     Train net output #0: loss = 0.232224 (* 1 = 0.232224 loss)
I0428 20:06:41.658479 30924 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:41.749295 30924 solver.cpp:219] Iteration 600 (1100.76 iter/s, 0.0908462s/100 iters), loss = 0.0823189
I0428 20:06:41.749320 30924 solver.cpp:238]     Train net output #0: loss = 0.0823188 (* 1 = 0.0823188 loss)
I0428 20:06:41.749341 30924 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:41.837607 30924 solver.cpp:219] Iteration 700 (1132.78 iter/s, 0.088278s/100 iters), loss = 0.226244
I0428 20:06:41.837646 30924 solver.cpp:238]     Train net output #0: loss = 0.226244 (* 1 = 0.226244 loss)
I0428 20:06:41.837653 30924 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:41.924978 30924 solver.cpp:219] Iteration 800 (1144.99 iter/s, 0.087337s/100 iters), loss = 0.325454
I0428 20:06:41.925019 30924 solver.cpp:238]     Train net output #0: loss = 0.325454 (* 1 = 0.325454 loss)
I0428 20:06:41.925024 30924 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:42.012503 30924 solver.cpp:219] Iteration 900 (1142.98 iter/s, 0.0874906s/100 iters), loss = 0.306173
I0428 20:06:42.012542 30924 solver.cpp:238]     Train net output #0: loss = 0.306173 (* 1 = 0.306173 loss)
I0428 20:06:42.012548 30924 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:42.041988 30930 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:42.098878 30924 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:42.099648 30924 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:42.100234 30924 solver.cpp:311] Iteration 1000, loss = 0.176716
I0428 20:06:42.100248 30924 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:42.155208 30931 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:42.155772 30924 solver.cpp:398]     Test net output #0: accuracy = 0.9641
I0428 20:06:42.155791 30924 solver.cpp:398]     Test net output #1: loss = 0.111607 (* 1 = 0.111607 loss)
I0428 20:06:42.155810 30924 solver.cpp:316] Optimization Done.
I0428 20:06:42.155813 30924 caffe.cpp:259] Optimization Done.
