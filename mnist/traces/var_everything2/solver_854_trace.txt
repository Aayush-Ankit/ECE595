I0428 19:59:39.791512 29294 caffe.cpp:218] Using GPUs 0
I0428 19:59:39.827299 29294 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:40.278061 29294 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test854.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:40.278224 29294 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test854.prototxt
I0428 19:59:40.278609 29294 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:40.278640 29294 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:40.278726 29294 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:40.278795 29294 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:40.278877 29294 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:40.278898 29294 net.cpp:86] Creating Layer mnist
I0428 19:59:40.278904 29294 net.cpp:382] mnist -> data
I0428 19:59:40.278923 29294 net.cpp:382] mnist -> label
I0428 19:59:40.279883 29294 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:40.282279 29294 net.cpp:124] Setting up mnist
I0428 19:59:40.282310 29294 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:40.282325 29294 net.cpp:131] Top shape: 64 (64)
I0428 19:59:40.282328 29294 net.cpp:139] Memory required for data: 200960
I0428 19:59:40.282335 29294 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:40.282349 29294 net.cpp:86] Creating Layer conv0
I0428 19:59:40.282366 29294 net.cpp:408] conv0 <- data
I0428 19:59:40.282377 29294 net.cpp:382] conv0 -> conv0
I0428 19:59:40.516535 29294 net.cpp:124] Setting up conv0
I0428 19:59:40.516589 29294 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:40.516593 29294 net.cpp:139] Memory required for data: 1675520
I0428 19:59:40.516624 29294 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:40.516638 29294 net.cpp:86] Creating Layer pool0
I0428 19:59:40.516641 29294 net.cpp:408] pool0 <- conv0
I0428 19:59:40.516646 29294 net.cpp:382] pool0 -> pool0
I0428 19:59:40.516695 29294 net.cpp:124] Setting up pool0
I0428 19:59:40.516700 29294 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:40.516702 29294 net.cpp:139] Memory required for data: 2044160
I0428 19:59:40.516705 29294 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:40.516719 29294 net.cpp:86] Creating Layer conv1
I0428 19:59:40.516722 29294 net.cpp:408] conv1 <- pool0
I0428 19:59:40.516729 29294 net.cpp:382] conv1 -> conv1
I0428 19:59:40.519490 29294 net.cpp:124] Setting up conv1
I0428 19:59:40.519520 29294 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:40.519525 29294 net.cpp:139] Memory required for data: 2208000
I0428 19:59:40.519532 29294 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:40.519541 29294 net.cpp:86] Creating Layer pool1
I0428 19:59:40.519546 29294 net.cpp:408] pool1 <- conv1
I0428 19:59:40.519551 29294 net.cpp:382] pool1 -> pool1
I0428 19:59:40.519603 29294 net.cpp:124] Setting up pool1
I0428 19:59:40.519609 29294 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:40.519613 29294 net.cpp:139] Memory required for data: 2248960
I0428 19:59:40.519615 29294 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:40.519623 29294 net.cpp:86] Creating Layer ip1
I0428 19:59:40.519624 29294 net.cpp:408] ip1 <- pool1
I0428 19:59:40.519630 29294 net.cpp:382] ip1 -> ip1
I0428 19:59:40.520696 29294 net.cpp:124] Setting up ip1
I0428 19:59:40.520709 29294 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:40.520727 29294 net.cpp:139] Memory required for data: 2261760
I0428 19:59:40.520735 29294 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:40.520742 29294 net.cpp:86] Creating Layer relu1
I0428 19:59:40.520745 29294 net.cpp:408] relu1 <- ip1
I0428 19:59:40.520750 29294 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:40.520967 29294 net.cpp:124] Setting up relu1
I0428 19:59:40.520977 29294 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:40.520980 29294 net.cpp:139] Memory required for data: 2274560
I0428 19:59:40.520983 29294 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:40.520992 29294 net.cpp:86] Creating Layer ip2
I0428 19:59:40.520994 29294 net.cpp:408] ip2 <- ip1
I0428 19:59:40.520999 29294 net.cpp:382] ip2 -> ip2
I0428 19:59:40.521116 29294 net.cpp:124] Setting up ip2
I0428 19:59:40.521122 29294 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:40.521126 29294 net.cpp:139] Memory required for data: 2280960
I0428 19:59:40.521131 29294 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:40.521137 29294 net.cpp:86] Creating Layer relu2
I0428 19:59:40.521140 29294 net.cpp:408] relu2 <- ip2
I0428 19:59:40.521145 29294 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:40.521951 29294 net.cpp:124] Setting up relu2
I0428 19:59:40.521963 29294 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:40.521982 29294 net.cpp:139] Memory required for data: 2287360
I0428 19:59:40.521986 29294 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:40.521993 29294 net.cpp:86] Creating Layer ip3
I0428 19:59:40.521998 29294 net.cpp:408] ip3 <- ip2
I0428 19:59:40.522003 29294 net.cpp:382] ip3 -> ip3
I0428 19:59:40.522101 29294 net.cpp:124] Setting up ip3
I0428 19:59:40.522109 29294 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:40.522111 29294 net.cpp:139] Memory required for data: 2289920
I0428 19:59:40.522119 29294 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:40.522127 29294 net.cpp:86] Creating Layer relu3
I0428 19:59:40.522130 29294 net.cpp:408] relu3 <- ip3
I0428 19:59:40.522135 29294 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:40.522306 29294 net.cpp:124] Setting up relu3
I0428 19:59:40.522315 29294 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:40.522318 29294 net.cpp:139] Memory required for data: 2292480
I0428 19:59:40.522321 29294 layer_factory.hpp:77] Creating layer loss
I0428 19:59:40.522328 29294 net.cpp:86] Creating Layer loss
I0428 19:59:40.522331 29294 net.cpp:408] loss <- ip3
I0428 19:59:40.522336 29294 net.cpp:408] loss <- label
I0428 19:59:40.522341 29294 net.cpp:382] loss -> loss
I0428 19:59:40.522356 29294 layer_factory.hpp:77] Creating layer loss
I0428 19:59:40.522601 29294 net.cpp:124] Setting up loss
I0428 19:59:40.522629 29294 net.cpp:131] Top shape: (1)
I0428 19:59:40.522631 29294 net.cpp:134]     with loss weight 1
I0428 19:59:40.522660 29294 net.cpp:139] Memory required for data: 2292484
I0428 19:59:40.522665 29294 net.cpp:200] loss needs backward computation.
I0428 19:59:40.522668 29294 net.cpp:200] relu3 needs backward computation.
I0428 19:59:40.522671 29294 net.cpp:200] ip3 needs backward computation.
I0428 19:59:40.522675 29294 net.cpp:200] relu2 needs backward computation.
I0428 19:59:40.522676 29294 net.cpp:200] ip2 needs backward computation.
I0428 19:59:40.522680 29294 net.cpp:200] relu1 needs backward computation.
I0428 19:59:40.522682 29294 net.cpp:200] ip1 needs backward computation.
I0428 19:59:40.522686 29294 net.cpp:200] pool1 needs backward computation.
I0428 19:59:40.522689 29294 net.cpp:200] conv1 needs backward computation.
I0428 19:59:40.522692 29294 net.cpp:200] pool0 needs backward computation.
I0428 19:59:40.522696 29294 net.cpp:200] conv0 needs backward computation.
I0428 19:59:40.522699 29294 net.cpp:202] mnist does not need backward computation.
I0428 19:59:40.522701 29294 net.cpp:244] This network produces output loss
I0428 19:59:40.522711 29294 net.cpp:257] Network initialization done.
I0428 19:59:40.523118 29294 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test854.prototxt
I0428 19:59:40.523160 29294 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:40.523270 29294 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:40.523368 29294 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:40.523412 29294 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:40.523423 29294 net.cpp:86] Creating Layer mnist
I0428 19:59:40.523429 29294 net.cpp:382] mnist -> data
I0428 19:59:40.523437 29294 net.cpp:382] mnist -> label
I0428 19:59:40.523521 29294 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:40.525488 29294 net.cpp:124] Setting up mnist
I0428 19:59:40.525517 29294 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:40.525522 29294 net.cpp:131] Top shape: 100 (100)
I0428 19:59:40.525524 29294 net.cpp:139] Memory required for data: 314000
I0428 19:59:40.525528 29294 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:40.525534 29294 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:40.525538 29294 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:40.525560 29294 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:40.525566 29294 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:40.525678 29294 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:40.525686 29294 net.cpp:131] Top shape: 100 (100)
I0428 19:59:40.525691 29294 net.cpp:131] Top shape: 100 (100)
I0428 19:59:40.525693 29294 net.cpp:139] Memory required for data: 314800
I0428 19:59:40.525696 29294 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:40.525707 29294 net.cpp:86] Creating Layer conv0
I0428 19:59:40.525710 29294 net.cpp:408] conv0 <- data
I0428 19:59:40.525717 29294 net.cpp:382] conv0 -> conv0
I0428 19:59:40.527345 29294 net.cpp:124] Setting up conv0
I0428 19:59:40.527374 29294 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:40.527377 29294 net.cpp:139] Memory required for data: 2618800
I0428 19:59:40.527401 29294 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:40.527408 29294 net.cpp:86] Creating Layer pool0
I0428 19:59:40.527412 29294 net.cpp:408] pool0 <- conv0
I0428 19:59:40.527416 29294 net.cpp:382] pool0 -> pool0
I0428 19:59:40.527453 29294 net.cpp:124] Setting up pool0
I0428 19:59:40.527458 29294 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:40.527462 29294 net.cpp:139] Memory required for data: 3194800
I0428 19:59:40.527464 29294 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:40.527473 29294 net.cpp:86] Creating Layer conv1
I0428 19:59:40.527477 29294 net.cpp:408] conv1 <- pool0
I0428 19:59:40.527483 29294 net.cpp:382] conv1 -> conv1
I0428 19:59:40.529671 29294 net.cpp:124] Setting up conv1
I0428 19:59:40.529700 29294 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:40.529702 29294 net.cpp:139] Memory required for data: 3450800
I0428 19:59:40.529713 29294 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:40.529719 29294 net.cpp:86] Creating Layer pool1
I0428 19:59:40.529722 29294 net.cpp:408] pool1 <- conv1
I0428 19:59:40.529727 29294 net.cpp:382] pool1 -> pool1
I0428 19:59:40.529801 29294 net.cpp:124] Setting up pool1
I0428 19:59:40.529814 29294 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:40.529817 29294 net.cpp:139] Memory required for data: 3514800
I0428 19:59:40.529820 29294 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:40.529826 29294 net.cpp:86] Creating Layer ip1
I0428 19:59:40.529830 29294 net.cpp:408] ip1 <- pool1
I0428 19:59:40.529836 29294 net.cpp:382] ip1 -> ip1
I0428 19:59:40.529983 29294 net.cpp:124] Setting up ip1
I0428 19:59:40.529990 29294 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:40.530004 29294 net.cpp:139] Memory required for data: 3534800
I0428 19:59:40.530011 29294 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:40.530019 29294 net.cpp:86] Creating Layer relu1
I0428 19:59:40.530022 29294 net.cpp:408] relu1 <- ip1
I0428 19:59:40.530026 29294 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:40.530210 29294 net.cpp:124] Setting up relu1
I0428 19:59:40.530220 29294 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:40.530222 29294 net.cpp:139] Memory required for data: 3554800
I0428 19:59:40.530226 29294 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:40.530234 29294 net.cpp:86] Creating Layer ip2
I0428 19:59:40.530238 29294 net.cpp:408] ip2 <- ip1
I0428 19:59:40.530243 29294 net.cpp:382] ip2 -> ip2
I0428 19:59:40.530369 29294 net.cpp:124] Setting up ip2
I0428 19:59:40.530376 29294 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:40.530380 29294 net.cpp:139] Memory required for data: 3564800
I0428 19:59:40.530385 29294 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:40.530390 29294 net.cpp:86] Creating Layer relu2
I0428 19:59:40.530395 29294 net.cpp:408] relu2 <- ip2
I0428 19:59:40.530398 29294 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:40.530560 29294 net.cpp:124] Setting up relu2
I0428 19:59:40.530570 29294 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:40.530573 29294 net.cpp:139] Memory required for data: 3574800
I0428 19:59:40.530576 29294 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:40.530589 29294 net.cpp:86] Creating Layer ip3
I0428 19:59:40.530592 29294 net.cpp:408] ip3 <- ip2
I0428 19:59:40.530598 29294 net.cpp:382] ip3 -> ip3
I0428 19:59:40.530743 29294 net.cpp:124] Setting up ip3
I0428 19:59:40.530751 29294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:40.530753 29294 net.cpp:139] Memory required for data: 3578800
I0428 19:59:40.530761 29294 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:40.530766 29294 net.cpp:86] Creating Layer relu3
I0428 19:59:40.530768 29294 net.cpp:408] relu3 <- ip3
I0428 19:59:40.530772 29294 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:40.531641 29294 net.cpp:124] Setting up relu3
I0428 19:59:40.531653 29294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:40.531672 29294 net.cpp:139] Memory required for data: 3582800
I0428 19:59:40.531675 29294 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:40.531682 29294 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:40.531684 29294 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:40.531692 29294 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:40.531697 29294 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:40.531735 29294 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:40.531743 29294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:40.531760 29294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:40.531764 29294 net.cpp:139] Memory required for data: 3590800
I0428 19:59:40.531766 29294 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:40.531772 29294 net.cpp:86] Creating Layer accuracy
I0428 19:59:40.531775 29294 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:40.531785 29294 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:40.531790 29294 net.cpp:382] accuracy -> accuracy
I0428 19:59:40.531796 29294 net.cpp:124] Setting up accuracy
I0428 19:59:40.531800 29294 net.cpp:131] Top shape: (1)
I0428 19:59:40.531803 29294 net.cpp:139] Memory required for data: 3590804
I0428 19:59:40.531806 29294 layer_factory.hpp:77] Creating layer loss
I0428 19:59:40.531811 29294 net.cpp:86] Creating Layer loss
I0428 19:59:40.531816 29294 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:40.531818 29294 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:40.531823 29294 net.cpp:382] loss -> loss
I0428 19:59:40.531828 29294 layer_factory.hpp:77] Creating layer loss
I0428 19:59:40.532096 29294 net.cpp:124] Setting up loss
I0428 19:59:40.532106 29294 net.cpp:131] Top shape: (1)
I0428 19:59:40.532109 29294 net.cpp:134]     with loss weight 1
I0428 19:59:40.532126 29294 net.cpp:139] Memory required for data: 3590808
I0428 19:59:40.532131 29294 net.cpp:200] loss needs backward computation.
I0428 19:59:40.532135 29294 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:40.532140 29294 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:40.532142 29294 net.cpp:200] relu3 needs backward computation.
I0428 19:59:40.532145 29294 net.cpp:200] ip3 needs backward computation.
I0428 19:59:40.532155 29294 net.cpp:200] relu2 needs backward computation.
I0428 19:59:40.532157 29294 net.cpp:200] ip2 needs backward computation.
I0428 19:59:40.532160 29294 net.cpp:200] relu1 needs backward computation.
I0428 19:59:40.532163 29294 net.cpp:200] ip1 needs backward computation.
I0428 19:59:40.532166 29294 net.cpp:200] pool1 needs backward computation.
I0428 19:59:40.532169 29294 net.cpp:200] conv1 needs backward computation.
I0428 19:59:40.532173 29294 net.cpp:200] pool0 needs backward computation.
I0428 19:59:40.532176 29294 net.cpp:200] conv0 needs backward computation.
I0428 19:59:40.532181 29294 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:40.532188 29294 net.cpp:202] mnist does not need backward computation.
I0428 19:59:40.532191 29294 net.cpp:244] This network produces output accuracy
I0428 19:59:40.532196 29294 net.cpp:244] This network produces output loss
I0428 19:59:40.532210 29294 net.cpp:257] Network initialization done.
I0428 19:59:40.532254 29294 solver.cpp:56] Solver scaffolding done.
I0428 19:59:40.532665 29294 caffe.cpp:248] Starting Optimization
I0428 19:59:40.532671 29294 solver.cpp:273] Solving LeNet
I0428 19:59:40.532673 29294 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:40.533004 29294 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:40.537310 29294 blocking_queue.cpp:49] Waiting for data
I0428 19:59:40.605393 29302 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:40.605926 29294 solver.cpp:398]     Test net output #0: accuracy = 0.1027
I0428 19:59:40.605962 29294 solver.cpp:398]     Test net output #1: loss = 2.31772 (* 1 = 2.31772 loss)
I0428 19:59:40.608522 29294 solver.cpp:219] Iteration 0 (0 iter/s, 0.0758006s/100 iters), loss = 2.32281
I0428 19:59:40.608561 29294 solver.cpp:238]     Train net output #0: loss = 2.32281 (* 1 = 2.32281 loss)
I0428 19:59:40.608570 29294 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:40.692270 29294 solver.cpp:219] Iteration 100 (1194.56 iter/s, 0.083713s/100 iters), loss = 0.912927
I0428 19:59:40.692312 29294 solver.cpp:238]     Train net output #0: loss = 0.912927 (* 1 = 0.912927 loss)
I0428 19:59:40.692317 29294 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:40.770954 29294 solver.cpp:219] Iteration 200 (1271.47 iter/s, 0.0786493s/100 iters), loss = 0.806105
I0428 19:59:40.770993 29294 solver.cpp:238]     Train net output #0: loss = 0.806105 (* 1 = 0.806105 loss)
I0428 19:59:40.770999 29294 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:40.849795 29294 solver.cpp:219] Iteration 300 (1268.91 iter/s, 0.0788081s/100 iters), loss = 0.729596
I0428 19:59:40.849834 29294 solver.cpp:238]     Train net output #0: loss = 0.729596 (* 1 = 0.729596 loss)
I0428 19:59:40.849840 29294 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:40.928406 29294 solver.cpp:219] Iteration 400 (1272.88 iter/s, 0.0785623s/100 iters), loss = 0.477381
I0428 19:59:40.928444 29294 solver.cpp:238]     Train net output #0: loss = 0.477381 (* 1 = 0.477381 loss)
I0428 19:59:40.928450 29294 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:41.006427 29294 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:41.061756 29302 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:41.062294 29294 solver.cpp:398]     Test net output #0: accuracy = 0.8544
I0428 19:59:41.062327 29294 solver.cpp:398]     Test net output #1: loss = 0.401068 (* 1 = 0.401068 loss)
I0428 19:59:41.063179 29294 solver.cpp:219] Iteration 500 (742.176 iter/s, 0.134739s/100 iters), loss = 0.329099
I0428 19:59:41.063238 29294 solver.cpp:238]     Train net output #0: loss = 0.329099 (* 1 = 0.329099 loss)
I0428 19:59:41.063246 29294 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:41.142205 29294 solver.cpp:219] Iteration 600 (1266.48 iter/s, 0.0789592s/100 iters), loss = 0.123245
I0428 19:59:41.142243 29294 solver.cpp:238]     Train net output #0: loss = 0.123245 (* 1 = 0.123245 loss)
I0428 19:59:41.142249 29294 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:41.221469 29294 solver.cpp:219] Iteration 700 (1262.1 iter/s, 0.079233s/100 iters), loss = 0.214144
I0428 19:59:41.221524 29294 solver.cpp:238]     Train net output #0: loss = 0.214144 (* 1 = 0.214144 loss)
I0428 19:59:41.221530 29294 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:41.300694 29294 solver.cpp:219] Iteration 800 (1263.26 iter/s, 0.0791603s/100 iters), loss = 0.286817
I0428 19:59:41.300734 29294 solver.cpp:238]     Train net output #0: loss = 0.286817 (* 1 = 0.286817 loss)
I0428 19:59:41.300740 29294 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:41.379297 29294 solver.cpp:219] Iteration 900 (1272.73 iter/s, 0.0785715s/100 iters), loss = 0.194911
I0428 19:59:41.379335 29294 solver.cpp:238]     Train net output #0: loss = 0.194911 (* 1 = 0.194911 loss)
I0428 19:59:41.379341 29294 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:41.405653 29300 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:41.457444 29294 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:41.458354 29294 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:41.458951 29294 solver.cpp:311] Iteration 1000, loss = 0.121717
I0428 19:59:41.458969 29294 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:41.530642 29302 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:41.531224 29294 solver.cpp:398]     Test net output #0: accuracy = 0.9672
I0428 19:59:41.531252 29294 solver.cpp:398]     Test net output #1: loss = 0.10847 (* 1 = 0.10847 loss)
I0428 19:59:41.531260 29294 solver.cpp:316] Optimization Done.
I0428 19:59:41.531265 29294 caffe.cpp:259] Optimization Done.
