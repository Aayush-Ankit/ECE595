I0428 19:37:25.496353 23819 caffe.cpp:218] Using GPUs 0
I0428 19:37:25.536579 23819 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:26.002084 23819 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test258.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:26.002223 23819 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test258.prototxt
I0428 19:37:26.002501 23819 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:26.002517 23819 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:26.002605 23819 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:26.002681 23819 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:26.002790 23819 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:26.002817 23819 net.cpp:86] Creating Layer mnist
I0428 19:37:26.002827 23819 net.cpp:382] mnist -> data
I0428 19:37:26.002853 23819 net.cpp:382] mnist -> label
I0428 19:37:26.003940 23819 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:26.006201 23819 net.cpp:124] Setting up mnist
I0428 19:37:26.006247 23819 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:26.006255 23819 net.cpp:131] Top shape: 64 (64)
I0428 19:37:26.006261 23819 net.cpp:139] Memory required for data: 200960
I0428 19:37:26.006271 23819 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:26.006290 23819 net.cpp:86] Creating Layer conv0
I0428 19:37:26.006299 23819 net.cpp:408] conv0 <- data
I0428 19:37:26.006314 23819 net.cpp:382] conv0 -> conv0
I0428 19:37:26.239244 23819 net.cpp:124] Setting up conv0
I0428 19:37:26.239274 23819 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:26.239281 23819 net.cpp:139] Memory required for data: 14946560
I0428 19:37:26.239315 23819 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:26.239334 23819 net.cpp:86] Creating Layer pool0
I0428 19:37:26.239354 23819 net.cpp:408] pool0 <- conv0
I0428 19:37:26.239365 23819 net.cpp:382] pool0 -> pool0
I0428 19:37:26.239423 23819 net.cpp:124] Setting up pool0
I0428 19:37:26.239433 23819 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:26.239439 23819 net.cpp:139] Memory required for data: 18632960
I0428 19:37:26.239444 23819 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:26.239456 23819 net.cpp:86] Creating Layer ip1
I0428 19:37:26.239464 23819 net.cpp:408] ip1 <- pool0
I0428 19:37:26.239473 23819 net.cpp:382] ip1 -> ip1
I0428 19:37:26.242471 23819 net.cpp:124] Setting up ip1
I0428 19:37:26.242486 23819 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:26.242491 23819 net.cpp:139] Memory required for data: 18639360
I0428 19:37:26.242503 23819 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:26.242514 23819 net.cpp:86] Creating Layer relu1
I0428 19:37:26.242525 23819 net.cpp:408] relu1 <- ip1
I0428 19:37:26.242533 23819 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:26.242713 23819 net.cpp:124] Setting up relu1
I0428 19:37:26.242725 23819 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:26.242732 23819 net.cpp:139] Memory required for data: 18645760
I0428 19:37:26.242738 23819 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:26.242748 23819 net.cpp:86] Creating Layer ip2
I0428 19:37:26.242754 23819 net.cpp:408] ip2 <- ip1
I0428 19:37:26.242763 23819 net.cpp:382] ip2 -> ip2
I0428 19:37:26.242863 23819 net.cpp:124] Setting up ip2
I0428 19:37:26.242873 23819 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:26.242879 23819 net.cpp:139] Memory required for data: 18652160
I0428 19:37:26.242892 23819 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:26.242916 23819 net.cpp:86] Creating Layer relu2
I0428 19:37:26.242923 23819 net.cpp:408] relu2 <- ip2
I0428 19:37:26.242929 23819 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:26.243669 23819 net.cpp:124] Setting up relu2
I0428 19:37:26.243683 23819 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:26.243705 23819 net.cpp:139] Memory required for data: 18658560
I0428 19:37:26.243726 23819 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:26.243736 23819 net.cpp:86] Creating Layer ip3
I0428 19:37:26.243743 23819 net.cpp:408] ip3 <- ip2
I0428 19:37:26.243752 23819 net.cpp:382] ip3 -> ip3
I0428 19:37:26.243854 23819 net.cpp:124] Setting up ip3
I0428 19:37:26.243865 23819 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:26.243870 23819 net.cpp:139] Memory required for data: 18661120
I0428 19:37:26.243880 23819 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:26.243891 23819 net.cpp:86] Creating Layer relu3
I0428 19:37:26.243898 23819 net.cpp:408] relu3 <- ip3
I0428 19:37:26.243906 23819 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:26.244072 23819 net.cpp:124] Setting up relu3
I0428 19:37:26.244083 23819 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:26.244088 23819 net.cpp:139] Memory required for data: 18663680
I0428 19:37:26.244094 23819 layer_factory.hpp:77] Creating layer loss
I0428 19:37:26.244104 23819 net.cpp:86] Creating Layer loss
I0428 19:37:26.244109 23819 net.cpp:408] loss <- ip3
I0428 19:37:26.244117 23819 net.cpp:408] loss <- label
I0428 19:37:26.244127 23819 net.cpp:382] loss -> loss
I0428 19:37:26.244146 23819 layer_factory.hpp:77] Creating layer loss
I0428 19:37:26.244366 23819 net.cpp:124] Setting up loss
I0428 19:37:26.244377 23819 net.cpp:131] Top shape: (1)
I0428 19:37:26.244382 23819 net.cpp:134]     with loss weight 1
I0428 19:37:26.244401 23819 net.cpp:139] Memory required for data: 18663684
I0428 19:37:26.244407 23819 net.cpp:200] loss needs backward computation.
I0428 19:37:26.244413 23819 net.cpp:200] relu3 needs backward computation.
I0428 19:37:26.244418 23819 net.cpp:200] ip3 needs backward computation.
I0428 19:37:26.244424 23819 net.cpp:200] relu2 needs backward computation.
I0428 19:37:26.244429 23819 net.cpp:200] ip2 needs backward computation.
I0428 19:37:26.244434 23819 net.cpp:200] relu1 needs backward computation.
I0428 19:37:26.244439 23819 net.cpp:200] ip1 needs backward computation.
I0428 19:37:26.244454 23819 net.cpp:200] pool0 needs backward computation.
I0428 19:37:26.244459 23819 net.cpp:200] conv0 needs backward computation.
I0428 19:37:26.244482 23819 net.cpp:202] mnist does not need backward computation.
I0428 19:37:26.244487 23819 net.cpp:244] This network produces output loss
I0428 19:37:26.244499 23819 net.cpp:257] Network initialization done.
I0428 19:37:26.244868 23819 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test258.prototxt
I0428 19:37:26.244920 23819 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:26.245012 23819 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:26.245115 23819 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:26.245216 23819 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:26.245237 23819 net.cpp:86] Creating Layer mnist
I0428 19:37:26.245246 23819 net.cpp:382] mnist -> data
I0428 19:37:26.245259 23819 net.cpp:382] mnist -> label
I0428 19:37:26.245381 23819 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:26.247444 23819 net.cpp:124] Setting up mnist
I0428 19:37:26.247474 23819 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:26.247483 23819 net.cpp:131] Top shape: 100 (100)
I0428 19:37:26.247489 23819 net.cpp:139] Memory required for data: 314000
I0428 19:37:26.247496 23819 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:26.247506 23819 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:26.247527 23819 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:26.247535 23819 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:26.247547 23819 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:26.247649 23819 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:26.247659 23819 net.cpp:131] Top shape: 100 (100)
I0428 19:37:26.247666 23819 net.cpp:131] Top shape: 100 (100)
I0428 19:37:26.247673 23819 net.cpp:139] Memory required for data: 314800
I0428 19:37:26.247704 23819 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:26.247720 23819 net.cpp:86] Creating Layer conv0
I0428 19:37:26.247727 23819 net.cpp:408] conv0 <- data
I0428 19:37:26.247738 23819 net.cpp:382] conv0 -> conv0
I0428 19:37:26.249342 23819 net.cpp:124] Setting up conv0
I0428 19:37:26.249359 23819 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:26.249366 23819 net.cpp:139] Memory required for data: 23354800
I0428 19:37:26.249382 23819 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:26.249393 23819 net.cpp:86] Creating Layer pool0
I0428 19:37:26.249400 23819 net.cpp:408] pool0 <- conv0
I0428 19:37:26.249409 23819 net.cpp:382] pool0 -> pool0
I0428 19:37:26.249450 23819 net.cpp:124] Setting up pool0
I0428 19:37:26.249460 23819 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:26.249466 23819 net.cpp:139] Memory required for data: 29114800
I0428 19:37:26.249472 23819 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:26.249483 23819 net.cpp:86] Creating Layer ip1
I0428 19:37:26.249490 23819 net.cpp:408] ip1 <- pool0
I0428 19:37:26.249513 23819 net.cpp:382] ip1 -> ip1
I0428 19:37:26.251899 23819 net.cpp:124] Setting up ip1
I0428 19:37:26.251909 23819 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:26.251915 23819 net.cpp:139] Memory required for data: 29124800
I0428 19:37:26.251943 23819 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:26.251953 23819 net.cpp:86] Creating Layer relu1
I0428 19:37:26.251960 23819 net.cpp:408] relu1 <- ip1
I0428 19:37:26.251968 23819 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:26.252131 23819 net.cpp:124] Setting up relu1
I0428 19:37:26.252143 23819 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:26.252149 23819 net.cpp:139] Memory required for data: 29134800
I0428 19:37:26.252156 23819 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:26.252166 23819 net.cpp:86] Creating Layer ip2
I0428 19:37:26.252174 23819 net.cpp:408] ip2 <- ip1
I0428 19:37:26.252194 23819 net.cpp:382] ip2 -> ip2
I0428 19:37:26.252315 23819 net.cpp:124] Setting up ip2
I0428 19:37:26.252323 23819 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:26.252331 23819 net.cpp:139] Memory required for data: 29144800
I0428 19:37:26.252343 23819 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:26.252351 23819 net.cpp:86] Creating Layer relu2
I0428 19:37:26.252358 23819 net.cpp:408] relu2 <- ip2
I0428 19:37:26.252365 23819 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:26.253224 23819 net.cpp:124] Setting up relu2
I0428 19:37:26.253238 23819 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:26.253245 23819 net.cpp:139] Memory required for data: 29154800
I0428 19:37:26.253252 23819 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:26.253264 23819 net.cpp:86] Creating Layer ip3
I0428 19:37:26.253286 23819 net.cpp:408] ip3 <- ip2
I0428 19:37:26.253298 23819 net.cpp:382] ip3 -> ip3
I0428 19:37:26.253410 23819 net.cpp:124] Setting up ip3
I0428 19:37:26.253422 23819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:26.253428 23819 net.cpp:139] Memory required for data: 29158800
I0428 19:37:26.253440 23819 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:26.253450 23819 net.cpp:86] Creating Layer relu3
I0428 19:37:26.253458 23819 net.cpp:408] relu3 <- ip3
I0428 19:37:26.253468 23819 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:26.253674 23819 net.cpp:124] Setting up relu3
I0428 19:37:26.253685 23819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:26.253691 23819 net.cpp:139] Memory required for data: 29162800
I0428 19:37:26.253697 23819 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:26.253708 23819 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:26.253715 23819 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:26.253724 23819 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:26.253736 23819 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:26.253782 23819 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:26.253793 23819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:26.253810 23819 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:26.253818 23819 net.cpp:139] Memory required for data: 29170800
I0428 19:37:26.253823 23819 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:26.253832 23819 net.cpp:86] Creating Layer accuracy
I0428 19:37:26.253839 23819 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:26.253846 23819 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:26.253856 23819 net.cpp:382] accuracy -> accuracy
I0428 19:37:26.253870 23819 net.cpp:124] Setting up accuracy
I0428 19:37:26.253880 23819 net.cpp:131] Top shape: (1)
I0428 19:37:26.253885 23819 net.cpp:139] Memory required for data: 29170804
I0428 19:37:26.253891 23819 layer_factory.hpp:77] Creating layer loss
I0428 19:37:26.253900 23819 net.cpp:86] Creating Layer loss
I0428 19:37:26.253921 23819 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:26.253928 23819 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:26.253955 23819 net.cpp:382] loss -> loss
I0428 19:37:26.253968 23819 layer_factory.hpp:77] Creating layer loss
I0428 19:37:26.254264 23819 net.cpp:124] Setting up loss
I0428 19:37:26.254276 23819 net.cpp:131] Top shape: (1)
I0428 19:37:26.254282 23819 net.cpp:134]     with loss weight 1
I0428 19:37:26.254292 23819 net.cpp:139] Memory required for data: 29170808
I0428 19:37:26.254298 23819 net.cpp:200] loss needs backward computation.
I0428 19:37:26.254307 23819 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:26.254324 23819 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:26.254329 23819 net.cpp:200] relu3 needs backward computation.
I0428 19:37:26.254334 23819 net.cpp:200] ip3 needs backward computation.
I0428 19:37:26.254340 23819 net.cpp:200] relu2 needs backward computation.
I0428 19:37:26.254345 23819 net.cpp:200] ip2 needs backward computation.
I0428 19:37:26.254350 23819 net.cpp:200] relu1 needs backward computation.
I0428 19:37:26.254355 23819 net.cpp:200] ip1 needs backward computation.
I0428 19:37:26.254375 23819 net.cpp:200] pool0 needs backward computation.
I0428 19:37:26.254380 23819 net.cpp:200] conv0 needs backward computation.
I0428 19:37:26.254386 23819 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:26.254393 23819 net.cpp:202] mnist does not need backward computation.
I0428 19:37:26.254397 23819 net.cpp:244] This network produces output accuracy
I0428 19:37:26.254403 23819 net.cpp:244] This network produces output loss
I0428 19:37:26.254420 23819 net.cpp:257] Network initialization done.
I0428 19:37:26.254462 23819 solver.cpp:56] Solver scaffolding done.
I0428 19:37:26.254779 23819 caffe.cpp:248] Starting Optimization
I0428 19:37:26.254787 23819 solver.cpp:273] Solving LeNet
I0428 19:37:26.254792 23819 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:26.256778 23819 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:26.416339 23826 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:26.420840 23819 solver.cpp:398]     Test net output #0: accuracy = 0.1473
I0428 19:37:26.420862 23819 solver.cpp:398]     Test net output #1: loss = 2.28909 (* 1 = 2.28909 loss)
I0428 19:37:26.425992 23819 solver.cpp:219] Iteration 0 (0 iter/s, 0.17115s/100 iters), loss = 2.29833
I0428 19:37:26.426018 23819 solver.cpp:238]     Train net output #0: loss = 2.29833 (* 1 = 2.29833 loss)
I0428 19:37:26.426050 23819 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:26.657464 23819 solver.cpp:219] Iteration 100 (432.102 iter/s, 0.231427s/100 iters), loss = 0.547288
I0428 19:37:26.657510 23819 solver.cpp:238]     Train net output #0: loss = 0.547288 (* 1 = 0.547288 loss)
I0428 19:37:26.657536 23819 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:26.886943 23819 solver.cpp:219] Iteration 200 (435.88 iter/s, 0.229421s/100 iters), loss = 0.423961
I0428 19:37:26.886973 23819 solver.cpp:238]     Train net output #0: loss = 0.423961 (* 1 = 0.423961 loss)
I0428 19:37:26.887001 23819 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:27.115955 23819 solver.cpp:219] Iteration 300 (436.743 iter/s, 0.228967s/100 iters), loss = 0.265787
I0428 19:37:27.116000 23819 solver.cpp:238]     Train net output #0: loss = 0.265787 (* 1 = 0.265787 loss)
I0428 19:37:27.116013 23819 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:27.344314 23819 solver.cpp:219] Iteration 400 (438.021 iter/s, 0.2283s/100 iters), loss = 0.163737
I0428 19:37:27.344348 23819 solver.cpp:238]     Train net output #0: loss = 0.163737 (* 1 = 0.163737 loss)
I0428 19:37:27.344358 23819 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:27.570564 23819 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:27.728667 23826 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:27.732987 23819 solver.cpp:398]     Test net output #0: accuracy = 0.9502
I0428 19:37:27.733012 23819 solver.cpp:398]     Test net output #1: loss = 0.169832 (* 1 = 0.169832 loss)
I0428 19:37:27.735322 23819 solver.cpp:219] Iteration 500 (255.786 iter/s, 0.390952s/100 iters), loss = 0.230624
I0428 19:37:27.735347 23819 solver.cpp:238]     Train net output #0: loss = 0.230624 (* 1 = 0.230624 loss)
I0428 19:37:27.735358 23819 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:27.968662 23819 solver.cpp:219] Iteration 600 (428.631 iter/s, 0.233301s/100 iters), loss = 0.228492
I0428 19:37:27.968693 23819 solver.cpp:238]     Train net output #0: loss = 0.228492 (* 1 = 0.228492 loss)
I0428 19:37:27.968703 23819 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:28.200764 23819 solver.cpp:219] Iteration 700 (430.927 iter/s, 0.232058s/100 iters), loss = 0.231163
I0428 19:37:28.200794 23819 solver.cpp:238]     Train net output #0: loss = 0.231163 (* 1 = 0.231163 loss)
I0428 19:37:28.200829 23819 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:28.432489 23819 solver.cpp:219] Iteration 800 (431.63 iter/s, 0.23168s/100 iters), loss = 0.394564
I0428 19:37:28.432523 23819 solver.cpp:238]     Train net output #0: loss = 0.394564 (* 1 = 0.394564 loss)
I0428 19:37:28.432534 23819 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:28.662922 23819 solver.cpp:219] Iteration 900 (434.049 iter/s, 0.230389s/100 iters), loss = 0.174058
I0428 19:37:28.662953 23819 solver.cpp:238]     Train net output #0: loss = 0.174058 (* 1 = 0.174058 loss)
I0428 19:37:28.662966 23819 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:28.738828 23825 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:28.896562 23819 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:28.906236 23819 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:28.911939 23819 solver.cpp:311] Iteration 1000, loss = 0.109621
I0428 19:37:28.911969 23819 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:29.081089 23826 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:29.085822 23819 solver.cpp:398]     Test net output #0: accuracy = 0.9631
I0428 19:37:29.085850 23819 solver.cpp:398]     Test net output #1: loss = 0.11442 (* 1 = 0.11442 loss)
I0428 19:37:29.085858 23819 solver.cpp:316] Optimization Done.
I0428 19:37:29.085862 23819 caffe.cpp:259] Optimization Done.
