I0428 19:47:40.376124 26254 caffe.cpp:218] Using GPUs 0
I0428 19:47:40.414072 26254 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:40.923468 26254 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test522.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:40.923609 26254 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test522.prototxt
I0428 19:47:40.924028 26254 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:40.924047 26254 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:40.924150 26254 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:40.924232 26254 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:40.924332 26254 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:40.924355 26254 net.cpp:86] Creating Layer mnist
I0428 19:47:40.924363 26254 net.cpp:382] mnist -> data
I0428 19:47:40.924387 26254 net.cpp:382] mnist -> label
I0428 19:47:40.925482 26254 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:40.927913 26254 net.cpp:124] Setting up mnist
I0428 19:47:40.927932 26254 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:40.927937 26254 net.cpp:131] Top shape: 64 (64)
I0428 19:47:40.927942 26254 net.cpp:139] Memory required for data: 200960
I0428 19:47:40.927949 26254 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:40.927978 26254 net.cpp:86] Creating Layer conv0
I0428 19:47:40.927999 26254 net.cpp:408] conv0 <- data
I0428 19:47:40.928012 26254 net.cpp:382] conv0 -> conv0
I0428 19:47:41.212394 26254 net.cpp:124] Setting up conv0
I0428 19:47:41.212420 26254 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:41.212425 26254 net.cpp:139] Memory required for data: 938240
I0428 19:47:41.212440 26254 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:41.212453 26254 net.cpp:86] Creating Layer pool0
I0428 19:47:41.212457 26254 net.cpp:408] pool0 <- conv0
I0428 19:47:41.212462 26254 net.cpp:382] pool0 -> pool0
I0428 19:47:41.212510 26254 net.cpp:124] Setting up pool0
I0428 19:47:41.212515 26254 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:41.212519 26254 net.cpp:139] Memory required for data: 1122560
I0428 19:47:41.212522 26254 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:41.212532 26254 net.cpp:86] Creating Layer conv1
I0428 19:47:41.212535 26254 net.cpp:408] conv1 <- pool0
I0428 19:47:41.212540 26254 net.cpp:382] conv1 -> conv1
I0428 19:47:41.214360 26254 net.cpp:124] Setting up conv1
I0428 19:47:41.214375 26254 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:41.214378 26254 net.cpp:139] Memory required for data: 1155328
I0428 19:47:41.214387 26254 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:41.214395 26254 net.cpp:86] Creating Layer pool1
I0428 19:47:41.214398 26254 net.cpp:408] pool1 <- conv1
I0428 19:47:41.214403 26254 net.cpp:382] pool1 -> pool1
I0428 19:47:41.214440 26254 net.cpp:124] Setting up pool1
I0428 19:47:41.214447 26254 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:41.214448 26254 net.cpp:139] Memory required for data: 1163520
I0428 19:47:41.214452 26254 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:41.214459 26254 net.cpp:86] Creating Layer ip1
I0428 19:47:41.214462 26254 net.cpp:408] ip1 <- pool1
I0428 19:47:41.214467 26254 net.cpp:382] ip1 -> ip1
I0428 19:47:41.214566 26254 net.cpp:124] Setting up ip1
I0428 19:47:41.214574 26254 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:41.214577 26254 net.cpp:139] Memory required for data: 1166080
I0428 19:47:41.214584 26254 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:41.214591 26254 net.cpp:86] Creating Layer relu1
I0428 19:47:41.214593 26254 net.cpp:408] relu1 <- ip1
I0428 19:47:41.214597 26254 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:41.214757 26254 net.cpp:124] Setting up relu1
I0428 19:47:41.214766 26254 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:41.214768 26254 net.cpp:139] Memory required for data: 1168640
I0428 19:47:41.214771 26254 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:41.214777 26254 net.cpp:86] Creating Layer ip2
I0428 19:47:41.214781 26254 net.cpp:408] ip2 <- ip1
I0428 19:47:41.214785 26254 net.cpp:382] ip2 -> ip2
I0428 19:47:41.214877 26254 net.cpp:124] Setting up ip2
I0428 19:47:41.214884 26254 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:41.214886 26254 net.cpp:139] Memory required for data: 1175040
I0428 19:47:41.214892 26254 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:41.214898 26254 net.cpp:86] Creating Layer relu2
I0428 19:47:41.214901 26254 net.cpp:408] relu2 <- ip2
I0428 19:47:41.214905 26254 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:41.215658 26254 net.cpp:124] Setting up relu2
I0428 19:47:41.215670 26254 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:41.215674 26254 net.cpp:139] Memory required for data: 1181440
I0428 19:47:41.215677 26254 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:41.215684 26254 net.cpp:86] Creating Layer ip3
I0428 19:47:41.215688 26254 net.cpp:408] ip3 <- ip2
I0428 19:47:41.215693 26254 net.cpp:382] ip3 -> ip3
I0428 19:47:41.215790 26254 net.cpp:124] Setting up ip3
I0428 19:47:41.215798 26254 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:41.215801 26254 net.cpp:139] Memory required for data: 1184000
I0428 19:47:41.215809 26254 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:41.215814 26254 net.cpp:86] Creating Layer relu3
I0428 19:47:41.215817 26254 net.cpp:408] relu3 <- ip3
I0428 19:47:41.215821 26254 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:41.215986 26254 net.cpp:124] Setting up relu3
I0428 19:47:41.215993 26254 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:41.215996 26254 net.cpp:139] Memory required for data: 1186560
I0428 19:47:41.215999 26254 layer_factory.hpp:77] Creating layer loss
I0428 19:47:41.216006 26254 net.cpp:86] Creating Layer loss
I0428 19:47:41.216008 26254 net.cpp:408] loss <- ip3
I0428 19:47:41.216012 26254 net.cpp:408] loss <- label
I0428 19:47:41.216018 26254 net.cpp:382] loss -> loss
I0428 19:47:41.216032 26254 layer_factory.hpp:77] Creating layer loss
I0428 19:47:41.216259 26254 net.cpp:124] Setting up loss
I0428 19:47:41.216267 26254 net.cpp:131] Top shape: (1)
I0428 19:47:41.216270 26254 net.cpp:134]     with loss weight 1
I0428 19:47:41.216284 26254 net.cpp:139] Memory required for data: 1186564
I0428 19:47:41.216289 26254 net.cpp:200] loss needs backward computation.
I0428 19:47:41.216291 26254 net.cpp:200] relu3 needs backward computation.
I0428 19:47:41.216295 26254 net.cpp:200] ip3 needs backward computation.
I0428 19:47:41.216298 26254 net.cpp:200] relu2 needs backward computation.
I0428 19:47:41.216301 26254 net.cpp:200] ip2 needs backward computation.
I0428 19:47:41.216305 26254 net.cpp:200] relu1 needs backward computation.
I0428 19:47:41.216306 26254 net.cpp:200] ip1 needs backward computation.
I0428 19:47:41.216310 26254 net.cpp:200] pool1 needs backward computation.
I0428 19:47:41.216313 26254 net.cpp:200] conv1 needs backward computation.
I0428 19:47:41.216316 26254 net.cpp:200] pool0 needs backward computation.
I0428 19:47:41.216320 26254 net.cpp:200] conv0 needs backward computation.
I0428 19:47:41.216323 26254 net.cpp:202] mnist does not need backward computation.
I0428 19:47:41.216326 26254 net.cpp:244] This network produces output loss
I0428 19:47:41.216336 26254 net.cpp:257] Network initialization done.
I0428 19:47:41.216665 26254 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test522.prototxt
I0428 19:47:41.216691 26254 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:41.216783 26254 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:41.216907 26254 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:41.216954 26254 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:41.216967 26254 net.cpp:86] Creating Layer mnist
I0428 19:47:41.216972 26254 net.cpp:382] mnist -> data
I0428 19:47:41.216980 26254 net.cpp:382] mnist -> label
I0428 19:47:41.217084 26254 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:41.219010 26254 net.cpp:124] Setting up mnist
I0428 19:47:41.219023 26254 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:41.219028 26254 net.cpp:131] Top shape: 100 (100)
I0428 19:47:41.219030 26254 net.cpp:139] Memory required for data: 314000
I0428 19:47:41.219034 26254 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:41.219041 26254 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:41.219045 26254 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:41.219050 26254 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:41.219058 26254 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:41.219126 26254 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:41.219132 26254 net.cpp:131] Top shape: 100 (100)
I0428 19:47:41.219136 26254 net.cpp:131] Top shape: 100 (100)
I0428 19:47:41.219139 26254 net.cpp:139] Memory required for data: 314800
I0428 19:47:41.219142 26254 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:41.219151 26254 net.cpp:86] Creating Layer conv0
I0428 19:47:41.219156 26254 net.cpp:408] conv0 <- data
I0428 19:47:41.219161 26254 net.cpp:382] conv0 -> conv0
I0428 19:47:41.220942 26254 net.cpp:124] Setting up conv0
I0428 19:47:41.220958 26254 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:41.220963 26254 net.cpp:139] Memory required for data: 1466800
I0428 19:47:41.220973 26254 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:41.220993 26254 net.cpp:86] Creating Layer pool0
I0428 19:47:41.220996 26254 net.cpp:408] pool0 <- conv0
I0428 19:47:41.221001 26254 net.cpp:382] pool0 -> pool0
I0428 19:47:41.221040 26254 net.cpp:124] Setting up pool0
I0428 19:47:41.221045 26254 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:41.221047 26254 net.cpp:139] Memory required for data: 1754800
I0428 19:47:41.221051 26254 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:41.221061 26254 net.cpp:86] Creating Layer conv1
I0428 19:47:41.221065 26254 net.cpp:408] conv1 <- pool0
I0428 19:47:41.221071 26254 net.cpp:382] conv1 -> conv1
I0428 19:47:41.223158 26254 net.cpp:124] Setting up conv1
I0428 19:47:41.223172 26254 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:41.223176 26254 net.cpp:139] Memory required for data: 1806000
I0428 19:47:41.223186 26254 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:41.223192 26254 net.cpp:86] Creating Layer pool1
I0428 19:47:41.223196 26254 net.cpp:408] pool1 <- conv1
I0428 19:47:41.223209 26254 net.cpp:382] pool1 -> pool1
I0428 19:47:41.223248 26254 net.cpp:124] Setting up pool1
I0428 19:47:41.223254 26254 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:41.223258 26254 net.cpp:139] Memory required for data: 1818800
I0428 19:47:41.223259 26254 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:41.223266 26254 net.cpp:86] Creating Layer ip1
I0428 19:47:41.223276 26254 net.cpp:408] ip1 <- pool1
I0428 19:47:41.223282 26254 net.cpp:382] ip1 -> ip1
I0428 19:47:41.223387 26254 net.cpp:124] Setting up ip1
I0428 19:47:41.223394 26254 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:41.223407 26254 net.cpp:139] Memory required for data: 1822800
I0428 19:47:41.223415 26254 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:41.223420 26254 net.cpp:86] Creating Layer relu1
I0428 19:47:41.223423 26254 net.cpp:408] relu1 <- ip1
I0428 19:47:41.223428 26254 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:41.223698 26254 net.cpp:124] Setting up relu1
I0428 19:47:41.223707 26254 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:41.223711 26254 net.cpp:139] Memory required for data: 1826800
I0428 19:47:41.223713 26254 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:41.223721 26254 net.cpp:86] Creating Layer ip2
I0428 19:47:41.223723 26254 net.cpp:408] ip2 <- ip1
I0428 19:47:41.223731 26254 net.cpp:382] ip2 -> ip2
I0428 19:47:41.223834 26254 net.cpp:124] Setting up ip2
I0428 19:47:41.223841 26254 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:41.223845 26254 net.cpp:139] Memory required for data: 1836800
I0428 19:47:41.223856 26254 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:41.223860 26254 net.cpp:86] Creating Layer relu2
I0428 19:47:41.223865 26254 net.cpp:408] relu2 <- ip2
I0428 19:47:41.223881 26254 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:41.224035 26254 net.cpp:124] Setting up relu2
I0428 19:47:41.224043 26254 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:41.224047 26254 net.cpp:139] Memory required for data: 1846800
I0428 19:47:41.224050 26254 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:41.224056 26254 net.cpp:86] Creating Layer ip3
I0428 19:47:41.224059 26254 net.cpp:408] ip3 <- ip2
I0428 19:47:41.224064 26254 net.cpp:382] ip3 -> ip3
I0428 19:47:41.224162 26254 net.cpp:124] Setting up ip3
I0428 19:47:41.224169 26254 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:41.224172 26254 net.cpp:139] Memory required for data: 1850800
I0428 19:47:41.224180 26254 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:41.224184 26254 net.cpp:86] Creating Layer relu3
I0428 19:47:41.224200 26254 net.cpp:408] relu3 <- ip3
I0428 19:47:41.224205 26254 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:41.225078 26254 net.cpp:124] Setting up relu3
I0428 19:47:41.225091 26254 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:41.225095 26254 net.cpp:139] Memory required for data: 1854800
I0428 19:47:41.225098 26254 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:41.225106 26254 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:41.225124 26254 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:41.225129 26254 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:41.225136 26254 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:41.225191 26254 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:41.225198 26254 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:41.225201 26254 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:41.225203 26254 net.cpp:139] Memory required for data: 1862800
I0428 19:47:41.225206 26254 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:41.225211 26254 net.cpp:86] Creating Layer accuracy
I0428 19:47:41.225214 26254 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:41.225219 26254 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:41.225224 26254 net.cpp:382] accuracy -> accuracy
I0428 19:47:41.225231 26254 net.cpp:124] Setting up accuracy
I0428 19:47:41.225235 26254 net.cpp:131] Top shape: (1)
I0428 19:47:41.225239 26254 net.cpp:139] Memory required for data: 1862804
I0428 19:47:41.225241 26254 layer_factory.hpp:77] Creating layer loss
I0428 19:47:41.225252 26254 net.cpp:86] Creating Layer loss
I0428 19:47:41.225255 26254 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:41.225260 26254 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:41.225265 26254 net.cpp:382] loss -> loss
I0428 19:47:41.225271 26254 layer_factory.hpp:77] Creating layer loss
I0428 19:47:41.225517 26254 net.cpp:124] Setting up loss
I0428 19:47:41.225525 26254 net.cpp:131] Top shape: (1)
I0428 19:47:41.225529 26254 net.cpp:134]     with loss weight 1
I0428 19:47:41.225534 26254 net.cpp:139] Memory required for data: 1862808
I0428 19:47:41.225554 26254 net.cpp:200] loss needs backward computation.
I0428 19:47:41.225569 26254 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:41.225574 26254 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:41.225582 26254 net.cpp:200] relu3 needs backward computation.
I0428 19:47:41.225584 26254 net.cpp:200] ip3 needs backward computation.
I0428 19:47:41.225587 26254 net.cpp:200] relu2 needs backward computation.
I0428 19:47:41.225590 26254 net.cpp:200] ip2 needs backward computation.
I0428 19:47:41.225594 26254 net.cpp:200] relu1 needs backward computation.
I0428 19:47:41.225596 26254 net.cpp:200] ip1 needs backward computation.
I0428 19:47:41.225605 26254 net.cpp:200] pool1 needs backward computation.
I0428 19:47:41.225607 26254 net.cpp:200] conv1 needs backward computation.
I0428 19:47:41.225611 26254 net.cpp:200] pool0 needs backward computation.
I0428 19:47:41.225615 26254 net.cpp:200] conv0 needs backward computation.
I0428 19:47:41.225618 26254 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:41.225622 26254 net.cpp:202] mnist does not need backward computation.
I0428 19:47:41.225625 26254 net.cpp:244] This network produces output accuracy
I0428 19:47:41.225628 26254 net.cpp:244] This network produces output loss
I0428 19:47:41.225639 26254 net.cpp:257] Network initialization done.
I0428 19:47:41.225682 26254 solver.cpp:56] Solver scaffolding done.
I0428 19:47:41.226012 26254 caffe.cpp:248] Starting Optimization
I0428 19:47:41.226018 26254 solver.cpp:273] Solving LeNet
I0428 19:47:41.226028 26254 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:41.226821 26254 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:41.230307 26254 blocking_queue.cpp:49] Waiting for data
I0428 19:47:41.301033 26261 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:41.301545 26254 solver.cpp:398]     Test net output #0: accuracy = 0.0955
I0428 19:47:41.301564 26254 solver.cpp:398]     Test net output #1: loss = 2.30735 (* 1 = 2.30735 loss)
I0428 19:47:41.303330 26254 solver.cpp:219] Iteration 0 (0 iter/s, 0.0772751s/100 iters), loss = 2.30869
I0428 19:47:41.303364 26254 solver.cpp:238]     Train net output #0: loss = 2.30869 (* 1 = 2.30869 loss)
I0428 19:47:41.303381 26254 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:41.377876 26254 solver.cpp:219] Iteration 100 (1342.24 iter/s, 0.0745025s/100 iters), loss = 1.34887
I0428 19:47:41.377902 26254 solver.cpp:238]     Train net output #0: loss = 1.34887 (* 1 = 1.34887 loss)
I0428 19:47:41.377907 26254 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:41.447980 26254 solver.cpp:219] Iteration 200 (1427.14 iter/s, 0.0700703s/100 iters), loss = 1.49574
I0428 19:47:41.448004 26254 solver.cpp:238]     Train net output #0: loss = 1.49574 (* 1 = 1.49574 loss)
I0428 19:47:41.448009 26254 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:41.517294 26254 solver.cpp:219] Iteration 300 (1443.38 iter/s, 0.0692818s/100 iters), loss = 0.850938
I0428 19:47:41.517318 26254 solver.cpp:238]     Train net output #0: loss = 0.850938 (* 1 = 0.850938 loss)
I0428 19:47:41.517323 26254 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:41.585577 26254 solver.cpp:219] Iteration 400 (1465.19 iter/s, 0.0682506s/100 iters), loss = 0.671755
I0428 19:47:41.585599 26254 solver.cpp:238]     Train net output #0: loss = 0.671755 (* 1 = 0.671755 loss)
I0428 19:47:41.585605 26254 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:41.657085 26254 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:41.731477 26261 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:41.732007 26254 solver.cpp:398]     Test net output #0: accuracy = 0.8452
I0428 19:47:41.732029 26254 solver.cpp:398]     Test net output #1: loss = 0.585694 (* 1 = 0.585694 loss)
I0428 19:47:41.732781 26254 solver.cpp:219] Iteration 500 (679.489 iter/s, 0.147169s/100 iters), loss = 0.801534
I0428 19:47:41.732803 26254 solver.cpp:238]     Train net output #0: loss = 0.801534 (* 1 = 0.801534 loss)
I0428 19:47:41.732849 26254 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:41.807710 26254 solver.cpp:219] Iteration 600 (1335.14 iter/s, 0.0748983s/100 iters), loss = 0.448508
I0428 19:47:41.807734 26254 solver.cpp:238]     Train net output #0: loss = 0.448508 (* 1 = 0.448508 loss)
I0428 19:47:41.807739 26254 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:41.877102 26254 solver.cpp:219] Iteration 700 (1441.76 iter/s, 0.0693596s/100 iters), loss = 0.673792
I0428 19:47:41.877125 26254 solver.cpp:238]     Train net output #0: loss = 0.673792 (* 1 = 0.673792 loss)
I0428 19:47:41.877147 26254 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:41.947607 26254 solver.cpp:219] Iteration 800 (1418.99 iter/s, 0.0704726s/100 iters), loss = 0.724894
I0428 19:47:41.947628 26254 solver.cpp:238]     Train net output #0: loss = 0.724894 (* 1 = 0.724894 loss)
I0428 19:47:41.947649 26254 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:42.016315 26254 solver.cpp:219] Iteration 900 (1456.06 iter/s, 0.0686787s/100 iters), loss = 0.460584
I0428 19:47:42.016338 26254 solver.cpp:238]     Train net output #0: loss = 0.460584 (* 1 = 0.460584 loss)
I0428 19:47:42.016360 26254 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:42.039724 26260 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:42.085034 26254 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:42.085688 26254 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:42.086086 26254 solver.cpp:311] Iteration 1000, loss = 0.523692
I0428 19:47:42.086100 26254 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:42.139175 26261 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:42.139659 26254 solver.cpp:398]     Test net output #0: accuracy = 0.8651
I0428 19:47:42.139677 26254 solver.cpp:398]     Test net output #1: loss = 0.461413 (* 1 = 0.461413 loss)
I0428 19:47:42.139683 26254 solver.cpp:316] Optimization Done.
I0428 19:47:42.139685 26254 caffe.cpp:259] Optimization Done.
