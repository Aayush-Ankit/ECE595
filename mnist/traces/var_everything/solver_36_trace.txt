I0426 20:49:26.827713 31527 caffe.cpp:218] Using GPUs 0
I0426 20:49:26.866708 31527 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:27.389281 31527 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test36.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:27.389420 31527 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test36.prototxt
I0426 20:49:27.389776 31527 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:27.389792 31527 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:27.389878 31527 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:27.389945 31527 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:27.390043 31527 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:27.390067 31527 net.cpp:86] Creating Layer mnist
I0426 20:49:27.390075 31527 net.cpp:382] mnist -> data
I0426 20:49:27.390097 31527 net.cpp:382] mnist -> label
I0426 20:49:27.391189 31527 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:27.393719 31527 net.cpp:124] Setting up mnist
I0426 20:49:27.393738 31527 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:27.393743 31527 net.cpp:131] Top shape: 64 (64)
I0426 20:49:27.393748 31527 net.cpp:139] Memory required for data: 200960
I0426 20:49:27.393754 31527 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:27.393770 31527 net.cpp:86] Creating Layer conv0
I0426 20:49:27.393775 31527 net.cpp:408] conv0 <- data
I0426 20:49:27.393786 31527 net.cpp:382] conv0 -> conv0
I0426 20:49:27.670724 31527 net.cpp:124] Setting up conv0
I0426 20:49:27.670749 31527 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:49:27.670753 31527 net.cpp:139] Memory required for data: 3887360
I0426 20:49:27.670768 31527 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:27.670779 31527 net.cpp:86] Creating Layer pool0
I0426 20:49:27.670815 31527 net.cpp:408] pool0 <- conv0
I0426 20:49:27.670821 31527 net.cpp:382] pool0 -> pool0
I0426 20:49:27.670866 31527 net.cpp:124] Setting up pool0
I0426 20:49:27.670872 31527 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:49:27.670876 31527 net.cpp:139] Memory required for data: 4808960
I0426 20:49:27.670878 31527 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:27.670886 31527 net.cpp:86] Creating Layer ip1
I0426 20:49:27.670889 31527 net.cpp:408] ip1 <- pool0
I0426 20:49:27.670893 31527 net.cpp:382] ip1 -> ip1
I0426 20:49:27.673702 31527 net.cpp:124] Setting up ip1
I0426 20:49:27.673714 31527 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:27.673717 31527 net.cpp:139] Memory required for data: 4834560
I0426 20:49:27.673725 31527 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:27.673732 31527 net.cpp:86] Creating Layer relu1
I0426 20:49:27.673734 31527 net.cpp:408] relu1 <- ip1
I0426 20:49:27.673739 31527 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:27.673907 31527 net.cpp:124] Setting up relu1
I0426 20:49:27.673914 31527 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:27.673918 31527 net.cpp:139] Memory required for data: 4860160
I0426 20:49:27.673920 31527 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:27.673928 31527 net.cpp:86] Creating Layer ip2
I0426 20:49:27.673930 31527 net.cpp:408] ip2 <- ip1
I0426 20:49:27.673934 31527 net.cpp:382] ip2 -> ip2
I0426 20:49:27.674211 31527 net.cpp:124] Setting up ip2
I0426 20:49:27.674218 31527 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:27.674221 31527 net.cpp:139] Memory required for data: 4936960
I0426 20:49:27.674228 31527 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:27.674233 31527 net.cpp:86] Creating Layer relu2
I0426 20:49:27.674237 31527 net.cpp:408] relu2 <- ip2
I0426 20:49:27.674240 31527 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:27.675170 31527 net.cpp:124] Setting up relu2
I0426 20:49:27.675182 31527 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:27.675201 31527 net.cpp:139] Memory required for data: 5013760
I0426 20:49:27.675204 31527 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:27.675227 31527 net.cpp:86] Creating Layer ip3
I0426 20:49:27.675231 31527 net.cpp:408] ip3 <- ip2
I0426 20:49:27.675236 31527 net.cpp:382] ip3 -> ip3
I0426 20:49:27.676283 31527 net.cpp:124] Setting up ip3
I0426 20:49:27.676295 31527 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:27.676314 31527 net.cpp:139] Memory required for data: 5016320
I0426 20:49:27.676321 31527 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:27.676326 31527 net.cpp:86] Creating Layer relu3
I0426 20:49:27.676329 31527 net.cpp:408] relu3 <- ip3
I0426 20:49:27.676334 31527 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:27.676499 31527 net.cpp:124] Setting up relu3
I0426 20:49:27.676507 31527 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:27.676511 31527 net.cpp:139] Memory required for data: 5018880
I0426 20:49:27.676513 31527 layer_factory.hpp:77] Creating layer loss
I0426 20:49:27.676519 31527 net.cpp:86] Creating Layer loss
I0426 20:49:27.676522 31527 net.cpp:408] loss <- ip3
I0426 20:49:27.676527 31527 net.cpp:408] loss <- label
I0426 20:49:27.676532 31527 net.cpp:382] loss -> loss
I0426 20:49:27.676548 31527 layer_factory.hpp:77] Creating layer loss
I0426 20:49:27.676772 31527 net.cpp:124] Setting up loss
I0426 20:49:27.676781 31527 net.cpp:131] Top shape: (1)
I0426 20:49:27.676785 31527 net.cpp:134]     with loss weight 1
I0426 20:49:27.676800 31527 net.cpp:139] Memory required for data: 5018884
I0426 20:49:27.676802 31527 net.cpp:200] loss needs backward computation.
I0426 20:49:27.676806 31527 net.cpp:200] relu3 needs backward computation.
I0426 20:49:27.676831 31527 net.cpp:200] ip3 needs backward computation.
I0426 20:49:27.676836 31527 net.cpp:200] relu2 needs backward computation.
I0426 20:49:27.676837 31527 net.cpp:200] ip2 needs backward computation.
I0426 20:49:27.676841 31527 net.cpp:200] relu1 needs backward computation.
I0426 20:49:27.676843 31527 net.cpp:200] ip1 needs backward computation.
I0426 20:49:27.676856 31527 net.cpp:200] pool0 needs backward computation.
I0426 20:49:27.676861 31527 net.cpp:200] conv0 needs backward computation.
I0426 20:49:27.676879 31527 net.cpp:202] mnist does not need backward computation.
I0426 20:49:27.676882 31527 net.cpp:244] This network produces output loss
I0426 20:49:27.676892 31527 net.cpp:257] Network initialization done.
I0426 20:49:27.677248 31527 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test36.prototxt
I0426 20:49:27.677304 31527 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:27.677384 31527 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:27.677445 31527 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:27.677490 31527 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:27.677502 31527 net.cpp:86] Creating Layer mnist
I0426 20:49:27.677506 31527 net.cpp:382] mnist -> data
I0426 20:49:27.677515 31527 net.cpp:382] mnist -> label
I0426 20:49:27.677608 31527 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:27.679512 31527 net.cpp:124] Setting up mnist
I0426 20:49:27.679541 31527 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:27.679546 31527 net.cpp:131] Top shape: 100 (100)
I0426 20:49:27.679549 31527 net.cpp:139] Memory required for data: 314000
I0426 20:49:27.679553 31527 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:27.679569 31527 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:27.679574 31527 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:27.679579 31527 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:27.679584 31527 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:27.679641 31527 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:27.679647 31527 net.cpp:131] Top shape: 100 (100)
I0426 20:49:27.679651 31527 net.cpp:131] Top shape: 100 (100)
I0426 20:49:27.679654 31527 net.cpp:139] Memory required for data: 314800
I0426 20:49:27.679666 31527 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:27.679675 31527 net.cpp:86] Creating Layer conv0
I0426 20:49:27.679678 31527 net.cpp:408] conv0 <- data
I0426 20:49:27.679683 31527 net.cpp:382] conv0 -> conv0
I0426 20:49:27.681339 31527 net.cpp:124] Setting up conv0
I0426 20:49:27.681352 31527 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:49:27.681356 31527 net.cpp:139] Memory required for data: 6074800
I0426 20:49:27.681365 31527 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:27.681370 31527 net.cpp:86] Creating Layer pool0
I0426 20:49:27.681373 31527 net.cpp:408] pool0 <- conv0
I0426 20:49:27.681378 31527 net.cpp:382] pool0 -> pool0
I0426 20:49:27.681409 31527 net.cpp:124] Setting up pool0
I0426 20:49:27.681416 31527 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:49:27.681419 31527 net.cpp:139] Memory required for data: 7514800
I0426 20:49:27.681421 31527 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:27.681443 31527 net.cpp:86] Creating Layer ip1
I0426 20:49:27.681447 31527 net.cpp:408] ip1 <- pool0
I0426 20:49:27.681466 31527 net.cpp:382] ip1 -> ip1
I0426 20:49:27.683578 31527 net.cpp:124] Setting up ip1
I0426 20:49:27.683584 31527 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:27.683588 31527 net.cpp:139] Memory required for data: 7554800
I0426 20:49:27.683594 31527 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:27.683598 31527 net.cpp:86] Creating Layer relu1
I0426 20:49:27.683612 31527 net.cpp:408] relu1 <- ip1
I0426 20:49:27.683616 31527 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:27.683764 31527 net.cpp:124] Setting up relu1
I0426 20:49:27.683773 31527 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:27.683775 31527 net.cpp:139] Memory required for data: 7594800
I0426 20:49:27.683779 31527 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:27.683784 31527 net.cpp:86] Creating Layer ip2
I0426 20:49:27.683786 31527 net.cpp:408] ip2 <- ip1
I0426 20:49:27.683791 31527 net.cpp:382] ip2 -> ip2
I0426 20:49:27.684069 31527 net.cpp:124] Setting up ip2
I0426 20:49:27.684077 31527 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:27.684079 31527 net.cpp:139] Memory required for data: 7714800
I0426 20:49:27.684087 31527 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:27.684090 31527 net.cpp:86] Creating Layer relu2
I0426 20:49:27.684093 31527 net.cpp:408] relu2 <- ip2
I0426 20:49:27.684098 31527 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:27.685009 31527 net.cpp:124] Setting up relu2
I0426 20:49:27.685021 31527 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:27.685040 31527 net.cpp:139] Memory required for data: 7834800
I0426 20:49:27.685045 31527 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:27.685051 31527 net.cpp:86] Creating Layer ip3
I0426 20:49:27.685055 31527 net.cpp:408] ip3 <- ip2
I0426 20:49:27.685060 31527 net.cpp:382] ip3 -> ip3
I0426 20:49:27.685250 31527 net.cpp:124] Setting up ip3
I0426 20:49:27.685272 31527 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:27.685276 31527 net.cpp:139] Memory required for data: 7838800
I0426 20:49:27.685281 31527 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:27.685284 31527 net.cpp:86] Creating Layer relu3
I0426 20:49:27.685287 31527 net.cpp:408] relu3 <- ip3
I0426 20:49:27.685290 31527 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:27.685426 31527 net.cpp:124] Setting up relu3
I0426 20:49:27.685446 31527 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:27.685448 31527 net.cpp:139] Memory required for data: 7842800
I0426 20:49:27.685451 31527 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:27.685456 31527 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:27.685457 31527 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:27.685462 31527 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:27.685467 31527 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:27.685498 31527 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:27.685503 31527 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:27.685516 31527 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:27.685518 31527 net.cpp:139] Memory required for data: 7850800
I0426 20:49:27.685521 31527 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:27.685526 31527 net.cpp:86] Creating Layer accuracy
I0426 20:49:27.685529 31527 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:27.685534 31527 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:27.685537 31527 net.cpp:382] accuracy -> accuracy
I0426 20:49:27.685544 31527 net.cpp:124] Setting up accuracy
I0426 20:49:27.685547 31527 net.cpp:131] Top shape: (1)
I0426 20:49:27.685550 31527 net.cpp:139] Memory required for data: 7850804
I0426 20:49:27.685554 31527 layer_factory.hpp:77] Creating layer loss
I0426 20:49:27.685557 31527 net.cpp:86] Creating Layer loss
I0426 20:49:27.685560 31527 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:27.685564 31527 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:27.685567 31527 net.cpp:382] loss -> loss
I0426 20:49:27.685572 31527 layer_factory.hpp:77] Creating layer loss
I0426 20:49:27.685778 31527 net.cpp:124] Setting up loss
I0426 20:49:27.685786 31527 net.cpp:131] Top shape: (1)
I0426 20:49:27.685789 31527 net.cpp:134]     with loss weight 1
I0426 20:49:27.685796 31527 net.cpp:139] Memory required for data: 7850808
I0426 20:49:27.685798 31527 net.cpp:200] loss needs backward computation.
I0426 20:49:27.685803 31527 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:27.685806 31527 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:27.685809 31527 net.cpp:200] relu3 needs backward computation.
I0426 20:49:27.685812 31527 net.cpp:200] ip3 needs backward computation.
I0426 20:49:27.685816 31527 net.cpp:200] relu2 needs backward computation.
I0426 20:49:27.685817 31527 net.cpp:200] ip2 needs backward computation.
I0426 20:49:27.685820 31527 net.cpp:200] relu1 needs backward computation.
I0426 20:49:27.685824 31527 net.cpp:200] ip1 needs backward computation.
I0426 20:49:27.685827 31527 net.cpp:200] pool0 needs backward computation.
I0426 20:49:27.685830 31527 net.cpp:200] conv0 needs backward computation.
I0426 20:49:27.685833 31527 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:27.685837 31527 net.cpp:202] mnist does not need backward computation.
I0426 20:49:27.685839 31527 net.cpp:244] This network produces output accuracy
I0426 20:49:27.685842 31527 net.cpp:244] This network produces output loss
I0426 20:49:27.685853 31527 net.cpp:257] Network initialization done.
I0426 20:49:27.685885 31527 solver.cpp:56] Solver scaffolding done.
I0426 20:49:27.686144 31527 caffe.cpp:248] Starting Optimization
I0426 20:49:27.686151 31527 solver.cpp:273] Solving LeNet
I0426 20:49:27.686154 31527 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:27.688190 31527 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:27.694819 31527 blocking_queue.cpp:49] Waiting for data
I0426 20:49:27.766034 31534 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:27.766666 31527 solver.cpp:398]     Test net output #0: accuracy = 0.0964
I0426 20:49:27.766685 31527 solver.cpp:398]     Test net output #1: loss = 2.31712 (* 1 = 2.31712 loss)
I0426 20:49:27.770403 31527 solver.cpp:219] Iteration 0 (-9.64324e-31 iter/s, 0.0842251s/100 iters), loss = 2.31354
I0426 20:49:27.770427 31527 solver.cpp:238]     Train net output #0: loss = 2.31354 (* 1 = 2.31354 loss)
I0426 20:49:27.770453 31527 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:27.862690 31527 solver.cpp:219] Iteration 100 (1083.97 iter/s, 0.0922532s/100 iters), loss = 0.263654
I0426 20:49:27.862715 31527 solver.cpp:238]     Train net output #0: loss = 0.263654 (* 1 = 0.263654 loss)
I0426 20:49:27.862720 31527 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:27.952126 31527 solver.cpp:219] Iteration 200 (1118.54 iter/s, 0.0894025s/100 iters), loss = 0.185499
I0426 20:49:27.952150 31527 solver.cpp:238]     Train net output #0: loss = 0.185499 (* 1 = 0.185499 loss)
I0426 20:49:27.952157 31527 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:28.042891 31527 solver.cpp:219] Iteration 300 (1102.15 iter/s, 0.0907314s/100 iters), loss = 0.221665
I0426 20:49:28.042915 31527 solver.cpp:238]     Train net output #0: loss = 0.221665 (* 1 = 0.221665 loss)
I0426 20:49:28.042922 31527 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:28.133087 31527 solver.cpp:219] Iteration 400 (1109.11 iter/s, 0.0901622s/100 iters), loss = 0.104391
I0426 20:49:28.133112 31527 solver.cpp:238]     Train net output #0: loss = 0.104391 (* 1 = 0.104391 loss)
I0426 20:49:28.133118 31527 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:28.223897 31527 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:28.278182 31534 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:28.278795 31527 solver.cpp:398]     Test net output #0: accuracy = 0.9539
I0426 20:49:28.278826 31527 solver.cpp:398]     Test net output #1: loss = 0.144357 (* 1 = 0.144357 loss)
I0426 20:49:28.279726 31527 solver.cpp:219] Iteration 500 (682.114 iter/s, 0.146603s/100 iters), loss = 0.268515
I0426 20:49:28.279778 31527 solver.cpp:238]     Train net output #0: loss = 0.268515 (* 1 = 0.268515 loss)
I0426 20:49:28.279788 31527 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:28.377369 31527 solver.cpp:219] Iteration 600 (1024.79 iter/s, 0.0975811s/100 iters), loss = 0.130631
I0426 20:49:28.377398 31527 solver.cpp:238]     Train net output #0: loss = 0.130631 (* 1 = 0.130631 loss)
I0426 20:49:28.377404 31527 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:28.468508 31527 solver.cpp:219] Iteration 700 (1097.67 iter/s, 0.0911021s/100 iters), loss = 0.24542
I0426 20:49:28.468533 31527 solver.cpp:238]     Train net output #0: loss = 0.245419 (* 1 = 0.245419 loss)
I0426 20:49:28.468542 31527 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:28.557672 31527 solver.cpp:219] Iteration 800 (1121.96 iter/s, 0.08913s/100 iters), loss = 0.209362
I0426 20:49:28.557711 31527 solver.cpp:238]     Train net output #0: loss = 0.209362 (* 1 = 0.209362 loss)
I0426 20:49:28.557734 31527 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:28.647379 31527 solver.cpp:219] Iteration 900 (1115.33 iter/s, 0.0896594s/100 iters), loss = 0.158311
I0426 20:49:28.647404 31527 solver.cpp:238]     Train net output #0: loss = 0.158311 (* 1 = 0.158311 loss)
I0426 20:49:28.647426 31527 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:28.677438 31533 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:28.736017 31527 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:28.741097 31527 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:28.744019 31527 solver.cpp:311] Iteration 1000, loss = 0.117628
I0426 20:49:28.744035 31527 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:28.818822 31534 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:28.819443 31527 solver.cpp:398]     Test net output #0: accuracy = 0.9723
I0426 20:49:28.819463 31527 solver.cpp:398]     Test net output #1: loss = 0.0867772 (* 1 = 0.0867772 loss)
I0426 20:49:28.819468 31527 solver.cpp:316] Optimization Done.
I0426 20:49:28.819470 31527 caffe.cpp:259] Optimization Done.
