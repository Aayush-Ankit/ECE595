I0426 20:53:50.929934 32555 caffe.cpp:218] Using GPUs 0
I0426 20:53:50.964499 32555 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:51.427189 32555 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test146.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:51.427340 32555 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test146.prototxt
I0426 20:53:51.427670 32555 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:51.427685 32555 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:51.427767 32555 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:51.427832 32555 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:51.427914 32555 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:51.427935 32555 net.cpp:86] Creating Layer mnist
I0426 20:53:51.427942 32555 net.cpp:382] mnist -> data
I0426 20:53:51.427960 32555 net.cpp:382] mnist -> label
I0426 20:53:51.428894 32555 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:51.430992 32555 net.cpp:124] Setting up mnist
I0426 20:53:51.431006 32555 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:51.431012 32555 net.cpp:131] Top shape: 64 (64)
I0426 20:53:51.431015 32555 net.cpp:139] Memory required for data: 200960
I0426 20:53:51.431020 32555 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:51.431031 32555 net.cpp:86] Creating Layer conv0
I0426 20:53:51.431062 32555 net.cpp:408] conv0 <- data
I0426 20:53:51.431073 32555 net.cpp:382] conv0 -> conv0
I0426 20:53:51.663677 32555 net.cpp:124] Setting up conv0
I0426 20:53:51.663702 32555 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:53:51.663707 32555 net.cpp:139] Memory required for data: 7573760
I0426 20:53:51.663722 32555 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:51.663733 32555 net.cpp:86] Creating Layer pool0
I0426 20:53:51.663738 32555 net.cpp:408] pool0 <- conv0
I0426 20:53:51.663743 32555 net.cpp:382] pool0 -> pool0
I0426 20:53:51.663799 32555 net.cpp:124] Setting up pool0
I0426 20:53:51.663803 32555 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:53:51.663806 32555 net.cpp:139] Memory required for data: 9416960
I0426 20:53:51.663810 32555 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:51.663820 32555 net.cpp:86] Creating Layer conv1
I0426 20:53:51.663822 32555 net.cpp:408] conv1 <- pool0
I0426 20:53:51.663827 32555 net.cpp:382] conv1 -> conv1
I0426 20:53:51.666543 32555 net.cpp:124] Setting up conv1
I0426 20:53:51.666558 32555 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:53:51.666560 32555 net.cpp:139] Memory required for data: 9580800
I0426 20:53:51.666568 32555 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:51.666576 32555 net.cpp:86] Creating Layer pool1
I0426 20:53:51.666579 32555 net.cpp:408] pool1 <- conv1
I0426 20:53:51.666584 32555 net.cpp:382] pool1 -> pool1
I0426 20:53:51.666635 32555 net.cpp:124] Setting up pool1
I0426 20:53:51.666640 32555 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:53:51.666642 32555 net.cpp:139] Memory required for data: 9621760
I0426 20:53:51.666646 32555 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:51.666651 32555 net.cpp:86] Creating Layer ip1
I0426 20:53:51.666654 32555 net.cpp:408] ip1 <- pool1
I0426 20:53:51.666658 32555 net.cpp:382] ip1 -> ip1
I0426 20:53:51.666851 32555 net.cpp:124] Setting up ip1
I0426 20:53:51.666858 32555 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:51.666862 32555 net.cpp:139] Memory required for data: 9647360
I0426 20:53:51.666868 32555 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:51.666874 32555 net.cpp:86] Creating Layer relu1
I0426 20:53:51.666877 32555 net.cpp:408] relu1 <- ip1
I0426 20:53:51.666882 32555 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:51.667034 32555 net.cpp:124] Setting up relu1
I0426 20:53:51.667042 32555 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:51.667045 32555 net.cpp:139] Memory required for data: 9672960
I0426 20:53:51.667048 32555 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:51.667054 32555 net.cpp:86] Creating Layer ip2
I0426 20:53:51.667057 32555 net.cpp:408] ip2 <- ip1
I0426 20:53:51.667062 32555 net.cpp:382] ip2 -> ip2
I0426 20:53:51.667197 32555 net.cpp:124] Setting up ip2
I0426 20:53:51.667204 32555 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:51.667207 32555 net.cpp:139] Memory required for data: 9698560
I0426 20:53:51.667212 32555 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:51.667218 32555 net.cpp:86] Creating Layer relu2
I0426 20:53:51.667222 32555 net.cpp:408] relu2 <- ip2
I0426 20:53:51.667225 32555 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:51.668030 32555 net.cpp:124] Setting up relu2
I0426 20:53:51.668040 32555 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:51.668045 32555 net.cpp:139] Memory required for data: 9724160
I0426 20:53:51.668047 32555 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:51.668068 32555 net.cpp:86] Creating Layer ip3
I0426 20:53:51.668071 32555 net.cpp:408] ip3 <- ip2
I0426 20:53:51.668076 32555 net.cpp:382] ip3 -> ip3
I0426 20:53:51.668189 32555 net.cpp:124] Setting up ip3
I0426 20:53:51.668196 32555 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:51.668200 32555 net.cpp:139] Memory required for data: 9726720
I0426 20:53:51.668206 32555 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:51.668211 32555 net.cpp:86] Creating Layer relu3
I0426 20:53:51.668215 32555 net.cpp:408] relu3 <- ip3
I0426 20:53:51.668218 32555 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:51.668390 32555 net.cpp:124] Setting up relu3
I0426 20:53:51.668400 32555 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:51.668402 32555 net.cpp:139] Memory required for data: 9729280
I0426 20:53:51.668406 32555 layer_factory.hpp:77] Creating layer loss
I0426 20:53:51.668411 32555 net.cpp:86] Creating Layer loss
I0426 20:53:51.668414 32555 net.cpp:408] loss <- ip3
I0426 20:53:51.668418 32555 net.cpp:408] loss <- label
I0426 20:53:51.668423 32555 net.cpp:382] loss -> loss
I0426 20:53:51.668437 32555 layer_factory.hpp:77] Creating layer loss
I0426 20:53:51.668656 32555 net.cpp:124] Setting up loss
I0426 20:53:51.668679 32555 net.cpp:131] Top shape: (1)
I0426 20:53:51.668682 32555 net.cpp:134]     with loss weight 1
I0426 20:53:51.668697 32555 net.cpp:139] Memory required for data: 9729284
I0426 20:53:51.668700 32555 net.cpp:200] loss needs backward computation.
I0426 20:53:51.668704 32555 net.cpp:200] relu3 needs backward computation.
I0426 20:53:51.668707 32555 net.cpp:200] ip3 needs backward computation.
I0426 20:53:51.668710 32555 net.cpp:200] relu2 needs backward computation.
I0426 20:53:51.668712 32555 net.cpp:200] ip2 needs backward computation.
I0426 20:53:51.668715 32555 net.cpp:200] relu1 needs backward computation.
I0426 20:53:51.668718 32555 net.cpp:200] ip1 needs backward computation.
I0426 20:53:51.668721 32555 net.cpp:200] pool1 needs backward computation.
I0426 20:53:51.668725 32555 net.cpp:200] conv1 needs backward computation.
I0426 20:53:51.668727 32555 net.cpp:200] pool0 needs backward computation.
I0426 20:53:51.668730 32555 net.cpp:200] conv0 needs backward computation.
I0426 20:53:51.668733 32555 net.cpp:202] mnist does not need backward computation.
I0426 20:53:51.668736 32555 net.cpp:244] This network produces output loss
I0426 20:53:51.668745 32555 net.cpp:257] Network initialization done.
I0426 20:53:51.669126 32555 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test146.prototxt
I0426 20:53:51.669196 32555 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:51.669286 32555 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:51.669359 32555 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:51.669402 32555 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:51.669415 32555 net.cpp:86] Creating Layer mnist
I0426 20:53:51.669420 32555 net.cpp:382] mnist -> data
I0426 20:53:51.669426 32555 net.cpp:382] mnist -> label
I0426 20:53:51.669526 32555 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:51.671624 32555 net.cpp:124] Setting up mnist
I0426 20:53:51.671636 32555 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:51.671656 32555 net.cpp:131] Top shape: 100 (100)
I0426 20:53:51.671659 32555 net.cpp:139] Memory required for data: 314000
I0426 20:53:51.671663 32555 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:51.671669 32555 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:51.671687 32555 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:51.671692 32555 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:51.671699 32555 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:51.671736 32555 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:51.671741 32555 net.cpp:131] Top shape: 100 (100)
I0426 20:53:51.671743 32555 net.cpp:131] Top shape: 100 (100)
I0426 20:53:51.671746 32555 net.cpp:139] Memory required for data: 314800
I0426 20:53:51.671749 32555 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:51.671756 32555 net.cpp:86] Creating Layer conv0
I0426 20:53:51.671759 32555 net.cpp:408] conv0 <- data
I0426 20:53:51.671775 32555 net.cpp:382] conv0 -> conv0
I0426 20:53:51.673395 32555 net.cpp:124] Setting up conv0
I0426 20:53:51.673408 32555 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:53:51.673413 32555 net.cpp:139] Memory required for data: 11834800
I0426 20:53:51.673420 32555 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:51.673441 32555 net.cpp:86] Creating Layer pool0
I0426 20:53:51.673444 32555 net.cpp:408] pool0 <- conv0
I0426 20:53:51.673449 32555 net.cpp:382] pool0 -> pool0
I0426 20:53:51.673483 32555 net.cpp:124] Setting up pool0
I0426 20:53:51.673488 32555 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:53:51.673491 32555 net.cpp:139] Memory required for data: 14714800
I0426 20:53:51.673493 32555 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:51.673501 32555 net.cpp:86] Creating Layer conv1
I0426 20:53:51.673504 32555 net.cpp:408] conv1 <- pool0
I0426 20:53:51.673509 32555 net.cpp:382] conv1 -> conv1
I0426 20:53:51.675081 32555 net.cpp:124] Setting up conv1
I0426 20:53:51.675096 32555 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:53:51.675107 32555 net.cpp:139] Memory required for data: 14970800
I0426 20:53:51.675114 32555 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:51.675135 32555 net.cpp:86] Creating Layer pool1
I0426 20:53:51.675139 32555 net.cpp:408] pool1 <- conv1
I0426 20:53:51.675144 32555 net.cpp:382] pool1 -> pool1
I0426 20:53:51.675179 32555 net.cpp:124] Setting up pool1
I0426 20:53:51.675184 32555 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:53:51.675186 32555 net.cpp:139] Memory required for data: 15034800
I0426 20:53:51.675189 32555 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:51.675194 32555 net.cpp:86] Creating Layer ip1
I0426 20:53:51.675197 32555 net.cpp:408] ip1 <- pool1
I0426 20:53:51.675201 32555 net.cpp:382] ip1 -> ip1
I0426 20:53:51.675400 32555 net.cpp:124] Setting up ip1
I0426 20:53:51.675408 32555 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:51.675421 32555 net.cpp:139] Memory required for data: 15074800
I0426 20:53:51.675428 32555 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:51.675441 32555 net.cpp:86] Creating Layer relu1
I0426 20:53:51.675443 32555 net.cpp:408] relu1 <- ip1
I0426 20:53:51.675447 32555 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:51.675596 32555 net.cpp:124] Setting up relu1
I0426 20:53:51.675606 32555 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:51.675608 32555 net.cpp:139] Memory required for data: 15114800
I0426 20:53:51.675611 32555 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:51.675617 32555 net.cpp:86] Creating Layer ip2
I0426 20:53:51.675621 32555 net.cpp:408] ip2 <- ip1
I0426 20:53:51.675632 32555 net.cpp:382] ip2 -> ip2
I0426 20:53:51.675771 32555 net.cpp:124] Setting up ip2
I0426 20:53:51.675778 32555 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:51.675781 32555 net.cpp:139] Memory required for data: 15154800
I0426 20:53:51.675786 32555 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:51.675791 32555 net.cpp:86] Creating Layer relu2
I0426 20:53:51.675794 32555 net.cpp:408] relu2 <- ip2
I0426 20:53:51.675804 32555 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:51.675942 32555 net.cpp:124] Setting up relu2
I0426 20:53:51.675951 32555 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:51.675959 32555 net.cpp:139] Memory required for data: 15194800
I0426 20:53:51.675962 32555 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:51.675967 32555 net.cpp:86] Creating Layer ip3
I0426 20:53:51.675971 32555 net.cpp:408] ip3 <- ip2
I0426 20:53:51.675981 32555 net.cpp:382] ip3 -> ip3
I0426 20:53:51.676092 32555 net.cpp:124] Setting up ip3
I0426 20:53:51.676100 32555 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:51.676107 32555 net.cpp:139] Memory required for data: 15198800
I0426 20:53:51.676115 32555 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:51.676126 32555 net.cpp:86] Creating Layer relu3
I0426 20:53:51.676129 32555 net.cpp:408] relu3 <- ip3
I0426 20:53:51.676133 32555 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:51.677031 32555 net.cpp:124] Setting up relu3
I0426 20:53:51.677042 32555 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:51.677047 32555 net.cpp:139] Memory required for data: 15202800
I0426 20:53:51.677049 32555 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:53:51.677055 32555 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:53:51.677058 32555 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:53:51.677063 32555 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:53:51.677069 32555 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:53:51.677109 32555 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:53:51.677114 32555 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:51.677119 32555 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:51.677121 32555 net.cpp:139] Memory required for data: 15210800
I0426 20:53:51.677124 32555 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:51.677129 32555 net.cpp:86] Creating Layer accuracy
I0426 20:53:51.677131 32555 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:53:51.677136 32555 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:51.677140 32555 net.cpp:382] accuracy -> accuracy
I0426 20:53:51.677146 32555 net.cpp:124] Setting up accuracy
I0426 20:53:51.677150 32555 net.cpp:131] Top shape: (1)
I0426 20:53:51.677168 32555 net.cpp:139] Memory required for data: 15210804
I0426 20:53:51.677171 32555 layer_factory.hpp:77] Creating layer loss
I0426 20:53:51.677191 32555 net.cpp:86] Creating Layer loss
I0426 20:53:51.677193 32555 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:53:51.677196 32555 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:51.677206 32555 net.cpp:382] loss -> loss
I0426 20:53:51.677212 32555 layer_factory.hpp:77] Creating layer loss
I0426 20:53:51.677431 32555 net.cpp:124] Setting up loss
I0426 20:53:51.677441 32555 net.cpp:131] Top shape: (1)
I0426 20:53:51.677451 32555 net.cpp:134]     with loss weight 1
I0426 20:53:51.677469 32555 net.cpp:139] Memory required for data: 15210808
I0426 20:53:51.677471 32555 net.cpp:200] loss needs backward computation.
I0426 20:53:51.677475 32555 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:51.677479 32555 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:53:51.677501 32555 net.cpp:200] relu3 needs backward computation.
I0426 20:53:51.677505 32555 net.cpp:200] ip3 needs backward computation.
I0426 20:53:51.677507 32555 net.cpp:200] relu2 needs backward computation.
I0426 20:53:51.677510 32555 net.cpp:200] ip2 needs backward computation.
I0426 20:53:51.677513 32555 net.cpp:200] relu1 needs backward computation.
I0426 20:53:51.677521 32555 net.cpp:200] ip1 needs backward computation.
I0426 20:53:51.677525 32555 net.cpp:200] pool1 needs backward computation.
I0426 20:53:51.677527 32555 net.cpp:200] conv1 needs backward computation.
I0426 20:53:51.677531 32555 net.cpp:200] pool0 needs backward computation.
I0426 20:53:51.677533 32555 net.cpp:200] conv0 needs backward computation.
I0426 20:53:51.677543 32555 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:51.677546 32555 net.cpp:202] mnist does not need backward computation.
I0426 20:53:51.677549 32555 net.cpp:244] This network produces output accuracy
I0426 20:53:51.677557 32555 net.cpp:244] This network produces output loss
I0426 20:53:51.677567 32555 net.cpp:257] Network initialization done.
I0426 20:53:51.677606 32555 solver.cpp:56] Solver scaffolding done.
I0426 20:53:51.677917 32555 caffe.cpp:248] Starting Optimization
I0426 20:53:51.677924 32555 solver.cpp:273] Solving LeNet
I0426 20:53:51.677928 32555 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:51.678781 32555 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:51.685058 32555 blocking_queue.cpp:49] Waiting for data
I0426 20:53:51.760002 32562 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:51.760901 32555 solver.cpp:398]     Test net output #0: accuracy = 0.0995
I0426 20:53:51.760922 32555 solver.cpp:398]     Test net output #1: loss = 2.30604 (* 1 = 2.30604 loss)
I0426 20:53:51.765297 32555 solver.cpp:219] Iteration 0 (2.60631 iter/s, 0.0873452s/100 iters), loss = 2.30409
I0426 20:53:51.765319 32555 solver.cpp:238]     Train net output #0: loss = 2.30409 (* 1 = 2.30409 loss)
I0426 20:53:51.765329 32555 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:51.900176 32555 solver.cpp:219] Iteration 100 (741.601 iter/s, 0.134843s/100 iters), loss = 0.726403
I0426 20:53:51.900218 32555 solver.cpp:238]     Train net output #0: loss = 0.726403 (* 1 = 0.726403 loss)
I0426 20:53:51.900223 32555 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:52.037035 32555 solver.cpp:219] Iteration 200 (730.961 iter/s, 0.136806s/100 iters), loss = 0.545279
I0426 20:53:52.037070 32555 solver.cpp:238]     Train net output #0: loss = 0.545279 (* 1 = 0.545279 loss)
I0426 20:53:52.037077 32555 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:52.171502 32555 solver.cpp:219] Iteration 300 (743.951 iter/s, 0.134417s/100 iters), loss = 0.215971
I0426 20:53:52.171545 32555 solver.cpp:238]     Train net output #0: loss = 0.215971 (* 1 = 0.215971 loss)
I0426 20:53:52.171555 32555 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:52.304692 32555 solver.cpp:219] Iteration 400 (751.092 iter/s, 0.133139s/100 iters), loss = 0.257781
I0426 20:53:52.304720 32555 solver.cpp:238]     Train net output #0: loss = 0.257781 (* 1 = 0.257781 loss)
I0426 20:53:52.304726 32555 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:52.438774 32555 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:52.512370 32562 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:52.514299 32555 solver.cpp:398]     Test net output #0: accuracy = 0.8824
I0426 20:53:52.514322 32555 solver.cpp:398]     Test net output #1: loss = 0.312182 (* 1 = 0.312182 loss)
I0426 20:53:52.515533 32555 solver.cpp:219] Iteration 500 (474.391 iter/s, 0.210797s/100 iters), loss = 0.456494
I0426 20:53:52.515571 32555 solver.cpp:238]     Train net output #0: loss = 0.456494 (* 1 = 0.456494 loss)
I0426 20:53:52.515578 32555 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:52.647961 32555 solver.cpp:219] Iteration 600 (755.403 iter/s, 0.13238s/100 iters), loss = 0.255788
I0426 20:53:52.647989 32555 solver.cpp:238]     Train net output #0: loss = 0.255788 (* 1 = 0.255788 loss)
I0426 20:53:52.648013 32555 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:52.774775 32555 solver.cpp:219] Iteration 700 (788.797 iter/s, 0.126775s/100 iters), loss = 0.537517
I0426 20:53:52.774801 32555 solver.cpp:238]     Train net output #0: loss = 0.537517 (* 1 = 0.537517 loss)
I0426 20:53:52.774823 32555 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:52.904355 32555 solver.cpp:219] Iteration 800 (771.949 iter/s, 0.129542s/100 iters), loss = 0.490213
I0426 20:53:52.904381 32555 solver.cpp:238]     Train net output #0: loss = 0.490213 (* 1 = 0.490213 loss)
I0426 20:53:52.904404 32555 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:53.032240 32555 solver.cpp:219] Iteration 900 (782.182 iter/s, 0.127847s/100 iters), loss = 0.343174
I0426 20:53:53.032280 32555 solver.cpp:238]     Train net output #0: loss = 0.343174 (* 1 = 0.343174 loss)
I0426 20:53:53.032287 32555 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:53.074460 32561 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:53.157249 32555 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:53.158679 32555 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:53.159674 32555 solver.cpp:311] Iteration 1000, loss = 0.420169
I0426 20:53:53.159689 32555 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:53.227960 32562 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:53.229085 32555 solver.cpp:398]     Test net output #0: accuracy = 0.8916
I0426 20:53:53.229105 32555 solver.cpp:398]     Test net output #1: loss = 0.277119 (* 1 = 0.277119 loss)
I0426 20:53:53.229111 32555 solver.cpp:316] Optimization Done.
I0426 20:53:53.229115 32555 caffe.cpp:259] Optimization Done.
