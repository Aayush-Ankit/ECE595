I0426 20:50:37.043972 31796 caffe.cpp:218] Using GPUs 0
I0426 20:50:37.073477 31796 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:37.533289 31796 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test65.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:37.533421 31796 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test65.prototxt
I0426 20:50:37.533762 31796 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:37.533777 31796 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:37.533859 31796 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:37.533923 31796 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:37.534005 31796 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:37.534025 31796 net.cpp:86] Creating Layer mnist
I0426 20:50:37.534031 31796 net.cpp:382] mnist -> data
I0426 20:50:37.534051 31796 net.cpp:382] mnist -> label
I0426 20:50:37.534962 31796 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:37.537164 31796 net.cpp:124] Setting up mnist
I0426 20:50:37.537194 31796 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:37.537199 31796 net.cpp:131] Top shape: 64 (64)
I0426 20:50:37.537201 31796 net.cpp:139] Memory required for data: 200960
I0426 20:50:37.537221 31796 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:37.537235 31796 net.cpp:86] Creating Layer conv0
I0426 20:50:37.537252 31796 net.cpp:408] conv0 <- data
I0426 20:50:37.537261 31796 net.cpp:382] conv0 -> conv0
I0426 20:50:37.765091 31796 net.cpp:124] Setting up conv0
I0426 20:50:37.765132 31796 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:37.765136 31796 net.cpp:139] Memory required for data: 1675520
I0426 20:50:37.765166 31796 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:37.765180 31796 net.cpp:86] Creating Layer pool0
I0426 20:50:37.765184 31796 net.cpp:408] pool0 <- conv0
I0426 20:50:37.765205 31796 net.cpp:382] pool0 -> pool0
I0426 20:50:37.765269 31796 net.cpp:124] Setting up pool0
I0426 20:50:37.765275 31796 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:37.765278 31796 net.cpp:139] Memory required for data: 2044160
I0426 20:50:37.765281 31796 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:37.765307 31796 net.cpp:86] Creating Layer conv1
I0426 20:50:37.765311 31796 net.cpp:408] conv1 <- pool0
I0426 20:50:37.765314 31796 net.cpp:382] conv1 -> conv1
I0426 20:50:37.768045 31796 net.cpp:124] Setting up conv1
I0426 20:50:37.768059 31796 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:37.768061 31796 net.cpp:139] Memory required for data: 2208000
I0426 20:50:37.768069 31796 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:37.768075 31796 net.cpp:86] Creating Layer pool1
I0426 20:50:37.768079 31796 net.cpp:408] pool1 <- conv1
I0426 20:50:37.768084 31796 net.cpp:382] pool1 -> pool1
I0426 20:50:37.768133 31796 net.cpp:124] Setting up pool1
I0426 20:50:37.768138 31796 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:37.768141 31796 net.cpp:139] Memory required for data: 2248960
I0426 20:50:37.768143 31796 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:37.768151 31796 net.cpp:86] Creating Layer ip1
I0426 20:50:37.768154 31796 net.cpp:408] ip1 <- pool1
I0426 20:50:37.768159 31796 net.cpp:382] ip1 -> ip1
I0426 20:50:37.769212 31796 net.cpp:124] Setting up ip1
I0426 20:50:37.769222 31796 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:37.769242 31796 net.cpp:139] Memory required for data: 2274560
I0426 20:50:37.769248 31796 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:37.769255 31796 net.cpp:86] Creating Layer relu1
I0426 20:50:37.769258 31796 net.cpp:408] relu1 <- ip1
I0426 20:50:37.769263 31796 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:37.769460 31796 net.cpp:124] Setting up relu1
I0426 20:50:37.769469 31796 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:37.769471 31796 net.cpp:139] Memory required for data: 2300160
I0426 20:50:37.769474 31796 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:37.769480 31796 net.cpp:86] Creating Layer ip2
I0426 20:50:37.769484 31796 net.cpp:408] ip2 <- ip1
I0426 20:50:37.769490 31796 net.cpp:382] ip2 -> ip2
I0426 20:50:37.769742 31796 net.cpp:124] Setting up ip2
I0426 20:50:37.769749 31796 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:37.769752 31796 net.cpp:139] Memory required for data: 2376960
I0426 20:50:37.769757 31796 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:37.769763 31796 net.cpp:86] Creating Layer relu2
I0426 20:50:37.769767 31796 net.cpp:408] relu2 <- ip2
I0426 20:50:37.769770 31796 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:37.770596 31796 net.cpp:124] Setting up relu2
I0426 20:50:37.770622 31796 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:37.770627 31796 net.cpp:139] Memory required for data: 2453760
I0426 20:50:37.770629 31796 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:37.770635 31796 net.cpp:86] Creating Layer ip3
I0426 20:50:37.770638 31796 net.cpp:408] ip3 <- ip2
I0426 20:50:37.770644 31796 net.cpp:382] ip3 -> ip3
I0426 20:50:37.770779 31796 net.cpp:124] Setting up ip3
I0426 20:50:37.770802 31796 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:37.770804 31796 net.cpp:139] Memory required for data: 2456320
I0426 20:50:37.770812 31796 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:37.770815 31796 net.cpp:86] Creating Layer relu3
I0426 20:50:37.770818 31796 net.cpp:408] relu3 <- ip3
I0426 20:50:37.770823 31796 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:37.770997 31796 net.cpp:124] Setting up relu3
I0426 20:50:37.771005 31796 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:37.771008 31796 net.cpp:139] Memory required for data: 2458880
I0426 20:50:37.771011 31796 layer_factory.hpp:77] Creating layer loss
I0426 20:50:37.771018 31796 net.cpp:86] Creating Layer loss
I0426 20:50:37.771021 31796 net.cpp:408] loss <- ip3
I0426 20:50:37.771024 31796 net.cpp:408] loss <- label
I0426 20:50:37.771029 31796 net.cpp:382] loss -> loss
I0426 20:50:37.771046 31796 layer_factory.hpp:77] Creating layer loss
I0426 20:50:37.771302 31796 net.cpp:124] Setting up loss
I0426 20:50:37.771311 31796 net.cpp:131] Top shape: (1)
I0426 20:50:37.771313 31796 net.cpp:134]     with loss weight 1
I0426 20:50:37.771328 31796 net.cpp:139] Memory required for data: 2458884
I0426 20:50:37.771332 31796 net.cpp:200] loss needs backward computation.
I0426 20:50:37.771334 31796 net.cpp:200] relu3 needs backward computation.
I0426 20:50:37.771337 31796 net.cpp:200] ip3 needs backward computation.
I0426 20:50:37.771340 31796 net.cpp:200] relu2 needs backward computation.
I0426 20:50:37.771342 31796 net.cpp:200] ip2 needs backward computation.
I0426 20:50:37.771345 31796 net.cpp:200] relu1 needs backward computation.
I0426 20:50:37.771347 31796 net.cpp:200] ip1 needs backward computation.
I0426 20:50:37.771350 31796 net.cpp:200] pool1 needs backward computation.
I0426 20:50:37.771353 31796 net.cpp:200] conv1 needs backward computation.
I0426 20:50:37.771355 31796 net.cpp:200] pool0 needs backward computation.
I0426 20:50:37.771358 31796 net.cpp:200] conv0 needs backward computation.
I0426 20:50:37.771361 31796 net.cpp:202] mnist does not need backward computation.
I0426 20:50:37.771363 31796 net.cpp:244] This network produces output loss
I0426 20:50:37.771374 31796 net.cpp:257] Network initialization done.
I0426 20:50:37.771684 31796 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test65.prototxt
I0426 20:50:37.771710 31796 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:37.771800 31796 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:37.771878 31796 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:37.771919 31796 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:37.771934 31796 net.cpp:86] Creating Layer mnist
I0426 20:50:37.771939 31796 net.cpp:382] mnist -> data
I0426 20:50:37.771946 31796 net.cpp:382] mnist -> label
I0426 20:50:37.772044 31796 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:37.773983 31796 net.cpp:124] Setting up mnist
I0426 20:50:37.774010 31796 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:37.774014 31796 net.cpp:131] Top shape: 100 (100)
I0426 20:50:37.774018 31796 net.cpp:139] Memory required for data: 314000
I0426 20:50:37.774020 31796 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:37.774071 31796 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:37.774075 31796 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:37.774080 31796 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:37.774086 31796 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:37.774145 31796 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:37.774165 31796 net.cpp:131] Top shape: 100 (100)
I0426 20:50:37.774169 31796 net.cpp:131] Top shape: 100 (100)
I0426 20:50:37.774171 31796 net.cpp:139] Memory required for data: 314800
I0426 20:50:37.774174 31796 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:37.774183 31796 net.cpp:86] Creating Layer conv0
I0426 20:50:37.774186 31796 net.cpp:408] conv0 <- data
I0426 20:50:37.774191 31796 net.cpp:382] conv0 -> conv0
I0426 20:50:37.776072 31796 net.cpp:124] Setting up conv0
I0426 20:50:37.776084 31796 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:37.776087 31796 net.cpp:139] Memory required for data: 2618800
I0426 20:50:37.776096 31796 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:37.776103 31796 net.cpp:86] Creating Layer pool0
I0426 20:50:37.776120 31796 net.cpp:408] pool0 <- conv0
I0426 20:50:37.776124 31796 net.cpp:382] pool0 -> pool0
I0426 20:50:37.776160 31796 net.cpp:124] Setting up pool0
I0426 20:50:37.776165 31796 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:37.776167 31796 net.cpp:139] Memory required for data: 3194800
I0426 20:50:37.776170 31796 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:37.776178 31796 net.cpp:86] Creating Layer conv1
I0426 20:50:37.776181 31796 net.cpp:408] conv1 <- pool0
I0426 20:50:37.776187 31796 net.cpp:382] conv1 -> conv1
I0426 20:50:37.778446 31796 net.cpp:124] Setting up conv1
I0426 20:50:37.778460 31796 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:37.778463 31796 net.cpp:139] Memory required for data: 3450800
I0426 20:50:37.778477 31796 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:37.778502 31796 net.cpp:86] Creating Layer pool1
I0426 20:50:37.778506 31796 net.cpp:408] pool1 <- conv1
I0426 20:50:37.778512 31796 net.cpp:382] pool1 -> pool1
I0426 20:50:37.778563 31796 net.cpp:124] Setting up pool1
I0426 20:50:37.778568 31796 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:37.778576 31796 net.cpp:139] Memory required for data: 3514800
I0426 20:50:37.778586 31796 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:37.778594 31796 net.cpp:86] Creating Layer ip1
I0426 20:50:37.778596 31796 net.cpp:408] ip1 <- pool1
I0426 20:50:37.778601 31796 net.cpp:382] ip1 -> ip1
I0426 20:50:37.778792 31796 net.cpp:124] Setting up ip1
I0426 20:50:37.778800 31796 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:37.778813 31796 net.cpp:139] Memory required for data: 3554800
I0426 20:50:37.778821 31796 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:37.778826 31796 net.cpp:86] Creating Layer relu1
I0426 20:50:37.778831 31796 net.cpp:408] relu1 <- ip1
I0426 20:50:37.778834 31796 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:37.779063 31796 net.cpp:124] Setting up relu1
I0426 20:50:37.779072 31796 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:37.779076 31796 net.cpp:139] Memory required for data: 3594800
I0426 20:50:37.779079 31796 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:37.779086 31796 net.cpp:86] Creating Layer ip2
I0426 20:50:37.779089 31796 net.cpp:408] ip2 <- ip1
I0426 20:50:37.779095 31796 net.cpp:382] ip2 -> ip2
I0426 20:50:37.779381 31796 net.cpp:124] Setting up ip2
I0426 20:50:37.779388 31796 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:37.779392 31796 net.cpp:139] Memory required for data: 3714800
I0426 20:50:37.779397 31796 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:37.779402 31796 net.cpp:86] Creating Layer relu2
I0426 20:50:37.779405 31796 net.cpp:408] relu2 <- ip2
I0426 20:50:37.779408 31796 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:37.779566 31796 net.cpp:124] Setting up relu2
I0426 20:50:37.779573 31796 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:37.779577 31796 net.cpp:139] Memory required for data: 3834800
I0426 20:50:37.779579 31796 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:37.779585 31796 net.cpp:86] Creating Layer ip3
I0426 20:50:37.779588 31796 net.cpp:408] ip3 <- ip2
I0426 20:50:37.779594 31796 net.cpp:382] ip3 -> ip3
I0426 20:50:37.779721 31796 net.cpp:124] Setting up ip3
I0426 20:50:37.779728 31796 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:37.779731 31796 net.cpp:139] Memory required for data: 3838800
I0426 20:50:37.779738 31796 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:37.779743 31796 net.cpp:86] Creating Layer relu3
I0426 20:50:37.779747 31796 net.cpp:408] relu3 <- ip3
I0426 20:50:37.779752 31796 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:37.780740 31796 net.cpp:124] Setting up relu3
I0426 20:50:37.780751 31796 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:37.780755 31796 net.cpp:139] Memory required for data: 3842800
I0426 20:50:37.780758 31796 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:37.780763 31796 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:37.780766 31796 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:37.780772 31796 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:37.780778 31796 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:37.780844 31796 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:37.780851 31796 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:37.780855 31796 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:37.780858 31796 net.cpp:139] Memory required for data: 3850800
I0426 20:50:37.780861 31796 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:37.780866 31796 net.cpp:86] Creating Layer accuracy
I0426 20:50:37.780869 31796 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:37.780874 31796 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:37.780877 31796 net.cpp:382] accuracy -> accuracy
I0426 20:50:37.780884 31796 net.cpp:124] Setting up accuracy
I0426 20:50:37.780889 31796 net.cpp:131] Top shape: (1)
I0426 20:50:37.780891 31796 net.cpp:139] Memory required for data: 3850804
I0426 20:50:37.780894 31796 layer_factory.hpp:77] Creating layer loss
I0426 20:50:37.780900 31796 net.cpp:86] Creating Layer loss
I0426 20:50:37.780903 31796 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:37.780907 31796 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:37.780911 31796 net.cpp:382] loss -> loss
I0426 20:50:37.780917 31796 layer_factory.hpp:77] Creating layer loss
I0426 20:50:37.781214 31796 net.cpp:124] Setting up loss
I0426 20:50:37.781222 31796 net.cpp:131] Top shape: (1)
I0426 20:50:37.781232 31796 net.cpp:134]     with loss weight 1
I0426 20:50:37.781249 31796 net.cpp:139] Memory required for data: 3850808
I0426 20:50:37.781257 31796 net.cpp:200] loss needs backward computation.
I0426 20:50:37.781261 31796 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:37.781265 31796 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:37.781267 31796 net.cpp:200] relu3 needs backward computation.
I0426 20:50:37.781270 31796 net.cpp:200] ip3 needs backward computation.
I0426 20:50:37.781272 31796 net.cpp:200] relu2 needs backward computation.
I0426 20:50:37.781275 31796 net.cpp:200] ip2 needs backward computation.
I0426 20:50:37.781277 31796 net.cpp:200] relu1 needs backward computation.
I0426 20:50:37.781286 31796 net.cpp:200] ip1 needs backward computation.
I0426 20:50:37.781288 31796 net.cpp:200] pool1 needs backward computation.
I0426 20:50:37.781291 31796 net.cpp:200] conv1 needs backward computation.
I0426 20:50:37.781293 31796 net.cpp:200] pool0 needs backward computation.
I0426 20:50:37.781296 31796 net.cpp:200] conv0 needs backward computation.
I0426 20:50:37.781301 31796 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:37.781304 31796 net.cpp:202] mnist does not need backward computation.
I0426 20:50:37.781307 31796 net.cpp:244] This network produces output accuracy
I0426 20:50:37.781311 31796 net.cpp:244] This network produces output loss
I0426 20:50:37.781327 31796 net.cpp:257] Network initialization done.
I0426 20:50:37.781365 31796 solver.cpp:56] Solver scaffolding done.
I0426 20:50:37.781705 31796 caffe.cpp:248] Starting Optimization
I0426 20:50:37.781713 31796 solver.cpp:273] Solving LeNet
I0426 20:50:37.781714 31796 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:37.782564 31796 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:37.786442 31796 blocking_queue.cpp:49] Waiting for data
I0426 20:50:37.859019 31803 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:37.859607 31796 solver.cpp:398]     Test net output #0: accuracy = 0.1059
I0426 20:50:37.859627 31796 solver.cpp:398]     Test net output #1: loss = 2.32076 (* 1 = 2.32076 loss)
I0426 20:50:37.862182 31796 solver.cpp:219] Iteration 0 (0 iter/s, 0.0804404s/100 iters), loss = 2.30983
I0426 20:50:37.862205 31796 solver.cpp:238]     Train net output #0: loss = 2.30983 (* 1 = 2.30983 loss)
I0426 20:50:37.862231 31796 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:37.954790 31796 solver.cpp:219] Iteration 100 (1080.23 iter/s, 0.0925727s/100 iters), loss = 0.66284
I0426 20:50:37.954815 31796 solver.cpp:238]     Train net output #0: loss = 0.66284 (* 1 = 0.66284 loss)
I0426 20:50:37.954821 31796 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:38.045316 31796 solver.cpp:219] Iteration 200 (1105.07 iter/s, 0.0904919s/100 iters), loss = 0.528942
I0426 20:50:38.045339 31796 solver.cpp:238]     Train net output #0: loss = 0.528942 (* 1 = 0.528942 loss)
I0426 20:50:38.045346 31796 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:38.134820 31796 solver.cpp:219] Iteration 300 (1117.67 iter/s, 0.089472s/100 iters), loss = 0.199535
I0426 20:50:38.134843 31796 solver.cpp:238]     Train net output #0: loss = 0.199535 (* 1 = 0.199535 loss)
I0426 20:50:38.134848 31796 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:38.224874 31796 solver.cpp:219] Iteration 400 (1110.85 iter/s, 0.0900209s/100 iters), loss = 0.179802
I0426 20:50:38.224897 31796 solver.cpp:238]     Train net output #0: loss = 0.179802 (* 1 = 0.179802 loss)
I0426 20:50:38.224918 31796 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:38.318876 31796 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:38.394156 31803 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:38.394737 31796 solver.cpp:398]     Test net output #0: accuracy = 0.9537
I0426 20:50:38.394758 31796 solver.cpp:398]     Test net output #1: loss = 0.140955 (* 1 = 0.140955 loss)
I0426 20:50:38.395637 31796 solver.cpp:219] Iteration 500 (585.733 iter/s, 0.170726s/100 iters), loss = 0.187864
I0426 20:50:38.395674 31796 solver.cpp:238]     Train net output #0: loss = 0.187864 (* 1 = 0.187864 loss)
I0426 20:50:38.395695 31796 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:38.492214 31796 solver.cpp:219] Iteration 600 (1035.95 iter/s, 0.0965295s/100 iters), loss = 0.169752
I0426 20:50:38.492239 31796 solver.cpp:238]     Train net output #0: loss = 0.169752 (* 1 = 0.169752 loss)
I0426 20:50:38.492261 31796 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:38.582948 31796 solver.cpp:219] Iteration 700 (1102.54 iter/s, 0.0906998s/100 iters), loss = 0.234627
I0426 20:50:38.582988 31796 solver.cpp:238]     Train net output #0: loss = 0.234627 (* 1 = 0.234627 loss)
I0426 20:50:38.582993 31796 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:38.673092 31796 solver.cpp:219] Iteration 800 (1109.74 iter/s, 0.090111s/100 iters), loss = 0.248336
I0426 20:50:38.673130 31796 solver.cpp:238]     Train net output #0: loss = 0.248336 (* 1 = 0.248336 loss)
I0426 20:50:38.673136 31796 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:38.763475 31796 solver.cpp:219] Iteration 900 (1106.8 iter/s, 0.0903506s/100 iters), loss = 0.18368
I0426 20:50:38.763514 31796 solver.cpp:238]     Train net output #0: loss = 0.18368 (* 1 = 0.18368 loss)
I0426 20:50:38.763520 31796 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:38.793923 31802 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:38.852963 31796 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:38.854370 31796 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:38.855226 31796 solver.cpp:311] Iteration 1000, loss = 0.118444
I0426 20:50:38.855255 31796 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:38.930685 31803 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:38.931287 31796 solver.cpp:398]     Test net output #0: accuracy = 0.9711
I0426 20:50:38.931306 31796 solver.cpp:398]     Test net output #1: loss = 0.0891327 (* 1 = 0.0891327 loss)
I0426 20:50:38.931311 31796 solver.cpp:316] Optimization Done.
I0426 20:50:38.931314 31796 caffe.cpp:259] Optimization Done.
