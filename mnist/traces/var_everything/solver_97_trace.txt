I0426 20:51:51.423589 32069 caffe.cpp:218] Using GPUs 0
I0426 20:51:51.454825 32069 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:51.976083 32069 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test97.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:51.976228 32069 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test97.prototxt
I0426 20:51:51.976640 32069 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:51.976660 32069 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:51.976763 32069 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:51.976852 32069 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:51.976951 32069 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:51.976979 32069 net.cpp:86] Creating Layer mnist
I0426 20:51:51.976987 32069 net.cpp:382] mnist -> data
I0426 20:51:51.977010 32069 net.cpp:382] mnist -> label
I0426 20:51:51.978127 32069 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:51.980648 32069 net.cpp:124] Setting up mnist
I0426 20:51:51.980664 32069 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:51.980672 32069 net.cpp:131] Top shape: 64 (64)
I0426 20:51:51.980676 32069 net.cpp:139] Memory required for data: 200960
I0426 20:51:51.980684 32069 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:51.980698 32069 net.cpp:86] Creating Layer conv0
I0426 20:51:51.980720 32069 net.cpp:408] conv0 <- data
I0426 20:51:51.980733 32069 net.cpp:382] conv0 -> conv0
I0426 20:51:52.273079 32069 net.cpp:124] Setting up conv0
I0426 20:51:52.273110 32069 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:52.273115 32069 net.cpp:139] Memory required for data: 1675520
I0426 20:51:52.273134 32069 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:52.273149 32069 net.cpp:86] Creating Layer pool0
I0426 20:51:52.273154 32069 net.cpp:408] pool0 <- conv0
I0426 20:51:52.273161 32069 net.cpp:382] pool0 -> pool0
I0426 20:51:52.273218 32069 net.cpp:124] Setting up pool0
I0426 20:51:52.273227 32069 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:52.273231 32069 net.cpp:139] Memory required for data: 2044160
I0426 20:51:52.273234 32069 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:52.273247 32069 net.cpp:86] Creating Layer conv1
I0426 20:51:52.273253 32069 net.cpp:408] conv1 <- pool0
I0426 20:51:52.273259 32069 net.cpp:382] conv1 -> conv1
I0426 20:51:52.276618 32069 net.cpp:124] Setting up conv1
I0426 20:51:52.276636 32069 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:52.276640 32069 net.cpp:139] Memory required for data: 2863360
I0426 20:51:52.276651 32069 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:52.276661 32069 net.cpp:86] Creating Layer pool1
I0426 20:51:52.276665 32069 net.cpp:408] pool1 <- conv1
I0426 20:51:52.276672 32069 net.cpp:382] pool1 -> pool1
I0426 20:51:52.276718 32069 net.cpp:124] Setting up pool1
I0426 20:51:52.276727 32069 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:52.276731 32069 net.cpp:139] Memory required for data: 3068160
I0426 20:51:52.276734 32069 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:52.276742 32069 net.cpp:86] Creating Layer ip1
I0426 20:51:52.276746 32069 net.cpp:408] ip1 <- pool1
I0426 20:51:52.276752 32069 net.cpp:382] ip1 -> ip1
I0426 20:51:52.279431 32069 net.cpp:124] Setting up ip1
I0426 20:51:52.279448 32069 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:52.279451 32069 net.cpp:139] Memory required for data: 3144960
I0426 20:51:52.279462 32069 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:52.279469 32069 net.cpp:86] Creating Layer relu1
I0426 20:51:52.279474 32069 net.cpp:408] relu1 <- ip1
I0426 20:51:52.279480 32069 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:52.279683 32069 net.cpp:124] Setting up relu1
I0426 20:51:52.279693 32069 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:52.279697 32069 net.cpp:139] Memory required for data: 3221760
I0426 20:51:52.279701 32069 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:52.279709 32069 net.cpp:86] Creating Layer ip2
I0426 20:51:52.279713 32069 net.cpp:408] ip2 <- ip1
I0426 20:51:52.279719 32069 net.cpp:382] ip2 -> ip2
I0426 20:51:52.280433 32069 net.cpp:124] Setting up ip2
I0426 20:51:52.280442 32069 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:52.280447 32069 net.cpp:139] Memory required for data: 3298560
I0426 20:51:52.280452 32069 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:52.280459 32069 net.cpp:86] Creating Layer relu2
I0426 20:51:52.280463 32069 net.cpp:408] relu2 <- ip2
I0426 20:51:52.280469 32069 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:52.281420 32069 net.cpp:124] Setting up relu2
I0426 20:51:52.281436 32069 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:52.281440 32069 net.cpp:139] Memory required for data: 3375360
I0426 20:51:52.281445 32069 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:52.281452 32069 net.cpp:86] Creating Layer ip3
I0426 20:51:52.281456 32069 net.cpp:408] ip3 <- ip2
I0426 20:51:52.281463 32069 net.cpp:382] ip3 -> ip3
I0426 20:51:52.282559 32069 net.cpp:124] Setting up ip3
I0426 20:51:52.282574 32069 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:52.282578 32069 net.cpp:139] Memory required for data: 3377920
I0426 20:51:52.282589 32069 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:52.282596 32069 net.cpp:86] Creating Layer relu3
I0426 20:51:52.282600 32069 net.cpp:408] relu3 <- ip3
I0426 20:51:52.282606 32069 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:52.282814 32069 net.cpp:124] Setting up relu3
I0426 20:51:52.282824 32069 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:52.282829 32069 net.cpp:139] Memory required for data: 3380480
I0426 20:51:52.282832 32069 layer_factory.hpp:77] Creating layer loss
I0426 20:51:52.282840 32069 net.cpp:86] Creating Layer loss
I0426 20:51:52.282843 32069 net.cpp:408] loss <- ip3
I0426 20:51:52.282848 32069 net.cpp:408] loss <- label
I0426 20:51:52.282855 32069 net.cpp:382] loss -> loss
I0426 20:51:52.282877 32069 layer_factory.hpp:77] Creating layer loss
I0426 20:51:52.283152 32069 net.cpp:124] Setting up loss
I0426 20:51:52.283162 32069 net.cpp:131] Top shape: (1)
I0426 20:51:52.283166 32069 net.cpp:134]     with loss weight 1
I0426 20:51:52.283182 32069 net.cpp:139] Memory required for data: 3380484
I0426 20:51:52.283187 32069 net.cpp:200] loss needs backward computation.
I0426 20:51:52.283191 32069 net.cpp:200] relu3 needs backward computation.
I0426 20:51:52.283195 32069 net.cpp:200] ip3 needs backward computation.
I0426 20:51:52.283198 32069 net.cpp:200] relu2 needs backward computation.
I0426 20:51:52.283201 32069 net.cpp:200] ip2 needs backward computation.
I0426 20:51:52.283205 32069 net.cpp:200] relu1 needs backward computation.
I0426 20:51:52.283208 32069 net.cpp:200] ip1 needs backward computation.
I0426 20:51:52.283212 32069 net.cpp:200] pool1 needs backward computation.
I0426 20:51:52.283215 32069 net.cpp:200] conv1 needs backward computation.
I0426 20:51:52.283219 32069 net.cpp:200] pool0 needs backward computation.
I0426 20:51:52.283223 32069 net.cpp:200] conv0 needs backward computation.
I0426 20:51:52.283227 32069 net.cpp:202] mnist does not need backward computation.
I0426 20:51:52.283231 32069 net.cpp:244] This network produces output loss
I0426 20:51:52.283241 32069 net.cpp:257] Network initialization done.
I0426 20:51:52.283624 32069 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test97.prototxt
I0426 20:51:52.283656 32069 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:52.283766 32069 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:52.283859 32069 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:52.283915 32069 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:52.283928 32069 net.cpp:86] Creating Layer mnist
I0426 20:51:52.283934 32069 net.cpp:382] mnist -> data
I0426 20:51:52.283944 32069 net.cpp:382] mnist -> label
I0426 20:51:52.284049 32069 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:52.286357 32069 net.cpp:124] Setting up mnist
I0426 20:51:52.286373 32069 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:52.286379 32069 net.cpp:131] Top shape: 100 (100)
I0426 20:51:52.286383 32069 net.cpp:139] Memory required for data: 314000
I0426 20:51:52.286387 32069 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:52.286424 32069 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:52.286429 32069 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:52.286437 32069 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:52.286447 32069 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:52.286505 32069 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:52.286514 32069 net.cpp:131] Top shape: 100 (100)
I0426 20:51:52.286519 32069 net.cpp:131] Top shape: 100 (100)
I0426 20:51:52.286522 32069 net.cpp:139] Memory required for data: 314800
I0426 20:51:52.286525 32069 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:52.286536 32069 net.cpp:86] Creating Layer conv0
I0426 20:51:52.286540 32069 net.cpp:408] conv0 <- data
I0426 20:51:52.286548 32069 net.cpp:382] conv0 -> conv0
I0426 20:51:52.288610 32069 net.cpp:124] Setting up conv0
I0426 20:51:52.288630 32069 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:52.288633 32069 net.cpp:139] Memory required for data: 2618800
I0426 20:51:52.288645 32069 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:52.288652 32069 net.cpp:86] Creating Layer pool0
I0426 20:51:52.288656 32069 net.cpp:408] pool0 <- conv0
I0426 20:51:52.288663 32069 net.cpp:382] pool0 -> pool0
I0426 20:51:52.288708 32069 net.cpp:124] Setting up pool0
I0426 20:51:52.288717 32069 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:52.288720 32069 net.cpp:139] Memory required for data: 3194800
I0426 20:51:52.288724 32069 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:52.288739 32069 net.cpp:86] Creating Layer conv1
I0426 20:51:52.288745 32069 net.cpp:408] conv1 <- pool0
I0426 20:51:52.288751 32069 net.cpp:382] conv1 -> conv1
I0426 20:51:52.290701 32069 net.cpp:124] Setting up conv1
I0426 20:51:52.290717 32069 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:52.290721 32069 net.cpp:139] Memory required for data: 4474800
I0426 20:51:52.290733 32069 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:52.290742 32069 net.cpp:86] Creating Layer pool1
I0426 20:51:52.290747 32069 net.cpp:408] pool1 <- conv1
I0426 20:51:52.290753 32069 net.cpp:382] pool1 -> pool1
I0426 20:51:52.290798 32069 net.cpp:124] Setting up pool1
I0426 20:51:52.290807 32069 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:52.290812 32069 net.cpp:139] Memory required for data: 4794800
I0426 20:51:52.290815 32069 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:52.290822 32069 net.cpp:86] Creating Layer ip1
I0426 20:51:52.290827 32069 net.cpp:408] ip1 <- pool1
I0426 20:51:52.290833 32069 net.cpp:382] ip1 -> ip1
I0426 20:51:52.292596 32069 net.cpp:124] Setting up ip1
I0426 20:51:52.292608 32069 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:52.292623 32069 net.cpp:139] Memory required for data: 4914800
I0426 20:51:52.292632 32069 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:52.292639 32069 net.cpp:86] Creating Layer relu1
I0426 20:51:52.292644 32069 net.cpp:408] relu1 <- ip1
I0426 20:51:52.292651 32069 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:52.292858 32069 net.cpp:124] Setting up relu1
I0426 20:51:52.292870 32069 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:52.292875 32069 net.cpp:139] Memory required for data: 5034800
I0426 20:51:52.292878 32069 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:52.292888 32069 net.cpp:86] Creating Layer ip2
I0426 20:51:52.292892 32069 net.cpp:408] ip2 <- ip1
I0426 20:51:52.292898 32069 net.cpp:382] ip2 -> ip2
I0426 20:51:52.293623 32069 net.cpp:124] Setting up ip2
I0426 20:51:52.293632 32069 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:52.293635 32069 net.cpp:139] Memory required for data: 5154800
I0426 20:51:52.293642 32069 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:52.293648 32069 net.cpp:86] Creating Layer relu2
I0426 20:51:52.293651 32069 net.cpp:408] relu2 <- ip2
I0426 20:51:52.293656 32069 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:52.293846 32069 net.cpp:124] Setting up relu2
I0426 20:51:52.293858 32069 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:52.293861 32069 net.cpp:139] Memory required for data: 5274800
I0426 20:51:52.293865 32069 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:52.293871 32069 net.cpp:86] Creating Layer ip3
I0426 20:51:52.293875 32069 net.cpp:408] ip3 <- ip2
I0426 20:51:52.293882 32069 net.cpp:382] ip3 -> ip3
I0426 20:51:52.294039 32069 net.cpp:124] Setting up ip3
I0426 20:51:52.294047 32069 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:52.294050 32069 net.cpp:139] Memory required for data: 5278800
I0426 20:51:52.294059 32069 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:52.294066 32069 net.cpp:86] Creating Layer relu3
I0426 20:51:52.294070 32069 net.cpp:408] relu3 <- ip3
I0426 20:51:52.294075 32069 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:52.295052 32069 net.cpp:124] Setting up relu3
I0426 20:51:52.295066 32069 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:52.295070 32069 net.cpp:139] Memory required for data: 5282800
I0426 20:51:52.295073 32069 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:52.295080 32069 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:52.295083 32069 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:52.295091 32069 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:52.295099 32069 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:52.295145 32069 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:52.295153 32069 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:52.295157 32069 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:52.295161 32069 net.cpp:139] Memory required for data: 5290800
I0426 20:51:52.295164 32069 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:52.295169 32069 net.cpp:86] Creating Layer accuracy
I0426 20:51:52.295173 32069 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:52.295178 32069 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:52.295186 32069 net.cpp:382] accuracy -> accuracy
I0426 20:51:52.295193 32069 net.cpp:124] Setting up accuracy
I0426 20:51:52.295200 32069 net.cpp:131] Top shape: (1)
I0426 20:51:52.295204 32069 net.cpp:139] Memory required for data: 5290804
I0426 20:51:52.295213 32069 layer_factory.hpp:77] Creating layer loss
I0426 20:51:52.295218 32069 net.cpp:86] Creating Layer loss
I0426 20:51:52.295222 32069 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:52.295227 32069 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:52.295231 32069 net.cpp:382] loss -> loss
I0426 20:51:52.295238 32069 layer_factory.hpp:77] Creating layer loss
I0426 20:51:52.295521 32069 net.cpp:124] Setting up loss
I0426 20:51:52.295542 32069 net.cpp:131] Top shape: (1)
I0426 20:51:52.295545 32069 net.cpp:134]     with loss weight 1
I0426 20:51:52.295563 32069 net.cpp:139] Memory required for data: 5290808
I0426 20:51:52.295568 32069 net.cpp:200] loss needs backward computation.
I0426 20:51:52.295572 32069 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:52.295577 32069 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:52.295579 32069 net.cpp:200] relu3 needs backward computation.
I0426 20:51:52.295583 32069 net.cpp:200] ip3 needs backward computation.
I0426 20:51:52.295586 32069 net.cpp:200] relu2 needs backward computation.
I0426 20:51:52.295589 32069 net.cpp:200] ip2 needs backward computation.
I0426 20:51:52.295593 32069 net.cpp:200] relu1 needs backward computation.
I0426 20:51:52.295595 32069 net.cpp:200] ip1 needs backward computation.
I0426 20:51:52.295598 32069 net.cpp:200] pool1 needs backward computation.
I0426 20:51:52.295603 32069 net.cpp:200] conv1 needs backward computation.
I0426 20:51:52.295605 32069 net.cpp:200] pool0 needs backward computation.
I0426 20:51:52.295609 32069 net.cpp:200] conv0 needs backward computation.
I0426 20:51:52.295614 32069 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:52.295617 32069 net.cpp:202] mnist does not need backward computation.
I0426 20:51:52.295620 32069 net.cpp:244] This network produces output accuracy
I0426 20:51:52.295624 32069 net.cpp:244] This network produces output loss
I0426 20:51:52.295639 32069 net.cpp:257] Network initialization done.
I0426 20:51:52.295688 32069 solver.cpp:56] Solver scaffolding done.
I0426 20:51:52.296090 32069 caffe.cpp:248] Starting Optimization
I0426 20:51:52.296097 32069 solver.cpp:273] Solving LeNet
I0426 20:51:52.296100 32069 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:52.297827 32069 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:52.304363 32069 blocking_queue.cpp:49] Waiting for data
I0426 20:51:52.374544 32076 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:52.375192 32069 solver.cpp:398]     Test net output #0: accuracy = 0.0598
I0426 20:51:52.375218 32069 solver.cpp:398]     Test net output #1: loss = 2.31694 (* 1 = 2.31694 loss)
I0426 20:51:52.378989 32069 solver.cpp:219] Iteration 0 (0 iter/s, 0.082857s/100 iters), loss = 2.30689
I0426 20:51:52.379020 32069 solver.cpp:238]     Train net output #0: loss = 2.30689 (* 1 = 2.30689 loss)
I0426 20:51:52.379034 32069 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:52.506826 32069 solver.cpp:219] Iteration 100 (782.533 iter/s, 0.12779s/100 iters), loss = 0.75555
I0426 20:51:52.506857 32069 solver.cpp:238]     Train net output #0: loss = 0.75555 (* 1 = 0.75555 loss)
I0426 20:51:52.506865 32069 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:52.631124 32069 solver.cpp:219] Iteration 200 (804.795 iter/s, 0.124255s/100 iters), loss = 0.628231
I0426 20:51:52.631161 32069 solver.cpp:238]     Train net output #0: loss = 0.628231 (* 1 = 0.628231 loss)
I0426 20:51:52.631167 32069 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:52.754963 32069 solver.cpp:219] Iteration 300 (807.717 iter/s, 0.123806s/100 iters), loss = 0.249808
I0426 20:51:52.754988 32069 solver.cpp:238]     Train net output #0: loss = 0.249808 (* 1 = 0.249808 loss)
I0426 20:51:52.754994 32069 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:52.878806 32069 solver.cpp:219] Iteration 400 (807.71 iter/s, 0.123807s/100 iters), loss = 0.108719
I0426 20:51:52.878846 32069 solver.cpp:238]     Train net output #0: loss = 0.108719 (* 1 = 0.108719 loss)
I0426 20:51:52.878852 32069 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:53.002007 32069 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:53.057591 32076 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:53.058281 32069 solver.cpp:398]     Test net output #0: accuracy = 0.9638
I0426 20:51:53.058315 32069 solver.cpp:398]     Test net output #1: loss = 0.107798 (* 1 = 0.107798 loss)
I0426 20:51:53.059691 32069 solver.cpp:219] Iteration 500 (552.999 iter/s, 0.180832s/100 iters), loss = 0.0675654
I0426 20:51:53.059743 32069 solver.cpp:238]     Train net output #0: loss = 0.0675654 (* 1 = 0.0675654 loss)
I0426 20:51:53.059752 32069 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:53.193084 32069 solver.cpp:219] Iteration 600 (749.95 iter/s, 0.133342s/100 iters), loss = 0.0792381
I0426 20:51:53.193121 32069 solver.cpp:238]     Train net output #0: loss = 0.0792381 (* 1 = 0.0792381 loss)
I0426 20:51:53.193143 32069 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:53.329704 32069 solver.cpp:219] Iteration 700 (732.149 iter/s, 0.136584s/100 iters), loss = 0.127954
I0426 20:51:53.329740 32069 solver.cpp:238]     Train net output #0: loss = 0.127954 (* 1 = 0.127954 loss)
I0426 20:51:53.329747 32069 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:53.462254 32069 solver.cpp:219] Iteration 800 (754.697 iter/s, 0.132504s/100 iters), loss = 0.253123
I0426 20:51:53.462285 32069 solver.cpp:238]     Train net output #0: loss = 0.253123 (* 1 = 0.253123 loss)
I0426 20:51:53.462293 32069 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:53.590242 32069 solver.cpp:219] Iteration 900 (781.588 iter/s, 0.127945s/100 iters), loss = 0.147262
I0426 20:51:53.590275 32069 solver.cpp:238]     Train net output #0: loss = 0.147261 (* 1 = 0.147261 loss)
I0426 20:51:53.590281 32069 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:53.632764 32075 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:53.716037 32069 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:53.722223 32069 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:53.725499 32069 solver.cpp:311] Iteration 1000, loss = 0.0826306
I0426 20:51:53.725519 32069 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:53.802050 32076 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:53.802688 32069 solver.cpp:398]     Test net output #0: accuracy = 0.9803
I0426 20:51:53.802713 32069 solver.cpp:398]     Test net output #1: loss = 0.0561611 (* 1 = 0.0561611 loss)
I0426 20:51:53.802719 32069 solver.cpp:316] Optimization Done.
I0426 20:51:53.802724 32069 caffe.cpp:259] Optimization Done.
