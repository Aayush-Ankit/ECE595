I0426 20:48:56.416138 31411 caffe.cpp:218] Using GPUs 0
I0426 20:48:56.446399 31411 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:56.897579 31411 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test22.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:56.897722 31411 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test22.prototxt
I0426 20:48:56.898069 31411 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:56.898099 31411 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:56.898185 31411 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:56.898252 31411 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:56.898334 31411 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:56.898355 31411 net.cpp:86] Creating Layer mnist
I0426 20:48:56.898362 31411 net.cpp:382] mnist -> data
I0426 20:48:56.898380 31411 net.cpp:382] mnist -> label
I0426 20:48:56.899291 31411 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:56.902122 31411 net.cpp:124] Setting up mnist
I0426 20:48:56.902168 31411 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:56.902181 31411 net.cpp:131] Top shape: 64 (64)
I0426 20:48:56.902189 31411 net.cpp:139] Memory required for data: 200960
I0426 20:48:56.902200 31411 layer_factory.hpp:77] Creating layer conv0
I0426 20:48:56.902240 31411 net.cpp:86] Creating Layer conv0
I0426 20:48:56.902248 31411 net.cpp:408] conv0 <- data
I0426 20:48:56.902269 31411 net.cpp:382] conv0 -> conv0
I0426 20:48:57.218969 31411 net.cpp:124] Setting up conv0
I0426 20:48:57.219003 31411 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:48:57.219008 31411 net.cpp:139] Memory required for data: 1675520
I0426 20:48:57.219027 31411 layer_factory.hpp:77] Creating layer pool0
I0426 20:48:57.219040 31411 net.cpp:86] Creating Layer pool0
I0426 20:48:57.219069 31411 net.cpp:408] pool0 <- conv0
I0426 20:48:57.219076 31411 net.cpp:382] pool0 -> pool0
I0426 20:48:57.219135 31411 net.cpp:124] Setting up pool0
I0426 20:48:57.219144 31411 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:48:57.219148 31411 net.cpp:139] Memory required for data: 2044160
I0426 20:48:57.219152 31411 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:57.219161 31411 net.cpp:86] Creating Layer ip1
I0426 20:48:57.219166 31411 net.cpp:408] ip1 <- pool0
I0426 20:48:57.219172 31411 net.cpp:382] ip1 -> ip1
I0426 20:48:57.221232 31411 net.cpp:124] Setting up ip1
I0426 20:48:57.221248 31411 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:57.221252 31411 net.cpp:139] Memory required for data: 2069760
I0426 20:48:57.221262 31411 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:57.221271 31411 net.cpp:86] Creating Layer relu1
I0426 20:48:57.221276 31411 net.cpp:408] relu1 <- ip1
I0426 20:48:57.221282 31411 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:57.221482 31411 net.cpp:124] Setting up relu1
I0426 20:48:57.221491 31411 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:57.221495 31411 net.cpp:139] Memory required for data: 2095360
I0426 20:48:57.221499 31411 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:57.221508 31411 net.cpp:86] Creating Layer ip2
I0426 20:48:57.221511 31411 net.cpp:408] ip2 <- ip1
I0426 20:48:57.221518 31411 net.cpp:382] ip2 -> ip2
I0426 20:48:57.221832 31411 net.cpp:124] Setting up ip2
I0426 20:48:57.221839 31411 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:57.221843 31411 net.cpp:139] Memory required for data: 2172160
I0426 20:48:57.221853 31411 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:57.221858 31411 net.cpp:86] Creating Layer relu2
I0426 20:48:57.221863 31411 net.cpp:408] relu2 <- ip2
I0426 20:48:57.221866 31411 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:57.222810 31411 net.cpp:124] Setting up relu2
I0426 20:48:57.222826 31411 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:57.222829 31411 net.cpp:139] Memory required for data: 2248960
I0426 20:48:57.222833 31411 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:57.222841 31411 net.cpp:86] Creating Layer ip3
I0426 20:48:57.222846 31411 net.cpp:408] ip3 <- ip2
I0426 20:48:57.222852 31411 net.cpp:382] ip3 -> ip3
I0426 20:48:57.223950 31411 net.cpp:124] Setting up ip3
I0426 20:48:57.223965 31411 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:57.223969 31411 net.cpp:139] Memory required for data: 2251520
I0426 20:48:57.223976 31411 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:57.223984 31411 net.cpp:86] Creating Layer relu3
I0426 20:48:57.223989 31411 net.cpp:408] relu3 <- ip3
I0426 20:48:57.223995 31411 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:57.224180 31411 net.cpp:124] Setting up relu3
I0426 20:48:57.224190 31411 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:57.224195 31411 net.cpp:139] Memory required for data: 2254080
I0426 20:48:57.224197 31411 layer_factory.hpp:77] Creating layer loss
I0426 20:48:57.224205 31411 net.cpp:86] Creating Layer loss
I0426 20:48:57.224208 31411 net.cpp:408] loss <- ip3
I0426 20:48:57.224213 31411 net.cpp:408] loss <- label
I0426 20:48:57.224220 31411 net.cpp:382] loss -> loss
I0426 20:48:57.224241 31411 layer_factory.hpp:77] Creating layer loss
I0426 20:48:57.224503 31411 net.cpp:124] Setting up loss
I0426 20:48:57.224514 31411 net.cpp:131] Top shape: (1)
I0426 20:48:57.224519 31411 net.cpp:134]     with loss weight 1
I0426 20:48:57.224534 31411 net.cpp:139] Memory required for data: 2254084
I0426 20:48:57.224539 31411 net.cpp:200] loss needs backward computation.
I0426 20:48:57.224544 31411 net.cpp:200] relu3 needs backward computation.
I0426 20:48:57.224546 31411 net.cpp:200] ip3 needs backward computation.
I0426 20:48:57.224550 31411 net.cpp:200] relu2 needs backward computation.
I0426 20:48:57.224553 31411 net.cpp:200] ip2 needs backward computation.
I0426 20:48:57.224557 31411 net.cpp:200] relu1 needs backward computation.
I0426 20:48:57.224560 31411 net.cpp:200] ip1 needs backward computation.
I0426 20:48:57.224578 31411 net.cpp:200] pool0 needs backward computation.
I0426 20:48:57.224582 31411 net.cpp:200] conv0 needs backward computation.
I0426 20:48:57.224586 31411 net.cpp:202] mnist does not need backward computation.
I0426 20:48:57.224589 31411 net.cpp:244] This network produces output loss
I0426 20:48:57.224599 31411 net.cpp:257] Network initialization done.
I0426 20:48:57.224952 31411 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test22.prototxt
I0426 20:48:57.224983 31411 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:57.225081 31411 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:57.225157 31411 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:57.225214 31411 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:57.225229 31411 net.cpp:86] Creating Layer mnist
I0426 20:48:57.225234 31411 net.cpp:382] mnist -> data
I0426 20:48:57.225244 31411 net.cpp:382] mnist -> label
I0426 20:48:57.225340 31411 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:57.226656 31411 net.cpp:124] Setting up mnist
I0426 20:48:57.226671 31411 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:57.226677 31411 net.cpp:131] Top shape: 100 (100)
I0426 20:48:57.226681 31411 net.cpp:139] Memory required for data: 314000
I0426 20:48:57.226686 31411 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:57.226707 31411 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:57.226712 31411 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:57.226718 31411 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:57.226727 31411 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:57.226830 31411 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:57.226840 31411 net.cpp:131] Top shape: 100 (100)
I0426 20:48:57.226845 31411 net.cpp:131] Top shape: 100 (100)
I0426 20:48:57.226848 31411 net.cpp:139] Memory required for data: 314800
I0426 20:48:57.226866 31411 layer_factory.hpp:77] Creating layer conv0
I0426 20:48:57.226876 31411 net.cpp:86] Creating Layer conv0
I0426 20:48:57.226881 31411 net.cpp:408] conv0 <- data
I0426 20:48:57.226887 31411 net.cpp:382] conv0 -> conv0
I0426 20:48:57.228641 31411 net.cpp:124] Setting up conv0
I0426 20:48:57.228658 31411 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:48:57.228663 31411 net.cpp:139] Memory required for data: 2618800
I0426 20:48:57.228673 31411 layer_factory.hpp:77] Creating layer pool0
I0426 20:48:57.228682 31411 net.cpp:86] Creating Layer pool0
I0426 20:48:57.228685 31411 net.cpp:408] pool0 <- conv0
I0426 20:48:57.228691 31411 net.cpp:382] pool0 -> pool0
I0426 20:48:57.228734 31411 net.cpp:124] Setting up pool0
I0426 20:48:57.228739 31411 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:48:57.228744 31411 net.cpp:139] Memory required for data: 3194800
I0426 20:48:57.228746 31411 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:57.228754 31411 net.cpp:86] Creating Layer ip1
I0426 20:48:57.228759 31411 net.cpp:408] ip1 <- pool0
I0426 20:48:57.228765 31411 net.cpp:382] ip1 -> ip1
I0426 20:48:57.230851 31411 net.cpp:124] Setting up ip1
I0426 20:48:57.230865 31411 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:57.230870 31411 net.cpp:139] Memory required for data: 3234800
I0426 20:48:57.230880 31411 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:57.230886 31411 net.cpp:86] Creating Layer relu1
I0426 20:48:57.230890 31411 net.cpp:408] relu1 <- ip1
I0426 20:48:57.230896 31411 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:57.231122 31411 net.cpp:124] Setting up relu1
I0426 20:48:57.231133 31411 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:57.231137 31411 net.cpp:139] Memory required for data: 3274800
I0426 20:48:57.231142 31411 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:57.231149 31411 net.cpp:86] Creating Layer ip2
I0426 20:48:57.231153 31411 net.cpp:408] ip2 <- ip1
I0426 20:48:57.231159 31411 net.cpp:382] ip2 -> ip2
I0426 20:48:57.231484 31411 net.cpp:124] Setting up ip2
I0426 20:48:57.231493 31411 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:57.231503 31411 net.cpp:139] Memory required for data: 3394800
I0426 20:48:57.231518 31411 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:57.231525 31411 net.cpp:86] Creating Layer relu2
I0426 20:48:57.231529 31411 net.cpp:408] relu2 <- ip2
I0426 20:48:57.231534 31411 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:57.232549 31411 net.cpp:124] Setting up relu2
I0426 20:48:57.232563 31411 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:57.232568 31411 net.cpp:139] Memory required for data: 3514800
I0426 20:48:57.232571 31411 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:57.232583 31411 net.cpp:86] Creating Layer ip3
I0426 20:48:57.232586 31411 net.cpp:408] ip3 <- ip2
I0426 20:48:57.232592 31411 net.cpp:382] ip3 -> ip3
I0426 20:48:57.232730 31411 net.cpp:124] Setting up ip3
I0426 20:48:57.232739 31411 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:57.232743 31411 net.cpp:139] Memory required for data: 3518800
I0426 20:48:57.232750 31411 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:57.232756 31411 net.cpp:86] Creating Layer relu3
I0426 20:48:57.232760 31411 net.cpp:408] relu3 <- ip3
I0426 20:48:57.232766 31411 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:57.232949 31411 net.cpp:124] Setting up relu3
I0426 20:48:57.232959 31411 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:57.232964 31411 net.cpp:139] Memory required for data: 3522800
I0426 20:48:57.232967 31411 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:48:57.232973 31411 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:48:57.232977 31411 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:48:57.232983 31411 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:48:57.232990 31411 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:48:57.233031 31411 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:48:57.233038 31411 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:57.233057 31411 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:57.233062 31411 net.cpp:139] Memory required for data: 3530800
I0426 20:48:57.233065 31411 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:57.233072 31411 net.cpp:86] Creating Layer accuracy
I0426 20:48:57.233075 31411 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:48:57.233081 31411 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:57.233088 31411 net.cpp:382] accuracy -> accuracy
I0426 20:48:57.233096 31411 net.cpp:124] Setting up accuracy
I0426 20:48:57.233101 31411 net.cpp:131] Top shape: (1)
I0426 20:48:57.233104 31411 net.cpp:139] Memory required for data: 3530804
I0426 20:48:57.233108 31411 layer_factory.hpp:77] Creating layer loss
I0426 20:48:57.233114 31411 net.cpp:86] Creating Layer loss
I0426 20:48:57.233124 31411 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:48:57.233129 31411 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:57.233134 31411 net.cpp:382] loss -> loss
I0426 20:48:57.233141 31411 layer_factory.hpp:77] Creating layer loss
I0426 20:48:57.233412 31411 net.cpp:124] Setting up loss
I0426 20:48:57.233423 31411 net.cpp:131] Top shape: (1)
I0426 20:48:57.233428 31411 net.cpp:134]     with loss weight 1
I0426 20:48:57.233434 31411 net.cpp:139] Memory required for data: 3530808
I0426 20:48:57.233438 31411 net.cpp:200] loss needs backward computation.
I0426 20:48:57.233443 31411 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:57.233448 31411 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:48:57.233451 31411 net.cpp:200] relu3 needs backward computation.
I0426 20:48:57.233454 31411 net.cpp:200] ip3 needs backward computation.
I0426 20:48:57.233458 31411 net.cpp:200] relu2 needs backward computation.
I0426 20:48:57.233461 31411 net.cpp:200] ip2 needs backward computation.
I0426 20:48:57.233465 31411 net.cpp:200] relu1 needs backward computation.
I0426 20:48:57.233469 31411 net.cpp:200] ip1 needs backward computation.
I0426 20:48:57.233471 31411 net.cpp:200] pool0 needs backward computation.
I0426 20:48:57.233475 31411 net.cpp:200] conv0 needs backward computation.
I0426 20:48:57.233480 31411 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:57.233485 31411 net.cpp:202] mnist does not need backward computation.
I0426 20:48:57.233489 31411 net.cpp:244] This network produces output accuracy
I0426 20:48:57.233492 31411 net.cpp:244] This network produces output loss
I0426 20:48:57.233503 31411 net.cpp:257] Network initialization done.
I0426 20:48:57.233546 31411 solver.cpp:56] Solver scaffolding done.
I0426 20:48:57.233851 31411 caffe.cpp:248] Starting Optimization
I0426 20:48:57.233860 31411 solver.cpp:273] Solving LeNet
I0426 20:48:57.233863 31411 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:57.235561 31411 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:57.240447 31411 blocking_queue.cpp:49] Waiting for data
I0426 20:48:57.309494 31418 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:57.310164 31411 solver.cpp:398]     Test net output #0: accuracy = 0.1139
I0426 20:48:57.310204 31411 solver.cpp:398]     Test net output #1: loss = 2.3077 (* 1 = 2.3077 loss)
I0426 20:48:57.315450 31411 solver.cpp:219] Iteration 0 (-2.79356e-33 iter/s, 0.0815552s/100 iters), loss = 2.27963
I0426 20:48:57.315497 31411 solver.cpp:238]     Train net output #0: loss = 2.27963 (* 1 = 2.27963 loss)
I0426 20:48:57.315517 31411 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:57.398946 31411 solver.cpp:219] Iteration 100 (1198.46 iter/s, 0.0834407s/100 iters), loss = 1.06374
I0426 20:48:57.398977 31411 solver.cpp:238]     Train net output #0: loss = 1.06374 (* 1 = 1.06374 loss)
I0426 20:48:57.398985 31411 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:57.474920 31411 solver.cpp:219] Iteration 200 (1316.94 iter/s, 0.0759337s/100 iters), loss = 0.715851
I0426 20:48:57.474944 31411 solver.cpp:238]     Train net output #0: loss = 0.715851 (* 1 = 0.715851 loss)
I0426 20:48:57.474951 31411 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:57.549157 31411 solver.cpp:219] Iteration 300 (1347.63 iter/s, 0.0742044s/100 iters), loss = 0.566463
I0426 20:48:57.549196 31411 solver.cpp:238]     Train net output #0: loss = 0.566463 (* 1 = 0.566463 loss)
I0426 20:48:57.549201 31411 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:57.623828 31411 solver.cpp:219] Iteration 400 (1339.76 iter/s, 0.0746404s/100 iters), loss = 0.499107
I0426 20:48:57.623867 31411 solver.cpp:238]     Train net output #0: loss = 0.499107 (* 1 = 0.499107 loss)
I0426 20:48:57.623872 31411 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:57.706950 31411 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:57.774858 31418 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:57.775589 31411 solver.cpp:398]     Test net output #0: accuracy = 0.7839
I0426 20:48:57.775640 31411 solver.cpp:398]     Test net output #1: loss = 0.567127 (* 1 = 0.567127 loss)
I0426 20:48:57.776643 31411 solver.cpp:219] Iteration 500 (654.558 iter/s, 0.152775s/100 iters), loss = 0.770195
I0426 20:48:57.776690 31411 solver.cpp:238]     Train net output #0: loss = 0.770195 (* 1 = 0.770195 loss)
I0426 20:48:57.776700 31411 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:57.859073 31411 solver.cpp:219] Iteration 600 (1213.84 iter/s, 0.0823829s/100 iters), loss = 0.529214
I0426 20:48:57.859104 31411 solver.cpp:238]     Train net output #0: loss = 0.529214 (* 1 = 0.529214 loss)
I0426 20:48:57.859118 31411 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:57.936147 31411 solver.cpp:219] Iteration 700 (1298.12 iter/s, 0.0770345s/100 iters), loss = 0.805723
I0426 20:48:57.936175 31411 solver.cpp:238]     Train net output #0: loss = 0.805723 (* 1 = 0.805723 loss)
I0426 20:48:57.936192 31411 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:58.013430 31411 solver.cpp:219] Iteration 800 (1294.57 iter/s, 0.0772455s/100 iters), loss = 0.656758
I0426 20:48:58.013470 31411 solver.cpp:238]     Train net output #0: loss = 0.656759 (* 1 = 0.656759 loss)
I0426 20:48:58.013478 31411 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:58.089890 31411 solver.cpp:219] Iteration 900 (1308.54 iter/s, 0.0764211s/100 iters), loss = 0.527413
I0426 20:48:58.089918 31411 solver.cpp:238]     Train net output #0: loss = 0.527413 (* 1 = 0.527413 loss)
I0426 20:48:58.089933 31411 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:58.118629 31417 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:58.173498 31411 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:58.178128 31411 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:58.180268 31411 solver.cpp:311] Iteration 1000, loss = 0.440811
I0426 20:48:58.180289 31411 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:58.255306 31418 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:58.255851 31411 solver.cpp:398]     Test net output #0: accuracy = 0.873
I0426 20:48:58.255873 31411 solver.cpp:398]     Test net output #1: loss = 0.351368 (* 1 = 0.351368 loss)
I0426 20:48:58.255889 31411 solver.cpp:316] Optimization Done.
I0426 20:48:58.255892 31411 caffe.cpp:259] Optimization Done.
