I0426 20:52:44.492141 32260 caffe.cpp:218] Using GPUs 0
I0426 20:52:44.523152 32260 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:45.060027 32260 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test120.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:45.060166 32260 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test120.prototxt
I0426 20:52:45.060571 32260 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:45.060588 32260 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:45.060690 32260 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:45.060765 32260 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:45.060889 32260 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:45.060915 32260 net.cpp:86] Creating Layer mnist
I0426 20:52:45.060925 32260 net.cpp:382] mnist -> data
I0426 20:52:45.060947 32260 net.cpp:382] mnist -> label
I0426 20:52:45.062038 32260 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:45.064549 32260 net.cpp:124] Setting up mnist
I0426 20:52:45.064568 32260 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:45.064574 32260 net.cpp:131] Top shape: 64 (64)
I0426 20:52:45.064579 32260 net.cpp:139] Memory required for data: 200960
I0426 20:52:45.064586 32260 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:45.064602 32260 net.cpp:86] Creating Layer conv0
I0426 20:52:45.064626 32260 net.cpp:408] conv0 <- data
I0426 20:52:45.064640 32260 net.cpp:382] conv0 -> conv0
I0426 20:52:45.361703 32260 net.cpp:124] Setting up conv0
I0426 20:52:45.361734 32260 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:45.361739 32260 net.cpp:139] Memory required for data: 3887360
I0426 20:52:45.361758 32260 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:45.361771 32260 net.cpp:86] Creating Layer pool0
I0426 20:52:45.361779 32260 net.cpp:408] pool0 <- conv0
I0426 20:52:45.361785 32260 net.cpp:382] pool0 -> pool0
I0426 20:52:45.361838 32260 net.cpp:124] Setting up pool0
I0426 20:52:45.361848 32260 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:45.361852 32260 net.cpp:139] Memory required for data: 4808960
I0426 20:52:45.361855 32260 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:45.361868 32260 net.cpp:86] Creating Layer conv1
I0426 20:52:45.361873 32260 net.cpp:408] conv1 <- pool0
I0426 20:52:45.361881 32260 net.cpp:382] conv1 -> conv1
I0426 20:52:45.365280 32260 net.cpp:124] Setting up conv1
I0426 20:52:45.365298 32260 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:52:45.365303 32260 net.cpp:139] Memory required for data: 5218560
I0426 20:52:45.365314 32260 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:45.365324 32260 net.cpp:86] Creating Layer pool1
I0426 20:52:45.365327 32260 net.cpp:408] pool1 <- conv1
I0426 20:52:45.365334 32260 net.cpp:382] pool1 -> pool1
I0426 20:52:45.365382 32260 net.cpp:124] Setting up pool1
I0426 20:52:45.365391 32260 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:52:45.365394 32260 net.cpp:139] Memory required for data: 5320960
I0426 20:52:45.365398 32260 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:45.365406 32260 net.cpp:86] Creating Layer ip1
I0426 20:52:45.365413 32260 net.cpp:408] ip1 <- pool1
I0426 20:52:45.365419 32260 net.cpp:382] ip1 -> ip1
I0426 20:52:45.365819 32260 net.cpp:124] Setting up ip1
I0426 20:52:45.365828 32260 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:45.365833 32260 net.cpp:139] Memory required for data: 5346560
I0426 20:52:45.365842 32260 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:45.365850 32260 net.cpp:86] Creating Layer relu1
I0426 20:52:45.365854 32260 net.cpp:408] relu1 <- ip1
I0426 20:52:45.365859 32260 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:45.366066 32260 net.cpp:124] Setting up relu1
I0426 20:52:45.366077 32260 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:45.366081 32260 net.cpp:139] Memory required for data: 5372160
I0426 20:52:45.366084 32260 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:45.366094 32260 net.cpp:86] Creating Layer ip2
I0426 20:52:45.366099 32260 net.cpp:408] ip2 <- ip1
I0426 20:52:45.366108 32260 net.cpp:382] ip2 -> ip2
I0426 20:52:45.366439 32260 net.cpp:124] Setting up ip2
I0426 20:52:45.366448 32260 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:45.366452 32260 net.cpp:139] Memory required for data: 5448960
I0426 20:52:45.366458 32260 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:45.366466 32260 net.cpp:86] Creating Layer relu2
I0426 20:52:45.366469 32260 net.cpp:408] relu2 <- ip2
I0426 20:52:45.366475 32260 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:45.367418 32260 net.cpp:124] Setting up relu2
I0426 20:52:45.367434 32260 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:45.367437 32260 net.cpp:139] Memory required for data: 5525760
I0426 20:52:45.367441 32260 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:45.367451 32260 net.cpp:86] Creating Layer ip3
I0426 20:52:45.367455 32260 net.cpp:408] ip3 <- ip2
I0426 20:52:45.367463 32260 net.cpp:382] ip3 -> ip3
I0426 20:52:45.368571 32260 net.cpp:124] Setting up ip3
I0426 20:52:45.368587 32260 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:45.368589 32260 net.cpp:139] Memory required for data: 5528320
I0426 20:52:45.368600 32260 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:45.368607 32260 net.cpp:86] Creating Layer relu3
I0426 20:52:45.368610 32260 net.cpp:408] relu3 <- ip3
I0426 20:52:45.368618 32260 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:45.368845 32260 net.cpp:124] Setting up relu3
I0426 20:52:45.368856 32260 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:45.368861 32260 net.cpp:139] Memory required for data: 5530880
I0426 20:52:45.368866 32260 layer_factory.hpp:77] Creating layer loss
I0426 20:52:45.368873 32260 net.cpp:86] Creating Layer loss
I0426 20:52:45.368877 32260 net.cpp:408] loss <- ip3
I0426 20:52:45.368882 32260 net.cpp:408] loss <- label
I0426 20:52:45.368891 32260 net.cpp:382] loss -> loss
I0426 20:52:45.368911 32260 layer_factory.hpp:77] Creating layer loss
I0426 20:52:45.369209 32260 net.cpp:124] Setting up loss
I0426 20:52:45.369218 32260 net.cpp:131] Top shape: (1)
I0426 20:52:45.369222 32260 net.cpp:134]     with loss weight 1
I0426 20:52:45.369237 32260 net.cpp:139] Memory required for data: 5530884
I0426 20:52:45.369241 32260 net.cpp:200] loss needs backward computation.
I0426 20:52:45.369246 32260 net.cpp:200] relu3 needs backward computation.
I0426 20:52:45.369248 32260 net.cpp:200] ip3 needs backward computation.
I0426 20:52:45.369252 32260 net.cpp:200] relu2 needs backward computation.
I0426 20:52:45.369256 32260 net.cpp:200] ip2 needs backward computation.
I0426 20:52:45.369258 32260 net.cpp:200] relu1 needs backward computation.
I0426 20:52:45.369261 32260 net.cpp:200] ip1 needs backward computation.
I0426 20:52:45.369264 32260 net.cpp:200] pool1 needs backward computation.
I0426 20:52:45.369268 32260 net.cpp:200] conv1 needs backward computation.
I0426 20:52:45.369271 32260 net.cpp:200] pool0 needs backward computation.
I0426 20:52:45.369276 32260 net.cpp:200] conv0 needs backward computation.
I0426 20:52:45.369279 32260 net.cpp:202] mnist does not need backward computation.
I0426 20:52:45.369282 32260 net.cpp:244] This network produces output loss
I0426 20:52:45.369295 32260 net.cpp:257] Network initialization done.
I0426 20:52:45.369678 32260 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test120.prototxt
I0426 20:52:45.369710 32260 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:45.369822 32260 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:45.369925 32260 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:45.369978 32260 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:45.369997 32260 net.cpp:86] Creating Layer mnist
I0426 20:52:45.370004 32260 net.cpp:382] mnist -> data
I0426 20:52:45.370015 32260 net.cpp:382] mnist -> label
I0426 20:52:45.370122 32260 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:45.372390 32260 net.cpp:124] Setting up mnist
I0426 20:52:45.372406 32260 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:45.372412 32260 net.cpp:131] Top shape: 100 (100)
I0426 20:52:45.372416 32260 net.cpp:139] Memory required for data: 314000
I0426 20:52:45.372421 32260 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:45.372452 32260 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:45.372457 32260 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:45.372463 32260 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:45.372472 32260 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:45.372575 32260 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:45.372586 32260 net.cpp:131] Top shape: 100 (100)
I0426 20:52:45.372592 32260 net.cpp:131] Top shape: 100 (100)
I0426 20:52:45.372596 32260 net.cpp:139] Memory required for data: 314800
I0426 20:52:45.372599 32260 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:45.372611 32260 net.cpp:86] Creating Layer conv0
I0426 20:52:45.372615 32260 net.cpp:408] conv0 <- data
I0426 20:52:45.372622 32260 net.cpp:382] conv0 -> conv0
I0426 20:52:45.374455 32260 net.cpp:124] Setting up conv0
I0426 20:52:45.374474 32260 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:45.374478 32260 net.cpp:139] Memory required for data: 6074800
I0426 20:52:45.374488 32260 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:45.374500 32260 net.cpp:86] Creating Layer pool0
I0426 20:52:45.374503 32260 net.cpp:408] pool0 <- conv0
I0426 20:52:45.374510 32260 net.cpp:382] pool0 -> pool0
I0426 20:52:45.374557 32260 net.cpp:124] Setting up pool0
I0426 20:52:45.374564 32260 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:45.374568 32260 net.cpp:139] Memory required for data: 7514800
I0426 20:52:45.374575 32260 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:45.374586 32260 net.cpp:86] Creating Layer conv1
I0426 20:52:45.374590 32260 net.cpp:408] conv1 <- pool0
I0426 20:52:45.374598 32260 net.cpp:382] conv1 -> conv1
I0426 20:52:45.377275 32260 net.cpp:124] Setting up conv1
I0426 20:52:45.377291 32260 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:52:45.377296 32260 net.cpp:139] Memory required for data: 8154800
I0426 20:52:45.377307 32260 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:45.377318 32260 net.cpp:86] Creating Layer pool1
I0426 20:52:45.377322 32260 net.cpp:408] pool1 <- conv1
I0426 20:52:45.377332 32260 net.cpp:382] pool1 -> pool1
I0426 20:52:45.377419 32260 net.cpp:124] Setting up pool1
I0426 20:52:45.377429 32260 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:52:45.377432 32260 net.cpp:139] Memory required for data: 8314800
I0426 20:52:45.377439 32260 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:45.377447 32260 net.cpp:86] Creating Layer ip1
I0426 20:52:45.377454 32260 net.cpp:408] ip1 <- pool1
I0426 20:52:45.377461 32260 net.cpp:382] ip1 -> ip1
I0426 20:52:45.377861 32260 net.cpp:124] Setting up ip1
I0426 20:52:45.377872 32260 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:45.377888 32260 net.cpp:139] Memory required for data: 8354800
I0426 20:52:45.377898 32260 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:45.377905 32260 net.cpp:86] Creating Layer relu1
I0426 20:52:45.377910 32260 net.cpp:408] relu1 <- ip1
I0426 20:52:45.377915 32260 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:45.378152 32260 net.cpp:124] Setting up relu1
I0426 20:52:45.378165 32260 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:45.378170 32260 net.cpp:139] Memory required for data: 8394800
I0426 20:52:45.378175 32260 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:45.378183 32260 net.cpp:86] Creating Layer ip2
I0426 20:52:45.378187 32260 net.cpp:408] ip2 <- ip1
I0426 20:52:45.378196 32260 net.cpp:382] ip2 -> ip2
I0426 20:52:45.378532 32260 net.cpp:124] Setting up ip2
I0426 20:52:45.378541 32260 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:45.378545 32260 net.cpp:139] Memory required for data: 8514800
I0426 20:52:45.378551 32260 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:45.378559 32260 net.cpp:86] Creating Layer relu2
I0426 20:52:45.378563 32260 net.cpp:408] relu2 <- ip2
I0426 20:52:45.378569 32260 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:45.378762 32260 net.cpp:124] Setting up relu2
I0426 20:52:45.378772 32260 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:45.378777 32260 net.cpp:139] Memory required for data: 8634800
I0426 20:52:45.378780 32260 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:45.378788 32260 net.cpp:86] Creating Layer ip3
I0426 20:52:45.378793 32260 net.cpp:408] ip3 <- ip2
I0426 20:52:45.378799 32260 net.cpp:382] ip3 -> ip3
I0426 20:52:45.378942 32260 net.cpp:124] Setting up ip3
I0426 20:52:45.378950 32260 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:45.378954 32260 net.cpp:139] Memory required for data: 8638800
I0426 20:52:45.378964 32260 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:45.378970 32260 net.cpp:86] Creating Layer relu3
I0426 20:52:45.378976 32260 net.cpp:408] relu3 <- ip3
I0426 20:52:45.378983 32260 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:45.379941 32260 net.cpp:124] Setting up relu3
I0426 20:52:45.379956 32260 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:45.379962 32260 net.cpp:139] Memory required for data: 8642800
I0426 20:52:45.379967 32260 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:45.379976 32260 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:45.379981 32260 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:45.379987 32260 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:45.379994 32260 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:45.380043 32260 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:45.380050 32260 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:45.380054 32260 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:45.380059 32260 net.cpp:139] Memory required for data: 8650800
I0426 20:52:45.380064 32260 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:45.380069 32260 net.cpp:86] Creating Layer accuracy
I0426 20:52:45.380074 32260 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:45.380079 32260 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:45.380084 32260 net.cpp:382] accuracy -> accuracy
I0426 20:52:45.380095 32260 net.cpp:124] Setting up accuracy
I0426 20:52:45.380101 32260 net.cpp:131] Top shape: (1)
I0426 20:52:45.380105 32260 net.cpp:139] Memory required for data: 8650804
I0426 20:52:45.380108 32260 layer_factory.hpp:77] Creating layer loss
I0426 20:52:45.380115 32260 net.cpp:86] Creating Layer loss
I0426 20:52:45.380118 32260 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:45.380123 32260 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:45.380131 32260 net.cpp:382] loss -> loss
I0426 20:52:45.380137 32260 layer_factory.hpp:77] Creating layer loss
I0426 20:52:45.380422 32260 net.cpp:124] Setting up loss
I0426 20:52:45.380434 32260 net.cpp:131] Top shape: (1)
I0426 20:52:45.380439 32260 net.cpp:134]     with loss weight 1
I0426 20:52:45.380460 32260 net.cpp:139] Memory required for data: 8650808
I0426 20:52:45.380465 32260 net.cpp:200] loss needs backward computation.
I0426 20:52:45.380472 32260 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:45.380477 32260 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:45.380481 32260 net.cpp:200] relu3 needs backward computation.
I0426 20:52:45.380483 32260 net.cpp:200] ip3 needs backward computation.
I0426 20:52:45.380487 32260 net.cpp:200] relu2 needs backward computation.
I0426 20:52:45.380491 32260 net.cpp:200] ip2 needs backward computation.
I0426 20:52:45.380496 32260 net.cpp:200] relu1 needs backward computation.
I0426 20:52:45.380499 32260 net.cpp:200] ip1 needs backward computation.
I0426 20:52:45.380502 32260 net.cpp:200] pool1 needs backward computation.
I0426 20:52:45.380506 32260 net.cpp:200] conv1 needs backward computation.
I0426 20:52:45.380511 32260 net.cpp:200] pool0 needs backward computation.
I0426 20:52:45.380513 32260 net.cpp:200] conv0 needs backward computation.
I0426 20:52:45.380518 32260 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:45.380522 32260 net.cpp:202] mnist does not need backward computation.
I0426 20:52:45.380525 32260 net.cpp:244] This network produces output accuracy
I0426 20:52:45.380530 32260 net.cpp:244] This network produces output loss
I0426 20:52:45.380543 32260 net.cpp:257] Network initialization done.
I0426 20:52:45.380594 32260 solver.cpp:56] Solver scaffolding done.
I0426 20:52:45.380991 32260 caffe.cpp:248] Starting Optimization
I0426 20:52:45.381000 32260 solver.cpp:273] Solving LeNet
I0426 20:52:45.381003 32260 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:45.381975 32260 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:45.450254 32309 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:45.452018 32260 solver.cpp:398]     Test net output #0: accuracy = 0.1529
I0426 20:52:45.452042 32260 solver.cpp:398]     Test net output #1: loss = 2.27853 (* 1 = 2.27853 loss)
I0426 20:52:45.457088 32260 solver.cpp:219] Iteration 0 (0 iter/s, 0.0760566s/100 iters), loss = 2.27925
I0426 20:52:45.457120 32260 solver.cpp:238]     Train net output #0: loss = 2.27925 (* 1 = 2.27925 loss)
I0426 20:52:45.457136 32260 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:45.570724 32260 solver.cpp:219] Iteration 100 (880.357 iter/s, 0.11359s/100 iters), loss = 0.374944
I0426 20:52:45.570749 32260 solver.cpp:238]     Train net output #0: loss = 0.374944 (* 1 = 0.374944 loss)
I0426 20:52:45.570755 32260 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:45.685042 32260 solver.cpp:219] Iteration 200 (875.032 iter/s, 0.114282s/100 iters), loss = 0.342963
I0426 20:52:45.685067 32260 solver.cpp:238]     Train net output #0: loss = 0.342963 (* 1 = 0.342963 loss)
I0426 20:52:45.685075 32260 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:45.804903 32260 solver.cpp:219] Iteration 300 (834.562 iter/s, 0.119823s/100 iters), loss = 0.334997
I0426 20:52:45.804931 32260 solver.cpp:238]     Train net output #0: loss = 0.334997 (* 1 = 0.334997 loss)
I0426 20:52:45.804939 32260 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:45.924104 32260 solver.cpp:219] Iteration 400 (839.195 iter/s, 0.119162s/100 iters), loss = 0.351911
I0426 20:52:45.924146 32260 solver.cpp:238]     Train net output #0: loss = 0.351911 (* 1 = 0.351911 loss)
I0426 20:52:45.924154 32260 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:46.040194 32260 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:46.043653 32260 blocking_queue.cpp:49] Waiting for data
I0426 20:52:46.104204 32309 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:46.105191 32260 solver.cpp:398]     Test net output #0: accuracy = 0.8791
I0426 20:52:46.105213 32260 solver.cpp:398]     Test net output #1: loss = 0.304765 (* 1 = 0.304765 loss)
I0426 20:52:46.106364 32260 solver.cpp:219] Iteration 500 (548.787 iter/s, 0.18222s/100 iters), loss = 0.262057
I0426 20:52:46.106402 32260 solver.cpp:238]     Train net output #0: loss = 0.262057 (* 1 = 0.262057 loss)
I0426 20:52:46.106410 32260 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:46.225564 32260 solver.cpp:219] Iteration 600 (839.274 iter/s, 0.119151s/100 iters), loss = 0.370145
I0426 20:52:46.225589 32260 solver.cpp:238]     Train net output #0: loss = 0.370145 (* 1 = 0.370145 loss)
I0426 20:52:46.225612 32260 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:46.340754 32260 solver.cpp:219] Iteration 700 (868.396 iter/s, 0.115155s/100 iters), loss = 0.304206
I0426 20:52:46.340796 32260 solver.cpp:238]     Train net output #0: loss = 0.304206 (* 1 = 0.304206 loss)
I0426 20:52:46.340803 32260 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:46.456286 32260 solver.cpp:219] Iteration 800 (865.954 iter/s, 0.11548s/100 iters), loss = 0.407234
I0426 20:52:46.456327 32260 solver.cpp:238]     Train net output #0: loss = 0.407234 (* 1 = 0.407234 loss)
I0426 20:52:46.456334 32260 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:46.573179 32260 solver.cpp:219] Iteration 900 (855.862 iter/s, 0.116841s/100 iters), loss = 0.214598
I0426 20:52:46.573233 32260 solver.cpp:238]     Train net output #0: loss = 0.214598 (* 1 = 0.214598 loss)
I0426 20:52:46.573240 32260 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:46.612795 32306 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:46.689167 32260 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:46.691239 32260 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:46.692409 32260 solver.cpp:311] Iteration 1000, loss = 0.297235
I0426 20:52:46.692423 32260 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:46.767798 32309 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:46.768503 32260 solver.cpp:398]     Test net output #0: accuracy = 0.8862
I0426 20:52:46.768525 32260 solver.cpp:398]     Test net output #1: loss = 0.280982 (* 1 = 0.280982 loss)
I0426 20:52:46.768532 32260 solver.cpp:316] Optimization Done.
I0426 20:52:46.768535 32260 caffe.cpp:259] Optimization Done.
