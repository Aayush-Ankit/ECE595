I0426 20:53:30.561879 32453 caffe.cpp:218] Using GPUs 0
I0426 20:53:30.598474 32453 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:31.133468 32453 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test138.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:31.133610 32453 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test138.prototxt
I0426 20:53:31.134032 32453 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:31.134052 32453 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:31.134155 32453 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:31.134234 32453 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:31.134340 32453 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:31.134362 32453 net.cpp:86] Creating Layer mnist
I0426 20:53:31.134372 32453 net.cpp:382] mnist -> data
I0426 20:53:31.134394 32453 net.cpp:382] mnist -> label
I0426 20:53:31.135480 32453 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:31.138015 32453 net.cpp:124] Setting up mnist
I0426 20:53:31.138033 32453 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:31.138039 32453 net.cpp:131] Top shape: 64 (64)
I0426 20:53:31.138043 32453 net.cpp:139] Memory required for data: 200960
I0426 20:53:31.138051 32453 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:31.138067 32453 net.cpp:86] Creating Layer conv0
I0426 20:53:31.138090 32453 net.cpp:408] conv0 <- data
I0426 20:53:31.138103 32453 net.cpp:382] conv0 -> conv0
I0426 20:53:31.430527 32453 net.cpp:124] Setting up conv0
I0426 20:53:31.430557 32453 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:53:31.430562 32453 net.cpp:139] Memory required for data: 3887360
I0426 20:53:31.430578 32453 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:31.430594 32453 net.cpp:86] Creating Layer pool0
I0426 20:53:31.430599 32453 net.cpp:408] pool0 <- conv0
I0426 20:53:31.430606 32453 net.cpp:382] pool0 -> pool0
I0426 20:53:31.430658 32453 net.cpp:124] Setting up pool0
I0426 20:53:31.430665 32453 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:53:31.430668 32453 net.cpp:139] Memory required for data: 4808960
I0426 20:53:31.430672 32453 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:31.430685 32453 net.cpp:86] Creating Layer conv1
I0426 20:53:31.430690 32453 net.cpp:408] conv1 <- pool0
I0426 20:53:31.430696 32453 net.cpp:382] conv1 -> conv1
I0426 20:53:31.433192 32453 net.cpp:124] Setting up conv1
I0426 20:53:31.433208 32453 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:53:31.433213 32453 net.cpp:139] Memory required for data: 5628160
I0426 20:53:31.433223 32453 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:31.433233 32453 net.cpp:86] Creating Layer pool1
I0426 20:53:31.433236 32453 net.cpp:408] pool1 <- conv1
I0426 20:53:31.433243 32453 net.cpp:382] pool1 -> pool1
I0426 20:53:31.433286 32453 net.cpp:124] Setting up pool1
I0426 20:53:31.433297 32453 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:53:31.433300 32453 net.cpp:139] Memory required for data: 5832960
I0426 20:53:31.433305 32453 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:31.433313 32453 net.cpp:86] Creating Layer ip1
I0426 20:53:31.433316 32453 net.cpp:408] ip1 <- pool1
I0426 20:53:31.433322 32453 net.cpp:382] ip1 -> ip1
I0426 20:53:31.435992 32453 net.cpp:124] Setting up ip1
I0426 20:53:31.436007 32453 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:31.436010 32453 net.cpp:139] Memory required for data: 5909760
I0426 20:53:31.436020 32453 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:31.436028 32453 net.cpp:86] Creating Layer relu1
I0426 20:53:31.436033 32453 net.cpp:408] relu1 <- ip1
I0426 20:53:31.436038 32453 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:31.436239 32453 net.cpp:124] Setting up relu1
I0426 20:53:31.436249 32453 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:31.436254 32453 net.cpp:139] Memory required for data: 5986560
I0426 20:53:31.436257 32453 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:31.436264 32453 net.cpp:86] Creating Layer ip2
I0426 20:53:31.436269 32453 net.cpp:408] ip2 <- ip1
I0426 20:53:31.436275 32453 net.cpp:382] ip2 -> ip2
I0426 20:53:31.437000 32453 net.cpp:124] Setting up ip2
I0426 20:53:31.437011 32453 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:31.437014 32453 net.cpp:139] Memory required for data: 6063360
I0426 20:53:31.437021 32453 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:31.437028 32453 net.cpp:86] Creating Layer relu2
I0426 20:53:31.437032 32453 net.cpp:408] relu2 <- ip2
I0426 20:53:31.437037 32453 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:31.437973 32453 net.cpp:124] Setting up relu2
I0426 20:53:31.437986 32453 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:31.437991 32453 net.cpp:139] Memory required for data: 6140160
I0426 20:53:31.437995 32453 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:31.438004 32453 net.cpp:86] Creating Layer ip3
I0426 20:53:31.438007 32453 net.cpp:408] ip3 <- ip2
I0426 20:53:31.438015 32453 net.cpp:382] ip3 -> ip3
I0426 20:53:31.439083 32453 net.cpp:124] Setting up ip3
I0426 20:53:31.439100 32453 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:31.439103 32453 net.cpp:139] Memory required for data: 6142720
I0426 20:53:31.439113 32453 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:31.439119 32453 net.cpp:86] Creating Layer relu3
I0426 20:53:31.439124 32453 net.cpp:408] relu3 <- ip3
I0426 20:53:31.439129 32453 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:31.439332 32453 net.cpp:124] Setting up relu3
I0426 20:53:31.439343 32453 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:31.439347 32453 net.cpp:139] Memory required for data: 6145280
I0426 20:53:31.439352 32453 layer_factory.hpp:77] Creating layer loss
I0426 20:53:31.439357 32453 net.cpp:86] Creating Layer loss
I0426 20:53:31.439362 32453 net.cpp:408] loss <- ip3
I0426 20:53:31.439366 32453 net.cpp:408] loss <- label
I0426 20:53:31.439373 32453 net.cpp:382] loss -> loss
I0426 20:53:31.439389 32453 layer_factory.hpp:77] Creating layer loss
I0426 20:53:31.439667 32453 net.cpp:124] Setting up loss
I0426 20:53:31.439678 32453 net.cpp:131] Top shape: (1)
I0426 20:53:31.439682 32453 net.cpp:134]     with loss weight 1
I0426 20:53:31.439697 32453 net.cpp:139] Memory required for data: 6145284
I0426 20:53:31.439702 32453 net.cpp:200] loss needs backward computation.
I0426 20:53:31.439707 32453 net.cpp:200] relu3 needs backward computation.
I0426 20:53:31.439709 32453 net.cpp:200] ip3 needs backward computation.
I0426 20:53:31.439713 32453 net.cpp:200] relu2 needs backward computation.
I0426 20:53:31.439716 32453 net.cpp:200] ip2 needs backward computation.
I0426 20:53:31.439720 32453 net.cpp:200] relu1 needs backward computation.
I0426 20:53:31.439723 32453 net.cpp:200] ip1 needs backward computation.
I0426 20:53:31.439728 32453 net.cpp:200] pool1 needs backward computation.
I0426 20:53:31.439731 32453 net.cpp:200] conv1 needs backward computation.
I0426 20:53:31.439735 32453 net.cpp:200] pool0 needs backward computation.
I0426 20:53:31.439738 32453 net.cpp:200] conv0 needs backward computation.
I0426 20:53:31.439743 32453 net.cpp:202] mnist does not need backward computation.
I0426 20:53:31.439746 32453 net.cpp:244] This network produces output loss
I0426 20:53:31.439757 32453 net.cpp:257] Network initialization done.
I0426 20:53:31.440134 32453 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test138.prototxt
I0426 20:53:31.440165 32453 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:31.440270 32453 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:31.440361 32453 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:31.440412 32453 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:31.440426 32453 net.cpp:86] Creating Layer mnist
I0426 20:53:31.440431 32453 net.cpp:382] mnist -> data
I0426 20:53:31.440440 32453 net.cpp:382] mnist -> label
I0426 20:53:31.440538 32453 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:31.442999 32453 net.cpp:124] Setting up mnist
I0426 20:53:31.443015 32453 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:31.443022 32453 net.cpp:131] Top shape: 100 (100)
I0426 20:53:31.443027 32453 net.cpp:139] Memory required for data: 314000
I0426 20:53:31.443030 32453 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:31.443038 32453 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:31.443042 32453 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:31.443048 32453 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:31.443056 32453 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:31.443109 32453 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:31.443116 32453 net.cpp:131] Top shape: 100 (100)
I0426 20:53:31.443120 32453 net.cpp:131] Top shape: 100 (100)
I0426 20:53:31.443125 32453 net.cpp:139] Memory required for data: 314800
I0426 20:53:31.443127 32453 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:31.443138 32453 net.cpp:86] Creating Layer conv0
I0426 20:53:31.443142 32453 net.cpp:408] conv0 <- data
I0426 20:53:31.443148 32453 net.cpp:382] conv0 -> conv0
I0426 20:53:31.445143 32453 net.cpp:124] Setting up conv0
I0426 20:53:31.445160 32453 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:53:31.445164 32453 net.cpp:139] Memory required for data: 6074800
I0426 20:53:31.445175 32453 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:31.445183 32453 net.cpp:86] Creating Layer pool0
I0426 20:53:31.445188 32453 net.cpp:408] pool0 <- conv0
I0426 20:53:31.445194 32453 net.cpp:382] pool0 -> pool0
I0426 20:53:31.445233 32453 net.cpp:124] Setting up pool0
I0426 20:53:31.445240 32453 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:53:31.445243 32453 net.cpp:139] Memory required for data: 7514800
I0426 20:53:31.445247 32453 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:31.445256 32453 net.cpp:86] Creating Layer conv1
I0426 20:53:31.445261 32453 net.cpp:408] conv1 <- pool0
I0426 20:53:31.445266 32453 net.cpp:382] conv1 -> conv1
I0426 20:53:31.447226 32453 net.cpp:124] Setting up conv1
I0426 20:53:31.447240 32453 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:53:31.447247 32453 net.cpp:139] Memory required for data: 8794800
I0426 20:53:31.447257 32453 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:31.447264 32453 net.cpp:86] Creating Layer pool1
I0426 20:53:31.447268 32453 net.cpp:408] pool1 <- conv1
I0426 20:53:31.447274 32453 net.cpp:382] pool1 -> pool1
I0426 20:53:31.447315 32453 net.cpp:124] Setting up pool1
I0426 20:53:31.447325 32453 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:53:31.447330 32453 net.cpp:139] Memory required for data: 9114800
I0426 20:53:31.447334 32453 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:31.447340 32453 net.cpp:86] Creating Layer ip1
I0426 20:53:31.447345 32453 net.cpp:408] ip1 <- pool1
I0426 20:53:31.447350 32453 net.cpp:382] ip1 -> ip1
I0426 20:53:31.449081 32453 net.cpp:124] Setting up ip1
I0426 20:53:31.449092 32453 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:31.449108 32453 net.cpp:139] Memory required for data: 9234800
I0426 20:53:31.449118 32453 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:31.449125 32453 net.cpp:86] Creating Layer relu1
I0426 20:53:31.449128 32453 net.cpp:408] relu1 <- ip1
I0426 20:53:31.449134 32453 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:31.449319 32453 net.cpp:124] Setting up relu1
I0426 20:53:31.449329 32453 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:31.449333 32453 net.cpp:139] Memory required for data: 9354800
I0426 20:53:31.449337 32453 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:31.449345 32453 net.cpp:86] Creating Layer ip2
I0426 20:53:31.449349 32453 net.cpp:408] ip2 <- ip1
I0426 20:53:31.449362 32453 net.cpp:382] ip2 -> ip2
I0426 20:53:31.450084 32453 net.cpp:124] Setting up ip2
I0426 20:53:31.450094 32453 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:31.450098 32453 net.cpp:139] Memory required for data: 9474800
I0426 20:53:31.450104 32453 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:31.450110 32453 net.cpp:86] Creating Layer relu2
I0426 20:53:31.450114 32453 net.cpp:408] relu2 <- ip2
I0426 20:53:31.450119 32453 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:31.450294 32453 net.cpp:124] Setting up relu2
I0426 20:53:31.450304 32453 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:31.450307 32453 net.cpp:139] Memory required for data: 9594800
I0426 20:53:31.450310 32453 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:31.450317 32453 net.cpp:86] Creating Layer ip3
I0426 20:53:31.450320 32453 net.cpp:408] ip3 <- ip2
I0426 20:53:31.450326 32453 net.cpp:382] ip3 -> ip3
I0426 20:53:31.450458 32453 net.cpp:124] Setting up ip3
I0426 20:53:31.450466 32453 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:31.450469 32453 net.cpp:139] Memory required for data: 9598800
I0426 20:53:31.450479 32453 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:31.450484 32453 net.cpp:86] Creating Layer relu3
I0426 20:53:31.450489 32453 net.cpp:408] relu3 <- ip3
I0426 20:53:31.450492 32453 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:31.451427 32453 net.cpp:124] Setting up relu3
I0426 20:53:31.451442 32453 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:31.451447 32453 net.cpp:139] Memory required for data: 9602800
I0426 20:53:31.451450 32453 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:53:31.451457 32453 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:53:31.451460 32453 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:53:31.451467 32453 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:53:31.451473 32453 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:53:31.451516 32453 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:53:31.451532 32453 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:31.451536 32453 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:31.451540 32453 net.cpp:139] Memory required for data: 9610800
I0426 20:53:31.451544 32453 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:31.451550 32453 net.cpp:86] Creating Layer accuracy
I0426 20:53:31.451553 32453 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:53:31.451557 32453 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:31.451563 32453 net.cpp:382] accuracy -> accuracy
I0426 20:53:31.451570 32453 net.cpp:124] Setting up accuracy
I0426 20:53:31.451575 32453 net.cpp:131] Top shape: (1)
I0426 20:53:31.451578 32453 net.cpp:139] Memory required for data: 9610804
I0426 20:53:31.451582 32453 layer_factory.hpp:77] Creating layer loss
I0426 20:53:31.451587 32453 net.cpp:86] Creating Layer loss
I0426 20:53:31.451591 32453 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:53:31.451594 32453 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:31.451599 32453 net.cpp:382] loss -> loss
I0426 20:53:31.451606 32453 layer_factory.hpp:77] Creating layer loss
I0426 20:53:31.451861 32453 net.cpp:124] Setting up loss
I0426 20:53:31.451871 32453 net.cpp:131] Top shape: (1)
I0426 20:53:31.451875 32453 net.cpp:134]     with loss weight 1
I0426 20:53:31.451894 32453 net.cpp:139] Memory required for data: 9610808
I0426 20:53:31.451898 32453 net.cpp:200] loss needs backward computation.
I0426 20:53:31.451902 32453 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:31.451907 32453 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:53:31.451911 32453 net.cpp:200] relu3 needs backward computation.
I0426 20:53:31.451915 32453 net.cpp:200] ip3 needs backward computation.
I0426 20:53:31.451918 32453 net.cpp:200] relu2 needs backward computation.
I0426 20:53:31.451921 32453 net.cpp:200] ip2 needs backward computation.
I0426 20:53:31.451925 32453 net.cpp:200] relu1 needs backward computation.
I0426 20:53:31.451928 32453 net.cpp:200] ip1 needs backward computation.
I0426 20:53:31.451932 32453 net.cpp:200] pool1 needs backward computation.
I0426 20:53:31.451936 32453 net.cpp:200] conv1 needs backward computation.
I0426 20:53:31.451941 32453 net.cpp:200] pool0 needs backward computation.
I0426 20:53:31.451944 32453 net.cpp:200] conv0 needs backward computation.
I0426 20:53:31.451948 32453 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:31.451953 32453 net.cpp:202] mnist does not need backward computation.
I0426 20:53:31.451956 32453 net.cpp:244] This network produces output accuracy
I0426 20:53:31.451961 32453 net.cpp:244] This network produces output loss
I0426 20:53:31.451972 32453 net.cpp:257] Network initialization done.
I0426 20:53:31.452021 32453 solver.cpp:56] Solver scaffolding done.
I0426 20:53:31.452391 32453 caffe.cpp:248] Starting Optimization
I0426 20:53:31.452399 32453 solver.cpp:273] Solving LeNet
I0426 20:53:31.452401 32453 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:31.454088 32453 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:31.522897 32460 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:31.524710 32453 solver.cpp:398]     Test net output #0: accuracy = 0.177
I0426 20:53:31.524734 32453 solver.cpp:398]     Test net output #1: loss = 2.3114 (* 1 = 2.3114 loss)
I0426 20:53:31.529544 32453 solver.cpp:219] Iteration 0 (0 iter/s, 0.0771156s/100 iters), loss = 2.28537
I0426 20:53:31.529572 32453 solver.cpp:238]     Train net output #0: loss = 2.28537 (* 1 = 2.28537 loss)
I0426 20:53:31.529585 32453 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:31.669950 32453 solver.cpp:219] Iteration 100 (712.424 iter/s, 0.140366s/100 iters), loss = 1.21143
I0426 20:53:31.669976 32453 solver.cpp:238]     Train net output #0: loss = 1.21143 (* 1 = 1.21143 loss)
I0426 20:53:31.669982 32453 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:31.813019 32453 solver.cpp:219] Iteration 200 (699.152 iter/s, 0.14303s/100 iters), loss = 0.529564
I0426 20:53:31.813060 32453 solver.cpp:238]     Train net output #0: loss = 0.529564 (* 1 = 0.529564 loss)
I0426 20:53:31.813066 32453 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:31.957078 32453 solver.cpp:219] Iteration 300 (694.341 iter/s, 0.144021s/100 iters), loss = 0.463804
I0426 20:53:31.957118 32453 solver.cpp:238]     Train net output #0: loss = 0.463804 (* 1 = 0.463804 loss)
I0426 20:53:31.957123 32453 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:32.100469 32453 solver.cpp:219] Iteration 400 (697.57 iter/s, 0.143355s/100 iters), loss = 0.771041
I0426 20:53:32.100507 32453 solver.cpp:238]     Train net output #0: loss = 0.771041 (* 1 = 0.771041 loss)
I0426 20:53:32.100513 32453 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:32.241042 32453 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:32.303979 32460 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:32.306221 32453 solver.cpp:398]     Test net output #0: accuracy = 0.7816
I0426 20:53:32.306239 32453 solver.cpp:398]     Test net output #1: loss = 0.539391 (* 1 = 0.539391 loss)
I0426 20:53:32.307512 32453 solver.cpp:219] Iteration 500 (483.081 iter/s, 0.207005s/100 iters), loss = 0.675738
I0426 20:53:32.307548 32453 solver.cpp:238]     Train net output #0: loss = 0.675738 (* 1 = 0.675738 loss)
I0426 20:53:32.307569 32453 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:32.450673 32453 solver.cpp:219] Iteration 600 (698.682 iter/s, 0.143127s/100 iters), loss = 0.447101
I0426 20:53:32.450706 32453 solver.cpp:238]     Train net output #0: loss = 0.447101 (* 1 = 0.447101 loss)
I0426 20:53:32.450713 32453 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:32.599624 32453 solver.cpp:219] Iteration 700 (671.565 iter/s, 0.148906s/100 iters), loss = 0.480638
I0426 20:53:32.599663 32453 solver.cpp:238]     Train net output #0: loss = 0.480638 (* 1 = 0.480638 loss)
I0426 20:53:32.599673 32453 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:32.749693 32453 solver.cpp:219] Iteration 800 (666.586 iter/s, 0.150018s/100 iters), loss = 0.609323
I0426 20:53:32.749729 32453 solver.cpp:238]     Train net output #0: loss = 0.609323 (* 1 = 0.609323 loss)
I0426 20:53:32.749738 32453 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:32.897719 32453 solver.cpp:219] Iteration 900 (675.775 iter/s, 0.147978s/100 iters), loss = 0.190494
I0426 20:53:32.897750 32453 solver.cpp:238]     Train net output #0: loss = 0.190494 (* 1 = 0.190494 loss)
I0426 20:53:32.897758 32453 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:32.945067 32459 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:33.041074 32453 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:33.047243 32453 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:33.050927 32453 solver.cpp:311] Iteration 1000, loss = 0.193549
I0426 20:53:33.050947 32453 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:33.117720 32460 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:33.119601 32453 solver.cpp:398]     Test net output #0: accuracy = 0.8825
I0426 20:53:33.119627 32453 solver.cpp:398]     Test net output #1: loss = 0.297578 (* 1 = 0.297578 loss)
I0426 20:53:33.119634 32453 solver.cpp:316] Optimization Done.
I0426 20:53:33.119638 32453 caffe.cpp:259] Optimization Done.
