I0426 20:52:57.085456 32346 caffe.cpp:218] Using GPUs 0
I0426 20:52:57.123353 32346 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:57.587921 32346 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test125.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:57.588081 32346 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test125.prototxt
I0426 20:52:57.588459 32346 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:57.588488 32346 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:57.588621 32346 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:57.588688 32346 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:57.588773 32346 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:57.588795 32346 net.cpp:86] Creating Layer mnist
I0426 20:52:57.588804 32346 net.cpp:382] mnist -> data
I0426 20:52:57.588848 32346 net.cpp:382] mnist -> label
I0426 20:52:57.589859 32346 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:57.592048 32346 net.cpp:124] Setting up mnist
I0426 20:52:57.592093 32346 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:57.592108 32346 net.cpp:131] Top shape: 64 (64)
I0426 20:52:57.592110 32346 net.cpp:139] Memory required for data: 200960
I0426 20:52:57.592116 32346 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:57.592144 32346 net.cpp:86] Creating Layer conv0
I0426 20:52:57.592159 32346 net.cpp:408] conv0 <- data
I0426 20:52:57.592172 32346 net.cpp:382] conv0 -> conv0
I0426 20:52:57.823854 32346 net.cpp:124] Setting up conv0
I0426 20:52:57.823880 32346 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:57.823884 32346 net.cpp:139] Memory required for data: 3887360
I0426 20:52:57.823899 32346 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:57.823941 32346 net.cpp:86] Creating Layer pool0
I0426 20:52:57.823946 32346 net.cpp:408] pool0 <- conv0
I0426 20:52:57.823951 32346 net.cpp:382] pool0 -> pool0
I0426 20:52:57.823995 32346 net.cpp:124] Setting up pool0
I0426 20:52:57.824002 32346 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:57.824005 32346 net.cpp:139] Memory required for data: 4808960
I0426 20:52:57.824008 32346 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:57.824019 32346 net.cpp:86] Creating Layer conv1
I0426 20:52:57.824023 32346 net.cpp:408] conv1 <- pool0
I0426 20:52:57.824026 32346 net.cpp:382] conv1 -> conv1
I0426 20:52:57.826838 32346 net.cpp:124] Setting up conv1
I0426 20:52:57.826867 32346 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:52:57.826870 32346 net.cpp:139] Memory required for data: 5218560
I0426 20:52:57.826894 32346 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:57.826901 32346 net.cpp:86] Creating Layer pool1
I0426 20:52:57.826905 32346 net.cpp:408] pool1 <- conv1
I0426 20:52:57.826910 32346 net.cpp:382] pool1 -> pool1
I0426 20:52:57.826961 32346 net.cpp:124] Setting up pool1
I0426 20:52:57.826967 32346 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:52:57.826969 32346 net.cpp:139] Memory required for data: 5320960
I0426 20:52:57.826972 32346 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:57.826979 32346 net.cpp:86] Creating Layer ip1
I0426 20:52:57.826982 32346 net.cpp:408] ip1 <- pool1
I0426 20:52:57.826987 32346 net.cpp:382] ip1 -> ip1
I0426 20:52:57.828586 32346 net.cpp:124] Setting up ip1
I0426 20:52:57.828598 32346 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:57.828618 32346 net.cpp:139] Memory required for data: 5397760
I0426 20:52:57.828624 32346 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:57.828630 32346 net.cpp:86] Creating Layer relu1
I0426 20:52:57.828634 32346 net.cpp:408] relu1 <- ip1
I0426 20:52:57.828639 32346 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:57.828832 32346 net.cpp:124] Setting up relu1
I0426 20:52:57.828841 32346 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:57.828845 32346 net.cpp:139] Memory required for data: 5474560
I0426 20:52:57.828848 32346 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:57.828855 32346 net.cpp:86] Creating Layer ip2
I0426 20:52:57.828857 32346 net.cpp:408] ip2 <- ip1
I0426 20:52:57.828877 32346 net.cpp:382] ip2 -> ip2
I0426 20:52:57.829596 32346 net.cpp:124] Setting up ip2
I0426 20:52:57.829603 32346 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:57.829607 32346 net.cpp:139] Memory required for data: 5551360
I0426 20:52:57.829612 32346 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:57.829633 32346 net.cpp:86] Creating Layer relu2
I0426 20:52:57.829637 32346 net.cpp:408] relu2 <- ip2
I0426 20:52:57.829640 32346 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:57.830476 32346 net.cpp:124] Setting up relu2
I0426 20:52:57.830503 32346 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:57.830523 32346 net.cpp:139] Memory required for data: 5628160
I0426 20:52:57.830526 32346 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:57.830548 32346 net.cpp:86] Creating Layer ip3
I0426 20:52:57.830550 32346 net.cpp:408] ip3 <- ip2
I0426 20:52:57.830556 32346 net.cpp:382] ip3 -> ip3
I0426 20:52:57.831534 32346 net.cpp:124] Setting up ip3
I0426 20:52:57.831547 32346 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:57.831562 32346 net.cpp:139] Memory required for data: 5630720
I0426 20:52:57.831569 32346 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:57.831575 32346 net.cpp:86] Creating Layer relu3
I0426 20:52:57.831578 32346 net.cpp:408] relu3 <- ip3
I0426 20:52:57.831599 32346 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:57.831789 32346 net.cpp:124] Setting up relu3
I0426 20:52:57.831797 32346 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:57.831801 32346 net.cpp:139] Memory required for data: 5633280
I0426 20:52:57.831804 32346 layer_factory.hpp:77] Creating layer loss
I0426 20:52:57.831809 32346 net.cpp:86] Creating Layer loss
I0426 20:52:57.831812 32346 net.cpp:408] loss <- ip3
I0426 20:52:57.831816 32346 net.cpp:408] loss <- label
I0426 20:52:57.831821 32346 net.cpp:382] loss -> loss
I0426 20:52:57.831840 32346 layer_factory.hpp:77] Creating layer loss
I0426 20:52:57.832053 32346 net.cpp:124] Setting up loss
I0426 20:52:57.832062 32346 net.cpp:131] Top shape: (1)
I0426 20:52:57.832065 32346 net.cpp:134]     with loss weight 1
I0426 20:52:57.832078 32346 net.cpp:139] Memory required for data: 5633284
I0426 20:52:57.832082 32346 net.cpp:200] loss needs backward computation.
I0426 20:52:57.832087 32346 net.cpp:200] relu3 needs backward computation.
I0426 20:52:57.832088 32346 net.cpp:200] ip3 needs backward computation.
I0426 20:52:57.832092 32346 net.cpp:200] relu2 needs backward computation.
I0426 20:52:57.832094 32346 net.cpp:200] ip2 needs backward computation.
I0426 20:52:57.832096 32346 net.cpp:200] relu1 needs backward computation.
I0426 20:52:57.832099 32346 net.cpp:200] ip1 needs backward computation.
I0426 20:52:57.832103 32346 net.cpp:200] pool1 needs backward computation.
I0426 20:52:57.832105 32346 net.cpp:200] conv1 needs backward computation.
I0426 20:52:57.832108 32346 net.cpp:200] pool0 needs backward computation.
I0426 20:52:57.832111 32346 net.cpp:200] conv0 needs backward computation.
I0426 20:52:57.832114 32346 net.cpp:202] mnist does not need backward computation.
I0426 20:52:57.832116 32346 net.cpp:244] This network produces output loss
I0426 20:52:57.832125 32346 net.cpp:257] Network initialization done.
I0426 20:52:57.832504 32346 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test125.prototxt
I0426 20:52:57.832548 32346 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:57.832659 32346 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:57.832751 32346 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:57.832795 32346 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:57.832808 32346 net.cpp:86] Creating Layer mnist
I0426 20:52:57.832818 32346 net.cpp:382] mnist -> data
I0426 20:52:57.832841 32346 net.cpp:382] mnist -> label
I0426 20:52:57.832945 32346 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:57.834271 32346 net.cpp:124] Setting up mnist
I0426 20:52:57.834283 32346 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:57.834288 32346 net.cpp:131] Top shape: 100 (100)
I0426 20:52:57.834291 32346 net.cpp:139] Memory required for data: 314000
I0426 20:52:57.834311 32346 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:57.834321 32346 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:57.834324 32346 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:57.834329 32346 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:57.834336 32346 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:57.834420 32346 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:57.834427 32346 net.cpp:131] Top shape: 100 (100)
I0426 20:52:57.834431 32346 net.cpp:131] Top shape: 100 (100)
I0426 20:52:57.834434 32346 net.cpp:139] Memory required for data: 314800
I0426 20:52:57.834437 32346 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:57.834445 32346 net.cpp:86] Creating Layer conv0
I0426 20:52:57.834448 32346 net.cpp:408] conv0 <- data
I0426 20:52:57.834453 32346 net.cpp:382] conv0 -> conv0
I0426 20:52:57.836117 32346 net.cpp:124] Setting up conv0
I0426 20:52:57.836128 32346 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:57.836143 32346 net.cpp:139] Memory required for data: 6074800
I0426 20:52:57.836151 32346 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:57.836158 32346 net.cpp:86] Creating Layer pool0
I0426 20:52:57.836176 32346 net.cpp:408] pool0 <- conv0
I0426 20:52:57.836181 32346 net.cpp:382] pool0 -> pool0
I0426 20:52:57.836215 32346 net.cpp:124] Setting up pool0
I0426 20:52:57.836222 32346 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:57.836225 32346 net.cpp:139] Memory required for data: 7514800
I0426 20:52:57.836228 32346 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:57.836236 32346 net.cpp:86] Creating Layer conv1
I0426 20:52:57.836239 32346 net.cpp:408] conv1 <- pool0
I0426 20:52:57.836243 32346 net.cpp:382] conv1 -> conv1
I0426 20:52:57.838928 32346 net.cpp:124] Setting up conv1
I0426 20:52:57.838942 32346 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:52:57.838944 32346 net.cpp:139] Memory required for data: 8154800
I0426 20:52:57.838953 32346 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:57.838975 32346 net.cpp:86] Creating Layer pool1
I0426 20:52:57.838979 32346 net.cpp:408] pool1 <- conv1
I0426 20:52:57.838999 32346 net.cpp:382] pool1 -> pool1
I0426 20:52:57.839042 32346 net.cpp:124] Setting up pool1
I0426 20:52:57.839049 32346 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:52:57.839052 32346 net.cpp:139] Memory required for data: 8314800
I0426 20:52:57.839056 32346 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:57.839061 32346 net.cpp:86] Creating Layer ip1
I0426 20:52:57.839066 32346 net.cpp:408] ip1 <- pool1
I0426 20:52:57.839069 32346 net.cpp:382] ip1 -> ip1
I0426 20:52:57.840674 32346 net.cpp:124] Setting up ip1
I0426 20:52:57.840685 32346 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:57.840711 32346 net.cpp:139] Memory required for data: 8434800
I0426 20:52:57.840735 32346 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:57.840741 32346 net.cpp:86] Creating Layer relu1
I0426 20:52:57.840745 32346 net.cpp:408] relu1 <- ip1
I0426 20:52:57.840759 32346 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:57.841060 32346 net.cpp:124] Setting up relu1
I0426 20:52:57.841070 32346 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:57.841074 32346 net.cpp:139] Memory required for data: 8554800
I0426 20:52:57.841078 32346 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:57.841085 32346 net.cpp:86] Creating Layer ip2
I0426 20:52:57.841089 32346 net.cpp:408] ip2 <- ip1
I0426 20:52:57.841094 32346 net.cpp:382] ip2 -> ip2
I0426 20:52:57.841774 32346 net.cpp:124] Setting up ip2
I0426 20:52:57.841784 32346 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:57.841786 32346 net.cpp:139] Memory required for data: 8674800
I0426 20:52:57.841791 32346 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:57.841811 32346 net.cpp:86] Creating Layer relu2
I0426 20:52:57.841814 32346 net.cpp:408] relu2 <- ip2
I0426 20:52:57.841835 32346 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:57.842000 32346 net.cpp:124] Setting up relu2
I0426 20:52:57.842007 32346 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:57.842010 32346 net.cpp:139] Memory required for data: 8794800
I0426 20:52:57.842013 32346 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:57.842022 32346 net.cpp:86] Creating Layer ip3
I0426 20:52:57.842025 32346 net.cpp:408] ip3 <- ip2
I0426 20:52:57.842031 32346 net.cpp:382] ip3 -> ip3
I0426 20:52:57.842211 32346 net.cpp:124] Setting up ip3
I0426 20:52:57.842217 32346 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:57.842221 32346 net.cpp:139] Memory required for data: 8798800
I0426 20:52:57.842233 32346 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:57.842239 32346 net.cpp:86] Creating Layer relu3
I0426 20:52:57.842242 32346 net.cpp:408] relu3 <- ip3
I0426 20:52:57.842247 32346 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:57.843159 32346 net.cpp:124] Setting up relu3
I0426 20:52:57.843171 32346 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:57.843174 32346 net.cpp:139] Memory required for data: 8802800
I0426 20:52:57.843178 32346 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:57.843199 32346 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:57.843202 32346 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:57.843207 32346 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:57.843214 32346 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:57.843266 32346 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:57.843273 32346 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:57.843276 32346 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:57.843279 32346 net.cpp:139] Memory required for data: 8810800
I0426 20:52:57.843281 32346 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:57.843286 32346 net.cpp:86] Creating Layer accuracy
I0426 20:52:57.843291 32346 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:57.843294 32346 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:57.843298 32346 net.cpp:382] accuracy -> accuracy
I0426 20:52:57.843304 32346 net.cpp:124] Setting up accuracy
I0426 20:52:57.843308 32346 net.cpp:131] Top shape: (1)
I0426 20:52:57.843312 32346 net.cpp:139] Memory required for data: 8810804
I0426 20:52:57.843313 32346 layer_factory.hpp:77] Creating layer loss
I0426 20:52:57.843317 32346 net.cpp:86] Creating Layer loss
I0426 20:52:57.843320 32346 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:57.843323 32346 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:57.843328 32346 net.cpp:382] loss -> loss
I0426 20:52:57.843333 32346 layer_factory.hpp:77] Creating layer loss
I0426 20:52:57.843575 32346 net.cpp:124] Setting up loss
I0426 20:52:57.843585 32346 net.cpp:131] Top shape: (1)
I0426 20:52:57.843587 32346 net.cpp:134]     with loss weight 1
I0426 20:52:57.843602 32346 net.cpp:139] Memory required for data: 8810808
I0426 20:52:57.843605 32346 net.cpp:200] loss needs backward computation.
I0426 20:52:57.843610 32346 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:57.843613 32346 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:57.843616 32346 net.cpp:200] relu3 needs backward computation.
I0426 20:52:57.843618 32346 net.cpp:200] ip3 needs backward computation.
I0426 20:52:57.843621 32346 net.cpp:200] relu2 needs backward computation.
I0426 20:52:57.843623 32346 net.cpp:200] ip2 needs backward computation.
I0426 20:52:57.843626 32346 net.cpp:200] relu1 needs backward computation.
I0426 20:52:57.843628 32346 net.cpp:200] ip1 needs backward computation.
I0426 20:52:57.843631 32346 net.cpp:200] pool1 needs backward computation.
I0426 20:52:57.843634 32346 net.cpp:200] conv1 needs backward computation.
I0426 20:52:57.843636 32346 net.cpp:200] pool0 needs backward computation.
I0426 20:52:57.843639 32346 net.cpp:200] conv0 needs backward computation.
I0426 20:52:57.843643 32346 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:57.843647 32346 net.cpp:202] mnist does not need backward computation.
I0426 20:52:57.843649 32346 net.cpp:244] This network produces output accuracy
I0426 20:52:57.843652 32346 net.cpp:244] This network produces output loss
I0426 20:52:57.843663 32346 net.cpp:257] Network initialization done.
I0426 20:52:57.843717 32346 solver.cpp:56] Solver scaffolding done.
I0426 20:52:57.844053 32346 caffe.cpp:248] Starting Optimization
I0426 20:52:57.844074 32346 solver.cpp:273] Solving LeNet
I0426 20:52:57.844076 32346 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:57.845074 32346 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:57.851613 32346 blocking_queue.cpp:49] Waiting for data
I0426 20:52:57.923666 32353 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:57.924363 32346 solver.cpp:398]     Test net output #0: accuracy = 0.1111
I0426 20:52:57.924396 32346 solver.cpp:398]     Test net output #1: loss = 2.30122 (* 1 = 2.30122 loss)
I0426 20:52:57.928225 32346 solver.cpp:219] Iteration 0 (0 iter/s, 0.0841247s/100 iters), loss = 2.31155
I0426 20:52:57.928248 32346 solver.cpp:238]     Train net output #0: loss = 2.31155 (* 1 = 2.31155 loss)
I0426 20:52:57.928259 32346 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:58.044680 32346 solver.cpp:219] Iteration 100 (858.97 iter/s, 0.116419s/100 iters), loss = 1.05765
I0426 20:52:58.044734 32346 solver.cpp:238]     Train net output #0: loss = 1.05765 (* 1 = 1.05765 loss)
I0426 20:52:58.044741 32346 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:58.160233 32346 solver.cpp:219] Iteration 200 (865.785 iter/s, 0.115502s/100 iters), loss = 0.779127
I0426 20:52:58.160271 32346 solver.cpp:238]     Train net output #0: loss = 0.779127 (* 1 = 0.779127 loss)
I0426 20:52:58.160277 32346 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:58.275326 32346 solver.cpp:219] Iteration 300 (869.107 iter/s, 0.115061s/100 iters), loss = 0.6155
I0426 20:52:58.275364 32346 solver.cpp:238]     Train net output #0: loss = 0.6155 (* 1 = 0.6155 loss)
I0426 20:52:58.275369 32346 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:58.390672 32346 solver.cpp:219] Iteration 400 (867.208 iter/s, 0.115313s/100 iters), loss = 0.60966
I0426 20:52:58.390712 32346 solver.cpp:238]     Train net output #0: loss = 0.60966 (* 1 = 0.60966 loss)
I0426 20:52:58.390717 32346 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:58.504333 32346 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:58.564527 32353 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:58.566678 32346 solver.cpp:398]     Test net output #0: accuracy = 0.8677
I0426 20:52:58.566711 32346 solver.cpp:398]     Test net output #1: loss = 0.349497 (* 1 = 0.349497 loss)
I0426 20:52:58.567797 32346 solver.cpp:219] Iteration 500 (564.693 iter/s, 0.177088s/100 iters), loss = 0.445624
I0426 20:52:58.567848 32346 solver.cpp:238]     Train net output #0: loss = 0.445624 (* 1 = 0.445624 loss)
I0426 20:52:58.567854 32346 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:58.683385 32346 solver.cpp:219] Iteration 600 (865.478 iter/s, 0.115543s/100 iters), loss = 0.168902
I0426 20:52:58.683425 32346 solver.cpp:238]     Train net output #0: loss = 0.168902 (* 1 = 0.168902 loss)
I0426 20:52:58.683431 32346 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:58.798895 32346 solver.cpp:219] Iteration 700 (865.993 iter/s, 0.115474s/100 iters), loss = 0.247769
I0426 20:52:58.798936 32346 solver.cpp:238]     Train net output #0: loss = 0.247769 (* 1 = 0.247769 loss)
I0426 20:52:58.798959 32346 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:58.917996 32346 solver.cpp:219] Iteration 800 (839.88 iter/s, 0.119065s/100 iters), loss = 0.382335
I0426 20:52:58.918035 32346 solver.cpp:238]     Train net output #0: loss = 0.382335 (* 1 = 0.382335 loss)
I0426 20:52:58.918041 32346 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:59.036613 32346 solver.cpp:219] Iteration 900 (843.333 iter/s, 0.118577s/100 iters), loss = 0.225296
I0426 20:52:59.036653 32346 solver.cpp:238]     Train net output #0: loss = 0.225296 (* 1 = 0.225296 loss)
I0426 20:52:59.036659 32346 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:59.075920 32352 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:59.153677 32346 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:59.158888 32346 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:59.161162 32346 solver.cpp:311] Iteration 1000, loss = 0.06811
I0426 20:52:59.161180 32346 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:59.222594 32353 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:59.224695 32346 solver.cpp:398]     Test net output #0: accuracy = 0.975
I0426 20:52:59.224714 32346 solver.cpp:398]     Test net output #1: loss = 0.0728384 (* 1 = 0.0728384 loss)
I0426 20:52:59.224728 32346 solver.cpp:316] Optimization Done.
I0426 20:52:59.224730 32346 caffe.cpp:259] Optimization Done.
