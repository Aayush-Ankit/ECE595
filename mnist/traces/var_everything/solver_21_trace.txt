I0426 20:48:54.431977 31401 caffe.cpp:218] Using GPUs 0
I0426 20:48:54.469712 31401 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:54.981534 31401 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test21.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:54.981686 31401 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test21.prototxt
I0426 20:48:54.982059 31401 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:54.982076 31401 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:54.982168 31401 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:54.982265 31401 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:54.982360 31401 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:54.982383 31401 net.cpp:86] Creating Layer mnist
I0426 20:48:54.982390 31401 net.cpp:382] mnist -> data
I0426 20:48:54.982414 31401 net.cpp:382] mnist -> label
I0426 20:48:54.983525 31401 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:54.986081 31401 net.cpp:124] Setting up mnist
I0426 20:48:54.986099 31401 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:54.986105 31401 net.cpp:131] Top shape: 64 (64)
I0426 20:48:54.986109 31401 net.cpp:139] Memory required for data: 200960
I0426 20:48:54.986115 31401 layer_factory.hpp:77] Creating layer conv0
I0426 20:48:54.986141 31401 net.cpp:86] Creating Layer conv0
I0426 20:48:54.986148 31401 net.cpp:408] conv0 <- data
I0426 20:48:54.986160 31401 net.cpp:382] conv0 -> conv0
I0426 20:48:55.229336 31401 net.cpp:124] Setting up conv0
I0426 20:48:55.229362 31401 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:48:55.229365 31401 net.cpp:139] Memory required for data: 1675520
I0426 20:48:55.229380 31401 layer_factory.hpp:77] Creating layer pool0
I0426 20:48:55.229393 31401 net.cpp:86] Creating Layer pool0
I0426 20:48:55.229429 31401 net.cpp:408] pool0 <- conv0
I0426 20:48:55.229436 31401 net.cpp:382] pool0 -> pool0
I0426 20:48:55.229485 31401 net.cpp:124] Setting up pool0
I0426 20:48:55.229495 31401 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:48:55.229497 31401 net.cpp:139] Memory required for data: 2044160
I0426 20:48:55.229501 31401 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:55.229507 31401 net.cpp:86] Creating Layer ip1
I0426 20:48:55.229514 31401 net.cpp:408] ip1 <- pool0
I0426 20:48:55.229519 31401 net.cpp:382] ip1 -> ip1
I0426 20:48:55.231197 31401 net.cpp:124] Setting up ip1
I0426 20:48:55.231209 31401 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:55.231212 31401 net.cpp:139] Memory required for data: 2069760
I0426 20:48:55.231220 31401 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:55.231226 31401 net.cpp:86] Creating Layer relu1
I0426 20:48:55.231230 31401 net.cpp:408] relu1 <- ip1
I0426 20:48:55.231233 31401 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:55.231448 31401 net.cpp:124] Setting up relu1
I0426 20:48:55.231457 31401 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:55.231461 31401 net.cpp:139] Memory required for data: 2095360
I0426 20:48:55.231463 31401 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:55.231469 31401 net.cpp:86] Creating Layer ip2
I0426 20:48:55.231472 31401 net.cpp:408] ip2 <- ip1
I0426 20:48:55.231478 31401 net.cpp:382] ip2 -> ip2
I0426 20:48:55.232673 31401 net.cpp:124] Setting up ip2
I0426 20:48:55.232686 31401 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:55.232687 31401 net.cpp:139] Memory required for data: 2120960
I0426 20:48:55.232695 31401 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:55.232702 31401 net.cpp:86] Creating Layer relu2
I0426 20:48:55.232704 31401 net.cpp:408] relu2 <- ip2
I0426 20:48:55.232724 31401 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:55.233623 31401 net.cpp:124] Setting up relu2
I0426 20:48:55.233633 31401 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:55.233638 31401 net.cpp:139] Memory required for data: 2146560
I0426 20:48:55.233655 31401 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:55.233664 31401 net.cpp:86] Creating Layer ip3
I0426 20:48:55.233669 31401 net.cpp:408] ip3 <- ip2
I0426 20:48:55.233675 31401 net.cpp:382] ip3 -> ip3
I0426 20:48:55.233803 31401 net.cpp:124] Setting up ip3
I0426 20:48:55.233808 31401 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:55.233811 31401 net.cpp:139] Memory required for data: 2149120
I0426 20:48:55.233816 31401 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:55.233825 31401 net.cpp:86] Creating Layer relu3
I0426 20:48:55.233829 31401 net.cpp:408] relu3 <- ip3
I0426 20:48:55.233834 31401 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:55.233988 31401 net.cpp:124] Setting up relu3
I0426 20:48:55.233995 31401 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:55.233999 31401 net.cpp:139] Memory required for data: 2151680
I0426 20:48:55.234001 31401 layer_factory.hpp:77] Creating layer loss
I0426 20:48:55.234007 31401 net.cpp:86] Creating Layer loss
I0426 20:48:55.234010 31401 net.cpp:408] loss <- ip3
I0426 20:48:55.234014 31401 net.cpp:408] loss <- label
I0426 20:48:55.234019 31401 net.cpp:382] loss -> loss
I0426 20:48:55.234036 31401 layer_factory.hpp:77] Creating layer loss
I0426 20:48:55.234289 31401 net.cpp:124] Setting up loss
I0426 20:48:55.234299 31401 net.cpp:131] Top shape: (1)
I0426 20:48:55.234302 31401 net.cpp:134]     with loss weight 1
I0426 20:48:55.234318 31401 net.cpp:139] Memory required for data: 2151684
I0426 20:48:55.234320 31401 net.cpp:200] loss needs backward computation.
I0426 20:48:55.234323 31401 net.cpp:200] relu3 needs backward computation.
I0426 20:48:55.234326 31401 net.cpp:200] ip3 needs backward computation.
I0426 20:48:55.234329 31401 net.cpp:200] relu2 needs backward computation.
I0426 20:48:55.234333 31401 net.cpp:200] ip2 needs backward computation.
I0426 20:48:55.234335 31401 net.cpp:200] relu1 needs backward computation.
I0426 20:48:55.234338 31401 net.cpp:200] ip1 needs backward computation.
I0426 20:48:55.234350 31401 net.cpp:200] pool0 needs backward computation.
I0426 20:48:55.234354 31401 net.cpp:200] conv0 needs backward computation.
I0426 20:48:55.234357 31401 net.cpp:202] mnist does not need backward computation.
I0426 20:48:55.234360 31401 net.cpp:244] This network produces output loss
I0426 20:48:55.234369 31401 net.cpp:257] Network initialization done.
I0426 20:48:55.234673 31401 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test21.prototxt
I0426 20:48:55.234712 31401 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:55.234793 31401 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:55.234860 31401 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:55.234904 31401 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:55.234915 31401 net.cpp:86] Creating Layer mnist
I0426 20:48:55.234920 31401 net.cpp:382] mnist -> data
I0426 20:48:55.234927 31401 net.cpp:382] mnist -> label
I0426 20:48:55.235015 31401 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:55.236205 31401 net.cpp:124] Setting up mnist
I0426 20:48:55.236217 31401 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:55.236222 31401 net.cpp:131] Top shape: 100 (100)
I0426 20:48:55.236240 31401 net.cpp:139] Memory required for data: 314000
I0426 20:48:55.236244 31401 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:55.236255 31401 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:55.236258 31401 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:55.236264 31401 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:55.236270 31401 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:55.236407 31401 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:55.236415 31401 net.cpp:131] Top shape: 100 (100)
I0426 20:48:55.236418 31401 net.cpp:131] Top shape: 100 (100)
I0426 20:48:55.236421 31401 net.cpp:139] Memory required for data: 314800
I0426 20:48:55.236433 31401 layer_factory.hpp:77] Creating layer conv0
I0426 20:48:55.236443 31401 net.cpp:86] Creating Layer conv0
I0426 20:48:55.236446 31401 net.cpp:408] conv0 <- data
I0426 20:48:55.236452 31401 net.cpp:382] conv0 -> conv0
I0426 20:48:55.238065 31401 net.cpp:124] Setting up conv0
I0426 20:48:55.238078 31401 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:48:55.238082 31401 net.cpp:139] Memory required for data: 2618800
I0426 20:48:55.238106 31401 layer_factory.hpp:77] Creating layer pool0
I0426 20:48:55.238112 31401 net.cpp:86] Creating Layer pool0
I0426 20:48:55.238116 31401 net.cpp:408] pool0 <- conv0
I0426 20:48:55.238121 31401 net.cpp:382] pool0 -> pool0
I0426 20:48:55.238170 31401 net.cpp:124] Setting up pool0
I0426 20:48:55.238178 31401 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:48:55.238179 31401 net.cpp:139] Memory required for data: 3194800
I0426 20:48:55.238183 31401 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:55.238190 31401 net.cpp:86] Creating Layer ip1
I0426 20:48:55.238193 31401 net.cpp:408] ip1 <- pool0
I0426 20:48:55.238199 31401 net.cpp:382] ip1 -> ip1
I0426 20:48:55.239862 31401 net.cpp:124] Setting up ip1
I0426 20:48:55.239873 31401 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:55.239876 31401 net.cpp:139] Memory required for data: 3234800
I0426 20:48:55.239898 31401 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:55.239904 31401 net.cpp:86] Creating Layer relu1
I0426 20:48:55.239907 31401 net.cpp:408] relu1 <- ip1
I0426 20:48:55.239912 31401 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:55.240114 31401 net.cpp:124] Setting up relu1
I0426 20:48:55.240123 31401 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:55.240126 31401 net.cpp:139] Memory required for data: 3274800
I0426 20:48:55.240129 31401 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:55.240136 31401 net.cpp:86] Creating Layer ip2
I0426 20:48:55.240139 31401 net.cpp:408] ip2 <- ip1
I0426 20:48:55.240145 31401 net.cpp:382] ip2 -> ip2
I0426 20:48:55.240309 31401 net.cpp:124] Setting up ip2
I0426 20:48:55.240316 31401 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:55.240319 31401 net.cpp:139] Memory required for data: 3314800
I0426 20:48:55.240327 31401 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:55.240332 31401 net.cpp:86] Creating Layer relu2
I0426 20:48:55.240335 31401 net.cpp:408] relu2 <- ip2
I0426 20:48:55.240340 31401 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:55.241225 31401 net.cpp:124] Setting up relu2
I0426 20:48:55.241252 31401 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:55.241255 31401 net.cpp:139] Memory required for data: 3354800
I0426 20:48:55.241258 31401 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:55.241281 31401 net.cpp:86] Creating Layer ip3
I0426 20:48:55.241288 31401 net.cpp:408] ip3 <- ip2
I0426 20:48:55.241293 31401 net.cpp:382] ip3 -> ip3
I0426 20:48:55.241410 31401 net.cpp:124] Setting up ip3
I0426 20:48:55.241416 31401 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:55.241420 31401 net.cpp:139] Memory required for data: 3358800
I0426 20:48:55.241425 31401 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:55.241430 31401 net.cpp:86] Creating Layer relu3
I0426 20:48:55.241432 31401 net.cpp:408] relu3 <- ip3
I0426 20:48:55.241436 31401 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:55.241588 31401 net.cpp:124] Setting up relu3
I0426 20:48:55.241596 31401 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:55.241600 31401 net.cpp:139] Memory required for data: 3362800
I0426 20:48:55.241602 31401 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:48:55.241607 31401 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:48:55.241611 31401 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:48:55.241614 31401 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:48:55.241621 31401 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:48:55.241655 31401 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:48:55.241662 31401 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:55.241677 31401 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:55.241679 31401 net.cpp:139] Memory required for data: 3370800
I0426 20:48:55.241683 31401 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:55.241686 31401 net.cpp:86] Creating Layer accuracy
I0426 20:48:55.241689 31401 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:48:55.241693 31401 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:55.241698 31401 net.cpp:382] accuracy -> accuracy
I0426 20:48:55.241705 31401 net.cpp:124] Setting up accuracy
I0426 20:48:55.241709 31401 net.cpp:131] Top shape: (1)
I0426 20:48:55.241713 31401 net.cpp:139] Memory required for data: 3370804
I0426 20:48:55.241714 31401 layer_factory.hpp:77] Creating layer loss
I0426 20:48:55.241719 31401 net.cpp:86] Creating Layer loss
I0426 20:48:55.241721 31401 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:48:55.241725 31401 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:55.241729 31401 net.cpp:382] loss -> loss
I0426 20:48:55.241735 31401 layer_factory.hpp:77] Creating layer loss
I0426 20:48:55.241981 31401 net.cpp:124] Setting up loss
I0426 20:48:55.241991 31401 net.cpp:131] Top shape: (1)
I0426 20:48:55.241993 31401 net.cpp:134]     with loss weight 1
I0426 20:48:55.241999 31401 net.cpp:139] Memory required for data: 3370808
I0426 20:48:55.242002 31401 net.cpp:200] loss needs backward computation.
I0426 20:48:55.242007 31401 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:55.242009 31401 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:48:55.242012 31401 net.cpp:200] relu3 needs backward computation.
I0426 20:48:55.242015 31401 net.cpp:200] ip3 needs backward computation.
I0426 20:48:55.242018 31401 net.cpp:200] relu2 needs backward computation.
I0426 20:48:55.242022 31401 net.cpp:200] ip2 needs backward computation.
I0426 20:48:55.242023 31401 net.cpp:200] relu1 needs backward computation.
I0426 20:48:55.242027 31401 net.cpp:200] ip1 needs backward computation.
I0426 20:48:55.242029 31401 net.cpp:200] pool0 needs backward computation.
I0426 20:48:55.242033 31401 net.cpp:200] conv0 needs backward computation.
I0426 20:48:55.242036 31401 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:55.242039 31401 net.cpp:202] mnist does not need backward computation.
I0426 20:48:55.242043 31401 net.cpp:244] This network produces output accuracy
I0426 20:48:55.242045 31401 net.cpp:244] This network produces output loss
I0426 20:48:55.242055 31401 net.cpp:257] Network initialization done.
I0426 20:48:55.242090 31401 solver.cpp:56] Solver scaffolding done.
I0426 20:48:55.242352 31401 caffe.cpp:248] Starting Optimization
I0426 20:48:55.242357 31401 solver.cpp:273] Solving LeNet
I0426 20:48:55.242360 31401 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:55.243142 31401 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:55.246923 31401 blocking_queue.cpp:49] Waiting for data
I0426 20:48:55.290982 31410 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:55.291538 31401 solver.cpp:398]     Test net output #0: accuracy = 0.0932
I0426 20:48:55.291560 31401 solver.cpp:398]     Test net output #1: loss = 2.31402 (* 1 = 2.31402 loss)
I0426 20:48:55.294888 31401 solver.cpp:219] Iteration 0 (-5.18217e-31 iter/s, 0.0524871s/100 iters), loss = 2.31251
I0426 20:48:55.294914 31401 solver.cpp:238]     Train net output #0: loss = 2.31251 (* 1 = 2.31251 loss)
I0426 20:48:55.294945 31401 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:55.367486 31401 solver.cpp:219] Iteration 100 (1378.16 iter/s, 0.0725606s/100 iters), loss = 0.922769
I0426 20:48:55.367508 31401 solver.cpp:238]     Train net output #0: loss = 0.922769 (* 1 = 0.922769 loss)
I0426 20:48:55.367513 31401 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:55.440059 31401 solver.cpp:219] Iteration 200 (1378.51 iter/s, 0.0725422s/100 iters), loss = 0.981525
I0426 20:48:55.440083 31401 solver.cpp:238]     Train net output #0: loss = 0.981525 (* 1 = 0.981525 loss)
I0426 20:48:55.440089 31401 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:55.512483 31401 solver.cpp:219] Iteration 300 (1381.37 iter/s, 0.0723917s/100 iters), loss = 0.667597
I0426 20:48:55.512506 31401 solver.cpp:238]     Train net output #0: loss = 0.667597 (* 1 = 0.667597 loss)
I0426 20:48:55.512512 31401 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:55.584117 31401 solver.cpp:219] Iteration 400 (1396.59 iter/s, 0.0716031s/100 iters), loss = 0.885157
I0426 20:48:55.584139 31401 solver.cpp:238]     Train net output #0: loss = 0.885157 (* 1 = 0.885157 loss)
I0426 20:48:55.584146 31401 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:55.655122 31401 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:55.700166 31410 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:55.700758 31401 solver.cpp:398]     Test net output #0: accuracy = 0.8043
I0426 20:48:55.700775 31401 solver.cpp:398]     Test net output #1: loss = 0.66254 (* 1 = 0.66254 loss)
I0426 20:48:55.701556 31401 solver.cpp:219] Iteration 500 (851.748 iter/s, 0.117406s/100 iters), loss = 0.708597
I0426 20:48:55.701637 31401 solver.cpp:238]     Train net output #0: loss = 0.708597 (* 1 = 0.708597 loss)
I0426 20:48:55.701644 31401 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:55.783160 31401 solver.cpp:219] Iteration 600 (1226.74 iter/s, 0.0815167s/100 iters), loss = 0.623351
I0426 20:48:55.783200 31401 solver.cpp:238]     Train net output #0: loss = 0.623351 (* 1 = 0.623351 loss)
I0426 20:48:55.783205 31401 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:55.863253 31401 solver.cpp:219] Iteration 700 (1249.04 iter/s, 0.0800614s/100 iters), loss = 0.697434
I0426 20:48:55.863276 31401 solver.cpp:238]     Train net output #0: loss = 0.697434 (* 1 = 0.697434 loss)
I0426 20:48:55.863281 31401 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:55.937958 31401 solver.cpp:219] Iteration 800 (1339.17 iter/s, 0.0746731s/100 iters), loss = 0.678339
I0426 20:48:55.937996 31401 solver.cpp:238]     Train net output #0: loss = 0.678339 (* 1 = 0.678339 loss)
I0426 20:48:55.938001 31401 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:56.011659 31401 solver.cpp:219] Iteration 900 (1357.37 iter/s, 0.0736717s/100 iters), loss = 0.259848
I0426 20:48:56.011682 31401 solver.cpp:238]     Train net output #0: loss = 0.259848 (* 1 = 0.259848 loss)
I0426 20:48:56.011687 31401 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:56.036219 31408 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:56.084399 31401 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:56.087946 31401 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:56.089505 31401 solver.cpp:311] Iteration 1000, loss = 0.323233
I0426 20:48:56.089519 31401 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:56.161888 31410 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:56.162467 31401 solver.cpp:398]     Test net output #0: accuracy = 0.8692
I0426 20:48:56.162487 31401 solver.cpp:398]     Test net output #1: loss = 0.342969 (* 1 = 0.342969 loss)
I0426 20:48:56.162492 31401 solver.cpp:316] Optimization Done.
I0426 20:48:56.162494 31401 caffe.cpp:259] Optimization Done.
