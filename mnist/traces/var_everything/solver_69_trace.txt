I0426 20:50:45.938029 31828 caffe.cpp:218] Using GPUs 0
I0426 20:50:45.967047 31828 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:46.421991 31828 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test69.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:46.422474 31828 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test69.prototxt
I0426 20:50:46.422844 31828 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:46.422873 31828 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:46.422966 31828 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:46.423025 31828 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:46.423105 31828 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:46.423141 31828 net.cpp:86] Creating Layer mnist
I0426 20:50:46.423147 31828 net.cpp:382] mnist -> data
I0426 20:50:46.423166 31828 net.cpp:382] mnist -> label
I0426 20:50:46.424095 31828 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:46.426404 31828 net.cpp:124] Setting up mnist
I0426 20:50:46.426450 31828 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:46.426455 31828 net.cpp:131] Top shape: 64 (64)
I0426 20:50:46.426458 31828 net.cpp:139] Memory required for data: 200960
I0426 20:50:46.426465 31828 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:46.426492 31828 net.cpp:86] Creating Layer conv0
I0426 20:50:46.426511 31828 net.cpp:408] conv0 <- data
I0426 20:50:46.426520 31828 net.cpp:382] conv0 -> conv0
I0426 20:50:46.662180 31828 net.cpp:124] Setting up conv0
I0426 20:50:46.662223 31828 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:46.662227 31828 net.cpp:139] Memory required for data: 1675520
I0426 20:50:46.662242 31828 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:46.662256 31828 net.cpp:86] Creating Layer pool0
I0426 20:50:46.662259 31828 net.cpp:408] pool0 <- conv0
I0426 20:50:46.662264 31828 net.cpp:382] pool0 -> pool0
I0426 20:50:46.662330 31828 net.cpp:124] Setting up pool0
I0426 20:50:46.662348 31828 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:46.662350 31828 net.cpp:139] Memory required for data: 2044160
I0426 20:50:46.662353 31828 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:46.662365 31828 net.cpp:86] Creating Layer conv1
I0426 20:50:46.662369 31828 net.cpp:408] conv1 <- pool0
I0426 20:50:46.662384 31828 net.cpp:382] conv1 -> conv1
I0426 20:50:46.665153 31828 net.cpp:124] Setting up conv1
I0426 20:50:46.665166 31828 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:46.665170 31828 net.cpp:139] Memory required for data: 2208000
I0426 20:50:46.665179 31828 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:46.665186 31828 net.cpp:86] Creating Layer pool1
I0426 20:50:46.665189 31828 net.cpp:408] pool1 <- conv1
I0426 20:50:46.665194 31828 net.cpp:382] pool1 -> pool1
I0426 20:50:46.665247 31828 net.cpp:124] Setting up pool1
I0426 20:50:46.665253 31828 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:46.665256 31828 net.cpp:139] Memory required for data: 2248960
I0426 20:50:46.665259 31828 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:46.665271 31828 net.cpp:86] Creating Layer ip1
I0426 20:50:46.665273 31828 net.cpp:408] ip1 <- pool1
I0426 20:50:46.665278 31828 net.cpp:382] ip1 -> ip1
I0426 20:50:46.665668 31828 net.cpp:124] Setting up ip1
I0426 20:50:46.665675 31828 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:46.665694 31828 net.cpp:139] Memory required for data: 2325760
I0426 20:50:46.665717 31828 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:46.665741 31828 net.cpp:86] Creating Layer relu1
I0426 20:50:46.665746 31828 net.cpp:408] relu1 <- ip1
I0426 20:50:46.665766 31828 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:46.665958 31828 net.cpp:124] Setting up relu1
I0426 20:50:46.665967 31828 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:46.665971 31828 net.cpp:139] Memory required for data: 2402560
I0426 20:50:46.665976 31828 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:46.665982 31828 net.cpp:86] Creating Layer ip2
I0426 20:50:46.665985 31828 net.cpp:408] ip2 <- ip1
I0426 20:50:46.665992 31828 net.cpp:382] ip2 -> ip2
I0426 20:50:46.667486 31828 net.cpp:124] Setting up ip2
I0426 20:50:46.667497 31828 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:46.667500 31828 net.cpp:139] Memory required for data: 2479360
I0426 20:50:46.667506 31828 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:46.667512 31828 net.cpp:86] Creating Layer relu2
I0426 20:50:46.667515 31828 net.cpp:408] relu2 <- ip2
I0426 20:50:46.667520 31828 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:46.668373 31828 net.cpp:124] Setting up relu2
I0426 20:50:46.668385 31828 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:46.668388 31828 net.cpp:139] Memory required for data: 2556160
I0426 20:50:46.668391 31828 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:46.668400 31828 net.cpp:86] Creating Layer ip3
I0426 20:50:46.668402 31828 net.cpp:408] ip3 <- ip2
I0426 20:50:46.668407 31828 net.cpp:382] ip3 -> ip3
I0426 20:50:46.668543 31828 net.cpp:124] Setting up ip3
I0426 20:50:46.668551 31828 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:46.668555 31828 net.cpp:139] Memory required for data: 2558720
I0426 20:50:46.668561 31828 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:46.668566 31828 net.cpp:86] Creating Layer relu3
I0426 20:50:46.668570 31828 net.cpp:408] relu3 <- ip3
I0426 20:50:46.668575 31828 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:46.668740 31828 net.cpp:124] Setting up relu3
I0426 20:50:46.668748 31828 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:46.668751 31828 net.cpp:139] Memory required for data: 2561280
I0426 20:50:46.668754 31828 layer_factory.hpp:77] Creating layer loss
I0426 20:50:46.668761 31828 net.cpp:86] Creating Layer loss
I0426 20:50:46.668763 31828 net.cpp:408] loss <- ip3
I0426 20:50:46.668767 31828 net.cpp:408] loss <- label
I0426 20:50:46.668772 31828 net.cpp:382] loss -> loss
I0426 20:50:46.668790 31828 layer_factory.hpp:77] Creating layer loss
I0426 20:50:46.669126 31828 net.cpp:124] Setting up loss
I0426 20:50:46.669136 31828 net.cpp:131] Top shape: (1)
I0426 20:50:46.669138 31828 net.cpp:134]     with loss weight 1
I0426 20:50:46.669154 31828 net.cpp:139] Memory required for data: 2561284
I0426 20:50:46.669157 31828 net.cpp:200] loss needs backward computation.
I0426 20:50:46.669162 31828 net.cpp:200] relu3 needs backward computation.
I0426 20:50:46.669165 31828 net.cpp:200] ip3 needs backward computation.
I0426 20:50:46.669183 31828 net.cpp:200] relu2 needs backward computation.
I0426 20:50:46.669185 31828 net.cpp:200] ip2 needs backward computation.
I0426 20:50:46.669188 31828 net.cpp:200] relu1 needs backward computation.
I0426 20:50:46.669191 31828 net.cpp:200] ip1 needs backward computation.
I0426 20:50:46.669195 31828 net.cpp:200] pool1 needs backward computation.
I0426 20:50:46.669198 31828 net.cpp:200] conv1 needs backward computation.
I0426 20:50:46.669201 31828 net.cpp:200] pool0 needs backward computation.
I0426 20:50:46.669204 31828 net.cpp:200] conv0 needs backward computation.
I0426 20:50:46.669208 31828 net.cpp:202] mnist does not need backward computation.
I0426 20:50:46.669210 31828 net.cpp:244] This network produces output loss
I0426 20:50:46.669220 31828 net.cpp:257] Network initialization done.
I0426 20:50:46.669565 31828 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test69.prototxt
I0426 20:50:46.669607 31828 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:46.669704 31828 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:46.669786 31828 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:46.669829 31828 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:46.669842 31828 net.cpp:86] Creating Layer mnist
I0426 20:50:46.669847 31828 net.cpp:382] mnist -> data
I0426 20:50:46.669855 31828 net.cpp:382] mnist -> label
I0426 20:50:46.669941 31828 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:46.671118 31828 net.cpp:124] Setting up mnist
I0426 20:50:46.671147 31828 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:46.671152 31828 net.cpp:131] Top shape: 100 (100)
I0426 20:50:46.671170 31828 net.cpp:139] Memory required for data: 314000
I0426 20:50:46.671175 31828 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:46.671200 31828 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:46.671205 31828 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:46.671212 31828 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:46.671219 31828 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:46.671306 31828 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:46.671315 31828 net.cpp:131] Top shape: 100 (100)
I0426 20:50:46.671319 31828 net.cpp:131] Top shape: 100 (100)
I0426 20:50:46.671322 31828 net.cpp:139] Memory required for data: 314800
I0426 20:50:46.671325 31828 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:46.671335 31828 net.cpp:86] Creating Layer conv0
I0426 20:50:46.671339 31828 net.cpp:408] conv0 <- data
I0426 20:50:46.671344 31828 net.cpp:382] conv0 -> conv0
I0426 20:50:46.672999 31828 net.cpp:124] Setting up conv0
I0426 20:50:46.673012 31828 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:46.673027 31828 net.cpp:139] Memory required for data: 2618800
I0426 20:50:46.673036 31828 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:46.673043 31828 net.cpp:86] Creating Layer pool0
I0426 20:50:46.673060 31828 net.cpp:408] pool0 <- conv0
I0426 20:50:46.673066 31828 net.cpp:382] pool0 -> pool0
I0426 20:50:46.673104 31828 net.cpp:124] Setting up pool0
I0426 20:50:46.673110 31828 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:46.673113 31828 net.cpp:139] Memory required for data: 3194800
I0426 20:50:46.673116 31828 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:46.673126 31828 net.cpp:86] Creating Layer conv1
I0426 20:50:46.673130 31828 net.cpp:408] conv1 <- pool0
I0426 20:50:46.673135 31828 net.cpp:382] conv1 -> conv1
I0426 20:50:46.675545 31828 net.cpp:124] Setting up conv1
I0426 20:50:46.675559 31828 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:46.675575 31828 net.cpp:139] Memory required for data: 3450800
I0426 20:50:46.675601 31828 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:46.675623 31828 net.cpp:86] Creating Layer pool1
I0426 20:50:46.675627 31828 net.cpp:408] pool1 <- conv1
I0426 20:50:46.675632 31828 net.cpp:382] pool1 -> pool1
I0426 20:50:46.675673 31828 net.cpp:124] Setting up pool1
I0426 20:50:46.675681 31828 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:46.675684 31828 net.cpp:139] Memory required for data: 3514800
I0426 20:50:46.675688 31828 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:46.675694 31828 net.cpp:86] Creating Layer ip1
I0426 20:50:46.675698 31828 net.cpp:408] ip1 <- pool1
I0426 20:50:46.675703 31828 net.cpp:382] ip1 -> ip1
I0426 20:50:46.676136 31828 net.cpp:124] Setting up ip1
I0426 20:50:46.676143 31828 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:46.676172 31828 net.cpp:139] Memory required for data: 3634800
I0426 20:50:46.676182 31828 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:46.676187 31828 net.cpp:86] Creating Layer relu1
I0426 20:50:46.676190 31828 net.cpp:408] relu1 <- ip1
I0426 20:50:46.676198 31828 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:46.676373 31828 net.cpp:124] Setting up relu1
I0426 20:50:46.676383 31828 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:46.676386 31828 net.cpp:139] Memory required for data: 3754800
I0426 20:50:46.676389 31828 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:46.676398 31828 net.cpp:86] Creating Layer ip2
I0426 20:50:46.676403 31828 net.cpp:408] ip2 <- ip1
I0426 20:50:46.676407 31828 net.cpp:382] ip2 -> ip2
I0426 20:50:46.677130 31828 net.cpp:124] Setting up ip2
I0426 20:50:46.677140 31828 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:46.677144 31828 net.cpp:139] Memory required for data: 3874800
I0426 20:50:46.677165 31828 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:46.677209 31828 net.cpp:86] Creating Layer relu2
I0426 20:50:46.677214 31828 net.cpp:408] relu2 <- ip2
I0426 20:50:46.677218 31828 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:46.677381 31828 net.cpp:124] Setting up relu2
I0426 20:50:46.677390 31828 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:46.677394 31828 net.cpp:139] Memory required for data: 3994800
I0426 20:50:46.677397 31828 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:46.677404 31828 net.cpp:86] Creating Layer ip3
I0426 20:50:46.677407 31828 net.cpp:408] ip3 <- ip2
I0426 20:50:46.677417 31828 net.cpp:382] ip3 -> ip3
I0426 20:50:46.677548 31828 net.cpp:124] Setting up ip3
I0426 20:50:46.677556 31828 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:46.677558 31828 net.cpp:139] Memory required for data: 3998800
I0426 20:50:46.677567 31828 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:46.677572 31828 net.cpp:86] Creating Layer relu3
I0426 20:50:46.677575 31828 net.cpp:408] relu3 <- ip3
I0426 20:50:46.677579 31828 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:46.678527 31828 net.cpp:124] Setting up relu3
I0426 20:50:46.678539 31828 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:46.678555 31828 net.cpp:139] Memory required for data: 4002800
I0426 20:50:46.678557 31828 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:46.678562 31828 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:46.678566 31828 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:46.678586 31828 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:46.678592 31828 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:46.678642 31828 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:46.678648 31828 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:46.678653 31828 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:46.678654 31828 net.cpp:139] Memory required for data: 4010800
I0426 20:50:46.678658 31828 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:46.678663 31828 net.cpp:86] Creating Layer accuracy
I0426 20:50:46.678666 31828 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:46.678670 31828 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:46.678674 31828 net.cpp:382] accuracy -> accuracy
I0426 20:50:46.678681 31828 net.cpp:124] Setting up accuracy
I0426 20:50:46.678684 31828 net.cpp:131] Top shape: (1)
I0426 20:50:46.678688 31828 net.cpp:139] Memory required for data: 4010804
I0426 20:50:46.678690 31828 layer_factory.hpp:77] Creating layer loss
I0426 20:50:46.678695 31828 net.cpp:86] Creating Layer loss
I0426 20:50:46.678699 31828 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:46.678702 31828 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:46.678706 31828 net.cpp:382] loss -> loss
I0426 20:50:46.678712 31828 layer_factory.hpp:77] Creating layer loss
I0426 20:50:46.678990 31828 net.cpp:124] Setting up loss
I0426 20:50:46.678999 31828 net.cpp:131] Top shape: (1)
I0426 20:50:46.679003 31828 net.cpp:134]     with loss weight 1
I0426 20:50:46.679019 31828 net.cpp:139] Memory required for data: 4010808
I0426 20:50:46.679023 31828 net.cpp:200] loss needs backward computation.
I0426 20:50:46.679028 31828 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:46.679031 31828 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:46.679034 31828 net.cpp:200] relu3 needs backward computation.
I0426 20:50:46.679038 31828 net.cpp:200] ip3 needs backward computation.
I0426 20:50:46.679040 31828 net.cpp:200] relu2 needs backward computation.
I0426 20:50:46.679059 31828 net.cpp:200] ip2 needs backward computation.
I0426 20:50:46.679061 31828 net.cpp:200] relu1 needs backward computation.
I0426 20:50:46.679064 31828 net.cpp:200] ip1 needs backward computation.
I0426 20:50:46.679078 31828 net.cpp:200] pool1 needs backward computation.
I0426 20:50:46.679081 31828 net.cpp:200] conv1 needs backward computation.
I0426 20:50:46.679085 31828 net.cpp:200] pool0 needs backward computation.
I0426 20:50:46.679088 31828 net.cpp:200] conv0 needs backward computation.
I0426 20:50:46.679091 31828 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:46.679095 31828 net.cpp:202] mnist does not need backward computation.
I0426 20:50:46.679098 31828 net.cpp:244] This network produces output accuracy
I0426 20:50:46.679101 31828 net.cpp:244] This network produces output loss
I0426 20:50:46.679113 31828 net.cpp:257] Network initialization done.
I0426 20:50:46.679168 31828 solver.cpp:56] Solver scaffolding done.
I0426 20:50:46.679523 31828 caffe.cpp:248] Starting Optimization
I0426 20:50:46.679534 31828 solver.cpp:273] Solving LeNet
I0426 20:50:46.679538 31828 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:46.680464 31828 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:46.684324 31828 blocking_queue.cpp:49] Waiting for data
I0426 20:50:46.755731 31835 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:46.756327 31828 solver.cpp:398]     Test net output #0: accuracy = 0.0956
I0426 20:50:46.756347 31828 solver.cpp:398]     Test net output #1: loss = 2.323 (* 1 = 2.323 loss)
I0426 20:50:46.759537 31828 solver.cpp:219] Iteration 0 (0 iter/s, 0.079959s/100 iters), loss = 2.3173
I0426 20:50:46.759577 31828 solver.cpp:238]     Train net output #0: loss = 2.3173 (* 1 = 2.3173 loss)
I0426 20:50:46.759588 31828 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:46.854385 31828 solver.cpp:219] Iteration 100 (1054.72 iter/s, 0.0948122s/100 iters), loss = 0.961035
I0426 20:50:46.854426 31828 solver.cpp:238]     Train net output #0: loss = 0.961035 (* 1 = 0.961035 loss)
I0426 20:50:46.854432 31828 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:46.949174 31828 solver.cpp:219] Iteration 200 (1055.36 iter/s, 0.094754s/100 iters), loss = 0.460862
I0426 20:50:46.949215 31828 solver.cpp:238]     Train net output #0: loss = 0.460862 (* 1 = 0.460862 loss)
I0426 20:50:46.949221 31828 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:47.050518 31828 solver.cpp:219] Iteration 300 (987.234 iter/s, 0.101293s/100 iters), loss = 0.218766
I0426 20:50:47.050542 31828 solver.cpp:238]     Train net output #0: loss = 0.218766 (* 1 = 0.218766 loss)
I0426 20:50:47.050549 31828 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:47.145313 31828 solver.cpp:219] Iteration 400 (1055.31 iter/s, 0.094759s/100 iters), loss = 0.106927
I0426 20:50:47.145337 31828 solver.cpp:238]     Train net output #0: loss = 0.106927 (* 1 = 0.106927 loss)
I0426 20:50:47.145359 31828 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:47.242861 31828 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:47.318939 31835 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:47.319527 31828 solver.cpp:398]     Test net output #0: accuracy = 0.9698
I0426 20:50:47.319566 31828 solver.cpp:398]     Test net output #1: loss = 0.0988354 (* 1 = 0.0988354 loss)
I0426 20:50:47.320528 31828 solver.cpp:219] Iteration 500 (570.859 iter/s, 0.175175s/100 iters), loss = 0.108646
I0426 20:50:47.320631 31828 solver.cpp:238]     Train net output #0: loss = 0.108646 (* 1 = 0.108646 loss)
I0426 20:50:47.320638 31828 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:47.420074 31828 solver.cpp:219] Iteration 600 (1005.53 iter/s, 0.09945s/100 iters), loss = 0.164141
I0426 20:50:47.420115 31828 solver.cpp:238]     Train net output #0: loss = 0.164141 (* 1 = 0.164141 loss)
I0426 20:50:47.420122 31828 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:47.515275 31828 solver.cpp:219] Iteration 700 (1050.79 iter/s, 0.0951665s/100 iters), loss = 0.212549
I0426 20:50:47.515301 31828 solver.cpp:238]     Train net output #0: loss = 0.212549 (* 1 = 0.212549 loss)
I0426 20:50:47.515323 31828 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:47.608587 31828 solver.cpp:219] Iteration 800 (1072.1 iter/s, 0.0932751s/100 iters), loss = 0.273863
I0426 20:50:47.608610 31828 solver.cpp:238]     Train net output #0: loss = 0.273863 (* 1 = 0.273863 loss)
I0426 20:50:47.608634 31828 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:47.702067 31828 solver.cpp:219] Iteration 900 (1070.12 iter/s, 0.0934472s/100 iters), loss = 0.180024
I0426 20:50:47.702091 31828 solver.cpp:238]     Train net output #0: loss = 0.180024 (* 1 = 0.180024 loss)
I0426 20:50:47.702114 31828 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:47.733530 31834 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:47.795420 31828 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:47.798089 31828 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:47.799506 31828 solver.cpp:311] Iteration 1000, loss = 0.0595718
I0426 20:50:47.799520 31828 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:47.876247 31835 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:47.876854 31828 solver.cpp:398]     Test net output #0: accuracy = 0.9806
I0426 20:50:47.876874 31828 solver.cpp:398]     Test net output #1: loss = 0.0639992 (* 1 = 0.0639992 loss)
I0426 20:50:47.876896 31828 solver.cpp:316] Optimization Done.
I0426 20:50:47.876900 31828 caffe.cpp:259] Optimization Done.
