I0426 20:48:42.867449 31326 caffe.cpp:218] Using GPUs 0
I0426 20:48:42.906282 31326 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:43.429574 31326 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test15.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:43.429713 31326 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test15.prototxt
I0426 20:48:43.430013 31326 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:43.430027 31326 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:43.430096 31326 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:48:43.430160 31326 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:43.430263 31326 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:43.430289 31326 net.cpp:86] Creating Layer mnist
I0426 20:48:43.430295 31326 net.cpp:382] mnist -> data
I0426 20:48:43.430321 31326 net.cpp:382] mnist -> label
I0426 20:48:43.431419 31326 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:43.433957 31326 net.cpp:124] Setting up mnist
I0426 20:48:43.433974 31326 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:43.433980 31326 net.cpp:131] Top shape: 64 (64)
I0426 20:48:43.433984 31326 net.cpp:139] Memory required for data: 200960
I0426 20:48:43.433991 31326 layer_factory.hpp:77] Creating layer conv0
I0426 20:48:43.434010 31326 net.cpp:86] Creating Layer conv0
I0426 20:48:43.434015 31326 net.cpp:408] conv0 <- data
I0426 20:48:43.434027 31326 net.cpp:382] conv0 -> conv0
I0426 20:48:43.676507 31326 net.cpp:124] Setting up conv0
I0426 20:48:43.676534 31326 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:48:43.676537 31326 net.cpp:139] Memory required for data: 1675520
I0426 20:48:43.676553 31326 layer_factory.hpp:77] Creating layer pool0
I0426 20:48:43.676565 31326 net.cpp:86] Creating Layer pool0
I0426 20:48:43.676569 31326 net.cpp:408] pool0 <- conv0
I0426 20:48:43.676590 31326 net.cpp:382] pool0 -> pool0
I0426 20:48:43.676635 31326 net.cpp:124] Setting up pool0
I0426 20:48:43.676641 31326 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:48:43.676645 31326 net.cpp:139] Memory required for data: 2044160
I0426 20:48:43.676647 31326 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:43.676654 31326 net.cpp:86] Creating Layer ip1
I0426 20:48:43.676657 31326 net.cpp:408] ip1 <- pool0
I0426 20:48:43.676661 31326 net.cpp:382] ip1 -> ip1
I0426 20:48:43.677767 31326 net.cpp:124] Setting up ip1
I0426 20:48:43.677780 31326 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:43.677814 31326 net.cpp:139] Memory required for data: 2046720
I0426 20:48:43.677839 31326 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:43.677848 31326 net.cpp:86] Creating Layer relu1
I0426 20:48:43.677853 31326 net.cpp:408] relu1 <- ip1
I0426 20:48:43.677860 31326 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:43.678050 31326 net.cpp:124] Setting up relu1
I0426 20:48:43.678059 31326 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:43.678062 31326 net.cpp:139] Memory required for data: 2049280
I0426 20:48:43.678066 31326 layer_factory.hpp:77] Creating layer loss
I0426 20:48:43.678071 31326 net.cpp:86] Creating Layer loss
I0426 20:48:43.678073 31326 net.cpp:408] loss <- ip1
I0426 20:48:43.678078 31326 net.cpp:408] loss <- label
I0426 20:48:43.678082 31326 net.cpp:382] loss -> loss
I0426 20:48:43.678097 31326 layer_factory.hpp:77] Creating layer loss
I0426 20:48:43.678997 31326 net.cpp:124] Setting up loss
I0426 20:48:43.679028 31326 net.cpp:131] Top shape: (1)
I0426 20:48:43.679034 31326 net.cpp:134]     with loss weight 1
I0426 20:48:43.679049 31326 net.cpp:139] Memory required for data: 2049284
I0426 20:48:43.679069 31326 net.cpp:200] loss needs backward computation.
I0426 20:48:43.679072 31326 net.cpp:200] relu1 needs backward computation.
I0426 20:48:43.679075 31326 net.cpp:200] ip1 needs backward computation.
I0426 20:48:43.679077 31326 net.cpp:200] pool0 needs backward computation.
I0426 20:48:43.679080 31326 net.cpp:200] conv0 needs backward computation.
I0426 20:48:43.679085 31326 net.cpp:202] mnist does not need backward computation.
I0426 20:48:43.679086 31326 net.cpp:244] This network produces output loss
I0426 20:48:43.679093 31326 net.cpp:257] Network initialization done.
I0426 20:48:43.679329 31326 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test15.prototxt
I0426 20:48:43.679350 31326 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:43.679414 31326 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:48:43.679476 31326 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:43.679517 31326 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:43.679528 31326 net.cpp:86] Creating Layer mnist
I0426 20:48:43.679533 31326 net.cpp:382] mnist -> data
I0426 20:48:43.679540 31326 net.cpp:382] mnist -> label
I0426 20:48:43.679616 31326 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:43.681582 31326 net.cpp:124] Setting up mnist
I0426 20:48:43.681610 31326 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:43.681615 31326 net.cpp:131] Top shape: 100 (100)
I0426 20:48:43.681618 31326 net.cpp:139] Memory required for data: 314000
I0426 20:48:43.681643 31326 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:43.681664 31326 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:43.681668 31326 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:43.681671 31326 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:43.681679 31326 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:43.681742 31326 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:43.681749 31326 net.cpp:131] Top shape: 100 (100)
I0426 20:48:43.681753 31326 net.cpp:131] Top shape: 100 (100)
I0426 20:48:43.681756 31326 net.cpp:139] Memory required for data: 314800
I0426 20:48:43.681758 31326 layer_factory.hpp:77] Creating layer conv0
I0426 20:48:43.681766 31326 net.cpp:86] Creating Layer conv0
I0426 20:48:43.681769 31326 net.cpp:408] conv0 <- data
I0426 20:48:43.681774 31326 net.cpp:382] conv0 -> conv0
I0426 20:48:43.683419 31326 net.cpp:124] Setting up conv0
I0426 20:48:43.683432 31326 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:48:43.683435 31326 net.cpp:139] Memory required for data: 2618800
I0426 20:48:43.683459 31326 layer_factory.hpp:77] Creating layer pool0
I0426 20:48:43.683465 31326 net.cpp:86] Creating Layer pool0
I0426 20:48:43.683468 31326 net.cpp:408] pool0 <- conv0
I0426 20:48:43.683473 31326 net.cpp:382] pool0 -> pool0
I0426 20:48:43.683506 31326 net.cpp:124] Setting up pool0
I0426 20:48:43.683527 31326 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:48:43.683531 31326 net.cpp:139] Memory required for data: 3194800
I0426 20:48:43.683533 31326 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:43.683539 31326 net.cpp:86] Creating Layer ip1
I0426 20:48:43.683542 31326 net.cpp:408] ip1 <- pool0
I0426 20:48:43.683547 31326 net.cpp:382] ip1 -> ip1
I0426 20:48:43.683778 31326 net.cpp:124] Setting up ip1
I0426 20:48:43.683784 31326 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:43.683787 31326 net.cpp:139] Memory required for data: 3198800
I0426 20:48:43.683799 31326 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:43.683804 31326 net.cpp:86] Creating Layer relu1
I0426 20:48:43.683807 31326 net.cpp:408] relu1 <- ip1
I0426 20:48:43.683811 31326 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:43.684015 31326 net.cpp:124] Setting up relu1
I0426 20:48:43.684023 31326 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:43.684027 31326 net.cpp:139] Memory required for data: 3202800
I0426 20:48:43.684031 31326 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:48:43.684034 31326 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:48:43.684037 31326 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:48:43.684041 31326 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:48:43.684046 31326 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:48:43.684079 31326 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:48:43.684087 31326 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:43.684092 31326 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:43.684094 31326 net.cpp:139] Memory required for data: 3210800
I0426 20:48:43.684098 31326 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:43.684103 31326 net.cpp:86] Creating Layer accuracy
I0426 20:48:43.684110 31326 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:48:43.684115 31326 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:43.684119 31326 net.cpp:382] accuracy -> accuracy
I0426 20:48:43.684125 31326 net.cpp:124] Setting up accuracy
I0426 20:48:43.684129 31326 net.cpp:131] Top shape: (1)
I0426 20:48:43.684132 31326 net.cpp:139] Memory required for data: 3210804
I0426 20:48:43.684135 31326 layer_factory.hpp:77] Creating layer loss
I0426 20:48:43.684139 31326 net.cpp:86] Creating Layer loss
I0426 20:48:43.684142 31326 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:48:43.684146 31326 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:43.684150 31326 net.cpp:382] loss -> loss
I0426 20:48:43.684155 31326 layer_factory.hpp:77] Creating layer loss
I0426 20:48:43.684361 31326 net.cpp:124] Setting up loss
I0426 20:48:43.684379 31326 net.cpp:131] Top shape: (1)
I0426 20:48:43.684382 31326 net.cpp:134]     with loss weight 1
I0426 20:48:43.684389 31326 net.cpp:139] Memory required for data: 3210808
I0426 20:48:43.684392 31326 net.cpp:200] loss needs backward computation.
I0426 20:48:43.684396 31326 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:43.684399 31326 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:48:43.684402 31326 net.cpp:200] relu1 needs backward computation.
I0426 20:48:43.684406 31326 net.cpp:200] ip1 needs backward computation.
I0426 20:48:43.684409 31326 net.cpp:200] pool0 needs backward computation.
I0426 20:48:43.684412 31326 net.cpp:200] conv0 needs backward computation.
I0426 20:48:43.684422 31326 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:43.684424 31326 net.cpp:202] mnist does not need backward computation.
I0426 20:48:43.684427 31326 net.cpp:244] This network produces output accuracy
I0426 20:48:43.684430 31326 net.cpp:244] This network produces output loss
I0426 20:48:43.684438 31326 net.cpp:257] Network initialization done.
I0426 20:48:43.684464 31326 solver.cpp:56] Solver scaffolding done.
I0426 20:48:43.684631 31326 caffe.cpp:248] Starting Optimization
I0426 20:48:43.684636 31326 solver.cpp:273] Solving LeNet
I0426 20:48:43.684639 31326 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:43.684736 31326 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:43.689254 31326 blocking_queue.cpp:49] Waiting for data
I0426 20:48:43.740777 31333 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:43.741291 31326 solver.cpp:398]     Test net output #0: accuracy = 0.1405
I0426 20:48:43.741309 31326 solver.cpp:398]     Test net output #1: loss = 2.2758 (* 1 = 2.2758 loss)
I0426 20:48:43.743530 31326 solver.cpp:219] Iteration 0 (0 iter/s, 0.058858s/100 iters), loss = 2.30915
I0426 20:48:43.743553 31326 solver.cpp:238]     Train net output #0: loss = 2.30915 (* 1 = 2.30915 loss)
I0426 20:48:43.743579 31326 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:43.798651 31326 solver.cpp:219] Iteration 100 (1815.23 iter/s, 0.0550894s/100 iters), loss = 1.03636
I0426 20:48:43.798679 31326 solver.cpp:238]     Train net output #0: loss = 1.03636 (* 1 = 1.03636 loss)
I0426 20:48:43.798703 31326 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:43.846438 31326 solver.cpp:219] Iteration 200 (2094.19 iter/s, 0.0477512s/100 iters), loss = 0.619561
I0426 20:48:43.846498 31326 solver.cpp:238]     Train net output #0: loss = 0.619561 (* 1 = 0.619561 loss)
I0426 20:48:43.846508 31326 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:43.901950 31326 solver.cpp:219] Iteration 300 (1803.1 iter/s, 0.05546s/100 iters), loss = 0.267197
I0426 20:48:43.901991 31326 solver.cpp:238]     Train net output #0: loss = 0.267197 (* 1 = 0.267197 loss)
I0426 20:48:43.901998 31326 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:43.955996 31326 solver.cpp:219] Iteration 400 (1851.33 iter/s, 0.0540152s/100 iters), loss = 0.189337
I0426 20:48:43.956033 31326 solver.cpp:238]     Train net output #0: loss = 0.189337 (* 1 = 0.189337 loss)
I0426 20:48:43.956039 31326 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:44.008982 31326 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:44.083606 31333 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:44.084128 31326 solver.cpp:398]     Test net output #0: accuracy = 0.9363
I0426 20:48:44.084149 31326 solver.cpp:398]     Test net output #1: loss = 0.229201 (* 1 = 0.229201 loss)
I0426 20:48:44.084748 31326 solver.cpp:219] Iteration 500 (776.888 iter/s, 0.128719s/100 iters), loss = 0.276014
I0426 20:48:44.084770 31326 solver.cpp:238]     Train net output #0: loss = 0.276013 (* 1 = 0.276013 loss)
I0426 20:48:44.084777 31326 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:44.137938 31326 solver.cpp:219] Iteration 600 (1881.33 iter/s, 0.0531538s/100 iters), loss = 0.183456
I0426 20:48:44.137981 31326 solver.cpp:238]     Train net output #0: loss = 0.183456 (* 1 = 0.183456 loss)
I0426 20:48:44.138002 31326 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:44.184734 31326 solver.cpp:219] Iteration 700 (2139.18 iter/s, 0.046747s/100 iters), loss = 0.346748
I0426 20:48:44.184778 31326 solver.cpp:238]     Train net output #0: loss = 0.346748 (* 1 = 0.346748 loss)
I0426 20:48:44.184784 31326 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:44.238848 31326 solver.cpp:219] Iteration 800 (1849.7 iter/s, 0.0540629s/100 iters), loss = 0.327834
I0426 20:48:44.238894 31326 solver.cpp:238]     Train net output #0: loss = 0.327834 (* 1 = 0.327834 loss)
I0426 20:48:44.238903 31326 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:44.293015 31326 solver.cpp:219] Iteration 900 (1847.46 iter/s, 0.0541284s/100 iters), loss = 0.274919
I0426 20:48:44.293052 31326 solver.cpp:238]     Train net output #0: loss = 0.274919 (* 1 = 0.274919 loss)
I0426 20:48:44.293058 31326 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:44.311805 31332 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:44.346141 31326 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:44.346827 31326 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:44.347295 31326 solver.cpp:311] Iteration 1000, loss = 0.226835
I0426 20:48:44.347309 31326 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:44.418592 31333 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:44.419076 31326 solver.cpp:398]     Test net output #0: accuracy = 0.9556
I0426 20:48:44.419096 31326 solver.cpp:398]     Test net output #1: loss = 0.153867 (* 1 = 0.153867 loss)
I0426 20:48:44.419100 31326 solver.cpp:316] Optimization Done.
I0426 20:48:44.419104 31326 caffe.cpp:259] Optimization Done.
