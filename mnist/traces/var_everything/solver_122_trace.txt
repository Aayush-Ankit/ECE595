I0426 20:52:49.549901 32320 caffe.cpp:218] Using GPUs 0
I0426 20:52:49.583200 32320 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:50.094033 32320 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test122.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:50.094151 32320 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test122.prototxt
I0426 20:52:50.094485 32320 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:50.094502 32320 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:50.094584 32320 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:50.094648 32320 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:50.094734 32320 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:50.094754 32320 net.cpp:86] Creating Layer mnist
I0426 20:52:50.094777 32320 net.cpp:382] mnist -> data
I0426 20:52:50.094796 32320 net.cpp:382] mnist -> label
I0426 20:52:50.095712 32320 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:50.097834 32320 net.cpp:124] Setting up mnist
I0426 20:52:50.097849 32320 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:50.097856 32320 net.cpp:131] Top shape: 64 (64)
I0426 20:52:50.097858 32320 net.cpp:139] Memory required for data: 200960
I0426 20:52:50.097864 32320 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:50.097877 32320 net.cpp:86] Creating Layer conv0
I0426 20:52:50.097894 32320 net.cpp:408] conv0 <- data
I0426 20:52:50.097905 32320 net.cpp:382] conv0 -> conv0
I0426 20:52:50.330878 32320 net.cpp:124] Setting up conv0
I0426 20:52:50.330922 32320 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:50.330926 32320 net.cpp:139] Memory required for data: 3887360
I0426 20:52:50.330942 32320 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:50.330956 32320 net.cpp:86] Creating Layer pool0
I0426 20:52:50.330960 32320 net.cpp:408] pool0 <- conv0
I0426 20:52:50.330966 32320 net.cpp:382] pool0 -> pool0
I0426 20:52:50.331027 32320 net.cpp:124] Setting up pool0
I0426 20:52:50.331034 32320 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:50.331037 32320 net.cpp:139] Memory required for data: 4808960
I0426 20:52:50.331040 32320 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:50.331053 32320 net.cpp:86] Creating Layer conv1
I0426 20:52:50.331055 32320 net.cpp:408] conv1 <- pool0
I0426 20:52:50.331060 32320 net.cpp:382] conv1 -> conv1
I0426 20:52:50.334002 32320 net.cpp:124] Setting up conv1
I0426 20:52:50.334031 32320 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:52:50.334035 32320 net.cpp:139] Memory required for data: 5218560
I0426 20:52:50.334044 32320 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:50.334053 32320 net.cpp:86] Creating Layer pool1
I0426 20:52:50.334056 32320 net.cpp:408] pool1 <- conv1
I0426 20:52:50.334061 32320 net.cpp:382] pool1 -> pool1
I0426 20:52:50.334113 32320 net.cpp:124] Setting up pool1
I0426 20:52:50.334120 32320 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:52:50.334123 32320 net.cpp:139] Memory required for data: 5320960
I0426 20:52:50.334126 32320 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:50.334133 32320 net.cpp:86] Creating Layer ip1
I0426 20:52:50.334136 32320 net.cpp:408] ip1 <- pool1
I0426 20:52:50.334141 32320 net.cpp:382] ip1 -> ip1
I0426 20:52:50.335775 32320 net.cpp:124] Setting up ip1
I0426 20:52:50.335788 32320 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:50.335806 32320 net.cpp:139] Memory required for data: 5397760
I0426 20:52:50.335814 32320 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:50.335820 32320 net.cpp:86] Creating Layer relu1
I0426 20:52:50.335824 32320 net.cpp:408] relu1 <- ip1
I0426 20:52:50.335829 32320 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:50.336007 32320 net.cpp:124] Setting up relu1
I0426 20:52:50.336016 32320 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:50.336019 32320 net.cpp:139] Memory required for data: 5474560
I0426 20:52:50.336022 32320 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:50.336030 32320 net.cpp:86] Creating Layer ip2
I0426 20:52:50.336032 32320 net.cpp:408] ip2 <- ip1
I0426 20:52:50.336037 32320 net.cpp:382] ip2 -> ip2
I0426 20:52:50.336321 32320 net.cpp:124] Setting up ip2
I0426 20:52:50.336328 32320 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:50.336331 32320 net.cpp:139] Memory required for data: 5500160
I0426 20:52:50.336338 32320 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:50.336344 32320 net.cpp:86] Creating Layer relu2
I0426 20:52:50.336347 32320 net.cpp:408] relu2 <- ip2
I0426 20:52:50.336351 32320 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:50.337254 32320 net.cpp:124] Setting up relu2
I0426 20:52:50.337266 32320 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:50.337285 32320 net.cpp:139] Memory required for data: 5525760
I0426 20:52:50.337290 32320 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:50.337296 32320 net.cpp:86] Creating Layer ip3
I0426 20:52:50.337301 32320 net.cpp:408] ip3 <- ip2
I0426 20:52:50.337306 32320 net.cpp:382] ip3 -> ip3
I0426 20:52:50.337425 32320 net.cpp:124] Setting up ip3
I0426 20:52:50.337435 32320 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:50.337437 32320 net.cpp:139] Memory required for data: 5528320
I0426 20:52:50.337445 32320 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:50.337452 32320 net.cpp:86] Creating Layer relu3
I0426 20:52:50.337471 32320 net.cpp:408] relu3 <- ip3
I0426 20:52:50.337474 32320 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:50.337656 32320 net.cpp:124] Setting up relu3
I0426 20:52:50.337664 32320 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:50.337667 32320 net.cpp:139] Memory required for data: 5530880
I0426 20:52:50.337671 32320 layer_factory.hpp:77] Creating layer loss
I0426 20:52:50.337677 32320 net.cpp:86] Creating Layer loss
I0426 20:52:50.337679 32320 net.cpp:408] loss <- ip3
I0426 20:52:50.337683 32320 net.cpp:408] loss <- label
I0426 20:52:50.337689 32320 net.cpp:382] loss -> loss
I0426 20:52:50.337702 32320 layer_factory.hpp:77] Creating layer loss
I0426 20:52:50.337971 32320 net.cpp:124] Setting up loss
I0426 20:52:50.337981 32320 net.cpp:131] Top shape: (1)
I0426 20:52:50.337985 32320 net.cpp:134]     with loss weight 1
I0426 20:52:50.337999 32320 net.cpp:139] Memory required for data: 5530884
I0426 20:52:50.338002 32320 net.cpp:200] loss needs backward computation.
I0426 20:52:50.338006 32320 net.cpp:200] relu3 needs backward computation.
I0426 20:52:50.338009 32320 net.cpp:200] ip3 needs backward computation.
I0426 20:52:50.338012 32320 net.cpp:200] relu2 needs backward computation.
I0426 20:52:50.338016 32320 net.cpp:200] ip2 needs backward computation.
I0426 20:52:50.338017 32320 net.cpp:200] relu1 needs backward computation.
I0426 20:52:50.338021 32320 net.cpp:200] ip1 needs backward computation.
I0426 20:52:50.338023 32320 net.cpp:200] pool1 needs backward computation.
I0426 20:52:50.338027 32320 net.cpp:200] conv1 needs backward computation.
I0426 20:52:50.338029 32320 net.cpp:200] pool0 needs backward computation.
I0426 20:52:50.338032 32320 net.cpp:200] conv0 needs backward computation.
I0426 20:52:50.338037 32320 net.cpp:202] mnist does not need backward computation.
I0426 20:52:50.338038 32320 net.cpp:244] This network produces output loss
I0426 20:52:50.338049 32320 net.cpp:257] Network initialization done.
I0426 20:52:50.338412 32320 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test122.prototxt
I0426 20:52:50.338454 32320 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:50.338552 32320 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:50.338641 32320 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:50.338701 32320 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:50.338714 32320 net.cpp:86] Creating Layer mnist
I0426 20:52:50.338719 32320 net.cpp:382] mnist -> data
I0426 20:52:50.338726 32320 net.cpp:382] mnist -> label
I0426 20:52:50.338814 32320 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:50.340188 32320 net.cpp:124] Setting up mnist
I0426 20:52:50.340234 32320 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:50.340240 32320 net.cpp:131] Top shape: 100 (100)
I0426 20:52:50.340242 32320 net.cpp:139] Memory required for data: 314000
I0426 20:52:50.340246 32320 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:50.340253 32320 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:50.340256 32320 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:50.340261 32320 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:50.340268 32320 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:50.340378 32320 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:50.340386 32320 net.cpp:131] Top shape: 100 (100)
I0426 20:52:50.340390 32320 net.cpp:131] Top shape: 100 (100)
I0426 20:52:50.340394 32320 net.cpp:139] Memory required for data: 314800
I0426 20:52:50.340396 32320 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:50.340407 32320 net.cpp:86] Creating Layer conv0
I0426 20:52:50.340410 32320 net.cpp:408] conv0 <- data
I0426 20:52:50.340417 32320 net.cpp:382] conv0 -> conv0
I0426 20:52:50.342217 32320 net.cpp:124] Setting up conv0
I0426 20:52:50.342247 32320 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:50.342250 32320 net.cpp:139] Memory required for data: 6074800
I0426 20:52:50.342259 32320 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:50.342268 32320 net.cpp:86] Creating Layer pool0
I0426 20:52:50.342272 32320 net.cpp:408] pool0 <- conv0
I0426 20:52:50.342278 32320 net.cpp:382] pool0 -> pool0
I0426 20:52:50.342315 32320 net.cpp:124] Setting up pool0
I0426 20:52:50.342321 32320 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:50.342324 32320 net.cpp:139] Memory required for data: 7514800
I0426 20:52:50.342326 32320 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:50.342336 32320 net.cpp:86] Creating Layer conv1
I0426 20:52:50.342339 32320 net.cpp:408] conv1 <- pool0
I0426 20:52:50.342346 32320 net.cpp:382] conv1 -> conv1
I0426 20:52:50.344707 32320 net.cpp:124] Setting up conv1
I0426 20:52:50.344735 32320 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:52:50.344739 32320 net.cpp:139] Memory required for data: 8154800
I0426 20:52:50.344749 32320 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:50.344756 32320 net.cpp:86] Creating Layer pool1
I0426 20:52:50.344768 32320 net.cpp:408] pool1 <- conv1
I0426 20:52:50.344789 32320 net.cpp:382] pool1 -> pool1
I0426 20:52:50.344853 32320 net.cpp:124] Setting up pool1
I0426 20:52:50.344861 32320 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:52:50.344863 32320 net.cpp:139] Memory required for data: 8314800
I0426 20:52:50.344867 32320 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:50.344874 32320 net.cpp:86] Creating Layer ip1
I0426 20:52:50.344878 32320 net.cpp:408] ip1 <- pool1
I0426 20:52:50.344883 32320 net.cpp:382] ip1 -> ip1
I0426 20:52:50.346565 32320 net.cpp:124] Setting up ip1
I0426 20:52:50.346592 32320 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:50.346606 32320 net.cpp:139] Memory required for data: 8434800
I0426 20:52:50.346616 32320 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:50.346621 32320 net.cpp:86] Creating Layer relu1
I0426 20:52:50.346626 32320 net.cpp:408] relu1 <- ip1
I0426 20:52:50.346647 32320 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:50.346886 32320 net.cpp:124] Setting up relu1
I0426 20:52:50.346896 32320 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:50.346899 32320 net.cpp:139] Memory required for data: 8554800
I0426 20:52:50.346904 32320 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:50.346910 32320 net.cpp:86] Creating Layer ip2
I0426 20:52:50.346913 32320 net.cpp:408] ip2 <- ip1
I0426 20:52:50.346920 32320 net.cpp:382] ip2 -> ip2
I0426 20:52:50.347223 32320 net.cpp:124] Setting up ip2
I0426 20:52:50.347244 32320 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:50.347265 32320 net.cpp:139] Memory required for data: 8594800
I0426 20:52:50.347270 32320 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:50.347275 32320 net.cpp:86] Creating Layer relu2
I0426 20:52:50.347278 32320 net.cpp:408] relu2 <- ip2
I0426 20:52:50.347285 32320 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:50.347452 32320 net.cpp:124] Setting up relu2
I0426 20:52:50.347461 32320 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:50.347465 32320 net.cpp:139] Memory required for data: 8634800
I0426 20:52:50.347467 32320 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:50.347474 32320 net.cpp:86] Creating Layer ip3
I0426 20:52:50.347478 32320 net.cpp:408] ip3 <- ip2
I0426 20:52:50.347482 32320 net.cpp:382] ip3 -> ip3
I0426 20:52:50.347595 32320 net.cpp:124] Setting up ip3
I0426 20:52:50.347602 32320 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:50.347606 32320 net.cpp:139] Memory required for data: 8638800
I0426 20:52:50.347614 32320 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:50.347620 32320 net.cpp:86] Creating Layer relu3
I0426 20:52:50.347622 32320 net.cpp:408] relu3 <- ip3
I0426 20:52:50.347628 32320 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:50.348585 32320 net.cpp:124] Setting up relu3
I0426 20:52:50.348598 32320 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:50.348616 32320 net.cpp:139] Memory required for data: 8642800
I0426 20:52:50.348620 32320 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:50.348628 32320 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:50.348631 32320 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:50.348637 32320 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:50.348644 32320 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:50.348708 32320 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:50.348714 32320 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:50.348718 32320 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:50.348721 32320 net.cpp:139] Memory required for data: 8650800
I0426 20:52:50.348724 32320 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:50.348731 32320 net.cpp:86] Creating Layer accuracy
I0426 20:52:50.348733 32320 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:50.348737 32320 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:50.348743 32320 net.cpp:382] accuracy -> accuracy
I0426 20:52:50.348752 32320 net.cpp:124] Setting up accuracy
I0426 20:52:50.348755 32320 net.cpp:131] Top shape: (1)
I0426 20:52:50.348758 32320 net.cpp:139] Memory required for data: 8650804
I0426 20:52:50.348762 32320 layer_factory.hpp:77] Creating layer loss
I0426 20:52:50.348765 32320 net.cpp:86] Creating Layer loss
I0426 20:52:50.348769 32320 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:50.348773 32320 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:50.348778 32320 net.cpp:382] loss -> loss
I0426 20:52:50.348784 32320 layer_factory.hpp:77] Creating layer loss
I0426 20:52:50.349097 32320 net.cpp:124] Setting up loss
I0426 20:52:50.349108 32320 net.cpp:131] Top shape: (1)
I0426 20:52:50.349112 32320 net.cpp:134]     with loss weight 1
I0426 20:52:50.349130 32320 net.cpp:139] Memory required for data: 8650808
I0426 20:52:50.349134 32320 net.cpp:200] loss needs backward computation.
I0426 20:52:50.349140 32320 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:50.349145 32320 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:50.349148 32320 net.cpp:200] relu3 needs backward computation.
I0426 20:52:50.349151 32320 net.cpp:200] ip3 needs backward computation.
I0426 20:52:50.349155 32320 net.cpp:200] relu2 needs backward computation.
I0426 20:52:50.349159 32320 net.cpp:200] ip2 needs backward computation.
I0426 20:52:50.349161 32320 net.cpp:200] relu1 needs backward computation.
I0426 20:52:50.349164 32320 net.cpp:200] ip1 needs backward computation.
I0426 20:52:50.349169 32320 net.cpp:200] pool1 needs backward computation.
I0426 20:52:50.349171 32320 net.cpp:200] conv1 needs backward computation.
I0426 20:52:50.349175 32320 net.cpp:200] pool0 needs backward computation.
I0426 20:52:50.349179 32320 net.cpp:200] conv0 needs backward computation.
I0426 20:52:50.349182 32320 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:50.349187 32320 net.cpp:202] mnist does not need backward computation.
I0426 20:52:50.349190 32320 net.cpp:244] This network produces output accuracy
I0426 20:52:50.349195 32320 net.cpp:244] This network produces output loss
I0426 20:52:50.349207 32320 net.cpp:257] Network initialization done.
I0426 20:52:50.349253 32320 solver.cpp:56] Solver scaffolding done.
I0426 20:52:50.349627 32320 caffe.cpp:248] Starting Optimization
I0426 20:52:50.349634 32320 solver.cpp:273] Solving LeNet
I0426 20:52:50.349637 32320 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:50.350546 32320 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:50.357201 32320 blocking_queue.cpp:49] Waiting for data
I0426 20:52:50.426326 32327 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:50.427037 32320 solver.cpp:398]     Test net output #0: accuracy = 0.1394
I0426 20:52:50.427073 32320 solver.cpp:398]     Test net output #1: loss = 2.29364 (* 1 = 2.29364 loss)
I0426 20:52:50.431046 32320 solver.cpp:219] Iteration 0 (0 iter/s, 0.0813629s/100 iters), loss = 2.30413
I0426 20:52:50.431085 32320 solver.cpp:238]     Train net output #0: loss = 2.30413 (* 1 = 2.30413 loss)
I0426 20:52:50.431097 32320 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:50.550734 32320 solver.cpp:219] Iteration 100 (835.761 iter/s, 0.119651s/100 iters), loss = 0.800792
I0426 20:52:50.550775 32320 solver.cpp:238]     Train net output #0: loss = 0.800792 (* 1 = 0.800792 loss)
I0426 20:52:50.550781 32320 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:50.666308 32320 solver.cpp:219] Iteration 200 (865.624 iter/s, 0.115524s/100 iters), loss = 0.384293
I0426 20:52:50.666348 32320 solver.cpp:238]     Train net output #0: loss = 0.384293 (* 1 = 0.384293 loss)
I0426 20:52:50.666354 32320 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:50.778307 32320 solver.cpp:219] Iteration 300 (893.143 iter/s, 0.111964s/100 iters), loss = 0.65272
I0426 20:52:50.778347 32320 solver.cpp:238]     Train net output #0: loss = 0.65272 (* 1 = 0.65272 loss)
I0426 20:52:50.778352 32320 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:50.891706 32320 solver.cpp:219] Iteration 400 (882.115 iter/s, 0.113364s/100 iters), loss = 0.671349
I0426 20:52:50.891751 32320 solver.cpp:238]     Train net output #0: loss = 0.671349 (* 1 = 0.671349 loss)
I0426 20:52:50.891757 32320 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:51.001600 32320 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:51.077006 32327 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:51.077683 32320 solver.cpp:398]     Test net output #0: accuracy = 0.7827
I0426 20:52:51.077704 32320 solver.cpp:398]     Test net output #1: loss = 0.534224 (* 1 = 0.534224 loss)
I0426 20:52:51.078825 32320 solver.cpp:219] Iteration 500 (534.587 iter/s, 0.18706s/100 iters), loss = 0.668336
I0426 20:52:51.078891 32320 solver.cpp:238]     Train net output #0: loss = 0.668336 (* 1 = 0.668336 loss)
I0426 20:52:51.078898 32320 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:51.197602 32320 solver.cpp:219] Iteration 600 (842.363 iter/s, 0.118714s/100 iters), loss = 0.435419
I0426 20:52:51.197633 32320 solver.cpp:238]     Train net output #0: loss = 0.435419 (* 1 = 0.435419 loss)
I0426 20:52:51.197640 32320 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:51.314636 32320 solver.cpp:219] Iteration 700 (854.752 iter/s, 0.116993s/100 iters), loss = 0.631451
I0426 20:52:51.314662 32320 solver.cpp:238]     Train net output #0: loss = 0.631451 (* 1 = 0.631451 loss)
I0426 20:52:51.314669 32320 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:51.432366 32320 solver.cpp:219] Iteration 800 (849.672 iter/s, 0.117692s/100 iters), loss = 0.557531
I0426 20:52:51.432391 32320 solver.cpp:238]     Train net output #0: loss = 0.557531 (* 1 = 0.557531 loss)
I0426 20:52:51.432397 32320 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:51.545318 32320 solver.cpp:219] Iteration 900 (885.618 iter/s, 0.112915s/100 iters), loss = 0.48111
I0426 20:52:51.545358 32320 solver.cpp:238]     Train net output #0: loss = 0.48111 (* 1 = 0.48111 loss)
I0426 20:52:51.545366 32320 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:51.582645 32326 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:51.656065 32320 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:51.659879 32320 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:51.661609 32320 solver.cpp:311] Iteration 1000, loss = 0.45364
I0426 20:52:51.661623 32320 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:51.734256 32327 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:51.734982 32320 solver.cpp:398]     Test net output #0: accuracy = 0.7898
I0426 20:52:51.735016 32320 solver.cpp:398]     Test net output #1: loss = 0.50627 (* 1 = 0.50627 loss)
I0426 20:52:51.735021 32320 solver.cpp:316] Optimization Done.
I0426 20:52:51.735025 32320 caffe.cpp:259] Optimization Done.
