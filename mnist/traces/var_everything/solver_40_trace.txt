I0426 20:49:35.932011 31562 caffe.cpp:218] Using GPUs 0
I0426 20:49:35.970434 31562 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:36.439569 31562 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test40.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:36.439710 31562 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test40.prototxt
I0426 20:49:36.439995 31562 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:36.440011 31562 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:36.440078 31562 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:36.440140 31562 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:36.440218 31562 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:36.440237 31562 net.cpp:86] Creating Layer mnist
I0426 20:49:36.440243 31562 net.cpp:382] mnist -> data
I0426 20:49:36.440260 31562 net.cpp:382] mnist -> label
I0426 20:49:36.441246 31562 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:36.443377 31562 net.cpp:124] Setting up mnist
I0426 20:49:36.443389 31562 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:36.443404 31562 net.cpp:131] Top shape: 64 (64)
I0426 20:49:36.443408 31562 net.cpp:139] Memory required for data: 200960
I0426 20:49:36.443413 31562 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:36.443426 31562 net.cpp:86] Creating Layer conv0
I0426 20:49:36.443431 31562 net.cpp:408] conv0 <- data
I0426 20:49:36.443440 31562 net.cpp:382] conv0 -> conv0
I0426 20:49:36.671468 31562 net.cpp:124] Setting up conv0
I0426 20:49:36.671494 31562 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:49:36.671499 31562 net.cpp:139] Memory required for data: 3887360
I0426 20:49:36.671528 31562 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:36.671540 31562 net.cpp:86] Creating Layer pool0
I0426 20:49:36.671574 31562 net.cpp:408] pool0 <- conv0
I0426 20:49:36.671581 31562 net.cpp:382] pool0 -> pool0
I0426 20:49:36.671622 31562 net.cpp:124] Setting up pool0
I0426 20:49:36.671629 31562 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:49:36.671633 31562 net.cpp:139] Memory required for data: 4808960
I0426 20:49:36.671635 31562 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:36.671643 31562 net.cpp:86] Creating Layer ip1
I0426 20:49:36.671645 31562 net.cpp:408] ip1 <- pool0
I0426 20:49:36.671650 31562 net.cpp:382] ip1 -> ip1
I0426 20:49:36.678784 31562 net.cpp:124] Setting up ip1
I0426 20:49:36.678797 31562 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:36.678815 31562 net.cpp:139] Memory required for data: 4885760
I0426 20:49:36.678823 31562 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:36.678830 31562 net.cpp:86] Creating Layer relu1
I0426 20:49:36.678833 31562 net.cpp:408] relu1 <- ip1
I0426 20:49:36.678853 31562 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:36.679023 31562 net.cpp:124] Setting up relu1
I0426 20:49:36.679030 31562 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:36.679033 31562 net.cpp:139] Memory required for data: 4962560
I0426 20:49:36.679036 31562 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:36.679044 31562 net.cpp:86] Creating Layer ip2
I0426 20:49:36.679045 31562 net.cpp:408] ip2 <- ip1
I0426 20:49:36.679050 31562 net.cpp:382] ip2 -> ip2
I0426 20:49:36.680459 31562 net.cpp:124] Setting up ip2
I0426 20:49:36.680470 31562 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:36.680474 31562 net.cpp:139] Memory required for data: 5039360
I0426 20:49:36.680480 31562 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:36.680485 31562 net.cpp:86] Creating Layer relu2
I0426 20:49:36.680490 31562 net.cpp:408] relu2 <- ip2
I0426 20:49:36.680493 31562 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:36.681350 31562 net.cpp:124] Setting up relu2
I0426 20:49:36.681361 31562 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:36.681380 31562 net.cpp:139] Memory required for data: 5116160
I0426 20:49:36.681382 31562 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:36.681388 31562 net.cpp:86] Creating Layer ip3
I0426 20:49:36.681407 31562 net.cpp:408] ip3 <- ip2
I0426 20:49:36.681412 31562 net.cpp:382] ip3 -> ip3
I0426 20:49:36.682343 31562 net.cpp:124] Setting up ip3
I0426 20:49:36.682354 31562 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:36.682358 31562 net.cpp:139] Memory required for data: 5118720
I0426 20:49:36.682363 31562 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:36.682368 31562 net.cpp:86] Creating Layer relu3
I0426 20:49:36.682371 31562 net.cpp:408] relu3 <- ip3
I0426 20:49:36.682375 31562 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:36.682539 31562 net.cpp:124] Setting up relu3
I0426 20:49:36.682546 31562 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:36.682549 31562 net.cpp:139] Memory required for data: 5121280
I0426 20:49:36.682552 31562 layer_factory.hpp:77] Creating layer loss
I0426 20:49:36.682559 31562 net.cpp:86] Creating Layer loss
I0426 20:49:36.682560 31562 net.cpp:408] loss <- ip3
I0426 20:49:36.682564 31562 net.cpp:408] loss <- label
I0426 20:49:36.682569 31562 net.cpp:382] loss -> loss
I0426 20:49:36.682584 31562 layer_factory.hpp:77] Creating layer loss
I0426 20:49:36.682809 31562 net.cpp:124] Setting up loss
I0426 20:49:36.682817 31562 net.cpp:131] Top shape: (1)
I0426 20:49:36.682821 31562 net.cpp:134]     with loss weight 1
I0426 20:49:36.682835 31562 net.cpp:139] Memory required for data: 5121284
I0426 20:49:36.682838 31562 net.cpp:200] loss needs backward computation.
I0426 20:49:36.682842 31562 net.cpp:200] relu3 needs backward computation.
I0426 20:49:36.682844 31562 net.cpp:200] ip3 needs backward computation.
I0426 20:49:36.682847 31562 net.cpp:200] relu2 needs backward computation.
I0426 20:49:36.682850 31562 net.cpp:200] ip2 needs backward computation.
I0426 20:49:36.682852 31562 net.cpp:200] relu1 needs backward computation.
I0426 20:49:36.682854 31562 net.cpp:200] ip1 needs backward computation.
I0426 20:49:36.682868 31562 net.cpp:200] pool0 needs backward computation.
I0426 20:49:36.682871 31562 net.cpp:200] conv0 needs backward computation.
I0426 20:49:36.682874 31562 net.cpp:202] mnist does not need backward computation.
I0426 20:49:36.682878 31562 net.cpp:244] This network produces output loss
I0426 20:49:36.682885 31562 net.cpp:257] Network initialization done.
I0426 20:49:36.683203 31562 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test40.prototxt
I0426 20:49:36.683245 31562 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:36.683320 31562 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:36.683377 31562 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:36.683421 31562 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:36.683432 31562 net.cpp:86] Creating Layer mnist
I0426 20:49:36.683437 31562 net.cpp:382] mnist -> data
I0426 20:49:36.683444 31562 net.cpp:382] mnist -> label
I0426 20:49:36.683521 31562 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:36.684725 31562 net.cpp:124] Setting up mnist
I0426 20:49:36.684751 31562 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:36.684756 31562 net.cpp:131] Top shape: 100 (100)
I0426 20:49:36.684759 31562 net.cpp:139] Memory required for data: 314000
I0426 20:49:36.684762 31562 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:36.684784 31562 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:36.684787 31562 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:36.684792 31562 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:36.684798 31562 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:36.684945 31562 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:36.684953 31562 net.cpp:131] Top shape: 100 (100)
I0426 20:49:36.684957 31562 net.cpp:131] Top shape: 100 (100)
I0426 20:49:36.684960 31562 net.cpp:139] Memory required for data: 314800
I0426 20:49:36.684974 31562 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:36.684984 31562 net.cpp:86] Creating Layer conv0
I0426 20:49:36.684988 31562 net.cpp:408] conv0 <- data
I0426 20:49:36.684993 31562 net.cpp:382] conv0 -> conv0
I0426 20:49:36.686527 31562 net.cpp:124] Setting up conv0
I0426 20:49:36.686540 31562 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:49:36.686543 31562 net.cpp:139] Memory required for data: 6074800
I0426 20:49:36.686553 31562 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:36.686558 31562 net.cpp:86] Creating Layer pool0
I0426 20:49:36.686561 31562 net.cpp:408] pool0 <- conv0
I0426 20:49:36.686565 31562 net.cpp:382] pool0 -> pool0
I0426 20:49:36.686614 31562 net.cpp:124] Setting up pool0
I0426 20:49:36.686619 31562 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:49:36.686621 31562 net.cpp:139] Memory required for data: 7514800
I0426 20:49:36.686625 31562 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:36.686630 31562 net.cpp:86] Creating Layer ip1
I0426 20:49:36.686633 31562 net.cpp:408] ip1 <- pool0
I0426 20:49:36.686637 31562 net.cpp:382] ip1 -> ip1
I0426 20:49:36.693931 31562 net.cpp:124] Setting up ip1
I0426 20:49:36.693943 31562 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:36.693958 31562 net.cpp:139] Memory required for data: 7634800
I0426 20:49:36.693964 31562 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:36.693970 31562 net.cpp:86] Creating Layer relu1
I0426 20:49:36.693974 31562 net.cpp:408] relu1 <- ip1
I0426 20:49:36.693977 31562 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:36.694160 31562 net.cpp:124] Setting up relu1
I0426 20:49:36.694169 31562 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:36.694172 31562 net.cpp:139] Memory required for data: 7754800
I0426 20:49:36.694175 31562 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:36.694180 31562 net.cpp:86] Creating Layer ip2
I0426 20:49:36.694182 31562 net.cpp:408] ip2 <- ip1
I0426 20:49:36.694187 31562 net.cpp:382] ip2 -> ip2
I0426 20:49:36.694772 31562 net.cpp:124] Setting up ip2
I0426 20:49:36.694779 31562 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:36.694782 31562 net.cpp:139] Memory required for data: 7874800
I0426 20:49:36.694805 31562 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:36.694809 31562 net.cpp:86] Creating Layer relu2
I0426 20:49:36.694813 31562 net.cpp:408] relu2 <- ip2
I0426 20:49:36.694816 31562 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:36.695650 31562 net.cpp:124] Setting up relu2
I0426 20:49:36.695662 31562 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:36.695677 31562 net.cpp:139] Memory required for data: 7994800
I0426 20:49:36.695679 31562 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:36.695686 31562 net.cpp:86] Creating Layer ip3
I0426 20:49:36.695689 31562 net.cpp:408] ip3 <- ip2
I0426 20:49:36.695710 31562 net.cpp:382] ip3 -> ip3
I0426 20:49:36.695835 31562 net.cpp:124] Setting up ip3
I0426 20:49:36.695861 31562 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:36.695865 31562 net.cpp:139] Memory required for data: 7998800
I0426 20:49:36.695874 31562 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:36.695896 31562 net.cpp:86] Creating Layer relu3
I0426 20:49:36.695901 31562 net.cpp:408] relu3 <- ip3
I0426 20:49:36.695907 31562 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:36.696071 31562 net.cpp:124] Setting up relu3
I0426 20:49:36.696080 31562 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:36.696084 31562 net.cpp:139] Memory required for data: 8002800
I0426 20:49:36.696086 31562 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:36.696091 31562 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:36.696094 31562 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:36.696099 31562 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:36.696105 31562 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:36.696137 31562 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:36.696142 31562 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:36.696159 31562 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:36.696163 31562 net.cpp:139] Memory required for data: 8010800
I0426 20:49:36.696166 31562 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:36.696171 31562 net.cpp:86] Creating Layer accuracy
I0426 20:49:36.696173 31562 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:36.696177 31562 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:36.696182 31562 net.cpp:382] accuracy -> accuracy
I0426 20:49:36.696188 31562 net.cpp:124] Setting up accuracy
I0426 20:49:36.696192 31562 net.cpp:131] Top shape: (1)
I0426 20:49:36.696194 31562 net.cpp:139] Memory required for data: 8010804
I0426 20:49:36.696197 31562 layer_factory.hpp:77] Creating layer loss
I0426 20:49:36.696202 31562 net.cpp:86] Creating Layer loss
I0426 20:49:36.696218 31562 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:36.696223 31562 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:36.696238 31562 net.cpp:382] loss -> loss
I0426 20:49:36.696243 31562 layer_factory.hpp:77] Creating layer loss
I0426 20:49:36.696497 31562 net.cpp:124] Setting up loss
I0426 20:49:36.696506 31562 net.cpp:131] Top shape: (1)
I0426 20:49:36.696509 31562 net.cpp:134]     with loss weight 1
I0426 20:49:36.696516 31562 net.cpp:139] Memory required for data: 8010808
I0426 20:49:36.696518 31562 net.cpp:200] loss needs backward computation.
I0426 20:49:36.696522 31562 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:36.696526 31562 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:36.696528 31562 net.cpp:200] relu3 needs backward computation.
I0426 20:49:36.696530 31562 net.cpp:200] ip3 needs backward computation.
I0426 20:49:36.696533 31562 net.cpp:200] relu2 needs backward computation.
I0426 20:49:36.696537 31562 net.cpp:200] ip2 needs backward computation.
I0426 20:49:36.696538 31562 net.cpp:200] relu1 needs backward computation.
I0426 20:49:36.696542 31562 net.cpp:200] ip1 needs backward computation.
I0426 20:49:36.696544 31562 net.cpp:200] pool0 needs backward computation.
I0426 20:49:36.696547 31562 net.cpp:200] conv0 needs backward computation.
I0426 20:49:36.696550 31562 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:36.696553 31562 net.cpp:202] mnist does not need backward computation.
I0426 20:49:36.696557 31562 net.cpp:244] This network produces output accuracy
I0426 20:49:36.696559 31562 net.cpp:244] This network produces output loss
I0426 20:49:36.696580 31562 net.cpp:257] Network initialization done.
I0426 20:49:36.696626 31562 solver.cpp:56] Solver scaffolding done.
I0426 20:49:36.696897 31562 caffe.cpp:248] Starting Optimization
I0426 20:49:36.696903 31562 solver.cpp:273] Solving LeNet
I0426 20:49:36.696907 31562 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:36.698890 31562 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:36.705000 31562 blocking_queue.cpp:49] Waiting for data
I0426 20:49:36.775599 31569 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:36.776264 31562 solver.cpp:398]     Test net output #0: accuracy = 0.1754
I0426 20:49:36.776283 31562 solver.cpp:398]     Test net output #1: loss = 2.2761 (* 1 = 2.2761 loss)
I0426 20:49:36.779289 31562 solver.cpp:219] Iteration 0 (-4.44721e-31 iter/s, 0.0823572s/100 iters), loss = 2.28155
I0426 20:49:36.779322 31562 solver.cpp:238]     Train net output #0: loss = 2.28155 (* 1 = 2.28155 loss)
I0426 20:49:36.779348 31562 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:36.898186 31562 solver.cpp:219] Iteration 100 (841.386 iter/s, 0.118852s/100 iters), loss = 0.500406
I0426 20:49:36.898227 31562 solver.cpp:238]     Train net output #0: loss = 0.500406 (* 1 = 0.500406 loss)
I0426 20:49:36.898234 31562 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:37.010283 31562 solver.cpp:219] Iteration 200 (892.376 iter/s, 0.11206s/100 iters), loss = 0.340765
I0426 20:49:37.010308 31562 solver.cpp:238]     Train net output #0: loss = 0.340765 (* 1 = 0.340765 loss)
I0426 20:49:37.010313 31562 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:37.125800 31562 solver.cpp:219] Iteration 300 (865.925 iter/s, 0.115483s/100 iters), loss = 0.379558
I0426 20:49:37.125840 31562 solver.cpp:238]     Train net output #0: loss = 0.379558 (* 1 = 0.379558 loss)
I0426 20:49:37.125846 31562 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:37.236210 31562 solver.cpp:219] Iteration 400 (906.122 iter/s, 0.11036s/100 iters), loss = 0.558712
I0426 20:49:37.236249 31562 solver.cpp:238]     Train net output #0: loss = 0.558712 (* 1 = 0.558712 loss)
I0426 20:49:37.236254 31562 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:37.344537 31562 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:37.421521 31569 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:37.422195 31562 solver.cpp:398]     Test net output #0: accuracy = 0.8668
I0426 20:49:37.422217 31562 solver.cpp:398]     Test net output #1: loss = 0.357935 (* 1 = 0.357935 loss)
I0426 20:49:37.423228 31562 solver.cpp:219] Iteration 500 (534.816 iter/s, 0.18698s/100 iters), loss = 0.656505
I0426 20:49:37.423292 31562 solver.cpp:238]     Train net output #0: loss = 0.656505 (* 1 = 0.656505 loss)
I0426 20:49:37.423300 31562 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:37.541445 31562 solver.cpp:219] Iteration 600 (846.427 iter/s, 0.118144s/100 iters), loss = 0.208492
I0426 20:49:37.541488 31562 solver.cpp:238]     Train net output #0: loss = 0.208492 (* 1 = 0.208492 loss)
I0426 20:49:37.541494 31562 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:37.652743 31562 solver.cpp:219] Iteration 700 (898.923 iter/s, 0.111244s/100 iters), loss = 0.380156
I0426 20:49:37.652782 31562 solver.cpp:238]     Train net output #0: loss = 0.380156 (* 1 = 0.380156 loss)
I0426 20:49:37.652804 31562 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:37.760746 31562 solver.cpp:219] Iteration 800 (926.328 iter/s, 0.107953s/100 iters), loss = 0.375172
I0426 20:49:37.760784 31562 solver.cpp:238]     Train net output #0: loss = 0.375172 (* 1 = 0.375172 loss)
I0426 20:49:37.760790 31562 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:37.871182 31562 solver.cpp:219] Iteration 900 (905.776 iter/s, 0.110403s/100 iters), loss = 0.257805
I0426 20:49:37.871206 31562 solver.cpp:238]     Train net output #0: loss = 0.257805 (* 1 = 0.257805 loss)
I0426 20:49:37.871212 31562 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:37.910945 31568 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:37.985757 31562 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:38.004014 31562 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:38.011637 31562 solver.cpp:311] Iteration 1000, loss = 0.248957
I0426 20:49:38.011659 31562 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:38.087606 31569 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:38.088276 31562 solver.cpp:398]     Test net output #0: accuracy = 0.8783
I0426 20:49:38.088299 31562 solver.cpp:398]     Test net output #1: loss = 0.314029 (* 1 = 0.314029 loss)
I0426 20:49:38.088304 31562 solver.cpp:316] Optimization Done.
I0426 20:49:38.088306 31562 caffe.cpp:259] Optimization Done.
