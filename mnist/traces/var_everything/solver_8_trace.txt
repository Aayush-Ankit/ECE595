I0426 20:48:30.347503 31269 caffe.cpp:218] Using GPUs 0
I0426 20:48:30.384999 31269 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:30.849532 31269 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test8.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:30.849699 31269 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test8.prototxt
I0426 20:48:30.849962 31269 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:30.849975 31269 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:30.850036 31269 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:30.850093 31269 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:30.850178 31269 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:30.850213 31269 net.cpp:86] Creating Layer mnist
I0426 20:48:30.850220 31269 net.cpp:382] mnist -> data
I0426 20:48:30.850239 31269 net.cpp:382] mnist -> label
I0426 20:48:30.851223 31269 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:30.853440 31269 net.cpp:124] Setting up mnist
I0426 20:48:30.853471 31269 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:30.853476 31269 net.cpp:131] Top shape: 64 (64)
I0426 20:48:30.853478 31269 net.cpp:139] Memory required for data: 200960
I0426 20:48:30.853483 31269 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:30.853538 31269 net.cpp:86] Creating Layer ip1
I0426 20:48:30.853543 31269 net.cpp:408] ip1 <- data
I0426 20:48:30.853552 31269 net.cpp:382] ip1 -> ip1
I0426 20:48:30.855038 31269 net.cpp:124] Setting up ip1
I0426 20:48:30.855051 31269 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:30.855053 31269 net.cpp:139] Memory required for data: 226560
I0426 20:48:30.855065 31269 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:30.855074 31269 net.cpp:86] Creating Layer relu1
I0426 20:48:30.855077 31269 net.cpp:408] relu1 <- ip1
I0426 20:48:30.855098 31269 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:31.086815 31269 net.cpp:124] Setting up relu1
I0426 20:48:31.086856 31269 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:31.086860 31269 net.cpp:139] Memory required for data: 252160
I0426 20:48:31.086866 31269 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:31.086879 31269 net.cpp:86] Creating Layer ip2
I0426 20:48:31.086918 31269 net.cpp:408] ip2 <- ip1
I0426 20:48:31.086926 31269 net.cpp:382] ip2 -> ip2
I0426 20:48:31.088110 31269 net.cpp:124] Setting up ip2
I0426 20:48:31.088122 31269 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:31.088126 31269 net.cpp:139] Memory required for data: 328960
I0426 20:48:31.088135 31269 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:31.088142 31269 net.cpp:86] Creating Layer relu2
I0426 20:48:31.088145 31269 net.cpp:408] relu2 <- ip2
I0426 20:48:31.088150 31269 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:31.088984 31269 net.cpp:124] Setting up relu2
I0426 20:48:31.089011 31269 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:31.089015 31269 net.cpp:139] Memory required for data: 405760
I0426 20:48:31.089020 31269 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:31.089026 31269 net.cpp:86] Creating Layer ip3
I0426 20:48:31.089030 31269 net.cpp:408] ip3 <- ip2
I0426 20:48:31.089036 31269 net.cpp:382] ip3 -> ip3
I0426 20:48:31.090029 31269 net.cpp:124] Setting up ip3
I0426 20:48:31.090056 31269 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:31.090060 31269 net.cpp:139] Memory required for data: 408320
I0426 20:48:31.090070 31269 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:31.090075 31269 net.cpp:86] Creating Layer relu3
I0426 20:48:31.090078 31269 net.cpp:408] relu3 <- ip3
I0426 20:48:31.090097 31269 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:31.090293 31269 net.cpp:124] Setting up relu3
I0426 20:48:31.090302 31269 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:31.090306 31269 net.cpp:139] Memory required for data: 410880
I0426 20:48:31.090308 31269 layer_factory.hpp:77] Creating layer loss
I0426 20:48:31.090313 31269 net.cpp:86] Creating Layer loss
I0426 20:48:31.090317 31269 net.cpp:408] loss <- ip3
I0426 20:48:31.090320 31269 net.cpp:408] loss <- label
I0426 20:48:31.090327 31269 net.cpp:382] loss -> loss
I0426 20:48:31.090343 31269 layer_factory.hpp:77] Creating layer loss
I0426 20:48:31.090544 31269 net.cpp:124] Setting up loss
I0426 20:48:31.090553 31269 net.cpp:131] Top shape: (1)
I0426 20:48:31.090556 31269 net.cpp:134]     with loss weight 1
I0426 20:48:31.090570 31269 net.cpp:139] Memory required for data: 410884
I0426 20:48:31.090574 31269 net.cpp:200] loss needs backward computation.
I0426 20:48:31.090592 31269 net.cpp:200] relu3 needs backward computation.
I0426 20:48:31.090595 31269 net.cpp:200] ip3 needs backward computation.
I0426 20:48:31.090597 31269 net.cpp:200] relu2 needs backward computation.
I0426 20:48:31.090600 31269 net.cpp:200] ip2 needs backward computation.
I0426 20:48:31.090602 31269 net.cpp:200] relu1 needs backward computation.
I0426 20:48:31.090606 31269 net.cpp:200] ip1 needs backward computation.
I0426 20:48:31.090610 31269 net.cpp:202] mnist does not need backward computation.
I0426 20:48:31.090612 31269 net.cpp:244] This network produces output loss
I0426 20:48:31.090620 31269 net.cpp:257] Network initialization done.
I0426 20:48:31.090840 31269 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test8.prototxt
I0426 20:48:31.090862 31269 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:31.090929 31269 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:31.090996 31269 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:31.091056 31269 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:31.091068 31269 net.cpp:86] Creating Layer mnist
I0426 20:48:31.091073 31269 net.cpp:382] mnist -> data
I0426 20:48:31.091079 31269 net.cpp:382] mnist -> label
I0426 20:48:31.091164 31269 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:31.092368 31269 net.cpp:124] Setting up mnist
I0426 20:48:31.092397 31269 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:31.092402 31269 net.cpp:131] Top shape: 100 (100)
I0426 20:48:31.092406 31269 net.cpp:139] Memory required for data: 314000
I0426 20:48:31.092409 31269 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:31.092444 31269 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:31.092448 31269 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:31.092468 31269 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:31.092474 31269 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:31.092576 31269 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:31.092584 31269 net.cpp:131] Top shape: 100 (100)
I0426 20:48:31.092588 31269 net.cpp:131] Top shape: 100 (100)
I0426 20:48:31.092592 31269 net.cpp:139] Memory required for data: 314800
I0426 20:48:31.092594 31269 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:31.092600 31269 net.cpp:86] Creating Layer ip1
I0426 20:48:31.092603 31269 net.cpp:408] ip1 <- data
I0426 20:48:31.092608 31269 net.cpp:382] ip1 -> ip1
I0426 20:48:31.093190 31269 net.cpp:124] Setting up ip1
I0426 20:48:31.093199 31269 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:31.093202 31269 net.cpp:139] Memory required for data: 354800
I0426 20:48:31.093210 31269 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:31.093215 31269 net.cpp:86] Creating Layer relu1
I0426 20:48:31.093219 31269 net.cpp:408] relu1 <- ip1
I0426 20:48:31.093222 31269 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:31.094071 31269 net.cpp:124] Setting up relu1
I0426 20:48:31.094084 31269 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:31.094089 31269 net.cpp:139] Memory required for data: 394800
I0426 20:48:31.094091 31269 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:31.094099 31269 net.cpp:86] Creating Layer ip2
I0426 20:48:31.094102 31269 net.cpp:408] ip2 <- ip1
I0426 20:48:31.094107 31269 net.cpp:382] ip2 -> ip2
I0426 20:48:31.094434 31269 net.cpp:124] Setting up ip2
I0426 20:48:31.094441 31269 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:31.094444 31269 net.cpp:139] Memory required for data: 514800
I0426 20:48:31.094454 31269 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:31.094457 31269 net.cpp:86] Creating Layer relu2
I0426 20:48:31.094460 31269 net.cpp:408] relu2 <- ip2
I0426 20:48:31.094471 31269 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:31.094632 31269 net.cpp:124] Setting up relu2
I0426 20:48:31.094641 31269 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:31.094645 31269 net.cpp:139] Memory required for data: 634800
I0426 20:48:31.094663 31269 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:31.094668 31269 net.cpp:86] Creating Layer ip3
I0426 20:48:31.094671 31269 net.cpp:408] ip3 <- ip2
I0426 20:48:31.094686 31269 net.cpp:382] ip3 -> ip3
I0426 20:48:31.094789 31269 net.cpp:124] Setting up ip3
I0426 20:48:31.094796 31269 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:31.094799 31269 net.cpp:139] Memory required for data: 638800
I0426 20:48:31.094806 31269 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:31.094810 31269 net.cpp:86] Creating Layer relu3
I0426 20:48:31.094813 31269 net.cpp:408] relu3 <- ip3
I0426 20:48:31.094823 31269 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:31.094990 31269 net.cpp:124] Setting up relu3
I0426 20:48:31.094997 31269 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:31.095000 31269 net.cpp:139] Memory required for data: 642800
I0426 20:48:31.095003 31269 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:48:31.095010 31269 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:48:31.095012 31269 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:48:31.095016 31269 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:48:31.095021 31269 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:48:31.095054 31269 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:48:31.095058 31269 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:31.095062 31269 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:31.095065 31269 net.cpp:139] Memory required for data: 650800
I0426 20:48:31.095068 31269 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:31.095073 31269 net.cpp:86] Creating Layer accuracy
I0426 20:48:31.095077 31269 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:48:31.095079 31269 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:31.095083 31269 net.cpp:382] accuracy -> accuracy
I0426 20:48:31.095090 31269 net.cpp:124] Setting up accuracy
I0426 20:48:31.095093 31269 net.cpp:131] Top shape: (1)
I0426 20:48:31.095096 31269 net.cpp:139] Memory required for data: 650804
I0426 20:48:31.095099 31269 layer_factory.hpp:77] Creating layer loss
I0426 20:48:31.095103 31269 net.cpp:86] Creating Layer loss
I0426 20:48:31.095106 31269 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:48:31.095109 31269 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:31.095113 31269 net.cpp:382] loss -> loss
I0426 20:48:31.095118 31269 layer_factory.hpp:77] Creating layer loss
I0426 20:48:31.095341 31269 net.cpp:124] Setting up loss
I0426 20:48:31.095350 31269 net.cpp:131] Top shape: (1)
I0426 20:48:31.095353 31269 net.cpp:134]     with loss weight 1
I0426 20:48:31.095360 31269 net.cpp:139] Memory required for data: 650808
I0426 20:48:31.095362 31269 net.cpp:200] loss needs backward computation.
I0426 20:48:31.095366 31269 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:31.095369 31269 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:48:31.095372 31269 net.cpp:200] relu3 needs backward computation.
I0426 20:48:31.095376 31269 net.cpp:200] ip3 needs backward computation.
I0426 20:48:31.095377 31269 net.cpp:200] relu2 needs backward computation.
I0426 20:48:31.095381 31269 net.cpp:200] ip2 needs backward computation.
I0426 20:48:31.095383 31269 net.cpp:200] relu1 needs backward computation.
I0426 20:48:31.095386 31269 net.cpp:200] ip1 needs backward computation.
I0426 20:48:31.095403 31269 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:31.095407 31269 net.cpp:202] mnist does not need backward computation.
I0426 20:48:31.095408 31269 net.cpp:244] This network produces output accuracy
I0426 20:48:31.095412 31269 net.cpp:244] This network produces output loss
I0426 20:48:31.095420 31269 net.cpp:257] Network initialization done.
I0426 20:48:31.095465 31269 solver.cpp:56] Solver scaffolding done.
I0426 20:48:31.095721 31269 caffe.cpp:248] Starting Optimization
I0426 20:48:31.095727 31269 solver.cpp:273] Solving LeNet
I0426 20:48:31.095731 31269 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:31.097323 31269 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:31.098919 31269 blocking_queue.cpp:49] Waiting for data
I0426 20:48:31.171111 31276 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:31.171648 31269 solver.cpp:398]     Test net output #0: accuracy = 0.1337
I0426 20:48:31.171680 31269 solver.cpp:398]     Test net output #1: loss = 2.32666 (* 1 = 2.32666 loss)
I0426 20:48:31.172564 31269 solver.cpp:219] Iteration 0 (0 iter/s, 0.0768053s/100 iters), loss = 2.30983
I0426 20:48:31.172605 31269 solver.cpp:238]     Train net output #0: loss = 2.30983 (* 1 = 2.30983 loss)
I0426 20:48:31.172623 31269 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:31.229828 31269 solver.cpp:219] Iteration 100 (1747.96 iter/s, 0.0572094s/100 iters), loss = 0.823637
I0426 20:48:31.229862 31269 solver.cpp:238]     Train net output #0: loss = 0.823637 (* 1 = 0.823637 loss)
I0426 20:48:31.229876 31269 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:31.280827 31269 solver.cpp:219] Iteration 200 (1962.35 iter/s, 0.0509594s/100 iters), loss = 0.885772
I0426 20:48:31.280851 31269 solver.cpp:238]     Train net output #0: loss = 0.885772 (* 1 = 0.885772 loss)
I0426 20:48:31.280858 31269 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:31.327862 31269 solver.cpp:219] Iteration 300 (2127.54 iter/s, 0.0470026s/100 iters), loss = 0.741289
I0426 20:48:31.327886 31269 solver.cpp:238]     Train net output #0: loss = 0.741289 (* 1 = 0.741289 loss)
I0426 20:48:31.327893 31269 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:31.374037 31269 solver.cpp:219] Iteration 400 (2167.15 iter/s, 0.0461436s/100 iters), loss = 0.614784
I0426 20:48:31.374060 31269 solver.cpp:238]     Train net output #0: loss = 0.614784 (* 1 = 0.614784 loss)
I0426 20:48:31.374066 31269 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:31.419697 31269 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:31.494194 31276 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:31.494650 31269 solver.cpp:398]     Test net output #0: accuracy = 0.7506
I0426 20:48:31.494668 31269 solver.cpp:398]     Test net output #1: loss = 0.69243 (* 1 = 0.69243 loss)
I0426 20:48:31.495213 31269 solver.cpp:219] Iteration 500 (825.477 iter/s, 0.121142s/100 iters), loss = 0.721527
I0426 20:48:31.495234 31269 solver.cpp:238]     Train net output #0: loss = 0.721527 (* 1 = 0.721527 loss)
I0426 20:48:31.495255 31269 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:31.547816 31269 solver.cpp:219] Iteration 600 (1902.11 iter/s, 0.0525732s/100 iters), loss = 0.575034
I0426 20:48:31.547839 31269 solver.cpp:238]     Train net output #0: loss = 0.575034 (* 1 = 0.575034 loss)
I0426 20:48:31.547845 31269 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:31.594095 31269 solver.cpp:219] Iteration 700 (2162.22 iter/s, 0.0462488s/100 iters), loss = 0.491923
I0426 20:48:31.594120 31269 solver.cpp:238]     Train net output #0: loss = 0.491923 (* 1 = 0.491923 loss)
I0426 20:48:31.594125 31269 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:31.641070 31269 solver.cpp:219] Iteration 800 (2130.19 iter/s, 0.0469443s/100 iters), loss = 0.611374
I0426 20:48:31.641095 31269 solver.cpp:238]     Train net output #0: loss = 0.611374 (* 1 = 0.611374 loss)
I0426 20:48:31.641101 31269 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:31.687060 31269 solver.cpp:219] Iteration 900 (2175.89 iter/s, 0.0459581s/100 iters), loss = 0.752776
I0426 20:48:31.687083 31269 solver.cpp:238]     Train net output #0: loss = 0.752776 (* 1 = 0.752776 loss)
I0426 20:48:31.687088 31269 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:31.703099 31275 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:31.732928 31269 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:31.734812 31269 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:31.735965 31269 solver.cpp:311] Iteration 1000, loss = 0.384511
I0426 20:48:31.735980 31269 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:31.813213 31276 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:31.813724 31269 solver.cpp:398]     Test net output #0: accuracy = 0.8455
I0426 20:48:31.813752 31269 solver.cpp:398]     Test net output #1: loss = 0.433122 (* 1 = 0.433122 loss)
I0426 20:48:31.813769 31269 solver.cpp:316] Optimization Done.
I0426 20:48:31.813774 31269 caffe.cpp:259] Optimization Done.
