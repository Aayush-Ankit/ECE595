I0426 20:52:07.106407 32129 caffe.cpp:218] Using GPUs 0
I0426 20:52:07.143811 32129 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:07.661933 32129 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test104.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:07.662082 32129 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test104.prototxt
I0426 20:52:07.662483 32129 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:07.662500 32129 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:07.662600 32129 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:07.662674 32129 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:07.662777 32129 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:07.662801 32129 net.cpp:86] Creating Layer mnist
I0426 20:52:07.662808 32129 net.cpp:382] mnist -> data
I0426 20:52:07.662830 32129 net.cpp:382] mnist -> label
I0426 20:52:07.663939 32129 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:07.666471 32129 net.cpp:124] Setting up mnist
I0426 20:52:07.666496 32129 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:07.666502 32129 net.cpp:131] Top shape: 64 (64)
I0426 20:52:07.666507 32129 net.cpp:139] Memory required for data: 200960
I0426 20:52:07.666513 32129 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:07.666530 32129 net.cpp:86] Creating Layer conv0
I0426 20:52:07.666570 32129 net.cpp:408] conv0 <- data
I0426 20:52:07.666581 32129 net.cpp:382] conv0 -> conv0
I0426 20:52:07.945827 32129 net.cpp:124] Setting up conv0
I0426 20:52:07.945852 32129 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:07.945857 32129 net.cpp:139] Memory required for data: 3887360
I0426 20:52:07.945870 32129 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:07.945883 32129 net.cpp:86] Creating Layer pool0
I0426 20:52:07.945886 32129 net.cpp:408] pool0 <- conv0
I0426 20:52:07.945906 32129 net.cpp:382] pool0 -> pool0
I0426 20:52:07.945963 32129 net.cpp:124] Setting up pool0
I0426 20:52:07.945971 32129 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:07.945972 32129 net.cpp:139] Memory required for data: 4808960
I0426 20:52:07.945976 32129 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:07.945986 32129 net.cpp:86] Creating Layer conv1
I0426 20:52:07.945991 32129 net.cpp:408] conv1 <- pool0
I0426 20:52:07.945996 32129 net.cpp:382] conv1 -> conv1
I0426 20:52:07.948660 32129 net.cpp:124] Setting up conv1
I0426 20:52:07.948674 32129 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:52:07.948678 32129 net.cpp:139] Memory required for data: 4972800
I0426 20:52:07.948685 32129 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:07.948693 32129 net.cpp:86] Creating Layer pool1
I0426 20:52:07.948696 32129 net.cpp:408] pool1 <- conv1
I0426 20:52:07.948701 32129 net.cpp:382] pool1 -> pool1
I0426 20:52:07.948735 32129 net.cpp:124] Setting up pool1
I0426 20:52:07.948742 32129 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:52:07.948745 32129 net.cpp:139] Memory required for data: 5013760
I0426 20:52:07.948748 32129 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:07.948755 32129 net.cpp:86] Creating Layer ip1
I0426 20:52:07.948757 32129 net.cpp:408] ip1 <- pool1
I0426 20:52:07.948762 32129 net.cpp:382] ip1 -> ip1
I0426 20:52:07.948976 32129 net.cpp:124] Setting up ip1
I0426 20:52:07.948985 32129 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:07.948988 32129 net.cpp:139] Memory required for data: 5039360
I0426 20:52:07.948995 32129 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:07.949002 32129 net.cpp:86] Creating Layer relu1
I0426 20:52:07.949004 32129 net.cpp:408] relu1 <- ip1
I0426 20:52:07.949008 32129 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:07.949198 32129 net.cpp:124] Setting up relu1
I0426 20:52:07.949205 32129 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:07.949208 32129 net.cpp:139] Memory required for data: 5064960
I0426 20:52:07.949211 32129 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:07.949218 32129 net.cpp:86] Creating Layer ip2
I0426 20:52:07.949220 32129 net.cpp:408] ip2 <- ip1
I0426 20:52:07.949225 32129 net.cpp:382] ip2 -> ip2
I0426 20:52:07.949378 32129 net.cpp:124] Setting up ip2
I0426 20:52:07.949385 32129 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:07.949388 32129 net.cpp:139] Memory required for data: 5090560
I0426 20:52:07.949394 32129 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:07.949399 32129 net.cpp:86] Creating Layer relu2
I0426 20:52:07.949403 32129 net.cpp:408] relu2 <- ip2
I0426 20:52:07.949406 32129 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:07.950196 32129 net.cpp:124] Setting up relu2
I0426 20:52:07.950208 32129 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:07.950228 32129 net.cpp:139] Memory required for data: 5116160
I0426 20:52:07.950232 32129 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:07.950238 32129 net.cpp:86] Creating Layer ip3
I0426 20:52:07.950242 32129 net.cpp:408] ip3 <- ip2
I0426 20:52:07.950263 32129 net.cpp:382] ip3 -> ip3
I0426 20:52:07.950376 32129 net.cpp:124] Setting up ip3
I0426 20:52:07.950383 32129 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:07.950387 32129 net.cpp:139] Memory required for data: 5118720
I0426 20:52:07.950394 32129 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:07.950399 32129 net.cpp:86] Creating Layer relu3
I0426 20:52:07.950402 32129 net.cpp:408] relu3 <- ip3
I0426 20:52:07.950407 32129 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:07.950579 32129 net.cpp:124] Setting up relu3
I0426 20:52:07.950587 32129 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:07.950590 32129 net.cpp:139] Memory required for data: 5121280
I0426 20:52:07.950593 32129 layer_factory.hpp:77] Creating layer loss
I0426 20:52:07.950598 32129 net.cpp:86] Creating Layer loss
I0426 20:52:07.950601 32129 net.cpp:408] loss <- ip3
I0426 20:52:07.950605 32129 net.cpp:408] loss <- label
I0426 20:52:07.950610 32129 net.cpp:382] loss -> loss
I0426 20:52:07.950626 32129 layer_factory.hpp:77] Creating layer loss
I0426 20:52:07.950855 32129 net.cpp:124] Setting up loss
I0426 20:52:07.950865 32129 net.cpp:131] Top shape: (1)
I0426 20:52:07.950867 32129 net.cpp:134]     with loss weight 1
I0426 20:52:07.950881 32129 net.cpp:139] Memory required for data: 5121284
I0426 20:52:07.950886 32129 net.cpp:200] loss needs backward computation.
I0426 20:52:07.950889 32129 net.cpp:200] relu3 needs backward computation.
I0426 20:52:07.950891 32129 net.cpp:200] ip3 needs backward computation.
I0426 20:52:07.950894 32129 net.cpp:200] relu2 needs backward computation.
I0426 20:52:07.950897 32129 net.cpp:200] ip2 needs backward computation.
I0426 20:52:07.950901 32129 net.cpp:200] relu1 needs backward computation.
I0426 20:52:07.950902 32129 net.cpp:200] ip1 needs backward computation.
I0426 20:52:07.950906 32129 net.cpp:200] pool1 needs backward computation.
I0426 20:52:07.950908 32129 net.cpp:200] conv1 needs backward computation.
I0426 20:52:07.950911 32129 net.cpp:200] pool0 needs backward computation.
I0426 20:52:07.950914 32129 net.cpp:200] conv0 needs backward computation.
I0426 20:52:07.950917 32129 net.cpp:202] mnist does not need backward computation.
I0426 20:52:07.950920 32129 net.cpp:244] This network produces output loss
I0426 20:52:07.950929 32129 net.cpp:257] Network initialization done.
I0426 20:52:07.951273 32129 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test104.prototxt
I0426 20:52:07.951318 32129 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:07.951419 32129 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:07.951494 32129 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:07.951537 32129 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:07.951548 32129 net.cpp:86] Creating Layer mnist
I0426 20:52:07.951553 32129 net.cpp:382] mnist -> data
I0426 20:52:07.951560 32129 net.cpp:382] mnist -> label
I0426 20:52:07.951640 32129 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:07.953569 32129 net.cpp:124] Setting up mnist
I0426 20:52:07.953583 32129 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:07.953588 32129 net.cpp:131] Top shape: 100 (100)
I0426 20:52:07.953590 32129 net.cpp:139] Memory required for data: 314000
I0426 20:52:07.953593 32129 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:07.953611 32129 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:07.953614 32129 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:07.953619 32129 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:07.953624 32129 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:07.953663 32129 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:07.953670 32129 net.cpp:131] Top shape: 100 (100)
I0426 20:52:07.953673 32129 net.cpp:131] Top shape: 100 (100)
I0426 20:52:07.953675 32129 net.cpp:139] Memory required for data: 314800
I0426 20:52:07.953678 32129 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:07.953686 32129 net.cpp:86] Creating Layer conv0
I0426 20:52:07.953689 32129 net.cpp:408] conv0 <- data
I0426 20:52:07.953693 32129 net.cpp:382] conv0 -> conv0
I0426 20:52:07.955420 32129 net.cpp:124] Setting up conv0
I0426 20:52:07.955435 32129 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:07.955438 32129 net.cpp:139] Memory required for data: 6074800
I0426 20:52:07.955463 32129 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:07.955494 32129 net.cpp:86] Creating Layer pool0
I0426 20:52:07.955502 32129 net.cpp:408] pool0 <- conv0
I0426 20:52:07.955510 32129 net.cpp:382] pool0 -> pool0
I0426 20:52:07.955567 32129 net.cpp:124] Setting up pool0
I0426 20:52:07.955575 32129 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:07.955579 32129 net.cpp:139] Memory required for data: 7514800
I0426 20:52:07.955584 32129 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:07.955592 32129 net.cpp:86] Creating Layer conv1
I0426 20:52:07.955597 32129 net.cpp:408] conv1 <- pool0
I0426 20:52:07.955603 32129 net.cpp:382] conv1 -> conv1
I0426 20:52:07.958092 32129 net.cpp:124] Setting up conv1
I0426 20:52:07.958106 32129 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:52:07.958111 32129 net.cpp:139] Memory required for data: 7770800
I0426 20:52:07.958135 32129 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:07.958144 32129 net.cpp:86] Creating Layer pool1
I0426 20:52:07.958149 32129 net.cpp:408] pool1 <- conv1
I0426 20:52:07.958164 32129 net.cpp:382] pool1 -> pool1
I0426 20:52:07.958220 32129 net.cpp:124] Setting up pool1
I0426 20:52:07.958227 32129 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:52:07.958230 32129 net.cpp:139] Memory required for data: 7834800
I0426 20:52:07.958233 32129 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:07.958246 32129 net.cpp:86] Creating Layer ip1
I0426 20:52:07.958250 32129 net.cpp:408] ip1 <- pool1
I0426 20:52:07.958256 32129 net.cpp:382] ip1 -> ip1
I0426 20:52:07.958470 32129 net.cpp:124] Setting up ip1
I0426 20:52:07.958478 32129 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:07.958492 32129 net.cpp:139] Memory required for data: 7874800
I0426 20:52:07.958500 32129 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:07.958508 32129 net.cpp:86] Creating Layer relu1
I0426 20:52:07.958513 32129 net.cpp:408] relu1 <- ip1
I0426 20:52:07.958516 32129 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:07.958688 32129 net.cpp:124] Setting up relu1
I0426 20:52:07.958696 32129 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:07.958699 32129 net.cpp:139] Memory required for data: 7914800
I0426 20:52:07.958703 32129 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:07.958710 32129 net.cpp:86] Creating Layer ip2
I0426 20:52:07.958734 32129 net.cpp:408] ip2 <- ip1
I0426 20:52:07.958740 32129 net.cpp:382] ip2 -> ip2
I0426 20:52:07.958915 32129 net.cpp:124] Setting up ip2
I0426 20:52:07.958925 32129 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:07.958927 32129 net.cpp:139] Memory required for data: 7954800
I0426 20:52:07.958933 32129 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:07.958938 32129 net.cpp:86] Creating Layer relu2
I0426 20:52:07.958941 32129 net.cpp:408] relu2 <- ip2
I0426 20:52:07.958945 32129 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:07.959131 32129 net.cpp:124] Setting up relu2
I0426 20:52:07.959141 32129 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:07.959144 32129 net.cpp:139] Memory required for data: 7994800
I0426 20:52:07.959148 32129 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:07.959153 32129 net.cpp:86] Creating Layer ip3
I0426 20:52:07.959156 32129 net.cpp:408] ip3 <- ip2
I0426 20:52:07.959162 32129 net.cpp:382] ip3 -> ip3
I0426 20:52:07.959326 32129 net.cpp:124] Setting up ip3
I0426 20:52:07.959333 32129 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:07.959336 32129 net.cpp:139] Memory required for data: 7998800
I0426 20:52:07.959344 32129 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:07.959352 32129 net.cpp:86] Creating Layer relu3
I0426 20:52:07.959357 32129 net.cpp:408] relu3 <- ip3
I0426 20:52:07.959362 32129 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:07.960301 32129 net.cpp:124] Setting up relu3
I0426 20:52:07.960314 32129 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:07.960316 32129 net.cpp:139] Memory required for data: 8002800
I0426 20:52:07.960332 32129 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:07.960337 32129 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:07.960351 32129 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:07.960356 32129 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:07.960364 32129 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:07.960404 32129 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:07.960412 32129 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:07.960414 32129 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:07.960418 32129 net.cpp:139] Memory required for data: 8010800
I0426 20:52:07.960420 32129 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:07.960427 32129 net.cpp:86] Creating Layer accuracy
I0426 20:52:07.960430 32129 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:07.960434 32129 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:07.960438 32129 net.cpp:382] accuracy -> accuracy
I0426 20:52:07.960444 32129 net.cpp:124] Setting up accuracy
I0426 20:52:07.960449 32129 net.cpp:131] Top shape: (1)
I0426 20:52:07.960451 32129 net.cpp:139] Memory required for data: 8010804
I0426 20:52:07.960455 32129 layer_factory.hpp:77] Creating layer loss
I0426 20:52:07.960461 32129 net.cpp:86] Creating Layer loss
I0426 20:52:07.960465 32129 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:07.960469 32129 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:07.960474 32129 net.cpp:382] loss -> loss
I0426 20:52:07.960479 32129 layer_factory.hpp:77] Creating layer loss
I0426 20:52:07.960714 32129 net.cpp:124] Setting up loss
I0426 20:52:07.960723 32129 net.cpp:131] Top shape: (1)
I0426 20:52:07.960726 32129 net.cpp:134]     with loss weight 1
I0426 20:52:07.960742 32129 net.cpp:139] Memory required for data: 8010808
I0426 20:52:07.960746 32129 net.cpp:200] loss needs backward computation.
I0426 20:52:07.960749 32129 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:07.960753 32129 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:07.960757 32129 net.cpp:200] relu3 needs backward computation.
I0426 20:52:07.960759 32129 net.cpp:200] ip3 needs backward computation.
I0426 20:52:07.960762 32129 net.cpp:200] relu2 needs backward computation.
I0426 20:52:07.960764 32129 net.cpp:200] ip2 needs backward computation.
I0426 20:52:07.960767 32129 net.cpp:200] relu1 needs backward computation.
I0426 20:52:07.960770 32129 net.cpp:200] ip1 needs backward computation.
I0426 20:52:07.960773 32129 net.cpp:200] pool1 needs backward computation.
I0426 20:52:07.960777 32129 net.cpp:200] conv1 needs backward computation.
I0426 20:52:07.960780 32129 net.cpp:200] pool0 needs backward computation.
I0426 20:52:07.960783 32129 net.cpp:200] conv0 needs backward computation.
I0426 20:52:07.960788 32129 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:07.960793 32129 net.cpp:202] mnist does not need backward computation.
I0426 20:52:07.960795 32129 net.cpp:244] This network produces output accuracy
I0426 20:52:07.960799 32129 net.cpp:244] This network produces output loss
I0426 20:52:07.960813 32129 net.cpp:257] Network initialization done.
I0426 20:52:07.960872 32129 solver.cpp:56] Solver scaffolding done.
I0426 20:52:07.961336 32129 caffe.cpp:248] Starting Optimization
I0426 20:52:07.961343 32129 solver.cpp:273] Solving LeNet
I0426 20:52:07.961345 32129 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:07.962188 32129 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:07.967587 32129 blocking_queue.cpp:49] Waiting for data
I0426 20:52:08.036015 32136 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:08.036687 32129 solver.cpp:398]     Test net output #0: accuracy = 0.108
I0426 20:52:08.036721 32129 solver.cpp:398]     Test net output #1: loss = 2.30746 (* 1 = 2.30746 loss)
I0426 20:52:08.040617 32129 solver.cpp:219] Iteration 0 (-1.42494e-31 iter/s, 0.0792371s/100 iters), loss = 2.30557
I0426 20:52:08.040642 32129 solver.cpp:238]     Train net output #0: loss = 2.30557 (* 1 = 2.30557 loss)
I0426 20:52:08.040653 32129 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:08.150586 32129 solver.cpp:219] Iteration 100 (909.657 iter/s, 0.109932s/100 iters), loss = 1.44289
I0426 20:52:08.150626 32129 solver.cpp:238]     Train net output #0: loss = 1.44289 (* 1 = 1.44289 loss)
I0426 20:52:08.150632 32129 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:08.252682 32129 solver.cpp:219] Iteration 200 (979.953 iter/s, 0.102046s/100 iters), loss = 0.871302
I0426 20:52:08.252707 32129 solver.cpp:238]     Train net output #0: loss = 0.871302 (* 1 = 0.871302 loss)
I0426 20:52:08.252727 32129 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:08.350417 32129 solver.cpp:219] Iteration 300 (1023.53 iter/s, 0.0977009s/100 iters), loss = 1.25857
I0426 20:52:08.350441 32129 solver.cpp:238]     Train net output #0: loss = 1.25857 (* 1 = 1.25857 loss)
I0426 20:52:08.350463 32129 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:08.447366 32129 solver.cpp:219] Iteration 400 (1031.83 iter/s, 0.0969153s/100 iters), loss = 0.887762
I0426 20:52:08.447391 32129 solver.cpp:238]     Train net output #0: loss = 0.887762 (* 1 = 0.887762 loss)
I0426 20:52:08.447412 32129 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:08.548590 32129 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:08.620604 32136 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:08.621296 32129 solver.cpp:398]     Test net output #0: accuracy = 0.5701
I0426 20:52:08.621315 32129 solver.cpp:398]     Test net output #1: loss = 1.05129 (* 1 = 1.05129 loss)
I0426 20:52:08.622301 32129 solver.cpp:219] Iteration 500 (571.768 iter/s, 0.174896s/100 iters), loss = 0.989514
I0426 20:52:08.622367 32129 solver.cpp:238]     Train net output #0: loss = 0.989514 (* 1 = 0.989514 loss)
I0426 20:52:08.622375 32129 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:08.726418 32129 solver.cpp:219] Iteration 600 (961.147 iter/s, 0.104042s/100 iters), loss = 1.16518
I0426 20:52:08.726461 32129 solver.cpp:238]     Train net output #0: loss = 1.16518 (* 1 = 1.16518 loss)
I0426 20:52:08.726467 32129 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:08.827021 32129 solver.cpp:219] Iteration 700 (994.534 iter/s, 0.10055s/100 iters), loss = 0.911901
I0426 20:52:08.827050 32129 solver.cpp:238]     Train net output #0: loss = 0.911901 (* 1 = 0.911901 loss)
I0426 20:52:08.827057 32129 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:08.930706 32129 solver.cpp:219] Iteration 800 (964.821 iter/s, 0.103646s/100 iters), loss = 1.20732
I0426 20:52:08.930730 32129 solver.cpp:238]     Train net output #0: loss = 1.20732 (* 1 = 1.20732 loss)
I0426 20:52:08.930737 32129 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:09.033614 32129 solver.cpp:219] Iteration 900 (972.081 iter/s, 0.102872s/100 iters), loss = 1.26751
I0426 20:52:09.033646 32129 solver.cpp:238]     Train net output #0: loss = 1.26751 (* 1 = 1.26751 loss)
I0426 20:52:09.033655 32129 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:09.069126 32135 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:09.139956 32129 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:09.141377 32129 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:09.142297 32129 solver.cpp:311] Iteration 1000, loss = 1.06245
I0426 20:52:09.142319 32129 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:09.218235 32136 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:09.218890 32129 solver.cpp:398]     Test net output #0: accuracy = 0.5778
I0426 20:52:09.218911 32129 solver.cpp:398]     Test net output #1: loss = 1.01888 (* 1 = 1.01888 loss)
I0426 20:52:09.218925 32129 solver.cpp:316] Optimization Done.
I0426 20:52:09.218928 32129 caffe.cpp:259] Optimization Done.
