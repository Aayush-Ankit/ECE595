I0426 20:53:01.889758 32362 caffe.cpp:218] Using GPUs 0
I0426 20:53:01.919023 32362 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:02.369511 32362 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test127.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:02.369637 32362 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test127.prototxt
I0426 20:53:02.369951 32362 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:02.369979 32362 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:02.370087 32362 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:53:02.370137 32362 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:02.370236 32362 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:02.370256 32362 net.cpp:86] Creating Layer mnist
I0426 20:53:02.370262 32362 net.cpp:382] mnist -> data
I0426 20:53:02.370281 32362 net.cpp:382] mnist -> label
I0426 20:53:02.371240 32362 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:02.373514 32362 net.cpp:124] Setting up mnist
I0426 20:53:02.373545 32362 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:02.373551 32362 net.cpp:131] Top shape: 64 (64)
I0426 20:53:02.373554 32362 net.cpp:139] Memory required for data: 200960
I0426 20:53:02.373560 32362 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:02.373589 32362 net.cpp:86] Creating Layer conv0
I0426 20:53:02.373594 32362 net.cpp:408] conv0 <- data
I0426 20:53:02.373603 32362 net.cpp:382] conv0 -> conv0
I0426 20:53:02.599063 32362 net.cpp:124] Setting up conv0
I0426 20:53:02.599088 32362 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:53:02.599092 32362 net.cpp:139] Memory required for data: 3887360
I0426 20:53:02.599107 32362 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:02.599118 32362 net.cpp:86] Creating Layer pool0
I0426 20:53:02.599123 32362 net.cpp:408] pool0 <- conv0
I0426 20:53:02.599128 32362 net.cpp:382] pool0 -> pool0
I0426 20:53:02.599185 32362 net.cpp:124] Setting up pool0
I0426 20:53:02.599191 32362 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:53:02.599210 32362 net.cpp:139] Memory required for data: 4808960
I0426 20:53:02.599212 32362 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:02.599223 32362 net.cpp:86] Creating Layer conv1
I0426 20:53:02.599226 32362 net.cpp:408] conv1 <- pool0
I0426 20:53:02.599231 32362 net.cpp:382] conv1 -> conv1
I0426 20:53:02.601297 32362 net.cpp:124] Setting up conv1
I0426 20:53:02.601310 32362 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:53:02.601315 32362 net.cpp:139] Memory required for data: 5628160
I0426 20:53:02.601322 32362 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:02.601328 32362 net.cpp:86] Creating Layer pool1
I0426 20:53:02.601332 32362 net.cpp:408] pool1 <- conv1
I0426 20:53:02.601336 32362 net.cpp:382] pool1 -> pool1
I0426 20:53:02.601384 32362 net.cpp:124] Setting up pool1
I0426 20:53:02.601390 32362 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:53:02.601392 32362 net.cpp:139] Memory required for data: 5832960
I0426 20:53:02.601395 32362 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:02.601402 32362 net.cpp:86] Creating Layer ip1
I0426 20:53:02.601405 32362 net.cpp:408] ip1 <- pool1
I0426 20:53:02.601410 32362 net.cpp:382] ip1 -> ip1
I0426 20:53:02.602428 32362 net.cpp:124] Setting up ip1
I0426 20:53:02.602439 32362 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:02.602443 32362 net.cpp:139] Memory required for data: 5835520
I0426 20:53:02.602450 32362 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:02.602457 32362 net.cpp:86] Creating Layer relu1
I0426 20:53:02.602459 32362 net.cpp:408] relu1 <- ip1
I0426 20:53:02.602463 32362 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:02.602651 32362 net.cpp:124] Setting up relu1
I0426 20:53:02.602676 32362 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:02.602679 32362 net.cpp:139] Memory required for data: 5838080
I0426 20:53:02.602684 32362 layer_factory.hpp:77] Creating layer loss
I0426 20:53:02.602690 32362 net.cpp:86] Creating Layer loss
I0426 20:53:02.602710 32362 net.cpp:408] loss <- ip1
I0426 20:53:02.602713 32362 net.cpp:408] loss <- label
I0426 20:53:02.602728 32362 net.cpp:382] loss -> loss
I0426 20:53:02.602742 32362 layer_factory.hpp:77] Creating layer loss
I0426 20:53:02.603654 32362 net.cpp:124] Setting up loss
I0426 20:53:02.603667 32362 net.cpp:131] Top shape: (1)
I0426 20:53:02.603685 32362 net.cpp:134]     with loss weight 1
I0426 20:53:02.603699 32362 net.cpp:139] Memory required for data: 5838084
I0426 20:53:02.603718 32362 net.cpp:200] loss needs backward computation.
I0426 20:53:02.603721 32362 net.cpp:200] relu1 needs backward computation.
I0426 20:53:02.603740 32362 net.cpp:200] ip1 needs backward computation.
I0426 20:53:02.603744 32362 net.cpp:200] pool1 needs backward computation.
I0426 20:53:02.603746 32362 net.cpp:200] conv1 needs backward computation.
I0426 20:53:02.603749 32362 net.cpp:200] pool0 needs backward computation.
I0426 20:53:02.603752 32362 net.cpp:200] conv0 needs backward computation.
I0426 20:53:02.603772 32362 net.cpp:202] mnist does not need backward computation.
I0426 20:53:02.603775 32362 net.cpp:244] This network produces output loss
I0426 20:53:02.603782 32362 net.cpp:257] Network initialization done.
I0426 20:53:02.604044 32362 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test127.prototxt
I0426 20:53:02.604068 32362 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:02.604138 32362 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:53:02.604204 32362 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:02.604245 32362 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:02.604257 32362 net.cpp:86] Creating Layer mnist
I0426 20:53:02.604261 32362 net.cpp:382] mnist -> data
I0426 20:53:02.604269 32362 net.cpp:382] mnist -> label
I0426 20:53:02.604367 32362 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:02.606336 32362 net.cpp:124] Setting up mnist
I0426 20:53:02.606366 32362 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:02.606371 32362 net.cpp:131] Top shape: 100 (100)
I0426 20:53:02.606375 32362 net.cpp:139] Memory required for data: 314000
I0426 20:53:02.606379 32362 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:02.606385 32362 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:02.606389 32362 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:02.606408 32362 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:02.606415 32362 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:02.606499 32362 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:02.606508 32362 net.cpp:131] Top shape: 100 (100)
I0426 20:53:02.606510 32362 net.cpp:131] Top shape: 100 (100)
I0426 20:53:02.606513 32362 net.cpp:139] Memory required for data: 314800
I0426 20:53:02.606518 32362 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:02.606525 32362 net.cpp:86] Creating Layer conv0
I0426 20:53:02.606528 32362 net.cpp:408] conv0 <- data
I0426 20:53:02.606534 32362 net.cpp:382] conv0 -> conv0
I0426 20:53:02.607187 32362 net.cpp:124] Setting up conv0
I0426 20:53:02.607198 32362 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:53:02.607201 32362 net.cpp:139] Memory required for data: 6074800
I0426 20:53:02.607210 32362 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:02.607215 32362 net.cpp:86] Creating Layer pool0
I0426 20:53:02.607219 32362 net.cpp:408] pool0 <- conv0
I0426 20:53:02.607223 32362 net.cpp:382] pool0 -> pool0
I0426 20:53:02.607256 32362 net.cpp:124] Setting up pool0
I0426 20:53:02.607262 32362 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:53:02.607265 32362 net.cpp:139] Memory required for data: 7514800
I0426 20:53:02.607269 32362 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:02.607276 32362 net.cpp:86] Creating Layer conv1
I0426 20:53:02.607280 32362 net.cpp:408] conv1 <- pool0
I0426 20:53:02.607285 32362 net.cpp:382] conv1 -> conv1
I0426 20:53:02.608786 32362 net.cpp:124] Setting up conv1
I0426 20:53:02.608800 32362 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:53:02.608826 32362 net.cpp:139] Memory required for data: 8794800
I0426 20:53:02.608850 32362 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:02.608873 32362 net.cpp:86] Creating Layer pool1
I0426 20:53:02.608887 32362 net.cpp:408] pool1 <- conv1
I0426 20:53:02.608896 32362 net.cpp:382] pool1 -> pool1
I0426 20:53:02.608930 32362 net.cpp:124] Setting up pool1
I0426 20:53:02.608942 32362 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:53:02.608945 32362 net.cpp:139] Memory required for data: 9114800
I0426 20:53:02.608948 32362 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:02.608954 32362 net.cpp:86] Creating Layer ip1
I0426 20:53:02.608958 32362 net.cpp:408] ip1 <- pool1
I0426 20:53:02.608963 32362 net.cpp:382] ip1 -> ip1
I0426 20:53:02.609096 32362 net.cpp:124] Setting up ip1
I0426 20:53:02.609102 32362 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:02.609107 32362 net.cpp:139] Memory required for data: 9118800
I0426 20:53:02.609113 32362 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:02.609118 32362 net.cpp:86] Creating Layer relu1
I0426 20:53:02.609129 32362 net.cpp:408] relu1 <- ip1
I0426 20:53:02.609134 32362 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:02.609953 32362 net.cpp:124] Setting up relu1
I0426 20:53:02.609964 32362 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:02.609984 32362 net.cpp:139] Memory required for data: 9122800
I0426 20:53:02.609987 32362 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:53:02.609994 32362 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:53:02.609997 32362 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:53:02.610018 32362 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:53:02.610024 32362 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:53:02.610062 32362 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:53:02.610069 32362 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:02.610072 32362 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:02.610075 32362 net.cpp:139] Memory required for data: 9130800
I0426 20:53:02.610079 32362 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:02.610083 32362 net.cpp:86] Creating Layer accuracy
I0426 20:53:02.610086 32362 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:53:02.610090 32362 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:02.610095 32362 net.cpp:382] accuracy -> accuracy
I0426 20:53:02.610101 32362 net.cpp:124] Setting up accuracy
I0426 20:53:02.610105 32362 net.cpp:131] Top shape: (1)
I0426 20:53:02.610108 32362 net.cpp:139] Memory required for data: 9130804
I0426 20:53:02.610111 32362 layer_factory.hpp:77] Creating layer loss
I0426 20:53:02.610116 32362 net.cpp:86] Creating Layer loss
I0426 20:53:02.610119 32362 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:53:02.610123 32362 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:02.610127 32362 net.cpp:382] loss -> loss
I0426 20:53:02.610133 32362 layer_factory.hpp:77] Creating layer loss
I0426 20:53:02.610339 32362 net.cpp:124] Setting up loss
I0426 20:53:02.610349 32362 net.cpp:131] Top shape: (1)
I0426 20:53:02.610353 32362 net.cpp:134]     with loss weight 1
I0426 20:53:02.610359 32362 net.cpp:139] Memory required for data: 9130808
I0426 20:53:02.610363 32362 net.cpp:200] loss needs backward computation.
I0426 20:53:02.610366 32362 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:02.610370 32362 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:53:02.610373 32362 net.cpp:200] relu1 needs backward computation.
I0426 20:53:02.610376 32362 net.cpp:200] ip1 needs backward computation.
I0426 20:53:02.610380 32362 net.cpp:200] pool1 needs backward computation.
I0426 20:53:02.610383 32362 net.cpp:200] conv1 needs backward computation.
I0426 20:53:02.610386 32362 net.cpp:200] pool0 needs backward computation.
I0426 20:53:02.610389 32362 net.cpp:200] conv0 needs backward computation.
I0426 20:53:02.610394 32362 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:02.610397 32362 net.cpp:202] mnist does not need backward computation.
I0426 20:53:02.610400 32362 net.cpp:244] This network produces output accuracy
I0426 20:53:02.610404 32362 net.cpp:244] This network produces output loss
I0426 20:53:02.610424 32362 net.cpp:257] Network initialization done.
I0426 20:53:02.610455 32362 solver.cpp:56] Solver scaffolding done.
I0426 20:53:02.610638 32362 caffe.cpp:248] Starting Optimization
I0426 20:53:02.610644 32362 solver.cpp:273] Solving LeNet
I0426 20:53:02.610647 32362 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:02.611438 32362 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:02.616770 32362 blocking_queue.cpp:49] Waiting for data
I0426 20:53:02.689981 32369 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:02.690562 32362 solver.cpp:398]     Test net output #0: accuracy = 0.0447
I0426 20:53:02.690613 32362 solver.cpp:398]     Test net output #1: loss = 2.34469 (* 1 = 2.34469 loss)
I0426 20:53:02.694612 32362 solver.cpp:219] Iteration 0 (-9.68297e-43 iter/s, 0.0839394s/100 iters), loss = 2.37627
I0426 20:53:02.694635 32362 solver.cpp:238]     Train net output #0: loss = 2.37627 (* 1 = 2.37627 loss)
I0426 20:53:02.694663 32362 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:02.802706 32362 solver.cpp:219] Iteration 100 (925.415 iter/s, 0.10806s/100 iters), loss = 0.865294
I0426 20:53:02.802732 32362 solver.cpp:238]     Train net output #0: loss = 0.865294 (* 1 = 0.865294 loss)
I0426 20:53:02.802755 32362 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:02.916229 32362 solver.cpp:219] Iteration 200 (881.182 iter/s, 0.113484s/100 iters), loss = 0.254463
I0426 20:53:02.916271 32362 solver.cpp:238]     Train net output #0: loss = 0.254463 (* 1 = 0.254463 loss)
I0426 20:53:02.916278 32362 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:03.034159 32362 solver.cpp:219] Iteration 300 (848.339 iter/s, 0.117877s/100 iters), loss = 0.146037
I0426 20:53:03.034190 32362 solver.cpp:238]     Train net output #0: loss = 0.146037 (* 1 = 0.146037 loss)
I0426 20:53:03.034215 32362 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:03.141700 32362 solver.cpp:219] Iteration 400 (930.234 iter/s, 0.1075s/100 iters), loss = 0.129196
I0426 20:53:03.141743 32362 solver.cpp:238]     Train net output #0: loss = 0.129196 (* 1 = 0.129196 loss)
I0426 20:53:03.141749 32362 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:03.246292 32362 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:03.322289 32369 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:03.322862 32362 solver.cpp:398]     Test net output #0: accuracy = 0.9658
I0426 20:53:03.322881 32362 solver.cpp:398]     Test net output #1: loss = 0.116026 (* 1 = 0.116026 loss)
I0426 20:53:03.324009 32362 solver.cpp:219] Iteration 500 (548.643 iter/s, 0.182268s/100 iters), loss = 0.157771
I0426 20:53:03.324045 32362 solver.cpp:238]     Train net output #0: loss = 0.15777 (* 1 = 0.15777 loss)
I0426 20:53:03.324055 32362 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:03.440999 32362 solver.cpp:219] Iteration 600 (855.124 iter/s, 0.116942s/100 iters), loss = 0.110504
I0426 20:53:03.441038 32362 solver.cpp:238]     Train net output #0: loss = 0.110503 (* 1 = 0.110503 loss)
I0426 20:53:03.441045 32362 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:03.548179 32362 solver.cpp:219] Iteration 700 (933.295 iter/s, 0.107147s/100 iters), loss = 0.111575
I0426 20:53:03.548204 32362 solver.cpp:238]     Train net output #0: loss = 0.111575 (* 1 = 0.111575 loss)
I0426 20:53:03.548212 32362 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:03.654438 32362 solver.cpp:219] Iteration 800 (941.409 iter/s, 0.106224s/100 iters), loss = 0.264094
I0426 20:53:03.654462 32362 solver.cpp:238]     Train net output #0: loss = 0.264094 (* 1 = 0.264094 loss)
I0426 20:53:03.654469 32362 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:03.760052 32362 solver.cpp:219] Iteration 900 (947.163 iter/s, 0.105578s/100 iters), loss = 0.227746
I0426 20:53:03.760077 32362 solver.cpp:238]     Train net output #0: loss = 0.227746 (* 1 = 0.227746 loss)
I0426 20:53:03.760083 32362 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:03.795449 32368 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:03.864884 32362 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:03.866055 32362 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:03.866755 32362 solver.cpp:311] Iteration 1000, loss = 0.0992297
I0426 20:53:03.866770 32362 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:03.942698 32369 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:03.943271 32362 solver.cpp:398]     Test net output #0: accuracy = 0.9746
I0426 20:53:03.943305 32362 solver.cpp:398]     Test net output #1: loss = 0.079255 (* 1 = 0.079255 loss)
I0426 20:53:03.943310 32362 solver.cpp:316] Optimization Done.
I0426 20:53:03.943313 32362 caffe.cpp:259] Optimization Done.
