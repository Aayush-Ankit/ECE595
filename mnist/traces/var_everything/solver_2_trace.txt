I0426 20:48:19.596303 31216 caffe.cpp:218] Using GPUs 0
I0426 20:48:19.634673 31216 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:20.159596 31216 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test2.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:20.159742 31216 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test2.prototxt
I0426 20:48:20.160027 31216 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:20.160042 31216 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:20.160107 31216 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:48:20.160164 31216 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:20.160269 31216 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:20.160292 31216 net.cpp:86] Creating Layer mnist
I0426 20:48:20.160301 31216 net.cpp:382] mnist -> data
I0426 20:48:20.160325 31216 net.cpp:382] mnist -> label
I0426 20:48:20.161442 31216 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:20.163965 31216 net.cpp:124] Setting up mnist
I0426 20:48:20.163983 31216 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:20.163990 31216 net.cpp:131] Top shape: 64 (64)
I0426 20:48:20.163993 31216 net.cpp:139] Memory required for data: 200960
I0426 20:48:20.164000 31216 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:20.164011 31216 net.cpp:86] Creating Layer ip1
I0426 20:48:20.164029 31216 net.cpp:408] ip1 <- data
I0426 20:48:20.164041 31216 net.cpp:382] ip1 -> ip1
I0426 20:48:20.165781 31216 net.cpp:124] Setting up ip1
I0426 20:48:20.165797 31216 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:20.165801 31216 net.cpp:139] Memory required for data: 226560
I0426 20:48:20.165814 31216 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:20.165823 31216 net.cpp:86] Creating Layer relu1
I0426 20:48:20.165829 31216 net.cpp:408] relu1 <- ip1
I0426 20:48:20.165834 31216 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:20.454221 31216 net.cpp:124] Setting up relu1
I0426 20:48:20.454249 31216 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:20.454253 31216 net.cpp:139] Memory required for data: 252160
I0426 20:48:20.454259 31216 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:20.454273 31216 net.cpp:86] Creating Layer ip2
I0426 20:48:20.454278 31216 net.cpp:408] ip2 <- ip1
I0426 20:48:20.454285 31216 net.cpp:382] ip2 -> ip2
I0426 20:48:20.455279 31216 net.cpp:124] Setting up ip2
I0426 20:48:20.455293 31216 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:20.455296 31216 net.cpp:139] Memory required for data: 254720
I0426 20:48:20.455307 31216 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:20.455330 31216 net.cpp:86] Creating Layer relu2
I0426 20:48:20.455334 31216 net.cpp:408] relu2 <- ip2
I0426 20:48:20.455339 31216 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:20.456166 31216 net.cpp:124] Setting up relu2
I0426 20:48:20.456178 31216 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:20.456182 31216 net.cpp:139] Memory required for data: 257280
I0426 20:48:20.456185 31216 layer_factory.hpp:77] Creating layer loss
I0426 20:48:20.456193 31216 net.cpp:86] Creating Layer loss
I0426 20:48:20.456197 31216 net.cpp:408] loss <- ip2
I0426 20:48:20.456202 31216 net.cpp:408] loss <- label
I0426 20:48:20.456207 31216 net.cpp:382] loss -> loss
I0426 20:48:20.456226 31216 layer_factory.hpp:77] Creating layer loss
I0426 20:48:20.456478 31216 net.cpp:124] Setting up loss
I0426 20:48:20.456488 31216 net.cpp:131] Top shape: (1)
I0426 20:48:20.456492 31216 net.cpp:134]     with loss weight 1
I0426 20:48:20.456506 31216 net.cpp:139] Memory required for data: 257284
I0426 20:48:20.456509 31216 net.cpp:200] loss needs backward computation.
I0426 20:48:20.456513 31216 net.cpp:200] relu2 needs backward computation.
I0426 20:48:20.456516 31216 net.cpp:200] ip2 needs backward computation.
I0426 20:48:20.456519 31216 net.cpp:200] relu1 needs backward computation.
I0426 20:48:20.456522 31216 net.cpp:200] ip1 needs backward computation.
I0426 20:48:20.456526 31216 net.cpp:202] mnist does not need backward computation.
I0426 20:48:20.456528 31216 net.cpp:244] This network produces output loss
I0426 20:48:20.456537 31216 net.cpp:257] Network initialization done.
I0426 20:48:20.456743 31216 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test2.prototxt
I0426 20:48:20.456764 31216 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:20.456836 31216 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:48:20.456894 31216 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:20.456941 31216 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:20.456954 31216 net.cpp:86] Creating Layer mnist
I0426 20:48:20.456959 31216 net.cpp:382] mnist -> data
I0426 20:48:20.456967 31216 net.cpp:382] mnist -> label
I0426 20:48:20.457057 31216 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:20.458266 31216 net.cpp:124] Setting up mnist
I0426 20:48:20.458278 31216 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:20.458284 31216 net.cpp:131] Top shape: 100 (100)
I0426 20:48:20.458287 31216 net.cpp:139] Memory required for data: 314000
I0426 20:48:20.458290 31216 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:20.458300 31216 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:20.458303 31216 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:20.458308 31216 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:20.458324 31216 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:20.458381 31216 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:20.458386 31216 net.cpp:131] Top shape: 100 (100)
I0426 20:48:20.458390 31216 net.cpp:131] Top shape: 100 (100)
I0426 20:48:20.458394 31216 net.cpp:139] Memory required for data: 314800
I0426 20:48:20.458395 31216 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:20.458401 31216 net.cpp:86] Creating Layer ip1
I0426 20:48:20.458405 31216 net.cpp:408] ip1 <- data
I0426 20:48:20.458410 31216 net.cpp:382] ip1 -> ip1
I0426 20:48:20.458993 31216 net.cpp:124] Setting up ip1
I0426 20:48:20.459002 31216 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:20.459004 31216 net.cpp:139] Memory required for data: 354800
I0426 20:48:20.459013 31216 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:20.459019 31216 net.cpp:86] Creating Layer relu1
I0426 20:48:20.459022 31216 net.cpp:408] relu1 <- ip1
I0426 20:48:20.459026 31216 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:20.459198 31216 net.cpp:124] Setting up relu1
I0426 20:48:20.459206 31216 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:20.459209 31216 net.cpp:139] Memory required for data: 394800
I0426 20:48:20.459213 31216 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:20.459219 31216 net.cpp:86] Creating Layer ip2
I0426 20:48:20.459223 31216 net.cpp:408] ip2 <- ip1
I0426 20:48:20.459228 31216 net.cpp:382] ip2 -> ip2
I0426 20:48:20.459324 31216 net.cpp:124] Setting up ip2
I0426 20:48:20.459331 31216 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:20.459334 31216 net.cpp:139] Memory required for data: 398800
I0426 20:48:20.459342 31216 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:20.459347 31216 net.cpp:86] Creating Layer relu2
I0426 20:48:20.459349 31216 net.cpp:408] relu2 <- ip2
I0426 20:48:20.459353 31216 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:20.460233 31216 net.cpp:124] Setting up relu2
I0426 20:48:20.460245 31216 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:20.460248 31216 net.cpp:139] Memory required for data: 402800
I0426 20:48:20.460253 31216 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0426 20:48:20.460258 31216 net.cpp:86] Creating Layer ip2_relu2_0_split
I0426 20:48:20.460260 31216 net.cpp:408] ip2_relu2_0_split <- ip2
I0426 20:48:20.460265 31216 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0426 20:48:20.460270 31216 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0426 20:48:20.460326 31216 net.cpp:124] Setting up ip2_relu2_0_split
I0426 20:48:20.460332 31216 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:20.460336 31216 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:20.460340 31216 net.cpp:139] Memory required for data: 410800
I0426 20:48:20.460341 31216 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:20.460348 31216 net.cpp:86] Creating Layer accuracy
I0426 20:48:20.460351 31216 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0426 20:48:20.460355 31216 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:20.460360 31216 net.cpp:382] accuracy -> accuracy
I0426 20:48:20.460371 31216 net.cpp:124] Setting up accuracy
I0426 20:48:20.460376 31216 net.cpp:131] Top shape: (1)
I0426 20:48:20.460378 31216 net.cpp:139] Memory required for data: 410804
I0426 20:48:20.460381 31216 layer_factory.hpp:77] Creating layer loss
I0426 20:48:20.460386 31216 net.cpp:86] Creating Layer loss
I0426 20:48:20.460391 31216 net.cpp:408] loss <- ip2_relu2_0_split_1
I0426 20:48:20.460394 31216 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:20.460398 31216 net.cpp:382] loss -> loss
I0426 20:48:20.460403 31216 layer_factory.hpp:77] Creating layer loss
I0426 20:48:20.460657 31216 net.cpp:124] Setting up loss
I0426 20:48:20.460667 31216 net.cpp:131] Top shape: (1)
I0426 20:48:20.460670 31216 net.cpp:134]     with loss weight 1
I0426 20:48:20.460676 31216 net.cpp:139] Memory required for data: 410808
I0426 20:48:20.460680 31216 net.cpp:200] loss needs backward computation.
I0426 20:48:20.460693 31216 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:20.460697 31216 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0426 20:48:20.460700 31216 net.cpp:200] relu2 needs backward computation.
I0426 20:48:20.460703 31216 net.cpp:200] ip2 needs backward computation.
I0426 20:48:20.460706 31216 net.cpp:200] relu1 needs backward computation.
I0426 20:48:20.460710 31216 net.cpp:200] ip1 needs backward computation.
I0426 20:48:20.460728 31216 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:20.460755 31216 net.cpp:202] mnist does not need backward computation.
I0426 20:48:20.460759 31216 net.cpp:244] This network produces output accuracy
I0426 20:48:20.460762 31216 net.cpp:244] This network produces output loss
I0426 20:48:20.460772 31216 net.cpp:257] Network initialization done.
I0426 20:48:20.460798 31216 solver.cpp:56] Solver scaffolding done.
I0426 20:48:20.460961 31216 caffe.cpp:248] Starting Optimization
I0426 20:48:20.460969 31216 solver.cpp:273] Solving LeNet
I0426 20:48:20.460973 31216 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:20.461756 31216 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:20.461868 31216 blocking_queue.cpp:49] Waiting for data
I0426 20:48:20.537003 31223 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:20.537539 31216 solver.cpp:398]     Test net output #0: accuracy = 0.1079
I0426 20:48:20.537577 31216 solver.cpp:398]     Test net output #1: loss = 2.31314 (* 1 = 2.31314 loss)
I0426 20:48:20.538381 31216 solver.cpp:219] Iteration 0 (-8.21899e-35 iter/s, 0.0773704s/100 iters), loss = 2.31828
I0426 20:48:20.538419 31216 solver.cpp:238]     Train net output #0: loss = 2.31828 (* 1 = 2.31828 loss)
I0426 20:48:20.538437 31216 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:20.598974 31216 solver.cpp:219] Iteration 100 (1651.72 iter/s, 0.060543s/100 iters), loss = 0.692558
I0426 20:48:20.599010 31216 solver.cpp:238]     Train net output #0: loss = 0.692558 (* 1 = 0.692558 loss)
I0426 20:48:20.599020 31216 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:20.648000 31216 solver.cpp:219] Iteration 200 (2041.48 iter/s, 0.0489841s/100 iters), loss = 0.812775
I0426 20:48:20.648027 31216 solver.cpp:238]     Train net output #0: loss = 0.812775 (* 1 = 0.812775 loss)
I0426 20:48:20.648036 31216 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:20.691079 31216 solver.cpp:219] Iteration 300 (2323.11 iter/s, 0.0430458s/100 iters), loss = 0.554443
I0426 20:48:20.691104 31216 solver.cpp:238]     Train net output #0: loss = 0.554443 (* 1 = 0.554443 loss)
I0426 20:48:20.691110 31216 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:20.733275 31216 solver.cpp:219] Iteration 400 (2371.74 iter/s, 0.0421632s/100 iters), loss = 0.509584
I0426 20:48:20.733296 31216 solver.cpp:238]     Train net output #0: loss = 0.509584 (* 1 = 0.509584 loss)
I0426 20:48:20.733302 31216 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:20.775166 31216 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:20.852567 31223 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:20.852995 31216 solver.cpp:398]     Test net output #0: accuracy = 0.8278
I0426 20:48:20.853016 31216 solver.cpp:398]     Test net output #1: loss = 0.523512 (* 1 = 0.523512 loss)
I0426 20:48:20.853433 31216 solver.cpp:219] Iteration 500 (832.463 iter/s, 0.120125s/100 iters), loss = 0.57251
I0426 20:48:20.853456 31216 solver.cpp:238]     Train net output #0: loss = 0.57251 (* 1 = 0.57251 loss)
I0426 20:48:20.853463 31216 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:20.911427 31216 solver.cpp:219] Iteration 600 (1725.41 iter/s, 0.0579574s/100 iters), loss = 0.54172
I0426 20:48:20.911453 31216 solver.cpp:238]     Train net output #0: loss = 0.54172 (* 1 = 0.54172 loss)
I0426 20:48:20.911474 31216 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:20.959666 31216 solver.cpp:219] Iteration 700 (2074.44 iter/s, 0.0482058s/100 iters), loss = 0.453513
I0426 20:48:20.959717 31216 solver.cpp:238]     Train net output #0: loss = 0.453513 (* 1 = 0.453513 loss)
I0426 20:48:20.959722 31216 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:21.002586 31216 solver.cpp:219] Iteration 800 (2332.15 iter/s, 0.0428788s/100 iters), loss = 0.406017
I0426 20:48:21.002622 31216 solver.cpp:238]     Train net output #0: loss = 0.406017 (* 1 = 0.406017 loss)
I0426 20:48:21.002629 31216 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:21.009510 31216 blocking_queue.cpp:49] Waiting for data
I0426 20:48:21.045311 31216 solver.cpp:219] Iteration 900 (2342.1 iter/s, 0.0426967s/100 iters), loss = 0.363505
I0426 20:48:21.045348 31216 solver.cpp:238]     Train net output #0: loss = 0.363506 (* 1 = 0.363506 loss)
I0426 20:48:21.045356 31216 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:21.061149 31222 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:21.088332 31216 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:21.089882 31216 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:21.090728 31216 solver.cpp:311] Iteration 1000, loss = 0.256593
I0426 20:48:21.090744 31216 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:21.167987 31223 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:21.168416 31216 solver.cpp:398]     Test net output #0: accuracy = 0.9267
I0426 20:48:21.168437 31216 solver.cpp:398]     Test net output #1: loss = 0.254297 (* 1 = 0.254297 loss)
I0426 20:48:21.168442 31216 solver.cpp:316] Optimization Done.
I0426 20:48:21.168445 31216 caffe.cpp:259] Optimization Done.
