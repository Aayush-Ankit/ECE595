I0426 20:49:29.089993 31536 caffe.cpp:218] Using GPUs 0
I0426 20:49:29.128582 31536 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:29.597785 31536 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test37.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:29.597962 31536 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test37.prototxt
I0426 20:49:29.598327 31536 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:29.598357 31536 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:29.598446 31536 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:29.598510 31536 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:29.598597 31536 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:29.598630 31536 net.cpp:86] Creating Layer mnist
I0426 20:49:29.598639 31536 net.cpp:382] mnist -> data
I0426 20:49:29.598656 31536 net.cpp:382] mnist -> label
I0426 20:49:29.599647 31536 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:29.601830 31536 net.cpp:124] Setting up mnist
I0426 20:49:29.601861 31536 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:29.601866 31536 net.cpp:131] Top shape: 64 (64)
I0426 20:49:29.601867 31536 net.cpp:139] Memory required for data: 200960
I0426 20:49:29.601873 31536 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:29.601903 31536 net.cpp:86] Creating Layer conv0
I0426 20:49:29.601908 31536 net.cpp:408] conv0 <- data
I0426 20:49:29.601933 31536 net.cpp:382] conv0 -> conv0
I0426 20:49:29.831681 31536 net.cpp:124] Setting up conv0
I0426 20:49:29.831725 31536 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:49:29.831729 31536 net.cpp:139] Memory required for data: 3887360
I0426 20:49:29.831743 31536 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:29.831756 31536 net.cpp:86] Creating Layer pool0
I0426 20:49:29.831795 31536 net.cpp:408] pool0 <- conv0
I0426 20:49:29.831802 31536 net.cpp:382] pool0 -> pool0
I0426 20:49:29.831849 31536 net.cpp:124] Setting up pool0
I0426 20:49:29.831856 31536 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:49:29.831859 31536 net.cpp:139] Memory required for data: 4808960
I0426 20:49:29.831862 31536 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:29.831871 31536 net.cpp:86] Creating Layer ip1
I0426 20:49:29.831874 31536 net.cpp:408] ip1 <- pool0
I0426 20:49:29.831895 31536 net.cpp:382] ip1 -> ip1
I0426 20:49:29.834898 31536 net.cpp:124] Setting up ip1
I0426 20:49:29.834911 31536 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:29.834913 31536 net.cpp:139] Memory required for data: 4834560
I0426 20:49:29.834936 31536 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:29.834944 31536 net.cpp:86] Creating Layer relu1
I0426 20:49:29.834961 31536 net.cpp:408] relu1 <- ip1
I0426 20:49:29.834967 31536 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:29.835155 31536 net.cpp:124] Setting up relu1
I0426 20:49:29.835165 31536 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:29.835167 31536 net.cpp:139] Memory required for data: 4860160
I0426 20:49:29.835170 31536 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:29.835178 31536 net.cpp:86] Creating Layer ip2
I0426 20:49:29.835181 31536 net.cpp:408] ip2 <- ip1
I0426 20:49:29.835186 31536 net.cpp:382] ip2 -> ip2
I0426 20:49:29.835480 31536 net.cpp:124] Setting up ip2
I0426 20:49:29.835487 31536 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:29.835505 31536 net.cpp:139] Memory required for data: 4936960
I0426 20:49:29.835511 31536 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:29.835532 31536 net.cpp:86] Creating Layer relu2
I0426 20:49:29.835536 31536 net.cpp:408] relu2 <- ip2
I0426 20:49:29.835556 31536 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:29.836405 31536 net.cpp:124] Setting up relu2
I0426 20:49:29.836416 31536 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:29.836431 31536 net.cpp:139] Memory required for data: 5013760
I0426 20:49:29.836434 31536 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:29.836442 31536 net.cpp:86] Creating Layer ip3
I0426 20:49:29.836446 31536 net.cpp:408] ip3 <- ip2
I0426 20:49:29.836450 31536 net.cpp:382] ip3 -> ip3
I0426 20:49:29.837491 31536 net.cpp:124] Setting up ip3
I0426 20:49:29.837502 31536 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:29.837517 31536 net.cpp:139] Memory required for data: 5016320
I0426 20:49:29.837522 31536 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:29.837530 31536 net.cpp:86] Creating Layer relu3
I0426 20:49:29.837533 31536 net.cpp:408] relu3 <- ip3
I0426 20:49:29.837538 31536 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:29.837719 31536 net.cpp:124] Setting up relu3
I0426 20:49:29.837744 31536 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:29.837748 31536 net.cpp:139] Memory required for data: 5018880
I0426 20:49:29.837750 31536 layer_factory.hpp:77] Creating layer loss
I0426 20:49:29.837759 31536 net.cpp:86] Creating Layer loss
I0426 20:49:29.837761 31536 net.cpp:408] loss <- ip3
I0426 20:49:29.837765 31536 net.cpp:408] loss <- label
I0426 20:49:29.837770 31536 net.cpp:382] loss -> loss
I0426 20:49:29.837785 31536 layer_factory.hpp:77] Creating layer loss
I0426 20:49:29.838047 31536 net.cpp:124] Setting up loss
I0426 20:49:29.838071 31536 net.cpp:131] Top shape: (1)
I0426 20:49:29.838089 31536 net.cpp:134]     with loss weight 1
I0426 20:49:29.838119 31536 net.cpp:139] Memory required for data: 5018884
I0426 20:49:29.838121 31536 net.cpp:200] loss needs backward computation.
I0426 20:49:29.838135 31536 net.cpp:200] relu3 needs backward computation.
I0426 20:49:29.838136 31536 net.cpp:200] ip3 needs backward computation.
I0426 20:49:29.838140 31536 net.cpp:200] relu2 needs backward computation.
I0426 20:49:29.838141 31536 net.cpp:200] ip2 needs backward computation.
I0426 20:49:29.838145 31536 net.cpp:200] relu1 needs backward computation.
I0426 20:49:29.838147 31536 net.cpp:200] ip1 needs backward computation.
I0426 20:49:29.838160 31536 net.cpp:200] pool0 needs backward computation.
I0426 20:49:29.838165 31536 net.cpp:200] conv0 needs backward computation.
I0426 20:49:29.838167 31536 net.cpp:202] mnist does not need backward computation.
I0426 20:49:29.838170 31536 net.cpp:244] This network produces output loss
I0426 20:49:29.838179 31536 net.cpp:257] Network initialization done.
I0426 20:49:29.838469 31536 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test37.prototxt
I0426 20:49:29.838493 31536 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:29.838575 31536 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:29.838651 31536 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:29.838698 31536 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:29.838711 31536 net.cpp:86] Creating Layer mnist
I0426 20:49:29.838716 31536 net.cpp:382] mnist -> data
I0426 20:49:29.838723 31536 net.cpp:382] mnist -> label
I0426 20:49:29.838809 31536 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:29.841111 31536 net.cpp:124] Setting up mnist
I0426 20:49:29.841125 31536 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:29.841130 31536 net.cpp:131] Top shape: 100 (100)
I0426 20:49:29.841135 31536 net.cpp:139] Memory required for data: 314000
I0426 20:49:29.841137 31536 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:29.841145 31536 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:29.841150 31536 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:29.841156 31536 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:29.841163 31536 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:29.841258 31536 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:29.841264 31536 net.cpp:131] Top shape: 100 (100)
I0426 20:49:29.841269 31536 net.cpp:131] Top shape: 100 (100)
I0426 20:49:29.841271 31536 net.cpp:139] Memory required for data: 314800
I0426 20:49:29.841284 31536 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:29.841295 31536 net.cpp:86] Creating Layer conv0
I0426 20:49:29.841298 31536 net.cpp:408] conv0 <- data
I0426 20:49:29.841305 31536 net.cpp:382] conv0 -> conv0
I0426 20:49:29.843096 31536 net.cpp:124] Setting up conv0
I0426 20:49:29.843109 31536 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:49:29.843113 31536 net.cpp:139] Memory required for data: 6074800
I0426 20:49:29.843122 31536 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:29.843138 31536 net.cpp:86] Creating Layer pool0
I0426 20:49:29.843142 31536 net.cpp:408] pool0 <- conv0
I0426 20:49:29.843147 31536 net.cpp:382] pool0 -> pool0
I0426 20:49:29.843199 31536 net.cpp:124] Setting up pool0
I0426 20:49:29.843204 31536 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:49:29.843206 31536 net.cpp:139] Memory required for data: 7514800
I0426 20:49:29.843225 31536 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:29.843233 31536 net.cpp:86] Creating Layer ip1
I0426 20:49:29.843236 31536 net.cpp:408] ip1 <- pool0
I0426 20:49:29.843242 31536 net.cpp:382] ip1 -> ip1
I0426 20:49:29.845448 31536 net.cpp:124] Setting up ip1
I0426 20:49:29.845458 31536 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:29.845460 31536 net.cpp:139] Memory required for data: 7554800
I0426 20:49:29.845468 31536 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:29.845473 31536 net.cpp:86] Creating Layer relu1
I0426 20:49:29.845476 31536 net.cpp:408] relu1 <- ip1
I0426 20:49:29.845480 31536 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:29.845684 31536 net.cpp:124] Setting up relu1
I0426 20:49:29.845692 31536 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:29.845695 31536 net.cpp:139] Memory required for data: 7594800
I0426 20:49:29.845698 31536 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:29.845705 31536 net.cpp:86] Creating Layer ip2
I0426 20:49:29.845716 31536 net.cpp:408] ip2 <- ip1
I0426 20:49:29.845722 31536 net.cpp:382] ip2 -> ip2
I0426 20:49:29.846055 31536 net.cpp:124] Setting up ip2
I0426 20:49:29.846063 31536 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:29.846066 31536 net.cpp:139] Memory required for data: 7714800
I0426 20:49:29.846074 31536 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:29.846081 31536 net.cpp:86] Creating Layer relu2
I0426 20:49:29.846084 31536 net.cpp:408] relu2 <- ip2
I0426 20:49:29.846089 31536 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:29.847049 31536 net.cpp:124] Setting up relu2
I0426 20:49:29.847061 31536 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:29.847064 31536 net.cpp:139] Memory required for data: 7834800
I0426 20:49:29.847069 31536 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:29.847076 31536 net.cpp:86] Creating Layer ip3
I0426 20:49:29.847080 31536 net.cpp:408] ip3 <- ip2
I0426 20:49:29.847086 31536 net.cpp:382] ip3 -> ip3
I0426 20:49:29.847218 31536 net.cpp:124] Setting up ip3
I0426 20:49:29.847228 31536 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:29.847230 31536 net.cpp:139] Memory required for data: 7838800
I0426 20:49:29.847236 31536 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:29.847240 31536 net.cpp:86] Creating Layer relu3
I0426 20:49:29.847244 31536 net.cpp:408] relu3 <- ip3
I0426 20:49:29.847247 31536 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:29.847404 31536 net.cpp:124] Setting up relu3
I0426 20:49:29.847412 31536 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:29.847415 31536 net.cpp:139] Memory required for data: 7842800
I0426 20:49:29.847419 31536 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:29.847431 31536 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:29.847435 31536 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:29.847440 31536 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:29.847450 31536 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:29.847487 31536 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:29.847492 31536 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:29.847506 31536 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:29.847510 31536 net.cpp:139] Memory required for data: 7850800
I0426 20:49:29.847513 31536 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:29.847518 31536 net.cpp:86] Creating Layer accuracy
I0426 20:49:29.847522 31536 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:29.847527 31536 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:29.847532 31536 net.cpp:382] accuracy -> accuracy
I0426 20:49:29.847538 31536 net.cpp:124] Setting up accuracy
I0426 20:49:29.847548 31536 net.cpp:131] Top shape: (1)
I0426 20:49:29.847551 31536 net.cpp:139] Memory required for data: 7850804
I0426 20:49:29.847554 31536 layer_factory.hpp:77] Creating layer loss
I0426 20:49:29.847560 31536 net.cpp:86] Creating Layer loss
I0426 20:49:29.847568 31536 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:29.847573 31536 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:29.847592 31536 net.cpp:382] loss -> loss
I0426 20:49:29.847599 31536 layer_factory.hpp:77] Creating layer loss
I0426 20:49:29.847874 31536 net.cpp:124] Setting up loss
I0426 20:49:29.847890 31536 net.cpp:131] Top shape: (1)
I0426 20:49:29.847894 31536 net.cpp:134]     with loss weight 1
I0426 20:49:29.847900 31536 net.cpp:139] Memory required for data: 7850808
I0426 20:49:29.847904 31536 net.cpp:200] loss needs backward computation.
I0426 20:49:29.847908 31536 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:29.847913 31536 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:29.847915 31536 net.cpp:200] relu3 needs backward computation.
I0426 20:49:29.847918 31536 net.cpp:200] ip3 needs backward computation.
I0426 20:49:29.847921 31536 net.cpp:200] relu2 needs backward computation.
I0426 20:49:29.847924 31536 net.cpp:200] ip2 needs backward computation.
I0426 20:49:29.847928 31536 net.cpp:200] relu1 needs backward computation.
I0426 20:49:29.847930 31536 net.cpp:200] ip1 needs backward computation.
I0426 20:49:29.847934 31536 net.cpp:200] pool0 needs backward computation.
I0426 20:49:29.847936 31536 net.cpp:200] conv0 needs backward computation.
I0426 20:49:29.847940 31536 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:29.847959 31536 net.cpp:202] mnist does not need backward computation.
I0426 20:49:29.847962 31536 net.cpp:244] This network produces output accuracy
I0426 20:49:29.847965 31536 net.cpp:244] This network produces output loss
I0426 20:49:29.847991 31536 net.cpp:257] Network initialization done.
I0426 20:49:29.848027 31536 solver.cpp:56] Solver scaffolding done.
I0426 20:49:29.848309 31536 caffe.cpp:248] Starting Optimization
I0426 20:49:29.848315 31536 solver.cpp:273] Solving LeNet
I0426 20:49:29.848317 31536 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:29.850571 31536 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:29.856546 31536 blocking_queue.cpp:49] Waiting for data
I0426 20:49:29.926355 31543 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:29.926955 31536 solver.cpp:398]     Test net output #0: accuracy = 0.0665
I0426 20:49:29.926973 31536 solver.cpp:398]     Test net output #1: loss = 2.32536 (* 1 = 2.32536 loss)
I0426 20:49:29.930699 31536 solver.cpp:219] Iteration 0 (-1.33066e-31 iter/s, 0.082346s/100 iters), loss = 2.33069
I0426 20:49:29.930724 31536 solver.cpp:238]     Train net output #0: loss = 2.33069 (* 1 = 2.33069 loss)
I0426 20:49:29.930757 31536 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:30.023653 31536 solver.cpp:219] Iteration 100 (1076.23 iter/s, 0.0929167s/100 iters), loss = 1.0927
I0426 20:49:30.023676 31536 solver.cpp:238]     Train net output #0: loss = 1.0927 (* 1 = 1.0927 loss)
I0426 20:49:30.023682 31536 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:30.113667 31536 solver.cpp:219] Iteration 200 (1111.36 iter/s, 0.0899799s/100 iters), loss = 0.448478
I0426 20:49:30.113692 31536 solver.cpp:238]     Train net output #0: loss = 0.448478 (* 1 = 0.448478 loss)
I0426 20:49:30.113698 31536 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:30.202991 31536 solver.cpp:219] Iteration 300 (1119.99 iter/s, 0.0892865s/100 iters), loss = 0.439062
I0426 20:49:30.203016 31536 solver.cpp:238]     Train net output #0: loss = 0.439062 (* 1 = 0.439062 loss)
I0426 20:49:30.203022 31536 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:30.292948 31536 solver.cpp:219] Iteration 400 (1112.08 iter/s, 0.0899215s/100 iters), loss = 0.533414
I0426 20:49:30.292971 31536 solver.cpp:238]     Train net output #0: loss = 0.533414 (* 1 = 0.533414 loss)
I0426 20:49:30.292979 31536 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:30.382061 31536 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:30.436158 31543 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:30.436764 31536 solver.cpp:398]     Test net output #0: accuracy = 0.9218
I0426 20:49:30.436780 31536 solver.cpp:398]     Test net output #1: loss = 0.374304 (* 1 = 0.374304 loss)
I0426 20:49:30.437755 31536 solver.cpp:219] Iteration 500 (690.742 iter/s, 0.144772s/100 iters), loss = 0.519409
I0426 20:49:30.437819 31536 solver.cpp:238]     Train net output #0: loss = 0.519409 (* 1 = 0.519409 loss)
I0426 20:49:30.437826 31536 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:30.537128 31536 solver.cpp:219] Iteration 600 (1006.95 iter/s, 0.0993094s/100 iters), loss = 0.105656
I0426 20:49:30.537154 31536 solver.cpp:238]     Train net output #0: loss = 0.105656 (* 1 = 0.105656 loss)
I0426 20:49:30.537160 31536 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:30.633265 31536 solver.cpp:219] Iteration 700 (1040.58 iter/s, 0.0961004s/100 iters), loss = 0.251007
I0426 20:49:30.633306 31536 solver.cpp:238]     Train net output #0: loss = 0.251007 (* 1 = 0.251007 loss)
I0426 20:49:30.633312 31536 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:30.724951 31536 solver.cpp:219] Iteration 800 (1091.28 iter/s, 0.0916357s/100 iters), loss = 0.288346
I0426 20:49:30.724989 31536 solver.cpp:238]     Train net output #0: loss = 0.288346 (* 1 = 0.288346 loss)
I0426 20:49:30.724995 31536 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:30.815443 31536 solver.cpp:219] Iteration 900 (1105.46 iter/s, 0.0904602s/100 iters), loss = 0.196613
I0426 20:49:30.815484 31536 solver.cpp:238]     Train net output #0: loss = 0.196613 (* 1 = 0.196613 loss)
I0426 20:49:30.815490 31536 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:30.845372 31542 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:30.907336 31536 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:30.913352 31536 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:30.916544 31536 solver.cpp:311] Iteration 1000, loss = 0.116963
I0426 20:49:30.916560 31536 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:30.990968 31543 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:30.991610 31536 solver.cpp:398]     Test net output #0: accuracy = 0.9695
I0426 20:49:30.991631 31536 solver.cpp:398]     Test net output #1: loss = 0.0950164 (* 1 = 0.0950164 loss)
I0426 20:49:30.991634 31536 solver.cpp:316] Optimization Done.
I0426 20:49:30.991638 31536 caffe.cpp:259] Optimization Done.
