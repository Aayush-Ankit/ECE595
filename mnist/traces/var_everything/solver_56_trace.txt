I0426 20:50:17.983248 31721 caffe.cpp:218] Using GPUs 0
I0426 20:50:18.014809 31721 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:18.474102 31721 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test56.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:18.474237 31721 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test56.prototxt
I0426 20:50:18.474508 31721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:18.474519 31721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:18.474582 31721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:50:18.474635 31721 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:18.474723 31721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:18.474742 31721 net.cpp:86] Creating Layer mnist
I0426 20:50:18.474748 31721 net.cpp:382] mnist -> data
I0426 20:50:18.474782 31721 net.cpp:382] mnist -> label
I0426 20:50:18.475723 31721 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:18.477846 31721 net.cpp:124] Setting up mnist
I0426 20:50:18.477876 31721 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:18.477881 31721 net.cpp:131] Top shape: 64 (64)
I0426 20:50:18.477885 31721 net.cpp:139] Memory required for data: 200960
I0426 20:50:18.477906 31721 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:18.477918 31721 net.cpp:86] Creating Layer conv0
I0426 20:50:18.477923 31721 net.cpp:408] conv0 <- data
I0426 20:50:18.477933 31721 net.cpp:382] conv0 -> conv0
I0426 20:50:18.709589 31721 net.cpp:124] Setting up conv0
I0426 20:50:18.709614 31721 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:18.709619 31721 net.cpp:139] Memory required for data: 1675520
I0426 20:50:18.709632 31721 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:18.709645 31721 net.cpp:86] Creating Layer pool0
I0426 20:50:18.709648 31721 net.cpp:408] pool0 <- conv0
I0426 20:50:18.709653 31721 net.cpp:382] pool0 -> pool0
I0426 20:50:18.709713 31721 net.cpp:124] Setting up pool0
I0426 20:50:18.709718 31721 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:18.709736 31721 net.cpp:139] Memory required for data: 2044160
I0426 20:50:18.709739 31721 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:18.709750 31721 net.cpp:86] Creating Layer conv1
I0426 20:50:18.709753 31721 net.cpp:408] conv1 <- pool0
I0426 20:50:18.709758 31721 net.cpp:382] conv1 -> conv1
I0426 20:50:18.713763 31721 net.cpp:124] Setting up conv1
I0426 20:50:18.713809 31721 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:18.713817 31721 net.cpp:139] Memory required for data: 2208000
I0426 20:50:18.713837 31721 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:18.713866 31721 net.cpp:86] Creating Layer pool1
I0426 20:50:18.713874 31721 net.cpp:408] pool1 <- conv1
I0426 20:50:18.713886 31721 net.cpp:382] pool1 -> pool1
I0426 20:50:18.714005 31721 net.cpp:124] Setting up pool1
I0426 20:50:18.714022 31721 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:18.714028 31721 net.cpp:139] Memory required for data: 2248960
I0426 20:50:18.714035 31721 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:18.714049 31721 net.cpp:86] Creating Layer ip1
I0426 20:50:18.714056 31721 net.cpp:408] ip1 <- pool1
I0426 20:50:18.714067 31721 net.cpp:382] ip1 -> ip1
I0426 20:50:18.714304 31721 net.cpp:124] Setting up ip1
I0426 20:50:18.714320 31721 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:18.714328 31721 net.cpp:139] Memory required for data: 2251520
I0426 20:50:18.714350 31721 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:18.714361 31721 net.cpp:86] Creating Layer relu1
I0426 20:50:18.714370 31721 net.cpp:408] relu1 <- ip1
I0426 20:50:18.714378 31721 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:18.714783 31721 net.cpp:124] Setting up relu1
I0426 20:50:18.714802 31721 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:18.714808 31721 net.cpp:139] Memory required for data: 2254080
I0426 20:50:18.714814 31721 layer_factory.hpp:77] Creating layer loss
I0426 20:50:18.714825 31721 net.cpp:86] Creating Layer loss
I0426 20:50:18.714833 31721 net.cpp:408] loss <- ip1
I0426 20:50:18.714840 31721 net.cpp:408] loss <- label
I0426 20:50:18.714851 31721 net.cpp:382] loss -> loss
I0426 20:50:18.714895 31721 layer_factory.hpp:77] Creating layer loss
I0426 20:50:18.716702 31721 net.cpp:124] Setting up loss
I0426 20:50:18.716739 31721 net.cpp:131] Top shape: (1)
I0426 20:50:18.716747 31721 net.cpp:134]     with loss weight 1
I0426 20:50:18.716771 31721 net.cpp:139] Memory required for data: 2254084
I0426 20:50:18.716778 31721 net.cpp:200] loss needs backward computation.
I0426 20:50:18.716796 31721 net.cpp:200] relu1 needs backward computation.
I0426 20:50:18.716802 31721 net.cpp:200] ip1 needs backward computation.
I0426 20:50:18.716831 31721 net.cpp:200] pool1 needs backward computation.
I0426 20:50:18.716840 31721 net.cpp:200] conv1 needs backward computation.
I0426 20:50:18.716856 31721 net.cpp:200] pool0 needs backward computation.
I0426 20:50:18.716862 31721 net.cpp:200] conv0 needs backward computation.
I0426 20:50:18.716871 31721 net.cpp:202] mnist does not need backward computation.
I0426 20:50:18.716876 31721 net.cpp:244] This network produces output loss
I0426 20:50:18.716894 31721 net.cpp:257] Network initialization done.
I0426 20:50:18.717454 31721 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test56.prototxt
I0426 20:50:18.717514 31721 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:18.717685 31721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:50:18.717826 31721 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:18.717913 31721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:18.717948 31721 net.cpp:86] Creating Layer mnist
I0426 20:50:18.717958 31721 net.cpp:382] mnist -> data
I0426 20:50:18.717974 31721 net.cpp:382] mnist -> label
I0426 20:50:18.718161 31721 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:18.721848 31721 net.cpp:124] Setting up mnist
I0426 20:50:18.721897 31721 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:18.721909 31721 net.cpp:131] Top shape: 100 (100)
I0426 20:50:18.721916 31721 net.cpp:139] Memory required for data: 314000
I0426 20:50:18.721925 31721 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:18.721946 31721 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:18.721953 31721 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:18.721964 31721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:18.721978 31721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:18.722164 31721 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:18.722180 31721 net.cpp:131] Top shape: 100 (100)
I0426 20:50:18.722188 31721 net.cpp:131] Top shape: 100 (100)
I0426 20:50:18.722194 31721 net.cpp:139] Memory required for data: 314800
I0426 20:50:18.722201 31721 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:18.722219 31721 net.cpp:86] Creating Layer conv0
I0426 20:50:18.722225 31721 net.cpp:408] conv0 <- data
I0426 20:50:18.722236 31721 net.cpp:382] conv0 -> conv0
I0426 20:50:18.723894 31721 net.cpp:124] Setting up conv0
I0426 20:50:18.723935 31721 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:18.723955 31721 net.cpp:139] Memory required for data: 2618800
I0426 20:50:18.723983 31721 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:18.723999 31721 net.cpp:86] Creating Layer pool0
I0426 20:50:18.724010 31721 net.cpp:408] pool0 <- conv0
I0426 20:50:18.724027 31721 net.cpp:382] pool0 -> pool0
I0426 20:50:18.724139 31721 net.cpp:124] Setting up pool0
I0426 20:50:18.724171 31721 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:18.724180 31721 net.cpp:139] Memory required for data: 3194800
I0426 20:50:18.724187 31721 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:18.724212 31721 net.cpp:86] Creating Layer conv1
I0426 20:50:18.724220 31721 net.cpp:408] conv1 <- pool0
I0426 20:50:18.724231 31721 net.cpp:382] conv1 -> conv1
I0426 20:50:18.728400 31721 net.cpp:124] Setting up conv1
I0426 20:50:18.728425 31721 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:18.728432 31721 net.cpp:139] Memory required for data: 3450800
I0426 20:50:18.728449 31721 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:18.728462 31721 net.cpp:86] Creating Layer pool1
I0426 20:50:18.728487 31721 net.cpp:408] pool1 <- conv1
I0426 20:50:18.728498 31721 net.cpp:382] pool1 -> pool1
I0426 20:50:18.728621 31721 net.cpp:124] Setting up pool1
I0426 20:50:18.728637 31721 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:18.728643 31721 net.cpp:139] Memory required for data: 3514800
I0426 20:50:18.728652 31721 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:18.728663 31721 net.cpp:86] Creating Layer ip1
I0426 20:50:18.728670 31721 net.cpp:408] ip1 <- pool1
I0426 20:50:18.728679 31721 net.cpp:382] ip1 -> ip1
I0426 20:50:18.728919 31721 net.cpp:124] Setting up ip1
I0426 20:50:18.728945 31721 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:18.728951 31721 net.cpp:139] Memory required for data: 3518800
I0426 20:50:18.728965 31721 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:18.728974 31721 net.cpp:86] Creating Layer relu1
I0426 20:50:18.728994 31721 net.cpp:408] relu1 <- ip1
I0426 20:50:18.729003 31721 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:18.730670 31721 net.cpp:124] Setting up relu1
I0426 20:50:18.730692 31721 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:18.730708 31721 net.cpp:139] Memory required for data: 3522800
I0426 20:50:18.730715 31721 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:50:18.730731 31721 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:50:18.730738 31721 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:50:18.730748 31721 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:50:18.730762 31721 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:50:18.730834 31721 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:50:18.730849 31721 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:18.730856 31721 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:18.730872 31721 net.cpp:139] Memory required for data: 3530800
I0426 20:50:18.730893 31721 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:18.730903 31721 net.cpp:86] Creating Layer accuracy
I0426 20:50:18.730911 31721 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:50:18.730932 31721 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:18.730942 31721 net.cpp:382] accuracy -> accuracy
I0426 20:50:18.730955 31721 net.cpp:124] Setting up accuracy
I0426 20:50:18.730963 31721 net.cpp:131] Top shape: (1)
I0426 20:50:18.730969 31721 net.cpp:139] Memory required for data: 3530804
I0426 20:50:18.730975 31721 layer_factory.hpp:77] Creating layer loss
I0426 20:50:18.730993 31721 net.cpp:86] Creating Layer loss
I0426 20:50:18.730998 31721 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:50:18.731006 31721 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:18.731014 31721 net.cpp:382] loss -> loss
I0426 20:50:18.731040 31721 layer_factory.hpp:77] Creating layer loss
I0426 20:50:18.731511 31721 net.cpp:124] Setting up loss
I0426 20:50:18.731533 31721 net.cpp:131] Top shape: (1)
I0426 20:50:18.731549 31721 net.cpp:134]     with loss weight 1
I0426 20:50:18.731562 31721 net.cpp:139] Memory required for data: 3530808
I0426 20:50:18.731577 31721 net.cpp:200] loss needs backward computation.
I0426 20:50:18.731585 31721 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:18.731593 31721 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:50:18.731600 31721 net.cpp:200] relu1 needs backward computation.
I0426 20:50:18.731616 31721 net.cpp:200] ip1 needs backward computation.
I0426 20:50:18.731650 31721 net.cpp:200] pool1 needs backward computation.
I0426 20:50:18.731659 31721 net.cpp:200] conv1 needs backward computation.
I0426 20:50:18.731665 31721 net.cpp:200] pool0 needs backward computation.
I0426 20:50:18.731673 31721 net.cpp:200] conv0 needs backward computation.
I0426 20:50:18.731680 31721 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:18.731689 31721 net.cpp:202] mnist does not need backward computation.
I0426 20:50:18.731694 31721 net.cpp:244] This network produces output accuracy
I0426 20:50:18.731701 31721 net.cpp:244] This network produces output loss
I0426 20:50:18.731737 31721 net.cpp:257] Network initialization done.
I0426 20:50:18.731823 31721 solver.cpp:56] Solver scaffolding done.
I0426 20:50:18.732235 31721 caffe.cpp:248] Starting Optimization
I0426 20:50:18.732245 31721 solver.cpp:273] Solving LeNet
I0426 20:50:18.732251 31721 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:18.732450 31721 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:18.739172 31721 blocking_queue.cpp:49] Waiting for data
I0426 20:50:18.808699 31728 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:18.809252 31721 solver.cpp:398]     Test net output #0: accuracy = 0.0655
I0426 20:50:18.809293 31721 solver.cpp:398]     Test net output #1: loss = 2.39019 (* 1 = 2.39019 loss)
I0426 20:50:18.812518 31721 solver.cpp:219] Iteration 0 (0 iter/s, 0.0802253s/100 iters), loss = 2.37765
I0426 20:50:18.812553 31721 solver.cpp:238]     Train net output #0: loss = 2.37765 (* 1 = 2.37765 loss)
I0426 20:50:18.812568 31721 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:18.892226 31721 solver.cpp:219] Iteration 100 (1255.37 iter/s, 0.079658s/100 iters), loss = 0.269907
I0426 20:50:18.892257 31721 solver.cpp:238]     Train net output #0: loss = 0.269907 (* 1 = 0.269907 loss)
I0426 20:50:18.892264 31721 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:18.960201 31721 solver.cpp:219] Iteration 200 (1472.06 iter/s, 0.0679322s/100 iters), loss = 0.225132
I0426 20:50:18.960230 31721 solver.cpp:238]     Train net output #0: loss = 0.225132 (* 1 = 0.225132 loss)
I0426 20:50:18.960237 31721 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:19.026172 31721 solver.cpp:219] Iteration 300 (1516.66 iter/s, 0.0659343s/100 iters), loss = 0.264603
I0426 20:50:19.026202 31721 solver.cpp:238]     Train net output #0: loss = 0.264603 (* 1 = 0.264603 loss)
I0426 20:50:19.026213 31721 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:19.091651 31721 solver.cpp:219] Iteration 400 (1528.08 iter/s, 0.0654418s/100 iters), loss = 0.129641
I0426 20:50:19.091681 31721 solver.cpp:238]     Train net output #0: loss = 0.129641 (* 1 = 0.129641 loss)
I0426 20:50:19.091687 31721 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:19.156237 31721 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:19.231130 31728 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:19.231612 31721 solver.cpp:398]     Test net output #0: accuracy = 0.9564
I0426 20:50:19.231637 31721 solver.cpp:398]     Test net output #1: loss = 0.143483 (* 1 = 0.143483 loss)
I0426 20:50:19.232419 31721 solver.cpp:219] Iteration 500 (710.593 iter/s, 0.140727s/100 iters), loss = 0.125404
I0426 20:50:19.232458 31721 solver.cpp:238]     Train net output #0: loss = 0.125404 (* 1 = 0.125404 loss)
I0426 20:50:19.232468 31721 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:19.303230 31721 solver.cpp:219] Iteration 600 (1413.2 iter/s, 0.0707615s/100 iters), loss = 0.0990884
I0426 20:50:19.303258 31721 solver.cpp:238]     Train net output #0: loss = 0.0990885 (* 1 = 0.0990885 loss)
I0426 20:50:19.303266 31721 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:19.368350 31721 solver.cpp:219] Iteration 700 (1536.51 iter/s, 0.0650824s/100 iters), loss = 0.216725
I0426 20:50:19.368377 31721 solver.cpp:238]     Train net output #0: loss = 0.216725 (* 1 = 0.216725 loss)
I0426 20:50:19.368386 31721 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:19.434335 31721 solver.cpp:219] Iteration 800 (1516.33 iter/s, 0.0659487s/100 iters), loss = 0.226377
I0426 20:50:19.434365 31721 solver.cpp:238]     Train net output #0: loss = 0.226377 (* 1 = 0.226377 loss)
I0426 20:50:19.434372 31721 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:19.501631 31721 solver.cpp:219] Iteration 900 (1486.8 iter/s, 0.0672584s/100 iters), loss = 0.308118
I0426 20:50:19.501662 31721 solver.cpp:238]     Train net output #0: loss = 0.308118 (* 1 = 0.308118 loss)
I0426 20:50:19.501668 31721 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:19.527773 31727 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:19.573902 31721 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:19.575700 31721 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:19.577253 31721 solver.cpp:311] Iteration 1000, loss = 0.177961
I0426 20:50:19.577271 31721 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:19.652566 31728 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:19.653057 31721 solver.cpp:398]     Test net output #0: accuracy = 0.9704
I0426 20:50:19.653077 31721 solver.cpp:398]     Test net output #1: loss = 0.0945788 (* 1 = 0.0945788 loss)
I0426 20:50:19.653082 31721 solver.cpp:316] Optimization Done.
I0426 20:50:19.653085 31721 caffe.cpp:259] Optimization Done.
