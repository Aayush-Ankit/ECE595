I0426 20:49:33.578668 31553 caffe.cpp:218] Using GPUs 0
I0426 20:49:33.617291 31553 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:34.080566 31553 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test39.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:34.080698 31553 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test39.prototxt
I0426 20:49:34.081079 31553 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:34.081111 31553 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:34.081255 31553 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:34.081318 31553 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:34.081400 31553 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:34.081420 31553 net.cpp:86] Creating Layer mnist
I0426 20:49:34.081429 31553 net.cpp:382] mnist -> data
I0426 20:49:34.081449 31553 net.cpp:382] mnist -> label
I0426 20:49:34.082406 31553 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:34.084525 31553 net.cpp:124] Setting up mnist
I0426 20:49:34.084539 31553 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:34.084544 31553 net.cpp:131] Top shape: 64 (64)
I0426 20:49:34.084547 31553 net.cpp:139] Memory required for data: 200960
I0426 20:49:34.084553 31553 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:34.084566 31553 net.cpp:86] Creating Layer conv0
I0426 20:49:34.084570 31553 net.cpp:408] conv0 <- data
I0426 20:49:34.084580 31553 net.cpp:382] conv0 -> conv0
I0426 20:49:34.316421 31553 net.cpp:124] Setting up conv0
I0426 20:49:34.316447 31553 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:49:34.316449 31553 net.cpp:139] Memory required for data: 3887360
I0426 20:49:34.316463 31553 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:34.316475 31553 net.cpp:86] Creating Layer pool0
I0426 20:49:34.316498 31553 net.cpp:408] pool0 <- conv0
I0426 20:49:34.316519 31553 net.cpp:382] pool0 -> pool0
I0426 20:49:34.316561 31553 net.cpp:124] Setting up pool0
I0426 20:49:34.316567 31553 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:49:34.316570 31553 net.cpp:139] Memory required for data: 4808960
I0426 20:49:34.316572 31553 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:34.316579 31553 net.cpp:86] Creating Layer ip1
I0426 20:49:34.316583 31553 net.cpp:408] ip1 <- pool0
I0426 20:49:34.316587 31553 net.cpp:382] ip1 -> ip1
I0426 20:49:34.323640 31553 net.cpp:124] Setting up ip1
I0426 20:49:34.323652 31553 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:34.323655 31553 net.cpp:139] Memory required for data: 4885760
I0426 20:49:34.323663 31553 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:34.323670 31553 net.cpp:86] Creating Layer relu1
I0426 20:49:34.323673 31553 net.cpp:408] relu1 <- ip1
I0426 20:49:34.323678 31553 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:34.323846 31553 net.cpp:124] Setting up relu1
I0426 20:49:34.323855 31553 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:34.323858 31553 net.cpp:139] Memory required for data: 4962560
I0426 20:49:34.323861 31553 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:34.323868 31553 net.cpp:86] Creating Layer ip2
I0426 20:49:34.323870 31553 net.cpp:408] ip2 <- ip1
I0426 20:49:34.323875 31553 net.cpp:382] ip2 -> ip2
I0426 20:49:34.324120 31553 net.cpp:124] Setting up ip2
I0426 20:49:34.324128 31553 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:34.324131 31553 net.cpp:139] Memory required for data: 4988160
I0426 20:49:34.324138 31553 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:34.324143 31553 net.cpp:86] Creating Layer relu2
I0426 20:49:34.324146 31553 net.cpp:408] relu2 <- ip2
I0426 20:49:34.324151 31553 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:34.324992 31553 net.cpp:124] Setting up relu2
I0426 20:49:34.325004 31553 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:34.325023 31553 net.cpp:139] Memory required for data: 5013760
I0426 20:49:34.325027 31553 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:34.325033 31553 net.cpp:86] Creating Layer ip3
I0426 20:49:34.325037 31553 net.cpp:408] ip3 <- ip2
I0426 20:49:34.325042 31553 net.cpp:382] ip3 -> ip3
I0426 20:49:34.325155 31553 net.cpp:124] Setting up ip3
I0426 20:49:34.325162 31553 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:34.325165 31553 net.cpp:139] Memory required for data: 5016320
I0426 20:49:34.325171 31553 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:34.325177 31553 net.cpp:86] Creating Layer relu3
I0426 20:49:34.325179 31553 net.cpp:408] relu3 <- ip3
I0426 20:49:34.325183 31553 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:34.325338 31553 net.cpp:124] Setting up relu3
I0426 20:49:34.325346 31553 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:34.325350 31553 net.cpp:139] Memory required for data: 5018880
I0426 20:49:34.325351 31553 layer_factory.hpp:77] Creating layer loss
I0426 20:49:34.325357 31553 net.cpp:86] Creating Layer loss
I0426 20:49:34.325361 31553 net.cpp:408] loss <- ip3
I0426 20:49:34.325364 31553 net.cpp:408] loss <- label
I0426 20:49:34.325369 31553 net.cpp:382] loss -> loss
I0426 20:49:34.325387 31553 layer_factory.hpp:77] Creating layer loss
I0426 20:49:34.325637 31553 net.cpp:124] Setting up loss
I0426 20:49:34.325646 31553 net.cpp:131] Top shape: (1)
I0426 20:49:34.325649 31553 net.cpp:134]     with loss weight 1
I0426 20:49:34.325664 31553 net.cpp:139] Memory required for data: 5018884
I0426 20:49:34.325667 31553 net.cpp:200] loss needs backward computation.
I0426 20:49:34.325671 31553 net.cpp:200] relu3 needs backward computation.
I0426 20:49:34.325675 31553 net.cpp:200] ip3 needs backward computation.
I0426 20:49:34.325677 31553 net.cpp:200] relu2 needs backward computation.
I0426 20:49:34.325680 31553 net.cpp:200] ip2 needs backward computation.
I0426 20:49:34.325683 31553 net.cpp:200] relu1 needs backward computation.
I0426 20:49:34.325685 31553 net.cpp:200] ip1 needs backward computation.
I0426 20:49:34.325700 31553 net.cpp:200] pool0 needs backward computation.
I0426 20:49:34.325702 31553 net.cpp:200] conv0 needs backward computation.
I0426 20:49:34.325706 31553 net.cpp:202] mnist does not need backward computation.
I0426 20:49:34.325708 31553 net.cpp:244] This network produces output loss
I0426 20:49:34.325731 31553 net.cpp:257] Network initialization done.
I0426 20:49:34.326028 31553 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test39.prototxt
I0426 20:49:34.326053 31553 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:34.326136 31553 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:34.326195 31553 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:34.326238 31553 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:34.326251 31553 net.cpp:86] Creating Layer mnist
I0426 20:49:34.326256 31553 net.cpp:382] mnist -> data
I0426 20:49:34.326263 31553 net.cpp:382] mnist -> label
I0426 20:49:34.326340 31553 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:34.328550 31553 net.cpp:124] Setting up mnist
I0426 20:49:34.328563 31553 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:34.328568 31553 net.cpp:131] Top shape: 100 (100)
I0426 20:49:34.328572 31553 net.cpp:139] Memory required for data: 314000
I0426 20:49:34.328574 31553 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:34.328580 31553 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:34.328584 31553 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:34.328589 31553 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:34.328595 31553 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:34.328639 31553 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:34.328644 31553 net.cpp:131] Top shape: 100 (100)
I0426 20:49:34.328646 31553 net.cpp:131] Top shape: 100 (100)
I0426 20:49:34.328649 31553 net.cpp:139] Memory required for data: 314800
I0426 20:49:34.328661 31553 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:34.328670 31553 net.cpp:86] Creating Layer conv0
I0426 20:49:34.328673 31553 net.cpp:408] conv0 <- data
I0426 20:49:34.328677 31553 net.cpp:382] conv0 -> conv0
I0426 20:49:34.330555 31553 net.cpp:124] Setting up conv0
I0426 20:49:34.330569 31553 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:49:34.330572 31553 net.cpp:139] Memory required for data: 6074800
I0426 20:49:34.330590 31553 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:34.330608 31553 net.cpp:86] Creating Layer pool0
I0426 20:49:34.330611 31553 net.cpp:408] pool0 <- conv0
I0426 20:49:34.330616 31553 net.cpp:382] pool0 -> pool0
I0426 20:49:34.330649 31553 net.cpp:124] Setting up pool0
I0426 20:49:34.330662 31553 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:49:34.330665 31553 net.cpp:139] Memory required for data: 7514800
I0426 20:49:34.330668 31553 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:34.330674 31553 net.cpp:86] Creating Layer ip1
I0426 20:49:34.330678 31553 net.cpp:408] ip1 <- pool0
I0426 20:49:34.330682 31553 net.cpp:382] ip1 -> ip1
I0426 20:49:34.338338 31553 net.cpp:124] Setting up ip1
I0426 20:49:34.338351 31553 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:34.338356 31553 net.cpp:139] Memory required for data: 7634800
I0426 20:49:34.338378 31553 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:34.338384 31553 net.cpp:86] Creating Layer relu1
I0426 20:49:34.338387 31553 net.cpp:408] relu1 <- ip1
I0426 20:49:34.338392 31553 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:34.338567 31553 net.cpp:124] Setting up relu1
I0426 20:49:34.338577 31553 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:34.338579 31553 net.cpp:139] Memory required for data: 7754800
I0426 20:49:34.338582 31553 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:34.338588 31553 net.cpp:86] Creating Layer ip2
I0426 20:49:34.338591 31553 net.cpp:408] ip2 <- ip1
I0426 20:49:34.338596 31553 net.cpp:382] ip2 -> ip2
I0426 20:49:34.338876 31553 net.cpp:124] Setting up ip2
I0426 20:49:34.338884 31553 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:34.338887 31553 net.cpp:139] Memory required for data: 7794800
I0426 20:49:34.338894 31553 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:34.338899 31553 net.cpp:86] Creating Layer relu2
I0426 20:49:34.338902 31553 net.cpp:408] relu2 <- ip2
I0426 20:49:34.338907 31553 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:34.339695 31553 net.cpp:124] Setting up relu2
I0426 20:49:34.339722 31553 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:34.339726 31553 net.cpp:139] Memory required for data: 7834800
I0426 20:49:34.339730 31553 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:34.339753 31553 net.cpp:86] Creating Layer ip3
I0426 20:49:34.339771 31553 net.cpp:408] ip3 <- ip2
I0426 20:49:34.339777 31553 net.cpp:382] ip3 -> ip3
I0426 20:49:34.339876 31553 net.cpp:124] Setting up ip3
I0426 20:49:34.339884 31553 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:34.339887 31553 net.cpp:139] Memory required for data: 7838800
I0426 20:49:34.339893 31553 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:34.339897 31553 net.cpp:86] Creating Layer relu3
I0426 20:49:34.339900 31553 net.cpp:408] relu3 <- ip3
I0426 20:49:34.339905 31553 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:34.340054 31553 net.cpp:124] Setting up relu3
I0426 20:49:34.340062 31553 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:34.340065 31553 net.cpp:139] Memory required for data: 7842800
I0426 20:49:34.340068 31553 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:34.340072 31553 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:34.340075 31553 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:34.340080 31553 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:34.340085 31553 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:34.340114 31553 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:34.340119 31553 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:34.340133 31553 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:34.340137 31553 net.cpp:139] Memory required for data: 7850800
I0426 20:49:34.340139 31553 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:34.340147 31553 net.cpp:86] Creating Layer accuracy
I0426 20:49:34.340152 31553 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:34.340155 31553 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:34.340159 31553 net.cpp:382] accuracy -> accuracy
I0426 20:49:34.340165 31553 net.cpp:124] Setting up accuracy
I0426 20:49:34.340169 31553 net.cpp:131] Top shape: (1)
I0426 20:49:34.340173 31553 net.cpp:139] Memory required for data: 7850804
I0426 20:49:34.340174 31553 layer_factory.hpp:77] Creating layer loss
I0426 20:49:34.340178 31553 net.cpp:86] Creating Layer loss
I0426 20:49:34.340181 31553 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:34.340185 31553 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:34.340188 31553 net.cpp:382] loss -> loss
I0426 20:49:34.340194 31553 layer_factory.hpp:77] Creating layer loss
I0426 20:49:34.340420 31553 net.cpp:124] Setting up loss
I0426 20:49:34.340430 31553 net.cpp:131] Top shape: (1)
I0426 20:49:34.340432 31553 net.cpp:134]     with loss weight 1
I0426 20:49:34.340440 31553 net.cpp:139] Memory required for data: 7850808
I0426 20:49:34.340442 31553 net.cpp:200] loss needs backward computation.
I0426 20:49:34.340445 31553 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:34.340450 31553 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:34.340452 31553 net.cpp:200] relu3 needs backward computation.
I0426 20:49:34.340456 31553 net.cpp:200] ip3 needs backward computation.
I0426 20:49:34.340458 31553 net.cpp:200] relu2 needs backward computation.
I0426 20:49:34.340461 31553 net.cpp:200] ip2 needs backward computation.
I0426 20:49:34.340464 31553 net.cpp:200] relu1 needs backward computation.
I0426 20:49:34.340467 31553 net.cpp:200] ip1 needs backward computation.
I0426 20:49:34.340471 31553 net.cpp:200] pool0 needs backward computation.
I0426 20:49:34.340473 31553 net.cpp:200] conv0 needs backward computation.
I0426 20:49:34.340476 31553 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:34.340481 31553 net.cpp:202] mnist does not need backward computation.
I0426 20:49:34.340482 31553 net.cpp:244] This network produces output accuracy
I0426 20:49:34.340486 31553 net.cpp:244] This network produces output loss
I0426 20:49:34.340495 31553 net.cpp:257] Network initialization done.
I0426 20:49:34.340529 31553 solver.cpp:56] Solver scaffolding done.
I0426 20:49:34.340790 31553 caffe.cpp:248] Starting Optimization
I0426 20:49:34.340797 31553 solver.cpp:273] Solving LeNet
I0426 20:49:34.340801 31553 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:34.342314 31553 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:34.348320 31553 blocking_queue.cpp:49] Waiting for data
I0426 20:49:34.415570 31560 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:34.416210 31553 solver.cpp:398]     Test net output #0: accuracy = 0.1178
I0426 20:49:34.416229 31553 solver.cpp:398]     Test net output #1: loss = 2.30516 (* 1 = 2.30516 loss)
I0426 20:49:34.419381 31553 solver.cpp:219] Iteration 0 (0 iter/s, 0.0785459s/100 iters), loss = 2.30321
I0426 20:49:34.419405 31553 solver.cpp:238]     Train net output #0: loss = 2.30321 (* 1 = 2.30321 loss)
I0426 20:49:34.419431 31553 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:34.533434 31553 solver.cpp:219] Iteration 100 (877.051 iter/s, 0.114018s/100 iters), loss = 0.78477
I0426 20:49:34.533459 31553 solver.cpp:238]     Train net output #0: loss = 0.78477 (* 1 = 0.78477 loss)
I0426 20:49:34.533466 31553 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:34.640053 31553 solver.cpp:219] Iteration 200 (938.227 iter/s, 0.106584s/100 iters), loss = 0.486315
I0426 20:49:34.640076 31553 solver.cpp:238]     Train net output #0: loss = 0.486315 (* 1 = 0.486315 loss)
I0426 20:49:34.640082 31553 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:34.747963 31553 solver.cpp:219] Iteration 300 (926.986 iter/s, 0.107877s/100 iters), loss = 0.37886
I0426 20:49:34.747988 31553 solver.cpp:238]     Train net output #0: loss = 0.37886 (* 1 = 0.37886 loss)
I0426 20:49:34.747995 31553 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:34.853914 31553 solver.cpp:219] Iteration 400 (944.158 iter/s, 0.105915s/100 iters), loss = 0.256577
I0426 20:49:34.853938 31553 solver.cpp:238]     Train net output #0: loss = 0.256577 (* 1 = 0.256577 loss)
I0426 20:49:34.853945 31553 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:34.958431 31553 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:35.027951 31560 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:35.028592 31553 solver.cpp:398]     Test net output #0: accuracy = 0.8455
I0426 20:49:35.028610 31553 solver.cpp:398]     Test net output #1: loss = 0.395721 (* 1 = 0.395721 loss)
I0426 20:49:35.029647 31553 solver.cpp:219] Iteration 500 (569.165 iter/s, 0.175696s/100 iters), loss = 0.492498
I0426 20:49:35.029697 31553 solver.cpp:238]     Train net output #0: loss = 0.492498 (* 1 = 0.492498 loss)
I0426 20:49:35.029706 31553 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:35.135668 31553 solver.cpp:219] Iteration 600 (943.738 iter/s, 0.105962s/100 iters), loss = 0.13407
I0426 20:49:35.135691 31553 solver.cpp:238]     Train net output #0: loss = 0.13407 (* 1 = 0.13407 loss)
I0426 20:49:35.135697 31553 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:35.241056 31553 solver.cpp:219] Iteration 700 (949.169 iter/s, 0.105355s/100 iters), loss = 0.206559
I0426 20:49:35.241080 31553 solver.cpp:238]     Train net output #0: loss = 0.206559 (* 1 = 0.206559 loss)
I0426 20:49:35.241101 31553 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:35.345731 31553 solver.cpp:219] Iteration 800 (955.645 iter/s, 0.104641s/100 iters), loss = 0.275498
I0426 20:49:35.345753 31553 solver.cpp:238]     Train net output #0: loss = 0.275498 (* 1 = 0.275498 loss)
I0426 20:49:35.345775 31553 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:35.450991 31553 solver.cpp:219] Iteration 900 (950.324 iter/s, 0.105227s/100 iters), loss = 0.184993
I0426 20:49:35.451016 31553 solver.cpp:238]     Train net output #0: loss = 0.184993 (* 1 = 0.184993 loss)
I0426 20:49:35.451040 31553 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:35.486363 31559 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:35.555163 31553 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:35.575739 31553 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:35.583636 31553 solver.cpp:311] Iteration 1000, loss = 0.119297
I0426 20:49:35.583657 31553 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:35.659473 31560 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:35.660132 31553 solver.cpp:398]     Test net output #0: accuracy = 0.972
I0426 20:49:35.660154 31553 solver.cpp:398]     Test net output #1: loss = 0.0889281 (* 1 = 0.0889281 loss)
I0426 20:49:35.660176 31553 solver.cpp:316] Optimization Done.
I0426 20:49:35.660181 31553 caffe.cpp:259] Optimization Done.
