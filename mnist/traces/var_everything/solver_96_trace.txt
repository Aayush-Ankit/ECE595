I0426 20:51:48.714393 32061 caffe.cpp:218] Using GPUs 0
I0426 20:51:48.752475 32061 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:49.275712 32061 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test96.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:49.275846 32061 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test96.prototxt
I0426 20:51:49.276262 32061 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:49.276280 32061 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:49.276382 32061 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:49.276461 32061 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:49.276561 32061 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:49.276583 32061 net.cpp:86] Creating Layer mnist
I0426 20:51:49.276592 32061 net.cpp:382] mnist -> data
I0426 20:51:49.276613 32061 net.cpp:382] mnist -> label
I0426 20:51:49.277726 32061 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:49.280478 32061 net.cpp:124] Setting up mnist
I0426 20:51:49.280494 32061 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:49.280500 32061 net.cpp:131] Top shape: 64 (64)
I0426 20:51:49.280504 32061 net.cpp:139] Memory required for data: 200960
I0426 20:51:49.280511 32061 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:49.280585 32061 net.cpp:86] Creating Layer conv0
I0426 20:51:49.280606 32061 net.cpp:408] conv0 <- data
I0426 20:51:49.280619 32061 net.cpp:382] conv0 -> conv0
I0426 20:51:49.548588 32061 net.cpp:124] Setting up conv0
I0426 20:51:49.548614 32061 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:49.548619 32061 net.cpp:139] Memory required for data: 1675520
I0426 20:51:49.548633 32061 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:49.548645 32061 net.cpp:86] Creating Layer pool0
I0426 20:51:49.548650 32061 net.cpp:408] pool0 <- conv0
I0426 20:51:49.548655 32061 net.cpp:382] pool0 -> pool0
I0426 20:51:49.548713 32061 net.cpp:124] Setting up pool0
I0426 20:51:49.548718 32061 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:49.548722 32061 net.cpp:139] Memory required for data: 2044160
I0426 20:51:49.548723 32061 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:49.548734 32061 net.cpp:86] Creating Layer conv1
I0426 20:51:49.548738 32061 net.cpp:408] conv1 <- pool0
I0426 20:51:49.548741 32061 net.cpp:382] conv1 -> conv1
I0426 20:51:49.551498 32061 net.cpp:124] Setting up conv1
I0426 20:51:49.551528 32061 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:49.551532 32061 net.cpp:139] Memory required for data: 2863360
I0426 20:51:49.551539 32061 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:49.551547 32061 net.cpp:86] Creating Layer pool1
I0426 20:51:49.551550 32061 net.cpp:408] pool1 <- conv1
I0426 20:51:49.551555 32061 net.cpp:382] pool1 -> pool1
I0426 20:51:49.551606 32061 net.cpp:124] Setting up pool1
I0426 20:51:49.551611 32061 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:49.551614 32061 net.cpp:139] Memory required for data: 3068160
I0426 20:51:49.551616 32061 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:49.551623 32061 net.cpp:86] Creating Layer ip1
I0426 20:51:49.551626 32061 net.cpp:408] ip1 <- pool1
I0426 20:51:49.551631 32061 net.cpp:382] ip1 -> ip1
I0426 20:51:49.553887 32061 net.cpp:124] Setting up ip1
I0426 20:51:49.553899 32061 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:49.553917 32061 net.cpp:139] Memory required for data: 3144960
I0426 20:51:49.553925 32061 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:49.553931 32061 net.cpp:86] Creating Layer relu1
I0426 20:51:49.553935 32061 net.cpp:408] relu1 <- ip1
I0426 20:51:49.553938 32061 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:49.554144 32061 net.cpp:124] Setting up relu1
I0426 20:51:49.554152 32061 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:49.554155 32061 net.cpp:139] Memory required for data: 3221760
I0426 20:51:49.554158 32061 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:49.554165 32061 net.cpp:86] Creating Layer ip2
I0426 20:51:49.554168 32061 net.cpp:408] ip2 <- ip1
I0426 20:51:49.554173 32061 net.cpp:382] ip2 -> ip2
I0426 20:51:49.554741 32061 net.cpp:124] Setting up ip2
I0426 20:51:49.554747 32061 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:49.554765 32061 net.cpp:139] Memory required for data: 3298560
I0426 20:51:49.554770 32061 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:49.554776 32061 net.cpp:86] Creating Layer relu2
I0426 20:51:49.554780 32061 net.cpp:408] relu2 <- ip2
I0426 20:51:49.554785 32061 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:49.555626 32061 net.cpp:124] Setting up relu2
I0426 20:51:49.555639 32061 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:49.555656 32061 net.cpp:139] Memory required for data: 3375360
I0426 20:51:49.555660 32061 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:49.555666 32061 net.cpp:86] Creating Layer ip3
I0426 20:51:49.555670 32061 net.cpp:408] ip3 <- ip2
I0426 20:51:49.555675 32061 net.cpp:382] ip3 -> ip3
I0426 20:51:49.556720 32061 net.cpp:124] Setting up ip3
I0426 20:51:49.556746 32061 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:49.556764 32061 net.cpp:139] Memory required for data: 3377920
I0426 20:51:49.556773 32061 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:49.556778 32061 net.cpp:86] Creating Layer relu3
I0426 20:51:49.556782 32061 net.cpp:408] relu3 <- ip3
I0426 20:51:49.556785 32061 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:49.557027 32061 net.cpp:124] Setting up relu3
I0426 20:51:49.557039 32061 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:49.557042 32061 net.cpp:139] Memory required for data: 3380480
I0426 20:51:49.557045 32061 layer_factory.hpp:77] Creating layer loss
I0426 20:51:49.557051 32061 net.cpp:86] Creating Layer loss
I0426 20:51:49.557055 32061 net.cpp:408] loss <- ip3
I0426 20:51:49.557060 32061 net.cpp:408] loss <- label
I0426 20:51:49.557065 32061 net.cpp:382] loss -> loss
I0426 20:51:49.557085 32061 layer_factory.hpp:77] Creating layer loss
I0426 20:51:49.557363 32061 net.cpp:124] Setting up loss
I0426 20:51:49.557370 32061 net.cpp:131] Top shape: (1)
I0426 20:51:49.557374 32061 net.cpp:134]     with loss weight 1
I0426 20:51:49.557387 32061 net.cpp:139] Memory required for data: 3380484
I0426 20:51:49.557390 32061 net.cpp:200] loss needs backward computation.
I0426 20:51:49.557394 32061 net.cpp:200] relu3 needs backward computation.
I0426 20:51:49.557396 32061 net.cpp:200] ip3 needs backward computation.
I0426 20:51:49.557399 32061 net.cpp:200] relu2 needs backward computation.
I0426 20:51:49.557402 32061 net.cpp:200] ip2 needs backward computation.
I0426 20:51:49.557405 32061 net.cpp:200] relu1 needs backward computation.
I0426 20:51:49.557407 32061 net.cpp:200] ip1 needs backward computation.
I0426 20:51:49.557410 32061 net.cpp:200] pool1 needs backward computation.
I0426 20:51:49.557413 32061 net.cpp:200] conv1 needs backward computation.
I0426 20:51:49.557416 32061 net.cpp:200] pool0 needs backward computation.
I0426 20:51:49.557420 32061 net.cpp:200] conv0 needs backward computation.
I0426 20:51:49.557422 32061 net.cpp:202] mnist does not need backward computation.
I0426 20:51:49.557425 32061 net.cpp:244] This network produces output loss
I0426 20:51:49.557433 32061 net.cpp:257] Network initialization done.
I0426 20:51:49.557742 32061 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test96.prototxt
I0426 20:51:49.557767 32061 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:49.557857 32061 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:49.557932 32061 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:49.557976 32061 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:49.557987 32061 net.cpp:86] Creating Layer mnist
I0426 20:51:49.557991 32061 net.cpp:382] mnist -> data
I0426 20:51:49.557999 32061 net.cpp:382] mnist -> label
I0426 20:51:49.558100 32061 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:49.560047 32061 net.cpp:124] Setting up mnist
I0426 20:51:49.560060 32061 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:49.560065 32061 net.cpp:131] Top shape: 100 (100)
I0426 20:51:49.560066 32061 net.cpp:139] Memory required for data: 314000
I0426 20:51:49.560070 32061 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:49.560078 32061 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:49.560082 32061 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:49.560087 32061 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:49.560093 32061 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:49.560148 32061 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:49.560153 32061 net.cpp:131] Top shape: 100 (100)
I0426 20:51:49.560156 32061 net.cpp:131] Top shape: 100 (100)
I0426 20:51:49.560158 32061 net.cpp:139] Memory required for data: 314800
I0426 20:51:49.560161 32061 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:49.560169 32061 net.cpp:86] Creating Layer conv0
I0426 20:51:49.560173 32061 net.cpp:408] conv0 <- data
I0426 20:51:49.560178 32061 net.cpp:382] conv0 -> conv0
I0426 20:51:49.562244 32061 net.cpp:124] Setting up conv0
I0426 20:51:49.562258 32061 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:49.562263 32061 net.cpp:139] Memory required for data: 2618800
I0426 20:51:49.562270 32061 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:49.562278 32061 net.cpp:86] Creating Layer pool0
I0426 20:51:49.562296 32061 net.cpp:408] pool0 <- conv0
I0426 20:51:49.562300 32061 net.cpp:382] pool0 -> pool0
I0426 20:51:49.562336 32061 net.cpp:124] Setting up pool0
I0426 20:51:49.562341 32061 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:49.562343 32061 net.cpp:139] Memory required for data: 3194800
I0426 20:51:49.562346 32061 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:49.562355 32061 net.cpp:86] Creating Layer conv1
I0426 20:51:49.562357 32061 net.cpp:408] conv1 <- pool0
I0426 20:51:49.562362 32061 net.cpp:382] conv1 -> conv1
I0426 20:51:49.564091 32061 net.cpp:124] Setting up conv1
I0426 20:51:49.564103 32061 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:49.564107 32061 net.cpp:139] Memory required for data: 4474800
I0426 20:51:49.564116 32061 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:49.564137 32061 net.cpp:86] Creating Layer pool1
I0426 20:51:49.564141 32061 net.cpp:408] pool1 <- conv1
I0426 20:51:49.564147 32061 net.cpp:382] pool1 -> pool1
I0426 20:51:49.564188 32061 net.cpp:124] Setting up pool1
I0426 20:51:49.564193 32061 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:49.564195 32061 net.cpp:139] Memory required for data: 4794800
I0426 20:51:49.564203 32061 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:49.564209 32061 net.cpp:86] Creating Layer ip1
I0426 20:51:49.564232 32061 net.cpp:408] ip1 <- pool1
I0426 20:51:49.564237 32061 net.cpp:382] ip1 -> ip1
I0426 20:51:49.565786 32061 net.cpp:124] Setting up ip1
I0426 20:51:49.565795 32061 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:49.565809 32061 net.cpp:139] Memory required for data: 4914800
I0426 20:51:49.565816 32061 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:49.565822 32061 net.cpp:86] Creating Layer relu1
I0426 20:51:49.565826 32061 net.cpp:408] relu1 <- ip1
I0426 20:51:49.565830 32061 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:49.565994 32061 net.cpp:124] Setting up relu1
I0426 20:51:49.566002 32061 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:49.566006 32061 net.cpp:139] Memory required for data: 5034800
I0426 20:51:49.566009 32061 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:49.566016 32061 net.cpp:86] Creating Layer ip2
I0426 20:51:49.566020 32061 net.cpp:408] ip2 <- ip1
I0426 20:51:49.566025 32061 net.cpp:382] ip2 -> ip2
I0426 20:51:49.566614 32061 net.cpp:124] Setting up ip2
I0426 20:51:49.566622 32061 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:49.566625 32061 net.cpp:139] Memory required for data: 5154800
I0426 20:51:49.566630 32061 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:49.566635 32061 net.cpp:86] Creating Layer relu2
I0426 20:51:49.566638 32061 net.cpp:408] relu2 <- ip2
I0426 20:51:49.566642 32061 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:49.566792 32061 net.cpp:124] Setting up relu2
I0426 20:51:49.566802 32061 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:49.566804 32061 net.cpp:139] Memory required for data: 5274800
I0426 20:51:49.566807 32061 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:49.566812 32061 net.cpp:86] Creating Layer ip3
I0426 20:51:49.566815 32061 net.cpp:408] ip3 <- ip2
I0426 20:51:49.566828 32061 net.cpp:382] ip3 -> ip3
I0426 20:51:49.566961 32061 net.cpp:124] Setting up ip3
I0426 20:51:49.566967 32061 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:49.566972 32061 net.cpp:139] Memory required for data: 5278800
I0426 20:51:49.566979 32061 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:49.566984 32061 net.cpp:86] Creating Layer relu3
I0426 20:51:49.566988 32061 net.cpp:408] relu3 <- ip3
I0426 20:51:49.566992 32061 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:49.567826 32061 net.cpp:124] Setting up relu3
I0426 20:51:49.567837 32061 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:49.567840 32061 net.cpp:139] Memory required for data: 5282800
I0426 20:51:49.567843 32061 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:49.567859 32061 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:49.567862 32061 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:49.567867 32061 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:49.567873 32061 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:49.567931 32061 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:49.567952 32061 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:49.567955 32061 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:49.567958 32061 net.cpp:139] Memory required for data: 5290800
I0426 20:51:49.567961 32061 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:49.567967 32061 net.cpp:86] Creating Layer accuracy
I0426 20:51:49.567970 32061 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:49.567975 32061 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:49.567978 32061 net.cpp:382] accuracy -> accuracy
I0426 20:51:49.567986 32061 net.cpp:124] Setting up accuracy
I0426 20:51:49.567988 32061 net.cpp:131] Top shape: (1)
I0426 20:51:49.567991 32061 net.cpp:139] Memory required for data: 5290804
I0426 20:51:49.567994 32061 layer_factory.hpp:77] Creating layer loss
I0426 20:51:49.567999 32061 net.cpp:86] Creating Layer loss
I0426 20:51:49.568002 32061 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:49.568006 32061 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:49.568011 32061 net.cpp:382] loss -> loss
I0426 20:51:49.568015 32061 layer_factory.hpp:77] Creating layer loss
I0426 20:51:49.568266 32061 net.cpp:124] Setting up loss
I0426 20:51:49.568275 32061 net.cpp:131] Top shape: (1)
I0426 20:51:49.568279 32061 net.cpp:134]     with loss weight 1
I0426 20:51:49.568294 32061 net.cpp:139] Memory required for data: 5290808
I0426 20:51:49.568297 32061 net.cpp:200] loss needs backward computation.
I0426 20:51:49.568300 32061 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:49.568305 32061 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:49.568307 32061 net.cpp:200] relu3 needs backward computation.
I0426 20:51:49.568310 32061 net.cpp:200] ip3 needs backward computation.
I0426 20:51:49.568312 32061 net.cpp:200] relu2 needs backward computation.
I0426 20:51:49.568315 32061 net.cpp:200] ip2 needs backward computation.
I0426 20:51:49.568318 32061 net.cpp:200] relu1 needs backward computation.
I0426 20:51:49.568327 32061 net.cpp:200] ip1 needs backward computation.
I0426 20:51:49.568331 32061 net.cpp:200] pool1 needs backward computation.
I0426 20:51:49.568333 32061 net.cpp:200] conv1 needs backward computation.
I0426 20:51:49.568341 32061 net.cpp:200] pool0 needs backward computation.
I0426 20:51:49.568344 32061 net.cpp:200] conv0 needs backward computation.
I0426 20:51:49.568347 32061 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:49.568352 32061 net.cpp:202] mnist does not need backward computation.
I0426 20:51:49.568356 32061 net.cpp:244] This network produces output accuracy
I0426 20:51:49.568358 32061 net.cpp:244] This network produces output loss
I0426 20:51:49.568368 32061 net.cpp:257] Network initialization done.
I0426 20:51:49.568415 32061 solver.cpp:56] Solver scaffolding done.
I0426 20:51:49.568732 32061 caffe.cpp:248] Starting Optimization
I0426 20:51:49.568738 32061 solver.cpp:273] Solving LeNet
I0426 20:51:49.568740 32061 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:49.570320 32061 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:49.575444 32061 blocking_queue.cpp:49] Waiting for data
I0426 20:51:49.646430 32068 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:49.647070 32061 solver.cpp:398]     Test net output #0: accuracy = 0.0961
I0426 20:51:49.647089 32061 solver.cpp:398]     Test net output #1: loss = 2.33496 (* 1 = 2.33496 loss)
I0426 20:51:49.650248 32061 solver.cpp:219] Iteration 0 (0 iter/s, 0.0814817s/100 iters), loss = 2.35017
I0426 20:51:49.650269 32061 solver.cpp:238]     Train net output #0: loss = 2.35017 (* 1 = 2.35017 loss)
I0426 20:51:49.650295 32061 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:49.785254 32061 solver.cpp:219] Iteration 100 (740.915 iter/s, 0.134968s/100 iters), loss = 1.16572
I0426 20:51:49.785285 32061 solver.cpp:238]     Train net output #0: loss = 1.16572 (* 1 = 1.16572 loss)
I0426 20:51:49.785292 32061 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:49.920276 32061 solver.cpp:219] Iteration 200 (740.875 iter/s, 0.134976s/100 iters), loss = 0.820226
I0426 20:51:49.920317 32061 solver.cpp:238]     Train net output #0: loss = 0.820226 (* 1 = 0.820226 loss)
I0426 20:51:49.920328 32061 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:50.057325 32061 solver.cpp:219] Iteration 300 (729.938 iter/s, 0.136998s/100 iters), loss = 0.658647
I0426 20:51:50.057356 32061 solver.cpp:238]     Train net output #0: loss = 0.658647 (* 1 = 0.658647 loss)
I0426 20:51:50.057363 32061 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:50.192111 32061 solver.cpp:219] Iteration 400 (742.165 iter/s, 0.134741s/100 iters), loss = 1.01467
I0426 20:51:50.192150 32061 solver.cpp:238]     Train net output #0: loss = 1.01467 (* 1 = 1.01467 loss)
I0426 20:51:50.192160 32061 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:50.330181 32061 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:50.406319 32068 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:50.406968 32061 solver.cpp:398]     Test net output #0: accuracy = 0.7594
I0426 20:51:50.406993 32061 solver.cpp:398]     Test net output #1: loss = 0.806408 (* 1 = 0.806408 loss)
I0426 20:51:50.408249 32061 solver.cpp:219] Iteration 500 (462.784 iter/s, 0.216083s/100 iters), loss = 0.944209
I0426 20:51:50.408313 32061 solver.cpp:238]     Train net output #0: loss = 0.944209 (* 1 = 0.944209 loss)
I0426 20:51:50.408327 32061 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:50.539753 32061 solver.cpp:219] Iteration 600 (760.858 iter/s, 0.131431s/100 iters), loss = 0.751779
I0426 20:51:50.539784 32061 solver.cpp:238]     Train net output #0: loss = 0.751779 (* 1 = 0.751779 loss)
I0426 20:51:50.539793 32061 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:50.673316 32061 solver.cpp:219] Iteration 700 (748.956 iter/s, 0.133519s/100 iters), loss = 0.676953
I0426 20:51:50.673348 32061 solver.cpp:238]     Train net output #0: loss = 0.676953 (* 1 = 0.676953 loss)
I0426 20:51:50.673357 32061 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:50.806936 32061 solver.cpp:219] Iteration 800 (748.651 iter/s, 0.133574s/100 iters), loss = 0.736907
I0426 20:51:50.806968 32061 solver.cpp:238]     Train net output #0: loss = 0.736907 (* 1 = 0.736907 loss)
I0426 20:51:50.806977 32061 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:50.939056 32061 solver.cpp:219] Iteration 900 (757.143 iter/s, 0.132076s/100 iters), loss = 0.657552
I0426 20:51:50.939090 32061 solver.cpp:238]     Train net output #0: loss = 0.657552 (* 1 = 0.657552 loss)
I0426 20:51:50.939097 32061 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:50.981323 32067 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:51.064784 32061 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:51.071002 32061 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:51.074257 32061 solver.cpp:311] Iteration 1000, loss = 0.759794
I0426 20:51:51.074278 32061 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:51.149577 32068 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:51.150226 32061 solver.cpp:398]     Test net output #0: accuracy = 0.7682
I0426 20:51:51.150252 32061 solver.cpp:398]     Test net output #1: loss = 0.773786 (* 1 = 0.773786 loss)
I0426 20:51:51.150259 32061 solver.cpp:316] Optimization Done.
I0426 20:51:51.150261 32061 caffe.cpp:259] Optimization Done.
