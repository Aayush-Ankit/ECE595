I0426 20:52:16.463518 32161 caffe.cpp:218] Using GPUs 0
I0426 20:52:16.501066 32161 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:17.035933 32161 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test108.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:17.036077 32161 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test108.prototxt
I0426 20:52:17.036492 32161 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:17.036511 32161 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:17.036614 32161 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:17.036695 32161 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:17.036803 32161 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:17.036834 32161 net.cpp:86] Creating Layer mnist
I0426 20:52:17.036844 32161 net.cpp:382] mnist -> data
I0426 20:52:17.036867 32161 net.cpp:382] mnist -> label
I0426 20:52:17.037961 32161 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:17.040496 32161 net.cpp:124] Setting up mnist
I0426 20:52:17.040516 32161 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:17.040522 32161 net.cpp:131] Top shape: 64 (64)
I0426 20:52:17.040525 32161 net.cpp:139] Memory required for data: 200960
I0426 20:52:17.040534 32161 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:17.040580 32161 net.cpp:86] Creating Layer conv0
I0426 20:52:17.040603 32161 net.cpp:408] conv0 <- data
I0426 20:52:17.040616 32161 net.cpp:382] conv0 -> conv0
I0426 20:52:17.336824 32161 net.cpp:124] Setting up conv0
I0426 20:52:17.336856 32161 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:17.336861 32161 net.cpp:139] Memory required for data: 3887360
I0426 20:52:17.336879 32161 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:17.336894 32161 net.cpp:86] Creating Layer pool0
I0426 20:52:17.336899 32161 net.cpp:408] pool0 <- conv0
I0426 20:52:17.336906 32161 net.cpp:382] pool0 -> pool0
I0426 20:52:17.336966 32161 net.cpp:124] Setting up pool0
I0426 20:52:17.336972 32161 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:17.336977 32161 net.cpp:139] Memory required for data: 4808960
I0426 20:52:17.336980 32161 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:17.336993 32161 net.cpp:86] Creating Layer conv1
I0426 20:52:17.336997 32161 net.cpp:408] conv1 <- pool0
I0426 20:52:17.337003 32161 net.cpp:382] conv1 -> conv1
I0426 20:52:17.340365 32161 net.cpp:124] Setting up conv1
I0426 20:52:17.340384 32161 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:52:17.340389 32161 net.cpp:139] Memory required for data: 4972800
I0426 20:52:17.340399 32161 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:17.340407 32161 net.cpp:86] Creating Layer pool1
I0426 20:52:17.340412 32161 net.cpp:408] pool1 <- conv1
I0426 20:52:17.340418 32161 net.cpp:382] pool1 -> pool1
I0426 20:52:17.340463 32161 net.cpp:124] Setting up pool1
I0426 20:52:17.340471 32161 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:52:17.340474 32161 net.cpp:139] Memory required for data: 5013760
I0426 20:52:17.340477 32161 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:17.340492 32161 net.cpp:86] Creating Layer ip1
I0426 20:52:17.340495 32161 net.cpp:408] ip1 <- pool1
I0426 20:52:17.340502 32161 net.cpp:382] ip1 -> ip1
I0426 20:52:17.340961 32161 net.cpp:124] Setting up ip1
I0426 20:52:17.340972 32161 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:17.340976 32161 net.cpp:139] Memory required for data: 5090560
I0426 20:52:17.340986 32161 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:17.340991 32161 net.cpp:86] Creating Layer relu1
I0426 20:52:17.340996 32161 net.cpp:408] relu1 <- ip1
I0426 20:52:17.341001 32161 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:17.341207 32161 net.cpp:124] Setting up relu1
I0426 20:52:17.341217 32161 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:17.341222 32161 net.cpp:139] Memory required for data: 5167360
I0426 20:52:17.341225 32161 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:17.341233 32161 net.cpp:86] Creating Layer ip2
I0426 20:52:17.341236 32161 net.cpp:408] ip2 <- ip1
I0426 20:52:17.341243 32161 net.cpp:382] ip2 -> ip2
I0426 20:52:17.341564 32161 net.cpp:124] Setting up ip2
I0426 20:52:17.341573 32161 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:17.341578 32161 net.cpp:139] Memory required for data: 5192960
I0426 20:52:17.341583 32161 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:17.341590 32161 net.cpp:86] Creating Layer relu2
I0426 20:52:17.341594 32161 net.cpp:408] relu2 <- ip2
I0426 20:52:17.341599 32161 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:17.342538 32161 net.cpp:124] Setting up relu2
I0426 20:52:17.342553 32161 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:17.342558 32161 net.cpp:139] Memory required for data: 5218560
I0426 20:52:17.342562 32161 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:17.342571 32161 net.cpp:86] Creating Layer ip3
I0426 20:52:17.342574 32161 net.cpp:408] ip3 <- ip2
I0426 20:52:17.342581 32161 net.cpp:382] ip3 -> ip3
I0426 20:52:17.342705 32161 net.cpp:124] Setting up ip3
I0426 20:52:17.342715 32161 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:17.342717 32161 net.cpp:139] Memory required for data: 5221120
I0426 20:52:17.342727 32161 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:17.342734 32161 net.cpp:86] Creating Layer relu3
I0426 20:52:17.342738 32161 net.cpp:408] relu3 <- ip3
I0426 20:52:17.342744 32161 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:17.342944 32161 net.cpp:124] Setting up relu3
I0426 20:52:17.342954 32161 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:17.342958 32161 net.cpp:139] Memory required for data: 5223680
I0426 20:52:17.342962 32161 layer_factory.hpp:77] Creating layer loss
I0426 20:52:17.342969 32161 net.cpp:86] Creating Layer loss
I0426 20:52:17.342974 32161 net.cpp:408] loss <- ip3
I0426 20:52:17.342979 32161 net.cpp:408] loss <- label
I0426 20:52:17.342985 32161 net.cpp:382] loss -> loss
I0426 20:52:17.343008 32161 layer_factory.hpp:77] Creating layer loss
I0426 20:52:17.343279 32161 net.cpp:124] Setting up loss
I0426 20:52:17.343291 32161 net.cpp:131] Top shape: (1)
I0426 20:52:17.343296 32161 net.cpp:134]     with loss weight 1
I0426 20:52:17.343312 32161 net.cpp:139] Memory required for data: 5223684
I0426 20:52:17.343315 32161 net.cpp:200] loss needs backward computation.
I0426 20:52:17.343320 32161 net.cpp:200] relu3 needs backward computation.
I0426 20:52:17.343323 32161 net.cpp:200] ip3 needs backward computation.
I0426 20:52:17.343327 32161 net.cpp:200] relu2 needs backward computation.
I0426 20:52:17.343331 32161 net.cpp:200] ip2 needs backward computation.
I0426 20:52:17.343334 32161 net.cpp:200] relu1 needs backward computation.
I0426 20:52:17.343338 32161 net.cpp:200] ip1 needs backward computation.
I0426 20:52:17.343341 32161 net.cpp:200] pool1 needs backward computation.
I0426 20:52:17.343345 32161 net.cpp:200] conv1 needs backward computation.
I0426 20:52:17.343349 32161 net.cpp:200] pool0 needs backward computation.
I0426 20:52:17.343353 32161 net.cpp:200] conv0 needs backward computation.
I0426 20:52:17.343358 32161 net.cpp:202] mnist does not need backward computation.
I0426 20:52:17.343361 32161 net.cpp:244] This network produces output loss
I0426 20:52:17.343372 32161 net.cpp:257] Network initialization done.
I0426 20:52:17.343755 32161 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test108.prototxt
I0426 20:52:17.343788 32161 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:17.343896 32161 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:17.343991 32161 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:17.344044 32161 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:17.344061 32161 net.cpp:86] Creating Layer mnist
I0426 20:52:17.344068 32161 net.cpp:382] mnist -> data
I0426 20:52:17.344076 32161 net.cpp:382] mnist -> label
I0426 20:52:17.344179 32161 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:17.346477 32161 net.cpp:124] Setting up mnist
I0426 20:52:17.346493 32161 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:17.346500 32161 net.cpp:131] Top shape: 100 (100)
I0426 20:52:17.346504 32161 net.cpp:139] Memory required for data: 314000
I0426 20:52:17.346509 32161 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:17.346526 32161 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:17.346531 32161 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:17.346537 32161 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:17.346545 32161 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:17.346598 32161 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:17.346614 32161 net.cpp:131] Top shape: 100 (100)
I0426 20:52:17.346619 32161 net.cpp:131] Top shape: 100 (100)
I0426 20:52:17.346623 32161 net.cpp:139] Memory required for data: 314800
I0426 20:52:17.346627 32161 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:17.346637 32161 net.cpp:86] Creating Layer conv0
I0426 20:52:17.346642 32161 net.cpp:408] conv0 <- data
I0426 20:52:17.346647 32161 net.cpp:382] conv0 -> conv0
I0426 20:52:17.348536 32161 net.cpp:124] Setting up conv0
I0426 20:52:17.348553 32161 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:17.348557 32161 net.cpp:139] Memory required for data: 6074800
I0426 20:52:17.348570 32161 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:17.348579 32161 net.cpp:86] Creating Layer pool0
I0426 20:52:17.348584 32161 net.cpp:408] pool0 <- conv0
I0426 20:52:17.348590 32161 net.cpp:382] pool0 -> pool0
I0426 20:52:17.348635 32161 net.cpp:124] Setting up pool0
I0426 20:52:17.348642 32161 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:17.348645 32161 net.cpp:139] Memory required for data: 7514800
I0426 20:52:17.348649 32161 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:17.348661 32161 net.cpp:86] Creating Layer conv1
I0426 20:52:17.348665 32161 net.cpp:408] conv1 <- pool0
I0426 20:52:17.348673 32161 net.cpp:382] conv1 -> conv1
I0426 20:52:17.351287 32161 net.cpp:124] Setting up conv1
I0426 20:52:17.351303 32161 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:52:17.351308 32161 net.cpp:139] Memory required for data: 7770800
I0426 20:52:17.351320 32161 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:17.351328 32161 net.cpp:86] Creating Layer pool1
I0426 20:52:17.351333 32161 net.cpp:408] pool1 <- conv1
I0426 20:52:17.351339 32161 net.cpp:382] pool1 -> pool1
I0426 20:52:17.351392 32161 net.cpp:124] Setting up pool1
I0426 20:52:17.351402 32161 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:52:17.351405 32161 net.cpp:139] Memory required for data: 7834800
I0426 20:52:17.351409 32161 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:17.351416 32161 net.cpp:86] Creating Layer ip1
I0426 20:52:17.351420 32161 net.cpp:408] ip1 <- pool1
I0426 20:52:17.351428 32161 net.cpp:382] ip1 -> ip1
I0426 20:52:17.351905 32161 net.cpp:124] Setting up ip1
I0426 20:52:17.351917 32161 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:17.351933 32161 net.cpp:139] Memory required for data: 7954800
I0426 20:52:17.351941 32161 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:17.351949 32161 net.cpp:86] Creating Layer relu1
I0426 20:52:17.351953 32161 net.cpp:408] relu1 <- ip1
I0426 20:52:17.351961 32161 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:17.352174 32161 net.cpp:124] Setting up relu1
I0426 20:52:17.352185 32161 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:17.352190 32161 net.cpp:139] Memory required for data: 8074800
I0426 20:52:17.352195 32161 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:17.352206 32161 net.cpp:86] Creating Layer ip2
I0426 20:52:17.352210 32161 net.cpp:408] ip2 <- ip1
I0426 20:52:17.352217 32161 net.cpp:382] ip2 -> ip2
I0426 20:52:17.352560 32161 net.cpp:124] Setting up ip2
I0426 20:52:17.352569 32161 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:17.352573 32161 net.cpp:139] Memory required for data: 8114800
I0426 20:52:17.352581 32161 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:17.352588 32161 net.cpp:86] Creating Layer relu2
I0426 20:52:17.352592 32161 net.cpp:408] relu2 <- ip2
I0426 20:52:17.352598 32161 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:17.352797 32161 net.cpp:124] Setting up relu2
I0426 20:52:17.352818 32161 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:17.352823 32161 net.cpp:139] Memory required for data: 8154800
I0426 20:52:17.352826 32161 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:17.352834 32161 net.cpp:86] Creating Layer ip3
I0426 20:52:17.352838 32161 net.cpp:408] ip3 <- ip2
I0426 20:52:17.352844 32161 net.cpp:382] ip3 -> ip3
I0426 20:52:17.352983 32161 net.cpp:124] Setting up ip3
I0426 20:52:17.352993 32161 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:17.352996 32161 net.cpp:139] Memory required for data: 8158800
I0426 20:52:17.353005 32161 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:17.353011 32161 net.cpp:86] Creating Layer relu3
I0426 20:52:17.353015 32161 net.cpp:408] relu3 <- ip3
I0426 20:52:17.353020 32161 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:17.353982 32161 net.cpp:124] Setting up relu3
I0426 20:52:17.353996 32161 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:17.354001 32161 net.cpp:139] Memory required for data: 8162800
I0426 20:52:17.354005 32161 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:17.354012 32161 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:17.354015 32161 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:17.354022 32161 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:17.354030 32161 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:17.354100 32161 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:17.354110 32161 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:17.354113 32161 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:17.354117 32161 net.cpp:139] Memory required for data: 8170800
I0426 20:52:17.354121 32161 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:17.354127 32161 net.cpp:86] Creating Layer accuracy
I0426 20:52:17.354131 32161 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:17.354136 32161 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:17.354142 32161 net.cpp:382] accuracy -> accuracy
I0426 20:52:17.354151 32161 net.cpp:124] Setting up accuracy
I0426 20:52:17.354161 32161 net.cpp:131] Top shape: (1)
I0426 20:52:17.354166 32161 net.cpp:139] Memory required for data: 8170804
I0426 20:52:17.354169 32161 layer_factory.hpp:77] Creating layer loss
I0426 20:52:17.354174 32161 net.cpp:86] Creating Layer loss
I0426 20:52:17.354178 32161 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:17.354182 32161 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:17.354187 32161 net.cpp:382] loss -> loss
I0426 20:52:17.354194 32161 layer_factory.hpp:77] Creating layer loss
I0426 20:52:17.354457 32161 net.cpp:124] Setting up loss
I0426 20:52:17.354471 32161 net.cpp:131] Top shape: (1)
I0426 20:52:17.354475 32161 net.cpp:134]     with loss weight 1
I0426 20:52:17.354495 32161 net.cpp:139] Memory required for data: 8170808
I0426 20:52:17.354499 32161 net.cpp:200] loss needs backward computation.
I0426 20:52:17.354504 32161 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:17.354509 32161 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:17.354513 32161 net.cpp:200] relu3 needs backward computation.
I0426 20:52:17.354517 32161 net.cpp:200] ip3 needs backward computation.
I0426 20:52:17.354521 32161 net.cpp:200] relu2 needs backward computation.
I0426 20:52:17.354526 32161 net.cpp:200] ip2 needs backward computation.
I0426 20:52:17.354528 32161 net.cpp:200] relu1 needs backward computation.
I0426 20:52:17.354532 32161 net.cpp:200] ip1 needs backward computation.
I0426 20:52:17.354537 32161 net.cpp:200] pool1 needs backward computation.
I0426 20:52:17.354540 32161 net.cpp:200] conv1 needs backward computation.
I0426 20:52:17.354543 32161 net.cpp:200] pool0 needs backward computation.
I0426 20:52:17.354547 32161 net.cpp:200] conv0 needs backward computation.
I0426 20:52:17.354552 32161 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:17.354557 32161 net.cpp:202] mnist does not need backward computation.
I0426 20:52:17.354559 32161 net.cpp:244] This network produces output accuracy
I0426 20:52:17.354563 32161 net.cpp:244] This network produces output loss
I0426 20:52:17.354575 32161 net.cpp:257] Network initialization done.
I0426 20:52:17.354624 32161 solver.cpp:56] Solver scaffolding done.
I0426 20:52:17.355008 32161 caffe.cpp:248] Starting Optimization
I0426 20:52:17.355015 32161 solver.cpp:273] Solving LeNet
I0426 20:52:17.355018 32161 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:17.355950 32161 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:17.361758 32161 blocking_queue.cpp:49] Waiting for data
I0426 20:52:17.431278 32168 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:17.431900 32161 solver.cpp:398]     Test net output #0: accuracy = 0.1133
I0426 20:52:17.431920 32161 solver.cpp:398]     Test net output #1: loss = 2.30618 (* 1 = 2.30618 loss)
I0426 20:52:17.436342 32161 solver.cpp:219] Iteration 0 (0 iter/s, 0.0812943s/100 iters), loss = 2.3138
I0426 20:52:17.436365 32161 solver.cpp:238]     Train net output #0: loss = 2.3138 (* 1 = 2.3138 loss)
I0426 20:52:17.436377 32161 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:17.539744 32161 solver.cpp:219] Iteration 100 (967.411 iter/s, 0.103369s/100 iters), loss = 0.945084
I0426 20:52:17.539784 32161 solver.cpp:238]     Train net output #0: loss = 0.945084 (* 1 = 0.945084 loss)
I0426 20:52:17.539790 32161 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:17.648727 32161 solver.cpp:219] Iteration 200 (917.872 iter/s, 0.108948s/100 iters), loss = 0.656925
I0426 20:52:17.648768 32161 solver.cpp:238]     Train net output #0: loss = 0.656925 (* 1 = 0.656925 loss)
I0426 20:52:17.648774 32161 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:17.754338 32161 solver.cpp:219] Iteration 300 (947.19 iter/s, 0.105575s/100 iters), loss = 0.575888
I0426 20:52:17.754379 32161 solver.cpp:238]     Train net output #0: loss = 0.575888 (* 1 = 0.575888 loss)
I0426 20:52:17.754384 32161 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:17.857780 32161 solver.cpp:219] Iteration 400 (967.056 iter/s, 0.103407s/100 iters), loss = 0.723044
I0426 20:52:17.857805 32161 solver.cpp:238]     Train net output #0: loss = 0.723044 (* 1 = 0.723044 loss)
I0426 20:52:17.857810 32161 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:17.959799 32161 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:18.016947 32168 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:18.018331 32161 solver.cpp:398]     Test net output #0: accuracy = 0.7613
I0426 20:52:18.018365 32161 solver.cpp:398]     Test net output #1: loss = 0.597382 (* 1 = 0.597382 loss)
I0426 20:52:18.019387 32161 solver.cpp:219] Iteration 500 (618.931 iter/s, 0.161569s/100 iters), loss = 0.747281
I0426 20:52:18.019438 32161 solver.cpp:238]     Train net output #0: loss = 0.747281 (* 1 = 0.747281 loss)
I0426 20:52:18.019443 32161 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:18.127559 32161 solver.cpp:219] Iteration 600 (924.845 iter/s, 0.108126s/100 iters), loss = 0.588926
I0426 20:52:18.127601 32161 solver.cpp:238]     Train net output #0: loss = 0.588926 (* 1 = 0.588926 loss)
I0426 20:52:18.127607 32161 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:18.230886 32161 solver.cpp:219] Iteration 700 (968.14 iter/s, 0.103291s/100 iters), loss = 0.482802
I0426 20:52:18.230926 32161 solver.cpp:238]     Train net output #0: loss = 0.482802 (* 1 = 0.482802 loss)
I0426 20:52:18.230932 32161 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:18.333997 32161 solver.cpp:219] Iteration 800 (970.179 iter/s, 0.103074s/100 iters), loss = 0.562036
I0426 20:52:18.334038 32161 solver.cpp:238]     Train net output #0: loss = 0.562036 (* 1 = 0.562036 loss)
I0426 20:52:18.334044 32161 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:18.436998 32161 solver.cpp:219] Iteration 900 (971.193 iter/s, 0.102966s/100 iters), loss = 0.532038
I0426 20:52:18.437039 32161 solver.cpp:238]     Train net output #0: loss = 0.532038 (* 1 = 0.532038 loss)
I0426 20:52:18.437047 32161 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:18.471514 32167 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:18.539160 32161 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:18.540949 32161 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:18.542121 32161 solver.cpp:311] Iteration 1000, loss = 0.330771
I0426 20:52:18.542137 32161 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:18.600877 32168 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:18.602799 32161 solver.cpp:398]     Test net output #0: accuracy = 0.8622
I0426 20:52:18.602833 32161 solver.cpp:398]     Test net output #1: loss = 0.342009 (* 1 = 0.342009 loss)
I0426 20:52:18.602838 32161 solver.cpp:316] Optimization Done.
I0426 20:52:18.602840 32161 caffe.cpp:259] Optimization Done.
