I0426 20:50:50.103351 31846 caffe.cpp:218] Using GPUs 0
I0426 20:50:50.132138 31846 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:50.577764 31846 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test71.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:50.577927 31846 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test71.prototxt
I0426 20:50:50.578230 31846 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:50.578243 31846 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:50.578310 31846 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:50:50.578367 31846 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:50.578455 31846 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:50.578474 31846 net.cpp:86] Creating Layer mnist
I0426 20:50:50.578481 31846 net.cpp:382] mnist -> data
I0426 20:50:50.578500 31846 net.cpp:382] mnist -> label
I0426 20:50:50.579464 31846 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:50.581645 31846 net.cpp:124] Setting up mnist
I0426 20:50:50.581674 31846 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:50.581678 31846 net.cpp:131] Top shape: 64 (64)
I0426 20:50:50.581681 31846 net.cpp:139] Memory required for data: 200960
I0426 20:50:50.581687 31846 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:50.581724 31846 net.cpp:86] Creating Layer conv0
I0426 20:50:50.581729 31846 net.cpp:408] conv0 <- data
I0426 20:50:50.581740 31846 net.cpp:382] conv0 -> conv0
I0426 20:50:50.807121 31846 net.cpp:124] Setting up conv0
I0426 20:50:50.807147 31846 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:50.807150 31846 net.cpp:139] Memory required for data: 1675520
I0426 20:50:50.807164 31846 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:50.807178 31846 net.cpp:86] Creating Layer pool0
I0426 20:50:50.807180 31846 net.cpp:408] pool0 <- conv0
I0426 20:50:50.807185 31846 net.cpp:382] pool0 -> pool0
I0426 20:50:50.807245 31846 net.cpp:124] Setting up pool0
I0426 20:50:50.807250 31846 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:50.807267 31846 net.cpp:139] Memory required for data: 2044160
I0426 20:50:50.807271 31846 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:50.807281 31846 net.cpp:86] Creating Layer conv1
I0426 20:50:50.807284 31846 net.cpp:408] conv1 <- pool0
I0426 20:50:50.807288 31846 net.cpp:382] conv1 -> conv1
I0426 20:50:50.810009 31846 net.cpp:124] Setting up conv1
I0426 20:50:50.810022 31846 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:50:50.810040 31846 net.cpp:139] Memory required for data: 2453760
I0426 20:50:50.810050 31846 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:50.810056 31846 net.cpp:86] Creating Layer pool1
I0426 20:50:50.810060 31846 net.cpp:408] pool1 <- conv1
I0426 20:50:50.810065 31846 net.cpp:382] pool1 -> pool1
I0426 20:50:50.810115 31846 net.cpp:124] Setting up pool1
I0426 20:50:50.810122 31846 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:50:50.810123 31846 net.cpp:139] Memory required for data: 2556160
I0426 20:50:50.810127 31846 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:50.810133 31846 net.cpp:86] Creating Layer ip1
I0426 20:50:50.810137 31846 net.cpp:408] ip1 <- pool1
I0426 20:50:50.810140 31846 net.cpp:382] ip1 -> ip1
I0426 20:50:50.811089 31846 net.cpp:124] Setting up ip1
I0426 20:50:50.811100 31846 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:50.811118 31846 net.cpp:139] Memory required for data: 2558720
I0426 20:50:50.811141 31846 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:50.811148 31846 net.cpp:86] Creating Layer relu1
I0426 20:50:50.811151 31846 net.cpp:408] relu1 <- ip1
I0426 20:50:50.811156 31846 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:50.811341 31846 net.cpp:124] Setting up relu1
I0426 20:50:50.811349 31846 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:50.811352 31846 net.cpp:139] Memory required for data: 2561280
I0426 20:50:50.811357 31846 layer_factory.hpp:77] Creating layer loss
I0426 20:50:50.811362 31846 net.cpp:86] Creating Layer loss
I0426 20:50:50.811364 31846 net.cpp:408] loss <- ip1
I0426 20:50:50.811368 31846 net.cpp:408] loss <- label
I0426 20:50:50.811373 31846 net.cpp:382] loss -> loss
I0426 20:50:50.811391 31846 layer_factory.hpp:77] Creating layer loss
I0426 20:50:50.812271 31846 net.cpp:124] Setting up loss
I0426 20:50:50.812283 31846 net.cpp:131] Top shape: (1)
I0426 20:50:50.812302 31846 net.cpp:134]     with loss weight 1
I0426 20:50:50.812315 31846 net.cpp:139] Memory required for data: 2561284
I0426 20:50:50.812319 31846 net.cpp:200] loss needs backward computation.
I0426 20:50:50.812322 31846 net.cpp:200] relu1 needs backward computation.
I0426 20:50:50.812325 31846 net.cpp:200] ip1 needs backward computation.
I0426 20:50:50.812328 31846 net.cpp:200] pool1 needs backward computation.
I0426 20:50:50.812331 31846 net.cpp:200] conv1 needs backward computation.
I0426 20:50:50.812333 31846 net.cpp:200] pool0 needs backward computation.
I0426 20:50:50.812336 31846 net.cpp:200] conv0 needs backward computation.
I0426 20:50:50.812340 31846 net.cpp:202] mnist does not need backward computation.
I0426 20:50:50.812342 31846 net.cpp:244] This network produces output loss
I0426 20:50:50.812350 31846 net.cpp:257] Network initialization done.
I0426 20:50:50.812624 31846 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test71.prototxt
I0426 20:50:50.812646 31846 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:50.812721 31846 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:50:50.812788 31846 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:50.812851 31846 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:50.812865 31846 net.cpp:86] Creating Layer mnist
I0426 20:50:50.812870 31846 net.cpp:382] mnist -> data
I0426 20:50:50.812877 31846 net.cpp:382] mnist -> label
I0426 20:50:50.812958 31846 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:50.814898 31846 net.cpp:124] Setting up mnist
I0426 20:50:50.814925 31846 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:50.814930 31846 net.cpp:131] Top shape: 100 (100)
I0426 20:50:50.814934 31846 net.cpp:139] Memory required for data: 314000
I0426 20:50:50.814937 31846 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:50.814944 31846 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:50.814961 31846 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:50.814965 31846 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:50.814986 31846 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:50.815034 31846 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:50.815039 31846 net.cpp:131] Top shape: 100 (100)
I0426 20:50:50.815042 31846 net.cpp:131] Top shape: 100 (100)
I0426 20:50:50.815045 31846 net.cpp:139] Memory required for data: 314800
I0426 20:50:50.815047 31846 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:50.815055 31846 net.cpp:86] Creating Layer conv0
I0426 20:50:50.815058 31846 net.cpp:408] conv0 <- data
I0426 20:50:50.815073 31846 net.cpp:382] conv0 -> conv0
I0426 20:50:50.816051 31846 net.cpp:124] Setting up conv0
I0426 20:50:50.816074 31846 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:50.816078 31846 net.cpp:139] Memory required for data: 2618800
I0426 20:50:50.816087 31846 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:50.816092 31846 net.cpp:86] Creating Layer pool0
I0426 20:50:50.816095 31846 net.cpp:408] pool0 <- conv0
I0426 20:50:50.816099 31846 net.cpp:382] pool0 -> pool0
I0426 20:50:50.816133 31846 net.cpp:124] Setting up pool0
I0426 20:50:50.816138 31846 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:50.816141 31846 net.cpp:139] Memory required for data: 3194800
I0426 20:50:50.816143 31846 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:50.816164 31846 net.cpp:86] Creating Layer conv1
I0426 20:50:50.816166 31846 net.cpp:408] conv1 <- pool0
I0426 20:50:50.816172 31846 net.cpp:382] conv1 -> conv1
I0426 20:50:50.818469 31846 net.cpp:124] Setting up conv1
I0426 20:50:50.818481 31846 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:50:50.818486 31846 net.cpp:139] Memory required for data: 3834800
I0426 20:50:50.818495 31846 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:50.818500 31846 net.cpp:86] Creating Layer pool1
I0426 20:50:50.818524 31846 net.cpp:408] pool1 <- conv1
I0426 20:50:50.818531 31846 net.cpp:382] pool1 -> pool1
I0426 20:50:50.818584 31846 net.cpp:124] Setting up pool1
I0426 20:50:50.818590 31846 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:50:50.818593 31846 net.cpp:139] Memory required for data: 3994800
I0426 20:50:50.818595 31846 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:50.818603 31846 net.cpp:86] Creating Layer ip1
I0426 20:50:50.818606 31846 net.cpp:408] ip1 <- pool1
I0426 20:50:50.818612 31846 net.cpp:382] ip1 -> ip1
I0426 20:50:50.818761 31846 net.cpp:124] Setting up ip1
I0426 20:50:50.818778 31846 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:50.818781 31846 net.cpp:139] Memory required for data: 3998800
I0426 20:50:50.818789 31846 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:50.818799 31846 net.cpp:86] Creating Layer relu1
I0426 20:50:50.818805 31846 net.cpp:408] relu1 <- ip1
I0426 20:50:50.818825 31846 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:50.819739 31846 net.cpp:124] Setting up relu1
I0426 20:50:50.819752 31846 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:50.819756 31846 net.cpp:139] Memory required for data: 4002800
I0426 20:50:50.819758 31846 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:50:50.819772 31846 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:50:50.819775 31846 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:50:50.819780 31846 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:50:50.819787 31846 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:50:50.819834 31846 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:50:50.819839 31846 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:50.819842 31846 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:50.819845 31846 net.cpp:139] Memory required for data: 4010800
I0426 20:50:50.819849 31846 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:50.819854 31846 net.cpp:86] Creating Layer accuracy
I0426 20:50:50.819856 31846 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:50:50.819861 31846 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:50.819865 31846 net.cpp:382] accuracy -> accuracy
I0426 20:50:50.819871 31846 net.cpp:124] Setting up accuracy
I0426 20:50:50.819875 31846 net.cpp:131] Top shape: (1)
I0426 20:50:50.819877 31846 net.cpp:139] Memory required for data: 4010804
I0426 20:50:50.819880 31846 layer_factory.hpp:77] Creating layer loss
I0426 20:50:50.819885 31846 net.cpp:86] Creating Layer loss
I0426 20:50:50.819888 31846 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:50:50.819891 31846 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:50.819895 31846 net.cpp:382] loss -> loss
I0426 20:50:50.819901 31846 layer_factory.hpp:77] Creating layer loss
I0426 20:50:50.820158 31846 net.cpp:124] Setting up loss
I0426 20:50:50.820166 31846 net.cpp:131] Top shape: (1)
I0426 20:50:50.820169 31846 net.cpp:134]     with loss weight 1
I0426 20:50:50.820174 31846 net.cpp:139] Memory required for data: 4010808
I0426 20:50:50.820178 31846 net.cpp:200] loss needs backward computation.
I0426 20:50:50.820183 31846 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:50.820185 31846 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:50:50.820189 31846 net.cpp:200] relu1 needs backward computation.
I0426 20:50:50.820199 31846 net.cpp:200] ip1 needs backward computation.
I0426 20:50:50.820201 31846 net.cpp:200] pool1 needs backward computation.
I0426 20:50:50.820204 31846 net.cpp:200] conv1 needs backward computation.
I0426 20:50:50.820206 31846 net.cpp:200] pool0 needs backward computation.
I0426 20:50:50.820209 31846 net.cpp:200] conv0 needs backward computation.
I0426 20:50:50.820217 31846 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:50.820221 31846 net.cpp:202] mnist does not need backward computation.
I0426 20:50:50.820224 31846 net.cpp:244] This network produces output accuracy
I0426 20:50:50.820227 31846 net.cpp:244] This network produces output loss
I0426 20:50:50.820266 31846 net.cpp:257] Network initialization done.
I0426 20:50:50.820297 31846 solver.cpp:56] Solver scaffolding done.
I0426 20:50:50.820498 31846 caffe.cpp:248] Starting Optimization
I0426 20:50:50.820504 31846 solver.cpp:273] Solving LeNet
I0426 20:50:50.820509 31846 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:50.820608 31846 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:50.824179 31846 blocking_queue.cpp:49] Waiting for data
I0426 20:50:50.897392 31853 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:50.897929 31846 solver.cpp:398]     Test net output #0: accuracy = 0.0584
I0426 20:50:50.897964 31846 solver.cpp:398]     Test net output #1: loss = 2.37592 (* 1 = 2.37592 loss)
I0426 20:50:50.900228 31846 solver.cpp:219] Iteration 0 (-1.03696e-42 iter/s, 0.0796928s/100 iters), loss = 2.36846
I0426 20:50:50.900293 31846 solver.cpp:238]     Train net output #0: loss = 2.36846 (* 1 = 2.36846 loss)
I0426 20:50:50.900306 31846 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:50.987756 31846 solver.cpp:219] Iteration 100 (1143.28 iter/s, 0.0874674s/100 iters), loss = 0.896255
I0426 20:50:50.987781 31846 solver.cpp:238]     Train net output #0: loss = 0.896255 (* 1 = 0.896255 loss)
I0426 20:50:50.987787 31846 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:51.061518 31846 solver.cpp:219] Iteration 200 (1356.32 iter/s, 0.073729s/100 iters), loss = 0.637865
I0426 20:50:51.061575 31846 solver.cpp:238]     Train net output #0: loss = 0.637865 (* 1 = 0.637865 loss)
I0426 20:50:51.061583 31846 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:51.135658 31846 solver.cpp:219] Iteration 300 (1350.04 iter/s, 0.0740721s/100 iters), loss = 0.191872
I0426 20:50:51.135699 31846 solver.cpp:238]     Train net output #0: loss = 0.191872 (* 1 = 0.191872 loss)
I0426 20:50:51.135706 31846 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:51.208583 31846 solver.cpp:219] Iteration 400 (1372.21 iter/s, 0.0728749s/100 iters), loss = 0.133813
I0426 20:50:51.208607 31846 solver.cpp:238]     Train net output #0: loss = 0.133813 (* 1 = 0.133813 loss)
I0426 20:50:51.208613 31846 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:51.281198 31846 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:51.355957 31853 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:51.356472 31846 solver.cpp:398]     Test net output #0: accuracy = 0.9609
I0426 20:50:51.356493 31846 solver.cpp:398]     Test net output #1: loss = 0.135822 (* 1 = 0.135822 loss)
I0426 20:50:51.357344 31846 solver.cpp:219] Iteration 500 (672.383 iter/s, 0.148725s/100 iters), loss = 0.148447
I0426 20:50:51.357367 31846 solver.cpp:238]     Train net output #0: loss = 0.148447 (* 1 = 0.148447 loss)
I0426 20:50:51.357373 31846 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:51.443807 31846 solver.cpp:219] Iteration 600 (1157 iter/s, 0.0864307s/100 iters), loss = 0.111038
I0426 20:50:51.443831 31846 solver.cpp:238]     Train net output #0: loss = 0.111038 (* 1 = 0.111038 loss)
I0426 20:50:51.443847 31846 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:51.518229 31846 solver.cpp:219] Iteration 700 (1344.29 iter/s, 0.0743885s/100 iters), loss = 0.181748
I0426 20:50:51.518252 31846 solver.cpp:238]     Train net output #0: loss = 0.181748 (* 1 = 0.181748 loss)
I0426 20:50:51.518275 31846 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:51.599347 31846 solver.cpp:219] Iteration 800 (1233.27 iter/s, 0.0810854s/100 iters), loss = 0.22601
I0426 20:50:51.599371 31846 solver.cpp:238]     Train net output #0: loss = 0.22601 (* 1 = 0.22601 loss)
I0426 20:50:51.599377 31846 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:51.681870 31846 solver.cpp:219] Iteration 900 (1212.26 iter/s, 0.0824903s/100 iters), loss = 0.227509
I0426 20:50:51.681893 31846 solver.cpp:238]     Train net output #0: loss = 0.227509 (* 1 = 0.227509 loss)
I0426 20:50:51.681900 31846 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:51.708670 31852 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:51.762127 31846 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:51.762895 31846 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:51.763423 31846 solver.cpp:311] Iteration 1000, loss = 0.0912903
I0426 20:50:51.763443 31846 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:51.839027 31853 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:51.839568 31846 solver.cpp:398]     Test net output #0: accuracy = 0.9729
I0426 20:50:51.839586 31846 solver.cpp:398]     Test net output #1: loss = 0.0829189 (* 1 = 0.0829189 loss)
I0426 20:50:51.839591 31846 solver.cpp:316] Optimization Done.
I0426 20:50:51.839593 31846 caffe.cpp:259] Optimization Done.
