I0426 20:51:56.217799 32087 caffe.cpp:218] Using GPUs 0
I0426 20:51:56.249353 32087 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:56.753814 32087 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test99.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:56.753939 32087 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test99.prototxt
I0426 20:51:56.754222 32087 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:56.754235 32087 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:56.754300 32087 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:51:56.754359 32087 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:56.754441 32087 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:56.754461 32087 net.cpp:86] Creating Layer mnist
I0426 20:51:56.754467 32087 net.cpp:382] mnist -> data
I0426 20:51:56.754484 32087 net.cpp:382] mnist -> label
I0426 20:51:56.755408 32087 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:56.757524 32087 net.cpp:124] Setting up mnist
I0426 20:51:56.757539 32087 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:56.757544 32087 net.cpp:131] Top shape: 64 (64)
I0426 20:51:56.757546 32087 net.cpp:139] Memory required for data: 200960
I0426 20:51:56.757552 32087 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:56.757566 32087 net.cpp:86] Creating Layer conv0
I0426 20:51:56.757571 32087 net.cpp:408] conv0 <- data
I0426 20:51:56.757580 32087 net.cpp:382] conv0 -> conv0
I0426 20:51:56.986692 32087 net.cpp:124] Setting up conv0
I0426 20:51:56.986738 32087 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:51:56.986742 32087 net.cpp:139] Memory required for data: 3887360
I0426 20:51:56.986757 32087 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:56.986785 32087 net.cpp:86] Creating Layer pool0
I0426 20:51:56.986789 32087 net.cpp:408] pool0 <- conv0
I0426 20:51:56.986794 32087 net.cpp:382] pool0 -> pool0
I0426 20:51:56.986840 32087 net.cpp:124] Setting up pool0
I0426 20:51:56.986848 32087 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:51:56.986865 32087 net.cpp:139] Memory required for data: 4808960
I0426 20:51:56.986883 32087 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:56.986896 32087 net.cpp:86] Creating Layer conv1
I0426 20:51:56.986901 32087 net.cpp:408] conv1 <- pool0
I0426 20:51:56.986907 32087 net.cpp:382] conv1 -> conv1
I0426 20:51:56.989753 32087 net.cpp:124] Setting up conv1
I0426 20:51:56.989766 32087 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:51:56.989786 32087 net.cpp:139] Memory required for data: 4972800
I0426 20:51:56.989794 32087 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:56.989802 32087 net.cpp:86] Creating Layer pool1
I0426 20:51:56.989821 32087 net.cpp:408] pool1 <- conv1
I0426 20:51:56.989826 32087 net.cpp:382] pool1 -> pool1
I0426 20:51:56.989881 32087 net.cpp:124] Setting up pool1
I0426 20:51:56.989886 32087 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:51:56.989889 32087 net.cpp:139] Memory required for data: 5013760
I0426 20:51:56.989892 32087 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:56.989899 32087 net.cpp:86] Creating Layer ip1
I0426 20:51:56.989902 32087 net.cpp:408] ip1 <- pool1
I0426 20:51:56.989908 32087 net.cpp:382] ip1 -> ip1
I0426 20:51:56.990861 32087 net.cpp:124] Setting up ip1
I0426 20:51:56.990872 32087 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:56.990891 32087 net.cpp:139] Memory required for data: 5016320
I0426 20:51:56.990916 32087 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:56.990922 32087 net.cpp:86] Creating Layer relu1
I0426 20:51:56.990926 32087 net.cpp:408] relu1 <- ip1
I0426 20:51:56.990948 32087 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:56.991142 32087 net.cpp:124] Setting up relu1
I0426 20:51:56.991153 32087 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:56.991155 32087 net.cpp:139] Memory required for data: 5018880
I0426 20:51:56.991159 32087 layer_factory.hpp:77] Creating layer loss
I0426 20:51:56.991166 32087 net.cpp:86] Creating Layer loss
I0426 20:51:56.991184 32087 net.cpp:408] loss <- ip1
I0426 20:51:56.991189 32087 net.cpp:408] loss <- label
I0426 20:51:56.991195 32087 net.cpp:382] loss -> loss
I0426 20:51:56.991209 32087 layer_factory.hpp:77] Creating layer loss
I0426 20:51:56.992120 32087 net.cpp:124] Setting up loss
I0426 20:51:56.992132 32087 net.cpp:131] Top shape: (1)
I0426 20:51:56.992152 32087 net.cpp:134]     with loss weight 1
I0426 20:51:56.992166 32087 net.cpp:139] Memory required for data: 5018884
I0426 20:51:56.992169 32087 net.cpp:200] loss needs backward computation.
I0426 20:51:56.992185 32087 net.cpp:200] relu1 needs backward computation.
I0426 20:51:56.992187 32087 net.cpp:200] ip1 needs backward computation.
I0426 20:51:56.992192 32087 net.cpp:200] pool1 needs backward computation.
I0426 20:51:56.992193 32087 net.cpp:200] conv1 needs backward computation.
I0426 20:51:56.992197 32087 net.cpp:200] pool0 needs backward computation.
I0426 20:51:56.992199 32087 net.cpp:200] conv0 needs backward computation.
I0426 20:51:56.992203 32087 net.cpp:202] mnist does not need backward computation.
I0426 20:51:56.992207 32087 net.cpp:244] This network produces output loss
I0426 20:51:56.992215 32087 net.cpp:257] Network initialization done.
I0426 20:51:56.992511 32087 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test99.prototxt
I0426 20:51:56.992548 32087 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:56.992635 32087 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:51:56.992707 32087 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:56.992753 32087 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:56.992765 32087 net.cpp:86] Creating Layer mnist
I0426 20:51:56.992771 32087 net.cpp:382] mnist -> data
I0426 20:51:56.992779 32087 net.cpp:382] mnist -> label
I0426 20:51:56.992908 32087 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:56.994943 32087 net.cpp:124] Setting up mnist
I0426 20:51:56.994972 32087 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:56.994976 32087 net.cpp:131] Top shape: 100 (100)
I0426 20:51:56.994979 32087 net.cpp:139] Memory required for data: 314000
I0426 20:51:56.994982 32087 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:56.995005 32087 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:56.995008 32087 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:56.995014 32087 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:56.995020 32087 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:56.995093 32087 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:56.995100 32087 net.cpp:131] Top shape: 100 (100)
I0426 20:51:56.995105 32087 net.cpp:131] Top shape: 100 (100)
I0426 20:51:56.995106 32087 net.cpp:139] Memory required for data: 314800
I0426 20:51:56.995110 32087 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:56.995120 32087 net.cpp:86] Creating Layer conv0
I0426 20:51:56.995122 32087 net.cpp:408] conv0 <- data
I0426 20:51:56.995127 32087 net.cpp:382] conv0 -> conv0
I0426 20:51:56.995997 32087 net.cpp:124] Setting up conv0
I0426 20:51:56.996009 32087 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:51:56.996013 32087 net.cpp:139] Memory required for data: 6074800
I0426 20:51:56.996021 32087 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:56.996027 32087 net.cpp:86] Creating Layer pool0
I0426 20:51:56.996031 32087 net.cpp:408] pool0 <- conv0
I0426 20:51:56.996037 32087 net.cpp:382] pool0 -> pool0
I0426 20:51:56.996070 32087 net.cpp:124] Setting up pool0
I0426 20:51:56.996078 32087 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:51:56.996080 32087 net.cpp:139] Memory required for data: 7514800
I0426 20:51:56.996083 32087 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:56.996093 32087 net.cpp:86] Creating Layer conv1
I0426 20:51:56.996095 32087 net.cpp:408] conv1 <- pool0
I0426 20:51:56.996100 32087 net.cpp:382] conv1 -> conv1
I0426 20:51:56.998348 32087 net.cpp:124] Setting up conv1
I0426 20:51:56.998360 32087 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:51:56.998364 32087 net.cpp:139] Memory required for data: 7770800
I0426 20:51:56.998389 32087 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:56.998395 32087 net.cpp:86] Creating Layer pool1
I0426 20:51:56.998409 32087 net.cpp:408] pool1 <- conv1
I0426 20:51:56.998414 32087 net.cpp:382] pool1 -> pool1
I0426 20:51:56.998462 32087 net.cpp:124] Setting up pool1
I0426 20:51:56.998469 32087 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:51:56.998471 32087 net.cpp:139] Memory required for data: 7834800
I0426 20:51:56.998474 32087 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:56.998481 32087 net.cpp:86] Creating Layer ip1
I0426 20:51:56.998486 32087 net.cpp:408] ip1 <- pool1
I0426 20:51:56.998489 32087 net.cpp:382] ip1 -> ip1
I0426 20:51:56.998594 32087 net.cpp:124] Setting up ip1
I0426 20:51:56.998601 32087 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:56.998605 32087 net.cpp:139] Memory required for data: 7838800
I0426 20:51:56.998611 32087 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:56.998616 32087 net.cpp:86] Creating Layer relu1
I0426 20:51:56.998620 32087 net.cpp:408] relu1 <- ip1
I0426 20:51:56.998625 32087 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:56.999580 32087 net.cpp:124] Setting up relu1
I0426 20:51:56.999593 32087 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:56.999598 32087 net.cpp:139] Memory required for data: 7842800
I0426 20:51:56.999600 32087 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:51:56.999624 32087 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:51:56.999626 32087 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:51:56.999631 32087 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:51:56.999637 32087 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:51:56.999691 32087 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:51:56.999697 32087 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:56.999701 32087 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:56.999703 32087 net.cpp:139] Memory required for data: 7850800
I0426 20:51:56.999706 32087 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:56.999711 32087 net.cpp:86] Creating Layer accuracy
I0426 20:51:56.999713 32087 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:51:56.999718 32087 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:56.999722 32087 net.cpp:382] accuracy -> accuracy
I0426 20:51:56.999729 32087 net.cpp:124] Setting up accuracy
I0426 20:51:56.999733 32087 net.cpp:131] Top shape: (1)
I0426 20:51:56.999735 32087 net.cpp:139] Memory required for data: 7850804
I0426 20:51:56.999738 32087 layer_factory.hpp:77] Creating layer loss
I0426 20:51:56.999760 32087 net.cpp:86] Creating Layer loss
I0426 20:51:56.999763 32087 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:51:56.999773 32087 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:56.999776 32087 net.cpp:382] loss -> loss
I0426 20:51:56.999783 32087 layer_factory.hpp:77] Creating layer loss
I0426 20:51:57.000043 32087 net.cpp:124] Setting up loss
I0426 20:51:57.000053 32087 net.cpp:131] Top shape: (1)
I0426 20:51:57.000056 32087 net.cpp:134]     with loss weight 1
I0426 20:51:57.000077 32087 net.cpp:139] Memory required for data: 7850808
I0426 20:51:57.000080 32087 net.cpp:200] loss needs backward computation.
I0426 20:51:57.000090 32087 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:57.000093 32087 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:51:57.000097 32087 net.cpp:200] relu1 needs backward computation.
I0426 20:51:57.000099 32087 net.cpp:200] ip1 needs backward computation.
I0426 20:51:57.000102 32087 net.cpp:200] pool1 needs backward computation.
I0426 20:51:57.000105 32087 net.cpp:200] conv1 needs backward computation.
I0426 20:51:57.000109 32087 net.cpp:200] pool0 needs backward computation.
I0426 20:51:57.000113 32087 net.cpp:200] conv0 needs backward computation.
I0426 20:51:57.000120 32087 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:57.000123 32087 net.cpp:202] mnist does not need backward computation.
I0426 20:51:57.000126 32087 net.cpp:244] This network produces output accuracy
I0426 20:51:57.000129 32087 net.cpp:244] This network produces output loss
I0426 20:51:57.000169 32087 net.cpp:257] Network initialization done.
I0426 20:51:57.000216 32087 solver.cpp:56] Solver scaffolding done.
I0426 20:51:57.000440 32087 caffe.cpp:248] Starting Optimization
I0426 20:51:57.000447 32087 solver.cpp:273] Solving LeNet
I0426 20:51:57.000449 32087 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:57.001471 32087 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:57.005733 32087 blocking_queue.cpp:49] Waiting for data
I0426 20:51:57.078780 32094 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:57.079376 32087 solver.cpp:398]     Test net output #0: accuracy = 0.1153
I0426 20:51:57.079396 32087 solver.cpp:398]     Test net output #1: loss = 2.36128 (* 1 = 2.36128 loss)
I0426 20:51:57.083281 32087 solver.cpp:219] Iteration 0 (0 iter/s, 0.0827891s/100 iters), loss = 2.32091
I0426 20:51:57.083305 32087 solver.cpp:238]     Train net output #0: loss = 2.32091 (* 1 = 2.32091 loss)
I0426 20:51:57.083317 32087 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:57.173545 32087 solver.cpp:219] Iteration 100 (1108.31 iter/s, 0.0902277s/100 iters), loss = 0.688343
I0426 20:51:57.173588 32087 solver.cpp:238]     Train net output #0: loss = 0.688343 (* 1 = 0.688343 loss)
I0426 20:51:57.173594 32087 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:57.264917 32087 solver.cpp:219] Iteration 200 (1094.87 iter/s, 0.0913347s/100 iters), loss = 0.189409
I0426 20:51:57.264961 32087 solver.cpp:238]     Train net output #0: loss = 0.189409 (* 1 = 0.189409 loss)
I0426 20:51:57.264967 32087 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:57.353934 32087 solver.cpp:219] Iteration 300 (1123.91 iter/s, 0.0889752s/100 iters), loss = 0.166859
I0426 20:51:57.353956 32087 solver.cpp:238]     Train net output #0: loss = 0.166859 (* 1 = 0.166859 loss)
I0426 20:51:57.353962 32087 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:57.430660 32087 solver.cpp:219] Iteration 400 (1303.89 iter/s, 0.0766937s/100 iters), loss = 0.126875
I0426 20:51:57.430701 32087 solver.cpp:238]     Train net output #0: loss = 0.126875 (* 1 = 0.126875 loss)
I0426 20:51:57.430706 32087 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:57.506253 32087 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:57.578860 32094 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:57.579437 32087 solver.cpp:398]     Test net output #0: accuracy = 0.9627
I0426 20:51:57.579457 32087 solver.cpp:398]     Test net output #1: loss = 0.124275 (* 1 = 0.124275 loss)
I0426 20:51:57.580387 32087 solver.cpp:219] Iteration 500 (668.046 iter/s, 0.14969s/100 iters), loss = 0.162553
I0426 20:51:57.580422 32087 solver.cpp:238]     Train net output #0: loss = 0.162553 (* 1 = 0.162553 loss)
I0426 20:51:57.580428 32087 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:57.669018 32087 solver.cpp:219] Iteration 600 (1128.87 iter/s, 0.0885842s/100 iters), loss = 0.100714
I0426 20:51:57.669056 32087 solver.cpp:238]     Train net output #0: loss = 0.100715 (* 1 = 0.100715 loss)
I0426 20:51:57.669062 32087 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:57.746446 32087 solver.cpp:219] Iteration 700 (1292.3 iter/s, 0.0773816s/100 iters), loss = 0.193878
I0426 20:51:57.746484 32087 solver.cpp:238]     Train net output #0: loss = 0.193878 (* 1 = 0.193878 loss)
I0426 20:51:57.746490 32087 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:57.833233 32087 solver.cpp:219] Iteration 800 (1152.68 iter/s, 0.0867543s/100 iters), loss = 0.254604
I0426 20:51:57.833271 32087 solver.cpp:238]     Train net output #0: loss = 0.254604 (* 1 = 0.254604 loss)
I0426 20:51:57.833277 32087 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:57.921665 32087 solver.cpp:219] Iteration 900 (1131.28 iter/s, 0.0883958s/100 iters), loss = 0.157679
I0426 20:51:57.921707 32087 solver.cpp:238]     Train net output #0: loss = 0.157679 (* 1 = 0.157679 loss)
I0426 20:51:57.921721 32087 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:57.949064 32093 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:58.001056 32087 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:58.001780 32087 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:58.002282 32087 solver.cpp:311] Iteration 1000, loss = 0.108156
I0426 20:51:58.002298 32087 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:58.074930 32094 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:58.075471 32087 solver.cpp:398]     Test net output #0: accuracy = 0.9725
I0426 20:51:58.075491 32087 solver.cpp:398]     Test net output #1: loss = 0.0884286 (* 1 = 0.0884286 loss)
I0426 20:51:58.075500 32087 solver.cpp:316] Optimization Done.
I0426 20:51:58.075505 32087 caffe.cpp:259] Optimization Done.
