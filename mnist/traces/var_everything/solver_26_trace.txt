I0426 20:49:04.828534 31443 caffe.cpp:218] Using GPUs 0
I0426 20:49:04.858750 31443 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:05.317683 31443 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test26.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:05.317843 31443 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test26.prototxt
I0426 20:49:05.318150 31443 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:05.318162 31443 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:05.318231 31443 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:05.318302 31443 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:05.318387 31443 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:05.318408 31443 net.cpp:86] Creating Layer mnist
I0426 20:49:05.318415 31443 net.cpp:382] mnist -> data
I0426 20:49:05.318434 31443 net.cpp:382] mnist -> label
I0426 20:49:05.319401 31443 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:05.321626 31443 net.cpp:124] Setting up mnist
I0426 20:49:05.321656 31443 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:05.321661 31443 net.cpp:131] Top shape: 64 (64)
I0426 20:49:05.321665 31443 net.cpp:139] Memory required for data: 200960
I0426 20:49:05.321671 31443 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:05.321684 31443 net.cpp:86] Creating Layer conv0
I0426 20:49:05.321704 31443 net.cpp:408] conv0 <- data
I0426 20:49:05.321714 31443 net.cpp:382] conv0 -> conv0
I0426 20:49:05.552397 31443 net.cpp:124] Setting up conv0
I0426 20:49:05.552424 31443 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:49:05.552428 31443 net.cpp:139] Memory required for data: 1675520
I0426 20:49:05.552443 31443 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:05.552454 31443 net.cpp:86] Creating Layer pool0
I0426 20:49:05.552477 31443 net.cpp:408] pool0 <- conv0
I0426 20:49:05.552498 31443 net.cpp:382] pool0 -> pool0
I0426 20:49:05.552542 31443 net.cpp:124] Setting up pool0
I0426 20:49:05.552548 31443 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:49:05.552551 31443 net.cpp:139] Memory required for data: 2044160
I0426 20:49:05.552569 31443 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:05.552577 31443 net.cpp:86] Creating Layer ip1
I0426 20:49:05.552579 31443 net.cpp:408] ip1 <- pool0
I0426 20:49:05.552585 31443 net.cpp:382] ip1 -> ip1
I0426 20:49:05.555816 31443 net.cpp:124] Setting up ip1
I0426 20:49:05.555830 31443 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:05.555832 31443 net.cpp:139] Memory required for data: 2120960
I0426 20:49:05.555840 31443 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:05.555861 31443 net.cpp:86] Creating Layer relu1
I0426 20:49:05.555865 31443 net.cpp:408] relu1 <- ip1
I0426 20:49:05.555869 31443 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:05.556061 31443 net.cpp:124] Setting up relu1
I0426 20:49:05.556071 31443 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:05.556073 31443 net.cpp:139] Memory required for data: 2197760
I0426 20:49:05.556077 31443 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:05.556083 31443 net.cpp:86] Creating Layer ip2
I0426 20:49:05.556087 31443 net.cpp:408] ip2 <- ip1
I0426 20:49:05.556092 31443 net.cpp:382] ip2 -> ip2
I0426 20:49:05.556702 31443 net.cpp:124] Setting up ip2
I0426 20:49:05.556710 31443 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:05.556727 31443 net.cpp:139] Memory required for data: 2274560
I0426 20:49:05.556735 31443 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:05.556738 31443 net.cpp:86] Creating Layer relu2
I0426 20:49:05.556741 31443 net.cpp:408] relu2 <- ip2
I0426 20:49:05.556746 31443 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:05.557667 31443 net.cpp:124] Setting up relu2
I0426 20:49:05.557679 31443 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:05.557698 31443 net.cpp:139] Memory required for data: 2351360
I0426 20:49:05.557701 31443 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:05.557708 31443 net.cpp:86] Creating Layer ip3
I0426 20:49:05.557710 31443 net.cpp:408] ip3 <- ip2
I0426 20:49:05.557715 31443 net.cpp:382] ip3 -> ip3
I0426 20:49:05.558714 31443 net.cpp:124] Setting up ip3
I0426 20:49:05.558727 31443 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:05.558744 31443 net.cpp:139] Memory required for data: 2353920
I0426 20:49:05.558750 31443 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:05.558756 31443 net.cpp:86] Creating Layer relu3
I0426 20:49:05.558759 31443 net.cpp:408] relu3 <- ip3
I0426 20:49:05.558764 31443 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:05.558929 31443 net.cpp:124] Setting up relu3
I0426 20:49:05.558938 31443 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:05.558941 31443 net.cpp:139] Memory required for data: 2356480
I0426 20:49:05.558944 31443 layer_factory.hpp:77] Creating layer loss
I0426 20:49:05.558949 31443 net.cpp:86] Creating Layer loss
I0426 20:49:05.558953 31443 net.cpp:408] loss <- ip3
I0426 20:49:05.558956 31443 net.cpp:408] loss <- label
I0426 20:49:05.558961 31443 net.cpp:382] loss -> loss
I0426 20:49:05.558979 31443 layer_factory.hpp:77] Creating layer loss
I0426 20:49:05.559214 31443 net.cpp:124] Setting up loss
I0426 20:49:05.559223 31443 net.cpp:131] Top shape: (1)
I0426 20:49:05.559227 31443 net.cpp:134]     with loss weight 1
I0426 20:49:05.559242 31443 net.cpp:139] Memory required for data: 2356484
I0426 20:49:05.559244 31443 net.cpp:200] loss needs backward computation.
I0426 20:49:05.559248 31443 net.cpp:200] relu3 needs backward computation.
I0426 20:49:05.559252 31443 net.cpp:200] ip3 needs backward computation.
I0426 20:49:05.559254 31443 net.cpp:200] relu2 needs backward computation.
I0426 20:49:05.559257 31443 net.cpp:200] ip2 needs backward computation.
I0426 20:49:05.559260 31443 net.cpp:200] relu1 needs backward computation.
I0426 20:49:05.559263 31443 net.cpp:200] ip1 needs backward computation.
I0426 20:49:05.559276 31443 net.cpp:200] pool0 needs backward computation.
I0426 20:49:05.559279 31443 net.cpp:200] conv0 needs backward computation.
I0426 20:49:05.559283 31443 net.cpp:202] mnist does not need backward computation.
I0426 20:49:05.559286 31443 net.cpp:244] This network produces output loss
I0426 20:49:05.559294 31443 net.cpp:257] Network initialization done.
I0426 20:49:05.559582 31443 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test26.prototxt
I0426 20:49:05.559607 31443 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:05.559684 31443 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:05.559741 31443 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:05.559785 31443 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:05.559798 31443 net.cpp:86] Creating Layer mnist
I0426 20:49:05.559803 31443 net.cpp:382] mnist -> data
I0426 20:49:05.559809 31443 net.cpp:382] mnist -> label
I0426 20:49:05.559890 31443 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:05.561883 31443 net.cpp:124] Setting up mnist
I0426 20:49:05.561911 31443 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:05.561915 31443 net.cpp:131] Top shape: 100 (100)
I0426 20:49:05.561920 31443 net.cpp:139] Memory required for data: 314000
I0426 20:49:05.561923 31443 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:05.561961 31443 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:05.561965 31443 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:05.561970 31443 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:05.561976 31443 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:05.562031 31443 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:05.562037 31443 net.cpp:131] Top shape: 100 (100)
I0426 20:49:05.562041 31443 net.cpp:131] Top shape: 100 (100)
I0426 20:49:05.562043 31443 net.cpp:139] Memory required for data: 314800
I0426 20:49:05.562055 31443 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:05.562064 31443 net.cpp:86] Creating Layer conv0
I0426 20:49:05.562067 31443 net.cpp:408] conv0 <- data
I0426 20:49:05.562072 31443 net.cpp:382] conv0 -> conv0
I0426 20:49:05.563704 31443 net.cpp:124] Setting up conv0
I0426 20:49:05.563717 31443 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:49:05.563721 31443 net.cpp:139] Memory required for data: 2618800
I0426 20:49:05.563731 31443 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:05.563752 31443 net.cpp:86] Creating Layer pool0
I0426 20:49:05.563771 31443 net.cpp:408] pool0 <- conv0
I0426 20:49:05.563776 31443 net.cpp:382] pool0 -> pool0
I0426 20:49:05.563812 31443 net.cpp:124] Setting up pool0
I0426 20:49:05.563818 31443 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:49:05.563822 31443 net.cpp:139] Memory required for data: 3194800
I0426 20:49:05.563824 31443 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:05.563832 31443 net.cpp:86] Creating Layer ip1
I0426 20:49:05.563834 31443 net.cpp:408] ip1 <- pool0
I0426 20:49:05.563839 31443 net.cpp:382] ip1 -> ip1
I0426 20:49:05.567198 31443 net.cpp:124] Setting up ip1
I0426 20:49:05.567209 31443 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:05.567214 31443 net.cpp:139] Memory required for data: 3314800
I0426 20:49:05.567221 31443 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:05.567226 31443 net.cpp:86] Creating Layer relu1
I0426 20:49:05.567229 31443 net.cpp:408] relu1 <- ip1
I0426 20:49:05.567250 31443 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:05.567433 31443 net.cpp:124] Setting up relu1
I0426 20:49:05.567441 31443 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:05.567445 31443 net.cpp:139] Memory required for data: 3434800
I0426 20:49:05.567448 31443 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:05.567454 31443 net.cpp:86] Creating Layer ip2
I0426 20:49:05.567458 31443 net.cpp:408] ip2 <- ip1
I0426 20:49:05.567463 31443 net.cpp:382] ip2 -> ip2
I0426 20:49:05.568048 31443 net.cpp:124] Setting up ip2
I0426 20:49:05.568055 31443 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:05.568058 31443 net.cpp:139] Memory required for data: 3554800
I0426 20:49:05.568066 31443 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:05.568070 31443 net.cpp:86] Creating Layer relu2
I0426 20:49:05.568073 31443 net.cpp:408] relu2 <- ip2
I0426 20:49:05.568092 31443 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:05.569032 31443 net.cpp:124] Setting up relu2
I0426 20:49:05.569044 31443 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:05.569048 31443 net.cpp:139] Memory required for data: 3674800
I0426 20:49:05.569051 31443 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:05.569059 31443 net.cpp:86] Creating Layer ip3
I0426 20:49:05.569063 31443 net.cpp:408] ip3 <- ip2
I0426 20:49:05.569068 31443 net.cpp:382] ip3 -> ip3
I0426 20:49:05.569228 31443 net.cpp:124] Setting up ip3
I0426 20:49:05.569237 31443 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:05.569241 31443 net.cpp:139] Memory required for data: 3678800
I0426 20:49:05.569245 31443 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:05.569250 31443 net.cpp:86] Creating Layer relu3
I0426 20:49:05.569253 31443 net.cpp:408] relu3 <- ip3
I0426 20:49:05.569257 31443 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:05.569427 31443 net.cpp:124] Setting up relu3
I0426 20:49:05.569437 31443 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:05.569439 31443 net.cpp:139] Memory required for data: 3682800
I0426 20:49:05.569442 31443 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:05.569447 31443 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:05.569449 31443 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:05.569454 31443 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:05.569459 31443 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:05.569494 31443 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:05.569497 31443 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:05.569517 31443 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:05.569521 31443 net.cpp:139] Memory required for data: 3690800
I0426 20:49:05.569525 31443 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:05.569530 31443 net.cpp:86] Creating Layer accuracy
I0426 20:49:05.569538 31443 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:05.569542 31443 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:05.569546 31443 net.cpp:382] accuracy -> accuracy
I0426 20:49:05.569553 31443 net.cpp:124] Setting up accuracy
I0426 20:49:05.569557 31443 net.cpp:131] Top shape: (1)
I0426 20:49:05.569560 31443 net.cpp:139] Memory required for data: 3690804
I0426 20:49:05.569562 31443 layer_factory.hpp:77] Creating layer loss
I0426 20:49:05.569566 31443 net.cpp:86] Creating Layer loss
I0426 20:49:05.569576 31443 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:05.569579 31443 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:05.569583 31443 net.cpp:382] loss -> loss
I0426 20:49:05.569588 31443 layer_factory.hpp:77] Creating layer loss
I0426 20:49:05.569808 31443 net.cpp:124] Setting up loss
I0426 20:49:05.569816 31443 net.cpp:131] Top shape: (1)
I0426 20:49:05.569825 31443 net.cpp:134]     with loss weight 1
I0426 20:49:05.569833 31443 net.cpp:139] Memory required for data: 3690808
I0426 20:49:05.569835 31443 net.cpp:200] loss needs backward computation.
I0426 20:49:05.569839 31443 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:05.569844 31443 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:05.569845 31443 net.cpp:200] relu3 needs backward computation.
I0426 20:49:05.569849 31443 net.cpp:200] ip3 needs backward computation.
I0426 20:49:05.569859 31443 net.cpp:200] relu2 needs backward computation.
I0426 20:49:05.569861 31443 net.cpp:200] ip2 needs backward computation.
I0426 20:49:05.569864 31443 net.cpp:200] relu1 needs backward computation.
I0426 20:49:05.569866 31443 net.cpp:200] ip1 needs backward computation.
I0426 20:49:05.569870 31443 net.cpp:200] pool0 needs backward computation.
I0426 20:49:05.569874 31443 net.cpp:200] conv0 needs backward computation.
I0426 20:49:05.569877 31443 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:05.569881 31443 net.cpp:202] mnist does not need backward computation.
I0426 20:49:05.569883 31443 net.cpp:244] This network produces output accuracy
I0426 20:49:05.569892 31443 net.cpp:244] This network produces output loss
I0426 20:49:05.569901 31443 net.cpp:257] Network initialization done.
I0426 20:49:05.569936 31443 solver.cpp:56] Solver scaffolding done.
I0426 20:49:05.570236 31443 caffe.cpp:248] Starting Optimization
I0426 20:49:05.570243 31443 solver.cpp:273] Solving LeNet
I0426 20:49:05.570252 31443 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:05.572347 31443 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:05.577090 31443 blocking_queue.cpp:49] Waiting for data
I0426 20:49:05.648499 31450 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:05.649080 31443 solver.cpp:398]     Test net output #0: accuracy = 0.1185
I0426 20:49:05.649107 31443 solver.cpp:398]     Test net output #1: loss = 2.29993 (* 1 = 2.29993 loss)
I0426 20:49:05.651624 31443 solver.cpp:219] Iteration 0 (2.79847 iter/s, 0.0813476s/100 iters), loss = 2.2912
I0426 20:49:05.651645 31443 solver.cpp:238]     Train net output #0: loss = 2.2912 (* 1 = 2.2912 loss)
I0426 20:49:05.651671 31443 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:05.746338 31443 solver.cpp:219] Iteration 100 (1056.17 iter/s, 0.0946813s/100 iters), loss = 0.359094
I0426 20:49:05.746364 31443 solver.cpp:238]     Train net output #0: loss = 0.359094 (* 1 = 0.359094 loss)
I0426 20:49:05.746371 31443 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:05.833607 31443 solver.cpp:219] Iteration 200 (1146.35 iter/s, 0.0872335s/100 iters), loss = 0.19781
I0426 20:49:05.833632 31443 solver.cpp:238]     Train net output #0: loss = 0.19781 (* 1 = 0.19781 loss)
I0426 20:49:05.833638 31443 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:05.919711 31443 solver.cpp:219] Iteration 300 (1161.84 iter/s, 0.0860703s/100 iters), loss = 0.242875
I0426 20:49:05.919749 31443 solver.cpp:238]     Train net output #0: loss = 0.242875 (* 1 = 0.242875 loss)
I0426 20:49:05.919754 31443 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:06.006675 31443 solver.cpp:219] Iteration 400 (1150.33 iter/s, 0.0869315s/100 iters), loss = 0.10372
I0426 20:49:06.006712 31443 solver.cpp:238]     Train net output #0: loss = 0.10372 (* 1 = 0.10372 loss)
I0426 20:49:06.006718 31443 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:06.091765 31443 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:06.145669 31450 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:06.146236 31443 solver.cpp:398]     Test net output #0: accuracy = 0.9625
I0426 20:49:06.146255 31443 solver.cpp:398]     Test net output #1: loss = 0.123036 (* 1 = 0.123036 loss)
I0426 20:49:06.147078 31443 solver.cpp:219] Iteration 500 (712.408 iter/s, 0.140369s/100 iters), loss = 0.210344
I0426 20:49:06.147136 31443 solver.cpp:238]     Train net output #0: loss = 0.210344 (* 1 = 0.210344 loss)
I0426 20:49:06.147145 31443 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:06.242486 31443 solver.cpp:219] Iteration 600 (1048.72 iter/s, 0.0953545s/100 iters), loss = 0.123828
I0426 20:49:06.242511 31443 solver.cpp:238]     Train net output #0: loss = 0.123828 (* 1 = 0.123828 loss)
I0426 20:49:06.242532 31443 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:06.330348 31443 solver.cpp:219] Iteration 700 (1138.62 iter/s, 0.0878254s/100 iters), loss = 0.221932
I0426 20:49:06.330371 31443 solver.cpp:238]     Train net output #0: loss = 0.221932 (* 1 = 0.221932 loss)
I0426 20:49:06.330379 31443 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:06.416098 31443 solver.cpp:219] Iteration 800 (1166.63 iter/s, 0.0857172s/100 iters), loss = 0.275246
I0426 20:49:06.416136 31443 solver.cpp:238]     Train net output #0: loss = 0.275246 (* 1 = 0.275246 loss)
I0426 20:49:06.416142 31443 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:06.505201 31443 solver.cpp:219] Iteration 900 (1122.77 iter/s, 0.0890655s/100 iters), loss = 0.205611
I0426 20:49:06.505252 31443 solver.cpp:238]     Train net output #0: loss = 0.205611 (* 1 = 0.205611 loss)
I0426 20:49:06.505264 31443 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:06.537641 31449 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:06.597054 31443 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:06.606382 31443 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:06.610887 31443 solver.cpp:311] Iteration 1000, loss = 0.118022
I0426 20:49:06.610908 31443 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:06.688902 31450 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:06.689575 31443 solver.cpp:398]     Test net output #0: accuracy = 0.9762
I0426 20:49:06.689604 31443 solver.cpp:398]     Test net output #1: loss = 0.0783666 (* 1 = 0.0783666 loss)
I0426 20:49:06.689612 31443 solver.cpp:316] Optimization Done.
I0426 20:49:06.689618 31443 caffe.cpp:259] Optimization Done.
