I0426 20:51:17.088222 31950 caffe.cpp:218] Using GPUs 0
I0426 20:51:17.118482 31950 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:17.577767 31950 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test83.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:17.577914 31950 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test83.prototxt
I0426 20:51:17.578269 31950 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:17.578284 31950 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:17.578392 31950 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:17.578490 31950 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:17.578578 31950 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:17.578599 31950 net.cpp:86] Creating Layer mnist
I0426 20:51:17.578605 31950 net.cpp:382] mnist -> data
I0426 20:51:17.578626 31950 net.cpp:382] mnist -> label
I0426 20:51:17.579613 31950 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:17.581863 31950 net.cpp:124] Setting up mnist
I0426 20:51:17.581879 31950 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:17.581885 31950 net.cpp:131] Top shape: 64 (64)
I0426 20:51:17.581887 31950 net.cpp:139] Memory required for data: 200960
I0426 20:51:17.581893 31950 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:17.581907 31950 net.cpp:86] Creating Layer conv0
I0426 20:51:17.581938 31950 net.cpp:408] conv0 <- data
I0426 20:51:17.581948 31950 net.cpp:382] conv0 -> conv0
I0426 20:51:17.808617 31950 net.cpp:124] Setting up conv0
I0426 20:51:17.808645 31950 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:17.808650 31950 net.cpp:139] Memory required for data: 1675520
I0426 20:51:17.808662 31950 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:17.808673 31950 net.cpp:86] Creating Layer pool0
I0426 20:51:17.808677 31950 net.cpp:408] pool0 <- conv0
I0426 20:51:17.808682 31950 net.cpp:382] pool0 -> pool0
I0426 20:51:17.808743 31950 net.cpp:124] Setting up pool0
I0426 20:51:17.808748 31950 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:17.808750 31950 net.cpp:139] Memory required for data: 2044160
I0426 20:51:17.808753 31950 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:17.808765 31950 net.cpp:86] Creating Layer conv1
I0426 20:51:17.808768 31950 net.cpp:408] conv1 <- pool0
I0426 20:51:17.808774 31950 net.cpp:382] conv1 -> conv1
I0426 20:51:17.811470 31950 net.cpp:124] Setting up conv1
I0426 20:51:17.811483 31950 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:51:17.811487 31950 net.cpp:139] Memory required for data: 2453760
I0426 20:51:17.811494 31950 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:17.811502 31950 net.cpp:86] Creating Layer pool1
I0426 20:51:17.811506 31950 net.cpp:408] pool1 <- conv1
I0426 20:51:17.811509 31950 net.cpp:382] pool1 -> pool1
I0426 20:51:17.811560 31950 net.cpp:124] Setting up pool1
I0426 20:51:17.811566 31950 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:51:17.811568 31950 net.cpp:139] Memory required for data: 2556160
I0426 20:51:17.811571 31950 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:17.811578 31950 net.cpp:86] Creating Layer ip1
I0426 20:51:17.811580 31950 net.cpp:408] ip1 <- pool1
I0426 20:51:17.811585 31950 net.cpp:382] ip1 -> ip1
I0426 20:51:17.813256 31950 net.cpp:124] Setting up ip1
I0426 20:51:17.813268 31950 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:17.813287 31950 net.cpp:139] Memory required for data: 2632960
I0426 20:51:17.813294 31950 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:17.813300 31950 net.cpp:86] Creating Layer relu1
I0426 20:51:17.813304 31950 net.cpp:408] relu1 <- ip1
I0426 20:51:17.813309 31950 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:17.813549 31950 net.cpp:124] Setting up relu1
I0426 20:51:17.813560 31950 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:17.813563 31950 net.cpp:139] Memory required for data: 2709760
I0426 20:51:17.813566 31950 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:17.813573 31950 net.cpp:86] Creating Layer ip2
I0426 20:51:17.813577 31950 net.cpp:408] ip2 <- ip1
I0426 20:51:17.813582 31950 net.cpp:382] ip2 -> ip2
I0426 20:51:17.814234 31950 net.cpp:124] Setting up ip2
I0426 20:51:17.814240 31950 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:17.814258 31950 net.cpp:139] Memory required for data: 2786560
I0426 20:51:17.814263 31950 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:17.814268 31950 net.cpp:86] Creating Layer relu2
I0426 20:51:17.814271 31950 net.cpp:408] relu2 <- ip2
I0426 20:51:17.814280 31950 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:17.815140 31950 net.cpp:124] Setting up relu2
I0426 20:51:17.815152 31950 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:17.815171 31950 net.cpp:139] Memory required for data: 2863360
I0426 20:51:17.815174 31950 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:17.815181 31950 net.cpp:86] Creating Layer ip3
I0426 20:51:17.815186 31950 net.cpp:408] ip3 <- ip2
I0426 20:51:17.815191 31950 net.cpp:382] ip3 -> ip3
I0426 20:51:17.816202 31950 net.cpp:124] Setting up ip3
I0426 20:51:17.816229 31950 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:17.816232 31950 net.cpp:139] Memory required for data: 2865920
I0426 20:51:17.816241 31950 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:17.816246 31950 net.cpp:86] Creating Layer relu3
I0426 20:51:17.816248 31950 net.cpp:408] relu3 <- ip3
I0426 20:51:17.816252 31950 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:17.816474 31950 net.cpp:124] Setting up relu3
I0426 20:51:17.816483 31950 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:17.816486 31950 net.cpp:139] Memory required for data: 2868480
I0426 20:51:17.816489 31950 layer_factory.hpp:77] Creating layer loss
I0426 20:51:17.816500 31950 net.cpp:86] Creating Layer loss
I0426 20:51:17.816519 31950 net.cpp:408] loss <- ip3
I0426 20:51:17.816522 31950 net.cpp:408] loss <- label
I0426 20:51:17.816527 31950 net.cpp:382] loss -> loss
I0426 20:51:17.816545 31950 layer_factory.hpp:77] Creating layer loss
I0426 20:51:17.816787 31950 net.cpp:124] Setting up loss
I0426 20:51:17.816797 31950 net.cpp:131] Top shape: (1)
I0426 20:51:17.816799 31950 net.cpp:134]     with loss weight 1
I0426 20:51:17.816834 31950 net.cpp:139] Memory required for data: 2868484
I0426 20:51:17.816838 31950 net.cpp:200] loss needs backward computation.
I0426 20:51:17.816857 31950 net.cpp:200] relu3 needs backward computation.
I0426 20:51:17.816860 31950 net.cpp:200] ip3 needs backward computation.
I0426 20:51:17.816862 31950 net.cpp:200] relu2 needs backward computation.
I0426 20:51:17.816880 31950 net.cpp:200] ip2 needs backward computation.
I0426 20:51:17.816882 31950 net.cpp:200] relu1 needs backward computation.
I0426 20:51:17.816885 31950 net.cpp:200] ip1 needs backward computation.
I0426 20:51:17.816889 31950 net.cpp:200] pool1 needs backward computation.
I0426 20:51:17.816891 31950 net.cpp:200] conv1 needs backward computation.
I0426 20:51:17.816895 31950 net.cpp:200] pool0 needs backward computation.
I0426 20:51:17.816897 31950 net.cpp:200] conv0 needs backward computation.
I0426 20:51:17.816900 31950 net.cpp:202] mnist does not need backward computation.
I0426 20:51:17.816903 31950 net.cpp:244] This network produces output loss
I0426 20:51:17.816912 31950 net.cpp:257] Network initialization done.
I0426 20:51:17.817282 31950 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test83.prototxt
I0426 20:51:17.817327 31950 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:17.817430 31950 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:17.817512 31950 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:17.817553 31950 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:17.817565 31950 net.cpp:86] Creating Layer mnist
I0426 20:51:17.817571 31950 net.cpp:382] mnist -> data
I0426 20:51:17.817579 31950 net.cpp:382] mnist -> label
I0426 20:51:17.817683 31950 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:17.819129 31950 net.cpp:124] Setting up mnist
I0426 20:51:17.819141 31950 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:17.819145 31950 net.cpp:131] Top shape: 100 (100)
I0426 20:51:17.819149 31950 net.cpp:139] Memory required for data: 314000
I0426 20:51:17.819151 31950 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:17.819201 31950 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:17.819205 31950 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:17.819226 31950 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:17.819231 31950 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:17.819298 31950 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:17.819305 31950 net.cpp:131] Top shape: 100 (100)
I0426 20:51:17.819308 31950 net.cpp:131] Top shape: 100 (100)
I0426 20:51:17.819311 31950 net.cpp:139] Memory required for data: 314800
I0426 20:51:17.819314 31950 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:17.819324 31950 net.cpp:86] Creating Layer conv0
I0426 20:51:17.819326 31950 net.cpp:408] conv0 <- data
I0426 20:51:17.819331 31950 net.cpp:382] conv0 -> conv0
I0426 20:51:17.821296 31950 net.cpp:124] Setting up conv0
I0426 20:51:17.821310 31950 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:17.821313 31950 net.cpp:139] Memory required for data: 2618800
I0426 20:51:17.821321 31950 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:17.821328 31950 net.cpp:86] Creating Layer pool0
I0426 20:51:17.821346 31950 net.cpp:408] pool0 <- conv0
I0426 20:51:17.821351 31950 net.cpp:382] pool0 -> pool0
I0426 20:51:17.821386 31950 net.cpp:124] Setting up pool0
I0426 20:51:17.821391 31950 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:17.821394 31950 net.cpp:139] Memory required for data: 3194800
I0426 20:51:17.821396 31950 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:17.821405 31950 net.cpp:86] Creating Layer conv1
I0426 20:51:17.821408 31950 net.cpp:408] conv1 <- pool0
I0426 20:51:17.821413 31950 net.cpp:382] conv1 -> conv1
I0426 20:51:17.823678 31950 net.cpp:124] Setting up conv1
I0426 20:51:17.823690 31950 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:51:17.823693 31950 net.cpp:139] Memory required for data: 3834800
I0426 20:51:17.823703 31950 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:17.823709 31950 net.cpp:86] Creating Layer pool1
I0426 20:51:17.823729 31950 net.cpp:408] pool1 <- conv1
I0426 20:51:17.823734 31950 net.cpp:382] pool1 -> pool1
I0426 20:51:17.823771 31950 net.cpp:124] Setting up pool1
I0426 20:51:17.823789 31950 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:51:17.823791 31950 net.cpp:139] Memory required for data: 3994800
I0426 20:51:17.823794 31950 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:17.823799 31950 net.cpp:86] Creating Layer ip1
I0426 20:51:17.823813 31950 net.cpp:408] ip1 <- pool1
I0426 20:51:17.823819 31950 net.cpp:382] ip1 -> ip1
I0426 20:51:17.825436 31950 net.cpp:124] Setting up ip1
I0426 20:51:17.825448 31950 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:17.825460 31950 net.cpp:139] Memory required for data: 4114800
I0426 20:51:17.825484 31950 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:17.825491 31950 net.cpp:86] Creating Layer relu1
I0426 20:51:17.825495 31950 net.cpp:408] relu1 <- ip1
I0426 20:51:17.825498 31950 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:17.825697 31950 net.cpp:124] Setting up relu1
I0426 20:51:17.825707 31950 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:17.825711 31950 net.cpp:139] Memory required for data: 4234800
I0426 20:51:17.825714 31950 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:17.825721 31950 net.cpp:86] Creating Layer ip2
I0426 20:51:17.825732 31950 net.cpp:408] ip2 <- ip1
I0426 20:51:17.825738 31950 net.cpp:382] ip2 -> ip2
I0426 20:51:17.826328 31950 net.cpp:124] Setting up ip2
I0426 20:51:17.826351 31950 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:17.826362 31950 net.cpp:139] Memory required for data: 4354800
I0426 20:51:17.826367 31950 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:17.826372 31950 net.cpp:86] Creating Layer relu2
I0426 20:51:17.826375 31950 net.cpp:408] relu2 <- ip2
I0426 20:51:17.826378 31950 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:17.826570 31950 net.cpp:124] Setting up relu2
I0426 20:51:17.826581 31950 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:17.826584 31950 net.cpp:139] Memory required for data: 4474800
I0426 20:51:17.826587 31950 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:17.826601 31950 net.cpp:86] Creating Layer ip3
I0426 20:51:17.826603 31950 net.cpp:408] ip3 <- ip2
I0426 20:51:17.826609 31950 net.cpp:382] ip3 -> ip3
I0426 20:51:17.826728 31950 net.cpp:124] Setting up ip3
I0426 20:51:17.826735 31950 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:17.826738 31950 net.cpp:139] Memory required for data: 4478800
I0426 20:51:17.826747 31950 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:17.826752 31950 net.cpp:86] Creating Layer relu3
I0426 20:51:17.826776 31950 net.cpp:408] relu3 <- ip3
I0426 20:51:17.826781 31950 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:17.827663 31950 net.cpp:124] Setting up relu3
I0426 20:51:17.827679 31950 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:17.827683 31950 net.cpp:139] Memory required for data: 4482800
I0426 20:51:17.827687 31950 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:17.827692 31950 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:17.827694 31950 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:17.827700 31950 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:17.827706 31950 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:17.827757 31950 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:17.827764 31950 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:17.827767 31950 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:17.827769 31950 net.cpp:139] Memory required for data: 4490800
I0426 20:51:17.827772 31950 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:17.827778 31950 net.cpp:86] Creating Layer accuracy
I0426 20:51:17.827781 31950 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:17.827785 31950 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:17.827790 31950 net.cpp:382] accuracy -> accuracy
I0426 20:51:17.827798 31950 net.cpp:124] Setting up accuracy
I0426 20:51:17.827801 31950 net.cpp:131] Top shape: (1)
I0426 20:51:17.827805 31950 net.cpp:139] Memory required for data: 4490804
I0426 20:51:17.827807 31950 layer_factory.hpp:77] Creating layer loss
I0426 20:51:17.827816 31950 net.cpp:86] Creating Layer loss
I0426 20:51:17.827821 31950 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:17.827823 31950 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:17.827827 31950 net.cpp:382] loss -> loss
I0426 20:51:17.827832 31950 layer_factory.hpp:77] Creating layer loss
I0426 20:51:17.828078 31950 net.cpp:124] Setting up loss
I0426 20:51:17.828088 31950 net.cpp:131] Top shape: (1)
I0426 20:51:17.828091 31950 net.cpp:134]     with loss weight 1
I0426 20:51:17.828112 31950 net.cpp:139] Memory required for data: 4490808
I0426 20:51:17.828115 31950 net.cpp:200] loss needs backward computation.
I0426 20:51:17.828119 31950 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:17.828122 31950 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:17.828125 31950 net.cpp:200] relu3 needs backward computation.
I0426 20:51:17.828128 31950 net.cpp:200] ip3 needs backward computation.
I0426 20:51:17.828131 31950 net.cpp:200] relu2 needs backward computation.
I0426 20:51:17.828133 31950 net.cpp:200] ip2 needs backward computation.
I0426 20:51:17.828136 31950 net.cpp:200] relu1 needs backward computation.
I0426 20:51:17.828138 31950 net.cpp:200] ip1 needs backward computation.
I0426 20:51:17.828141 31950 net.cpp:200] pool1 needs backward computation.
I0426 20:51:17.828143 31950 net.cpp:200] conv1 needs backward computation.
I0426 20:51:17.828146 31950 net.cpp:200] pool0 needs backward computation.
I0426 20:51:17.828150 31950 net.cpp:200] conv0 needs backward computation.
I0426 20:51:17.828152 31950 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:17.828156 31950 net.cpp:202] mnist does not need backward computation.
I0426 20:51:17.828164 31950 net.cpp:244] This network produces output accuracy
I0426 20:51:17.828167 31950 net.cpp:244] This network produces output loss
I0426 20:51:17.828177 31950 net.cpp:257] Network initialization done.
I0426 20:51:17.828217 31950 solver.cpp:56] Solver scaffolding done.
I0426 20:51:17.828531 31950 caffe.cpp:248] Starting Optimization
I0426 20:51:17.828537 31950 solver.cpp:273] Solving LeNet
I0426 20:51:17.828541 31950 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:17.829562 31950 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:17.834529 31950 blocking_queue.cpp:49] Waiting for data
I0426 20:51:17.904726 31957 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:17.905350 31950 solver.cpp:398]     Test net output #0: accuracy = 0.0981
I0426 20:51:17.905369 31950 solver.cpp:398]     Test net output #1: loss = 2.35821 (* 1 = 2.35821 loss)
I0426 20:51:17.908711 31950 solver.cpp:219] Iteration 0 (0 iter/s, 0.0801465s/100 iters), loss = 2.39152
I0426 20:51:17.908733 31950 solver.cpp:238]     Train net output #0: loss = 2.39152 (* 1 = 2.39152 loss)
I0426 20:51:17.908759 31950 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:18.018903 31950 solver.cpp:219] Iteration 100 (907.805 iter/s, 0.110156s/100 iters), loss = 0.723922
I0426 20:51:18.018928 31950 solver.cpp:238]     Train net output #0: loss = 0.723922 (* 1 = 0.723922 loss)
I0426 20:51:18.018934 31950 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:18.130959 31950 solver.cpp:219] Iteration 200 (892.694 iter/s, 0.11202s/100 iters), loss = 0.468435
I0426 20:51:18.130990 31950 solver.cpp:238]     Train net output #0: loss = 0.468435 (* 1 = 0.468435 loss)
I0426 20:51:18.130996 31950 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:18.241148 31950 solver.cpp:219] Iteration 300 (907.873 iter/s, 0.110148s/100 iters), loss = 0.209719
I0426 20:51:18.241189 31950 solver.cpp:238]     Train net output #0: loss = 0.209719 (* 1 = 0.209719 loss)
I0426 20:51:18.241195 31950 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:18.348039 31950 solver.cpp:219] Iteration 400 (935.969 iter/s, 0.106841s/100 iters), loss = 0.094569
I0426 20:51:18.348067 31950 solver.cpp:238]     Train net output #0: loss = 0.094569 (* 1 = 0.094569 loss)
I0426 20:51:18.348073 31950 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:18.455752 31950 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:18.529727 31957 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:18.530380 31950 solver.cpp:398]     Test net output #0: accuracy = 0.9683
I0426 20:51:18.530402 31950 solver.cpp:398]     Test net output #1: loss = 0.0981195 (* 1 = 0.0981195 loss)
I0426 20:51:18.531464 31950 solver.cpp:219] Iteration 500 (545.301 iter/s, 0.183385s/100 iters), loss = 0.118039
I0426 20:51:18.531519 31950 solver.cpp:238]     Train net output #0: loss = 0.118039 (* 1 = 0.118039 loss)
I0426 20:51:18.531543 31950 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:18.641494 31950 solver.cpp:219] Iteration 600 (909.365 iter/s, 0.109967s/100 iters), loss = 0.0417569
I0426 20:51:18.641520 31950 solver.cpp:238]     Train net output #0: loss = 0.041757 (* 1 = 0.041757 loss)
I0426 20:51:18.641526 31950 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:18.747469 31950 solver.cpp:219] Iteration 700 (943.94 iter/s, 0.105939s/100 iters), loss = 0.221482
I0426 20:51:18.747493 31950 solver.cpp:238]     Train net output #0: loss = 0.221482 (* 1 = 0.221482 loss)
I0426 20:51:18.747499 31950 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:18.854107 31950 solver.cpp:219] Iteration 800 (938.063 iter/s, 0.106603s/100 iters), loss = 0.221241
I0426 20:51:18.854146 31950 solver.cpp:238]     Train net output #0: loss = 0.221241 (* 1 = 0.221241 loss)
I0426 20:51:18.854152 31950 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:18.961426 31950 solver.cpp:219] Iteration 900 (932.101 iter/s, 0.107284s/100 iters), loss = 0.182178
I0426 20:51:18.961465 31950 solver.cpp:238]     Train net output #0: loss = 0.182178 (* 1 = 0.182178 loss)
I0426 20:51:18.961472 31950 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:18.997102 31956 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:19.066364 31950 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:19.070603 31950 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:19.072526 31950 solver.cpp:311] Iteration 1000, loss = 0.109813
I0426 20:51:19.072541 31950 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:19.147732 31957 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:19.148360 31950 solver.cpp:398]     Test net output #0: accuracy = 0.9793
I0426 20:51:19.148378 31950 solver.cpp:398]     Test net output #1: loss = 0.0654154 (* 1 = 0.0654154 loss)
I0426 20:51:19.148383 31950 solver.cpp:316] Optimization Done.
I0426 20:51:19.148386 31950 caffe.cpp:259] Optimization Done.
