I0426 20:50:15.045487 31713 caffe.cpp:218] Using GPUs 0
I0426 20:50:15.092746 31713 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:15.618994 31713 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test55.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:15.619159 31713 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test55.prototxt
I0426 20:50:15.619514 31713 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:15.619530 31713 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:15.619618 31713 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:15.619693 31713 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:15.619788 31713 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:15.619810 31713 net.cpp:86] Creating Layer mnist
I0426 20:50:15.619819 31713 net.cpp:382] mnist -> data
I0426 20:50:15.619841 31713 net.cpp:382] mnist -> label
I0426 20:50:15.620894 31713 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:15.623293 31713 net.cpp:124] Setting up mnist
I0426 20:50:15.623309 31713 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:15.623317 31713 net.cpp:131] Top shape: 64 (64)
I0426 20:50:15.623320 31713 net.cpp:139] Memory required for data: 200960
I0426 20:50:15.623327 31713 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:15.623353 31713 net.cpp:86] Creating Layer conv0
I0426 20:50:15.623358 31713 net.cpp:408] conv0 <- data
I0426 20:50:15.623369 31713 net.cpp:382] conv0 -> conv0
I0426 20:50:15.860986 31713 net.cpp:124] Setting up conv0
I0426 20:50:15.861029 31713 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:50:15.861033 31713 net.cpp:139] Memory required for data: 7573760
I0426 20:50:15.861049 31713 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:15.861078 31713 net.cpp:86] Creating Layer pool0
I0426 20:50:15.861099 31713 net.cpp:408] pool0 <- conv0
I0426 20:50:15.861105 31713 net.cpp:382] pool0 -> pool0
I0426 20:50:15.861186 31713 net.cpp:124] Setting up pool0
I0426 20:50:15.861208 31713 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:50:15.861212 31713 net.cpp:139] Memory required for data: 9416960
I0426 20:50:15.861215 31713 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:15.861225 31713 net.cpp:86] Creating Layer ip1
I0426 20:50:15.861232 31713 net.cpp:408] ip1 <- pool0
I0426 20:50:15.861237 31713 net.cpp:382] ip1 -> ip1
I0426 20:50:15.875140 31713 net.cpp:124] Setting up ip1
I0426 20:50:15.875169 31713 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:15.875174 31713 net.cpp:139] Memory required for data: 9493760
I0426 20:50:15.875182 31713 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:15.875190 31713 net.cpp:86] Creating Layer relu1
I0426 20:50:15.875210 31713 net.cpp:408] relu1 <- ip1
I0426 20:50:15.875213 31713 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:15.875421 31713 net.cpp:124] Setting up relu1
I0426 20:50:15.875429 31713 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:15.875432 31713 net.cpp:139] Memory required for data: 9570560
I0426 20:50:15.875435 31713 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:15.875442 31713 net.cpp:86] Creating Layer ip2
I0426 20:50:15.875445 31713 net.cpp:408] ip2 <- ip1
I0426 20:50:15.875450 31713 net.cpp:382] ip2 -> ip2
I0426 20:50:15.876957 31713 net.cpp:124] Setting up ip2
I0426 20:50:15.876968 31713 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:15.876987 31713 net.cpp:139] Memory required for data: 9647360
I0426 20:50:15.876996 31713 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:15.877001 31713 net.cpp:86] Creating Layer relu2
I0426 20:50:15.877004 31713 net.cpp:408] relu2 <- ip2
I0426 20:50:15.877008 31713 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:15.877944 31713 net.cpp:124] Setting up relu2
I0426 20:50:15.877956 31713 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:15.877976 31713 net.cpp:139] Memory required for data: 9724160
I0426 20:50:15.877980 31713 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:15.877987 31713 net.cpp:86] Creating Layer ip3
I0426 20:50:15.877991 31713 net.cpp:408] ip3 <- ip2
I0426 20:50:15.877996 31713 net.cpp:382] ip3 -> ip3
I0426 20:50:15.878134 31713 net.cpp:124] Setting up ip3
I0426 20:50:15.878155 31713 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:15.878159 31713 net.cpp:139] Memory required for data: 9726720
I0426 20:50:15.878163 31713 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:15.878170 31713 net.cpp:86] Creating Layer relu3
I0426 20:50:15.878173 31713 net.cpp:408] relu3 <- ip3
I0426 20:50:15.878177 31713 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:15.878325 31713 net.cpp:124] Setting up relu3
I0426 20:50:15.878334 31713 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:15.878336 31713 net.cpp:139] Memory required for data: 9729280
I0426 20:50:15.878340 31713 layer_factory.hpp:77] Creating layer loss
I0426 20:50:15.878345 31713 net.cpp:86] Creating Layer loss
I0426 20:50:15.878348 31713 net.cpp:408] loss <- ip3
I0426 20:50:15.878352 31713 net.cpp:408] loss <- label
I0426 20:50:15.878357 31713 net.cpp:382] loss -> loss
I0426 20:50:15.878376 31713 layer_factory.hpp:77] Creating layer loss
I0426 20:50:15.878618 31713 net.cpp:124] Setting up loss
I0426 20:50:15.878626 31713 net.cpp:131] Top shape: (1)
I0426 20:50:15.878629 31713 net.cpp:134]     with loss weight 1
I0426 20:50:15.878646 31713 net.cpp:139] Memory required for data: 9729284
I0426 20:50:15.878649 31713 net.cpp:200] loss needs backward computation.
I0426 20:50:15.878654 31713 net.cpp:200] relu3 needs backward computation.
I0426 20:50:15.878656 31713 net.cpp:200] ip3 needs backward computation.
I0426 20:50:15.878659 31713 net.cpp:200] relu2 needs backward computation.
I0426 20:50:15.878662 31713 net.cpp:200] ip2 needs backward computation.
I0426 20:50:15.878665 31713 net.cpp:200] relu1 needs backward computation.
I0426 20:50:15.878669 31713 net.cpp:200] ip1 needs backward computation.
I0426 20:50:15.878684 31713 net.cpp:200] pool0 needs backward computation.
I0426 20:50:15.878686 31713 net.cpp:200] conv0 needs backward computation.
I0426 20:50:15.878690 31713 net.cpp:202] mnist does not need backward computation.
I0426 20:50:15.878693 31713 net.cpp:244] This network produces output loss
I0426 20:50:15.878701 31713 net.cpp:257] Network initialization done.
I0426 20:50:15.879006 31713 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test55.prototxt
I0426 20:50:15.879048 31713 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:15.879127 31713 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:15.879187 31713 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:15.879230 31713 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:15.879242 31713 net.cpp:86] Creating Layer mnist
I0426 20:50:15.879246 31713 net.cpp:382] mnist -> data
I0426 20:50:15.879254 31713 net.cpp:382] mnist -> label
I0426 20:50:15.879336 31713 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:15.880548 31713 net.cpp:124] Setting up mnist
I0426 20:50:15.880576 31713 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:15.880581 31713 net.cpp:131] Top shape: 100 (100)
I0426 20:50:15.880584 31713 net.cpp:139] Memory required for data: 314000
I0426 20:50:15.880604 31713 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:15.880614 31713 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:15.880617 31713 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:15.880622 31713 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:15.880628 31713 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:15.880729 31713 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:15.880738 31713 net.cpp:131] Top shape: 100 (100)
I0426 20:50:15.880741 31713 net.cpp:131] Top shape: 100 (100)
I0426 20:50:15.880744 31713 net.cpp:139] Memory required for data: 314800
I0426 20:50:15.880756 31713 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:15.880766 31713 net.cpp:86] Creating Layer conv0
I0426 20:50:15.880769 31713 net.cpp:408] conv0 <- data
I0426 20:50:15.880775 31713 net.cpp:382] conv0 -> conv0
I0426 20:50:15.882431 31713 net.cpp:124] Setting up conv0
I0426 20:50:15.882444 31713 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:50:15.882448 31713 net.cpp:139] Memory required for data: 11834800
I0426 20:50:15.882458 31713 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:15.882464 31713 net.cpp:86] Creating Layer pool0
I0426 20:50:15.882467 31713 net.cpp:408] pool0 <- conv0
I0426 20:50:15.882472 31713 net.cpp:382] pool0 -> pool0
I0426 20:50:15.882522 31713 net.cpp:124] Setting up pool0
I0426 20:50:15.882527 31713 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:50:15.882530 31713 net.cpp:139] Memory required for data: 14714800
I0426 20:50:15.882534 31713 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:15.882539 31713 net.cpp:86] Creating Layer ip1
I0426 20:50:15.882542 31713 net.cpp:408] ip1 <- pool0
I0426 20:50:15.882563 31713 net.cpp:382] ip1 -> ip1
I0426 20:50:15.896312 31713 net.cpp:124] Setting up ip1
I0426 20:50:15.896325 31713 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:15.896328 31713 net.cpp:139] Memory required for data: 14834800
I0426 20:50:15.896337 31713 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:15.896342 31713 net.cpp:86] Creating Layer relu1
I0426 20:50:15.896344 31713 net.cpp:408] relu1 <- ip1
I0426 20:50:15.896349 31713 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:15.896523 31713 net.cpp:124] Setting up relu1
I0426 20:50:15.896531 31713 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:15.896534 31713 net.cpp:139] Memory required for data: 14954800
I0426 20:50:15.896538 31713 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:15.896543 31713 net.cpp:86] Creating Layer ip2
I0426 20:50:15.896545 31713 net.cpp:408] ip2 <- ip1
I0426 20:50:15.896550 31713 net.cpp:382] ip2 -> ip2
I0426 20:50:15.897280 31713 net.cpp:124] Setting up ip2
I0426 20:50:15.897287 31713 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:15.897307 31713 net.cpp:139] Memory required for data: 15074800
I0426 20:50:15.897315 31713 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:15.897333 31713 net.cpp:86] Creating Layer relu2
I0426 20:50:15.897336 31713 net.cpp:408] relu2 <- ip2
I0426 20:50:15.897341 31713 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:15.898128 31713 net.cpp:124] Setting up relu2
I0426 20:50:15.898140 31713 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:15.898159 31713 net.cpp:139] Memory required for data: 15194800
I0426 20:50:15.898162 31713 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:15.898170 31713 net.cpp:86] Creating Layer ip3
I0426 20:50:15.898174 31713 net.cpp:408] ip3 <- ip2
I0426 20:50:15.898178 31713 net.cpp:382] ip3 -> ip3
I0426 20:50:15.898313 31713 net.cpp:124] Setting up ip3
I0426 20:50:15.898319 31713 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:15.898322 31713 net.cpp:139] Memory required for data: 15198800
I0426 20:50:15.898329 31713 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:15.898332 31713 net.cpp:86] Creating Layer relu3
I0426 20:50:15.898335 31713 net.cpp:408] relu3 <- ip3
I0426 20:50:15.898340 31713 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:15.898499 31713 net.cpp:124] Setting up relu3
I0426 20:50:15.898506 31713 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:15.898509 31713 net.cpp:139] Memory required for data: 15202800
I0426 20:50:15.898512 31713 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:15.898516 31713 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:15.898519 31713 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:15.898524 31713 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:15.898528 31713 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:15.898561 31713 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:15.898567 31713 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:15.898582 31713 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:15.898586 31713 net.cpp:139] Memory required for data: 15210800
I0426 20:50:15.898588 31713 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:15.898593 31713 net.cpp:86] Creating Layer accuracy
I0426 20:50:15.898597 31713 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:15.898600 31713 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:15.898605 31713 net.cpp:382] accuracy -> accuracy
I0426 20:50:15.898612 31713 net.cpp:124] Setting up accuracy
I0426 20:50:15.898615 31713 net.cpp:131] Top shape: (1)
I0426 20:50:15.898618 31713 net.cpp:139] Memory required for data: 15210804
I0426 20:50:15.898622 31713 layer_factory.hpp:77] Creating layer loss
I0426 20:50:15.898625 31713 net.cpp:86] Creating Layer loss
I0426 20:50:15.898628 31713 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:15.898632 31713 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:15.898635 31713 net.cpp:382] loss -> loss
I0426 20:50:15.898641 31713 layer_factory.hpp:77] Creating layer loss
I0426 20:50:15.898857 31713 net.cpp:124] Setting up loss
I0426 20:50:15.898866 31713 net.cpp:131] Top shape: (1)
I0426 20:50:15.898869 31713 net.cpp:134]     with loss weight 1
I0426 20:50:15.898875 31713 net.cpp:139] Memory required for data: 15210808
I0426 20:50:15.898879 31713 net.cpp:200] loss needs backward computation.
I0426 20:50:15.898882 31713 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:15.898886 31713 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:15.898890 31713 net.cpp:200] relu3 needs backward computation.
I0426 20:50:15.898892 31713 net.cpp:200] ip3 needs backward computation.
I0426 20:50:15.898895 31713 net.cpp:200] relu2 needs backward computation.
I0426 20:50:15.898897 31713 net.cpp:200] ip2 needs backward computation.
I0426 20:50:15.898900 31713 net.cpp:200] relu1 needs backward computation.
I0426 20:50:15.898903 31713 net.cpp:200] ip1 needs backward computation.
I0426 20:50:15.898906 31713 net.cpp:200] pool0 needs backward computation.
I0426 20:50:15.898910 31713 net.cpp:200] conv0 needs backward computation.
I0426 20:50:15.898912 31713 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:15.898916 31713 net.cpp:202] mnist does not need backward computation.
I0426 20:50:15.898918 31713 net.cpp:244] This network produces output accuracy
I0426 20:50:15.898921 31713 net.cpp:244] This network produces output loss
I0426 20:50:15.898931 31713 net.cpp:257] Network initialization done.
I0426 20:50:15.898965 31713 solver.cpp:56] Solver scaffolding done.
I0426 20:50:15.899255 31713 caffe.cpp:248] Starting Optimization
I0426 20:50:15.899260 31713 solver.cpp:273] Solving LeNet
I0426 20:50:15.899262 31713 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:15.901302 31713 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:15.978029 31720 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:15.979167 31713 solver.cpp:398]     Test net output #0: accuracy = 0.1164
I0426 20:50:15.979188 31713 solver.cpp:398]     Test net output #1: loss = 2.31642 (* 1 = 2.31642 loss)
I0426 20:50:15.984012 31713 solver.cpp:219] Iteration 0 (0 iter/s, 0.0847094s/100 iters), loss = 2.32609
I0426 20:50:15.984037 31713 solver.cpp:238]     Train net output #0: loss = 2.32609 (* 1 = 2.32609 loss)
I0426 20:50:15.984066 31713 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:16.134624 31713 solver.cpp:219] Iteration 100 (664.125 iter/s, 0.150574s/100 iters), loss = 0.293907
I0426 20:50:16.134649 31713 solver.cpp:238]     Train net output #0: loss = 0.293907 (* 1 = 0.293907 loss)
I0426 20:50:16.134655 31713 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:16.287286 31713 solver.cpp:219] Iteration 200 (655.204 iter/s, 0.152624s/100 iters), loss = 0.181782
I0426 20:50:16.287312 31713 solver.cpp:238]     Train net output #0: loss = 0.181782 (* 1 = 0.181782 loss)
I0426 20:50:16.287317 31713 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:16.441896 31713 solver.cpp:219] Iteration 300 (646.949 iter/s, 0.154572s/100 iters), loss = 0.215345
I0426 20:50:16.441936 31713 solver.cpp:238]     Train net output #0: loss = 0.215345 (* 1 = 0.215345 loss)
I0426 20:50:16.441943 31713 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:16.596261 31713 solver.cpp:219] Iteration 400 (648.039 iter/s, 0.154312s/100 iters), loss = 0.0779191
I0426 20:50:16.596285 31713 solver.cpp:238]     Train net output #0: loss = 0.0779191 (* 1 = 0.0779191 loss)
I0426 20:50:16.596292 31713 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:16.750747 31713 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:16.825079 31720 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:16.827684 31713 solver.cpp:398]     Test net output #0: accuracy = 0.9628
I0426 20:50:16.827703 31713 solver.cpp:398]     Test net output #1: loss = 0.117107 (* 1 = 0.117107 loss)
I0426 20:50:16.828894 31713 solver.cpp:219] Iteration 500 (429.937 iter/s, 0.232592s/100 iters), loss = 0.230547
I0426 20:50:16.828917 31713 solver.cpp:238]     Train net output #0: loss = 0.230547 (* 1 = 0.230547 loss)
I0426 20:50:16.828940 31713 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:16.983469 31713 solver.cpp:219] Iteration 600 (647.094 iter/s, 0.154537s/100 iters), loss = 0.115116
I0426 20:50:16.983495 31713 solver.cpp:238]     Train net output #0: loss = 0.115116 (* 1 = 0.115116 loss)
I0426 20:50:16.983501 31713 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:17.138826 31713 solver.cpp:219] Iteration 700 (643.839 iter/s, 0.155318s/100 iters), loss = 0.191321
I0426 20:50:17.138852 31713 solver.cpp:238]     Train net output #0: loss = 0.191321 (* 1 = 0.191321 loss)
I0426 20:50:17.138859 31713 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:17.296913 31713 solver.cpp:219] Iteration 800 (632.722 iter/s, 0.158047s/100 iters), loss = 0.191355
I0426 20:50:17.296954 31713 solver.cpp:238]     Train net output #0: loss = 0.191355 (* 1 = 0.191355 loss)
I0426 20:50:17.296960 31713 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:17.451755 31713 solver.cpp:219] Iteration 900 (646.046 iter/s, 0.154788s/100 iters), loss = 0.181764
I0426 20:50:17.451794 31713 solver.cpp:238]     Train net output #0: loss = 0.181764 (* 1 = 0.181764 loss)
I0426 20:50:17.451800 31713 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:17.502142 31719 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:17.600728 31713 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:17.637447 31713 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:17.652205 31713 solver.cpp:311] Iteration 1000, loss = 0.116135
I0426 20:50:17.652230 31713 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:17.725213 31720 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:17.727874 31713 solver.cpp:398]     Test net output #0: accuracy = 0.9748
I0426 20:50:17.727895 31713 solver.cpp:398]     Test net output #1: loss = 0.0775764 (* 1 = 0.0775764 loss)
I0426 20:50:17.727900 31713 solver.cpp:316] Optimization Done.
I0426 20:50:17.727919 31713 caffe.cpp:259] Optimization Done.
