I0426 20:53:38.604236 32478 caffe.cpp:218] Using GPUs 0
I0426 20:53:38.640386 32478 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:39.163136 32478 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test141.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:39.163274 32478 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test141.prototxt
I0426 20:53:39.163614 32478 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:39.163630 32478 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:39.163712 32478 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:53:39.163780 32478 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:39.163877 32478 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:39.163899 32478 net.cpp:86] Creating Layer mnist
I0426 20:53:39.163908 32478 net.cpp:382] mnist -> data
I0426 20:53:39.163938 32478 net.cpp:382] mnist -> label
I0426 20:53:39.165038 32478 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:39.167565 32478 net.cpp:124] Setting up mnist
I0426 20:53:39.167583 32478 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:39.167589 32478 net.cpp:131] Top shape: 64 (64)
I0426 20:53:39.167593 32478 net.cpp:139] Memory required for data: 200960
I0426 20:53:39.167599 32478 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:39.167616 32478 net.cpp:86] Creating Layer conv0
I0426 20:53:39.167623 32478 net.cpp:408] conv0 <- data
I0426 20:53:39.167635 32478 net.cpp:382] conv0 -> conv0
I0426 20:53:39.421882 32478 net.cpp:124] Setting up conv0
I0426 20:53:39.421926 32478 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:53:39.421929 32478 net.cpp:139] Memory required for data: 7573760
I0426 20:53:39.421943 32478 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:39.421955 32478 net.cpp:86] Creating Layer pool0
I0426 20:53:39.421959 32478 net.cpp:408] pool0 <- conv0
I0426 20:53:39.421965 32478 net.cpp:382] pool0 -> pool0
I0426 20:53:39.422026 32478 net.cpp:124] Setting up pool0
I0426 20:53:39.422031 32478 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:53:39.422049 32478 net.cpp:139] Memory required for data: 9416960
I0426 20:53:39.422051 32478 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:39.422063 32478 net.cpp:86] Creating Layer conv1
I0426 20:53:39.422066 32478 net.cpp:408] conv1 <- pool0
I0426 20:53:39.422071 32478 net.cpp:382] conv1 -> conv1
I0426 20:53:39.424760 32478 net.cpp:124] Setting up conv1
I0426 20:53:39.424774 32478 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:53:39.424777 32478 net.cpp:139] Memory required for data: 9580800
I0426 20:53:39.424784 32478 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:39.424793 32478 net.cpp:86] Creating Layer pool1
I0426 20:53:39.424795 32478 net.cpp:408] pool1 <- conv1
I0426 20:53:39.424799 32478 net.cpp:382] pool1 -> pool1
I0426 20:53:39.424886 32478 net.cpp:124] Setting up pool1
I0426 20:53:39.424907 32478 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:53:39.424911 32478 net.cpp:139] Memory required for data: 9621760
I0426 20:53:39.424914 32478 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:39.424921 32478 net.cpp:86] Creating Layer ip1
I0426 20:53:39.424924 32478 net.cpp:408] ip1 <- pool1
I0426 20:53:39.424945 32478 net.cpp:382] ip1 -> ip1
I0426 20:53:39.425053 32478 net.cpp:124] Setting up ip1
I0426 20:53:39.425061 32478 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:39.425065 32478 net.cpp:139] Memory required for data: 9624320
I0426 20:53:39.425072 32478 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:39.425077 32478 net.cpp:86] Creating Layer relu1
I0426 20:53:39.425081 32478 net.cpp:408] relu1 <- ip1
I0426 20:53:39.425086 32478 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:39.425303 32478 net.cpp:124] Setting up relu1
I0426 20:53:39.425312 32478 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:39.425314 32478 net.cpp:139] Memory required for data: 9626880
I0426 20:53:39.425318 32478 layer_factory.hpp:77] Creating layer loss
I0426 20:53:39.425323 32478 net.cpp:86] Creating Layer loss
I0426 20:53:39.425326 32478 net.cpp:408] loss <- ip1
I0426 20:53:39.425330 32478 net.cpp:408] loss <- label
I0426 20:53:39.425334 32478 net.cpp:382] loss -> loss
I0426 20:53:39.425348 32478 layer_factory.hpp:77] Creating layer loss
I0426 20:53:39.426188 32478 net.cpp:124] Setting up loss
I0426 20:53:39.426200 32478 net.cpp:131] Top shape: (1)
I0426 20:53:39.426203 32478 net.cpp:134]     with loss weight 1
I0426 20:53:39.426218 32478 net.cpp:139] Memory required for data: 9626884
I0426 20:53:39.426220 32478 net.cpp:200] loss needs backward computation.
I0426 20:53:39.426224 32478 net.cpp:200] relu1 needs backward computation.
I0426 20:53:39.426226 32478 net.cpp:200] ip1 needs backward computation.
I0426 20:53:39.426229 32478 net.cpp:200] pool1 needs backward computation.
I0426 20:53:39.426232 32478 net.cpp:200] conv1 needs backward computation.
I0426 20:53:39.426235 32478 net.cpp:200] pool0 needs backward computation.
I0426 20:53:39.426239 32478 net.cpp:200] conv0 needs backward computation.
I0426 20:53:39.426241 32478 net.cpp:202] mnist does not need backward computation.
I0426 20:53:39.426244 32478 net.cpp:244] This network produces output loss
I0426 20:53:39.426251 32478 net.cpp:257] Network initialization done.
I0426 20:53:39.426518 32478 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test141.prototxt
I0426 20:53:39.426542 32478 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:39.426630 32478 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:53:39.426695 32478 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:39.426738 32478 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:39.426750 32478 net.cpp:86] Creating Layer mnist
I0426 20:53:39.426754 32478 net.cpp:382] mnist -> data
I0426 20:53:39.426762 32478 net.cpp:382] mnist -> label
I0426 20:53:39.426839 32478 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:39.428875 32478 net.cpp:124] Setting up mnist
I0426 20:53:39.428918 32478 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:39.428923 32478 net.cpp:131] Top shape: 100 (100)
I0426 20:53:39.428926 32478 net.cpp:139] Memory required for data: 314000
I0426 20:53:39.428930 32478 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:39.428936 32478 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:39.428939 32478 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:39.428944 32478 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:39.428951 32478 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:39.429013 32478 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:39.429018 32478 net.cpp:131] Top shape: 100 (100)
I0426 20:53:39.429023 32478 net.cpp:131] Top shape: 100 (100)
I0426 20:53:39.429025 32478 net.cpp:139] Memory required for data: 314800
I0426 20:53:39.429028 32478 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:39.429036 32478 net.cpp:86] Creating Layer conv0
I0426 20:53:39.429039 32478 net.cpp:408] conv0 <- data
I0426 20:53:39.429044 32478 net.cpp:382] conv0 -> conv0
I0426 20:53:39.429978 32478 net.cpp:124] Setting up conv0
I0426 20:53:39.429989 32478 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:53:39.429992 32478 net.cpp:139] Memory required for data: 11834800
I0426 20:53:39.430001 32478 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:39.430006 32478 net.cpp:86] Creating Layer pool0
I0426 20:53:39.430009 32478 net.cpp:408] pool0 <- conv0
I0426 20:53:39.430028 32478 net.cpp:382] pool0 -> pool0
I0426 20:53:39.430060 32478 net.cpp:124] Setting up pool0
I0426 20:53:39.430065 32478 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:53:39.430068 32478 net.cpp:139] Memory required for data: 14714800
I0426 20:53:39.430071 32478 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:39.430078 32478 net.cpp:86] Creating Layer conv1
I0426 20:53:39.430081 32478 net.cpp:408] conv1 <- pool0
I0426 20:53:39.430085 32478 net.cpp:382] conv1 -> conv1
I0426 20:53:39.431690 32478 net.cpp:124] Setting up conv1
I0426 20:53:39.431702 32478 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:53:39.431721 32478 net.cpp:139] Memory required for data: 14970800
I0426 20:53:39.431730 32478 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:39.431735 32478 net.cpp:86] Creating Layer pool1
I0426 20:53:39.431747 32478 net.cpp:408] pool1 <- conv1
I0426 20:53:39.431768 32478 net.cpp:382] pool1 -> pool1
I0426 20:53:39.431818 32478 net.cpp:124] Setting up pool1
I0426 20:53:39.431823 32478 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:53:39.431826 32478 net.cpp:139] Memory required for data: 15034800
I0426 20:53:39.431829 32478 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:39.431834 32478 net.cpp:86] Creating Layer ip1
I0426 20:53:39.431838 32478 net.cpp:408] ip1 <- pool1
I0426 20:53:39.431843 32478 net.cpp:382] ip1 -> ip1
I0426 20:53:39.431954 32478 net.cpp:124] Setting up ip1
I0426 20:53:39.431962 32478 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:39.431967 32478 net.cpp:139] Memory required for data: 15038800
I0426 20:53:39.431973 32478 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:39.431978 32478 net.cpp:86] Creating Layer relu1
I0426 20:53:39.431982 32478 net.cpp:408] relu1 <- ip1
I0426 20:53:39.431987 32478 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:39.432998 32478 net.cpp:124] Setting up relu1
I0426 20:53:39.433012 32478 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:39.433017 32478 net.cpp:139] Memory required for data: 15042800
I0426 20:53:39.433020 32478 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:53:39.433027 32478 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:53:39.433030 32478 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:53:39.433037 32478 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:53:39.433058 32478 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:53:39.433097 32478 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:53:39.433104 32478 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:39.433107 32478 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:39.433125 32478 net.cpp:139] Memory required for data: 15050800
I0426 20:53:39.433128 32478 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:39.433135 32478 net.cpp:86] Creating Layer accuracy
I0426 20:53:39.433153 32478 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:53:39.433158 32478 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:39.433178 32478 net.cpp:382] accuracy -> accuracy
I0426 20:53:39.433185 32478 net.cpp:124] Setting up accuracy
I0426 20:53:39.433210 32478 net.cpp:131] Top shape: (1)
I0426 20:53:39.433228 32478 net.cpp:139] Memory required for data: 15050804
I0426 20:53:39.433231 32478 layer_factory.hpp:77] Creating layer loss
I0426 20:53:39.433235 32478 net.cpp:86] Creating Layer loss
I0426 20:53:39.433239 32478 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:53:39.433243 32478 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:39.433248 32478 net.cpp:382] loss -> loss
I0426 20:53:39.433253 32478 layer_factory.hpp:77] Creating layer loss
I0426 20:53:39.433466 32478 net.cpp:124] Setting up loss
I0426 20:53:39.433475 32478 net.cpp:131] Top shape: (1)
I0426 20:53:39.433480 32478 net.cpp:134]     with loss weight 1
I0426 20:53:39.433485 32478 net.cpp:139] Memory required for data: 15050808
I0426 20:53:39.433490 32478 net.cpp:200] loss needs backward computation.
I0426 20:53:39.433493 32478 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:39.433497 32478 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:53:39.433501 32478 net.cpp:200] relu1 needs backward computation.
I0426 20:53:39.433503 32478 net.cpp:200] ip1 needs backward computation.
I0426 20:53:39.433513 32478 net.cpp:200] pool1 needs backward computation.
I0426 20:53:39.433521 32478 net.cpp:200] conv1 needs backward computation.
I0426 20:53:39.433524 32478 net.cpp:200] pool0 needs backward computation.
I0426 20:53:39.433527 32478 net.cpp:200] conv0 needs backward computation.
I0426 20:53:39.433531 32478 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:39.433534 32478 net.cpp:202] mnist does not need backward computation.
I0426 20:53:39.433537 32478 net.cpp:244] This network produces output accuracy
I0426 20:53:39.433542 32478 net.cpp:244] This network produces output loss
I0426 20:53:39.433576 32478 net.cpp:257] Network initialization done.
I0426 20:53:39.433609 32478 solver.cpp:56] Solver scaffolding done.
I0426 20:53:39.433820 32478 caffe.cpp:248] Starting Optimization
I0426 20:53:39.433827 32478 solver.cpp:273] Solving LeNet
I0426 20:53:39.433830 32478 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:39.433944 32478 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:39.440124 32478 blocking_queue.cpp:49] Waiting for data
I0426 20:53:39.497833 32485 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:39.498685 32478 solver.cpp:398]     Test net output #0: accuracy = 0.0768
I0426 20:53:39.498704 32478 solver.cpp:398]     Test net output #1: loss = 2.40941 (* 1 = 2.40941 loss)
I0426 20:53:39.502987 32478 solver.cpp:219] Iteration 0 (0 iter/s, 0.0691332s/100 iters), loss = 2.45393
I0426 20:53:39.503010 32478 solver.cpp:238]     Train net output #0: loss = 2.45393 (* 1 = 2.45393 loss)
I0426 20:53:39.503021 32478 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:39.610612 32478 solver.cpp:219] Iteration 100 (929.449 iter/s, 0.107591s/100 iters), loss = 0.505829
I0426 20:53:39.610637 32478 solver.cpp:238]     Train net output #0: loss = 0.505829 (* 1 = 0.505829 loss)
I0426 20:53:39.610643 32478 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:39.721211 32478 solver.cpp:219] Iteration 200 (904.461 iter/s, 0.110563s/100 iters), loss = 0.190777
I0426 20:53:39.721240 32478 solver.cpp:238]     Train net output #0: loss = 0.190777 (* 1 = 0.190777 loss)
I0426 20:53:39.721247 32478 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:39.830765 32478 solver.cpp:219] Iteration 300 (913.119 iter/s, 0.109515s/100 iters), loss = 0.170879
I0426 20:53:39.830806 32478 solver.cpp:238]     Train net output #0: loss = 0.170879 (* 1 = 0.170879 loss)
I0426 20:53:39.830813 32478 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:39.940099 32478 solver.cpp:219] Iteration 400 (914.95 iter/s, 0.109296s/100 iters), loss = 0.0860431
I0426 20:53:39.940138 32478 solver.cpp:238]     Train net output #0: loss = 0.0860431 (* 1 = 0.0860431 loss)
I0426 20:53:39.940145 32478 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:40.045651 32478 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:40.104543 32485 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:40.106592 32478 solver.cpp:398]     Test net output #0: accuracy = 0.9636
I0426 20:53:40.106643 32478 solver.cpp:398]     Test net output #1: loss = 0.127541 (* 1 = 0.127541 loss)
I0426 20:53:40.107692 32478 solver.cpp:219] Iteration 500 (596.815 iter/s, 0.167556s/100 iters), loss = 0.134633
I0426 20:53:40.107728 32478 solver.cpp:238]     Train net output #0: loss = 0.134633 (* 1 = 0.134633 loss)
I0426 20:53:40.107734 32478 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:40.216341 32478 solver.cpp:219] Iteration 600 (920.669 iter/s, 0.108617s/100 iters), loss = 0.114268
I0426 20:53:40.216380 32478 solver.cpp:238]     Train net output #0: loss = 0.114268 (* 1 = 0.114268 loss)
I0426 20:53:40.216387 32478 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:40.325634 32478 solver.cpp:219] Iteration 700 (915.267 iter/s, 0.109258s/100 iters), loss = 0.220234
I0426 20:53:40.325659 32478 solver.cpp:238]     Train net output #0: loss = 0.220234 (* 1 = 0.220234 loss)
I0426 20:53:40.325666 32478 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:40.435726 32478 solver.cpp:219] Iteration 800 (908.625 iter/s, 0.110056s/100 iters), loss = 0.288177
I0426 20:53:40.435766 32478 solver.cpp:238]     Train net output #0: loss = 0.288177 (* 1 = 0.288177 loss)
I0426 20:53:40.435773 32478 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:40.543251 32478 solver.cpp:219] Iteration 900 (930.334 iter/s, 0.107488s/100 iters), loss = 0.206762
I0426 20:53:40.543292 32478 solver.cpp:238]     Train net output #0: loss = 0.206762 (* 1 = 0.206762 loss)
I0426 20:53:40.543298 32478 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:40.578500 32484 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:40.649713 32478 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:40.650635 32478 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:40.651360 32478 solver.cpp:311] Iteration 1000, loss = 0.106902
I0426 20:53:40.651374 32478 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:40.729328 32485 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:40.730032 32478 solver.cpp:398]     Test net output #0: accuracy = 0.9717
I0426 20:53:40.730051 32478 solver.cpp:398]     Test net output #1: loss = 0.0903261 (* 1 = 0.0903261 loss)
I0426 20:53:40.730057 32478 solver.cpp:316] Optimization Done.
I0426 20:53:40.730058 32478 caffe.cpp:259] Optimization Done.
