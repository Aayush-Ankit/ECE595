I0426 20:50:19.916357 31729 caffe.cpp:218] Using GPUs 0
I0426 20:50:19.954541 31729 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:20.475486 31729 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test57.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:20.475625 31729 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test57.prototxt
I0426 20:50:20.475968 31729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:20.475983 31729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:20.476068 31729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:50:20.476137 31729 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:20.476239 31729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:20.476261 31729 net.cpp:86] Creating Layer mnist
I0426 20:50:20.476270 31729 net.cpp:382] mnist -> data
I0426 20:50:20.476292 31729 net.cpp:382] mnist -> label
I0426 20:50:20.477412 31729 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:20.480180 31729 net.cpp:124] Setting up mnist
I0426 20:50:20.480198 31729 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:20.480204 31729 net.cpp:131] Top shape: 64 (64)
I0426 20:50:20.480207 31729 net.cpp:139] Memory required for data: 200960
I0426 20:50:20.480224 31729 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:20.480242 31729 net.cpp:86] Creating Layer conv0
I0426 20:50:20.480248 31729 net.cpp:408] conv0 <- data
I0426 20:50:20.480262 31729 net.cpp:382] conv0 -> conv0
I0426 20:50:20.757838 31729 net.cpp:124] Setting up conv0
I0426 20:50:20.757863 31729 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:20.757868 31729 net.cpp:139] Memory required for data: 1675520
I0426 20:50:20.757881 31729 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:20.757894 31729 net.cpp:86] Creating Layer pool0
I0426 20:50:20.757897 31729 net.cpp:408] pool0 <- conv0
I0426 20:50:20.757903 31729 net.cpp:382] pool0 -> pool0
I0426 20:50:20.757964 31729 net.cpp:124] Setting up pool0
I0426 20:50:20.757971 31729 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:20.757988 31729 net.cpp:139] Memory required for data: 2044160
I0426 20:50:20.757992 31729 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:20.758003 31729 net.cpp:86] Creating Layer conv1
I0426 20:50:20.758007 31729 net.cpp:408] conv1 <- pool0
I0426 20:50:20.758010 31729 net.cpp:382] conv1 -> conv1
I0426 20:50:20.760615 31729 net.cpp:124] Setting up conv1
I0426 20:50:20.760628 31729 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:20.760632 31729 net.cpp:139] Memory required for data: 2208000
I0426 20:50:20.760639 31729 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:20.760646 31729 net.cpp:86] Creating Layer pool1
I0426 20:50:20.760649 31729 net.cpp:408] pool1 <- conv1
I0426 20:50:20.760653 31729 net.cpp:382] pool1 -> pool1
I0426 20:50:20.760704 31729 net.cpp:124] Setting up pool1
I0426 20:50:20.760709 31729 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:20.760711 31729 net.cpp:139] Memory required for data: 2248960
I0426 20:50:20.760715 31729 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:20.760720 31729 net.cpp:86] Creating Layer ip1
I0426 20:50:20.760723 31729 net.cpp:408] ip1 <- pool1
I0426 20:50:20.760728 31729 net.cpp:382] ip1 -> ip1
I0426 20:50:20.760864 31729 net.cpp:124] Setting up ip1
I0426 20:50:20.760871 31729 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:20.760874 31729 net.cpp:139] Memory required for data: 2251520
I0426 20:50:20.760881 31729 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:20.760887 31729 net.cpp:86] Creating Layer relu1
I0426 20:50:20.760890 31729 net.cpp:408] relu1 <- ip1
I0426 20:50:20.760895 31729 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:20.761091 31729 net.cpp:124] Setting up relu1
I0426 20:50:20.761099 31729 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:20.761102 31729 net.cpp:139] Memory required for data: 2254080
I0426 20:50:20.761106 31729 layer_factory.hpp:77] Creating layer loss
I0426 20:50:20.761111 31729 net.cpp:86] Creating Layer loss
I0426 20:50:20.761114 31729 net.cpp:408] loss <- ip1
I0426 20:50:20.761118 31729 net.cpp:408] loss <- label
I0426 20:50:20.761123 31729 net.cpp:382] loss -> loss
I0426 20:50:20.761154 31729 layer_factory.hpp:77] Creating layer loss
I0426 20:50:20.762009 31729 net.cpp:124] Setting up loss
I0426 20:50:20.762022 31729 net.cpp:131] Top shape: (1)
I0426 20:50:20.762024 31729 net.cpp:134]     with loss weight 1
I0426 20:50:20.762037 31729 net.cpp:139] Memory required for data: 2254084
I0426 20:50:20.762042 31729 net.cpp:200] loss needs backward computation.
I0426 20:50:20.762044 31729 net.cpp:200] relu1 needs backward computation.
I0426 20:50:20.762048 31729 net.cpp:200] ip1 needs backward computation.
I0426 20:50:20.762050 31729 net.cpp:200] pool1 needs backward computation.
I0426 20:50:20.762053 31729 net.cpp:200] conv1 needs backward computation.
I0426 20:50:20.762056 31729 net.cpp:200] pool0 needs backward computation.
I0426 20:50:20.762058 31729 net.cpp:200] conv0 needs backward computation.
I0426 20:50:20.762063 31729 net.cpp:202] mnist does not need backward computation.
I0426 20:50:20.762064 31729 net.cpp:244] This network produces output loss
I0426 20:50:20.762073 31729 net.cpp:257] Network initialization done.
I0426 20:50:20.762328 31729 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test57.prototxt
I0426 20:50:20.762351 31729 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:20.762423 31729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:50:20.762493 31729 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:20.762538 31729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:20.762550 31729 net.cpp:86] Creating Layer mnist
I0426 20:50:20.762554 31729 net.cpp:382] mnist -> data
I0426 20:50:20.762562 31729 net.cpp:382] mnist -> label
I0426 20:50:20.762660 31729 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:20.764753 31729 net.cpp:124] Setting up mnist
I0426 20:50:20.764765 31729 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:20.764786 31729 net.cpp:131] Top shape: 100 (100)
I0426 20:50:20.764788 31729 net.cpp:139] Memory required for data: 314000
I0426 20:50:20.764791 31729 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:20.764801 31729 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:20.764803 31729 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:20.764808 31729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:20.764881 31729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:20.764998 31729 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:20.765007 31729 net.cpp:131] Top shape: 100 (100)
I0426 20:50:20.765012 31729 net.cpp:131] Top shape: 100 (100)
I0426 20:50:20.765014 31729 net.cpp:139] Memory required for data: 314800
I0426 20:50:20.765017 31729 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:20.765028 31729 net.cpp:86] Creating Layer conv0
I0426 20:50:20.765033 31729 net.cpp:408] conv0 <- data
I0426 20:50:20.765038 31729 net.cpp:382] conv0 -> conv0
I0426 20:50:20.765983 31729 net.cpp:124] Setting up conv0
I0426 20:50:20.765996 31729 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:20.766000 31729 net.cpp:139] Memory required for data: 2618800
I0426 20:50:20.766008 31729 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:20.766013 31729 net.cpp:86] Creating Layer pool0
I0426 20:50:20.766016 31729 net.cpp:408] pool0 <- conv0
I0426 20:50:20.766038 31729 net.cpp:382] pool0 -> pool0
I0426 20:50:20.766072 31729 net.cpp:124] Setting up pool0
I0426 20:50:20.766077 31729 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:20.766080 31729 net.cpp:139] Memory required for data: 3194800
I0426 20:50:20.766083 31729 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:20.766093 31729 net.cpp:86] Creating Layer conv1
I0426 20:50:20.766095 31729 net.cpp:408] conv1 <- pool0
I0426 20:50:20.766100 31729 net.cpp:382] conv1 -> conv1
I0426 20:50:20.768352 31729 net.cpp:124] Setting up conv1
I0426 20:50:20.768363 31729 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:20.768366 31729 net.cpp:139] Memory required for data: 3450800
I0426 20:50:20.768374 31729 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:20.768380 31729 net.cpp:86] Creating Layer pool1
I0426 20:50:20.768425 31729 net.cpp:408] pool1 <- conv1
I0426 20:50:20.768432 31729 net.cpp:382] pool1 -> pool1
I0426 20:50:20.768518 31729 net.cpp:124] Setting up pool1
I0426 20:50:20.768525 31729 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:20.768528 31729 net.cpp:139] Memory required for data: 3514800
I0426 20:50:20.768532 31729 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:20.768538 31729 net.cpp:86] Creating Layer ip1
I0426 20:50:20.768543 31729 net.cpp:408] ip1 <- pool1
I0426 20:50:20.768548 31729 net.cpp:382] ip1 -> ip1
I0426 20:50:20.768658 31729 net.cpp:124] Setting up ip1
I0426 20:50:20.768666 31729 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:20.768669 31729 net.cpp:139] Memory required for data: 3518800
I0426 20:50:20.768676 31729 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:20.768687 31729 net.cpp:86] Creating Layer relu1
I0426 20:50:20.768692 31729 net.cpp:408] relu1 <- ip1
I0426 20:50:20.768697 31729 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:20.769664 31729 net.cpp:124] Setting up relu1
I0426 20:50:20.769675 31729 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:20.769678 31729 net.cpp:139] Memory required for data: 3522800
I0426 20:50:20.769681 31729 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:50:20.769687 31729 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:50:20.769691 31729 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:50:20.769697 31729 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:50:20.769718 31729 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:50:20.769786 31729 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:50:20.769795 31729 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:20.769799 31729 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:20.769801 31729 net.cpp:139] Memory required for data: 3530800
I0426 20:50:20.769805 31729 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:20.769825 31729 net.cpp:86] Creating Layer accuracy
I0426 20:50:20.769829 31729 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:50:20.769832 31729 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:20.769836 31729 net.cpp:382] accuracy -> accuracy
I0426 20:50:20.769843 31729 net.cpp:124] Setting up accuracy
I0426 20:50:20.769846 31729 net.cpp:131] Top shape: (1)
I0426 20:50:20.769850 31729 net.cpp:139] Memory required for data: 3530804
I0426 20:50:20.769851 31729 layer_factory.hpp:77] Creating layer loss
I0426 20:50:20.769858 31729 net.cpp:86] Creating Layer loss
I0426 20:50:20.769861 31729 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:50:20.769865 31729 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:20.769870 31729 net.cpp:382] loss -> loss
I0426 20:50:20.769875 31729 layer_factory.hpp:77] Creating layer loss
I0426 20:50:20.770107 31729 net.cpp:124] Setting up loss
I0426 20:50:20.770117 31729 net.cpp:131] Top shape: (1)
I0426 20:50:20.770119 31729 net.cpp:134]     with loss weight 1
I0426 20:50:20.770125 31729 net.cpp:139] Memory required for data: 3530808
I0426 20:50:20.770128 31729 net.cpp:200] loss needs backward computation.
I0426 20:50:20.770133 31729 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:20.770136 31729 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:50:20.770139 31729 net.cpp:200] relu1 needs backward computation.
I0426 20:50:20.770141 31729 net.cpp:200] ip1 needs backward computation.
I0426 20:50:20.770144 31729 net.cpp:200] pool1 needs backward computation.
I0426 20:50:20.770148 31729 net.cpp:200] conv1 needs backward computation.
I0426 20:50:20.770150 31729 net.cpp:200] pool0 needs backward computation.
I0426 20:50:20.770153 31729 net.cpp:200] conv0 needs backward computation.
I0426 20:50:20.770162 31729 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:20.770167 31729 net.cpp:202] mnist does not need backward computation.
I0426 20:50:20.770169 31729 net.cpp:244] This network produces output accuracy
I0426 20:50:20.770174 31729 net.cpp:244] This network produces output loss
I0426 20:50:20.770191 31729 net.cpp:257] Network initialization done.
I0426 20:50:20.770225 31729 solver.cpp:56] Solver scaffolding done.
I0426 20:50:20.770424 31729 caffe.cpp:248] Starting Optimization
I0426 20:50:20.770431 31729 solver.cpp:273] Solving LeNet
I0426 20:50:20.770434 31729 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:20.770534 31729 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:20.774420 31729 blocking_queue.cpp:49] Waiting for data
I0426 20:50:20.842031 31736 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:20.842526 31729 solver.cpp:398]     Test net output #0: accuracy = 0.0985
I0426 20:50:20.842545 31729 solver.cpp:398]     Test net output #1: loss = 2.56356 (* 1 = 2.56356 loss)
I0426 20:50:20.844758 31729 solver.cpp:219] Iteration 0 (0 iter/s, 0.0742973s/100 iters), loss = 2.53651
I0426 20:50:20.844787 31729 solver.cpp:238]     Train net output #0: loss = 2.53651 (* 1 = 2.53651 loss)
I0426 20:50:20.844797 31729 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:20.922528 31729 solver.cpp:219] Iteration 100 (1286.51 iter/s, 0.0777299s/100 iters), loss = 1.01297
I0426 20:50:20.922556 31729 solver.cpp:238]     Train net output #0: loss = 1.01297 (* 1 = 1.01297 loss)
I0426 20:50:20.922562 31729 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:20.992617 31729 solver.cpp:219] Iteration 200 (1427.54 iter/s, 0.0700508s/100 iters), loss = 1.39255
I0426 20:50:20.992656 31729 solver.cpp:238]     Train net output #0: loss = 1.39255 (* 1 = 1.39255 loss)
I0426 20:50:20.992676 31729 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:21.070322 31729 solver.cpp:219] Iteration 300 (1287.78 iter/s, 0.0776532s/100 iters), loss = 0.879241
I0426 20:50:21.070374 31729 solver.cpp:238]     Train net output #0: loss = 0.879241 (* 1 = 0.879241 loss)
I0426 20:50:21.070389 31729 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:21.141516 31729 solver.cpp:219] Iteration 400 (1405.75 iter/s, 0.0711363s/100 iters), loss = 1.23757
I0426 20:50:21.141558 31729 solver.cpp:238]     Train net output #0: loss = 1.23757 (* 1 = 1.23757 loss)
I0426 20:50:21.141566 31729 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:21.204483 31729 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:21.270537 31736 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:21.271025 31729 solver.cpp:398]     Test net output #0: accuracy = 0.7428
I0426 20:50:21.271044 31729 solver.cpp:398]     Test net output #1: loss = 0.832576 (* 1 = 0.832576 loss)
I0426 20:50:21.271802 31729 solver.cpp:219] Iteration 500 (767.859 iter/s, 0.130232s/100 iters), loss = 0.938019
I0426 20:50:21.271823 31729 solver.cpp:238]     Train net output #0: loss = 0.938019 (* 1 = 0.938019 loss)
I0426 20:50:21.271829 31729 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:21.349930 31729 solver.cpp:219] Iteration 600 (1280.47 iter/s, 0.0780962s/100 iters), loss = 0.663391
I0426 20:50:21.349956 31729 solver.cpp:238]     Train net output #0: loss = 0.663391 (* 1 = 0.663391 loss)
I0426 20:50:21.349962 31729 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:21.416985 31729 solver.cpp:219] Iteration 700 (1492.1 iter/s, 0.0670198s/100 iters), loss = 0.779074
I0426 20:50:21.417009 31729 solver.cpp:238]     Train net output #0: loss = 0.779074 (* 1 = 0.779074 loss)
I0426 20:50:21.417032 31729 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:21.481631 31729 solver.cpp:219] Iteration 800 (1547.64 iter/s, 0.0646144s/100 iters), loss = 0.896905
I0426 20:50:21.481653 31729 solver.cpp:238]     Train net output #0: loss = 0.896905 (* 1 = 0.896905 loss)
I0426 20:50:21.481678 31729 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:21.546038 31729 solver.cpp:219] Iteration 900 (1553.4 iter/s, 0.064375s/100 iters), loss = 0.421028
I0426 20:50:21.546062 31729 solver.cpp:238]     Train net output #0: loss = 0.421028 (* 1 = 0.421028 loss)
I0426 20:50:21.546087 31729 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:21.567581 31735 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:21.609355 31729 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:21.610009 31729 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:21.610451 31729 solver.cpp:311] Iteration 1000, loss = 0.435925
I0426 20:50:21.610467 31729 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:21.684818 31736 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:21.685335 31729 solver.cpp:398]     Test net output #0: accuracy = 0.9328
I0426 20:50:21.685359 31729 solver.cpp:398]     Test net output #1: loss = 0.361348 (* 1 = 0.361348 loss)
I0426 20:50:21.685365 31729 solver.cpp:316] Optimization Done.
I0426 20:50:21.685369 31729 caffe.cpp:259] Optimization Done.
