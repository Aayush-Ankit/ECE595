I0426 20:53:33.400517 32462 caffe.cpp:218] Using GPUs 0
I0426 20:53:33.436238 32462 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:33.954872 32462 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test139.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:33.955001 32462 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test139.prototxt
I0426 20:53:33.955394 32462 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:33.955411 32462 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:33.955507 32462 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:33.955577 32462 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:33.955672 32462 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:33.955693 32462 net.cpp:86] Creating Layer mnist
I0426 20:53:33.955700 32462 net.cpp:382] mnist -> data
I0426 20:53:33.955723 32462 net.cpp:382] mnist -> label
I0426 20:53:33.956773 32462 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:33.959254 32462 net.cpp:124] Setting up mnist
I0426 20:53:33.959271 32462 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:33.959277 32462 net.cpp:131] Top shape: 64 (64)
I0426 20:53:33.959281 32462 net.cpp:139] Memory required for data: 200960
I0426 20:53:33.959287 32462 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:33.959328 32462 net.cpp:86] Creating Layer conv0
I0426 20:53:33.959349 32462 net.cpp:408] conv0 <- data
I0426 20:53:33.959362 32462 net.cpp:382] conv0 -> conv0
I0426 20:53:34.210916 32462 net.cpp:124] Setting up conv0
I0426 20:53:34.210940 32462 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:53:34.210944 32462 net.cpp:139] Memory required for data: 3887360
I0426 20:53:34.210958 32462 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:34.210970 32462 net.cpp:86] Creating Layer pool0
I0426 20:53:34.210974 32462 net.cpp:408] pool0 <- conv0
I0426 20:53:34.210980 32462 net.cpp:382] pool0 -> pool0
I0426 20:53:34.211037 32462 net.cpp:124] Setting up pool0
I0426 20:53:34.211042 32462 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:53:34.211045 32462 net.cpp:139] Memory required for data: 4808960
I0426 20:53:34.211047 32462 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:34.211058 32462 net.cpp:86] Creating Layer conv1
I0426 20:53:34.211061 32462 net.cpp:408] conv1 <- pool0
I0426 20:53:34.211066 32462 net.cpp:382] conv1 -> conv1
I0426 20:53:34.213058 32462 net.cpp:124] Setting up conv1
I0426 20:53:34.213086 32462 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:53:34.213090 32462 net.cpp:139] Memory required for data: 5628160
I0426 20:53:34.213099 32462 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:34.213105 32462 net.cpp:86] Creating Layer pool1
I0426 20:53:34.213124 32462 net.cpp:408] pool1 <- conv1
I0426 20:53:34.213127 32462 net.cpp:382] pool1 -> pool1
I0426 20:53:34.213181 32462 net.cpp:124] Setting up pool1
I0426 20:53:34.213186 32462 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:53:34.213188 32462 net.cpp:139] Memory required for data: 5832960
I0426 20:53:34.213191 32462 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:34.213197 32462 net.cpp:86] Creating Layer ip1
I0426 20:53:34.213201 32462 net.cpp:408] ip1 <- pool1
I0426 20:53:34.213204 32462 net.cpp:382] ip1 -> ip1
I0426 20:53:34.215323 32462 net.cpp:124] Setting up ip1
I0426 20:53:34.215334 32462 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:34.215338 32462 net.cpp:139] Memory required for data: 5909760
I0426 20:53:34.215345 32462 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:34.215350 32462 net.cpp:86] Creating Layer relu1
I0426 20:53:34.215353 32462 net.cpp:408] relu1 <- ip1
I0426 20:53:34.215358 32462 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:34.215553 32462 net.cpp:124] Setting up relu1
I0426 20:53:34.215561 32462 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:34.215564 32462 net.cpp:139] Memory required for data: 5986560
I0426 20:53:34.215567 32462 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:34.215574 32462 net.cpp:86] Creating Layer ip2
I0426 20:53:34.215577 32462 net.cpp:408] ip2 <- ip1
I0426 20:53:34.215582 32462 net.cpp:382] ip2 -> ip2
I0426 20:53:34.216178 32462 net.cpp:124] Setting up ip2
I0426 20:53:34.216186 32462 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:34.216188 32462 net.cpp:139] Memory required for data: 6063360
I0426 20:53:34.216208 32462 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:34.216213 32462 net.cpp:86] Creating Layer relu2
I0426 20:53:34.216217 32462 net.cpp:408] relu2 <- ip2
I0426 20:53:34.216220 32462 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:34.217046 32462 net.cpp:124] Setting up relu2
I0426 20:53:34.217058 32462 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:34.217077 32462 net.cpp:139] Memory required for data: 6140160
I0426 20:53:34.217080 32462 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:34.217087 32462 net.cpp:86] Creating Layer ip3
I0426 20:53:34.217105 32462 net.cpp:408] ip3 <- ip2
I0426 20:53:34.217110 32462 net.cpp:382] ip3 -> ip3
I0426 20:53:34.218175 32462 net.cpp:124] Setting up ip3
I0426 20:53:34.218189 32462 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:34.218191 32462 net.cpp:139] Memory required for data: 6142720
I0426 20:53:34.218200 32462 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:34.218222 32462 net.cpp:86] Creating Layer relu3
I0426 20:53:34.218226 32462 net.cpp:408] relu3 <- ip3
I0426 20:53:34.218231 32462 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:34.218447 32462 net.cpp:124] Setting up relu3
I0426 20:53:34.218456 32462 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:34.218461 32462 net.cpp:139] Memory required for data: 6145280
I0426 20:53:34.218463 32462 layer_factory.hpp:77] Creating layer loss
I0426 20:53:34.218468 32462 net.cpp:86] Creating Layer loss
I0426 20:53:34.218472 32462 net.cpp:408] loss <- ip3
I0426 20:53:34.218475 32462 net.cpp:408] loss <- label
I0426 20:53:34.218482 32462 net.cpp:382] loss -> loss
I0426 20:53:34.218495 32462 layer_factory.hpp:77] Creating layer loss
I0426 20:53:34.218731 32462 net.cpp:124] Setting up loss
I0426 20:53:34.218741 32462 net.cpp:131] Top shape: (1)
I0426 20:53:34.218744 32462 net.cpp:134]     with loss weight 1
I0426 20:53:34.218758 32462 net.cpp:139] Memory required for data: 6145284
I0426 20:53:34.218761 32462 net.cpp:200] loss needs backward computation.
I0426 20:53:34.218765 32462 net.cpp:200] relu3 needs backward computation.
I0426 20:53:34.218768 32462 net.cpp:200] ip3 needs backward computation.
I0426 20:53:34.218771 32462 net.cpp:200] relu2 needs backward computation.
I0426 20:53:34.218773 32462 net.cpp:200] ip2 needs backward computation.
I0426 20:53:34.218776 32462 net.cpp:200] relu1 needs backward computation.
I0426 20:53:34.218780 32462 net.cpp:200] ip1 needs backward computation.
I0426 20:53:34.218782 32462 net.cpp:200] pool1 needs backward computation.
I0426 20:53:34.218786 32462 net.cpp:200] conv1 needs backward computation.
I0426 20:53:34.218788 32462 net.cpp:200] pool0 needs backward computation.
I0426 20:53:34.218791 32462 net.cpp:200] conv0 needs backward computation.
I0426 20:53:34.218794 32462 net.cpp:202] mnist does not need backward computation.
I0426 20:53:34.218797 32462 net.cpp:244] This network produces output loss
I0426 20:53:34.218806 32462 net.cpp:257] Network initialization done.
I0426 20:53:34.219130 32462 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test139.prototxt
I0426 20:53:34.219185 32462 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:34.219269 32462 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:34.219344 32462 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:34.219386 32462 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:34.219398 32462 net.cpp:86] Creating Layer mnist
I0426 20:53:34.219403 32462 net.cpp:382] mnist -> data
I0426 20:53:34.219410 32462 net.cpp:382] mnist -> label
I0426 20:53:34.219488 32462 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:34.221391 32462 net.cpp:124] Setting up mnist
I0426 20:53:34.221420 32462 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:34.221424 32462 net.cpp:131] Top shape: 100 (100)
I0426 20:53:34.221427 32462 net.cpp:139] Memory required for data: 314000
I0426 20:53:34.221431 32462 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:34.221436 32462 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:34.221441 32462 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:34.221444 32462 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:34.221467 32462 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:34.221524 32462 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:34.221529 32462 net.cpp:131] Top shape: 100 (100)
I0426 20:53:34.221531 32462 net.cpp:131] Top shape: 100 (100)
I0426 20:53:34.221534 32462 net.cpp:139] Memory required for data: 314800
I0426 20:53:34.221537 32462 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:34.221562 32462 net.cpp:86] Creating Layer conv0
I0426 20:53:34.221565 32462 net.cpp:408] conv0 <- data
I0426 20:53:34.221571 32462 net.cpp:382] conv0 -> conv0
I0426 20:53:34.223609 32462 net.cpp:124] Setting up conv0
I0426 20:53:34.223623 32462 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:53:34.223626 32462 net.cpp:139] Memory required for data: 6074800
I0426 20:53:34.223635 32462 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:34.223640 32462 net.cpp:86] Creating Layer pool0
I0426 20:53:34.223659 32462 net.cpp:408] pool0 <- conv0
I0426 20:53:34.223665 32462 net.cpp:382] pool0 -> pool0
I0426 20:53:34.223701 32462 net.cpp:124] Setting up pool0
I0426 20:53:34.223706 32462 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:53:34.223708 32462 net.cpp:139] Memory required for data: 7514800
I0426 20:53:34.223711 32462 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:34.223721 32462 net.cpp:86] Creating Layer conv1
I0426 20:53:34.223723 32462 net.cpp:408] conv1 <- pool0
I0426 20:53:34.223728 32462 net.cpp:382] conv1 -> conv1
I0426 20:53:34.225648 32462 net.cpp:124] Setting up conv1
I0426 20:53:34.225661 32462 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:53:34.225664 32462 net.cpp:139] Memory required for data: 8794800
I0426 20:53:34.225672 32462 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:34.225694 32462 net.cpp:86] Creating Layer pool1
I0426 20:53:34.225698 32462 net.cpp:408] pool1 <- conv1
I0426 20:53:34.225703 32462 net.cpp:382] pool1 -> pool1
I0426 20:53:34.225739 32462 net.cpp:124] Setting up pool1
I0426 20:53:34.225744 32462 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:53:34.225747 32462 net.cpp:139] Memory required for data: 9114800
I0426 20:53:34.225750 32462 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:34.225756 32462 net.cpp:86] Creating Layer ip1
I0426 20:53:34.225759 32462 net.cpp:408] ip1 <- pool1
I0426 20:53:34.225764 32462 net.cpp:382] ip1 -> ip1
I0426 20:53:34.227221 32462 net.cpp:124] Setting up ip1
I0426 20:53:34.227229 32462 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:34.227241 32462 net.cpp:139] Memory required for data: 9234800
I0426 20:53:34.227264 32462 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:34.227269 32462 net.cpp:86] Creating Layer relu1
I0426 20:53:34.227272 32462 net.cpp:408] relu1 <- ip1
I0426 20:53:34.227278 32462 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:34.227524 32462 net.cpp:124] Setting up relu1
I0426 20:53:34.227535 32462 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:34.227538 32462 net.cpp:139] Memory required for data: 9354800
I0426 20:53:34.227542 32462 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:34.227550 32462 net.cpp:86] Creating Layer ip2
I0426 20:53:34.227553 32462 net.cpp:408] ip2 <- ip1
I0426 20:53:34.227558 32462 net.cpp:382] ip2 -> ip2
I0426 20:53:34.228181 32462 net.cpp:124] Setting up ip2
I0426 20:53:34.228190 32462 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:34.228193 32462 net.cpp:139] Memory required for data: 9474800
I0426 20:53:34.228199 32462 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:34.228202 32462 net.cpp:86] Creating Layer relu2
I0426 20:53:34.228205 32462 net.cpp:408] relu2 <- ip2
I0426 20:53:34.228217 32462 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:34.228387 32462 net.cpp:124] Setting up relu2
I0426 20:53:34.228396 32462 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:34.228399 32462 net.cpp:139] Memory required for data: 9594800
I0426 20:53:34.228417 32462 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:34.228423 32462 net.cpp:86] Creating Layer ip3
I0426 20:53:34.228426 32462 net.cpp:408] ip3 <- ip2
I0426 20:53:34.228432 32462 net.cpp:382] ip3 -> ip3
I0426 20:53:34.228606 32462 net.cpp:124] Setting up ip3
I0426 20:53:34.228615 32462 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:34.228617 32462 net.cpp:139] Memory required for data: 9598800
I0426 20:53:34.228631 32462 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:34.228636 32462 net.cpp:86] Creating Layer relu3
I0426 20:53:34.228646 32462 net.cpp:408] relu3 <- ip3
I0426 20:53:34.228652 32462 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:34.229588 32462 net.cpp:124] Setting up relu3
I0426 20:53:34.229600 32462 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:34.229604 32462 net.cpp:139] Memory required for data: 9602800
I0426 20:53:34.229607 32462 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:53:34.229612 32462 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:53:34.229615 32462 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:53:34.229622 32462 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:53:34.229629 32462 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:53:34.229697 32462 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:53:34.229704 32462 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:34.229708 32462 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:34.229712 32462 net.cpp:139] Memory required for data: 9610800
I0426 20:53:34.229714 32462 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:34.229718 32462 net.cpp:86] Creating Layer accuracy
I0426 20:53:34.229722 32462 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:53:34.229725 32462 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:34.229732 32462 net.cpp:382] accuracy -> accuracy
I0426 20:53:34.229737 32462 net.cpp:124] Setting up accuracy
I0426 20:53:34.229742 32462 net.cpp:131] Top shape: (1)
I0426 20:53:34.229744 32462 net.cpp:139] Memory required for data: 9610804
I0426 20:53:34.229748 32462 layer_factory.hpp:77] Creating layer loss
I0426 20:53:34.229751 32462 net.cpp:86] Creating Layer loss
I0426 20:53:34.229754 32462 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:53:34.229758 32462 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:34.229761 32462 net.cpp:382] loss -> loss
I0426 20:53:34.229768 32462 layer_factory.hpp:77] Creating layer loss
I0426 20:53:34.230002 32462 net.cpp:124] Setting up loss
I0426 20:53:34.230011 32462 net.cpp:131] Top shape: (1)
I0426 20:53:34.230015 32462 net.cpp:134]     with loss weight 1
I0426 20:53:34.230029 32462 net.cpp:139] Memory required for data: 9610808
I0426 20:53:34.230033 32462 net.cpp:200] loss needs backward computation.
I0426 20:53:34.230036 32462 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:34.230041 32462 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:53:34.230043 32462 net.cpp:200] relu3 needs backward computation.
I0426 20:53:34.230046 32462 net.cpp:200] ip3 needs backward computation.
I0426 20:53:34.230048 32462 net.cpp:200] relu2 needs backward computation.
I0426 20:53:34.230051 32462 net.cpp:200] ip2 needs backward computation.
I0426 20:53:34.230053 32462 net.cpp:200] relu1 needs backward computation.
I0426 20:53:34.230057 32462 net.cpp:200] ip1 needs backward computation.
I0426 20:53:34.230058 32462 net.cpp:200] pool1 needs backward computation.
I0426 20:53:34.230062 32462 net.cpp:200] conv1 needs backward computation.
I0426 20:53:34.230064 32462 net.cpp:200] pool0 needs backward computation.
I0426 20:53:34.230067 32462 net.cpp:200] conv0 needs backward computation.
I0426 20:53:34.230072 32462 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:34.230074 32462 net.cpp:202] mnist does not need backward computation.
I0426 20:53:34.230077 32462 net.cpp:244] This network produces output accuracy
I0426 20:53:34.230080 32462 net.cpp:244] This network produces output loss
I0426 20:53:34.230092 32462 net.cpp:257] Network initialization done.
I0426 20:53:34.230131 32462 solver.cpp:56] Solver scaffolding done.
I0426 20:53:34.230443 32462 caffe.cpp:248] Starting Optimization
I0426 20:53:34.230464 32462 solver.cpp:273] Solving LeNet
I0426 20:53:34.230466 32462 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:34.231940 32462 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:34.239609 32462 blocking_queue.cpp:49] Waiting for data
I0426 20:53:34.308274 32469 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:34.309075 32462 solver.cpp:398]     Test net output #0: accuracy = 0.1075
I0426 20:53:34.309093 32462 solver.cpp:398]     Test net output #1: loss = 2.30834 (* 1 = 2.30834 loss)
I0426 20:53:34.313616 32462 solver.cpp:219] Iteration 0 (-1.4843e-30 iter/s, 0.0831078s/100 iters), loss = 2.3083
I0426 20:53:34.313640 32462 solver.cpp:238]     Train net output #0: loss = 2.3083 (* 1 = 2.3083 loss)
I0426 20:53:34.313668 32462 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:34.454423 32462 solver.cpp:219] Iteration 100 (710.475 iter/s, 0.140751s/100 iters), loss = 0.628686
I0426 20:53:34.454449 32462 solver.cpp:238]     Train net output #0: loss = 0.628686 (* 1 = 0.628686 loss)
I0426 20:53:34.454470 32462 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:34.594041 32462 solver.cpp:219] Iteration 200 (716.433 iter/s, 0.13958s/100 iters), loss = 0.205
I0426 20:53:34.594064 32462 solver.cpp:238]     Train net output #0: loss = 0.205 (* 1 = 0.205 loss)
I0426 20:53:34.594085 32462 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:34.733211 32462 solver.cpp:219] Iteration 300 (718.732 iter/s, 0.139134s/100 iters), loss = 0.467383
I0426 20:53:34.733233 32462 solver.cpp:238]     Train net output #0: loss = 0.467383 (* 1 = 0.467383 loss)
I0426 20:53:34.733239 32462 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:34.872536 32462 solver.cpp:219] Iteration 400 (717.928 iter/s, 0.13929s/100 iters), loss = 0.051612
I0426 20:53:34.872558 32462 solver.cpp:238]     Train net output #0: loss = 0.051612 (* 1 = 0.051612 loss)
I0426 20:53:34.872581 32462 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:35.010221 32462 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:35.072360 32469 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:35.074440 32462 solver.cpp:398]     Test net output #0: accuracy = 0.9713
I0426 20:53:35.074460 32462 solver.cpp:398]     Test net output #1: loss = 0.0903388 (* 1 = 0.0903388 loss)
I0426 20:53:35.075731 32462 solver.cpp:219] Iteration 500 (492.231 iter/s, 0.203156s/100 iters), loss = 0.0791023
I0426 20:53:35.075767 32462 solver.cpp:238]     Train net output #0: loss = 0.0791023 (* 1 = 0.0791023 loss)
I0426 20:53:35.075774 32462 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:35.219480 32462 solver.cpp:219] Iteration 600 (695.899 iter/s, 0.143699s/100 iters), loss = 0.104695
I0426 20:53:35.219506 32462 solver.cpp:238]     Train net output #0: loss = 0.104695 (* 1 = 0.104695 loss)
I0426 20:53:35.219513 32462 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:35.364764 32462 solver.cpp:219] Iteration 700 (688.496 iter/s, 0.145244s/100 iters), loss = 0.127477
I0426 20:53:35.364799 32462 solver.cpp:238]     Train net output #0: loss = 0.127477 (* 1 = 0.127477 loss)
I0426 20:53:35.364809 32462 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:35.510713 32462 solver.cpp:219] Iteration 800 (685.398 iter/s, 0.145901s/100 iters), loss = 0.188147
I0426 20:53:35.510749 32462 solver.cpp:238]     Train net output #0: loss = 0.188147 (* 1 = 0.188147 loss)
I0426 20:53:35.510768 32462 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:35.657299 32462 solver.cpp:219] Iteration 900 (682.429 iter/s, 0.146535s/100 iters), loss = 0.211827
I0426 20:53:35.657335 32462 solver.cpp:238]     Train net output #0: loss = 0.211827 (* 1 = 0.211827 loss)
I0426 20:53:35.657348 32462 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:35.707010 32468 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:35.805626 32462 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:35.812260 32462 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:35.815784 32462 solver.cpp:311] Iteration 1000, loss = 0.0916559
I0426 20:53:35.815815 32462 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:35.881356 32469 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:35.883656 32462 solver.cpp:398]     Test net output #0: accuracy = 0.9815
I0426 20:53:35.883677 32462 solver.cpp:398]     Test net output #1: loss = 0.0591086 (* 1 = 0.0591086 loss)
I0426 20:53:35.883683 32462 solver.cpp:316] Optimization Done.
I0426 20:53:35.883698 32462 caffe.cpp:259] Optimization Done.
