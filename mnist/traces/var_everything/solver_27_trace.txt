I0426 20:49:06.960153 31451 caffe.cpp:218] Using GPUs 0
I0426 20:49:06.991497 31451 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:07.450738 31451 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test27.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:07.450888 31451 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test27.prototxt
I0426 20:49:07.451225 31451 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:07.451241 31451 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:07.451314 31451 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:07.451376 31451 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:07.451478 31451 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:07.451499 31451 net.cpp:86] Creating Layer mnist
I0426 20:49:07.451505 31451 net.cpp:382] mnist -> data
I0426 20:49:07.451524 31451 net.cpp:382] mnist -> label
I0426 20:49:07.452483 31451 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:07.454674 31451 net.cpp:124] Setting up mnist
I0426 20:49:07.454702 31451 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:07.454707 31451 net.cpp:131] Top shape: 64 (64)
I0426 20:49:07.454710 31451 net.cpp:139] Memory required for data: 200960
I0426 20:49:07.454715 31451 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:07.454754 31451 net.cpp:86] Creating Layer conv0
I0426 20:49:07.454759 31451 net.cpp:408] conv0 <- data
I0426 20:49:07.454768 31451 net.cpp:382] conv0 -> conv0
I0426 20:49:07.683557 31451 net.cpp:124] Setting up conv0
I0426 20:49:07.683583 31451 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:49:07.683585 31451 net.cpp:139] Memory required for data: 1675520
I0426 20:49:07.683615 31451 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:07.683627 31451 net.cpp:86] Creating Layer pool0
I0426 20:49:07.683650 31451 net.cpp:408] pool0 <- conv0
I0426 20:49:07.683655 31451 net.cpp:382] pool0 -> pool0
I0426 20:49:07.683701 31451 net.cpp:124] Setting up pool0
I0426 20:49:07.683706 31451 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:49:07.683707 31451 net.cpp:139] Memory required for data: 2044160
I0426 20:49:07.683710 31451 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:07.683718 31451 net.cpp:86] Creating Layer ip1
I0426 20:49:07.683722 31451 net.cpp:408] ip1 <- pool0
I0426 20:49:07.683727 31451 net.cpp:382] ip1 -> ip1
I0426 20:49:07.686874 31451 net.cpp:124] Setting up ip1
I0426 20:49:07.686902 31451 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:07.686905 31451 net.cpp:139] Memory required for data: 2120960
I0426 20:49:07.686913 31451 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:07.686919 31451 net.cpp:86] Creating Layer relu1
I0426 20:49:07.686923 31451 net.cpp:408] relu1 <- ip1
I0426 20:49:07.686928 31451 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:07.687099 31451 net.cpp:124] Setting up relu1
I0426 20:49:07.687108 31451 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:07.687111 31451 net.cpp:139] Memory required for data: 2197760
I0426 20:49:07.687114 31451 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:07.687120 31451 net.cpp:86] Creating Layer ip2
I0426 20:49:07.687124 31451 net.cpp:408] ip2 <- ip1
I0426 20:49:07.687129 31451 net.cpp:382] ip2 -> ip2
I0426 20:49:07.687710 31451 net.cpp:124] Setting up ip2
I0426 20:49:07.687716 31451 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:07.687733 31451 net.cpp:139] Memory required for data: 2274560
I0426 20:49:07.687741 31451 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:07.687744 31451 net.cpp:86] Creating Layer relu2
I0426 20:49:07.687747 31451 net.cpp:408] relu2 <- ip2
I0426 20:49:07.687752 31451 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:07.688581 31451 net.cpp:124] Setting up relu2
I0426 20:49:07.688592 31451 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:07.688611 31451 net.cpp:139] Memory required for data: 2351360
I0426 20:49:07.688614 31451 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:07.688621 31451 net.cpp:86] Creating Layer ip3
I0426 20:49:07.688624 31451 net.cpp:408] ip3 <- ip2
I0426 20:49:07.688630 31451 net.cpp:382] ip3 -> ip3
I0426 20:49:07.689677 31451 net.cpp:124] Setting up ip3
I0426 20:49:07.689688 31451 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:07.689707 31451 net.cpp:139] Memory required for data: 2353920
I0426 20:49:07.689713 31451 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:07.689734 31451 net.cpp:86] Creating Layer relu3
I0426 20:49:07.689738 31451 net.cpp:408] relu3 <- ip3
I0426 20:49:07.689743 31451 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:07.689919 31451 net.cpp:124] Setting up relu3
I0426 20:49:07.689927 31451 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:07.689930 31451 net.cpp:139] Memory required for data: 2356480
I0426 20:49:07.689934 31451 layer_factory.hpp:77] Creating layer loss
I0426 20:49:07.689939 31451 net.cpp:86] Creating Layer loss
I0426 20:49:07.689941 31451 net.cpp:408] loss <- ip3
I0426 20:49:07.689945 31451 net.cpp:408] loss <- label
I0426 20:49:07.689950 31451 net.cpp:382] loss -> loss
I0426 20:49:07.689965 31451 layer_factory.hpp:77] Creating layer loss
I0426 20:49:07.690189 31451 net.cpp:124] Setting up loss
I0426 20:49:07.690198 31451 net.cpp:131] Top shape: (1)
I0426 20:49:07.690201 31451 net.cpp:134]     with loss weight 1
I0426 20:49:07.690215 31451 net.cpp:139] Memory required for data: 2356484
I0426 20:49:07.690218 31451 net.cpp:200] loss needs backward computation.
I0426 20:49:07.690222 31451 net.cpp:200] relu3 needs backward computation.
I0426 20:49:07.690225 31451 net.cpp:200] ip3 needs backward computation.
I0426 20:49:07.690228 31451 net.cpp:200] relu2 needs backward computation.
I0426 20:49:07.690230 31451 net.cpp:200] ip2 needs backward computation.
I0426 20:49:07.690233 31451 net.cpp:200] relu1 needs backward computation.
I0426 20:49:07.690237 31451 net.cpp:200] ip1 needs backward computation.
I0426 20:49:07.690249 31451 net.cpp:200] pool0 needs backward computation.
I0426 20:49:07.690253 31451 net.cpp:200] conv0 needs backward computation.
I0426 20:49:07.690256 31451 net.cpp:202] mnist does not need backward computation.
I0426 20:49:07.690258 31451 net.cpp:244] This network produces output loss
I0426 20:49:07.690266 31451 net.cpp:257] Network initialization done.
I0426 20:49:07.690577 31451 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test27.prototxt
I0426 20:49:07.690603 31451 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:07.690682 31451 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:07.690743 31451 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:07.690788 31451 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:07.690799 31451 net.cpp:86] Creating Layer mnist
I0426 20:49:07.690804 31451 net.cpp:382] mnist -> data
I0426 20:49:07.690811 31451 net.cpp:382] mnist -> label
I0426 20:49:07.690891 31451 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:07.693084 31451 net.cpp:124] Setting up mnist
I0426 20:49:07.693110 31451 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:07.693115 31451 net.cpp:131] Top shape: 100 (100)
I0426 20:49:07.693120 31451 net.cpp:139] Memory required for data: 314000
I0426 20:49:07.693123 31451 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:07.693133 31451 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:07.693136 31451 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:07.693141 31451 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:07.693162 31451 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:07.693238 31451 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:07.693243 31451 net.cpp:131] Top shape: 100 (100)
I0426 20:49:07.693246 31451 net.cpp:131] Top shape: 100 (100)
I0426 20:49:07.693248 31451 net.cpp:139] Memory required for data: 314800
I0426 20:49:07.693276 31451 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:07.693284 31451 net.cpp:86] Creating Layer conv0
I0426 20:49:07.693287 31451 net.cpp:408] conv0 <- data
I0426 20:49:07.693292 31451 net.cpp:382] conv0 -> conv0
I0426 20:49:07.694883 31451 net.cpp:124] Setting up conv0
I0426 20:49:07.694895 31451 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:49:07.694900 31451 net.cpp:139] Memory required for data: 2618800
I0426 20:49:07.694907 31451 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:07.694928 31451 net.cpp:86] Creating Layer pool0
I0426 20:49:07.694931 31451 net.cpp:408] pool0 <- conv0
I0426 20:49:07.694937 31451 net.cpp:382] pool0 -> pool0
I0426 20:49:07.694969 31451 net.cpp:124] Setting up pool0
I0426 20:49:07.694974 31451 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:49:07.694977 31451 net.cpp:139] Memory required for data: 3194800
I0426 20:49:07.694979 31451 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:07.694985 31451 net.cpp:86] Creating Layer ip1
I0426 20:49:07.694988 31451 net.cpp:408] ip1 <- pool0
I0426 20:49:07.694993 31451 net.cpp:382] ip1 -> ip1
I0426 20:49:07.698385 31451 net.cpp:124] Setting up ip1
I0426 20:49:07.698396 31451 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:07.698405 31451 net.cpp:139] Memory required for data: 3314800
I0426 20:49:07.698413 31451 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:07.698418 31451 net.cpp:86] Creating Layer relu1
I0426 20:49:07.698437 31451 net.cpp:408] relu1 <- ip1
I0426 20:49:07.698448 31451 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:07.698595 31451 net.cpp:124] Setting up relu1
I0426 20:49:07.698602 31451 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:07.698606 31451 net.cpp:139] Memory required for data: 3434800
I0426 20:49:07.698608 31451 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:07.698614 31451 net.cpp:86] Creating Layer ip2
I0426 20:49:07.698623 31451 net.cpp:408] ip2 <- ip1
I0426 20:49:07.698628 31451 net.cpp:382] ip2 -> ip2
I0426 20:49:07.699250 31451 net.cpp:124] Setting up ip2
I0426 20:49:07.699272 31451 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:07.699275 31451 net.cpp:139] Memory required for data: 3554800
I0426 20:49:07.699282 31451 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:07.699297 31451 net.cpp:86] Creating Layer relu2
I0426 20:49:07.699301 31451 net.cpp:408] relu2 <- ip2
I0426 20:49:07.699306 31451 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:07.700237 31451 net.cpp:124] Setting up relu2
I0426 20:49:07.700263 31451 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:07.700266 31451 net.cpp:139] Memory required for data: 3674800
I0426 20:49:07.700284 31451 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:07.700306 31451 net.cpp:86] Creating Layer ip3
I0426 20:49:07.700310 31451 net.cpp:408] ip3 <- ip2
I0426 20:49:07.700316 31451 net.cpp:382] ip3 -> ip3
I0426 20:49:07.700451 31451 net.cpp:124] Setting up ip3
I0426 20:49:07.700459 31451 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:07.700462 31451 net.cpp:139] Memory required for data: 3678800
I0426 20:49:07.700467 31451 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:07.700484 31451 net.cpp:86] Creating Layer relu3
I0426 20:49:07.700487 31451 net.cpp:408] relu3 <- ip3
I0426 20:49:07.700497 31451 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:07.700634 31451 net.cpp:124] Setting up relu3
I0426 20:49:07.700641 31451 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:07.700644 31451 net.cpp:139] Memory required for data: 3682800
I0426 20:49:07.700647 31451 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:07.700659 31451 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:07.700661 31451 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:07.700666 31451 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:07.700671 31451 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:07.700703 31451 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:07.700707 31451 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:07.700721 31451 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:07.700723 31451 net.cpp:139] Memory required for data: 3690800
I0426 20:49:07.700726 31451 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:07.700736 31451 net.cpp:86] Creating Layer accuracy
I0426 20:49:07.700739 31451 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:07.700743 31451 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:07.700748 31451 net.cpp:382] accuracy -> accuracy
I0426 20:49:07.700755 31451 net.cpp:124] Setting up accuracy
I0426 20:49:07.700759 31451 net.cpp:131] Top shape: (1)
I0426 20:49:07.700767 31451 net.cpp:139] Memory required for data: 3690804
I0426 20:49:07.700770 31451 layer_factory.hpp:77] Creating layer loss
I0426 20:49:07.700774 31451 net.cpp:86] Creating Layer loss
I0426 20:49:07.700778 31451 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:07.700786 31451 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:07.700790 31451 net.cpp:382] loss -> loss
I0426 20:49:07.700795 31451 layer_factory.hpp:77] Creating layer loss
I0426 20:49:07.701102 31451 net.cpp:124] Setting up loss
I0426 20:49:07.701114 31451 net.cpp:131] Top shape: (1)
I0426 20:49:07.701118 31451 net.cpp:134]     with loss weight 1
I0426 20:49:07.701126 31451 net.cpp:139] Memory required for data: 3690808
I0426 20:49:07.701129 31451 net.cpp:200] loss needs backward computation.
I0426 20:49:07.701134 31451 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:07.701138 31451 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:07.701143 31451 net.cpp:200] relu3 needs backward computation.
I0426 20:49:07.701158 31451 net.cpp:200] ip3 needs backward computation.
I0426 20:49:07.701161 31451 net.cpp:200] relu2 needs backward computation.
I0426 20:49:07.701164 31451 net.cpp:200] ip2 needs backward computation.
I0426 20:49:07.701167 31451 net.cpp:200] relu1 needs backward computation.
I0426 20:49:07.701185 31451 net.cpp:200] ip1 needs backward computation.
I0426 20:49:07.701189 31451 net.cpp:200] pool0 needs backward computation.
I0426 20:49:07.701192 31451 net.cpp:200] conv0 needs backward computation.
I0426 20:49:07.701196 31451 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:07.701200 31451 net.cpp:202] mnist does not need backward computation.
I0426 20:49:07.701225 31451 net.cpp:244] This network produces output accuracy
I0426 20:49:07.701228 31451 net.cpp:244] This network produces output loss
I0426 20:49:07.701238 31451 net.cpp:257] Network initialization done.
I0426 20:49:07.701275 31451 solver.cpp:56] Solver scaffolding done.
I0426 20:49:07.701545 31451 caffe.cpp:248] Starting Optimization
I0426 20:49:07.701550 31451 solver.cpp:273] Solving LeNet
I0426 20:49:07.701555 31451 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:07.703626 31451 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:07.708204 31451 blocking_queue.cpp:49] Waiting for data
I0426 20:49:07.778741 31458 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:07.779325 31451 solver.cpp:398]     Test net output #0: accuracy = 0.0633
I0426 20:49:07.779346 31451 solver.cpp:398]     Test net output #1: loss = 2.31523 (* 1 = 2.31523 loss)
I0426 20:49:07.781896 31451 solver.cpp:219] Iteration 0 (0 iter/s, 0.0803194s/100 iters), loss = 2.31251
I0426 20:49:07.781951 31451 solver.cpp:238]     Train net output #0: loss = 2.31251 (* 1 = 2.31251 loss)
I0426 20:49:07.781965 31451 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:07.872186 31451 solver.cpp:219] Iteration 100 (1108.31 iter/s, 0.0902275s/100 iters), loss = 1.08304
I0426 20:49:07.872210 31451 solver.cpp:238]     Train net output #0: loss = 1.08304 (* 1 = 1.08304 loss)
I0426 20:49:07.872216 31451 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:07.961593 31451 solver.cpp:219] Iteration 200 (1118.91 iter/s, 0.0893727s/100 iters), loss = 0.575004
I0426 20:49:07.961618 31451 solver.cpp:238]     Train net output #0: loss = 0.575004 (* 1 = 0.575004 loss)
I0426 20:49:07.961640 31451 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:08.051136 31451 solver.cpp:219] Iteration 300 (1117.21 iter/s, 0.0895089s/100 iters), loss = 1.18355
I0426 20:49:08.051173 31451 solver.cpp:238]     Train net output #0: loss = 1.18355 (* 1 = 1.18355 loss)
I0426 20:49:08.051198 31451 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:08.145838 31451 solver.cpp:219] Iteration 400 (1056.53 iter/s, 0.0946493s/100 iters), loss = 0.653509
I0426 20:49:08.145862 31451 solver.cpp:238]     Train net output #0: loss = 0.653509 (* 1 = 0.653509 loss)
I0426 20:49:08.145884 31451 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:08.234083 31451 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:08.309520 31458 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:08.310083 31451 solver.cpp:398]     Test net output #0: accuracy = 0.7632
I0426 20:49:08.310102 31451 solver.cpp:398]     Test net output #1: loss = 0.758742 (* 1 = 0.758742 loss)
I0426 20:49:08.310941 31451 solver.cpp:219] Iteration 500 (605.819 iter/s, 0.165066s/100 iters), loss = 0.668056
I0426 20:49:08.310961 31451 solver.cpp:238]     Train net output #0: loss = 0.668056 (* 1 = 0.668056 loss)
I0426 20:49:08.310967 31451 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:08.405915 31451 solver.cpp:219] Iteration 600 (1053.26 iter/s, 0.0949431s/100 iters), loss = 0.63185
I0426 20:49:08.405953 31451 solver.cpp:238]     Train net output #0: loss = 0.63185 (* 1 = 0.63185 loss)
I0426 20:49:08.405961 31451 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:08.495635 31451 solver.cpp:219] Iteration 700 (1114.99 iter/s, 0.089687s/100 iters), loss = 0.742908
I0426 20:49:08.495672 31451 solver.cpp:238]     Train net output #0: loss = 0.742908 (* 1 = 0.742908 loss)
I0426 20:49:08.495678 31451 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:08.584935 31451 solver.cpp:219] Iteration 800 (1120.21 iter/s, 0.0892691s/100 iters), loss = 0.673998
I0426 20:49:08.584975 31451 solver.cpp:238]     Train net output #0: loss = 0.673998 (* 1 = 0.673998 loss)
I0426 20:49:08.584981 31451 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:08.674674 31451 solver.cpp:219] Iteration 900 (1114.8 iter/s, 0.0897024s/100 iters), loss = 0.748531
I0426 20:49:08.674711 31451 solver.cpp:238]     Train net output #0: loss = 0.748531 (* 1 = 0.748531 loss)
I0426 20:49:08.674717 31451 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:08.704807 31457 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:08.763126 31451 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:08.771150 31451 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:08.774946 31451 solver.cpp:311] Iteration 1000, loss = 0.634619
I0426 20:49:08.774965 31451 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:08.847671 31458 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:08.848242 31451 solver.cpp:398]     Test net output #0: accuracy = 0.7798
I0426 20:49:08.848259 31451 solver.cpp:398]     Test net output #1: loss = 0.549047 (* 1 = 0.549047 loss)
I0426 20:49:08.848264 31451 solver.cpp:316] Optimization Done.
I0426 20:49:08.848268 31451 caffe.cpp:259] Optimization Done.
