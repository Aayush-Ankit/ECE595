I0426 20:50:41.377720 31812 caffe.cpp:218] Using GPUs 0
I0426 20:50:41.416334 31812 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:41.948740 31812 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test67.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:41.948916 31812 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test67.prototxt
I0426 20:50:41.949349 31812 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:41.949378 31812 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:41.949484 31812 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:41.949566 31812 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:41.949664 31812 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:41.949687 31812 net.cpp:86] Creating Layer mnist
I0426 20:50:41.949697 31812 net.cpp:382] mnist -> data
I0426 20:50:41.949718 31812 net.cpp:382] mnist -> label
I0426 20:50:41.950808 31812 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:41.953351 31812 net.cpp:124] Setting up mnist
I0426 20:50:41.953369 31812 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:41.953375 31812 net.cpp:131] Top shape: 64 (64)
I0426 20:50:41.953378 31812 net.cpp:139] Memory required for data: 200960
I0426 20:50:41.953385 31812 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:41.953413 31812 net.cpp:86] Creating Layer conv0
I0426 20:50:41.953433 31812 net.cpp:408] conv0 <- data
I0426 20:50:41.953450 31812 net.cpp:382] conv0 -> conv0
I0426 20:50:42.247442 31812 net.cpp:124] Setting up conv0
I0426 20:50:42.247473 31812 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:42.247478 31812 net.cpp:139] Memory required for data: 1675520
I0426 20:50:42.247496 31812 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:42.247510 31812 net.cpp:86] Creating Layer pool0
I0426 20:50:42.247516 31812 net.cpp:408] pool0 <- conv0
I0426 20:50:42.247522 31812 net.cpp:382] pool0 -> pool0
I0426 20:50:42.247587 31812 net.cpp:124] Setting up pool0
I0426 20:50:42.247593 31812 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:42.247597 31812 net.cpp:139] Memory required for data: 2044160
I0426 20:50:42.247601 31812 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:42.247614 31812 net.cpp:86] Creating Layer conv1
I0426 20:50:42.247618 31812 net.cpp:408] conv1 <- pool0
I0426 20:50:42.247624 31812 net.cpp:382] conv1 -> conv1
I0426 20:50:42.250948 31812 net.cpp:124] Setting up conv1
I0426 20:50:42.250967 31812 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:42.250970 31812 net.cpp:139] Memory required for data: 2208000
I0426 20:50:42.250982 31812 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:42.250989 31812 net.cpp:86] Creating Layer pool1
I0426 20:50:42.250995 31812 net.cpp:408] pool1 <- conv1
I0426 20:50:42.251001 31812 net.cpp:382] pool1 -> pool1
I0426 20:50:42.251046 31812 net.cpp:124] Setting up pool1
I0426 20:50:42.251054 31812 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:42.251056 31812 net.cpp:139] Memory required for data: 2248960
I0426 20:50:42.251060 31812 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:42.251068 31812 net.cpp:86] Creating Layer ip1
I0426 20:50:42.251072 31812 net.cpp:408] ip1 <- pool1
I0426 20:50:42.251077 31812 net.cpp:382] ip1 -> ip1
I0426 20:50:42.251520 31812 net.cpp:124] Setting up ip1
I0426 20:50:42.251530 31812 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:42.251534 31812 net.cpp:139] Memory required for data: 2325760
I0426 20:50:42.251543 31812 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:42.251549 31812 net.cpp:86] Creating Layer relu1
I0426 20:50:42.251552 31812 net.cpp:408] relu1 <- ip1
I0426 20:50:42.251557 31812 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:42.251754 31812 net.cpp:124] Setting up relu1
I0426 20:50:42.251765 31812 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:42.251770 31812 net.cpp:139] Memory required for data: 2402560
I0426 20:50:42.251773 31812 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:42.251780 31812 net.cpp:86] Creating Layer ip2
I0426 20:50:42.251785 31812 net.cpp:408] ip2 <- ip1
I0426 20:50:42.251791 31812 net.cpp:382] ip2 -> ip2
I0426 20:50:42.252110 31812 net.cpp:124] Setting up ip2
I0426 20:50:42.252118 31812 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:42.252121 31812 net.cpp:139] Memory required for data: 2428160
I0426 20:50:42.252128 31812 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:42.252135 31812 net.cpp:86] Creating Layer relu2
I0426 20:50:42.252140 31812 net.cpp:408] relu2 <- ip2
I0426 20:50:42.252143 31812 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:42.253087 31812 net.cpp:124] Setting up relu2
I0426 20:50:42.253103 31812 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:42.253108 31812 net.cpp:139] Memory required for data: 2453760
I0426 20:50:42.253111 31812 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:42.253119 31812 net.cpp:86] Creating Layer ip3
I0426 20:50:42.253123 31812 net.cpp:408] ip3 <- ip2
I0426 20:50:42.253130 31812 net.cpp:382] ip3 -> ip3
I0426 20:50:42.253254 31812 net.cpp:124] Setting up ip3
I0426 20:50:42.253264 31812 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:42.253268 31812 net.cpp:139] Memory required for data: 2456320
I0426 20:50:42.253278 31812 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:42.253283 31812 net.cpp:86] Creating Layer relu3
I0426 20:50:42.253288 31812 net.cpp:408] relu3 <- ip3
I0426 20:50:42.253293 31812 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:42.253492 31812 net.cpp:124] Setting up relu3
I0426 20:50:42.253504 31812 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:42.253507 31812 net.cpp:139] Memory required for data: 2458880
I0426 20:50:42.253510 31812 layer_factory.hpp:77] Creating layer loss
I0426 20:50:42.253517 31812 net.cpp:86] Creating Layer loss
I0426 20:50:42.253521 31812 net.cpp:408] loss <- ip3
I0426 20:50:42.253526 31812 net.cpp:408] loss <- label
I0426 20:50:42.253532 31812 net.cpp:382] loss -> loss
I0426 20:50:42.253553 31812 layer_factory.hpp:77] Creating layer loss
I0426 20:50:42.253825 31812 net.cpp:124] Setting up loss
I0426 20:50:42.253836 31812 net.cpp:131] Top shape: (1)
I0426 20:50:42.253840 31812 net.cpp:134]     with loss weight 1
I0426 20:50:42.253856 31812 net.cpp:139] Memory required for data: 2458884
I0426 20:50:42.253860 31812 net.cpp:200] loss needs backward computation.
I0426 20:50:42.253865 31812 net.cpp:200] relu3 needs backward computation.
I0426 20:50:42.253868 31812 net.cpp:200] ip3 needs backward computation.
I0426 20:50:42.253872 31812 net.cpp:200] relu2 needs backward computation.
I0426 20:50:42.253875 31812 net.cpp:200] ip2 needs backward computation.
I0426 20:50:42.253880 31812 net.cpp:200] relu1 needs backward computation.
I0426 20:50:42.253882 31812 net.cpp:200] ip1 needs backward computation.
I0426 20:50:42.253885 31812 net.cpp:200] pool1 needs backward computation.
I0426 20:50:42.253890 31812 net.cpp:200] conv1 needs backward computation.
I0426 20:50:42.253893 31812 net.cpp:200] pool0 needs backward computation.
I0426 20:50:42.253896 31812 net.cpp:200] conv0 needs backward computation.
I0426 20:50:42.253901 31812 net.cpp:202] mnist does not need backward computation.
I0426 20:50:42.253904 31812 net.cpp:244] This network produces output loss
I0426 20:50:42.253916 31812 net.cpp:257] Network initialization done.
I0426 20:50:42.254297 31812 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test67.prototxt
I0426 20:50:42.254329 31812 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:42.254436 31812 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:42.254529 31812 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:42.254581 31812 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:42.254595 31812 net.cpp:86] Creating Layer mnist
I0426 20:50:42.254601 31812 net.cpp:382] mnist -> data
I0426 20:50:42.254611 31812 net.cpp:382] mnist -> label
I0426 20:50:42.254711 31812 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:42.257220 31812 net.cpp:124] Setting up mnist
I0426 20:50:42.257236 31812 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:42.257242 31812 net.cpp:131] Top shape: 100 (100)
I0426 20:50:42.257246 31812 net.cpp:139] Memory required for data: 314000
I0426 20:50:42.257251 31812 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:42.257262 31812 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:42.257267 31812 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:42.257273 31812 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:42.257282 31812 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:42.257328 31812 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:42.257335 31812 net.cpp:131] Top shape: 100 (100)
I0426 20:50:42.257339 31812 net.cpp:131] Top shape: 100 (100)
I0426 20:50:42.257342 31812 net.cpp:139] Memory required for data: 314800
I0426 20:50:42.257346 31812 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:42.257356 31812 net.cpp:86] Creating Layer conv0
I0426 20:50:42.257359 31812 net.cpp:408] conv0 <- data
I0426 20:50:42.257365 31812 net.cpp:382] conv0 -> conv0
I0426 20:50:42.259374 31812 net.cpp:124] Setting up conv0
I0426 20:50:42.259392 31812 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:42.259395 31812 net.cpp:139] Memory required for data: 2618800
I0426 20:50:42.259407 31812 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:42.259414 31812 net.cpp:86] Creating Layer pool0
I0426 20:50:42.259420 31812 net.cpp:408] pool0 <- conv0
I0426 20:50:42.259425 31812 net.cpp:382] pool0 -> pool0
I0426 20:50:42.259469 31812 net.cpp:124] Setting up pool0
I0426 20:50:42.259475 31812 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:42.259479 31812 net.cpp:139] Memory required for data: 3194800
I0426 20:50:42.259482 31812 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:42.259491 31812 net.cpp:86] Creating Layer conv1
I0426 20:50:42.259495 31812 net.cpp:408] conv1 <- pool0
I0426 20:50:42.259501 31812 net.cpp:382] conv1 -> conv1
I0426 20:50:42.262128 31812 net.cpp:124] Setting up conv1
I0426 20:50:42.262143 31812 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:42.262148 31812 net.cpp:139] Memory required for data: 3450800
I0426 20:50:42.262158 31812 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:42.262166 31812 net.cpp:86] Creating Layer pool1
I0426 20:50:42.262171 31812 net.cpp:408] pool1 <- conv1
I0426 20:50:42.262177 31812 net.cpp:382] pool1 -> pool1
I0426 20:50:42.262228 31812 net.cpp:124] Setting up pool1
I0426 20:50:42.262234 31812 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:42.262239 31812 net.cpp:139] Memory required for data: 3514800
I0426 20:50:42.262243 31812 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:42.262253 31812 net.cpp:86] Creating Layer ip1
I0426 20:50:42.262257 31812 net.cpp:408] ip1 <- pool1
I0426 20:50:42.262262 31812 net.cpp:382] ip1 -> ip1
I0426 20:50:42.262755 31812 net.cpp:124] Setting up ip1
I0426 20:50:42.262766 31812 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:42.262781 31812 net.cpp:139] Memory required for data: 3634800
I0426 20:50:42.262791 31812 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:42.262797 31812 net.cpp:86] Creating Layer relu1
I0426 20:50:42.262801 31812 net.cpp:408] relu1 <- ip1
I0426 20:50:42.262806 31812 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:42.263018 31812 net.cpp:124] Setting up relu1
I0426 20:50:42.263029 31812 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:42.263034 31812 net.cpp:139] Memory required for data: 3754800
I0426 20:50:42.263037 31812 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:42.263048 31812 net.cpp:86] Creating Layer ip2
I0426 20:50:42.263061 31812 net.cpp:408] ip2 <- ip1
I0426 20:50:42.263073 31812 net.cpp:382] ip2 -> ip2
I0426 20:50:42.263402 31812 net.cpp:124] Setting up ip2
I0426 20:50:42.263411 31812 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:42.263414 31812 net.cpp:139] Memory required for data: 3794800
I0426 20:50:42.263422 31812 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:42.263428 31812 net.cpp:86] Creating Layer relu2
I0426 20:50:42.263432 31812 net.cpp:408] relu2 <- ip2
I0426 20:50:42.263439 31812 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:42.263634 31812 net.cpp:124] Setting up relu2
I0426 20:50:42.263645 31812 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:42.263649 31812 net.cpp:139] Memory required for data: 3834800
I0426 20:50:42.263653 31812 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:42.263660 31812 net.cpp:86] Creating Layer ip3
I0426 20:50:42.263664 31812 net.cpp:408] ip3 <- ip2
I0426 20:50:42.263669 31812 net.cpp:382] ip3 -> ip3
I0426 20:50:42.263799 31812 net.cpp:124] Setting up ip3
I0426 20:50:42.263808 31812 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:42.263813 31812 net.cpp:139] Memory required for data: 3838800
I0426 20:50:42.263823 31812 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:42.263829 31812 net.cpp:86] Creating Layer relu3
I0426 20:50:42.263833 31812 net.cpp:408] relu3 <- ip3
I0426 20:50:42.263837 31812 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:42.264870 31812 net.cpp:124] Setting up relu3
I0426 20:50:42.264886 31812 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:42.264890 31812 net.cpp:139] Memory required for data: 3842800
I0426 20:50:42.264894 31812 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:42.264900 31812 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:42.264904 31812 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:42.264910 31812 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:42.264919 31812 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:42.264966 31812 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:42.264972 31812 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:42.264977 31812 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:42.264981 31812 net.cpp:139] Memory required for data: 3850800
I0426 20:50:42.264983 31812 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:42.264989 31812 net.cpp:86] Creating Layer accuracy
I0426 20:50:42.264993 31812 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:42.264998 31812 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:42.265004 31812 net.cpp:382] accuracy -> accuracy
I0426 20:50:42.265019 31812 net.cpp:124] Setting up accuracy
I0426 20:50:42.265024 31812 net.cpp:131] Top shape: (1)
I0426 20:50:42.265027 31812 net.cpp:139] Memory required for data: 3850804
I0426 20:50:42.265031 31812 layer_factory.hpp:77] Creating layer loss
I0426 20:50:42.265036 31812 net.cpp:86] Creating Layer loss
I0426 20:50:42.265041 31812 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:42.265046 31812 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:42.265051 31812 net.cpp:382] loss -> loss
I0426 20:50:42.265059 31812 layer_factory.hpp:77] Creating layer loss
I0426 20:50:42.265357 31812 net.cpp:124] Setting up loss
I0426 20:50:42.265372 31812 net.cpp:131] Top shape: (1)
I0426 20:50:42.265375 31812 net.cpp:134]     with loss weight 1
I0426 20:50:42.265394 31812 net.cpp:139] Memory required for data: 3850808
I0426 20:50:42.265399 31812 net.cpp:200] loss needs backward computation.
I0426 20:50:42.265403 31812 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:42.265408 31812 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:42.265411 31812 net.cpp:200] relu3 needs backward computation.
I0426 20:50:42.265415 31812 net.cpp:200] ip3 needs backward computation.
I0426 20:50:42.265419 31812 net.cpp:200] relu2 needs backward computation.
I0426 20:50:42.265421 31812 net.cpp:200] ip2 needs backward computation.
I0426 20:50:42.265425 31812 net.cpp:200] relu1 needs backward computation.
I0426 20:50:42.265429 31812 net.cpp:200] ip1 needs backward computation.
I0426 20:50:42.265432 31812 net.cpp:200] pool1 needs backward computation.
I0426 20:50:42.265436 31812 net.cpp:200] conv1 needs backward computation.
I0426 20:50:42.265440 31812 net.cpp:200] pool0 needs backward computation.
I0426 20:50:42.265444 31812 net.cpp:200] conv0 needs backward computation.
I0426 20:50:42.265447 31812 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:42.265452 31812 net.cpp:202] mnist does not need backward computation.
I0426 20:50:42.265455 31812 net.cpp:244] This network produces output accuracy
I0426 20:50:42.265460 31812 net.cpp:244] This network produces output loss
I0426 20:50:42.265473 31812 net.cpp:257] Network initialization done.
I0426 20:50:42.265524 31812 solver.cpp:56] Solver scaffolding done.
I0426 20:50:42.265950 31812 caffe.cpp:248] Starting Optimization
I0426 20:50:42.265957 31812 solver.cpp:273] Solving LeNet
I0426 20:50:42.265960 31812 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:42.266962 31812 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:42.272259 31812 blocking_queue.cpp:49] Waiting for data
I0426 20:50:42.333531 31819 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:42.334115 31812 solver.cpp:398]     Test net output #0: accuracy = 0.1143
I0426 20:50:42.334141 31812 solver.cpp:398]     Test net output #1: loss = 2.30083 (* 1 = 2.30083 loss)
I0426 20:50:42.337785 31812 solver.cpp:219] Iteration 0 (-1.15187e-42 iter/s, 0.0717926s/100 iters), loss = 2.2971
I0426 20:50:42.337815 31812 solver.cpp:238]     Train net output #0: loss = 2.2971 (* 1 = 2.2971 loss)
I0426 20:50:42.337831 31812 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:42.430124 31812 solver.cpp:219] Iteration 100 (1083.48 iter/s, 0.0922953s/100 iters), loss = 0.872247
I0426 20:50:42.430151 31812 solver.cpp:238]     Train net output #0: loss = 0.872247 (* 1 = 0.872247 loss)
I0426 20:50:42.430158 31812 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:42.521118 31812 solver.cpp:219] Iteration 200 (1099.41 iter/s, 0.0909577s/100 iters), loss = 0.486045
I0426 20:50:42.521173 31812 solver.cpp:238]     Train net output #0: loss = 0.486045 (* 1 = 0.486045 loss)
I0426 20:50:42.521178 31812 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:42.612359 31812 solver.cpp:219] Iteration 300 (1096.76 iter/s, 0.091178s/100 iters), loss = 0.81947
I0426 20:50:42.612397 31812 solver.cpp:238]     Train net output #0: loss = 0.81947 (* 1 = 0.81947 loss)
I0426 20:50:42.612404 31812 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:42.703457 31812 solver.cpp:219] Iteration 400 (1098.11 iter/s, 0.0910653s/100 iters), loss = 0.344332
I0426 20:50:42.703495 31812 solver.cpp:238]     Train net output #0: loss = 0.344332 (* 1 = 0.344332 loss)
I0426 20:50:42.703502 31812 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:42.794507 31812 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:42.848448 31819 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:42.849041 31812 solver.cpp:398]     Test net output #0: accuracy = 0.8679
I0426 20:50:42.849074 31812 solver.cpp:398]     Test net output #1: loss = 0.352303 (* 1 = 0.352303 loss)
I0426 20:50:42.850004 31812 solver.cpp:219] Iteration 500 (682.543 iter/s, 0.146511s/100 iters), loss = 0.295339
I0426 20:50:42.850059 31812 solver.cpp:238]     Train net output #0: loss = 0.295339 (* 1 = 0.295339 loss)
I0426 20:50:42.850065 31812 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:42.946435 31812 solver.cpp:219] Iteration 600 (1037.51 iter/s, 0.0963849s/100 iters), loss = 0.234343
I0426 20:50:42.946476 31812 solver.cpp:238]     Train net output #0: loss = 0.234343 (* 1 = 0.234343 loss)
I0426 20:50:42.946483 31812 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:43.037884 31812 solver.cpp:219] Iteration 700 (1094.1 iter/s, 0.0913991s/100 iters), loss = 0.267904
I0426 20:50:43.037910 31812 solver.cpp:238]     Train net output #0: loss = 0.267904 (* 1 = 0.267904 loss)
I0426 20:50:43.037917 31812 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:43.129065 31812 solver.cpp:219] Iteration 800 (1097.16 iter/s, 0.0911442s/100 iters), loss = 0.531919
I0426 20:50:43.129103 31812 solver.cpp:238]     Train net output #0: loss = 0.531919 (* 1 = 0.531919 loss)
I0426 20:50:43.129111 31812 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:43.220350 31812 solver.cpp:219] Iteration 900 (1095.86 iter/s, 0.0912526s/100 iters), loss = 0.438321
I0426 20:50:43.220374 31812 solver.cpp:238]     Train net output #0: loss = 0.438321 (* 1 = 0.438321 loss)
I0426 20:50:43.220381 31812 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:43.250975 31818 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:43.310276 31812 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:43.312013 31812 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:43.313097 31812 solver.cpp:311] Iteration 1000, loss = 0.271524
I0426 20:50:43.313112 31812 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:43.386667 31819 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:43.387222 31812 solver.cpp:398]     Test net output #0: accuracy = 0.8778
I0426 20:50:43.387239 31812 solver.cpp:398]     Test net output #1: loss = 0.311989 (* 1 = 0.311989 loss)
I0426 20:50:43.387244 31812 solver.cpp:316] Optimization Done.
I0426 20:50:43.387257 31812 caffe.cpp:259] Optimization Done.
