I0426 20:53:22.199508 32428 caffe.cpp:218] Using GPUs 0
I0426 20:53:22.238579 32428 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:22.762200 32428 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test135.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:22.762336 32428 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test135.prototxt
I0426 20:53:22.762755 32428 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:22.762774 32428 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:22.762874 32428 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:22.762953 32428 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:22.763059 32428 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:22.763082 32428 net.cpp:86] Creating Layer mnist
I0426 20:53:22.763089 32428 net.cpp:382] mnist -> data
I0426 20:53:22.763115 32428 net.cpp:382] mnist -> label
I0426 20:53:22.764209 32428 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:22.766760 32428 net.cpp:124] Setting up mnist
I0426 20:53:22.766779 32428 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:22.766786 32428 net.cpp:131] Top shape: 64 (64)
I0426 20:53:22.766789 32428 net.cpp:139] Memory required for data: 200960
I0426 20:53:22.766796 32428 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:22.766813 32428 net.cpp:86] Creating Layer conv0
I0426 20:53:22.766834 32428 net.cpp:408] conv0 <- data
I0426 20:53:22.766847 32428 net.cpp:382] conv0 -> conv0
I0426 20:53:23.047821 32428 net.cpp:124] Setting up conv0
I0426 20:53:23.047849 32428 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:53:23.047853 32428 net.cpp:139] Memory required for data: 3887360
I0426 20:53:23.047868 32428 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:23.047881 32428 net.cpp:86] Creating Layer pool0
I0426 20:53:23.047885 32428 net.cpp:408] pool0 <- conv0
I0426 20:53:23.047889 32428 net.cpp:382] pool0 -> pool0
I0426 20:53:23.047953 32428 net.cpp:124] Setting up pool0
I0426 20:53:23.047965 32428 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:53:23.047967 32428 net.cpp:139] Memory required for data: 4808960
I0426 20:53:23.047971 32428 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:23.047981 32428 net.cpp:86] Creating Layer conv1
I0426 20:53:23.047984 32428 net.cpp:408] conv1 <- pool0
I0426 20:53:23.047988 32428 net.cpp:382] conv1 -> conv1
I0426 20:53:23.050027 32428 net.cpp:124] Setting up conv1
I0426 20:53:23.050041 32428 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:53:23.050045 32428 net.cpp:139] Memory required for data: 5628160
I0426 20:53:23.050053 32428 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:23.050060 32428 net.cpp:86] Creating Layer pool1
I0426 20:53:23.050065 32428 net.cpp:408] pool1 <- conv1
I0426 20:53:23.050070 32428 net.cpp:382] pool1 -> pool1
I0426 20:53:23.050104 32428 net.cpp:124] Setting up pool1
I0426 20:53:23.050114 32428 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:53:23.050117 32428 net.cpp:139] Memory required for data: 5832960
I0426 20:53:23.050119 32428 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:23.050127 32428 net.cpp:86] Creating Layer ip1
I0426 20:53:23.050129 32428 net.cpp:408] ip1 <- pool1
I0426 20:53:23.050133 32428 net.cpp:382] ip1 -> ip1
I0426 20:53:23.051460 32428 net.cpp:124] Setting up ip1
I0426 20:53:23.051471 32428 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:23.051475 32428 net.cpp:139] Memory required for data: 5858560
I0426 20:53:23.051481 32428 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:23.051487 32428 net.cpp:86] Creating Layer relu1
I0426 20:53:23.051491 32428 net.cpp:408] relu1 <- ip1
I0426 20:53:23.051496 32428 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:23.051671 32428 net.cpp:124] Setting up relu1
I0426 20:53:23.051678 32428 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:23.051682 32428 net.cpp:139] Memory required for data: 5884160
I0426 20:53:23.051684 32428 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:23.051692 32428 net.cpp:86] Creating Layer ip2
I0426 20:53:23.051694 32428 net.cpp:408] ip2 <- ip1
I0426 20:53:23.051699 32428 net.cpp:382] ip2 -> ip2
I0426 20:53:23.052033 32428 net.cpp:124] Setting up ip2
I0426 20:53:23.052040 32428 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:23.052043 32428 net.cpp:139] Memory required for data: 5960960
I0426 20:53:23.052064 32428 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:23.052070 32428 net.cpp:86] Creating Layer relu2
I0426 20:53:23.052073 32428 net.cpp:408] relu2 <- ip2
I0426 20:53:23.052078 32428 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:23.052893 32428 net.cpp:124] Setting up relu2
I0426 20:53:23.052906 32428 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:23.052924 32428 net.cpp:139] Memory required for data: 6037760
I0426 20:53:23.052928 32428 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:23.052952 32428 net.cpp:86] Creating Layer ip3
I0426 20:53:23.052954 32428 net.cpp:408] ip3 <- ip2
I0426 20:53:23.052960 32428 net.cpp:382] ip3 -> ip3
I0426 20:53:23.053948 32428 net.cpp:124] Setting up ip3
I0426 20:53:23.053959 32428 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:23.053962 32428 net.cpp:139] Memory required for data: 6040320
I0426 20:53:23.053970 32428 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:23.053975 32428 net.cpp:86] Creating Layer relu3
I0426 20:53:23.053978 32428 net.cpp:408] relu3 <- ip3
I0426 20:53:23.053982 32428 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:23.054183 32428 net.cpp:124] Setting up relu3
I0426 20:53:23.054191 32428 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:23.054194 32428 net.cpp:139] Memory required for data: 6042880
I0426 20:53:23.054198 32428 layer_factory.hpp:77] Creating layer loss
I0426 20:53:23.054208 32428 net.cpp:86] Creating Layer loss
I0426 20:53:23.054211 32428 net.cpp:408] loss <- ip3
I0426 20:53:23.054215 32428 net.cpp:408] loss <- label
I0426 20:53:23.054220 32428 net.cpp:382] loss -> loss
I0426 20:53:23.054234 32428 layer_factory.hpp:77] Creating layer loss
I0426 20:53:23.054481 32428 net.cpp:124] Setting up loss
I0426 20:53:23.054491 32428 net.cpp:131] Top shape: (1)
I0426 20:53:23.054494 32428 net.cpp:134]     with loss weight 1
I0426 20:53:23.054509 32428 net.cpp:139] Memory required for data: 6042884
I0426 20:53:23.054513 32428 net.cpp:200] loss needs backward computation.
I0426 20:53:23.054517 32428 net.cpp:200] relu3 needs backward computation.
I0426 20:53:23.054519 32428 net.cpp:200] ip3 needs backward computation.
I0426 20:53:23.054522 32428 net.cpp:200] relu2 needs backward computation.
I0426 20:53:23.054525 32428 net.cpp:200] ip2 needs backward computation.
I0426 20:53:23.054528 32428 net.cpp:200] relu1 needs backward computation.
I0426 20:53:23.054530 32428 net.cpp:200] ip1 needs backward computation.
I0426 20:53:23.054533 32428 net.cpp:200] pool1 needs backward computation.
I0426 20:53:23.054536 32428 net.cpp:200] conv1 needs backward computation.
I0426 20:53:23.054539 32428 net.cpp:200] pool0 needs backward computation.
I0426 20:53:23.054543 32428 net.cpp:200] conv0 needs backward computation.
I0426 20:53:23.054546 32428 net.cpp:202] mnist does not need backward computation.
I0426 20:53:23.054548 32428 net.cpp:244] This network produces output loss
I0426 20:53:23.054558 32428 net.cpp:257] Network initialization done.
I0426 20:53:23.054880 32428 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test135.prototxt
I0426 20:53:23.054935 32428 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:23.055037 32428 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:23.055130 32428 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:23.055174 32428 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:23.055186 32428 net.cpp:86] Creating Layer mnist
I0426 20:53:23.055191 32428 net.cpp:382] mnist -> data
I0426 20:53:23.055198 32428 net.cpp:382] mnist -> label
I0426 20:53:23.055279 32428 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:23.056412 32428 net.cpp:124] Setting up mnist
I0426 20:53:23.056440 32428 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:23.056447 32428 net.cpp:131] Top shape: 100 (100)
I0426 20:53:23.056449 32428 net.cpp:139] Memory required for data: 314000
I0426 20:53:23.056452 32428 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:23.056458 32428 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:23.056463 32428 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:23.056468 32428 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:23.056488 32428 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:23.056586 32428 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:23.056592 32428 net.cpp:131] Top shape: 100 (100)
I0426 20:53:23.056596 32428 net.cpp:131] Top shape: 100 (100)
I0426 20:53:23.056599 32428 net.cpp:139] Memory required for data: 314800
I0426 20:53:23.056602 32428 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:23.056609 32428 net.cpp:86] Creating Layer conv0
I0426 20:53:23.056612 32428 net.cpp:408] conv0 <- data
I0426 20:53:23.056617 32428 net.cpp:382] conv0 -> conv0
I0426 20:53:23.058181 32428 net.cpp:124] Setting up conv0
I0426 20:53:23.058193 32428 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:53:23.058197 32428 net.cpp:139] Memory required for data: 6074800
I0426 20:53:23.058205 32428 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:23.058212 32428 net.cpp:86] Creating Layer pool0
I0426 20:53:23.058214 32428 net.cpp:408] pool0 <- conv0
I0426 20:53:23.058218 32428 net.cpp:382] pool0 -> pool0
I0426 20:53:23.058253 32428 net.cpp:124] Setting up pool0
I0426 20:53:23.058259 32428 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:53:23.058261 32428 net.cpp:139] Memory required for data: 7514800
I0426 20:53:23.058264 32428 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:23.058271 32428 net.cpp:86] Creating Layer conv1
I0426 20:53:23.058274 32428 net.cpp:408] conv1 <- pool0
I0426 20:53:23.058279 32428 net.cpp:382] conv1 -> conv1
I0426 20:53:23.059934 32428 net.cpp:124] Setting up conv1
I0426 20:53:23.059948 32428 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:53:23.059952 32428 net.cpp:139] Memory required for data: 8794800
I0426 20:53:23.059960 32428 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:23.059967 32428 net.cpp:86] Creating Layer pool1
I0426 20:53:23.059969 32428 net.cpp:408] pool1 <- conv1
I0426 20:53:23.059974 32428 net.cpp:382] pool1 -> pool1
I0426 20:53:23.060008 32428 net.cpp:124] Setting up pool1
I0426 20:53:23.060014 32428 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:53:23.060022 32428 net.cpp:139] Memory required for data: 9114800
I0426 20:53:23.060025 32428 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:23.060030 32428 net.cpp:86] Creating Layer ip1
I0426 20:53:23.060034 32428 net.cpp:408] ip1 <- pool1
I0426 20:53:23.060039 32428 net.cpp:382] ip1 -> ip1
I0426 20:53:23.060622 32428 net.cpp:124] Setting up ip1
I0426 20:53:23.060631 32428 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:23.060643 32428 net.cpp:139] Memory required for data: 9154800
I0426 20:53:23.060650 32428 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:23.060655 32428 net.cpp:86] Creating Layer relu1
I0426 20:53:23.060659 32428 net.cpp:408] relu1 <- ip1
I0426 20:53:23.060663 32428 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:23.060889 32428 net.cpp:124] Setting up relu1
I0426 20:53:23.060899 32428 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:23.060901 32428 net.cpp:139] Memory required for data: 9194800
I0426 20:53:23.060933 32428 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:23.060940 32428 net.cpp:86] Creating Layer ip2
I0426 20:53:23.060945 32428 net.cpp:408] ip2 <- ip1
I0426 20:53:23.060950 32428 net.cpp:382] ip2 -> ip2
I0426 20:53:23.061290 32428 net.cpp:124] Setting up ip2
I0426 20:53:23.061297 32428 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:23.061301 32428 net.cpp:139] Memory required for data: 9314800
I0426 20:53:23.061306 32428 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:23.061311 32428 net.cpp:86] Creating Layer relu2
I0426 20:53:23.061316 32428 net.cpp:408] relu2 <- ip2
I0426 20:53:23.061318 32428 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:23.061465 32428 net.cpp:124] Setting up relu2
I0426 20:53:23.061472 32428 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:23.061475 32428 net.cpp:139] Memory required for data: 9434800
I0426 20:53:23.061478 32428 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:23.061483 32428 net.cpp:86] Creating Layer ip3
I0426 20:53:23.061486 32428 net.cpp:408] ip3 <- ip2
I0426 20:53:23.061491 32428 net.cpp:382] ip3 -> ip3
I0426 20:53:23.061640 32428 net.cpp:124] Setting up ip3
I0426 20:53:23.061648 32428 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:23.061651 32428 net.cpp:139] Memory required for data: 9438800
I0426 20:53:23.061660 32428 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:23.061664 32428 net.cpp:86] Creating Layer relu3
I0426 20:53:23.061667 32428 net.cpp:408] relu3 <- ip3
I0426 20:53:23.061671 32428 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:23.062532 32428 net.cpp:124] Setting up relu3
I0426 20:53:23.062544 32428 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:23.062548 32428 net.cpp:139] Memory required for data: 9442800
I0426 20:53:23.062551 32428 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:53:23.062556 32428 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:53:23.062559 32428 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:53:23.062564 32428 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:53:23.062571 32428 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:53:23.062605 32428 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:53:23.062611 32428 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:23.062615 32428 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:23.062618 32428 net.cpp:139] Memory required for data: 9450800
I0426 20:53:23.062620 32428 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:23.062625 32428 net.cpp:86] Creating Layer accuracy
I0426 20:53:23.062628 32428 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:53:23.062631 32428 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:23.062635 32428 net.cpp:382] accuracy -> accuracy
I0426 20:53:23.062641 32428 net.cpp:124] Setting up accuracy
I0426 20:53:23.062645 32428 net.cpp:131] Top shape: (1)
I0426 20:53:23.062649 32428 net.cpp:139] Memory required for data: 9450804
I0426 20:53:23.062650 32428 layer_factory.hpp:77] Creating layer loss
I0426 20:53:23.062654 32428 net.cpp:86] Creating Layer loss
I0426 20:53:23.062657 32428 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:53:23.062660 32428 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:23.062664 32428 net.cpp:382] loss -> loss
I0426 20:53:23.062670 32428 layer_factory.hpp:77] Creating layer loss
I0426 20:53:23.062903 32428 net.cpp:124] Setting up loss
I0426 20:53:23.062912 32428 net.cpp:131] Top shape: (1)
I0426 20:53:23.062916 32428 net.cpp:134]     with loss weight 1
I0426 20:53:23.062933 32428 net.cpp:139] Memory required for data: 9450808
I0426 20:53:23.062937 32428 net.cpp:200] loss needs backward computation.
I0426 20:53:23.062942 32428 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:23.062944 32428 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:53:23.062947 32428 net.cpp:200] relu3 needs backward computation.
I0426 20:53:23.062950 32428 net.cpp:200] ip3 needs backward computation.
I0426 20:53:23.062953 32428 net.cpp:200] relu2 needs backward computation.
I0426 20:53:23.062957 32428 net.cpp:200] ip2 needs backward computation.
I0426 20:53:23.062959 32428 net.cpp:200] relu1 needs backward computation.
I0426 20:53:23.062963 32428 net.cpp:200] ip1 needs backward computation.
I0426 20:53:23.062965 32428 net.cpp:200] pool1 needs backward computation.
I0426 20:53:23.062968 32428 net.cpp:200] conv1 needs backward computation.
I0426 20:53:23.062971 32428 net.cpp:200] pool0 needs backward computation.
I0426 20:53:23.062974 32428 net.cpp:200] conv0 needs backward computation.
I0426 20:53:23.062978 32428 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:23.062983 32428 net.cpp:202] mnist does not need backward computation.
I0426 20:53:23.062984 32428 net.cpp:244] This network produces output accuracy
I0426 20:53:23.062988 32428 net.cpp:244] This network produces output loss
I0426 20:53:23.062999 32428 net.cpp:257] Network initialization done.
I0426 20:53:23.063052 32428 solver.cpp:56] Solver scaffolding done.
I0426 20:53:23.063365 32428 caffe.cpp:248] Starting Optimization
I0426 20:53:23.063371 32428 solver.cpp:273] Solving LeNet
I0426 20:53:23.063374 32428 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:23.064218 32428 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:23.127127 32435 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:23.128643 32428 solver.cpp:398]     Test net output #0: accuracy = 0.1121
I0426 20:53:23.128662 32428 solver.cpp:398]     Test net output #1: loss = 2.33777 (* 1 = 2.33777 loss)
I0426 20:53:23.133635 32428 solver.cpp:219] Iteration 0 (-1.15747e-42 iter/s, 0.0702362s/100 iters), loss = 2.30567
I0426 20:53:23.133656 32428 solver.cpp:238]     Train net output #0: loss = 2.30567 (* 1 = 2.30567 loss)
I0426 20:53:23.133682 32428 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:23.267587 32428 solver.cpp:219] Iteration 100 (746.75 iter/s, 0.133914s/100 iters), loss = 0.762928
I0426 20:53:23.267628 32428 solver.cpp:238]     Train net output #0: loss = 0.762928 (* 1 = 0.762928 loss)
I0426 20:53:23.267643 32428 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:23.413774 32428 solver.cpp:219] Iteration 200 (684.318 iter/s, 0.146131s/100 iters), loss = 0.226953
I0426 20:53:23.413822 32428 solver.cpp:238]     Train net output #0: loss = 0.226953 (* 1 = 0.226953 loss)
I0426 20:53:23.413841 32428 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:23.558032 32428 solver.cpp:219] Iteration 300 (693.488 iter/s, 0.144199s/100 iters), loss = 0.253687
I0426 20:53:23.558074 32428 solver.cpp:238]     Train net output #0: loss = 0.253687 (* 1 = 0.253687 loss)
I0426 20:53:23.558086 32428 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:23.701758 32428 solver.cpp:219] Iteration 400 (696.028 iter/s, 0.143672s/100 iters), loss = 0.124516
I0426 20:53:23.701798 32428 solver.cpp:238]     Train net output #0: loss = 0.124516 (* 1 = 0.124516 loss)
I0426 20:53:23.701819 32428 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:23.847983 32428 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:23.913300 32435 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:23.915606 32428 solver.cpp:398]     Test net output #0: accuracy = 0.9684
I0426 20:53:23.915630 32428 solver.cpp:398]     Test net output #1: loss = 0.0996115 (* 1 = 0.0996115 loss)
I0426 20:53:23.916888 32428 solver.cpp:219] Iteration 500 (464.954 iter/s, 0.215075s/100 iters), loss = 0.0816476
I0426 20:53:23.916916 32428 solver.cpp:238]     Train net output #0: loss = 0.0816476 (* 1 = 0.0816476 loss)
I0426 20:53:23.916954 32428 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:24.067337 32428 solver.cpp:219] Iteration 600 (664.867 iter/s, 0.150406s/100 iters), loss = 0.090143
I0426 20:53:24.067380 32428 solver.cpp:238]     Train net output #0: loss = 0.090143 (* 1 = 0.090143 loss)
I0426 20:53:24.067401 32428 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:24.214813 32428 solver.cpp:219] Iteration 700 (678.339 iter/s, 0.147419s/100 iters), loss = 0.133592
I0426 20:53:24.214856 32428 solver.cpp:238]     Train net output #0: loss = 0.133592 (* 1 = 0.133592 loss)
I0426 20:53:24.214866 32428 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:24.361467 32428 solver.cpp:219] Iteration 800 (682.138 iter/s, 0.146598s/100 iters), loss = 0.169834
I0426 20:53:24.361505 32428 solver.cpp:238]     Train net output #0: loss = 0.169834 (* 1 = 0.169834 loss)
I0426 20:53:24.361515 32428 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:24.505645 32428 solver.cpp:219] Iteration 900 (693.847 iter/s, 0.144124s/100 iters), loss = 0.125429
I0426 20:53:24.505694 32428 solver.cpp:238]     Train net output #0: loss = 0.125429 (* 1 = 0.125429 loss)
I0426 20:53:24.505707 32428 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:24.556488 32434 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:24.654825 32428 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:24.658598 32428 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:24.660859 32428 solver.cpp:311] Iteration 1000, loss = 0.0778163
I0426 20:53:24.660882 32428 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:24.728654 32435 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:24.731042 32428 solver.cpp:398]     Test net output #0: accuracy = 0.9818
I0426 20:53:24.731065 32428 solver.cpp:398]     Test net output #1: loss = 0.0573724 (* 1 = 0.0573724 loss)
I0426 20:53:24.731072 32428 solver.cpp:316] Optimization Done.
I0426 20:53:24.731084 32428 caffe.cpp:259] Optimization Done.
