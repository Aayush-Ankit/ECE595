I0426 20:48:33.942862 31285 caffe.cpp:218] Using GPUs 0
I0426 20:48:33.981737 31285 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:34.446238 31285 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test10.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:34.446372 31285 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test10.prototxt
I0426 20:48:34.446614 31285 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:34.446626 31285 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:34.446682 31285 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:34.446737 31285 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:34.446817 31285 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:34.446835 31285 net.cpp:86] Creating Layer mnist
I0426 20:48:34.446844 31285 net.cpp:382] mnist -> data
I0426 20:48:34.446862 31285 net.cpp:382] mnist -> label
I0426 20:48:34.447821 31285 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:34.449995 31285 net.cpp:124] Setting up mnist
I0426 20:48:34.450023 31285 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:34.450028 31285 net.cpp:131] Top shape: 64 (64)
I0426 20:48:34.450031 31285 net.cpp:139] Memory required for data: 200960
I0426 20:48:34.450037 31285 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:34.450083 31285 net.cpp:86] Creating Layer ip1
I0426 20:48:34.450088 31285 net.cpp:408] ip1 <- data
I0426 20:48:34.450098 31285 net.cpp:382] ip1 -> ip1
I0426 20:48:34.453482 31285 net.cpp:124] Setting up ip1
I0426 20:48:34.453495 31285 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:34.453506 31285 net.cpp:139] Memory required for data: 277760
I0426 20:48:34.453517 31285 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:34.453524 31285 net.cpp:86] Creating Layer relu1
I0426 20:48:34.453528 31285 net.cpp:408] relu1 <- ip1
I0426 20:48:34.453534 31285 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:34.678298 31285 net.cpp:124] Setting up relu1
I0426 20:48:34.678325 31285 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:34.678328 31285 net.cpp:139] Memory required for data: 354560
I0426 20:48:34.678333 31285 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:34.678344 31285 net.cpp:86] Creating Layer ip2
I0426 20:48:34.678365 31285 net.cpp:408] ip2 <- ip1
I0426 20:48:34.678373 31285 net.cpp:382] ip2 -> ip2
I0426 20:48:34.678673 31285 net.cpp:124] Setting up ip2
I0426 20:48:34.678683 31285 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:34.678685 31285 net.cpp:139] Memory required for data: 380160
I0426 20:48:34.678694 31285 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:34.678701 31285 net.cpp:86] Creating Layer relu2
I0426 20:48:34.678704 31285 net.cpp:408] relu2 <- ip2
I0426 20:48:34.678709 31285 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:34.679545 31285 net.cpp:124] Setting up relu2
I0426 20:48:34.679558 31285 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:34.679575 31285 net.cpp:139] Memory required for data: 405760
I0426 20:48:34.679579 31285 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:34.679585 31285 net.cpp:86] Creating Layer ip3
I0426 20:48:34.679589 31285 net.cpp:408] ip3 <- ip2
I0426 20:48:34.679594 31285 net.cpp:382] ip3 -> ip3
I0426 20:48:34.679697 31285 net.cpp:124] Setting up ip3
I0426 20:48:34.679704 31285 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:34.679708 31285 net.cpp:139] Memory required for data: 408320
I0426 20:48:34.679714 31285 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:34.679720 31285 net.cpp:86] Creating Layer relu3
I0426 20:48:34.679723 31285 net.cpp:408] relu3 <- ip3
I0426 20:48:34.679728 31285 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:34.679875 31285 net.cpp:124] Setting up relu3
I0426 20:48:34.679883 31285 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:34.679886 31285 net.cpp:139] Memory required for data: 410880
I0426 20:48:34.679888 31285 layer_factory.hpp:77] Creating layer loss
I0426 20:48:34.679895 31285 net.cpp:86] Creating Layer loss
I0426 20:48:34.679898 31285 net.cpp:408] loss <- ip3
I0426 20:48:34.679903 31285 net.cpp:408] loss <- label
I0426 20:48:34.679908 31285 net.cpp:382] loss -> loss
I0426 20:48:34.679924 31285 layer_factory.hpp:77] Creating layer loss
I0426 20:48:34.680179 31285 net.cpp:124] Setting up loss
I0426 20:48:34.680188 31285 net.cpp:131] Top shape: (1)
I0426 20:48:34.680191 31285 net.cpp:134]     with loss weight 1
I0426 20:48:34.680204 31285 net.cpp:139] Memory required for data: 410884
I0426 20:48:34.680208 31285 net.cpp:200] loss needs backward computation.
I0426 20:48:34.680212 31285 net.cpp:200] relu3 needs backward computation.
I0426 20:48:34.680214 31285 net.cpp:200] ip3 needs backward computation.
I0426 20:48:34.680217 31285 net.cpp:200] relu2 needs backward computation.
I0426 20:48:34.680219 31285 net.cpp:200] ip2 needs backward computation.
I0426 20:48:34.680222 31285 net.cpp:200] relu1 needs backward computation.
I0426 20:48:34.680224 31285 net.cpp:200] ip1 needs backward computation.
I0426 20:48:34.680227 31285 net.cpp:202] mnist does not need backward computation.
I0426 20:48:34.680230 31285 net.cpp:244] This network produces output loss
I0426 20:48:34.680238 31285 net.cpp:257] Network initialization done.
I0426 20:48:34.680461 31285 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test10.prototxt
I0426 20:48:34.680483 31285 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:34.680558 31285 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:34.680637 31285 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:34.680680 31285 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:34.680691 31285 net.cpp:86] Creating Layer mnist
I0426 20:48:34.680696 31285 net.cpp:382] mnist -> data
I0426 20:48:34.680704 31285 net.cpp:382] mnist -> label
I0426 20:48:34.680785 31285 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:34.683002 31285 net.cpp:124] Setting up mnist
I0426 20:48:34.683030 31285 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:34.683035 31285 net.cpp:131] Top shape: 100 (100)
I0426 20:48:34.683038 31285 net.cpp:139] Memory required for data: 314000
I0426 20:48:34.683042 31285 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:34.683121 31285 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:34.683125 31285 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:34.683130 31285 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:34.683137 31285 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:34.683178 31285 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:34.683183 31285 net.cpp:131] Top shape: 100 (100)
I0426 20:48:34.683187 31285 net.cpp:131] Top shape: 100 (100)
I0426 20:48:34.683189 31285 net.cpp:139] Memory required for data: 314800
I0426 20:48:34.683192 31285 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:34.683199 31285 net.cpp:86] Creating Layer ip1
I0426 20:48:34.683202 31285 net.cpp:408] ip1 <- data
I0426 20:48:34.683207 31285 net.cpp:382] ip1 -> ip1
I0426 20:48:34.684742 31285 net.cpp:124] Setting up ip1
I0426 20:48:34.684751 31285 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:34.684753 31285 net.cpp:139] Memory required for data: 434800
I0426 20:48:34.684777 31285 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:34.684798 31285 net.cpp:86] Creating Layer relu1
I0426 20:48:34.684800 31285 net.cpp:408] relu1 <- ip1
I0426 20:48:34.684872 31285 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:34.685977 31285 net.cpp:124] Setting up relu1
I0426 20:48:34.685989 31285 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:34.685992 31285 net.cpp:139] Memory required for data: 554800
I0426 20:48:34.685995 31285 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:34.686003 31285 net.cpp:86] Creating Layer ip2
I0426 20:48:34.686022 31285 net.cpp:408] ip2 <- ip1
I0426 20:48:34.686028 31285 net.cpp:382] ip2 -> ip2
I0426 20:48:34.686290 31285 net.cpp:124] Setting up ip2
I0426 20:48:34.686297 31285 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:34.686301 31285 net.cpp:139] Memory required for data: 594800
I0426 20:48:34.686308 31285 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:34.686316 31285 net.cpp:86] Creating Layer relu2
I0426 20:48:34.686318 31285 net.cpp:408] relu2 <- ip2
I0426 20:48:34.686322 31285 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:34.686486 31285 net.cpp:124] Setting up relu2
I0426 20:48:34.686493 31285 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:34.686496 31285 net.cpp:139] Memory required for data: 634800
I0426 20:48:34.686499 31285 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:34.686506 31285 net.cpp:86] Creating Layer ip3
I0426 20:48:34.686514 31285 net.cpp:408] ip3 <- ip2
I0426 20:48:34.686545 31285 net.cpp:382] ip3 -> ip3
I0426 20:48:34.686647 31285 net.cpp:124] Setting up ip3
I0426 20:48:34.686655 31285 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:34.686658 31285 net.cpp:139] Memory required for data: 638800
I0426 20:48:34.686666 31285 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:34.686671 31285 net.cpp:86] Creating Layer relu3
I0426 20:48:34.686674 31285 net.cpp:408] relu3 <- ip3
I0426 20:48:34.686679 31285 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:34.686835 31285 net.cpp:124] Setting up relu3
I0426 20:48:34.686842 31285 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:34.686846 31285 net.cpp:139] Memory required for data: 642800
I0426 20:48:34.686847 31285 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:48:34.686866 31285 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:48:34.686869 31285 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:48:34.686873 31285 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:48:34.686880 31285 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:48:34.686915 31285 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:48:34.686920 31285 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:34.686923 31285 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:34.686928 31285 net.cpp:139] Memory required for data: 650800
I0426 20:48:34.686934 31285 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:34.686941 31285 net.cpp:86] Creating Layer accuracy
I0426 20:48:34.686944 31285 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:48:34.686949 31285 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:34.686952 31285 net.cpp:382] accuracy -> accuracy
I0426 20:48:34.686962 31285 net.cpp:124] Setting up accuracy
I0426 20:48:34.686967 31285 net.cpp:131] Top shape: (1)
I0426 20:48:34.686975 31285 net.cpp:139] Memory required for data: 650804
I0426 20:48:34.686978 31285 layer_factory.hpp:77] Creating layer loss
I0426 20:48:34.686982 31285 net.cpp:86] Creating Layer loss
I0426 20:48:34.686985 31285 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:48:34.686990 31285 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:34.686993 31285 net.cpp:382] loss -> loss
I0426 20:48:34.687000 31285 layer_factory.hpp:77] Creating layer loss
I0426 20:48:34.687320 31285 net.cpp:124] Setting up loss
I0426 20:48:34.687328 31285 net.cpp:131] Top shape: (1)
I0426 20:48:34.687331 31285 net.cpp:134]     with loss weight 1
I0426 20:48:34.687337 31285 net.cpp:139] Memory required for data: 650808
I0426 20:48:34.687341 31285 net.cpp:200] loss needs backward computation.
I0426 20:48:34.687361 31285 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:34.687364 31285 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:48:34.687367 31285 net.cpp:200] relu3 needs backward computation.
I0426 20:48:34.687381 31285 net.cpp:200] ip3 needs backward computation.
I0426 20:48:34.687383 31285 net.cpp:200] relu2 needs backward computation.
I0426 20:48:34.687386 31285 net.cpp:200] ip2 needs backward computation.
I0426 20:48:34.687388 31285 net.cpp:200] relu1 needs backward computation.
I0426 20:48:34.687391 31285 net.cpp:200] ip1 needs backward computation.
I0426 20:48:34.687394 31285 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:34.687398 31285 net.cpp:202] mnist does not need backward computation.
I0426 20:48:34.687400 31285 net.cpp:244] This network produces output accuracy
I0426 20:48:34.687403 31285 net.cpp:244] This network produces output loss
I0426 20:48:34.687414 31285 net.cpp:257] Network initialization done.
I0426 20:48:34.687456 31285 solver.cpp:56] Solver scaffolding done.
I0426 20:48:34.687672 31285 caffe.cpp:248] Starting Optimization
I0426 20:48:34.687680 31285 solver.cpp:273] Solving LeNet
I0426 20:48:34.687682 31285 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:34.689286 31285 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:34.690853 31285 blocking_queue.cpp:49] Waiting for data
I0426 20:48:34.763612 31292 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:34.764119 31285 solver.cpp:398]     Test net output #0: accuracy = 0.072
I0426 20:48:34.764149 31285 solver.cpp:398]     Test net output #1: loss = 2.31513 (* 1 = 2.31513 loss)
I0426 20:48:34.764961 31285 solver.cpp:219] Iteration 0 (0 iter/s, 0.0772498s/100 iters), loss = 2.31113
I0426 20:48:34.764989 31285 solver.cpp:238]     Train net output #0: loss = 2.31113 (* 1 = 2.31113 loss)
I0426 20:48:34.765007 31285 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:34.825100 31285 solver.cpp:219] Iteration 100 (1663.94 iter/s, 0.0600985s/100 iters), loss = 0.558378
I0426 20:48:34.825135 31285 solver.cpp:238]     Train net output #0: loss = 0.558378 (* 1 = 0.558378 loss)
I0426 20:48:34.825145 31285 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:34.879143 31285 solver.cpp:219] Iteration 200 (1851.69 iter/s, 0.0540047s/100 iters), loss = 0.314359
I0426 20:48:34.879168 31285 solver.cpp:238]     Train net output #0: loss = 0.314359 (* 1 = 0.314359 loss)
I0426 20:48:34.879174 31285 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:34.929002 31285 solver.cpp:219] Iteration 300 (2006.99 iter/s, 0.0498258s/100 iters), loss = 0.308982
I0426 20:48:34.929021 31285 solver.cpp:238]     Train net output #0: loss = 0.308982 (* 1 = 0.308982 loss)
I0426 20:48:34.929028 31285 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:34.979441 31285 solver.cpp:219] Iteration 400 (1983.63 iter/s, 0.0504125s/100 iters), loss = 0.197371
I0426 20:48:34.979478 31285 solver.cpp:238]     Train net output #0: loss = 0.197371 (* 1 = 0.197371 loss)
I0426 20:48:34.979483 31285 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:35.029340 31285 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:35.100798 31292 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:35.101233 31285 solver.cpp:398]     Test net output #0: accuracy = 0.928
I0426 20:48:35.101253 31285 solver.cpp:398]     Test net output #1: loss = 0.253399 (* 1 = 0.253399 loss)
I0426 20:48:35.101806 31285 solver.cpp:219] Iteration 500 (817.447 iter/s, 0.122332s/100 iters), loss = 0.299932
I0426 20:48:35.101826 31285 solver.cpp:238]     Train net output #0: loss = 0.299932 (* 1 = 0.299932 loss)
I0426 20:48:35.101833 31285 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:35.165067 31285 solver.cpp:219] Iteration 600 (1581.58 iter/s, 0.063228s/100 iters), loss = 0.196002
I0426 20:48:35.165101 31285 solver.cpp:238]     Train net output #0: loss = 0.196002 (* 1 = 0.196002 loss)
I0426 20:48:35.165109 31285 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:35.223516 31285 solver.cpp:219] Iteration 700 (1712.1 iter/s, 0.0584079s/100 iters), loss = 0.397944
I0426 20:48:35.223543 31285 solver.cpp:238]     Train net output #0: loss = 0.397944 (* 1 = 0.397944 loss)
I0426 20:48:35.223551 31285 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:35.274751 31285 solver.cpp:219] Iteration 800 (1953.09 iter/s, 0.051201s/100 iters), loss = 0.322616
I0426 20:48:35.274773 31285 solver.cpp:238]     Train net output #0: loss = 0.322616 (* 1 = 0.322616 loss)
I0426 20:48:35.274780 31285 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:35.324991 31285 solver.cpp:219] Iteration 900 (1991.64 iter/s, 0.0502098s/100 iters), loss = 0.270766
I0426 20:48:35.325026 31285 solver.cpp:238]     Train net output #0: loss = 0.270766 (* 1 = 0.270766 loss)
I0426 20:48:35.325032 31285 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:35.342494 31291 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:35.375802 31285 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:35.379253 31285 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:35.381207 31285 solver.cpp:311] Iteration 1000, loss = 0.210761
I0426 20:48:35.381222 31285 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:35.460502 31292 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:35.460981 31285 solver.cpp:398]     Test net output #0: accuracy = 0.9466
I0426 20:48:35.460999 31285 solver.cpp:398]     Test net output #1: loss = 0.179421 (* 1 = 0.179421 loss)
I0426 20:48:35.461002 31285 solver.cpp:316] Optimization Done.
I0426 20:48:35.461005 31285 caffe.cpp:259] Optimization Done.
