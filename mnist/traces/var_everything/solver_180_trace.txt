I0426 20:55:27.526746   402 caffe.cpp:218] Using GPUs 0
I0426 20:55:27.563658   402 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:55:28.018908   402 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test180.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:55:28.019016   402 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test180.prototxt
I0426 20:55:28.019315   402 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:55:28.019328   402 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:55:28.019398   402 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:55:28.019454   402 layer_factory.hpp:77] Creating layer mnist
I0426 20:55:28.019541   402 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:55:28.019559   402 net.cpp:86] Creating Layer mnist
I0426 20:55:28.019567   402 net.cpp:382] mnist -> data
I0426 20:55:28.019584   402 net.cpp:382] mnist -> label
I0426 20:55:28.020473   402 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:55:28.022572   402 net.cpp:124] Setting up mnist
I0426 20:55:28.022585   402 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:55:28.022605   402 net.cpp:131] Top shape: 64 (64)
I0426 20:55:28.022608   402 net.cpp:139] Memory required for data: 200960
I0426 20:55:28.022614   402 layer_factory.hpp:77] Creating layer conv0
I0426 20:55:28.022627   402 net.cpp:86] Creating Layer conv0
I0426 20:55:28.022644   402 net.cpp:408] conv0 <- data
I0426 20:55:28.022653   402 net.cpp:382] conv0 -> conv0
I0426 20:55:28.259676   402 net.cpp:124] Setting up conv0
I0426 20:55:28.259704   402 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:55:28.259708   402 net.cpp:139] Memory required for data: 7573760
I0426 20:55:28.259723   402 layer_factory.hpp:77] Creating layer pool0
I0426 20:55:28.259737   402 net.cpp:86] Creating Layer pool0
I0426 20:55:28.259740   402 net.cpp:408] pool0 <- conv0
I0426 20:55:28.259747   402 net.cpp:382] pool0 -> pool0
I0426 20:55:28.259805   402 net.cpp:124] Setting up pool0
I0426 20:55:28.259811   402 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:55:28.259814   402 net.cpp:139] Memory required for data: 9416960
I0426 20:55:28.259816   402 layer_factory.hpp:77] Creating layer conv1
I0426 20:55:28.259827   402 net.cpp:86] Creating Layer conv1
I0426 20:55:28.259830   402 net.cpp:408] conv1 <- pool0
I0426 20:55:28.259835   402 net.cpp:382] conv1 -> conv1
I0426 20:55:28.262071   402 net.cpp:124] Setting up conv1
I0426 20:55:28.262086   402 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:55:28.262089   402 net.cpp:139] Memory required for data: 10236160
I0426 20:55:28.262097   402 layer_factory.hpp:77] Creating layer pool1
I0426 20:55:28.262104   402 net.cpp:86] Creating Layer pool1
I0426 20:55:28.262109   402 net.cpp:408] pool1 <- conv1
I0426 20:55:28.262112   402 net.cpp:382] pool1 -> pool1
I0426 20:55:28.262146   402 net.cpp:124] Setting up pool1
I0426 20:55:28.262151   402 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:55:28.262154   402 net.cpp:139] Memory required for data: 10440960
I0426 20:55:28.262156   402 layer_factory.hpp:77] Creating layer ip1
I0426 20:55:28.262163   402 net.cpp:86] Creating Layer ip1
I0426 20:55:28.262166   402 net.cpp:408] ip1 <- pool1
I0426 20:55:28.262171   402 net.cpp:382] ip1 -> ip1
I0426 20:55:28.264377   402 net.cpp:124] Setting up ip1
I0426 20:55:28.264390   402 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:55:28.264394   402 net.cpp:139] Memory required for data: 10517760
I0426 20:55:28.264401   402 layer_factory.hpp:77] Creating layer relu1
I0426 20:55:28.264407   402 net.cpp:86] Creating Layer relu1
I0426 20:55:28.264411   402 net.cpp:408] relu1 <- ip1
I0426 20:55:28.264415   402 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:55:28.264569   402 net.cpp:124] Setting up relu1
I0426 20:55:28.264577   402 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:55:28.264580   402 net.cpp:139] Memory required for data: 10594560
I0426 20:55:28.264583   402 layer_factory.hpp:77] Creating layer ip2
I0426 20:55:28.264590   402 net.cpp:86] Creating Layer ip2
I0426 20:55:28.264592   402 net.cpp:408] ip2 <- ip1
I0426 20:55:28.264597   402 net.cpp:382] ip2 -> ip2
I0426 20:55:28.265269   402 net.cpp:124] Setting up ip2
I0426 20:55:28.265276   402 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:55:28.265295   402 net.cpp:139] Memory required for data: 10671360
I0426 20:55:28.265301   402 layer_factory.hpp:77] Creating layer relu2
I0426 20:55:28.265306   402 net.cpp:86] Creating Layer relu2
I0426 20:55:28.265311   402 net.cpp:408] relu2 <- ip2
I0426 20:55:28.265316   402 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:55:28.266083   402 net.cpp:124] Setting up relu2
I0426 20:55:28.266096   402 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:55:28.266099   402 net.cpp:139] Memory required for data: 10748160
I0426 20:55:28.266103   402 layer_factory.hpp:77] Creating layer ip3
I0426 20:55:28.266109   402 net.cpp:86] Creating Layer ip3
I0426 20:55:28.266113   402 net.cpp:408] ip3 <- ip2
I0426 20:55:28.266118   402 net.cpp:382] ip3 -> ip3
I0426 20:55:28.266244   402 net.cpp:124] Setting up ip3
I0426 20:55:28.266252   402 net.cpp:131] Top shape: 64 10 (640)
I0426 20:55:28.266260   402 net.cpp:139] Memory required for data: 10750720
I0426 20:55:28.266268   402 layer_factory.hpp:77] Creating layer relu3
I0426 20:55:28.266273   402 net.cpp:86] Creating Layer relu3
I0426 20:55:28.266275   402 net.cpp:408] relu3 <- ip3
I0426 20:55:28.266294   402 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:55:28.266438   402 net.cpp:124] Setting up relu3
I0426 20:55:28.266463   402 net.cpp:131] Top shape: 64 10 (640)
I0426 20:55:28.266466   402 net.cpp:139] Memory required for data: 10753280
I0426 20:55:28.266469   402 layer_factory.hpp:77] Creating layer loss
I0426 20:55:28.266474   402 net.cpp:86] Creating Layer loss
I0426 20:55:28.266477   402 net.cpp:408] loss <- ip3
I0426 20:55:28.266481   402 net.cpp:408] loss <- label
I0426 20:55:28.266486   402 net.cpp:382] loss -> loss
I0426 20:55:28.266502   402 layer_factory.hpp:77] Creating layer loss
I0426 20:55:28.266726   402 net.cpp:124] Setting up loss
I0426 20:55:28.266736   402 net.cpp:131] Top shape: (1)
I0426 20:55:28.266738   402 net.cpp:134]     with loss weight 1
I0426 20:55:28.266752   402 net.cpp:139] Memory required for data: 10753284
I0426 20:55:28.266755   402 net.cpp:200] loss needs backward computation.
I0426 20:55:28.266759   402 net.cpp:200] relu3 needs backward computation.
I0426 20:55:28.266762   402 net.cpp:200] ip3 needs backward computation.
I0426 20:55:28.266765   402 net.cpp:200] relu2 needs backward computation.
I0426 20:55:28.266767   402 net.cpp:200] ip2 needs backward computation.
I0426 20:55:28.266769   402 net.cpp:200] relu1 needs backward computation.
I0426 20:55:28.266772   402 net.cpp:200] ip1 needs backward computation.
I0426 20:55:28.266775   402 net.cpp:200] pool1 needs backward computation.
I0426 20:55:28.266777   402 net.cpp:200] conv1 needs backward computation.
I0426 20:55:28.266780   402 net.cpp:200] pool0 needs backward computation.
I0426 20:55:28.266783   402 net.cpp:200] conv0 needs backward computation.
I0426 20:55:28.266786   402 net.cpp:202] mnist does not need backward computation.
I0426 20:55:28.266788   402 net.cpp:244] This network produces output loss
I0426 20:55:28.266798   402 net.cpp:257] Network initialization done.
I0426 20:55:28.267123   402 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test180.prototxt
I0426 20:55:28.267180   402 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:55:28.267289   402 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:55:28.267379   402 layer_factory.hpp:77] Creating layer mnist
I0426 20:55:28.267437   402 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:55:28.267448   402 net.cpp:86] Creating Layer mnist
I0426 20:55:28.267454   402 net.cpp:382] mnist -> data
I0426 20:55:28.267462   402 net.cpp:382] mnist -> label
I0426 20:55:28.267565   402 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:55:28.269507   402 net.cpp:124] Setting up mnist
I0426 20:55:28.269536   402 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:55:28.269541   402 net.cpp:131] Top shape: 100 (100)
I0426 20:55:28.269543   402 net.cpp:139] Memory required for data: 314000
I0426 20:55:28.269546   402 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:55:28.269556   402 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:55:28.269559   402 net.cpp:408] label_mnist_1_split <- label
I0426 20:55:28.269565   402 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:55:28.269574   402 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:55:28.269704   402 net.cpp:124] Setting up label_mnist_1_split
I0426 20:55:28.269713   402 net.cpp:131] Top shape: 100 (100)
I0426 20:55:28.269716   402 net.cpp:131] Top shape: 100 (100)
I0426 20:55:28.269734   402 net.cpp:139] Memory required for data: 314800
I0426 20:55:28.269739   402 layer_factory.hpp:77] Creating layer conv0
I0426 20:55:28.269755   402 net.cpp:86] Creating Layer conv0
I0426 20:55:28.269762   402 net.cpp:408] conv0 <- data
I0426 20:55:28.269770   402 net.cpp:382] conv0 -> conv0
I0426 20:55:28.271317   402 net.cpp:124] Setting up conv0
I0426 20:55:28.271330   402 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:55:28.271333   402 net.cpp:139] Memory required for data: 11834800
I0426 20:55:28.271342   402 layer_factory.hpp:77] Creating layer pool0
I0426 20:55:28.271349   402 net.cpp:86] Creating Layer pool0
I0426 20:55:28.271353   402 net.cpp:408] pool0 <- conv0
I0426 20:55:28.271356   402 net.cpp:382] pool0 -> pool0
I0426 20:55:28.271400   402 net.cpp:124] Setting up pool0
I0426 20:55:28.271409   402 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:55:28.271414   402 net.cpp:139] Memory required for data: 14714800
I0426 20:55:28.271419   402 layer_factory.hpp:77] Creating layer conv1
I0426 20:55:28.271435   402 net.cpp:86] Creating Layer conv1
I0426 20:55:28.271440   402 net.cpp:408] conv1 <- pool0
I0426 20:55:28.271450   402 net.cpp:382] conv1 -> conv1
I0426 20:55:28.273371   402 net.cpp:124] Setting up conv1
I0426 20:55:28.273385   402 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:55:28.273388   402 net.cpp:139] Memory required for data: 15994800
I0426 20:55:28.273397   402 layer_factory.hpp:77] Creating layer pool1
I0426 20:55:28.273404   402 net.cpp:86] Creating Layer pool1
I0426 20:55:28.273407   402 net.cpp:408] pool1 <- conv1
I0426 20:55:28.273413   402 net.cpp:382] pool1 -> pool1
I0426 20:55:28.273465   402 net.cpp:124] Setting up pool1
I0426 20:55:28.273476   402 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:55:28.273488   402 net.cpp:139] Memory required for data: 16314800
I0426 20:55:28.273493   402 layer_factory.hpp:77] Creating layer ip1
I0426 20:55:28.273504   402 net.cpp:86] Creating Layer ip1
I0426 20:55:28.273509   402 net.cpp:408] ip1 <- pool1
I0426 20:55:28.273515   402 net.cpp:382] ip1 -> ip1
I0426 20:55:28.275609   402 net.cpp:124] Setting up ip1
I0426 20:55:28.275658   402 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:55:28.275665   402 net.cpp:139] Memory required for data: 16434800
I0426 20:55:28.275677   402 layer_factory.hpp:77] Creating layer relu1
I0426 20:55:28.275688   402 net.cpp:86] Creating Layer relu1
I0426 20:55:28.275708   402 net.cpp:408] relu1 <- ip1
I0426 20:55:28.275717   402 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:55:28.276008   402 net.cpp:124] Setting up relu1
I0426 20:55:28.276026   402 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:55:28.276036   402 net.cpp:139] Memory required for data: 16554800
I0426 20:55:28.276047   402 layer_factory.hpp:77] Creating layer ip2
I0426 20:55:28.276064   402 net.cpp:86] Creating Layer ip2
I0426 20:55:28.276070   402 net.cpp:408] ip2 <- ip1
I0426 20:55:28.276079   402 net.cpp:382] ip2 -> ip2
I0426 20:55:28.277045   402 net.cpp:124] Setting up ip2
I0426 20:55:28.277065   402 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:55:28.277070   402 net.cpp:139] Memory required for data: 16674800
I0426 20:55:28.277079   402 layer_factory.hpp:77] Creating layer relu2
I0426 20:55:28.277102   402 net.cpp:86] Creating Layer relu2
I0426 20:55:28.277108   402 net.cpp:408] relu2 <- ip2
I0426 20:55:28.277115   402 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:55:28.277287   402 net.cpp:124] Setting up relu2
I0426 20:55:28.277297   402 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:55:28.277300   402 net.cpp:139] Memory required for data: 16794800
I0426 20:55:28.277303   402 layer_factory.hpp:77] Creating layer ip3
I0426 20:55:28.277309   402 net.cpp:86] Creating Layer ip3
I0426 20:55:28.277313   402 net.cpp:408] ip3 <- ip2
I0426 20:55:28.277319   402 net.cpp:382] ip3 -> ip3
I0426 20:55:28.277467   402 net.cpp:124] Setting up ip3
I0426 20:55:28.277472   402 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:55:28.277475   402 net.cpp:139] Memory required for data: 16798800
I0426 20:55:28.277484   402 layer_factory.hpp:77] Creating layer relu3
I0426 20:55:28.277488   402 net.cpp:86] Creating Layer relu3
I0426 20:55:28.277492   402 net.cpp:408] relu3 <- ip3
I0426 20:55:28.277495   402 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:55:28.278293   402 net.cpp:124] Setting up relu3
I0426 20:55:28.278306   402 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:55:28.278324   402 net.cpp:139] Memory required for data: 16802800
I0426 20:55:28.278328   402 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:55:28.278333   402 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:55:28.278337   402 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:55:28.278342   402 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:55:28.278348   402 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:55:28.278400   402 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:55:28.278405   402 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:55:28.278409   402 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:55:28.278411   402 net.cpp:139] Memory required for data: 16810800
I0426 20:55:28.278414   402 layer_factory.hpp:77] Creating layer accuracy
I0426 20:55:28.278420   402 net.cpp:86] Creating Layer accuracy
I0426 20:55:28.278424   402 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:55:28.278427   402 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:55:28.278431   402 net.cpp:382] accuracy -> accuracy
I0426 20:55:28.278439   402 net.cpp:124] Setting up accuracy
I0426 20:55:28.278442   402 net.cpp:131] Top shape: (1)
I0426 20:55:28.278445   402 net.cpp:139] Memory required for data: 16810804
I0426 20:55:28.278447   402 layer_factory.hpp:77] Creating layer loss
I0426 20:55:28.278451   402 net.cpp:86] Creating Layer loss
I0426 20:55:28.278455   402 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:55:28.278458   402 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:55:28.278462   402 net.cpp:382] loss -> loss
I0426 20:55:28.278467   402 layer_factory.hpp:77] Creating layer loss
I0426 20:55:28.278705   402 net.cpp:124] Setting up loss
I0426 20:55:28.278714   402 net.cpp:131] Top shape: (1)
I0426 20:55:28.278717   402 net.cpp:134]     with loss weight 1
I0426 20:55:28.278733   402 net.cpp:139] Memory required for data: 16810808
I0426 20:55:28.278738   402 net.cpp:200] loss needs backward computation.
I0426 20:55:28.278740   402 net.cpp:202] accuracy does not need backward computation.
I0426 20:55:28.278743   402 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:55:28.278746   402 net.cpp:200] relu3 needs backward computation.
I0426 20:55:28.278749   402 net.cpp:200] ip3 needs backward computation.
I0426 20:55:28.278753   402 net.cpp:200] relu2 needs backward computation.
I0426 20:55:28.278754   402 net.cpp:200] ip2 needs backward computation.
I0426 20:55:28.278758   402 net.cpp:200] relu1 needs backward computation.
I0426 20:55:28.278761   402 net.cpp:200] ip1 needs backward computation.
I0426 20:55:28.278764   402 net.cpp:200] pool1 needs backward computation.
I0426 20:55:28.278766   402 net.cpp:200] conv1 needs backward computation.
I0426 20:55:28.278769   402 net.cpp:200] pool0 needs backward computation.
I0426 20:55:28.278772   402 net.cpp:200] conv0 needs backward computation.
I0426 20:55:28.278775   402 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:55:28.278779   402 net.cpp:202] mnist does not need backward computation.
I0426 20:55:28.278781   402 net.cpp:244] This network produces output accuracy
I0426 20:55:28.278785   402 net.cpp:244] This network produces output loss
I0426 20:55:28.278800   402 net.cpp:257] Network initialization done.
I0426 20:55:28.278838   402 solver.cpp:56] Solver scaffolding done.
I0426 20:55:28.279145   402 caffe.cpp:248] Starting Optimization
I0426 20:55:28.279151   402 solver.cpp:273] Solving LeNet
I0426 20:55:28.279155   402 solver.cpp:274] Learning Rate Policy: inv
I0426 20:55:28.280599   402 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:55:28.288729   402 blocking_queue.cpp:49] Waiting for data
I0426 20:55:28.366585   410 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:55:28.367846   402 solver.cpp:398]     Test net output #0: accuracy = 0.1026
I0426 20:55:28.367879   402 solver.cpp:398]     Test net output #1: loss = 2.29765 (* 1 = 2.29765 loss)
I0426 20:55:28.373095   402 solver.cpp:219] Iteration 0 (-4.56272e-38 iter/s, 0.0939141s/100 iters), loss = 2.30168
I0426 20:55:28.373137   402 solver.cpp:238]     Train net output #0: loss = 2.30168 (* 1 = 2.30168 loss)
I0426 20:55:28.373148   402 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:55:28.547529   402 solver.cpp:219] Iteration 100 (573.474 iter/s, 0.174376s/100 iters), loss = 0.389854
I0426 20:55:28.547569   402 solver.cpp:238]     Train net output #0: loss = 0.389854 (* 1 = 0.389854 loss)
I0426 20:55:28.547575   402 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:55:28.730135   402 solver.cpp:219] Iteration 200 (547.79 iter/s, 0.182552s/100 iters), loss = 0.319568
I0426 20:55:28.730161   402 solver.cpp:238]     Train net output #0: loss = 0.319568 (* 1 = 0.319568 loss)
I0426 20:55:28.730167   402 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:55:28.909386   402 solver.cpp:219] Iteration 300 (558.004 iter/s, 0.17921s/100 iters), loss = 0.3545
I0426 20:55:28.909426   402 solver.cpp:238]     Train net output #0: loss = 0.3545 (* 1 = 0.3545 loss)
I0426 20:55:28.909433   402 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:55:29.083829   402 solver.cpp:219] Iteration 400 (573.379 iter/s, 0.174405s/100 iters), loss = 0.536384
I0426 20:55:29.083869   402 solver.cpp:238]     Train net output #0: loss = 0.536384 (* 1 = 0.536384 loss)
I0426 20:55:29.083875   402 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:55:29.256814   402 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:55:29.340777   410 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:55:29.342039   402 solver.cpp:398]     Test net output #0: accuracy = 0.9634
I0426 20:55:29.342059   402 solver.cpp:398]     Test net output #1: loss = 0.10924 (* 1 = 0.10924 loss)
I0426 20:55:29.343783   402 solver.cpp:219] Iteration 500 (384.746 iter/s, 0.259912s/100 iters), loss = 0.0774975
I0426 20:55:29.343821   402 solver.cpp:238]     Train net output #0: loss = 0.0774975 (* 1 = 0.0774975 loss)
I0426 20:55:29.343827   402 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:55:29.522372   402 solver.cpp:219] Iteration 600 (560.107 iter/s, 0.178537s/100 iters), loss = 0.087784
I0426 20:55:29.522413   402 solver.cpp:238]     Train net output #0: loss = 0.0877839 (* 1 = 0.0877839 loss)
I0426 20:55:29.522420   402 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:55:29.699311   402 solver.cpp:219] Iteration 700 (565.34 iter/s, 0.176885s/100 iters), loss = 0.116729
I0426 20:55:29.699352   402 solver.cpp:238]     Train net output #0: loss = 0.116729 (* 1 = 0.116729 loss)
I0426 20:55:29.699358   402 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:55:29.874156   402 solver.cpp:219] Iteration 800 (572.11 iter/s, 0.174792s/100 iters), loss = 0.212631
I0426 20:55:29.874181   402 solver.cpp:238]     Train net output #0: loss = 0.212631 (* 1 = 0.212631 loss)
I0426 20:55:29.874187   402 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:55:30.047363   402 solver.cpp:219] Iteration 900 (577.478 iter/s, 0.173167s/100 iters), loss = 0.139055
I0426 20:55:30.047386   402 solver.cpp:238]     Train net output #0: loss = 0.139055 (* 1 = 0.139055 loss)
I0426 20:55:30.047392   402 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:55:30.105264   409 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:55:30.218698   402 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:55:30.224743   402 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:55:30.228004   402 solver.cpp:311] Iteration 1000, loss = 0.0637509
I0426 20:55:30.228024   402 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:55:30.311805   410 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:55:30.313124   402 solver.cpp:398]     Test net output #0: accuracy = 0.9828
I0426 20:55:30.313148   402 solver.cpp:398]     Test net output #1: loss = 0.0573073 (* 1 = 0.0573073 loss)
I0426 20:55:30.313153   402 solver.cpp:316] Optimization Done.
I0426 20:55:30.313156   402 caffe.cpp:259] Optimization Done.
