I0426 20:48:28.534356 31261 caffe.cpp:218] Using GPUs 0
I0426 20:48:28.572016 31261 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:29.095382 31261 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test7.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:29.095513 31261 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test7.prototxt
I0426 20:48:29.095810 31261 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:29.095825 31261 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:29.095897 31261 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:29.095958 31261 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:29.096057 31261 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:29.096081 31261 net.cpp:86] Creating Layer mnist
I0426 20:48:29.096088 31261 net.cpp:382] mnist -> data
I0426 20:48:29.096112 31261 net.cpp:382] mnist -> label
I0426 20:48:29.097213 31261 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:29.099741 31261 net.cpp:124] Setting up mnist
I0426 20:48:29.099759 31261 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:29.099766 31261 net.cpp:131] Top shape: 64 (64)
I0426 20:48:29.099771 31261 net.cpp:139] Memory required for data: 200960
I0426 20:48:29.099777 31261 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:29.099788 31261 net.cpp:86] Creating Layer ip1
I0426 20:48:29.099793 31261 net.cpp:408] ip1 <- data
I0426 20:48:29.099804 31261 net.cpp:382] ip1 -> ip1
I0426 20:48:29.101502 31261 net.cpp:124] Setting up ip1
I0426 20:48:29.101518 31261 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:29.101522 31261 net.cpp:139] Memory required for data: 226560
I0426 20:48:29.101536 31261 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:29.101546 31261 net.cpp:86] Creating Layer relu1
I0426 20:48:29.101549 31261 net.cpp:408] relu1 <- ip1
I0426 20:48:29.101555 31261 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:29.362746 31261 net.cpp:124] Setting up relu1
I0426 20:48:29.362787 31261 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:29.362792 31261 net.cpp:139] Memory required for data: 252160
I0426 20:48:29.362797 31261 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:29.362809 31261 net.cpp:86] Creating Layer ip2
I0426 20:48:29.362846 31261 net.cpp:408] ip2 <- ip1
I0426 20:48:29.362855 31261 net.cpp:382] ip2 -> ip2
I0426 20:48:29.363884 31261 net.cpp:124] Setting up ip2
I0426 20:48:29.363896 31261 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:29.363915 31261 net.cpp:139] Memory required for data: 277760
I0426 20:48:29.363925 31261 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:29.363934 31261 net.cpp:86] Creating Layer relu2
I0426 20:48:29.363936 31261 net.cpp:408] relu2 <- ip2
I0426 20:48:29.363940 31261 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:29.364751 31261 net.cpp:124] Setting up relu2
I0426 20:48:29.364763 31261 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:29.364783 31261 net.cpp:139] Memory required for data: 303360
I0426 20:48:29.364785 31261 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:29.364791 31261 net.cpp:86] Creating Layer ip3
I0426 20:48:29.364796 31261 net.cpp:408] ip3 <- ip2
I0426 20:48:29.364801 31261 net.cpp:382] ip3 -> ip3
I0426 20:48:29.365861 31261 net.cpp:124] Setting up ip3
I0426 20:48:29.365873 31261 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:29.365876 31261 net.cpp:139] Memory required for data: 305920
I0426 20:48:29.365885 31261 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:29.365890 31261 net.cpp:86] Creating Layer relu3
I0426 20:48:29.365892 31261 net.cpp:408] relu3 <- ip3
I0426 20:48:29.365896 31261 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:29.366068 31261 net.cpp:124] Setting up relu3
I0426 20:48:29.366076 31261 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:29.366080 31261 net.cpp:139] Memory required for data: 308480
I0426 20:48:29.366082 31261 layer_factory.hpp:77] Creating layer loss
I0426 20:48:29.366087 31261 net.cpp:86] Creating Layer loss
I0426 20:48:29.366091 31261 net.cpp:408] loss <- ip3
I0426 20:48:29.366094 31261 net.cpp:408] loss <- label
I0426 20:48:29.366099 31261 net.cpp:382] loss -> loss
I0426 20:48:29.366117 31261 layer_factory.hpp:77] Creating layer loss
I0426 20:48:29.366334 31261 net.cpp:124] Setting up loss
I0426 20:48:29.366343 31261 net.cpp:131] Top shape: (1)
I0426 20:48:29.366346 31261 net.cpp:134]     with loss weight 1
I0426 20:48:29.366360 31261 net.cpp:139] Memory required for data: 308484
I0426 20:48:29.366364 31261 net.cpp:200] loss needs backward computation.
I0426 20:48:29.366367 31261 net.cpp:200] relu3 needs backward computation.
I0426 20:48:29.366369 31261 net.cpp:200] ip3 needs backward computation.
I0426 20:48:29.366372 31261 net.cpp:200] relu2 needs backward computation.
I0426 20:48:29.366375 31261 net.cpp:200] ip2 needs backward computation.
I0426 20:48:29.366377 31261 net.cpp:200] relu1 needs backward computation.
I0426 20:48:29.366380 31261 net.cpp:200] ip1 needs backward computation.
I0426 20:48:29.366384 31261 net.cpp:202] mnist does not need backward computation.
I0426 20:48:29.366386 31261 net.cpp:244] This network produces output loss
I0426 20:48:29.366394 31261 net.cpp:257] Network initialization done.
I0426 20:48:29.366614 31261 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test7.prototxt
I0426 20:48:29.366636 31261 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:29.366703 31261 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:29.366768 31261 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:29.366809 31261 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:29.366822 31261 net.cpp:86] Creating Layer mnist
I0426 20:48:29.366825 31261 net.cpp:382] mnist -> data
I0426 20:48:29.366832 31261 net.cpp:382] mnist -> label
I0426 20:48:29.366912 31261 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:29.368089 31261 net.cpp:124] Setting up mnist
I0426 20:48:29.368116 31261 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:29.368121 31261 net.cpp:131] Top shape: 100 (100)
I0426 20:48:29.368124 31261 net.cpp:139] Memory required for data: 314000
I0426 20:48:29.368127 31261 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:29.368161 31261 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:29.368172 31261 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:29.368177 31261 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:29.368183 31261 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:29.368227 31261 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:29.368232 31261 net.cpp:131] Top shape: 100 (100)
I0426 20:48:29.368234 31261 net.cpp:131] Top shape: 100 (100)
I0426 20:48:29.368237 31261 net.cpp:139] Memory required for data: 314800
I0426 20:48:29.368239 31261 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:29.368245 31261 net.cpp:86] Creating Layer ip1
I0426 20:48:29.368248 31261 net.cpp:408] ip1 <- data
I0426 20:48:29.368253 31261 net.cpp:382] ip1 -> ip1
I0426 20:48:29.368831 31261 net.cpp:124] Setting up ip1
I0426 20:48:29.368839 31261 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:29.368842 31261 net.cpp:139] Memory required for data: 354800
I0426 20:48:29.368851 31261 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:29.368855 31261 net.cpp:86] Creating Layer relu1
I0426 20:48:29.368860 31261 net.cpp:408] relu1 <- ip1
I0426 20:48:29.368863 31261 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:29.369818 31261 net.cpp:124] Setting up relu1
I0426 20:48:29.369830 31261 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:29.369833 31261 net.cpp:139] Memory required for data: 394800
I0426 20:48:29.369837 31261 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:29.369844 31261 net.cpp:86] Creating Layer ip2
I0426 20:48:29.369848 31261 net.cpp:408] ip2 <- ip1
I0426 20:48:29.369853 31261 net.cpp:382] ip2 -> ip2
I0426 20:48:29.370010 31261 net.cpp:124] Setting up ip2
I0426 20:48:29.370018 31261 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:29.370021 31261 net.cpp:139] Memory required for data: 434800
I0426 20:48:29.370028 31261 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:29.370033 31261 net.cpp:86] Creating Layer relu2
I0426 20:48:29.370035 31261 net.cpp:408] relu2 <- ip2
I0426 20:48:29.370039 31261 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:29.370183 31261 net.cpp:124] Setting up relu2
I0426 20:48:29.370190 31261 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:29.370193 31261 net.cpp:139] Memory required for data: 474800
I0426 20:48:29.370196 31261 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:29.370201 31261 net.cpp:86] Creating Layer ip3
I0426 20:48:29.370204 31261 net.cpp:408] ip3 <- ip2
I0426 20:48:29.370208 31261 net.cpp:382] ip3 -> ip3
I0426 20:48:29.370327 31261 net.cpp:124] Setting up ip3
I0426 20:48:29.370335 31261 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:29.370338 31261 net.cpp:139] Memory required for data: 478800
I0426 20:48:29.370345 31261 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:29.370350 31261 net.cpp:86] Creating Layer relu3
I0426 20:48:29.370353 31261 net.cpp:408] relu3 <- ip3
I0426 20:48:29.370357 31261 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:29.370582 31261 net.cpp:124] Setting up relu3
I0426 20:48:29.370590 31261 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:29.370594 31261 net.cpp:139] Memory required for data: 482800
I0426 20:48:29.370596 31261 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:48:29.370602 31261 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:48:29.370605 31261 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:48:29.370609 31261 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:48:29.370615 31261 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:48:29.370700 31261 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:48:29.370707 31261 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:29.370712 31261 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:29.370713 31261 net.cpp:139] Memory required for data: 490800
I0426 20:48:29.370717 31261 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:29.370720 31261 net.cpp:86] Creating Layer accuracy
I0426 20:48:29.370724 31261 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:48:29.370728 31261 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:29.370733 31261 net.cpp:382] accuracy -> accuracy
I0426 20:48:29.370744 31261 net.cpp:124] Setting up accuracy
I0426 20:48:29.370748 31261 net.cpp:131] Top shape: (1)
I0426 20:48:29.370750 31261 net.cpp:139] Memory required for data: 490804
I0426 20:48:29.370754 31261 layer_factory.hpp:77] Creating layer loss
I0426 20:48:29.370757 31261 net.cpp:86] Creating Layer loss
I0426 20:48:29.370760 31261 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:48:29.370769 31261 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:29.370774 31261 net.cpp:382] loss -> loss
I0426 20:48:29.370779 31261 layer_factory.hpp:77] Creating layer loss
I0426 20:48:29.370993 31261 net.cpp:124] Setting up loss
I0426 20:48:29.371002 31261 net.cpp:131] Top shape: (1)
I0426 20:48:29.371006 31261 net.cpp:134]     with loss weight 1
I0426 20:48:29.371011 31261 net.cpp:139] Memory required for data: 490808
I0426 20:48:29.371021 31261 net.cpp:200] loss needs backward computation.
I0426 20:48:29.371026 31261 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:29.371029 31261 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:48:29.371037 31261 net.cpp:200] relu3 needs backward computation.
I0426 20:48:29.371040 31261 net.cpp:200] ip3 needs backward computation.
I0426 20:48:29.371043 31261 net.cpp:200] relu2 needs backward computation.
I0426 20:48:29.371045 31261 net.cpp:200] ip2 needs backward computation.
I0426 20:48:29.371053 31261 net.cpp:200] relu1 needs backward computation.
I0426 20:48:29.371055 31261 net.cpp:200] ip1 needs backward computation.
I0426 20:48:29.371059 31261 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:29.371063 31261 net.cpp:202] mnist does not need backward computation.
I0426 20:48:29.371065 31261 net.cpp:244] This network produces output accuracy
I0426 20:48:29.371068 31261 net.cpp:244] This network produces output loss
I0426 20:48:29.371076 31261 net.cpp:257] Network initialization done.
I0426 20:48:29.371105 31261 solver.cpp:56] Solver scaffolding done.
I0426 20:48:29.371289 31261 caffe.cpp:248] Starting Optimization
I0426 20:48:29.371294 31261 solver.cpp:273] Solving LeNet
I0426 20:48:29.371302 31261 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:29.372079 31261 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:29.372211 31261 blocking_queue.cpp:49] Waiting for data
I0426 20:48:29.446486 31268 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:29.446938 31261 solver.cpp:398]     Test net output #0: accuracy = 0.1148
I0426 20:48:29.446957 31261 solver.cpp:398]     Test net output #1: loss = 2.2988 (* 1 = 2.2988 loss)
I0426 20:48:29.447664 31261 solver.cpp:219] Iteration 0 (0 iter/s, 0.0763382s/100 iters), loss = 2.29206
I0426 20:48:29.447687 31261 solver.cpp:238]     Train net output #0: loss = 2.29206 (* 1 = 2.29206 loss)
I0426 20:48:29.447697 31261 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:29.503608 31261 solver.cpp:219] Iteration 100 (1788.54 iter/s, 0.0559114s/100 iters), loss = 0.398612
I0426 20:48:29.503650 31261 solver.cpp:238]     Train net output #0: loss = 0.398612 (* 1 = 0.398612 loss)
I0426 20:48:29.503656 31261 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:29.551028 31261 solver.cpp:219] Iteration 200 (2110.94 iter/s, 0.0473723s/100 iters), loss = 0.309484
I0426 20:48:29.551048 31261 solver.cpp:238]     Train net output #0: loss = 0.309484 (* 1 = 0.309484 loss)
I0426 20:48:29.551054 31261 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:29.597679 31261 solver.cpp:219] Iteration 300 (2144.88 iter/s, 0.0466227s/100 iters), loss = 0.317751
I0426 20:48:29.597718 31261 solver.cpp:238]     Train net output #0: loss = 0.317751 (* 1 = 0.317751 loss)
I0426 20:48:29.597723 31261 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:29.644906 31261 solver.cpp:219] Iteration 400 (2118.82 iter/s, 0.0471962s/100 iters), loss = 0.208012
I0426 20:48:29.644942 31261 solver.cpp:238]     Train net output #0: loss = 0.208012 (* 1 = 0.208012 loss)
I0426 20:48:29.644948 31261 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:29.688907 31261 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:29.767065 31268 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:29.767511 31261 solver.cpp:398]     Test net output #0: accuracy = 0.925
I0426 20:48:29.767530 31261 solver.cpp:398]     Test net output #1: loss = 0.262978 (* 1 = 0.262978 loss)
I0426 20:48:29.768077 31261 solver.cpp:219] Iteration 500 (812.124 iter/s, 0.123134s/100 iters), loss = 0.29804
I0426 20:48:29.768097 31261 solver.cpp:238]     Train net output #0: loss = 0.29804 (* 1 = 0.29804 loss)
I0426 20:48:29.768103 31261 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:29.825122 31261 solver.cpp:219] Iteration 600 (1753.85 iter/s, 0.0570173s/100 iters), loss = 0.228533
I0426 20:48:29.825162 31261 solver.cpp:238]     Train net output #0: loss = 0.228533 (* 1 = 0.228533 loss)
I0426 20:48:29.825184 31261 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:29.873384 31261 solver.cpp:219] Iteration 700 (2073.38 iter/s, 0.0482304s/100 iters), loss = 0.37914
I0426 20:48:29.873421 31261 solver.cpp:238]     Train net output #0: loss = 0.37914 (* 1 = 0.37914 loss)
I0426 20:48:29.873426 31261 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:29.921319 31261 solver.cpp:219] Iteration 800 (2087.47 iter/s, 0.0479049s/100 iters), loss = 0.342484
I0426 20:48:29.921360 31261 solver.cpp:238]     Train net output #0: loss = 0.342484 (* 1 = 0.342484 loss)
I0426 20:48:29.921366 31261 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:29.966114 31261 solver.cpp:219] Iteration 900 (2234.75 iter/s, 0.0447478s/100 iters), loss = 0.267227
I0426 20:48:29.966150 31261 solver.cpp:238]     Train net output #0: loss = 0.267227 (* 1 = 0.267227 loss)
I0426 20:48:29.966156 31261 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:29.981866 31267 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:30.011349 31261 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:30.013150 31261 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:30.014176 31261 solver.cpp:311] Iteration 1000, loss = 0.226936
I0426 20:48:30.014191 31261 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:30.085985 31268 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:30.086448 31261 solver.cpp:398]     Test net output #0: accuracy = 0.943
I0426 20:48:30.086467 31261 solver.cpp:398]     Test net output #1: loss = 0.195013 (* 1 = 0.195013 loss)
I0426 20:48:30.086470 31261 solver.cpp:316] Optimization Done.
I0426 20:48:30.086473 31261 caffe.cpp:259] Optimization Done.
