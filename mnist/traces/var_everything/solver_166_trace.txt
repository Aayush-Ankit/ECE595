I0426 20:54:45.814673 32729 caffe.cpp:218] Using GPUs 0
I0426 20:54:45.851896 32729 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:54:46.313704 32729 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test166.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:54:46.313843 32729 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test166.prototxt
I0426 20:54:46.314183 32729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:54:46.314214 32729 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:54:46.314291 32729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:46.314366 32729 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:46.314451 32729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:54:46.314471 32729 net.cpp:86] Creating Layer mnist
I0426 20:54:46.314477 32729 net.cpp:382] mnist -> data
I0426 20:54:46.314497 32729 net.cpp:382] mnist -> label
I0426 20:54:46.315419 32729 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:54:46.317771 32729 net.cpp:124] Setting up mnist
I0426 20:54:46.317804 32729 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:54:46.317811 32729 net.cpp:131] Top shape: 64 (64)
I0426 20:54:46.317813 32729 net.cpp:139] Memory required for data: 200960
I0426 20:54:46.317819 32729 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:46.317833 32729 net.cpp:86] Creating Layer conv0
I0426 20:54:46.317850 32729 net.cpp:408] conv0 <- data
I0426 20:54:46.317860 32729 net.cpp:382] conv0 -> conv0
I0426 20:54:46.549573 32729 net.cpp:124] Setting up conv0
I0426 20:54:46.549618 32729 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:54:46.549636 32729 net.cpp:139] Memory required for data: 7573760
I0426 20:54:46.549650 32729 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:46.549679 32729 net.cpp:86] Creating Layer pool0
I0426 20:54:46.549682 32729 net.cpp:408] pool0 <- conv0
I0426 20:54:46.549688 32729 net.cpp:382] pool0 -> pool0
I0426 20:54:46.549734 32729 net.cpp:124] Setting up pool0
I0426 20:54:46.549741 32729 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:54:46.549744 32729 net.cpp:139] Memory required for data: 9416960
I0426 20:54:46.549747 32729 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:46.549757 32729 net.cpp:86] Creating Layer conv1
I0426 20:54:46.549762 32729 net.cpp:408] conv1 <- pool0
I0426 20:54:46.549767 32729 net.cpp:382] conv1 -> conv1
I0426 20:54:46.551796 32729 net.cpp:124] Setting up conv1
I0426 20:54:46.551810 32729 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:54:46.551813 32729 net.cpp:139] Memory required for data: 9826560
I0426 20:54:46.551821 32729 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:46.551828 32729 net.cpp:86] Creating Layer pool1
I0426 20:54:46.551831 32729 net.cpp:408] pool1 <- conv1
I0426 20:54:46.551836 32729 net.cpp:382] pool1 -> pool1
I0426 20:54:46.551887 32729 net.cpp:124] Setting up pool1
I0426 20:54:46.551892 32729 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:54:46.551895 32729 net.cpp:139] Memory required for data: 9928960
I0426 20:54:46.551898 32729 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:46.551905 32729 net.cpp:86] Creating Layer ip1
I0426 20:54:46.551908 32729 net.cpp:408] ip1 <- pool1
I0426 20:54:46.551913 32729 net.cpp:382] ip1 -> ip1
I0426 20:54:46.553488 32729 net.cpp:124] Setting up ip1
I0426 20:54:46.553500 32729 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:46.553503 32729 net.cpp:139] Memory required for data: 10005760
I0426 20:54:46.553511 32729 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:46.553516 32729 net.cpp:86] Creating Layer relu1
I0426 20:54:46.553519 32729 net.cpp:408] relu1 <- ip1
I0426 20:54:46.553524 32729 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:46.553730 32729 net.cpp:124] Setting up relu1
I0426 20:54:46.553738 32729 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:46.553741 32729 net.cpp:139] Memory required for data: 10082560
I0426 20:54:46.553745 32729 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:46.553751 32729 net.cpp:86] Creating Layer ip2
I0426 20:54:46.553755 32729 net.cpp:408] ip2 <- ip1
I0426 20:54:46.553759 32729 net.cpp:382] ip2 -> ip2
I0426 20:54:46.554379 32729 net.cpp:124] Setting up ip2
I0426 20:54:46.554388 32729 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:46.554390 32729 net.cpp:139] Memory required for data: 10159360
I0426 20:54:46.554395 32729 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:46.554417 32729 net.cpp:86] Creating Layer relu2
I0426 20:54:46.554420 32729 net.cpp:408] relu2 <- ip2
I0426 20:54:46.554425 32729 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:46.555287 32729 net.cpp:124] Setting up relu2
I0426 20:54:46.555304 32729 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:46.555307 32729 net.cpp:139] Memory required for data: 10236160
I0426 20:54:46.555310 32729 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:46.555332 32729 net.cpp:86] Creating Layer ip3
I0426 20:54:46.555335 32729 net.cpp:408] ip3 <- ip2
I0426 20:54:46.555341 32729 net.cpp:382] ip3 -> ip3
I0426 20:54:46.555461 32729 net.cpp:124] Setting up ip3
I0426 20:54:46.555469 32729 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:46.555471 32729 net.cpp:139] Memory required for data: 10238720
I0426 20:54:46.555480 32729 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:46.555485 32729 net.cpp:86] Creating Layer relu3
I0426 20:54:46.555487 32729 net.cpp:408] relu3 <- ip3
I0426 20:54:46.555492 32729 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:46.555668 32729 net.cpp:124] Setting up relu3
I0426 20:54:46.555677 32729 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:46.555680 32729 net.cpp:139] Memory required for data: 10241280
I0426 20:54:46.555683 32729 layer_factory.hpp:77] Creating layer loss
I0426 20:54:46.555690 32729 net.cpp:86] Creating Layer loss
I0426 20:54:46.555692 32729 net.cpp:408] loss <- ip3
I0426 20:54:46.555696 32729 net.cpp:408] loss <- label
I0426 20:54:46.555701 32729 net.cpp:382] loss -> loss
I0426 20:54:46.555718 32729 layer_factory.hpp:77] Creating layer loss
I0426 20:54:46.555953 32729 net.cpp:124] Setting up loss
I0426 20:54:46.555963 32729 net.cpp:131] Top shape: (1)
I0426 20:54:46.555966 32729 net.cpp:134]     with loss weight 1
I0426 20:54:46.555981 32729 net.cpp:139] Memory required for data: 10241284
I0426 20:54:46.555985 32729 net.cpp:200] loss needs backward computation.
I0426 20:54:46.555989 32729 net.cpp:200] relu3 needs backward computation.
I0426 20:54:46.555992 32729 net.cpp:200] ip3 needs backward computation.
I0426 20:54:46.555995 32729 net.cpp:200] relu2 needs backward computation.
I0426 20:54:46.555999 32729 net.cpp:200] ip2 needs backward computation.
I0426 20:54:46.556001 32729 net.cpp:200] relu1 needs backward computation.
I0426 20:54:46.556005 32729 net.cpp:200] ip1 needs backward computation.
I0426 20:54:46.556007 32729 net.cpp:200] pool1 needs backward computation.
I0426 20:54:46.556010 32729 net.cpp:200] conv1 needs backward computation.
I0426 20:54:46.556015 32729 net.cpp:200] pool0 needs backward computation.
I0426 20:54:46.556017 32729 net.cpp:200] conv0 needs backward computation.
I0426 20:54:46.556020 32729 net.cpp:202] mnist does not need backward computation.
I0426 20:54:46.556023 32729 net.cpp:244] This network produces output loss
I0426 20:54:46.556032 32729 net.cpp:257] Network initialization done.
I0426 20:54:46.556372 32729 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test166.prototxt
I0426 20:54:46.556413 32729 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:54:46.556501 32729 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:46.556576 32729 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:46.556619 32729 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:54:46.556632 32729 net.cpp:86] Creating Layer mnist
I0426 20:54:46.556637 32729 net.cpp:382] mnist -> data
I0426 20:54:46.556643 32729 net.cpp:382] mnist -> label
I0426 20:54:46.556723 32729 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:54:46.557924 32729 net.cpp:124] Setting up mnist
I0426 20:54:46.557937 32729 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:54:46.557942 32729 net.cpp:131] Top shape: 100 (100)
I0426 20:54:46.557945 32729 net.cpp:139] Memory required for data: 314000
I0426 20:54:46.557948 32729 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:54:46.557992 32729 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:54:46.557996 32729 net.cpp:408] label_mnist_1_split <- label
I0426 20:54:46.558001 32729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:54:46.558007 32729 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:54:46.558053 32729 net.cpp:124] Setting up label_mnist_1_split
I0426 20:54:46.558059 32729 net.cpp:131] Top shape: 100 (100)
I0426 20:54:46.558063 32729 net.cpp:131] Top shape: 100 (100)
I0426 20:54:46.558066 32729 net.cpp:139] Memory required for data: 314800
I0426 20:54:46.558069 32729 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:46.558076 32729 net.cpp:86] Creating Layer conv0
I0426 20:54:46.558079 32729 net.cpp:408] conv0 <- data
I0426 20:54:46.558084 32729 net.cpp:382] conv0 -> conv0
I0426 20:54:46.560081 32729 net.cpp:124] Setting up conv0
I0426 20:54:46.560096 32729 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:54:46.560098 32729 net.cpp:139] Memory required for data: 11834800
I0426 20:54:46.560108 32729 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:46.560115 32729 net.cpp:86] Creating Layer pool0
I0426 20:54:46.560118 32729 net.cpp:408] pool0 <- conv0
I0426 20:54:46.560124 32729 net.cpp:382] pool0 -> pool0
I0426 20:54:46.560160 32729 net.cpp:124] Setting up pool0
I0426 20:54:46.560165 32729 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:54:46.560185 32729 net.cpp:139] Memory required for data: 14714800
I0426 20:54:46.560189 32729 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:46.560199 32729 net.cpp:86] Creating Layer conv1
I0426 20:54:46.560202 32729 net.cpp:408] conv1 <- pool0
I0426 20:54:46.560207 32729 net.cpp:382] conv1 -> conv1
I0426 20:54:46.562090 32729 net.cpp:124] Setting up conv1
I0426 20:54:46.562104 32729 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:54:46.562108 32729 net.cpp:139] Memory required for data: 15354800
I0426 20:54:46.562119 32729 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:46.562140 32729 net.cpp:86] Creating Layer pool1
I0426 20:54:46.562144 32729 net.cpp:408] pool1 <- conv1
I0426 20:54:46.562149 32729 net.cpp:382] pool1 -> pool1
I0426 20:54:46.562186 32729 net.cpp:124] Setting up pool1
I0426 20:54:46.562191 32729 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:54:46.562194 32729 net.cpp:139] Memory required for data: 15514800
I0426 20:54:46.562198 32729 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:46.562203 32729 net.cpp:86] Creating Layer ip1
I0426 20:54:46.562207 32729 net.cpp:408] ip1 <- pool1
I0426 20:54:46.562212 32729 net.cpp:382] ip1 -> ip1
I0426 20:54:46.564016 32729 net.cpp:124] Setting up ip1
I0426 20:54:46.564038 32729 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:46.564043 32729 net.cpp:139] Memory required for data: 15634800
I0426 20:54:46.564074 32729 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:46.564079 32729 net.cpp:86] Creating Layer relu1
I0426 20:54:46.564083 32729 net.cpp:408] relu1 <- ip1
I0426 20:54:46.564090 32729 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:46.564326 32729 net.cpp:124] Setting up relu1
I0426 20:54:46.564335 32729 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:46.564338 32729 net.cpp:139] Memory required for data: 15754800
I0426 20:54:46.564342 32729 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:46.564359 32729 net.cpp:86] Creating Layer ip2
I0426 20:54:46.564363 32729 net.cpp:408] ip2 <- ip1
I0426 20:54:46.564368 32729 net.cpp:382] ip2 -> ip2
I0426 20:54:46.565120 32729 net.cpp:124] Setting up ip2
I0426 20:54:46.565129 32729 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:46.565134 32729 net.cpp:139] Memory required for data: 15874800
I0426 20:54:46.565140 32729 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:46.565153 32729 net.cpp:86] Creating Layer relu2
I0426 20:54:46.565156 32729 net.cpp:408] relu2 <- ip2
I0426 20:54:46.565160 32729 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:46.565343 32729 net.cpp:124] Setting up relu2
I0426 20:54:46.565353 32729 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:46.565356 32729 net.cpp:139] Memory required for data: 15994800
I0426 20:54:46.565361 32729 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:46.565366 32729 net.cpp:86] Creating Layer ip3
I0426 20:54:46.565382 32729 net.cpp:408] ip3 <- ip2
I0426 20:54:46.565387 32729 net.cpp:382] ip3 -> ip3
I0426 20:54:46.565549 32729 net.cpp:124] Setting up ip3
I0426 20:54:46.565557 32729 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:46.565560 32729 net.cpp:139] Memory required for data: 15998800
I0426 20:54:46.565568 32729 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:46.565574 32729 net.cpp:86] Creating Layer relu3
I0426 20:54:46.565577 32729 net.cpp:408] relu3 <- ip3
I0426 20:54:46.565582 32729 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:46.566512 32729 net.cpp:124] Setting up relu3
I0426 20:54:46.566524 32729 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:46.566529 32729 net.cpp:139] Memory required for data: 16002800
I0426 20:54:46.566537 32729 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:54:46.566558 32729 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:54:46.566567 32729 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:54:46.566572 32729 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:54:46.566582 32729 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:54:46.566632 32729 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:54:46.566642 32729 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:46.566646 32729 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:46.566649 32729 net.cpp:139] Memory required for data: 16010800
I0426 20:54:46.566653 32729 layer_factory.hpp:77] Creating layer accuracy
I0426 20:54:46.566659 32729 net.cpp:86] Creating Layer accuracy
I0426 20:54:46.566663 32729 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:54:46.566668 32729 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:54:46.566673 32729 net.cpp:382] accuracy -> accuracy
I0426 20:54:46.566679 32729 net.cpp:124] Setting up accuracy
I0426 20:54:46.566684 32729 net.cpp:131] Top shape: (1)
I0426 20:54:46.566686 32729 net.cpp:139] Memory required for data: 16010804
I0426 20:54:46.566689 32729 layer_factory.hpp:77] Creating layer loss
I0426 20:54:46.566695 32729 net.cpp:86] Creating Layer loss
I0426 20:54:46.566699 32729 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:54:46.566702 32729 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:54:46.566714 32729 net.cpp:382] loss -> loss
I0426 20:54:46.566720 32729 layer_factory.hpp:77] Creating layer loss
I0426 20:54:46.567029 32729 net.cpp:124] Setting up loss
I0426 20:54:46.567040 32729 net.cpp:131] Top shape: (1)
I0426 20:54:46.567044 32729 net.cpp:134]     with loss weight 1
I0426 20:54:46.567061 32729 net.cpp:139] Memory required for data: 16010808
I0426 20:54:46.567065 32729 net.cpp:200] loss needs backward computation.
I0426 20:54:46.567070 32729 net.cpp:202] accuracy does not need backward computation.
I0426 20:54:46.567073 32729 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:54:46.567078 32729 net.cpp:200] relu3 needs backward computation.
I0426 20:54:46.567088 32729 net.cpp:200] ip3 needs backward computation.
I0426 20:54:46.567092 32729 net.cpp:200] relu2 needs backward computation.
I0426 20:54:46.567101 32729 net.cpp:200] ip2 needs backward computation.
I0426 20:54:46.567103 32729 net.cpp:200] relu1 needs backward computation.
I0426 20:54:46.567106 32729 net.cpp:200] ip1 needs backward computation.
I0426 20:54:46.567111 32729 net.cpp:200] pool1 needs backward computation.
I0426 20:54:46.567118 32729 net.cpp:200] conv1 needs backward computation.
I0426 20:54:46.567122 32729 net.cpp:200] pool0 needs backward computation.
I0426 20:54:46.567126 32729 net.cpp:200] conv0 needs backward computation.
I0426 20:54:46.567129 32729 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:54:46.567134 32729 net.cpp:202] mnist does not need backward computation.
I0426 20:54:46.567137 32729 net.cpp:244] This network produces output accuracy
I0426 20:54:46.567140 32729 net.cpp:244] This network produces output loss
I0426 20:54:46.567153 32729 net.cpp:257] Network initialization done.
I0426 20:54:46.567224 32729 solver.cpp:56] Solver scaffolding done.
I0426 20:54:46.567564 32729 caffe.cpp:248] Starting Optimization
I0426 20:54:46.567571 32729 solver.cpp:273] Solving LeNet
I0426 20:54:46.567574 32729 solver.cpp:274] Learning Rate Policy: inv
I0426 20:54:46.568650 32729 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:54:46.576119 32729 blocking_queue.cpp:49] Waiting for data
I0426 20:54:46.648370 32736 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:46.649507 32729 solver.cpp:398]     Test net output #0: accuracy = 0.0945
I0426 20:54:46.649544 32729 solver.cpp:398]     Test net output #1: loss = 2.31984 (* 1 = 2.31984 loss)
I0426 20:54:46.654952 32729 solver.cpp:219] Iteration 0 (0 iter/s, 0.0873493s/100 iters), loss = 2.31321
I0426 20:54:46.654991 32729 solver.cpp:238]     Train net output #0: loss = 2.31321 (* 1 = 2.31321 loss)
I0426 20:54:46.655004 32729 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:54:46.805163 32729 solver.cpp:219] Iteration 100 (665.905 iter/s, 0.150172s/100 iters), loss = 0.3235
I0426 20:54:46.805205 32729 solver.cpp:238]     Train net output #0: loss = 0.3235 (* 1 = 0.3235 loss)
I0426 20:54:46.805212 32729 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:54:46.955778 32729 solver.cpp:219] Iteration 200 (664.188 iter/s, 0.15056s/100 iters), loss = 0.382294
I0426 20:54:46.955819 32729 solver.cpp:238]     Train net output #0: loss = 0.382294 (* 1 = 0.382294 loss)
I0426 20:54:46.955826 32729 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:54:47.105140 32729 solver.cpp:219] Iteration 300 (669.69 iter/s, 0.149323s/100 iters), loss = 0.397923
I0426 20:54:47.105180 32729 solver.cpp:238]     Train net output #0: loss = 0.397923 (* 1 = 0.397923 loss)
I0426 20:54:47.105201 32729 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:54:47.255431 32729 solver.cpp:219] Iteration 400 (665.601 iter/s, 0.15024s/100 iters), loss = 0.0633255
I0426 20:54:47.255470 32729 solver.cpp:238]     Train net output #0: loss = 0.0633255 (* 1 = 0.0633255 loss)
I0426 20:54:47.255476 32729 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:54:47.402673 32729 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:54:47.473660 32736 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:47.476186 32729 solver.cpp:398]     Test net output #0: accuracy = 0.968
I0426 20:54:47.476203 32729 solver.cpp:398]     Test net output #1: loss = 0.0984329 (* 1 = 0.0984329 loss)
I0426 20:54:47.477596 32729 solver.cpp:219] Iteration 500 (450.195 iter/s, 0.222126s/100 iters), loss = 0.0658344
I0426 20:54:47.477648 32729 solver.cpp:238]     Train net output #0: loss = 0.0658344 (* 1 = 0.0658344 loss)
I0426 20:54:47.477655 32729 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:54:47.627591 32729 solver.cpp:219] Iteration 600 (666.901 iter/s, 0.149947s/100 iters), loss = 0.090829
I0426 20:54:47.627632 32729 solver.cpp:238]     Train net output #0: loss = 0.0908291 (* 1 = 0.0908291 loss)
I0426 20:54:47.627640 32729 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:54:47.777155 32729 solver.cpp:219] Iteration 700 (668.782 iter/s, 0.149525s/100 iters), loss = 0.137789
I0426 20:54:47.777196 32729 solver.cpp:238]     Train net output #0: loss = 0.137789 (* 1 = 0.137789 loss)
I0426 20:54:47.777202 32729 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:54:47.927165 32729 solver.cpp:219] Iteration 800 (666.787 iter/s, 0.149973s/100 iters), loss = 0.171665
I0426 20:54:47.927207 32729 solver.cpp:238]     Train net output #0: loss = 0.171666 (* 1 = 0.171666 loss)
I0426 20:54:47.927214 32729 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:54:48.078048 32729 solver.cpp:219] Iteration 900 (662.93 iter/s, 0.150845s/100 iters), loss = 0.141711
I0426 20:54:48.078073 32729 solver.cpp:238]     Train net output #0: loss = 0.141711 (* 1 = 0.141711 loss)
I0426 20:54:48.078080 32729 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:54:48.128145 32735 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:48.226398 32729 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:54:48.231328 32729 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:54:48.233528 32729 solver.cpp:311] Iteration 1000, loss = 0.0649667
I0426 20:54:48.233546 32729 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:54:48.305058 32736 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:48.307090 32729 solver.cpp:398]     Test net output #0: accuracy = 0.9802
I0426 20:54:48.307127 32729 solver.cpp:398]     Test net output #1: loss = 0.0584945 (* 1 = 0.0584945 loss)
I0426 20:54:48.307132 32729 solver.cpp:316] Optimization Done.
I0426 20:54:48.307137 32729 caffe.cpp:259] Optimization Done.
