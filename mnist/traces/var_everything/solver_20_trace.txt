I0426 20:48:52.494618 31393 caffe.cpp:218] Using GPUs 0
I0426 20:48:52.532680 31393 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:52.994060 31393 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test20.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:52.994197 31393 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test20.prototxt
I0426 20:48:52.994519 31393 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:52.994549 31393 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:52.994619 31393 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:52.994679 31393 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:52.994761 31393 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:52.994781 31393 net.cpp:86] Creating Layer mnist
I0426 20:48:52.994787 31393 net.cpp:382] mnist -> data
I0426 20:48:52.994806 31393 net.cpp:382] mnist -> label
I0426 20:48:52.995749 31393 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:52.997861 31393 net.cpp:124] Setting up mnist
I0426 20:48:52.997892 31393 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:52.997897 31393 net.cpp:131] Top shape: 64 (64)
I0426 20:48:52.997900 31393 net.cpp:139] Memory required for data: 200960
I0426 20:48:52.997921 31393 layer_factory.hpp:77] Creating layer conv0
I0426 20:48:52.997936 31393 net.cpp:86] Creating Layer conv0
I0426 20:48:52.997939 31393 net.cpp:408] conv0 <- data
I0426 20:48:52.997951 31393 net.cpp:382] conv0 -> conv0
I0426 20:48:53.226059 31393 net.cpp:124] Setting up conv0
I0426 20:48:53.226104 31393 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:48:53.226109 31393 net.cpp:139] Memory required for data: 1675520
I0426 20:48:53.226122 31393 layer_factory.hpp:77] Creating layer pool0
I0426 20:48:53.226152 31393 net.cpp:86] Creating Layer pool0
I0426 20:48:53.226172 31393 net.cpp:408] pool0 <- conv0
I0426 20:48:53.226178 31393 net.cpp:382] pool0 -> pool0
I0426 20:48:53.226236 31393 net.cpp:124] Setting up pool0
I0426 20:48:53.226244 31393 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:48:53.226248 31393 net.cpp:139] Memory required for data: 2044160
I0426 20:48:53.226250 31393 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:53.226263 31393 net.cpp:86] Creating Layer ip1
I0426 20:48:53.226267 31393 net.cpp:408] ip1 <- pool0
I0426 20:48:53.226274 31393 net.cpp:382] ip1 -> ip1
I0426 20:48:53.228106 31393 net.cpp:124] Setting up ip1
I0426 20:48:53.228118 31393 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:53.228122 31393 net.cpp:139] Memory required for data: 2069760
I0426 20:48:53.228147 31393 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:53.228163 31393 net.cpp:86] Creating Layer relu1
I0426 20:48:53.228168 31393 net.cpp:408] relu1 <- ip1
I0426 20:48:53.228189 31393 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:53.228375 31393 net.cpp:124] Setting up relu1
I0426 20:48:53.228384 31393 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:53.228387 31393 net.cpp:139] Memory required for data: 2095360
I0426 20:48:53.228391 31393 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:53.228399 31393 net.cpp:86] Creating Layer ip2
I0426 20:48:53.228402 31393 net.cpp:408] ip2 <- ip1
I0426 20:48:53.228407 31393 net.cpp:382] ip2 -> ip2
I0426 20:48:53.229466 31393 net.cpp:124] Setting up ip2
I0426 20:48:53.229480 31393 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:53.229482 31393 net.cpp:139] Memory required for data: 2120960
I0426 20:48:53.229507 31393 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:53.229514 31393 net.cpp:86] Creating Layer relu2
I0426 20:48:53.229518 31393 net.cpp:408] relu2 <- ip2
I0426 20:48:53.229522 31393 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:53.230307 31393 net.cpp:124] Setting up relu2
I0426 20:48:53.230320 31393 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:48:53.230324 31393 net.cpp:139] Memory required for data: 2146560
I0426 20:48:53.230342 31393 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:53.230350 31393 net.cpp:86] Creating Layer ip3
I0426 20:48:53.230355 31393 net.cpp:408] ip3 <- ip2
I0426 20:48:53.230360 31393 net.cpp:382] ip3 -> ip3
I0426 20:48:53.230464 31393 net.cpp:124] Setting up ip3
I0426 20:48:53.230471 31393 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:53.230474 31393 net.cpp:139] Memory required for data: 2149120
I0426 20:48:53.230480 31393 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:53.230487 31393 net.cpp:86] Creating Layer relu3
I0426 20:48:53.230491 31393 net.cpp:408] relu3 <- ip3
I0426 20:48:53.230496 31393 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:53.230660 31393 net.cpp:124] Setting up relu3
I0426 20:48:53.230670 31393 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:53.230674 31393 net.cpp:139] Memory required for data: 2151680
I0426 20:48:53.230676 31393 layer_factory.hpp:77] Creating layer loss
I0426 20:48:53.230681 31393 net.cpp:86] Creating Layer loss
I0426 20:48:53.230684 31393 net.cpp:408] loss <- ip3
I0426 20:48:53.230689 31393 net.cpp:408] loss <- label
I0426 20:48:53.230695 31393 net.cpp:382] loss -> loss
I0426 20:48:53.230710 31393 layer_factory.hpp:77] Creating layer loss
I0426 20:48:53.230954 31393 net.cpp:124] Setting up loss
I0426 20:48:53.230964 31393 net.cpp:131] Top shape: (1)
I0426 20:48:53.230967 31393 net.cpp:134]     with loss weight 1
I0426 20:48:53.230983 31393 net.cpp:139] Memory required for data: 2151684
I0426 20:48:53.230986 31393 net.cpp:200] loss needs backward computation.
I0426 20:48:53.230990 31393 net.cpp:200] relu3 needs backward computation.
I0426 20:48:53.230993 31393 net.cpp:200] ip3 needs backward computation.
I0426 20:48:53.230995 31393 net.cpp:200] relu2 needs backward computation.
I0426 20:48:53.230998 31393 net.cpp:200] ip2 needs backward computation.
I0426 20:48:53.231001 31393 net.cpp:200] relu1 needs backward computation.
I0426 20:48:53.231004 31393 net.cpp:200] ip1 needs backward computation.
I0426 20:48:53.231017 31393 net.cpp:200] pool0 needs backward computation.
I0426 20:48:53.231020 31393 net.cpp:200] conv0 needs backward computation.
I0426 20:48:53.231024 31393 net.cpp:202] mnist does not need backward computation.
I0426 20:48:53.231027 31393 net.cpp:244] This network produces output loss
I0426 20:48:53.231036 31393 net.cpp:257] Network initialization done.
I0426 20:48:53.231310 31393 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test20.prototxt
I0426 20:48:53.231335 31393 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:53.231413 31393 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:53.231477 31393 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:53.231520 31393 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:53.231534 31393 net.cpp:86] Creating Layer mnist
I0426 20:48:53.231539 31393 net.cpp:382] mnist -> data
I0426 20:48:53.231545 31393 net.cpp:382] mnist -> label
I0426 20:48:53.231629 31393 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:53.232736 31393 net.cpp:124] Setting up mnist
I0426 20:48:53.232749 31393 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:53.232754 31393 net.cpp:131] Top shape: 100 (100)
I0426 20:48:53.232758 31393 net.cpp:139] Memory required for data: 314000
I0426 20:48:53.232760 31393 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:53.232780 31393 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:53.232784 31393 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:53.232789 31393 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:53.232795 31393 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:53.232910 31393 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:53.232918 31393 net.cpp:131] Top shape: 100 (100)
I0426 20:48:53.232923 31393 net.cpp:131] Top shape: 100 (100)
I0426 20:48:53.232926 31393 net.cpp:139] Memory required for data: 314800
I0426 20:48:53.232939 31393 layer_factory.hpp:77] Creating layer conv0
I0426 20:48:53.232949 31393 net.cpp:86] Creating Layer conv0
I0426 20:48:53.232954 31393 net.cpp:408] conv0 <- data
I0426 20:48:53.232959 31393 net.cpp:382] conv0 -> conv0
I0426 20:48:53.234416 31393 net.cpp:124] Setting up conv0
I0426 20:48:53.234438 31393 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:48:53.234442 31393 net.cpp:139] Memory required for data: 2618800
I0426 20:48:53.234452 31393 layer_factory.hpp:77] Creating layer pool0
I0426 20:48:53.234457 31393 net.cpp:86] Creating Layer pool0
I0426 20:48:53.234472 31393 net.cpp:408] pool0 <- conv0
I0426 20:48:53.234477 31393 net.cpp:382] pool0 -> pool0
I0426 20:48:53.234510 31393 net.cpp:124] Setting up pool0
I0426 20:48:53.234518 31393 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:48:53.234520 31393 net.cpp:139] Memory required for data: 3194800
I0426 20:48:53.234524 31393 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:53.234529 31393 net.cpp:86] Creating Layer ip1
I0426 20:48:53.234532 31393 net.cpp:408] ip1 <- pool0
I0426 20:48:53.234537 31393 net.cpp:382] ip1 -> ip1
I0426 20:48:53.236306 31393 net.cpp:124] Setting up ip1
I0426 20:48:53.236317 31393 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:53.236336 31393 net.cpp:139] Memory required for data: 3234800
I0426 20:48:53.236344 31393 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:53.236349 31393 net.cpp:86] Creating Layer relu1
I0426 20:48:53.236353 31393 net.cpp:408] relu1 <- ip1
I0426 20:48:53.236358 31393 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:53.236548 31393 net.cpp:124] Setting up relu1
I0426 20:48:53.236557 31393 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:53.236560 31393 net.cpp:139] Memory required for data: 3274800
I0426 20:48:53.236564 31393 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:53.236569 31393 net.cpp:86] Creating Layer ip2
I0426 20:48:53.236573 31393 net.cpp:408] ip2 <- ip1
I0426 20:48:53.236578 31393 net.cpp:382] ip2 -> ip2
I0426 20:48:53.236738 31393 net.cpp:124] Setting up ip2
I0426 20:48:53.236747 31393 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:53.236749 31393 net.cpp:139] Memory required for data: 3314800
I0426 20:48:53.236757 31393 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:53.236760 31393 net.cpp:86] Creating Layer relu2
I0426 20:48:53.236764 31393 net.cpp:408] relu2 <- ip2
I0426 20:48:53.236784 31393 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:53.237704 31393 net.cpp:124] Setting up relu2
I0426 20:48:53.237730 31393 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:48:53.237749 31393 net.cpp:139] Memory required for data: 3354800
I0426 20:48:53.237753 31393 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:53.237761 31393 net.cpp:86] Creating Layer ip3
I0426 20:48:53.237764 31393 net.cpp:408] ip3 <- ip2
I0426 20:48:53.237769 31393 net.cpp:382] ip3 -> ip3
I0426 20:48:53.237906 31393 net.cpp:124] Setting up ip3
I0426 20:48:53.237916 31393 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:53.237920 31393 net.cpp:139] Memory required for data: 3358800
I0426 20:48:53.237926 31393 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:53.237929 31393 net.cpp:86] Creating Layer relu3
I0426 20:48:53.237933 31393 net.cpp:408] relu3 <- ip3
I0426 20:48:53.237937 31393 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:53.238087 31393 net.cpp:124] Setting up relu3
I0426 20:48:53.238096 31393 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:53.238099 31393 net.cpp:139] Memory required for data: 3362800
I0426 20:48:53.238103 31393 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:48:53.238107 31393 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:48:53.238111 31393 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:48:53.238116 31393 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:48:53.238121 31393 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:48:53.238155 31393 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:48:53.238162 31393 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:53.238191 31393 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:53.238195 31393 net.cpp:139] Memory required for data: 3370800
I0426 20:48:53.238198 31393 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:53.238209 31393 net.cpp:86] Creating Layer accuracy
I0426 20:48:53.238217 31393 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:48:53.238226 31393 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:53.238231 31393 net.cpp:382] accuracy -> accuracy
I0426 20:48:53.238239 31393 net.cpp:124] Setting up accuracy
I0426 20:48:53.238242 31393 net.cpp:131] Top shape: (1)
I0426 20:48:53.238245 31393 net.cpp:139] Memory required for data: 3370804
I0426 20:48:53.238248 31393 layer_factory.hpp:77] Creating layer loss
I0426 20:48:53.238252 31393 net.cpp:86] Creating Layer loss
I0426 20:48:53.238256 31393 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:48:53.238260 31393 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:53.238263 31393 net.cpp:382] loss -> loss
I0426 20:48:53.238270 31393 layer_factory.hpp:77] Creating layer loss
I0426 20:48:53.238490 31393 net.cpp:124] Setting up loss
I0426 20:48:53.238499 31393 net.cpp:131] Top shape: (1)
I0426 20:48:53.238502 31393 net.cpp:134]     with loss weight 1
I0426 20:48:53.238509 31393 net.cpp:139] Memory required for data: 3370808
I0426 20:48:53.238518 31393 net.cpp:200] loss needs backward computation.
I0426 20:48:53.238523 31393 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:53.238531 31393 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:48:53.238534 31393 net.cpp:200] relu3 needs backward computation.
I0426 20:48:53.238538 31393 net.cpp:200] ip3 needs backward computation.
I0426 20:48:53.238540 31393 net.cpp:200] relu2 needs backward computation.
I0426 20:48:53.238543 31393 net.cpp:200] ip2 needs backward computation.
I0426 20:48:53.238546 31393 net.cpp:200] relu1 needs backward computation.
I0426 20:48:53.238549 31393 net.cpp:200] ip1 needs backward computation.
I0426 20:48:53.238554 31393 net.cpp:200] pool0 needs backward computation.
I0426 20:48:53.238556 31393 net.cpp:200] conv0 needs backward computation.
I0426 20:48:53.238564 31393 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:53.238569 31393 net.cpp:202] mnist does not need backward computation.
I0426 20:48:53.238571 31393 net.cpp:244] This network produces output accuracy
I0426 20:48:53.238574 31393 net.cpp:244] This network produces output loss
I0426 20:48:53.238584 31393 net.cpp:257] Network initialization done.
I0426 20:48:53.238620 31393 solver.cpp:56] Solver scaffolding done.
I0426 20:48:53.238907 31393 caffe.cpp:248] Starting Optimization
I0426 20:48:53.238914 31393 solver.cpp:273] Solving LeNet
I0426 20:48:53.238917 31393 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:53.239814 31393 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:53.243639 31393 blocking_queue.cpp:49] Waiting for data
I0426 20:48:53.315109 31400 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:53.315644 31393 solver.cpp:398]     Test net output #0: accuracy = 0.1142
I0426 20:48:53.315680 31393 solver.cpp:398]     Test net output #1: loss = 2.29883 (* 1 = 2.29883 loss)
I0426 20:48:53.318611 31393 solver.cpp:219] Iteration 0 (0 iter/s, 0.0796611s/100 iters), loss = 2.2936
I0426 20:48:53.318670 31393 solver.cpp:238]     Train net output #0: loss = 2.2936 (* 1 = 2.2936 loss)
I0426 20:48:53.318681 31393 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:53.392354 31393 solver.cpp:219] Iteration 100 (1357.09 iter/s, 0.073687s/100 iters), loss = 0.666214
I0426 20:48:53.392377 31393 solver.cpp:238]     Train net output #0: loss = 0.666214 (* 1 = 0.666214 loss)
I0426 20:48:53.392383 31393 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:53.464375 31393 solver.cpp:219] Iteration 200 (1389.12 iter/s, 0.0719882s/100 iters), loss = 0.377459
I0426 20:48:53.464398 31393 solver.cpp:238]     Train net output #0: loss = 0.377459 (* 1 = 0.377459 loss)
I0426 20:48:53.464406 31393 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:53.536413 31393 solver.cpp:219] Iteration 300 (1388.8 iter/s, 0.0720048s/100 iters), loss = 0.23581
I0426 20:48:53.536453 31393 solver.cpp:238]     Train net output #0: loss = 0.23581 (* 1 = 0.23581 loss)
I0426 20:48:53.536459 31393 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:53.608835 31393 solver.cpp:219] Iteration 400 (1382.04 iter/s, 0.0723567s/100 iters), loss = 0.128264
I0426 20:48:53.608906 31393 solver.cpp:238]     Train net output #0: loss = 0.128264 (* 1 = 0.128264 loss)
I0426 20:48:53.608928 31393 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:53.680608 31393 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:53.727069 31400 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:53.727622 31393 solver.cpp:398]     Test net output #0: accuracy = 0.9511
I0426 20:48:53.727670 31393 solver.cpp:398]     Test net output #1: loss = 0.160169 (* 1 = 0.160169 loss)
I0426 20:48:53.728879 31393 solver.cpp:219] Iteration 500 (833.65 iter/s, 0.119954s/100 iters), loss = 0.205446
I0426 20:48:53.728946 31393 solver.cpp:238]     Train net output #0: loss = 0.205446 (* 1 = 0.205446 loss)
I0426 20:48:53.728961 31393 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:53.815759 31393 solver.cpp:219] Iteration 600 (1151.96 iter/s, 0.0868085s/100 iters), loss = 0.0997733
I0426 20:48:53.815805 31393 solver.cpp:238]     Train net output #0: loss = 0.0997733 (* 1 = 0.0997733 loss)
I0426 20:48:53.815814 31393 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:53.890467 31393 solver.cpp:219] Iteration 700 (1339.32 iter/s, 0.074665s/100 iters), loss = 0.260854
I0426 20:48:53.890506 31393 solver.cpp:238]     Train net output #0: loss = 0.260854 (* 1 = 0.260854 loss)
I0426 20:48:53.890513 31393 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:53.963874 31393 solver.cpp:219] Iteration 800 (1362.98 iter/s, 0.0733686s/100 iters), loss = 0.247451
I0426 20:48:53.963903 31393 solver.cpp:238]     Train net output #0: loss = 0.247451 (* 1 = 0.247451 loss)
I0426 20:48:53.963917 31393 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:54.037214 31393 solver.cpp:219] Iteration 900 (1364.22 iter/s, 0.073302s/100 iters), loss = 0.177668
I0426 20:48:54.037253 31393 solver.cpp:238]     Train net output #0: loss = 0.177668 (* 1 = 0.177668 loss)
I0426 20:48:54.037261 31393 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:54.062160 31399 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:54.111099 31393 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:54.115031 31393 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:54.116933 31393 solver.cpp:311] Iteration 1000, loss = 0.166716
I0426 20:48:54.116953 31393 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:54.164268 31400 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:54.165129 31393 solver.cpp:398]     Test net output #0: accuracy = 0.9666
I0426 20:48:54.165165 31393 solver.cpp:398]     Test net output #1: loss = 0.104469 (* 1 = 0.104469 loss)
I0426 20:48:54.165172 31393 solver.cpp:316] Optimization Done.
I0426 20:48:54.165194 31393 caffe.cpp:259] Optimization Done.
