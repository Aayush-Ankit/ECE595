I0426 20:50:30.363523 31772 caffe.cpp:218] Using GPUs 0
I0426 20:50:30.402420 31772 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:30.938415 31772 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test62.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:30.938573 31772 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test62.prototxt
I0426 20:50:30.938989 31772 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:30.939009 31772 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:30.939122 31772 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:30.939208 31772 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:30.939309 31772 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:30.939333 31772 net.cpp:86] Creating Layer mnist
I0426 20:50:30.939340 31772 net.cpp:382] mnist -> data
I0426 20:50:30.939364 31772 net.cpp:382] mnist -> label
I0426 20:50:30.940452 31772 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:30.943006 31772 net.cpp:124] Setting up mnist
I0426 20:50:30.943023 31772 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:30.943029 31772 net.cpp:131] Top shape: 64 (64)
I0426 20:50:30.943032 31772 net.cpp:139] Memory required for data: 200960
I0426 20:50:30.943040 31772 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:30.943071 31772 net.cpp:86] Creating Layer conv0
I0426 20:50:30.943094 31772 net.cpp:408] conv0 <- data
I0426 20:50:30.943106 31772 net.cpp:382] conv0 -> conv0
I0426 20:50:31.237313 31772 net.cpp:124] Setting up conv0
I0426 20:50:31.237345 31772 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:31.237350 31772 net.cpp:139] Memory required for data: 1675520
I0426 20:50:31.237367 31772 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:31.237382 31772 net.cpp:86] Creating Layer pool0
I0426 20:50:31.237387 31772 net.cpp:408] pool0 <- conv0
I0426 20:50:31.237393 31772 net.cpp:382] pool0 -> pool0
I0426 20:50:31.237448 31772 net.cpp:124] Setting up pool0
I0426 20:50:31.237457 31772 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:31.237462 31772 net.cpp:139] Memory required for data: 2044160
I0426 20:50:31.237464 31772 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:31.237478 31772 net.cpp:86] Creating Layer conv1
I0426 20:50:31.237484 31772 net.cpp:408] conv1 <- pool0
I0426 20:50:31.237490 31772 net.cpp:382] conv1 -> conv1
I0426 20:50:31.240779 31772 net.cpp:124] Setting up conv1
I0426 20:50:31.240797 31772 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:31.240802 31772 net.cpp:139] Memory required for data: 2208000
I0426 20:50:31.240818 31772 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:31.240828 31772 net.cpp:86] Creating Layer pool1
I0426 20:50:31.240833 31772 net.cpp:408] pool1 <- conv1
I0426 20:50:31.240839 31772 net.cpp:382] pool1 -> pool1
I0426 20:50:31.240885 31772 net.cpp:124] Setting up pool1
I0426 20:50:31.240893 31772 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:31.240896 31772 net.cpp:139] Memory required for data: 2248960
I0426 20:50:31.240900 31772 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:31.240908 31772 net.cpp:86] Creating Layer ip1
I0426 20:50:31.240916 31772 net.cpp:408] ip1 <- pool1
I0426 20:50:31.240921 31772 net.cpp:382] ip1 -> ip1
I0426 20:50:31.242123 31772 net.cpp:124] Setting up ip1
I0426 20:50:31.242139 31772 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:31.242143 31772 net.cpp:139] Memory required for data: 2274560
I0426 20:50:31.242153 31772 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:31.242161 31772 net.cpp:86] Creating Layer relu1
I0426 20:50:31.242164 31772 net.cpp:408] relu1 <- ip1
I0426 20:50:31.242171 31772 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:31.242377 31772 net.cpp:124] Setting up relu1
I0426 20:50:31.242388 31772 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:31.242393 31772 net.cpp:139] Memory required for data: 2300160
I0426 20:50:31.242396 31772 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:31.242405 31772 net.cpp:86] Creating Layer ip2
I0426 20:50:31.242409 31772 net.cpp:408] ip2 <- ip1
I0426 20:50:31.242416 31772 net.cpp:382] ip2 -> ip2
I0426 20:50:31.242590 31772 net.cpp:124] Setting up ip2
I0426 20:50:31.242599 31772 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:31.242604 31772 net.cpp:139] Memory required for data: 2325760
I0426 20:50:31.242609 31772 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:31.242617 31772 net.cpp:86] Creating Layer relu2
I0426 20:50:31.242624 31772 net.cpp:408] relu2 <- ip2
I0426 20:50:31.242629 31772 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:31.243571 31772 net.cpp:124] Setting up relu2
I0426 20:50:31.243587 31772 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:31.243590 31772 net.cpp:139] Memory required for data: 2351360
I0426 20:50:31.243594 31772 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:31.243602 31772 net.cpp:86] Creating Layer ip3
I0426 20:50:31.243607 31772 net.cpp:408] ip3 <- ip2
I0426 20:50:31.243613 31772 net.cpp:382] ip3 -> ip3
I0426 20:50:31.243734 31772 net.cpp:124] Setting up ip3
I0426 20:50:31.243743 31772 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:31.243746 31772 net.cpp:139] Memory required for data: 2353920
I0426 20:50:31.243757 31772 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:31.243764 31772 net.cpp:86] Creating Layer relu3
I0426 20:50:31.243768 31772 net.cpp:408] relu3 <- ip3
I0426 20:50:31.243773 31772 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:31.243968 31772 net.cpp:124] Setting up relu3
I0426 20:50:31.243979 31772 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:31.243983 31772 net.cpp:139] Memory required for data: 2356480
I0426 20:50:31.243988 31772 layer_factory.hpp:77] Creating layer loss
I0426 20:50:31.243994 31772 net.cpp:86] Creating Layer loss
I0426 20:50:31.243999 31772 net.cpp:408] loss <- ip3
I0426 20:50:31.244004 31772 net.cpp:408] loss <- label
I0426 20:50:31.244009 31772 net.cpp:382] loss -> loss
I0426 20:50:31.244029 31772 layer_factory.hpp:77] Creating layer loss
I0426 20:50:31.244295 31772 net.cpp:124] Setting up loss
I0426 20:50:31.244305 31772 net.cpp:131] Top shape: (1)
I0426 20:50:31.244309 31772 net.cpp:134]     with loss weight 1
I0426 20:50:31.244325 31772 net.cpp:139] Memory required for data: 2356484
I0426 20:50:31.244329 31772 net.cpp:200] loss needs backward computation.
I0426 20:50:31.244333 31772 net.cpp:200] relu3 needs backward computation.
I0426 20:50:31.244336 31772 net.cpp:200] ip3 needs backward computation.
I0426 20:50:31.244340 31772 net.cpp:200] relu2 needs backward computation.
I0426 20:50:31.244343 31772 net.cpp:200] ip2 needs backward computation.
I0426 20:50:31.244348 31772 net.cpp:200] relu1 needs backward computation.
I0426 20:50:31.244350 31772 net.cpp:200] ip1 needs backward computation.
I0426 20:50:31.244354 31772 net.cpp:200] pool1 needs backward computation.
I0426 20:50:31.244357 31772 net.cpp:200] conv1 needs backward computation.
I0426 20:50:31.244361 31772 net.cpp:200] pool0 needs backward computation.
I0426 20:50:31.244365 31772 net.cpp:200] conv0 needs backward computation.
I0426 20:50:31.244369 31772 net.cpp:202] mnist does not need backward computation.
I0426 20:50:31.244372 31772 net.cpp:244] This network produces output loss
I0426 20:50:31.244384 31772 net.cpp:257] Network initialization done.
I0426 20:50:31.244770 31772 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test62.prototxt
I0426 20:50:31.244801 31772 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:31.244916 31772 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:31.245015 31772 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:31.245064 31772 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:31.245081 31772 net.cpp:86] Creating Layer mnist
I0426 20:50:31.245088 31772 net.cpp:382] mnist -> data
I0426 20:50:31.245098 31772 net.cpp:382] mnist -> label
I0426 20:50:31.245201 31772 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:31.247465 31772 net.cpp:124] Setting up mnist
I0426 20:50:31.247481 31772 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:31.247488 31772 net.cpp:131] Top shape: 100 (100)
I0426 20:50:31.247491 31772 net.cpp:139] Memory required for data: 314000
I0426 20:50:31.247495 31772 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:31.247503 31772 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:31.247508 31772 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:31.247514 31772 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:31.247521 31772 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:31.247581 31772 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:31.247588 31772 net.cpp:131] Top shape: 100 (100)
I0426 20:50:31.247593 31772 net.cpp:131] Top shape: 100 (100)
I0426 20:50:31.247597 31772 net.cpp:139] Memory required for data: 314800
I0426 20:50:31.247601 31772 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:31.247611 31772 net.cpp:86] Creating Layer conv0
I0426 20:50:31.247617 31772 net.cpp:408] conv0 <- data
I0426 20:50:31.247622 31772 net.cpp:382] conv0 -> conv0
I0426 20:50:31.249572 31772 net.cpp:124] Setting up conv0
I0426 20:50:31.249589 31772 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:31.249594 31772 net.cpp:139] Memory required for data: 2618800
I0426 20:50:31.249605 31772 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:31.249613 31772 net.cpp:86] Creating Layer pool0
I0426 20:50:31.249616 31772 net.cpp:408] pool0 <- conv0
I0426 20:50:31.249622 31772 net.cpp:382] pool0 -> pool0
I0426 20:50:31.249665 31772 net.cpp:124] Setting up pool0
I0426 20:50:31.249672 31772 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:31.249676 31772 net.cpp:139] Memory required for data: 3194800
I0426 20:50:31.249680 31772 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:31.249689 31772 net.cpp:86] Creating Layer conv1
I0426 20:50:31.249696 31772 net.cpp:408] conv1 <- pool0
I0426 20:50:31.249702 31772 net.cpp:382] conv1 -> conv1
I0426 20:50:31.252243 31772 net.cpp:124] Setting up conv1
I0426 20:50:31.252259 31772 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:31.252264 31772 net.cpp:139] Memory required for data: 3450800
I0426 20:50:31.252274 31772 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:31.252281 31772 net.cpp:86] Creating Layer pool1
I0426 20:50:31.252285 31772 net.cpp:408] pool1 <- conv1
I0426 20:50:31.252291 31772 net.cpp:382] pool1 -> pool1
I0426 20:50:31.252341 31772 net.cpp:124] Setting up pool1
I0426 20:50:31.252349 31772 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:31.252352 31772 net.cpp:139] Memory required for data: 3514800
I0426 20:50:31.252357 31772 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:31.252364 31772 net.cpp:86] Creating Layer ip1
I0426 20:50:31.252372 31772 net.cpp:408] ip1 <- pool1
I0426 20:50:31.252377 31772 net.cpp:382] ip1 -> ip1
I0426 20:50:31.252611 31772 net.cpp:124] Setting up ip1
I0426 20:50:31.252622 31772 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:31.252640 31772 net.cpp:139] Memory required for data: 3554800
I0426 20:50:31.252648 31772 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:31.252657 31772 net.cpp:86] Creating Layer relu1
I0426 20:50:31.252661 31772 net.cpp:408] relu1 <- ip1
I0426 20:50:31.252666 31772 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:31.252867 31772 net.cpp:124] Setting up relu1
I0426 20:50:31.252878 31772 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:31.252882 31772 net.cpp:139] Memory required for data: 3594800
I0426 20:50:31.252887 31772 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:31.252895 31772 net.cpp:86] Creating Layer ip2
I0426 20:50:31.252899 31772 net.cpp:408] ip2 <- ip1
I0426 20:50:31.252905 31772 net.cpp:382] ip2 -> ip2
I0426 20:50:31.253077 31772 net.cpp:124] Setting up ip2
I0426 20:50:31.253085 31772 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:31.253090 31772 net.cpp:139] Memory required for data: 3634800
I0426 20:50:31.253096 31772 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:31.253103 31772 net.cpp:86] Creating Layer relu2
I0426 20:50:31.253108 31772 net.cpp:408] relu2 <- ip2
I0426 20:50:31.253113 31772 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:31.253304 31772 net.cpp:124] Setting up relu2
I0426 20:50:31.253314 31772 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:31.253319 31772 net.cpp:139] Memory required for data: 3674800
I0426 20:50:31.253322 31772 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:31.253329 31772 net.cpp:86] Creating Layer ip3
I0426 20:50:31.253332 31772 net.cpp:408] ip3 <- ip2
I0426 20:50:31.253338 31772 net.cpp:382] ip3 -> ip3
I0426 20:50:31.253473 31772 net.cpp:124] Setting up ip3
I0426 20:50:31.253480 31772 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:31.253484 31772 net.cpp:139] Memory required for data: 3678800
I0426 20:50:31.253494 31772 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:31.253499 31772 net.cpp:86] Creating Layer relu3
I0426 20:50:31.253502 31772 net.cpp:408] relu3 <- ip3
I0426 20:50:31.253507 31772 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:31.254494 31772 net.cpp:124] Setting up relu3
I0426 20:50:31.254509 31772 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:31.254513 31772 net.cpp:139] Memory required for data: 3682800
I0426 20:50:31.254518 31772 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:31.254525 31772 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:31.254529 31772 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:31.254535 31772 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:31.254544 31772 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:31.254586 31772 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:31.254592 31772 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:31.254597 31772 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:31.254601 31772 net.cpp:139] Memory required for data: 3690800
I0426 20:50:31.254604 31772 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:31.254609 31772 net.cpp:86] Creating Layer accuracy
I0426 20:50:31.254613 31772 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:31.254618 31772 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:31.254624 31772 net.cpp:382] accuracy -> accuracy
I0426 20:50:31.254632 31772 net.cpp:124] Setting up accuracy
I0426 20:50:31.254637 31772 net.cpp:131] Top shape: (1)
I0426 20:50:31.254640 31772 net.cpp:139] Memory required for data: 3690804
I0426 20:50:31.254644 31772 layer_factory.hpp:77] Creating layer loss
I0426 20:50:31.254649 31772 net.cpp:86] Creating Layer loss
I0426 20:50:31.254653 31772 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:31.254658 31772 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:31.254664 31772 net.cpp:382] loss -> loss
I0426 20:50:31.254672 31772 layer_factory.hpp:77] Creating layer loss
I0426 20:50:31.254932 31772 net.cpp:124] Setting up loss
I0426 20:50:31.254942 31772 net.cpp:131] Top shape: (1)
I0426 20:50:31.254947 31772 net.cpp:134]     with loss weight 1
I0426 20:50:31.254967 31772 net.cpp:139] Memory required for data: 3690808
I0426 20:50:31.254972 31772 net.cpp:200] loss needs backward computation.
I0426 20:50:31.254977 31772 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:31.254982 31772 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:31.254987 31772 net.cpp:200] relu3 needs backward computation.
I0426 20:50:31.254990 31772 net.cpp:200] ip3 needs backward computation.
I0426 20:50:31.254993 31772 net.cpp:200] relu2 needs backward computation.
I0426 20:50:31.254997 31772 net.cpp:200] ip2 needs backward computation.
I0426 20:50:31.255002 31772 net.cpp:200] relu1 needs backward computation.
I0426 20:50:31.255005 31772 net.cpp:200] ip1 needs backward computation.
I0426 20:50:31.255009 31772 net.cpp:200] pool1 needs backward computation.
I0426 20:50:31.255012 31772 net.cpp:200] conv1 needs backward computation.
I0426 20:50:31.255017 31772 net.cpp:200] pool0 needs backward computation.
I0426 20:50:31.255020 31772 net.cpp:200] conv0 needs backward computation.
I0426 20:50:31.255033 31772 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:31.255038 31772 net.cpp:202] mnist does not need backward computation.
I0426 20:50:31.255043 31772 net.cpp:244] This network produces output accuracy
I0426 20:50:31.255046 31772 net.cpp:244] This network produces output loss
I0426 20:50:31.255059 31772 net.cpp:257] Network initialization done.
I0426 20:50:31.255110 31772 solver.cpp:56] Solver scaffolding done.
I0426 20:50:31.255537 31772 caffe.cpp:248] Starting Optimization
I0426 20:50:31.255543 31772 solver.cpp:273] Solving LeNet
I0426 20:50:31.255548 31772 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:31.256609 31772 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:31.261315 31772 blocking_queue.cpp:49] Waiting for data
I0426 20:50:31.333034 31779 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:31.333608 31772 solver.cpp:398]     Test net output #0: accuracy = 0.0463
I0426 20:50:31.333633 31772 solver.cpp:398]     Test net output #1: loss = 2.31266 (* 1 = 2.31266 loss)
I0426 20:50:31.336571 31772 solver.cpp:219] Iteration 0 (-2.88742e-31 iter/s, 0.0809902s/100 iters), loss = 2.313
I0426 20:50:31.336604 31772 solver.cpp:238]     Train net output #0: loss = 2.313 (* 1 = 2.313 loss)
I0426 20:50:31.336618 31772 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:31.422860 31772 solver.cpp:219] Iteration 100 (1159.45 iter/s, 0.0862474s/100 iters), loss = 0.942205
I0426 20:50:31.422888 31772 solver.cpp:238]     Train net output #0: loss = 0.942205 (* 1 = 0.942205 loss)
I0426 20:50:31.422895 31772 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:31.508227 31772 solver.cpp:219] Iteration 200 (1171.91 iter/s, 0.085331s/100 iters), loss = 0.278699
I0426 20:50:31.508267 31772 solver.cpp:238]     Train net output #0: loss = 0.278699 (* 1 = 0.278699 loss)
I0426 20:50:31.508273 31772 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:31.593150 31772 solver.cpp:219] Iteration 300 (1178.01 iter/s, 0.0848886s/100 iters), loss = 0.439678
I0426 20:50:31.593175 31772 solver.cpp:238]     Train net output #0: loss = 0.439678 (* 1 = 0.439678 loss)
I0426 20:50:31.593181 31772 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:31.678365 31772 solver.cpp:219] Iteration 400 (1173.98 iter/s, 0.0851804s/100 iters), loss = 0.244138
I0426 20:50:31.678403 31772 solver.cpp:238]     Train net output #0: loss = 0.244138 (* 1 = 0.244138 loss)
I0426 20:50:31.678411 31772 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:31.763239 31772 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:31.816704 31779 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:31.817261 31772 solver.cpp:398]     Test net output #0: accuracy = 0.8672
I0426 20:50:31.817296 31772 solver.cpp:398]     Test net output #1: loss = 0.349088 (* 1 = 0.349088 loss)
I0426 20:50:31.818197 31772 solver.cpp:219] Iteration 500 (715.331 iter/s, 0.139795s/100 iters), loss = 0.269333
I0426 20:50:31.818269 31772 solver.cpp:238]     Train net output #0: loss = 0.269333 (* 1 = 0.269333 loss)
I0426 20:50:31.818276 31772 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:31.909903 31772 solver.cpp:219] Iteration 600 (1091.38 iter/s, 0.0916268s/100 iters), loss = 0.3796
I0426 20:50:31.909942 31772 solver.cpp:238]     Train net output #0: loss = 0.379599 (* 1 = 0.379599 loss)
I0426 20:50:31.909948 31772 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:31.996803 31772 solver.cpp:219] Iteration 700 (1151.39 iter/s, 0.0868516s/100 iters), loss = 0.535587
I0426 20:50:31.996865 31772 solver.cpp:238]     Train net output #0: loss = 0.535587 (* 1 = 0.535587 loss)
I0426 20:50:31.996871 31772 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:32.082710 31772 solver.cpp:219] Iteration 800 (1165 iter/s, 0.0858368s/100 iters), loss = 0.461145
I0426 20:50:32.082751 31772 solver.cpp:238]     Train net output #0: loss = 0.461145 (* 1 = 0.461145 loss)
I0426 20:50:32.082757 31772 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:32.168459 31772 solver.cpp:219] Iteration 900 (1166.66 iter/s, 0.0857149s/100 iters), loss = 0.410888
I0426 20:50:32.168499 31772 solver.cpp:238]     Train net output #0: loss = 0.410888 (* 1 = 0.410888 loss)
I0426 20:50:32.168506 31772 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:32.196818 31778 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:32.252496 31772 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:32.253612 31772 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:32.254324 31772 solver.cpp:311] Iteration 1000, loss = 0.40745
I0426 20:50:32.254339 31772 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:32.329732 31779 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:32.330296 31772 solver.cpp:398]     Test net output #0: accuracy = 0.8772
I0426 20:50:32.330314 31772 solver.cpp:398]     Test net output #1: loss = 0.310801 (* 1 = 0.310801 loss)
I0426 20:50:32.330319 31772 solver.cpp:316] Optimization Done.
I0426 20:50:32.330322 31772 caffe.cpp:259] Optimization Done.
