I0426 20:48:23.141075 31232 caffe.cpp:218] Using GPUs 0
I0426 20:48:23.171834 31232 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:23.623076 31232 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test4.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:23.623208 31232 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test4.prototxt
I0426 20:48:23.623447 31232 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:23.623458 31232 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:23.623512 31232 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:48:23.623561 31232 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:23.623643 31232 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:23.623662 31232 net.cpp:86] Creating Layer mnist
I0426 20:48:23.623669 31232 net.cpp:382] mnist -> data
I0426 20:48:23.623688 31232 net.cpp:382] mnist -> label
I0426 20:48:23.624626 31232 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:23.626776 31232 net.cpp:124] Setting up mnist
I0426 20:48:23.626790 31232 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:23.626794 31232 net.cpp:131] Top shape: 64 (64)
I0426 20:48:23.626796 31232 net.cpp:139] Memory required for data: 200960
I0426 20:48:23.626802 31232 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:23.626840 31232 net.cpp:86] Creating Layer ip1
I0426 20:48:23.626860 31232 net.cpp:408] ip1 <- data
I0426 20:48:23.626870 31232 net.cpp:382] ip1 -> ip1
I0426 20:48:23.630105 31232 net.cpp:124] Setting up ip1
I0426 20:48:23.630117 31232 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:23.630120 31232 net.cpp:139] Memory required for data: 277760
I0426 20:48:23.630132 31232 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:23.630154 31232 net.cpp:86] Creating Layer relu1
I0426 20:48:23.630157 31232 net.cpp:408] relu1 <- ip1
I0426 20:48:23.630164 31232 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:23.861650 31232 net.cpp:124] Setting up relu1
I0426 20:48:23.861696 31232 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:23.861699 31232 net.cpp:139] Memory required for data: 354560
I0426 20:48:23.861706 31232 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:23.861717 31232 net.cpp:86] Creating Layer ip2
I0426 20:48:23.861721 31232 net.cpp:408] ip2 <- ip1
I0426 20:48:23.861744 31232 net.cpp:382] ip2 -> ip2
I0426 20:48:23.862821 31232 net.cpp:124] Setting up ip2
I0426 20:48:23.862848 31232 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:23.862853 31232 net.cpp:139] Memory required for data: 357120
I0426 20:48:23.862861 31232 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:23.862900 31232 net.cpp:86] Creating Layer relu2
I0426 20:48:23.862903 31232 net.cpp:408] relu2 <- ip2
I0426 20:48:23.862908 31232 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:23.863752 31232 net.cpp:124] Setting up relu2
I0426 20:48:23.863780 31232 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:23.863783 31232 net.cpp:139] Memory required for data: 359680
I0426 20:48:23.863786 31232 layer_factory.hpp:77] Creating layer loss
I0426 20:48:23.863795 31232 net.cpp:86] Creating Layer loss
I0426 20:48:23.863797 31232 net.cpp:408] loss <- ip2
I0426 20:48:23.863802 31232 net.cpp:408] loss <- label
I0426 20:48:23.863822 31232 net.cpp:382] loss -> loss
I0426 20:48:23.863838 31232 layer_factory.hpp:77] Creating layer loss
I0426 20:48:23.864094 31232 net.cpp:124] Setting up loss
I0426 20:48:23.864104 31232 net.cpp:131] Top shape: (1)
I0426 20:48:23.864107 31232 net.cpp:134]     with loss weight 1
I0426 20:48:23.864125 31232 net.cpp:139] Memory required for data: 359684
I0426 20:48:23.864128 31232 net.cpp:200] loss needs backward computation.
I0426 20:48:23.864132 31232 net.cpp:200] relu2 needs backward computation.
I0426 20:48:23.864135 31232 net.cpp:200] ip2 needs backward computation.
I0426 20:48:23.864138 31232 net.cpp:200] relu1 needs backward computation.
I0426 20:48:23.864142 31232 net.cpp:200] ip1 needs backward computation.
I0426 20:48:23.864145 31232 net.cpp:202] mnist does not need backward computation.
I0426 20:48:23.864148 31232 net.cpp:244] This network produces output loss
I0426 20:48:23.864156 31232 net.cpp:257] Network initialization done.
I0426 20:48:23.864351 31232 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test4.prototxt
I0426 20:48:23.864370 31232 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:23.864447 31232 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:48:23.864498 31232 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:23.864544 31232 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:23.864557 31232 net.cpp:86] Creating Layer mnist
I0426 20:48:23.864562 31232 net.cpp:382] mnist -> data
I0426 20:48:23.864569 31232 net.cpp:382] mnist -> label
I0426 20:48:23.864652 31232 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:23.866684 31232 net.cpp:124] Setting up mnist
I0426 20:48:23.866713 31232 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:23.866717 31232 net.cpp:131] Top shape: 100 (100)
I0426 20:48:23.866720 31232 net.cpp:139] Memory required for data: 314000
I0426 20:48:23.866724 31232 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:23.866760 31232 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:23.866765 31232 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:23.866768 31232 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:23.866785 31232 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:23.866890 31232 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:23.866897 31232 net.cpp:131] Top shape: 100 (100)
I0426 20:48:23.866901 31232 net.cpp:131] Top shape: 100 (100)
I0426 20:48:23.866904 31232 net.cpp:139] Memory required for data: 314800
I0426 20:48:23.866907 31232 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:23.866914 31232 net.cpp:86] Creating Layer ip1
I0426 20:48:23.866917 31232 net.cpp:408] ip1 <- data
I0426 20:48:23.866922 31232 net.cpp:382] ip1 -> ip1
I0426 20:48:23.868371 31232 net.cpp:124] Setting up ip1
I0426 20:48:23.868379 31232 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:23.868382 31232 net.cpp:139] Memory required for data: 434800
I0426 20:48:23.868391 31232 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:23.868412 31232 net.cpp:86] Creating Layer relu1
I0426 20:48:23.868414 31232 net.cpp:408] relu1 <- ip1
I0426 20:48:23.868418 31232 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:23.868623 31232 net.cpp:124] Setting up relu1
I0426 20:48:23.868633 31232 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:23.868635 31232 net.cpp:139] Memory required for data: 554800
I0426 20:48:23.868638 31232 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:23.868646 31232 net.cpp:86] Creating Layer ip2
I0426 20:48:23.868649 31232 net.cpp:408] ip2 <- ip1
I0426 20:48:23.868654 31232 net.cpp:382] ip2 -> ip2
I0426 20:48:23.868793 31232 net.cpp:124] Setting up ip2
I0426 20:48:23.868799 31232 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:23.868803 31232 net.cpp:139] Memory required for data: 558800
I0426 20:48:23.868816 31232 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:23.868836 31232 net.cpp:86] Creating Layer relu2
I0426 20:48:23.868840 31232 net.cpp:408] relu2 <- ip2
I0426 20:48:23.868844 31232 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:23.869722 31232 net.cpp:124] Setting up relu2
I0426 20:48:23.869735 31232 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:23.869737 31232 net.cpp:139] Memory required for data: 562800
I0426 20:48:23.869741 31232 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0426 20:48:23.869746 31232 net.cpp:86] Creating Layer ip2_relu2_0_split
I0426 20:48:23.869750 31232 net.cpp:408] ip2_relu2_0_split <- ip2
I0426 20:48:23.869755 31232 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0426 20:48:23.869760 31232 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0426 20:48:23.869806 31232 net.cpp:124] Setting up ip2_relu2_0_split
I0426 20:48:23.869812 31232 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:23.869817 31232 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:23.869830 31232 net.cpp:139] Memory required for data: 570800
I0426 20:48:23.869833 31232 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:23.869838 31232 net.cpp:86] Creating Layer accuracy
I0426 20:48:23.869841 31232 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0426 20:48:23.869845 31232 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:23.869849 31232 net.cpp:382] accuracy -> accuracy
I0426 20:48:23.869861 31232 net.cpp:124] Setting up accuracy
I0426 20:48:23.869866 31232 net.cpp:131] Top shape: (1)
I0426 20:48:23.869869 31232 net.cpp:139] Memory required for data: 570804
I0426 20:48:23.869873 31232 layer_factory.hpp:77] Creating layer loss
I0426 20:48:23.869877 31232 net.cpp:86] Creating Layer loss
I0426 20:48:23.869880 31232 net.cpp:408] loss <- ip2_relu2_0_split_1
I0426 20:48:23.869884 31232 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:23.869887 31232 net.cpp:382] loss -> loss
I0426 20:48:23.869894 31232 layer_factory.hpp:77] Creating layer loss
I0426 20:48:23.870115 31232 net.cpp:124] Setting up loss
I0426 20:48:23.870123 31232 net.cpp:131] Top shape: (1)
I0426 20:48:23.870127 31232 net.cpp:134]     with loss weight 1
I0426 20:48:23.870133 31232 net.cpp:139] Memory required for data: 570808
I0426 20:48:23.870136 31232 net.cpp:200] loss needs backward computation.
I0426 20:48:23.870151 31232 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:23.870154 31232 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0426 20:48:23.870164 31232 net.cpp:200] relu2 needs backward computation.
I0426 20:48:23.870167 31232 net.cpp:200] ip2 needs backward computation.
I0426 20:48:23.870170 31232 net.cpp:200] relu1 needs backward computation.
I0426 20:48:23.870172 31232 net.cpp:200] ip1 needs backward computation.
I0426 20:48:23.870177 31232 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:23.870187 31232 net.cpp:202] mnist does not need backward computation.
I0426 20:48:23.870188 31232 net.cpp:244] This network produces output accuracy
I0426 20:48:23.870193 31232 net.cpp:244] This network produces output loss
I0426 20:48:23.870201 31232 net.cpp:257] Network initialization done.
I0426 20:48:23.870227 31232 solver.cpp:56] Solver scaffolding done.
I0426 20:48:23.870360 31232 caffe.cpp:248] Starting Optimization
I0426 20:48:23.870368 31232 solver.cpp:273] Solving LeNet
I0426 20:48:23.870370 31232 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:23.872383 31232 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:23.874230 31232 blocking_queue.cpp:49] Waiting for data
I0426 20:48:23.948729 31244 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:23.949281 31232 solver.cpp:398]     Test net output #0: accuracy = 0.1077
I0426 20:48:23.949316 31232 solver.cpp:398]     Test net output #1: loss = 2.30181 (* 1 = 2.30181 loss)
I0426 20:48:23.950093 31232 solver.cpp:219] Iteration 0 (0 iter/s, 0.0796969s/100 iters), loss = 2.31459
I0426 20:48:23.950130 31232 solver.cpp:238]     Train net output #0: loss = 2.31459 (* 1 = 2.31459 loss)
I0426 20:48:23.950146 31232 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:24.010216 31232 solver.cpp:219] Iteration 100 (1664.5 iter/s, 0.0600781s/100 iters), loss = 1.00268
I0426 20:48:24.010254 31232 solver.cpp:238]     Train net output #0: loss = 1.00268 (* 1 = 1.00268 loss)
I0426 20:48:24.010270 31232 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:24.059379 31232 solver.cpp:219] Iteration 200 (2035.9 iter/s, 0.0491182s/100 iters), loss = 0.948645
I0426 20:48:24.059407 31232 solver.cpp:238]     Train net output #0: loss = 0.948645 (* 1 = 0.948645 loss)
I0426 20:48:24.059419 31232 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:24.103339 31232 solver.cpp:219] Iteration 300 (2276.63 iter/s, 0.0439245s/100 iters), loss = 0.789747
I0426 20:48:24.103363 31232 solver.cpp:238]     Train net output #0: loss = 0.789747 (* 1 = 0.789747 loss)
I0426 20:48:24.103369 31232 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:24.145774 31232 solver.cpp:219] Iteration 400 (2358.28 iter/s, 0.0424038s/100 iters), loss = 0.349528
I0426 20:48:24.145794 31232 solver.cpp:238]     Train net output #0: loss = 0.349528 (* 1 = 0.349528 loss)
I0426 20:48:24.145800 31232 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:24.198567 31232 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:24.250708 31244 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:24.251137 31232 solver.cpp:398]     Test net output #0: accuracy = 0.9157
I0426 20:48:24.251169 31232 solver.cpp:398]     Test net output #1: loss = 0.307808 (* 1 = 0.307808 loss)
I0426 20:48:24.251695 31232 solver.cpp:219] Iteration 500 (944.387 iter/s, 0.105889s/100 iters), loss = 0.335031
I0426 20:48:24.251731 31232 solver.cpp:238]     Train net output #0: loss = 0.335031 (* 1 = 0.335031 loss)
I0426 20:48:24.251756 31232 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:24.311764 31232 solver.cpp:219] Iteration 600 (1665.98 iter/s, 0.0600248s/100 iters), loss = 0.201692
I0426 20:48:24.311815 31232 solver.cpp:238]     Train net output #0: loss = 0.201692 (* 1 = 0.201692 loss)
I0426 20:48:24.311828 31232 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:24.365397 31232 solver.cpp:219] Iteration 700 (1866.45 iter/s, 0.0535777s/100 iters), loss = 0.43472
I0426 20:48:24.365455 31232 solver.cpp:238]     Train net output #0: loss = 0.43472 (* 1 = 0.43472 loss)
I0426 20:48:24.365468 31232 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:24.413111 31232 solver.cpp:219] Iteration 800 (2098.82 iter/s, 0.0476458s/100 iters), loss = 0.311095
I0426 20:48:24.413142 31232 solver.cpp:238]     Train net output #0: loss = 0.311095 (* 1 = 0.311095 loss)
I0426 20:48:24.413151 31232 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:24.456378 31232 solver.cpp:219] Iteration 900 (2313.25 iter/s, 0.0432292s/100 iters), loss = 0.383719
I0426 20:48:24.456406 31232 solver.cpp:238]     Train net output #0: loss = 0.383719 (* 1 = 0.383719 loss)
I0426 20:48:24.456414 31232 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:24.470912 31243 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:24.498710 31232 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:24.502512 31232 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:24.504621 31232 solver.cpp:311] Iteration 1000, loss = 0.274862
I0426 20:48:24.504639 31232 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:24.579766 31244 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:24.580178 31232 solver.cpp:398]     Test net output #0: accuracy = 0.9335
I0426 20:48:24.580200 31232 solver.cpp:398]     Test net output #1: loss = 0.233297 (* 1 = 0.233297 loss)
I0426 20:48:24.580206 31232 solver.cpp:316] Optimization Done.
I0426 20:48:24.580210 31232 caffe.cpp:259] Optimization Done.
