I0426 20:50:12.206274 31705 caffe.cpp:218] Using GPUs 0
I0426 20:50:12.239650 31705 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:12.700844 31705 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test54.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:12.701011 31705 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test54.prototxt
I0426 20:50:12.701406 31705 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:12.701434 31705 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:12.701521 31705 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:12.701611 31705 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:12.701694 31705 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:12.701714 31705 net.cpp:86] Creating Layer mnist
I0426 20:50:12.701721 31705 net.cpp:382] mnist -> data
I0426 20:50:12.701740 31705 net.cpp:382] mnist -> label
I0426 20:50:12.702682 31705 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:12.704831 31705 net.cpp:124] Setting up mnist
I0426 20:50:12.704876 31705 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:12.704923 31705 net.cpp:131] Top shape: 64 (64)
I0426 20:50:12.704926 31705 net.cpp:139] Memory required for data: 200960
I0426 20:50:12.704932 31705 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:12.704946 31705 net.cpp:86] Creating Layer conv0
I0426 20:50:12.704952 31705 net.cpp:408] conv0 <- data
I0426 20:50:12.704962 31705 net.cpp:382] conv0 -> conv0
I0426 20:50:12.935467 31705 net.cpp:124] Setting up conv0
I0426 20:50:12.935492 31705 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:50:12.935497 31705 net.cpp:139] Memory required for data: 7573760
I0426 20:50:12.935511 31705 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:12.935523 31705 net.cpp:86] Creating Layer pool0
I0426 20:50:12.935544 31705 net.cpp:408] pool0 <- conv0
I0426 20:50:12.935565 31705 net.cpp:382] pool0 -> pool0
I0426 20:50:12.935611 31705 net.cpp:124] Setting up pool0
I0426 20:50:12.935616 31705 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:50:12.935618 31705 net.cpp:139] Memory required for data: 9416960
I0426 20:50:12.935621 31705 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:12.935631 31705 net.cpp:86] Creating Layer ip1
I0426 20:50:12.935633 31705 net.cpp:408] ip1 <- pool0
I0426 20:50:12.935637 31705 net.cpp:382] ip1 -> ip1
I0426 20:50:12.949041 31705 net.cpp:124] Setting up ip1
I0426 20:50:12.949055 31705 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:12.949060 31705 net.cpp:139] Memory required for data: 9493760
I0426 20:50:12.949069 31705 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:12.949077 31705 net.cpp:86] Creating Layer relu1
I0426 20:50:12.949096 31705 net.cpp:408] relu1 <- ip1
I0426 20:50:12.949101 31705 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:12.949337 31705 net.cpp:124] Setting up relu1
I0426 20:50:12.949347 31705 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:12.949350 31705 net.cpp:139] Memory required for data: 9570560
I0426 20:50:12.949353 31705 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:12.949360 31705 net.cpp:86] Creating Layer ip2
I0426 20:50:12.949363 31705 net.cpp:408] ip2 <- ip1
I0426 20:50:12.949368 31705 net.cpp:382] ip2 -> ip2
I0426 20:50:12.950829 31705 net.cpp:124] Setting up ip2
I0426 20:50:12.950840 31705 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:12.950844 31705 net.cpp:139] Memory required for data: 9647360
I0426 20:50:12.950851 31705 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:12.950856 31705 net.cpp:86] Creating Layer relu2
I0426 20:50:12.950860 31705 net.cpp:408] relu2 <- ip2
I0426 20:50:12.950866 31705 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:12.951696 31705 net.cpp:124] Setting up relu2
I0426 20:50:12.951725 31705 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:12.951728 31705 net.cpp:139] Memory required for data: 9724160
I0426 20:50:12.951731 31705 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:12.951738 31705 net.cpp:86] Creating Layer ip3
I0426 20:50:12.951741 31705 net.cpp:408] ip3 <- ip2
I0426 20:50:12.951747 31705 net.cpp:382] ip3 -> ip3
I0426 20:50:12.951879 31705 net.cpp:124] Setting up ip3
I0426 20:50:12.951887 31705 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:12.951890 31705 net.cpp:139] Memory required for data: 9726720
I0426 20:50:12.951895 31705 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:12.951903 31705 net.cpp:86] Creating Layer relu3
I0426 20:50:12.951906 31705 net.cpp:408] relu3 <- ip3
I0426 20:50:12.951910 31705 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:12.952057 31705 net.cpp:124] Setting up relu3
I0426 20:50:12.952065 31705 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:12.952069 31705 net.cpp:139] Memory required for data: 9729280
I0426 20:50:12.952072 31705 layer_factory.hpp:77] Creating layer loss
I0426 20:50:12.952080 31705 net.cpp:86] Creating Layer loss
I0426 20:50:12.952082 31705 net.cpp:408] loss <- ip3
I0426 20:50:12.952086 31705 net.cpp:408] loss <- label
I0426 20:50:12.952092 31705 net.cpp:382] loss -> loss
I0426 20:50:12.952106 31705 layer_factory.hpp:77] Creating layer loss
I0426 20:50:12.952353 31705 net.cpp:124] Setting up loss
I0426 20:50:12.952363 31705 net.cpp:131] Top shape: (1)
I0426 20:50:12.952365 31705 net.cpp:134]     with loss weight 1
I0426 20:50:12.952379 31705 net.cpp:139] Memory required for data: 9729284
I0426 20:50:12.952383 31705 net.cpp:200] loss needs backward computation.
I0426 20:50:12.952386 31705 net.cpp:200] relu3 needs backward computation.
I0426 20:50:12.952389 31705 net.cpp:200] ip3 needs backward computation.
I0426 20:50:12.952392 31705 net.cpp:200] relu2 needs backward computation.
I0426 20:50:12.952395 31705 net.cpp:200] ip2 needs backward computation.
I0426 20:50:12.952399 31705 net.cpp:200] relu1 needs backward computation.
I0426 20:50:12.952400 31705 net.cpp:200] ip1 needs backward computation.
I0426 20:50:12.952415 31705 net.cpp:200] pool0 needs backward computation.
I0426 20:50:12.952419 31705 net.cpp:200] conv0 needs backward computation.
I0426 20:50:12.952422 31705 net.cpp:202] mnist does not need backward computation.
I0426 20:50:12.952425 31705 net.cpp:244] This network produces output loss
I0426 20:50:12.952433 31705 net.cpp:257] Network initialization done.
I0426 20:50:12.952719 31705 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test54.prototxt
I0426 20:50:12.952745 31705 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:12.952846 31705 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:12.952915 31705 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:12.952960 31705 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:12.952975 31705 net.cpp:86] Creating Layer mnist
I0426 20:50:12.952982 31705 net.cpp:382] mnist -> data
I0426 20:50:12.952991 31705 net.cpp:382] mnist -> label
I0426 20:50:12.953079 31705 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:12.954291 31705 net.cpp:124] Setting up mnist
I0426 20:50:12.954304 31705 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:12.954319 31705 net.cpp:131] Top shape: 100 (100)
I0426 20:50:12.954322 31705 net.cpp:139] Memory required for data: 314000
I0426 20:50:12.954326 31705 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:12.954334 31705 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:12.954336 31705 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:12.954341 31705 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:12.954347 31705 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:12.954439 31705 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:12.954447 31705 net.cpp:131] Top shape: 100 (100)
I0426 20:50:12.954452 31705 net.cpp:131] Top shape: 100 (100)
I0426 20:50:12.954454 31705 net.cpp:139] Memory required for data: 314800
I0426 20:50:12.954468 31705 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:12.954478 31705 net.cpp:86] Creating Layer conv0
I0426 20:50:12.954480 31705 net.cpp:408] conv0 <- data
I0426 20:50:12.954488 31705 net.cpp:382] conv0 -> conv0
I0426 20:50:12.956130 31705 net.cpp:124] Setting up conv0
I0426 20:50:12.956143 31705 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:50:12.956161 31705 net.cpp:139] Memory required for data: 11834800
I0426 20:50:12.956171 31705 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:12.956179 31705 net.cpp:86] Creating Layer pool0
I0426 20:50:12.956183 31705 net.cpp:408] pool0 <- conv0
I0426 20:50:12.956187 31705 net.cpp:382] pool0 -> pool0
I0426 20:50:12.956240 31705 net.cpp:124] Setting up pool0
I0426 20:50:12.956245 31705 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:50:12.956248 31705 net.cpp:139] Memory required for data: 14714800
I0426 20:50:12.956251 31705 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:12.956259 31705 net.cpp:86] Creating Layer ip1
I0426 20:50:12.956261 31705 net.cpp:408] ip1 <- pool0
I0426 20:50:12.956266 31705 net.cpp:382] ip1 -> ip1
I0426 20:50:12.969880 31705 net.cpp:124] Setting up ip1
I0426 20:50:12.969908 31705 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:12.969913 31705 net.cpp:139] Memory required for data: 14834800
I0426 20:50:12.969920 31705 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:12.969928 31705 net.cpp:86] Creating Layer relu1
I0426 20:50:12.969931 31705 net.cpp:408] relu1 <- ip1
I0426 20:50:12.969936 31705 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:12.970144 31705 net.cpp:124] Setting up relu1
I0426 20:50:12.970154 31705 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:12.970156 31705 net.cpp:139] Memory required for data: 14954800
I0426 20:50:12.970160 31705 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:12.970165 31705 net.cpp:86] Creating Layer ip2
I0426 20:50:12.970168 31705 net.cpp:408] ip2 <- ip1
I0426 20:50:12.970173 31705 net.cpp:382] ip2 -> ip2
I0426 20:50:12.970909 31705 net.cpp:124] Setting up ip2
I0426 20:50:12.970919 31705 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:12.970922 31705 net.cpp:139] Memory required for data: 15074800
I0426 20:50:12.970942 31705 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:12.970984 31705 net.cpp:86] Creating Layer relu2
I0426 20:50:12.970988 31705 net.cpp:408] relu2 <- ip2
I0426 20:50:12.971009 31705 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:12.971863 31705 net.cpp:124] Setting up relu2
I0426 20:50:12.971876 31705 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:12.971881 31705 net.cpp:139] Memory required for data: 15194800
I0426 20:50:12.971884 31705 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:12.971892 31705 net.cpp:86] Creating Layer ip3
I0426 20:50:12.971895 31705 net.cpp:408] ip3 <- ip2
I0426 20:50:12.971917 31705 net.cpp:382] ip3 -> ip3
I0426 20:50:12.972039 31705 net.cpp:124] Setting up ip3
I0426 20:50:12.972048 31705 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:12.972051 31705 net.cpp:139] Memory required for data: 15198800
I0426 20:50:12.972056 31705 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:12.972061 31705 net.cpp:86] Creating Layer relu3
I0426 20:50:12.972064 31705 net.cpp:408] relu3 <- ip3
I0426 20:50:12.972071 31705 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:12.972228 31705 net.cpp:124] Setting up relu3
I0426 20:50:12.972236 31705 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:12.972239 31705 net.cpp:139] Memory required for data: 15202800
I0426 20:50:12.972244 31705 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:12.972247 31705 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:12.972250 31705 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:12.972256 31705 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:12.972261 31705 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:12.972295 31705 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:12.972302 31705 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:12.972316 31705 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:12.972319 31705 net.cpp:139] Memory required for data: 15210800
I0426 20:50:12.972322 31705 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:12.972327 31705 net.cpp:86] Creating Layer accuracy
I0426 20:50:12.972331 31705 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:12.972334 31705 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:12.972338 31705 net.cpp:382] accuracy -> accuracy
I0426 20:50:12.972345 31705 net.cpp:124] Setting up accuracy
I0426 20:50:12.972349 31705 net.cpp:131] Top shape: (1)
I0426 20:50:12.972352 31705 net.cpp:139] Memory required for data: 15210804
I0426 20:50:12.972355 31705 layer_factory.hpp:77] Creating layer loss
I0426 20:50:12.972362 31705 net.cpp:86] Creating Layer loss
I0426 20:50:12.972364 31705 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:12.972368 31705 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:12.972371 31705 net.cpp:382] loss -> loss
I0426 20:50:12.972378 31705 layer_factory.hpp:77] Creating layer loss
I0426 20:50:12.972610 31705 net.cpp:124] Setting up loss
I0426 20:50:12.972620 31705 net.cpp:131] Top shape: (1)
I0426 20:50:12.972623 31705 net.cpp:134]     with loss weight 1
I0426 20:50:12.972630 31705 net.cpp:139] Memory required for data: 15210808
I0426 20:50:12.972633 31705 net.cpp:200] loss needs backward computation.
I0426 20:50:12.972637 31705 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:12.972641 31705 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:12.972645 31705 net.cpp:200] relu3 needs backward computation.
I0426 20:50:12.972647 31705 net.cpp:200] ip3 needs backward computation.
I0426 20:50:12.972650 31705 net.cpp:200] relu2 needs backward computation.
I0426 20:50:12.972652 31705 net.cpp:200] ip2 needs backward computation.
I0426 20:50:12.972656 31705 net.cpp:200] relu1 needs backward computation.
I0426 20:50:12.972658 31705 net.cpp:200] ip1 needs backward computation.
I0426 20:50:12.972661 31705 net.cpp:200] pool0 needs backward computation.
I0426 20:50:12.972664 31705 net.cpp:200] conv0 needs backward computation.
I0426 20:50:12.972667 31705 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:12.972672 31705 net.cpp:202] mnist does not need backward computation.
I0426 20:50:12.972676 31705 net.cpp:244] This network produces output accuracy
I0426 20:50:12.972678 31705 net.cpp:244] This network produces output loss
I0426 20:50:12.972689 31705 net.cpp:257] Network initialization done.
I0426 20:50:12.972725 31705 solver.cpp:56] Solver scaffolding done.
I0426 20:50:12.973033 31705 caffe.cpp:248] Starting Optimization
I0426 20:50:12.973040 31705 solver.cpp:273] Solving LeNet
I0426 20:50:12.973043 31705 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:12.975073 31705 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:12.984920 31705 blocking_queue.cpp:49] Waiting for data
I0426 20:50:13.056083 31712 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:13.057101 31705 solver.cpp:398]     Test net output #0: accuracy = 0.0955
I0426 20:50:13.057121 31705 solver.cpp:398]     Test net output #1: loss = 2.30916 (* 1 = 2.30916 loss)
I0426 20:50:13.061522 31705 solver.cpp:219] Iteration 0 (0 iter/s, 0.0884482s/100 iters), loss = 2.31292
I0426 20:50:13.061544 31705 solver.cpp:238]     Train net output #0: loss = 2.31292 (* 1 = 2.31292 loss)
I0426 20:50:13.061556 31705 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:13.213258 31705 solver.cpp:219] Iteration 100 (659.207 iter/s, 0.151697s/100 iters), loss = 0.455319
I0426 20:50:13.213296 31705 solver.cpp:238]     Train net output #0: loss = 0.455319 (* 1 = 0.455319 loss)
I0426 20:50:13.213302 31705 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:13.364024 31705 solver.cpp:219] Iteration 200 (663.435 iter/s, 0.150731s/100 iters), loss = 0.423947
I0426 20:50:13.364048 31705 solver.cpp:238]     Train net output #0: loss = 0.423947 (* 1 = 0.423947 loss)
I0426 20:50:13.364053 31705 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:13.513736 31705 solver.cpp:219] Iteration 300 (668.114 iter/s, 0.149675s/100 iters), loss = 0.451882
I0426 20:50:13.513759 31705 solver.cpp:238]     Train net output #0: loss = 0.451882 (* 1 = 0.451882 loss)
I0426 20:50:13.513766 31705 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:13.662214 31705 solver.cpp:219] Iteration 400 (673.663 iter/s, 0.148442s/100 iters), loss = 0.489029
I0426 20:50:13.662237 31705 solver.cpp:238]     Train net output #0: loss = 0.489029 (* 1 = 0.489029 loss)
I0426 20:50:13.662243 31705 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:13.812711 31705 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:13.885331 31712 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:13.887924 31705 solver.cpp:398]     Test net output #0: accuracy = 0.9365
I0426 20:50:13.887944 31705 solver.cpp:398]     Test net output #1: loss = 0.354556 (* 1 = 0.354556 loss)
I0426 20:50:13.889109 31705 solver.cpp:219] Iteration 500 (440.808 iter/s, 0.226856s/100 iters), loss = 0.415483
I0426 20:50:13.889132 31705 solver.cpp:238]     Train net output #0: loss = 0.415483 (* 1 = 0.415483 loss)
I0426 20:50:13.889153 31705 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:14.042304 31705 solver.cpp:219] Iteration 600 (652.913 iter/s, 0.15316s/100 iters), loss = 0.24697
I0426 20:50:14.042330 31705 solver.cpp:238]     Train net output #0: loss = 0.24697 (* 1 = 0.24697 loss)
I0426 20:50:14.042352 31705 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:14.192498 31705 solver.cpp:219] Iteration 700 (665.977 iter/s, 0.150155s/100 iters), loss = 0.476288
I0426 20:50:14.192524 31705 solver.cpp:238]     Train net output #0: loss = 0.476288 (* 1 = 0.476288 loss)
I0426 20:50:14.192546 31705 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:14.341928 31705 solver.cpp:219] Iteration 800 (669.383 iter/s, 0.149391s/100 iters), loss = 0.380687
I0426 20:50:14.341953 31705 solver.cpp:238]     Train net output #0: loss = 0.380687 (* 1 = 0.380687 loss)
I0426 20:50:14.341959 31705 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:14.491170 31705 solver.cpp:219] Iteration 900 (670.218 iter/s, 0.149205s/100 iters), loss = 0.315005
I0426 20:50:14.491194 31705 solver.cpp:238]     Train net output #0: loss = 0.315005 (* 1 = 0.315005 loss)
I0426 20:50:14.491216 31705 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:14.540818 31711 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:14.637959 31705 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:14.675158 31705 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:14.689880 31705 solver.cpp:311] Iteration 1000, loss = 0.391211
I0426 20:50:14.689904 31705 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:14.771219 31712 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:14.773356 31705 solver.cpp:398]     Test net output #0: accuracy = 0.9619
I0426 20:50:14.773416 31705 solver.cpp:398]     Test net output #1: loss = 0.31555 (* 1 = 0.31555 loss)
I0426 20:50:14.773439 31705 solver.cpp:316] Optimization Done.
I0426 20:50:14.773444 31705 caffe.cpp:259] Optimization Done.
