I0426 20:49:43.369725 31587 caffe.cpp:218] Using GPUs 0
I0426 20:49:43.402163 31587 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:43.894762 31587 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test43.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:43.894894 31587 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test43.prototxt
I0426 20:49:43.895138 31587 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:43.895150 31587 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:43.895207 31587 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:49:43.895256 31587 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:43.895340 31587 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:43.895360 31587 net.cpp:86] Creating Layer mnist
I0426 20:49:43.895366 31587 net.cpp:382] mnist -> data
I0426 20:49:43.895383 31587 net.cpp:382] mnist -> label
I0426 20:49:43.896327 31587 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:43.898519 31587 net.cpp:124] Setting up mnist
I0426 20:49:43.898535 31587 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:43.898538 31587 net.cpp:131] Top shape: 64 (64)
I0426 20:49:43.898541 31587 net.cpp:139] Memory required for data: 200960
I0426 20:49:43.898546 31587 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:43.898571 31587 net.cpp:86] Creating Layer conv0
I0426 20:49:43.898576 31587 net.cpp:408] conv0 <- data
I0426 20:49:43.898586 31587 net.cpp:382] conv0 -> conv0
I0426 20:49:44.124487 31587 net.cpp:124] Setting up conv0
I0426 20:49:44.124513 31587 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:49:44.124517 31587 net.cpp:139] Memory required for data: 7573760
I0426 20:49:44.124531 31587 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:44.124543 31587 net.cpp:86] Creating Layer pool0
I0426 20:49:44.124547 31587 net.cpp:408] pool0 <- conv0
I0426 20:49:44.124553 31587 net.cpp:382] pool0 -> pool0
I0426 20:49:44.124613 31587 net.cpp:124] Setting up pool0
I0426 20:49:44.124619 31587 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:49:44.124621 31587 net.cpp:139] Memory required for data: 9416960
I0426 20:49:44.124624 31587 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:44.124631 31587 net.cpp:86] Creating Layer ip1
I0426 20:49:44.124634 31587 net.cpp:408] ip1 <- pool0
I0426 20:49:44.124639 31587 net.cpp:382] ip1 -> ip1
I0426 20:49:44.125959 31587 net.cpp:124] Setting up ip1
I0426 20:49:44.125972 31587 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:44.125988 31587 net.cpp:139] Memory required for data: 9419520
I0426 20:49:44.125996 31587 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:44.126003 31587 net.cpp:86] Creating Layer relu1
I0426 20:49:44.126006 31587 net.cpp:408] relu1 <- ip1
I0426 20:49:44.126010 31587 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:44.126201 31587 net.cpp:124] Setting up relu1
I0426 20:49:44.126211 31587 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:44.126214 31587 net.cpp:139] Memory required for data: 9422080
I0426 20:49:44.126217 31587 layer_factory.hpp:77] Creating layer loss
I0426 20:49:44.126222 31587 net.cpp:86] Creating Layer loss
I0426 20:49:44.126225 31587 net.cpp:408] loss <- ip1
I0426 20:49:44.126230 31587 net.cpp:408] loss <- label
I0426 20:49:44.126235 31587 net.cpp:382] loss -> loss
I0426 20:49:44.126247 31587 layer_factory.hpp:77] Creating layer loss
I0426 20:49:44.127111 31587 net.cpp:124] Setting up loss
I0426 20:49:44.127122 31587 net.cpp:131] Top shape: (1)
I0426 20:49:44.127125 31587 net.cpp:134]     with loss weight 1
I0426 20:49:44.127138 31587 net.cpp:139] Memory required for data: 9422084
I0426 20:49:44.127141 31587 net.cpp:200] loss needs backward computation.
I0426 20:49:44.127144 31587 net.cpp:200] relu1 needs backward computation.
I0426 20:49:44.127162 31587 net.cpp:200] ip1 needs backward computation.
I0426 20:49:44.127166 31587 net.cpp:200] pool0 needs backward computation.
I0426 20:49:44.127168 31587 net.cpp:200] conv0 needs backward computation.
I0426 20:49:44.127187 31587 net.cpp:202] mnist does not need backward computation.
I0426 20:49:44.127190 31587 net.cpp:244] This network produces output loss
I0426 20:49:44.127197 31587 net.cpp:257] Network initialization done.
I0426 20:49:44.127401 31587 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test43.prototxt
I0426 20:49:44.127423 31587 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:44.127488 31587 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:49:44.127550 31587 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:44.127590 31587 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:44.127605 31587 net.cpp:86] Creating Layer mnist
I0426 20:49:44.127609 31587 net.cpp:382] mnist -> data
I0426 20:49:44.127617 31587 net.cpp:382] mnist -> label
I0426 20:49:44.127693 31587 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:44.128792 31587 net.cpp:124] Setting up mnist
I0426 20:49:44.128841 31587 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:44.128847 31587 net.cpp:131] Top shape: 100 (100)
I0426 20:49:44.128850 31587 net.cpp:139] Memory required for data: 314000
I0426 20:49:44.128880 31587 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:44.128886 31587 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:44.128906 31587 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:44.128911 31587 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:44.128918 31587 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:44.129006 31587 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:44.129014 31587 net.cpp:131] Top shape: 100 (100)
I0426 20:49:44.129019 31587 net.cpp:131] Top shape: 100 (100)
I0426 20:49:44.129022 31587 net.cpp:139] Memory required for data: 314800
I0426 20:49:44.129025 31587 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:44.129035 31587 net.cpp:86] Creating Layer conv0
I0426 20:49:44.129039 31587 net.cpp:408] conv0 <- data
I0426 20:49:44.129045 31587 net.cpp:382] conv0 -> conv0
I0426 20:49:44.130784 31587 net.cpp:124] Setting up conv0
I0426 20:49:44.130811 31587 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:49:44.130815 31587 net.cpp:139] Memory required for data: 11834800
I0426 20:49:44.130823 31587 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:44.130830 31587 net.cpp:86] Creating Layer pool0
I0426 20:49:44.130833 31587 net.cpp:408] pool0 <- conv0
I0426 20:49:44.130837 31587 net.cpp:382] pool0 -> pool0
I0426 20:49:44.130885 31587 net.cpp:124] Setting up pool0
I0426 20:49:44.130890 31587 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:49:44.130893 31587 net.cpp:139] Memory required for data: 14714800
I0426 20:49:44.130897 31587 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:44.130903 31587 net.cpp:86] Creating Layer ip1
I0426 20:49:44.130905 31587 net.cpp:408] ip1 <- pool0
I0426 20:49:44.130910 31587 net.cpp:382] ip1 -> ip1
I0426 20:49:44.131386 31587 net.cpp:124] Setting up ip1
I0426 20:49:44.131409 31587 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:44.131412 31587 net.cpp:139] Memory required for data: 14718800
I0426 20:49:44.131419 31587 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:44.131423 31587 net.cpp:86] Creating Layer relu1
I0426 20:49:44.131427 31587 net.cpp:408] relu1 <- ip1
I0426 20:49:44.131430 31587 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:44.131680 31587 net.cpp:124] Setting up relu1
I0426 20:49:44.131690 31587 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:44.131692 31587 net.cpp:139] Memory required for data: 14722800
I0426 20:49:44.131695 31587 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:49:44.131700 31587 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:49:44.131703 31587 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:49:44.131708 31587 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:49:44.131713 31587 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:49:44.131759 31587 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:49:44.131767 31587 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:44.131770 31587 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:44.131773 31587 net.cpp:139] Memory required for data: 14730800
I0426 20:49:44.131777 31587 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:44.131781 31587 net.cpp:86] Creating Layer accuracy
I0426 20:49:44.131784 31587 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:49:44.131789 31587 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:44.131793 31587 net.cpp:382] accuracy -> accuracy
I0426 20:49:44.131800 31587 net.cpp:124] Setting up accuracy
I0426 20:49:44.131804 31587 net.cpp:131] Top shape: (1)
I0426 20:49:44.131806 31587 net.cpp:139] Memory required for data: 14730804
I0426 20:49:44.131809 31587 layer_factory.hpp:77] Creating layer loss
I0426 20:49:44.131814 31587 net.cpp:86] Creating Layer loss
I0426 20:49:44.131817 31587 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:49:44.131821 31587 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:44.131825 31587 net.cpp:382] loss -> loss
I0426 20:49:44.131831 31587 layer_factory.hpp:77] Creating layer loss
I0426 20:49:44.132055 31587 net.cpp:124] Setting up loss
I0426 20:49:44.132074 31587 net.cpp:131] Top shape: (1)
I0426 20:49:44.132077 31587 net.cpp:134]     with loss weight 1
I0426 20:49:44.132083 31587 net.cpp:139] Memory required for data: 14730808
I0426 20:49:44.132086 31587 net.cpp:200] loss needs backward computation.
I0426 20:49:44.132091 31587 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:44.132095 31587 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:49:44.132098 31587 net.cpp:200] relu1 needs backward computation.
I0426 20:49:44.132102 31587 net.cpp:200] ip1 needs backward computation.
I0426 20:49:44.132104 31587 net.cpp:200] pool0 needs backward computation.
I0426 20:49:44.132107 31587 net.cpp:200] conv0 needs backward computation.
I0426 20:49:44.132110 31587 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:44.132114 31587 net.cpp:202] mnist does not need backward computation.
I0426 20:49:44.132117 31587 net.cpp:244] This network produces output accuracy
I0426 20:49:44.132128 31587 net.cpp:244] This network produces output loss
I0426 20:49:44.132136 31587 net.cpp:257] Network initialization done.
I0426 20:49:44.132164 31587 solver.cpp:56] Solver scaffolding done.
I0426 20:49:44.132297 31587 caffe.cpp:248] Starting Optimization
I0426 20:49:44.132303 31587 solver.cpp:273] Solving LeNet
I0426 20:49:44.132308 31587 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:44.133111 31587 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:44.141686 31587 blocking_queue.cpp:49] Waiting for data
I0426 20:49:44.228277 31594 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:44.229696 31587 solver.cpp:398]     Test net output #0: accuracy = 0.1008
I0426 20:49:44.229729 31587 solver.cpp:398]     Test net output #1: loss = 2.34317 (* 1 = 2.34317 loss)
I0426 20:49:44.234238 31587 solver.cpp:219] Iteration 0 (0 iter/s, 0.101906s/100 iters), loss = 2.3259
I0426 20:49:44.234275 31587 solver.cpp:238]     Train net output #0: loss = 2.3259 (* 1 = 2.3259 loss)
I0426 20:49:44.234300 31587 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:44.359941 31587 solver.cpp:219] Iteration 100 (795.739 iter/s, 0.125669s/100 iters), loss = 1.01767
I0426 20:49:44.359982 31587 solver.cpp:238]     Train net output #0: loss = 1.01767 (* 1 = 1.01767 loss)
I0426 20:49:44.359988 31587 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:44.483479 31587 solver.cpp:219] Iteration 200 (809.814 iter/s, 0.123485s/100 iters), loss = 0.887248
I0426 20:49:44.483517 31587 solver.cpp:238]     Train net output #0: loss = 0.887248 (* 1 = 0.887248 loss)
I0426 20:49:44.483522 31587 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:44.608064 31587 solver.cpp:219] Iteration 300 (802.877 iter/s, 0.124552s/100 iters), loss = 0.209606
I0426 20:49:44.608103 31587 solver.cpp:238]     Train net output #0: loss = 0.209606 (* 1 = 0.209606 loss)
I0426 20:49:44.608108 31587 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:44.733330 31587 solver.cpp:219] Iteration 400 (798.524 iter/s, 0.125231s/100 iters), loss = 0.151191
I0426 20:49:44.733368 31587 solver.cpp:238]     Train net output #0: loss = 0.151191 (* 1 = 0.151191 loss)
I0426 20:49:44.733373 31587 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:44.857667 31587 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:44.946805 31594 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:44.949173 31587 solver.cpp:398]     Test net output #0: accuracy = 0.9445
I0426 20:49:44.949213 31587 solver.cpp:398]     Test net output #1: loss = 0.20117 (* 1 = 0.20117 loss)
I0426 20:49:44.950444 31587 solver.cpp:219] Iteration 500 (460.669 iter/s, 0.217076s/100 iters), loss = 0.297877
I0426 20:49:44.950484 31587 solver.cpp:238]     Train net output #0: loss = 0.297877 (* 1 = 0.297877 loss)
I0426 20:49:44.950491 31587 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:45.080102 31587 solver.cpp:219] Iteration 600 (771.485 iter/s, 0.12962s/100 iters), loss = 0.116588
I0426 20:49:45.080153 31587 solver.cpp:238]     Train net output #0: loss = 0.116588 (* 1 = 0.116588 loss)
I0426 20:49:45.080176 31587 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:45.205287 31587 solver.cpp:219] Iteration 700 (799.21 iter/s, 0.125124s/100 iters), loss = 0.293573
I0426 20:49:45.205330 31587 solver.cpp:238]     Train net output #0: loss = 0.293573 (* 1 = 0.293573 loss)
I0426 20:49:45.205337 31587 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:45.331010 31587 solver.cpp:219] Iteration 800 (795.642 iter/s, 0.125685s/100 iters), loss = 0.35629
I0426 20:49:45.331050 31587 solver.cpp:238]     Train net output #0: loss = 0.35629 (* 1 = 0.35629 loss)
I0426 20:49:45.331056 31587 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:45.457463 31587 solver.cpp:219] Iteration 900 (791.129 iter/s, 0.126402s/100 iters), loss = 0.233194
I0426 20:49:45.457511 31587 solver.cpp:238]     Train net output #0: loss = 0.233194 (* 1 = 0.233194 loss)
I0426 20:49:45.457533 31587 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:45.501163 31593 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:45.584193 31587 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:45.585608 31587 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:45.587019 31587 solver.cpp:311] Iteration 1000, loss = 0.179522
I0426 20:49:45.587054 31587 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:45.678565 31594 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:45.679929 31587 solver.cpp:398]     Test net output #0: accuracy = 0.9646
I0426 20:49:45.679960 31587 solver.cpp:398]     Test net output #1: loss = 0.128061 (* 1 = 0.128061 loss)
I0426 20:49:45.679965 31587 solver.cpp:316] Optimization Done.
I0426 20:49:45.679968 31587 caffe.cpp:259] Optimization Done.
