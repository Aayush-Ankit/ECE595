I0426 20:52:54.594672 32338 caffe.cpp:218] Using GPUs 0
I0426 20:52:54.632571 32338 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:55.149981 32338 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test124.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:55.150130 32338 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test124.prototxt
I0426 20:52:55.150547 32338 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:55.150566 32338 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:55.150673 32338 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:55.150753 32338 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:55.150851 32338 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:55.150876 32338 net.cpp:86] Creating Layer mnist
I0426 20:52:55.150884 32338 net.cpp:382] mnist -> data
I0426 20:52:55.150907 32338 net.cpp:382] mnist -> label
I0426 20:52:55.152009 32338 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:55.154525 32338 net.cpp:124] Setting up mnist
I0426 20:52:55.154543 32338 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:55.154551 32338 net.cpp:131] Top shape: 64 (64)
I0426 20:52:55.154554 32338 net.cpp:139] Memory required for data: 200960
I0426 20:52:55.154561 32338 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:55.154577 32338 net.cpp:86] Creating Layer conv0
I0426 20:52:55.154597 32338 net.cpp:408] conv0 <- data
I0426 20:52:55.154610 32338 net.cpp:382] conv0 -> conv0
I0426 20:52:55.409427 32338 net.cpp:124] Setting up conv0
I0426 20:52:55.409456 32338 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:55.409461 32338 net.cpp:139] Memory required for data: 3887360
I0426 20:52:55.409476 32338 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:55.409488 32338 net.cpp:86] Creating Layer pool0
I0426 20:52:55.409492 32338 net.cpp:408] pool0 <- conv0
I0426 20:52:55.409514 32338 net.cpp:382] pool0 -> pool0
I0426 20:52:55.409561 32338 net.cpp:124] Setting up pool0
I0426 20:52:55.409569 32338 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:55.409571 32338 net.cpp:139] Memory required for data: 4808960
I0426 20:52:55.409574 32338 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:55.409585 32338 net.cpp:86] Creating Layer conv1
I0426 20:52:55.409588 32338 net.cpp:408] conv1 <- pool0
I0426 20:52:55.409593 32338 net.cpp:382] conv1 -> conv1
I0426 20:52:55.412477 32338 net.cpp:124] Setting up conv1
I0426 20:52:55.412492 32338 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:52:55.412494 32338 net.cpp:139] Memory required for data: 5218560
I0426 20:52:55.412503 32338 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:55.412510 32338 net.cpp:86] Creating Layer pool1
I0426 20:52:55.412514 32338 net.cpp:408] pool1 <- conv1
I0426 20:52:55.412518 32338 net.cpp:382] pool1 -> pool1
I0426 20:52:55.412571 32338 net.cpp:124] Setting up pool1
I0426 20:52:55.412577 32338 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:52:55.412580 32338 net.cpp:139] Memory required for data: 5320960
I0426 20:52:55.412582 32338 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:55.412591 32338 net.cpp:86] Creating Layer ip1
I0426 20:52:55.412595 32338 net.cpp:408] ip1 <- pool1
I0426 20:52:55.412600 32338 net.cpp:382] ip1 -> ip1
I0426 20:52:55.414204 32338 net.cpp:124] Setting up ip1
I0426 20:52:55.414216 32338 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:55.414219 32338 net.cpp:139] Memory required for data: 5397760
I0426 20:52:55.414227 32338 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:55.414233 32338 net.cpp:86] Creating Layer relu1
I0426 20:52:55.414237 32338 net.cpp:408] relu1 <- ip1
I0426 20:52:55.414242 32338 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:55.414464 32338 net.cpp:124] Setting up relu1
I0426 20:52:55.414474 32338 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:55.414476 32338 net.cpp:139] Memory required for data: 5474560
I0426 20:52:55.414479 32338 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:55.414487 32338 net.cpp:86] Creating Layer ip2
I0426 20:52:55.414491 32338 net.cpp:408] ip2 <- ip1
I0426 20:52:55.414496 32338 net.cpp:382] ip2 -> ip2
I0426 20:52:55.415153 32338 net.cpp:124] Setting up ip2
I0426 20:52:55.415159 32338 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:55.415179 32338 net.cpp:139] Memory required for data: 5551360
I0426 20:52:55.415184 32338 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:55.415189 32338 net.cpp:86] Creating Layer relu2
I0426 20:52:55.415192 32338 net.cpp:408] relu2 <- ip2
I0426 20:52:55.415196 32338 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:55.416105 32338 net.cpp:124] Setting up relu2
I0426 20:52:55.416117 32338 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:55.416121 32338 net.cpp:139] Memory required for data: 5628160
I0426 20:52:55.416123 32338 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:55.416131 32338 net.cpp:86] Creating Layer ip3
I0426 20:52:55.416133 32338 net.cpp:408] ip3 <- ip2
I0426 20:52:55.416139 32338 net.cpp:382] ip3 -> ip3
I0426 20:52:55.417138 32338 net.cpp:124] Setting up ip3
I0426 20:52:55.417150 32338 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:55.417152 32338 net.cpp:139] Memory required for data: 5630720
I0426 20:52:55.417163 32338 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:55.417168 32338 net.cpp:86] Creating Layer relu3
I0426 20:52:55.417171 32338 net.cpp:408] relu3 <- ip3
I0426 20:52:55.417176 32338 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:55.417385 32338 net.cpp:124] Setting up relu3
I0426 20:52:55.417395 32338 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:55.417398 32338 net.cpp:139] Memory required for data: 5633280
I0426 20:52:55.417402 32338 layer_factory.hpp:77] Creating layer loss
I0426 20:52:55.417407 32338 net.cpp:86] Creating Layer loss
I0426 20:52:55.417410 32338 net.cpp:408] loss <- ip3
I0426 20:52:55.417414 32338 net.cpp:408] loss <- label
I0426 20:52:55.417420 32338 net.cpp:382] loss -> loss
I0426 20:52:55.417434 32338 layer_factory.hpp:77] Creating layer loss
I0426 20:52:55.417696 32338 net.cpp:124] Setting up loss
I0426 20:52:55.417721 32338 net.cpp:131] Top shape: (1)
I0426 20:52:55.417723 32338 net.cpp:134]     with loss weight 1
I0426 20:52:55.417753 32338 net.cpp:139] Memory required for data: 5633284
I0426 20:52:55.417757 32338 net.cpp:200] loss needs backward computation.
I0426 20:52:55.417760 32338 net.cpp:200] relu3 needs backward computation.
I0426 20:52:55.417763 32338 net.cpp:200] ip3 needs backward computation.
I0426 20:52:55.417767 32338 net.cpp:200] relu2 needs backward computation.
I0426 20:52:55.417768 32338 net.cpp:200] ip2 needs backward computation.
I0426 20:52:55.417788 32338 net.cpp:200] relu1 needs backward computation.
I0426 20:52:55.417790 32338 net.cpp:200] ip1 needs backward computation.
I0426 20:52:55.417793 32338 net.cpp:200] pool1 needs backward computation.
I0426 20:52:55.417796 32338 net.cpp:200] conv1 needs backward computation.
I0426 20:52:55.417799 32338 net.cpp:200] pool0 needs backward computation.
I0426 20:52:55.417803 32338 net.cpp:200] conv0 needs backward computation.
I0426 20:52:55.417805 32338 net.cpp:202] mnist does not need backward computation.
I0426 20:52:55.417809 32338 net.cpp:244] This network produces output loss
I0426 20:52:55.417819 32338 net.cpp:257] Network initialization done.
I0426 20:52:55.418195 32338 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test124.prototxt
I0426 20:52:55.418237 32338 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:55.418349 32338 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:55.418431 32338 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:55.418474 32338 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:55.418486 32338 net.cpp:86] Creating Layer mnist
I0426 20:52:55.418493 32338 net.cpp:382] mnist -> data
I0426 20:52:55.418500 32338 net.cpp:382] mnist -> label
I0426 20:52:55.418591 32338 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:55.419826 32338 net.cpp:124] Setting up mnist
I0426 20:52:55.419838 32338 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:55.419891 32338 net.cpp:131] Top shape: 100 (100)
I0426 20:52:55.419901 32338 net.cpp:139] Memory required for data: 314000
I0426 20:52:55.419905 32338 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:55.419912 32338 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:55.419915 32338 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:55.419920 32338 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:55.419926 32338 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:55.420037 32338 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:55.420044 32338 net.cpp:131] Top shape: 100 (100)
I0426 20:52:55.420048 32338 net.cpp:131] Top shape: 100 (100)
I0426 20:52:55.420052 32338 net.cpp:139] Memory required for data: 314800
I0426 20:52:55.420054 32338 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:55.420063 32338 net.cpp:86] Creating Layer conv0
I0426 20:52:55.420068 32338 net.cpp:408] conv0 <- data
I0426 20:52:55.420073 32338 net.cpp:382] conv0 -> conv0
I0426 20:52:55.421888 32338 net.cpp:124] Setting up conv0
I0426 20:52:55.421901 32338 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:55.421906 32338 net.cpp:139] Memory required for data: 6074800
I0426 20:52:55.421914 32338 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:55.421936 32338 net.cpp:86] Creating Layer pool0
I0426 20:52:55.421939 32338 net.cpp:408] pool0 <- conv0
I0426 20:52:55.421946 32338 net.cpp:382] pool0 -> pool0
I0426 20:52:55.421980 32338 net.cpp:124] Setting up pool0
I0426 20:52:55.421986 32338 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:55.421989 32338 net.cpp:139] Memory required for data: 7514800
I0426 20:52:55.421991 32338 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:55.422001 32338 net.cpp:86] Creating Layer conv1
I0426 20:52:55.422004 32338 net.cpp:408] conv1 <- pool0
I0426 20:52:55.422024 32338 net.cpp:382] conv1 -> conv1
I0426 20:52:55.424432 32338 net.cpp:124] Setting up conv1
I0426 20:52:55.424445 32338 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:52:55.424448 32338 net.cpp:139] Memory required for data: 8154800
I0426 20:52:55.424473 32338 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:55.424479 32338 net.cpp:86] Creating Layer pool1
I0426 20:52:55.424484 32338 net.cpp:408] pool1 <- conv1
I0426 20:52:55.424489 32338 net.cpp:382] pool1 -> pool1
I0426 20:52:55.424602 32338 net.cpp:124] Setting up pool1
I0426 20:52:55.424609 32338 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:52:55.424613 32338 net.cpp:139] Memory required for data: 8314800
I0426 20:52:55.424616 32338 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:55.424623 32338 net.cpp:86] Creating Layer ip1
I0426 20:52:55.424626 32338 net.cpp:408] ip1 <- pool1
I0426 20:52:55.424631 32338 net.cpp:382] ip1 -> ip1
I0426 20:52:55.426239 32338 net.cpp:124] Setting up ip1
I0426 20:52:55.426249 32338 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:55.426278 32338 net.cpp:139] Memory required for data: 8434800
I0426 20:52:55.426287 32338 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:55.426296 32338 net.cpp:86] Creating Layer relu1
I0426 20:52:55.426301 32338 net.cpp:408] relu1 <- ip1
I0426 20:52:55.426304 32338 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:55.426513 32338 net.cpp:124] Setting up relu1
I0426 20:52:55.426523 32338 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:55.426527 32338 net.cpp:139] Memory required for data: 8554800
I0426 20:52:55.426530 32338 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:55.426537 32338 net.cpp:86] Creating Layer ip2
I0426 20:52:55.426540 32338 net.cpp:408] ip2 <- ip1
I0426 20:52:55.426547 32338 net.cpp:382] ip2 -> ip2
I0426 20:52:55.427175 32338 net.cpp:124] Setting up ip2
I0426 20:52:55.427181 32338 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:55.427184 32338 net.cpp:139] Memory required for data: 8674800
I0426 20:52:55.427204 32338 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:55.427211 32338 net.cpp:86] Creating Layer relu2
I0426 20:52:55.427213 32338 net.cpp:408] relu2 <- ip2
I0426 20:52:55.427217 32338 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:55.427424 32338 net.cpp:124] Setting up relu2
I0426 20:52:55.427433 32338 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:55.427435 32338 net.cpp:139] Memory required for data: 8794800
I0426 20:52:55.427438 32338 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:55.427444 32338 net.cpp:86] Creating Layer ip3
I0426 20:52:55.427448 32338 net.cpp:408] ip3 <- ip2
I0426 20:52:55.427453 32338 net.cpp:382] ip3 -> ip3
I0426 20:52:55.427587 32338 net.cpp:124] Setting up ip3
I0426 20:52:55.427594 32338 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:55.427597 32338 net.cpp:139] Memory required for data: 8798800
I0426 20:52:55.427604 32338 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:55.427609 32338 net.cpp:86] Creating Layer relu3
I0426 20:52:55.427613 32338 net.cpp:408] relu3 <- ip3
I0426 20:52:55.427618 32338 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:55.428480 32338 net.cpp:124] Setting up relu3
I0426 20:52:55.428493 32338 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:55.428511 32338 net.cpp:139] Memory required for data: 8802800
I0426 20:52:55.428514 32338 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:55.428519 32338 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:55.428522 32338 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:55.428529 32338 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:55.428534 32338 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:55.428583 32338 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:55.428591 32338 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:55.428594 32338 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:55.428597 32338 net.cpp:139] Memory required for data: 8810800
I0426 20:52:55.428601 32338 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:55.428604 32338 net.cpp:86] Creating Layer accuracy
I0426 20:52:55.428607 32338 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:55.428611 32338 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:55.428617 32338 net.cpp:382] accuracy -> accuracy
I0426 20:52:55.428638 32338 net.cpp:124] Setting up accuracy
I0426 20:52:55.428644 32338 net.cpp:131] Top shape: (1)
I0426 20:52:55.428647 32338 net.cpp:139] Memory required for data: 8810804
I0426 20:52:55.428649 32338 layer_factory.hpp:77] Creating layer loss
I0426 20:52:55.428655 32338 net.cpp:86] Creating Layer loss
I0426 20:52:55.428658 32338 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:55.428663 32338 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:55.428666 32338 net.cpp:382] loss -> loss
I0426 20:52:55.428673 32338 layer_factory.hpp:77] Creating layer loss
I0426 20:52:55.428939 32338 net.cpp:124] Setting up loss
I0426 20:52:55.428979 32338 net.cpp:131] Top shape: (1)
I0426 20:52:55.428982 32338 net.cpp:134]     with loss weight 1
I0426 20:52:55.429028 32338 net.cpp:139] Memory required for data: 8810808
I0426 20:52:55.429033 32338 net.cpp:200] loss needs backward computation.
I0426 20:52:55.429036 32338 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:55.429055 32338 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:55.429059 32338 net.cpp:200] relu3 needs backward computation.
I0426 20:52:55.429061 32338 net.cpp:200] ip3 needs backward computation.
I0426 20:52:55.429064 32338 net.cpp:200] relu2 needs backward computation.
I0426 20:52:55.429066 32338 net.cpp:200] ip2 needs backward computation.
I0426 20:52:55.429069 32338 net.cpp:200] relu1 needs backward computation.
I0426 20:52:55.429071 32338 net.cpp:200] ip1 needs backward computation.
I0426 20:52:55.429075 32338 net.cpp:200] pool1 needs backward computation.
I0426 20:52:55.429078 32338 net.cpp:200] conv1 needs backward computation.
I0426 20:52:55.429081 32338 net.cpp:200] pool0 needs backward computation.
I0426 20:52:55.429085 32338 net.cpp:200] conv0 needs backward computation.
I0426 20:52:55.429088 32338 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:55.429092 32338 net.cpp:202] mnist does not need backward computation.
I0426 20:52:55.429095 32338 net.cpp:244] This network produces output accuracy
I0426 20:52:55.429098 32338 net.cpp:244] This network produces output loss
I0426 20:52:55.429110 32338 net.cpp:257] Network initialization done.
I0426 20:52:55.429152 32338 solver.cpp:56] Solver scaffolding done.
I0426 20:52:55.429517 32338 caffe.cpp:248] Starting Optimization
I0426 20:52:55.429522 32338 solver.cpp:273] Solving LeNet
I0426 20:52:55.429524 32338 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:55.430440 32338 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:55.437149 32338 blocking_queue.cpp:49] Waiting for data
I0426 20:52:55.492867 32345 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:55.493762 32338 solver.cpp:398]     Test net output #0: accuracy = 0.0782
I0426 20:52:55.493779 32338 solver.cpp:398]     Test net output #1: loss = 2.3077 (* 1 = 2.3077 loss)
I0426 20:52:55.497584 32338 solver.cpp:219] Iteration 0 (0 iter/s, 0.0680233s/100 iters), loss = 2.30353
I0426 20:52:55.497607 32338 solver.cpp:238]     Train net output #0: loss = 2.30353 (* 1 = 2.30353 loss)
I0426 20:52:55.497633 32338 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:55.615525 32338 solver.cpp:219] Iteration 100 (848.152 iter/s, 0.117903s/100 iters), loss = 0.798403
I0426 20:52:55.615551 32338 solver.cpp:238]     Train net output #0: loss = 0.798403 (* 1 = 0.798403 loss)
I0426 20:52:55.615557 32338 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:55.733690 32338 solver.cpp:219] Iteration 200 (846.542 iter/s, 0.118128s/100 iters), loss = 0.571696
I0426 20:52:55.733716 32338 solver.cpp:238]     Train net output #0: loss = 0.571696 (* 1 = 0.571696 loss)
I0426 20:52:55.733722 32338 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:55.851960 32338 solver.cpp:219] Iteration 300 (845.787 iter/s, 0.118233s/100 iters), loss = 0.557065
I0426 20:52:55.852000 32338 solver.cpp:238]     Train net output #0: loss = 0.557065 (* 1 = 0.557065 loss)
I0426 20:52:55.852022 32338 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:55.970985 32338 solver.cpp:219] Iteration 400 (840.517 iter/s, 0.118974s/100 iters), loss = 0.423555
I0426 20:52:55.971012 32338 solver.cpp:238]     Train net output #0: loss = 0.423555 (* 1 = 0.423555 loss)
I0426 20:52:55.971019 32338 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:56.087147 32338 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:56.148293 32345 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:56.150485 32338 solver.cpp:398]     Test net output #0: accuracy = 0.7651
I0426 20:52:56.150522 32338 solver.cpp:398]     Test net output #1: loss = 0.57766 (* 1 = 0.57766 loss)
I0426 20:52:56.151628 32338 solver.cpp:219] Iteration 500 (553.701 iter/s, 0.180603s/100 iters), loss = 0.61634
I0426 20:52:56.151664 32338 solver.cpp:238]     Train net output #0: loss = 0.61634 (* 1 = 0.61634 loss)
I0426 20:52:56.151686 32338 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:56.270282 32338 solver.cpp:219] Iteration 600 (843.129 iter/s, 0.118606s/100 iters), loss = 0.769933
I0426 20:52:56.270308 32338 solver.cpp:238]     Train net output #0: loss = 0.769933 (* 1 = 0.769933 loss)
I0426 20:52:56.270329 32338 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:56.388898 32338 solver.cpp:219] Iteration 700 (843.311 iter/s, 0.11858s/100 iters), loss = 0.515025
I0426 20:52:56.388926 32338 solver.cpp:238]     Train net output #0: loss = 0.515025 (* 1 = 0.515025 loss)
I0426 20:52:56.388947 32338 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:56.507040 32338 solver.cpp:219] Iteration 800 (846.724 iter/s, 0.118102s/100 iters), loss = 0.720969
I0426 20:52:56.507079 32338 solver.cpp:238]     Train net output #0: loss = 0.720969 (* 1 = 0.720969 loss)
I0426 20:52:56.507102 32338 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:56.625447 32338 solver.cpp:219] Iteration 900 (844.909 iter/s, 0.118356s/100 iters), loss = 0.72981
I0426 20:52:56.625485 32338 solver.cpp:238]     Train net output #0: loss = 0.72981 (* 1 = 0.72981 loss)
I0426 20:52:56.625491 32338 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:56.665107 32344 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:56.742828 32338 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:56.747315 32338 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:56.749299 32338 solver.cpp:311] Iteration 1000, loss = 0.61361
I0426 20:52:56.749315 32338 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:56.810987 32345 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:56.812028 32338 solver.cpp:398]     Test net output #0: accuracy = 0.776
I0426 20:52:56.812047 32338 solver.cpp:398]     Test net output #1: loss = 0.539956 (* 1 = 0.539956 loss)
I0426 20:52:56.812069 32338 solver.cpp:316] Optimization Done.
I0426 20:52:56.812072 32338 caffe.cpp:259] Optimization Done.
