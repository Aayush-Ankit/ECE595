I0426 20:51:05.328922 31907 caffe.cpp:218] Using GPUs 0
I0426 20:51:05.365960 31907 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:05.889870 31907 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test78.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:05.890012 31907 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test78.prototxt
I0426 20:51:05.890413 31907 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:05.890429 31907 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:05.890529 31907 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:05.890602 31907 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:05.890702 31907 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:05.890725 31907 net.cpp:86] Creating Layer mnist
I0426 20:51:05.890733 31907 net.cpp:382] mnist -> data
I0426 20:51:05.890755 31907 net.cpp:382] mnist -> label
I0426 20:51:05.891845 31907 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:05.894376 31907 net.cpp:124] Setting up mnist
I0426 20:51:05.894394 31907 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:05.894400 31907 net.cpp:131] Top shape: 64 (64)
I0426 20:51:05.894404 31907 net.cpp:139] Memory required for data: 200960
I0426 20:51:05.894412 31907 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:05.894428 31907 net.cpp:86] Creating Layer conv0
I0426 20:51:05.894450 31907 net.cpp:408] conv0 <- data
I0426 20:51:05.894462 31907 net.cpp:382] conv0 -> conv0
I0426 20:51:06.171582 31907 net.cpp:124] Setting up conv0
I0426 20:51:06.171610 31907 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:06.171614 31907 net.cpp:139] Memory required for data: 1675520
I0426 20:51:06.171627 31907 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:06.171639 31907 net.cpp:86] Creating Layer pool0
I0426 20:51:06.171643 31907 net.cpp:408] pool0 <- conv0
I0426 20:51:06.171649 31907 net.cpp:382] pool0 -> pool0
I0426 20:51:06.171707 31907 net.cpp:124] Setting up pool0
I0426 20:51:06.171713 31907 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:06.171716 31907 net.cpp:139] Memory required for data: 2044160
I0426 20:51:06.171718 31907 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:06.171730 31907 net.cpp:86] Creating Layer conv1
I0426 20:51:06.171733 31907 net.cpp:408] conv1 <- pool0
I0426 20:51:06.171737 31907 net.cpp:382] conv1 -> conv1
I0426 20:51:06.174499 31907 net.cpp:124] Setting up conv1
I0426 20:51:06.174528 31907 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:51:06.174532 31907 net.cpp:139] Memory required for data: 2453760
I0426 20:51:06.174540 31907 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:06.174547 31907 net.cpp:86] Creating Layer pool1
I0426 20:51:06.174551 31907 net.cpp:408] pool1 <- conv1
I0426 20:51:06.174556 31907 net.cpp:382] pool1 -> pool1
I0426 20:51:06.174612 31907 net.cpp:124] Setting up pool1
I0426 20:51:06.174618 31907 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:51:06.174621 31907 net.cpp:139] Memory required for data: 2556160
I0426 20:51:06.174624 31907 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:06.174631 31907 net.cpp:86] Creating Layer ip1
I0426 20:51:06.174634 31907 net.cpp:408] ip1 <- pool1
I0426 20:51:06.174654 31907 net.cpp:382] ip1 -> ip1
I0426 20:51:06.175019 31907 net.cpp:124] Setting up ip1
I0426 20:51:06.175026 31907 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:06.175045 31907 net.cpp:139] Memory required for data: 2581760
I0426 20:51:06.175052 31907 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:06.175057 31907 net.cpp:86] Creating Layer relu1
I0426 20:51:06.175060 31907 net.cpp:408] relu1 <- ip1
I0426 20:51:06.175065 31907 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:06.175231 31907 net.cpp:124] Setting up relu1
I0426 20:51:06.175240 31907 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:06.175243 31907 net.cpp:139] Memory required for data: 2607360
I0426 20:51:06.175246 31907 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:06.175251 31907 net.cpp:86] Creating Layer ip2
I0426 20:51:06.175254 31907 net.cpp:408] ip2 <- ip1
I0426 20:51:06.175259 31907 net.cpp:382] ip2 -> ip2
I0426 20:51:06.175513 31907 net.cpp:124] Setting up ip2
I0426 20:51:06.175520 31907 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:06.175523 31907 net.cpp:139] Memory required for data: 2684160
I0426 20:51:06.175529 31907 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:06.175534 31907 net.cpp:86] Creating Layer relu2
I0426 20:51:06.175537 31907 net.cpp:408] relu2 <- ip2
I0426 20:51:06.175541 31907 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:06.176309 31907 net.cpp:124] Setting up relu2
I0426 20:51:06.176321 31907 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:06.176339 31907 net.cpp:139] Memory required for data: 2760960
I0426 20:51:06.176342 31907 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:06.176349 31907 net.cpp:86] Creating Layer ip3
I0426 20:51:06.176352 31907 net.cpp:408] ip3 <- ip2
I0426 20:51:06.176357 31907 net.cpp:382] ip3 -> ip3
I0426 20:51:06.177412 31907 net.cpp:124] Setting up ip3
I0426 20:51:06.177423 31907 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:06.177441 31907 net.cpp:139] Memory required for data: 2763520
I0426 20:51:06.177449 31907 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:06.177455 31907 net.cpp:86] Creating Layer relu3
I0426 20:51:06.177459 31907 net.cpp:408] relu3 <- ip3
I0426 20:51:06.177464 31907 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:06.177659 31907 net.cpp:124] Setting up relu3
I0426 20:51:06.177683 31907 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:06.177686 31907 net.cpp:139] Memory required for data: 2766080
I0426 20:51:06.177690 31907 layer_factory.hpp:77] Creating layer loss
I0426 20:51:06.177695 31907 net.cpp:86] Creating Layer loss
I0426 20:51:06.177698 31907 net.cpp:408] loss <- ip3
I0426 20:51:06.177703 31907 net.cpp:408] loss <- label
I0426 20:51:06.177708 31907 net.cpp:382] loss -> loss
I0426 20:51:06.177743 31907 layer_factory.hpp:77] Creating layer loss
I0426 20:51:06.178026 31907 net.cpp:124] Setting up loss
I0426 20:51:06.178036 31907 net.cpp:131] Top shape: (1)
I0426 20:51:06.178040 31907 net.cpp:134]     with loss weight 1
I0426 20:51:06.178055 31907 net.cpp:139] Memory required for data: 2766084
I0426 20:51:06.178058 31907 net.cpp:200] loss needs backward computation.
I0426 20:51:06.178061 31907 net.cpp:200] relu3 needs backward computation.
I0426 20:51:06.178066 31907 net.cpp:200] ip3 needs backward computation.
I0426 20:51:06.178068 31907 net.cpp:200] relu2 needs backward computation.
I0426 20:51:06.178071 31907 net.cpp:200] ip2 needs backward computation.
I0426 20:51:06.178074 31907 net.cpp:200] relu1 needs backward computation.
I0426 20:51:06.178077 31907 net.cpp:200] ip1 needs backward computation.
I0426 20:51:06.178081 31907 net.cpp:200] pool1 needs backward computation.
I0426 20:51:06.178084 31907 net.cpp:200] conv1 needs backward computation.
I0426 20:51:06.178087 31907 net.cpp:200] pool0 needs backward computation.
I0426 20:51:06.178092 31907 net.cpp:200] conv0 needs backward computation.
I0426 20:51:06.178109 31907 net.cpp:202] mnist does not need backward computation.
I0426 20:51:06.178112 31907 net.cpp:244] This network produces output loss
I0426 20:51:06.178122 31907 net.cpp:257] Network initialization done.
I0426 20:51:06.178462 31907 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test78.prototxt
I0426 20:51:06.178530 31907 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:06.178617 31907 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:06.178709 31907 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:06.178755 31907 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:06.178766 31907 net.cpp:86] Creating Layer mnist
I0426 20:51:06.178771 31907 net.cpp:382] mnist -> data
I0426 20:51:06.178779 31907 net.cpp:382] mnist -> label
I0426 20:51:06.178889 31907 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:06.180893 31907 net.cpp:124] Setting up mnist
I0426 20:51:06.180918 31907 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:06.180923 31907 net.cpp:131] Top shape: 100 (100)
I0426 20:51:06.180927 31907 net.cpp:139] Memory required for data: 314000
I0426 20:51:06.180930 31907 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:06.180979 31907 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:06.180984 31907 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:06.180989 31907 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:06.180995 31907 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:06.181041 31907 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:06.181047 31907 net.cpp:131] Top shape: 100 (100)
I0426 20:51:06.181051 31907 net.cpp:131] Top shape: 100 (100)
I0426 20:51:06.181054 31907 net.cpp:139] Memory required for data: 314800
I0426 20:51:06.181057 31907 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:06.181066 31907 net.cpp:86] Creating Layer conv0
I0426 20:51:06.181068 31907 net.cpp:408] conv0 <- data
I0426 20:51:06.181073 31907 net.cpp:382] conv0 -> conv0
I0426 20:51:06.182809 31907 net.cpp:124] Setting up conv0
I0426 20:51:06.182822 31907 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:06.182826 31907 net.cpp:139] Memory required for data: 2618800
I0426 20:51:06.182834 31907 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:06.182855 31907 net.cpp:86] Creating Layer pool0
I0426 20:51:06.182860 31907 net.cpp:408] pool0 <- conv0
I0426 20:51:06.182864 31907 net.cpp:382] pool0 -> pool0
I0426 20:51:06.182898 31907 net.cpp:124] Setting up pool0
I0426 20:51:06.182904 31907 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:06.182906 31907 net.cpp:139] Memory required for data: 3194800
I0426 20:51:06.182909 31907 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:06.182916 31907 net.cpp:86] Creating Layer conv1
I0426 20:51:06.182920 31907 net.cpp:408] conv1 <- pool0
I0426 20:51:06.182924 31907 net.cpp:382] conv1 -> conv1
I0426 20:51:06.185209 31907 net.cpp:124] Setting up conv1
I0426 20:51:06.185237 31907 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:51:06.185241 31907 net.cpp:139] Memory required for data: 3834800
I0426 20:51:06.185250 31907 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:06.185256 31907 net.cpp:86] Creating Layer pool1
I0426 20:51:06.185274 31907 net.cpp:408] pool1 <- conv1
I0426 20:51:06.185286 31907 net.cpp:382] pool1 -> pool1
I0426 20:51:06.185328 31907 net.cpp:124] Setting up pool1
I0426 20:51:06.185333 31907 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:51:06.185336 31907 net.cpp:139] Memory required for data: 3994800
I0426 20:51:06.185339 31907 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:06.185345 31907 net.cpp:86] Creating Layer ip1
I0426 20:51:06.185348 31907 net.cpp:408] ip1 <- pool1
I0426 20:51:06.185353 31907 net.cpp:382] ip1 -> ip1
I0426 20:51:06.185678 31907 net.cpp:124] Setting up ip1
I0426 20:51:06.185686 31907 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:06.185698 31907 net.cpp:139] Memory required for data: 4034800
I0426 20:51:06.185712 31907 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:06.185717 31907 net.cpp:86] Creating Layer relu1
I0426 20:51:06.185726 31907 net.cpp:408] relu1 <- ip1
I0426 20:51:06.185730 31907 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:06.185896 31907 net.cpp:124] Setting up relu1
I0426 20:51:06.185905 31907 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:06.185909 31907 net.cpp:139] Memory required for data: 4074800
I0426 20:51:06.185911 31907 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:06.185919 31907 net.cpp:86] Creating Layer ip2
I0426 20:51:06.185927 31907 net.cpp:408] ip2 <- ip1
I0426 20:51:06.185932 31907 net.cpp:382] ip2 -> ip2
I0426 20:51:06.186206 31907 net.cpp:124] Setting up ip2
I0426 20:51:06.186214 31907 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:06.186218 31907 net.cpp:139] Memory required for data: 4194800
I0426 20:51:06.186223 31907 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:06.186233 31907 net.cpp:86] Creating Layer relu2
I0426 20:51:06.186236 31907 net.cpp:408] relu2 <- ip2
I0426 20:51:06.186240 31907 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:06.186410 31907 net.cpp:124] Setting up relu2
I0426 20:51:06.186419 31907 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:06.186429 31907 net.cpp:139] Memory required for data: 4314800
I0426 20:51:06.186431 31907 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:06.186436 31907 net.cpp:86] Creating Layer ip3
I0426 20:51:06.186439 31907 net.cpp:408] ip3 <- ip2
I0426 20:51:06.186445 31907 net.cpp:382] ip3 -> ip3
I0426 20:51:06.186555 31907 net.cpp:124] Setting up ip3
I0426 20:51:06.186563 31907 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:06.186568 31907 net.cpp:139] Memory required for data: 4318800
I0426 20:51:06.186574 31907 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:06.186579 31907 net.cpp:86] Creating Layer relu3
I0426 20:51:06.186583 31907 net.cpp:408] relu3 <- ip3
I0426 20:51:06.186589 31907 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:06.187510 31907 net.cpp:124] Setting up relu3
I0426 20:51:06.187522 31907 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:06.187526 31907 net.cpp:139] Memory required for data: 4322800
I0426 20:51:06.187530 31907 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:06.187535 31907 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:06.187538 31907 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:06.187546 31907 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:06.187552 31907 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:06.187597 31907 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:06.187602 31907 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:06.187607 31907 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:06.187608 31907 net.cpp:139] Memory required for data: 4330800
I0426 20:51:06.187611 31907 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:06.187616 31907 net.cpp:86] Creating Layer accuracy
I0426 20:51:06.187619 31907 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:06.187623 31907 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:06.187628 31907 net.cpp:382] accuracy -> accuracy
I0426 20:51:06.187635 31907 net.cpp:124] Setting up accuracy
I0426 20:51:06.187640 31907 net.cpp:131] Top shape: (1)
I0426 20:51:06.187644 31907 net.cpp:139] Memory required for data: 4330804
I0426 20:51:06.187646 31907 layer_factory.hpp:77] Creating layer loss
I0426 20:51:06.187650 31907 net.cpp:86] Creating Layer loss
I0426 20:51:06.187654 31907 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:06.187657 31907 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:06.187661 31907 net.cpp:382] loss -> loss
I0426 20:51:06.187666 31907 layer_factory.hpp:77] Creating layer loss
I0426 20:51:06.187918 31907 net.cpp:124] Setting up loss
I0426 20:51:06.187927 31907 net.cpp:131] Top shape: (1)
I0426 20:51:06.187930 31907 net.cpp:134]     with loss weight 1
I0426 20:51:06.187960 31907 net.cpp:139] Memory required for data: 4330808
I0426 20:51:06.187964 31907 net.cpp:200] loss needs backward computation.
I0426 20:51:06.187968 31907 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:06.187971 31907 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:06.187974 31907 net.cpp:200] relu3 needs backward computation.
I0426 20:51:06.187984 31907 net.cpp:200] ip3 needs backward computation.
I0426 20:51:06.187988 31907 net.cpp:200] relu2 needs backward computation.
I0426 20:51:06.187989 31907 net.cpp:200] ip2 needs backward computation.
I0426 20:51:06.187993 31907 net.cpp:200] relu1 needs backward computation.
I0426 20:51:06.187995 31907 net.cpp:200] ip1 needs backward computation.
I0426 20:51:06.187999 31907 net.cpp:200] pool1 needs backward computation.
I0426 20:51:06.188001 31907 net.cpp:200] conv1 needs backward computation.
I0426 20:51:06.188004 31907 net.cpp:200] pool0 needs backward computation.
I0426 20:51:06.188006 31907 net.cpp:200] conv0 needs backward computation.
I0426 20:51:06.188010 31907 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:06.188014 31907 net.cpp:202] mnist does not need backward computation.
I0426 20:51:06.188016 31907 net.cpp:244] This network produces output accuracy
I0426 20:51:06.188019 31907 net.cpp:244] This network produces output loss
I0426 20:51:06.188032 31907 net.cpp:257] Network initialization done.
I0426 20:51:06.188077 31907 solver.cpp:56] Solver scaffolding done.
I0426 20:51:06.188400 31907 caffe.cpp:248] Starting Optimization
I0426 20:51:06.188406 31907 solver.cpp:273] Solving LeNet
I0426 20:51:06.188410 31907 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:06.189352 31907 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:06.194046 31907 blocking_queue.cpp:49] Waiting for data
I0426 20:51:06.265856 31914 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:06.266486 31907 solver.cpp:398]     Test net output #0: accuracy = 0.1033
I0426 20:51:06.266504 31907 solver.cpp:398]     Test net output #1: loss = 2.31562 (* 1 = 2.31562 loss)
I0426 20:51:06.269737 31907 solver.cpp:219] Iteration 0 (0 iter/s, 0.0813015s/100 iters), loss = 2.3208
I0426 20:51:06.269759 31907 solver.cpp:238]     Train net output #0: loss = 2.3208 (* 1 = 2.3208 loss)
I0426 20:51:06.269785 31907 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:06.374685 31907 solver.cpp:219] Iteration 100 (953.237 iter/s, 0.104906s/100 iters), loss = 0.773572
I0426 20:51:06.374723 31907 solver.cpp:238]     Train net output #0: loss = 0.773572 (* 1 = 0.773572 loss)
I0426 20:51:06.374733 31907 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:06.477780 31907 solver.cpp:219] Iteration 200 (970.422 iter/s, 0.103048s/100 iters), loss = 0.542484
I0426 20:51:06.477810 31907 solver.cpp:238]     Train net output #0: loss = 0.542484 (* 1 = 0.542484 loss)
I0426 20:51:06.477818 31907 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:06.588340 31907 solver.cpp:219] Iteration 300 (904.811 iter/s, 0.11052s/100 iters), loss = 0.568522
I0426 20:51:06.588373 31907 solver.cpp:238]     Train net output #0: loss = 0.568522 (* 1 = 0.568522 loss)
I0426 20:51:06.588382 31907 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:06.693421 31907 solver.cpp:219] Iteration 400 (952.021 iter/s, 0.10504s/100 iters), loss = 0.422735
I0426 20:51:06.693449 31907 solver.cpp:238]     Train net output #0: loss = 0.422735 (* 1 = 0.422735 loss)
I0426 20:51:06.693456 31907 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:06.795706 31907 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:06.861668 31914 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:06.863708 31907 solver.cpp:398]     Test net output #0: accuracy = 0.7669
I0426 20:51:06.863736 31907 solver.cpp:398]     Test net output #1: loss = 0.578825 (* 1 = 0.578825 loss)
I0426 20:51:06.864753 31907 solver.cpp:219] Iteration 500 (583.817 iter/s, 0.171287s/100 iters), loss = 0.578711
I0426 20:51:06.864805 31907 solver.cpp:238]     Train net output #0: loss = 0.578711 (* 1 = 0.578711 loss)
I0426 20:51:06.864827 31907 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:06.969290 31907 solver.cpp:219] Iteration 600 (957.161 iter/s, 0.104476s/100 iters), loss = 0.796761
I0426 20:51:06.969321 31907 solver.cpp:238]     Train net output #0: loss = 0.796761 (* 1 = 0.796761 loss)
I0426 20:51:06.969328 31907 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:07.076184 31907 solver.cpp:219] Iteration 700 (935.871 iter/s, 0.106852s/100 iters), loss = 0.576595
I0426 20:51:07.076215 31907 solver.cpp:238]     Train net output #0: loss = 0.576595 (* 1 = 0.576595 loss)
I0426 20:51:07.076223 31907 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:07.179271 31907 solver.cpp:219] Iteration 800 (970.44 iter/s, 0.103046s/100 iters), loss = 0.680746
I0426 20:51:07.179303 31907 solver.cpp:238]     Train net output #0: loss = 0.680746 (* 1 = 0.680746 loss)
I0426 20:51:07.179311 31907 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:07.285377 31907 solver.cpp:219] Iteration 900 (942.837 iter/s, 0.106063s/100 iters), loss = 0.754963
I0426 20:51:07.285408 31907 solver.cpp:238]     Train net output #0: loss = 0.754963 (* 1 = 0.754963 loss)
I0426 20:51:07.285415 31907 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:07.319927 31913 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:07.387264 31907 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:07.389317 31907 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:07.390475 31907 solver.cpp:311] Iteration 1000, loss = 0.596236
I0426 20:51:07.390493 31907 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:07.446578 31914 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:07.447211 31907 solver.cpp:398]     Test net output #0: accuracy = 0.7751
I0426 20:51:07.447232 31907 solver.cpp:398]     Test net output #1: loss = 0.545289 (* 1 = 0.545289 loss)
I0426 20:51:07.447237 31907 solver.cpp:316] Optimization Done.
I0426 20:51:07.447242 31907 caffe.cpp:259] Optimization Done.
