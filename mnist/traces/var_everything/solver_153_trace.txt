I0426 20:54:10.205588 32620 caffe.cpp:218] Using GPUs 0
I0426 20:54:10.234859 32620 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:54:10.686236 32620 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test153.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:54:10.686399 32620 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test153.prototxt
I0426 20:54:10.686734 32620 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:54:10.686764 32620 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:54:10.686870 32620 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:10.686933 32620 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:10.687016 32620 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:54:10.687034 32620 net.cpp:86] Creating Layer mnist
I0426 20:54:10.687041 32620 net.cpp:382] mnist -> data
I0426 20:54:10.687074 32620 net.cpp:382] mnist -> label
I0426 20:54:10.688024 32620 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:54:10.690153 32620 net.cpp:124] Setting up mnist
I0426 20:54:10.690193 32620 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:54:10.690199 32620 net.cpp:131] Top shape: 64 (64)
I0426 20:54:10.690202 32620 net.cpp:139] Memory required for data: 200960
I0426 20:54:10.690208 32620 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:10.690220 32620 net.cpp:86] Creating Layer conv0
I0426 20:54:10.690253 32620 net.cpp:408] conv0 <- data
I0426 20:54:10.690263 32620 net.cpp:382] conv0 -> conv0
I0426 20:54:10.918300 32620 net.cpp:124] Setting up conv0
I0426 20:54:10.918329 32620 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:54:10.918332 32620 net.cpp:139] Memory required for data: 7573760
I0426 20:54:10.918346 32620 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:10.918359 32620 net.cpp:86] Creating Layer pool0
I0426 20:54:10.918362 32620 net.cpp:408] pool0 <- conv0
I0426 20:54:10.918367 32620 net.cpp:382] pool0 -> pool0
I0426 20:54:10.918427 32620 net.cpp:124] Setting up pool0
I0426 20:54:10.918433 32620 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:54:10.918436 32620 net.cpp:139] Memory required for data: 9416960
I0426 20:54:10.918438 32620 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:10.918449 32620 net.cpp:86] Creating Layer conv1
I0426 20:54:10.918452 32620 net.cpp:408] conv1 <- pool0
I0426 20:54:10.918457 32620 net.cpp:382] conv1 -> conv1
I0426 20:54:10.921174 32620 net.cpp:124] Setting up conv1
I0426 20:54:10.921202 32620 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:54:10.921206 32620 net.cpp:139] Memory required for data: 9580800
I0426 20:54:10.921214 32620 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:10.921221 32620 net.cpp:86] Creating Layer pool1
I0426 20:54:10.921224 32620 net.cpp:408] pool1 <- conv1
I0426 20:54:10.921229 32620 net.cpp:382] pool1 -> pool1
I0426 20:54:10.921263 32620 net.cpp:124] Setting up pool1
I0426 20:54:10.921269 32620 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:54:10.921272 32620 net.cpp:139] Memory required for data: 9621760
I0426 20:54:10.921275 32620 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:10.921283 32620 net.cpp:86] Creating Layer ip1
I0426 20:54:10.921284 32620 net.cpp:408] ip1 <- pool1
I0426 20:54:10.921288 32620 net.cpp:382] ip1 -> ip1
I0426 20:54:10.921689 32620 net.cpp:124] Setting up ip1
I0426 20:54:10.921695 32620 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:10.921713 32620 net.cpp:139] Memory required for data: 9698560
I0426 20:54:10.921720 32620 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:10.921725 32620 net.cpp:86] Creating Layer relu1
I0426 20:54:10.921728 32620 net.cpp:408] relu1 <- ip1
I0426 20:54:10.921733 32620 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:10.921919 32620 net.cpp:124] Setting up relu1
I0426 20:54:10.921929 32620 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:10.921932 32620 net.cpp:139] Memory required for data: 9775360
I0426 20:54:10.921936 32620 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:10.921943 32620 net.cpp:86] Creating Layer ip2
I0426 20:54:10.921947 32620 net.cpp:408] ip2 <- ip1
I0426 20:54:10.921952 32620 net.cpp:382] ip2 -> ip2
I0426 20:54:10.923318 32620 net.cpp:124] Setting up ip2
I0426 20:54:10.923331 32620 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:10.923351 32620 net.cpp:139] Memory required for data: 9852160
I0426 20:54:10.923355 32620 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:10.923363 32620 net.cpp:86] Creating Layer relu2
I0426 20:54:10.923367 32620 net.cpp:408] relu2 <- ip2
I0426 20:54:10.923372 32620 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:10.924170 32620 net.cpp:124] Setting up relu2
I0426 20:54:10.924182 32620 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:10.924201 32620 net.cpp:139] Memory required for data: 9928960
I0426 20:54:10.924204 32620 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:10.924211 32620 net.cpp:86] Creating Layer ip3
I0426 20:54:10.924214 32620 net.cpp:408] ip3 <- ip2
I0426 20:54:10.924221 32620 net.cpp:382] ip3 -> ip3
I0426 20:54:10.924412 32620 net.cpp:124] Setting up ip3
I0426 20:54:10.924419 32620 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:10.924423 32620 net.cpp:139] Memory required for data: 9931520
I0426 20:54:10.924432 32620 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:10.924438 32620 net.cpp:86] Creating Layer relu3
I0426 20:54:10.924441 32620 net.cpp:408] relu3 <- ip3
I0426 20:54:10.924445 32620 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:10.924671 32620 net.cpp:124] Setting up relu3
I0426 20:54:10.924680 32620 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:10.924684 32620 net.cpp:139] Memory required for data: 9934080
I0426 20:54:10.924686 32620 layer_factory.hpp:77] Creating layer loss
I0426 20:54:10.924693 32620 net.cpp:86] Creating Layer loss
I0426 20:54:10.924696 32620 net.cpp:408] loss <- ip3
I0426 20:54:10.924700 32620 net.cpp:408] loss <- label
I0426 20:54:10.924705 32620 net.cpp:382] loss -> loss
I0426 20:54:10.924721 32620 layer_factory.hpp:77] Creating layer loss
I0426 20:54:10.925014 32620 net.cpp:124] Setting up loss
I0426 20:54:10.925026 32620 net.cpp:131] Top shape: (1)
I0426 20:54:10.925045 32620 net.cpp:134]     with loss weight 1
I0426 20:54:10.925076 32620 net.cpp:139] Memory required for data: 9934084
I0426 20:54:10.925081 32620 net.cpp:200] loss needs backward computation.
I0426 20:54:10.925084 32620 net.cpp:200] relu3 needs backward computation.
I0426 20:54:10.925087 32620 net.cpp:200] ip3 needs backward computation.
I0426 20:54:10.925091 32620 net.cpp:200] relu2 needs backward computation.
I0426 20:54:10.925093 32620 net.cpp:200] ip2 needs backward computation.
I0426 20:54:10.925096 32620 net.cpp:200] relu1 needs backward computation.
I0426 20:54:10.925114 32620 net.cpp:200] ip1 needs backward computation.
I0426 20:54:10.925117 32620 net.cpp:200] pool1 needs backward computation.
I0426 20:54:10.925120 32620 net.cpp:200] conv1 needs backward computation.
I0426 20:54:10.925123 32620 net.cpp:200] pool0 needs backward computation.
I0426 20:54:10.925127 32620 net.cpp:200] conv0 needs backward computation.
I0426 20:54:10.925132 32620 net.cpp:202] mnist does not need backward computation.
I0426 20:54:10.925135 32620 net.cpp:244] This network produces output loss
I0426 20:54:10.925144 32620 net.cpp:257] Network initialization done.
I0426 20:54:10.925526 32620 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test153.prototxt
I0426 20:54:10.925573 32620 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:54:10.925696 32620 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:10.925776 32620 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:10.925823 32620 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:54:10.925853 32620 net.cpp:86] Creating Layer mnist
I0426 20:54:10.925859 32620 net.cpp:382] mnist -> data
I0426 20:54:10.925866 32620 net.cpp:382] mnist -> label
I0426 20:54:10.925954 32620 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:54:10.927302 32620 net.cpp:124] Setting up mnist
I0426 20:54:10.927330 32620 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:54:10.927335 32620 net.cpp:131] Top shape: 100 (100)
I0426 20:54:10.927338 32620 net.cpp:139] Memory required for data: 314000
I0426 20:54:10.927341 32620 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:54:10.927361 32620 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:54:10.927366 32620 net.cpp:408] label_mnist_1_split <- label
I0426 20:54:10.927386 32620 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:54:10.927394 32620 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:54:10.927500 32620 net.cpp:124] Setting up label_mnist_1_split
I0426 20:54:10.927536 32620 net.cpp:131] Top shape: 100 (100)
I0426 20:54:10.927541 32620 net.cpp:131] Top shape: 100 (100)
I0426 20:54:10.927546 32620 net.cpp:139] Memory required for data: 314800
I0426 20:54:10.927548 32620 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:10.927558 32620 net.cpp:86] Creating Layer conv0
I0426 20:54:10.927562 32620 net.cpp:408] conv0 <- data
I0426 20:54:10.927567 32620 net.cpp:382] conv0 -> conv0
I0426 20:54:10.929253 32620 net.cpp:124] Setting up conv0
I0426 20:54:10.929266 32620 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:54:10.929286 32620 net.cpp:139] Memory required for data: 11834800
I0426 20:54:10.929296 32620 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:10.929302 32620 net.cpp:86] Creating Layer pool0
I0426 20:54:10.929306 32620 net.cpp:408] pool0 <- conv0
I0426 20:54:10.929311 32620 net.cpp:382] pool0 -> pool0
I0426 20:54:10.929361 32620 net.cpp:124] Setting up pool0
I0426 20:54:10.929368 32620 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:54:10.929370 32620 net.cpp:139] Memory required for data: 14714800
I0426 20:54:10.929373 32620 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:10.929383 32620 net.cpp:86] Creating Layer conv1
I0426 20:54:10.929385 32620 net.cpp:408] conv1 <- pool0
I0426 20:54:10.929390 32620 net.cpp:382] conv1 -> conv1
I0426 20:54:10.931020 32620 net.cpp:124] Setting up conv1
I0426 20:54:10.931047 32620 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:54:10.931051 32620 net.cpp:139] Memory required for data: 14970800
I0426 20:54:10.931074 32620 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:10.931082 32620 net.cpp:86] Creating Layer pool1
I0426 20:54:10.931084 32620 net.cpp:408] pool1 <- conv1
I0426 20:54:10.931089 32620 net.cpp:382] pool1 -> pool1
I0426 20:54:10.931139 32620 net.cpp:124] Setting up pool1
I0426 20:54:10.931145 32620 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:54:10.931149 32620 net.cpp:139] Memory required for data: 15034800
I0426 20:54:10.931150 32620 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:10.931159 32620 net.cpp:86] Creating Layer ip1
I0426 20:54:10.931164 32620 net.cpp:408] ip1 <- pool1
I0426 20:54:10.931169 32620 net.cpp:382] ip1 -> ip1
I0426 20:54:10.931556 32620 net.cpp:124] Setting up ip1
I0426 20:54:10.931565 32620 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:10.931592 32620 net.cpp:139] Memory required for data: 15154800
I0426 20:54:10.931601 32620 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:10.931612 32620 net.cpp:86] Creating Layer relu1
I0426 20:54:10.931614 32620 net.cpp:408] relu1 <- ip1
I0426 20:54:10.931618 32620 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:10.931802 32620 net.cpp:124] Setting up relu1
I0426 20:54:10.931812 32620 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:10.931814 32620 net.cpp:139] Memory required for data: 15274800
I0426 20:54:10.931818 32620 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:10.931824 32620 net.cpp:86] Creating Layer ip2
I0426 20:54:10.931828 32620 net.cpp:408] ip2 <- ip1
I0426 20:54:10.931833 32620 net.cpp:382] ip2 -> ip2
I0426 20:54:10.932487 32620 net.cpp:124] Setting up ip2
I0426 20:54:10.932495 32620 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:10.932514 32620 net.cpp:139] Memory required for data: 15394800
I0426 20:54:10.932519 32620 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:10.932523 32620 net.cpp:86] Creating Layer relu2
I0426 20:54:10.932528 32620 net.cpp:408] relu2 <- ip2
I0426 20:54:10.932533 32620 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:10.932703 32620 net.cpp:124] Setting up relu2
I0426 20:54:10.932711 32620 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:10.932714 32620 net.cpp:139] Memory required for data: 15514800
I0426 20:54:10.932718 32620 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:10.932724 32620 net.cpp:86] Creating Layer ip3
I0426 20:54:10.932727 32620 net.cpp:408] ip3 <- ip2
I0426 20:54:10.932732 32620 net.cpp:382] ip3 -> ip3
I0426 20:54:10.932895 32620 net.cpp:124] Setting up ip3
I0426 20:54:10.932904 32620 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:10.932907 32620 net.cpp:139] Memory required for data: 15518800
I0426 20:54:10.932915 32620 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:10.932919 32620 net.cpp:86] Creating Layer relu3
I0426 20:54:10.932924 32620 net.cpp:408] relu3 <- ip3
I0426 20:54:10.932929 32620 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:10.933840 32620 net.cpp:124] Setting up relu3
I0426 20:54:10.933851 32620 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:10.933869 32620 net.cpp:139] Memory required for data: 15522800
I0426 20:54:10.933873 32620 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:54:10.933879 32620 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:54:10.933882 32620 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:54:10.933887 32620 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:54:10.933894 32620 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:54:10.933948 32620 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:54:10.933953 32620 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:10.933956 32620 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:10.933959 32620 net.cpp:139] Memory required for data: 15530800
I0426 20:54:10.933962 32620 layer_factory.hpp:77] Creating layer accuracy
I0426 20:54:10.933966 32620 net.cpp:86] Creating Layer accuracy
I0426 20:54:10.933969 32620 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:54:10.933974 32620 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:54:10.933979 32620 net.cpp:382] accuracy -> accuracy
I0426 20:54:10.934001 32620 net.cpp:124] Setting up accuracy
I0426 20:54:10.934005 32620 net.cpp:131] Top shape: (1)
I0426 20:54:10.934008 32620 net.cpp:139] Memory required for data: 15530804
I0426 20:54:10.934011 32620 layer_factory.hpp:77] Creating layer loss
I0426 20:54:10.934015 32620 net.cpp:86] Creating Layer loss
I0426 20:54:10.934020 32620 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:54:10.934022 32620 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:54:10.934028 32620 net.cpp:382] loss -> loss
I0426 20:54:10.934034 32620 layer_factory.hpp:77] Creating layer loss
I0426 20:54:10.934270 32620 net.cpp:124] Setting up loss
I0426 20:54:10.934295 32620 net.cpp:131] Top shape: (1)
I0426 20:54:10.934298 32620 net.cpp:134]     with loss weight 1
I0426 20:54:10.934314 32620 net.cpp:139] Memory required for data: 15530808
I0426 20:54:10.934317 32620 net.cpp:200] loss needs backward computation.
I0426 20:54:10.934321 32620 net.cpp:202] accuracy does not need backward computation.
I0426 20:54:10.934326 32620 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:54:10.934336 32620 net.cpp:200] relu3 needs backward computation.
I0426 20:54:10.934340 32620 net.cpp:200] ip3 needs backward computation.
I0426 20:54:10.934346 32620 net.cpp:200] relu2 needs backward computation.
I0426 20:54:10.934350 32620 net.cpp:200] ip2 needs backward computation.
I0426 20:54:10.934353 32620 net.cpp:200] relu1 needs backward computation.
I0426 20:54:10.934355 32620 net.cpp:200] ip1 needs backward computation.
I0426 20:54:10.934363 32620 net.cpp:200] pool1 needs backward computation.
I0426 20:54:10.934366 32620 net.cpp:200] conv1 needs backward computation.
I0426 20:54:10.934370 32620 net.cpp:200] pool0 needs backward computation.
I0426 20:54:10.934372 32620 net.cpp:200] conv0 needs backward computation.
I0426 20:54:10.934376 32620 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:54:10.934381 32620 net.cpp:202] mnist does not need backward computation.
I0426 20:54:10.934382 32620 net.cpp:244] This network produces output accuracy
I0426 20:54:10.934386 32620 net.cpp:244] This network produces output loss
I0426 20:54:10.934397 32620 net.cpp:257] Network initialization done.
I0426 20:54:10.934449 32620 solver.cpp:56] Solver scaffolding done.
I0426 20:54:10.934809 32620 caffe.cpp:248] Starting Optimization
I0426 20:54:10.934815 32620 solver.cpp:273] Solving LeNet
I0426 20:54:10.934818 32620 solver.cpp:274] Learning Rate Policy: inv
I0426 20:54:10.935806 32620 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:54:10.942667 32620 blocking_queue.cpp:49] Waiting for data
I0426 20:54:11.022840 32627 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:11.024286 32620 solver.cpp:398]     Test net output #0: accuracy = 0.0891
I0426 20:54:11.024322 32620 solver.cpp:398]     Test net output #1: loss = 2.33402 (* 1 = 2.33402 loss)
I0426 20:54:11.032084 32620 solver.cpp:219] Iteration 0 (-2.27064e-31 iter/s, 0.0972155s/100 iters), loss = 2.34172
I0426 20:54:11.032124 32620 solver.cpp:238]     Train net output #0: loss = 2.34172 (* 1 = 2.34172 loss)
I0426 20:54:11.032140 32620 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:54:11.178354 32620 solver.cpp:219] Iteration 100 (683.938 iter/s, 0.146212s/100 iters), loss = 0.261765
I0426 20:54:11.178395 32620 solver.cpp:238]     Train net output #0: loss = 0.261765 (* 1 = 0.261765 loss)
I0426 20:54:11.178405 32620 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:54:11.325522 32620 solver.cpp:219] Iteration 200 (679.745 iter/s, 0.147114s/100 iters), loss = 0.169623
I0426 20:54:11.325565 32620 solver.cpp:238]     Train net output #0: loss = 0.169623 (* 1 = 0.169623 loss)
I0426 20:54:11.325577 32620 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:54:11.466708 32620 solver.cpp:219] Iteration 300 (708.567 iter/s, 0.14113s/100 iters), loss = 0.138829
I0426 20:54:11.466742 32620 solver.cpp:238]     Train net output #0: loss = 0.138829 (* 1 = 0.138829 loss)
I0426 20:54:11.466750 32620 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:54:11.606756 32620 solver.cpp:219] Iteration 400 (714.274 iter/s, 0.140002s/100 iters), loss = 0.0845505
I0426 20:54:11.606788 32620 solver.cpp:238]     Train net output #0: loss = 0.0845505 (* 1 = 0.0845505 loss)
I0426 20:54:11.606796 32620 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:54:11.747612 32620 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:54:11.821606 32627 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:11.824146 32620 solver.cpp:398]     Test net output #0: accuracy = 0.9635
I0426 20:54:11.824168 32620 solver.cpp:398]     Test net output #1: loss = 0.109776 (* 1 = 0.109776 loss)
I0426 20:54:11.825487 32620 solver.cpp:219] Iteration 500 (457.282 iter/s, 0.218683s/100 iters), loss = 0.195406
I0426 20:54:11.825533 32620 solver.cpp:238]     Train net output #0: loss = 0.195406 (* 1 = 0.195406 loss)
I0426 20:54:11.825541 32620 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:54:11.969856 32620 solver.cpp:219] Iteration 600 (692.946 iter/s, 0.144311s/100 iters), loss = 0.15144
I0426 20:54:11.969889 32620 solver.cpp:238]     Train net output #0: loss = 0.15144 (* 1 = 0.15144 loss)
I0426 20:54:11.969897 32620 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:54:12.113842 32620 solver.cpp:219] Iteration 700 (694.751 iter/s, 0.143937s/100 iters), loss = 0.158077
I0426 20:54:12.113883 32620 solver.cpp:238]     Train net output #0: loss = 0.158077 (* 1 = 0.158077 loss)
I0426 20:54:12.113890 32620 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:54:12.256904 32620 solver.cpp:219] Iteration 800 (699.273 iter/s, 0.143006s/100 iters), loss = 0.28564
I0426 20:54:12.256956 32620 solver.cpp:238]     Train net output #0: loss = 0.28564 (* 1 = 0.28564 loss)
I0426 20:54:12.256969 32620 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:54:12.401216 32620 solver.cpp:219] Iteration 900 (693.251 iter/s, 0.144248s/100 iters), loss = 0.177204
I0426 20:54:12.401252 32620 solver.cpp:238]     Train net output #0: loss = 0.177204 (* 1 = 0.177204 loss)
I0426 20:54:12.401260 32620 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:54:12.447679 32626 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:12.538316 32620 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:54:12.541759 32620 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:54:12.543700 32620 solver.cpp:311] Iteration 1000, loss = 0.0891696
I0426 20:54:12.543720 32620 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:54:12.620556 32627 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:12.621706 32620 solver.cpp:398]     Test net output #0: accuracy = 0.9782
I0426 20:54:12.621729 32620 solver.cpp:398]     Test net output #1: loss = 0.0665663 (* 1 = 0.0665663 loss)
I0426 20:54:12.621737 32620 solver.cpp:316] Optimization Done.
I0426 20:54:12.621740 32620 caffe.cpp:259] Optimization Done.
