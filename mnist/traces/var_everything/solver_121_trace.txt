I0426 20:52:47.039124 32310 caffe.cpp:218] Using GPUs 0
I0426 20:52:47.078305 32310 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:47.598980 32310 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test121.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:47.599107 32310 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test121.prototxt
I0426 20:52:47.599514 32310 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:47.599534 32310 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:47.599637 32310 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:47.599714 32310 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:47.599814 32310 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:47.599838 32310 net.cpp:86] Creating Layer mnist
I0426 20:52:47.599844 32310 net.cpp:382] mnist -> data
I0426 20:52:47.599867 32310 net.cpp:382] mnist -> label
I0426 20:52:47.600929 32310 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:47.603603 32310 net.cpp:124] Setting up mnist
I0426 20:52:47.603622 32310 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:47.603628 32310 net.cpp:131] Top shape: 64 (64)
I0426 20:52:47.603632 32310 net.cpp:139] Memory required for data: 200960
I0426 20:52:47.603639 32310 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:47.603673 32310 net.cpp:86] Creating Layer conv0
I0426 20:52:47.603694 32310 net.cpp:408] conv0 <- data
I0426 20:52:47.603706 32310 net.cpp:382] conv0 -> conv0
I0426 20:52:47.891793 32310 net.cpp:124] Setting up conv0
I0426 20:52:47.891822 32310 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:47.891829 32310 net.cpp:139] Memory required for data: 3887360
I0426 20:52:47.891844 32310 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:47.891860 32310 net.cpp:86] Creating Layer pool0
I0426 20:52:47.891865 32310 net.cpp:408] pool0 <- conv0
I0426 20:52:47.891871 32310 net.cpp:382] pool0 -> pool0
I0426 20:52:47.891921 32310 net.cpp:124] Setting up pool0
I0426 20:52:47.891927 32310 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:47.891932 32310 net.cpp:139] Memory required for data: 4808960
I0426 20:52:47.891934 32310 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:47.891947 32310 net.cpp:86] Creating Layer conv1
I0426 20:52:47.891952 32310 net.cpp:408] conv1 <- pool0
I0426 20:52:47.891957 32310 net.cpp:382] conv1 -> conv1
I0426 20:52:47.895186 32310 net.cpp:124] Setting up conv1
I0426 20:52:47.895203 32310 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:52:47.895208 32310 net.cpp:139] Memory required for data: 5218560
I0426 20:52:47.895217 32310 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:47.895226 32310 net.cpp:86] Creating Layer pool1
I0426 20:52:47.895231 32310 net.cpp:408] pool1 <- conv1
I0426 20:52:47.895237 32310 net.cpp:382] pool1 -> pool1
I0426 20:52:47.895279 32310 net.cpp:124] Setting up pool1
I0426 20:52:47.895285 32310 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:52:47.895288 32310 net.cpp:139] Memory required for data: 5320960
I0426 20:52:47.895292 32310 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:47.895299 32310 net.cpp:86] Creating Layer ip1
I0426 20:52:47.895303 32310 net.cpp:408] ip1 <- pool1
I0426 20:52:47.895308 32310 net.cpp:382] ip1 -> ip1
I0426 20:52:47.895675 32310 net.cpp:124] Setting up ip1
I0426 20:52:47.895684 32310 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:47.895687 32310 net.cpp:139] Memory required for data: 5346560
I0426 20:52:47.895696 32310 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:47.895701 32310 net.cpp:86] Creating Layer relu1
I0426 20:52:47.895705 32310 net.cpp:408] relu1 <- ip1
I0426 20:52:47.895710 32310 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:47.895898 32310 net.cpp:124] Setting up relu1
I0426 20:52:47.895908 32310 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:47.895912 32310 net.cpp:139] Memory required for data: 5372160
I0426 20:52:47.895916 32310 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:47.895923 32310 net.cpp:86] Creating Layer ip2
I0426 20:52:47.895927 32310 net.cpp:408] ip2 <- ip1
I0426 20:52:47.895932 32310 net.cpp:382] ip2 -> ip2
I0426 20:52:47.896240 32310 net.cpp:124] Setting up ip2
I0426 20:52:47.896248 32310 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:47.896252 32310 net.cpp:139] Memory required for data: 5448960
I0426 20:52:47.896258 32310 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:47.896265 32310 net.cpp:86] Creating Layer relu2
I0426 20:52:47.896268 32310 net.cpp:408] relu2 <- ip2
I0426 20:52:47.896273 32310 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:47.897179 32310 net.cpp:124] Setting up relu2
I0426 20:52:47.897194 32310 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:47.897198 32310 net.cpp:139] Memory required for data: 5525760
I0426 20:52:47.897202 32310 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:47.897209 32310 net.cpp:86] Creating Layer ip3
I0426 20:52:47.897213 32310 net.cpp:408] ip3 <- ip2
I0426 20:52:47.897219 32310 net.cpp:382] ip3 -> ip3
I0426 20:52:47.898239 32310 net.cpp:124] Setting up ip3
I0426 20:52:47.898253 32310 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:47.898257 32310 net.cpp:139] Memory required for data: 5528320
I0426 20:52:47.898267 32310 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:47.898272 32310 net.cpp:86] Creating Layer relu3
I0426 20:52:47.898277 32310 net.cpp:408] relu3 <- ip3
I0426 20:52:47.898284 32310 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:47.898483 32310 net.cpp:124] Setting up relu3
I0426 20:52:47.898494 32310 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:47.898497 32310 net.cpp:139] Memory required for data: 5530880
I0426 20:52:47.898500 32310 layer_factory.hpp:77] Creating layer loss
I0426 20:52:47.898509 32310 net.cpp:86] Creating Layer loss
I0426 20:52:47.898511 32310 net.cpp:408] loss <- ip3
I0426 20:52:47.898516 32310 net.cpp:408] loss <- label
I0426 20:52:47.898522 32310 net.cpp:382] loss -> loss
I0426 20:52:47.898540 32310 layer_factory.hpp:77] Creating layer loss
I0426 20:52:47.898810 32310 net.cpp:124] Setting up loss
I0426 20:52:47.898820 32310 net.cpp:131] Top shape: (1)
I0426 20:52:47.898823 32310 net.cpp:134]     with loss weight 1
I0426 20:52:47.898838 32310 net.cpp:139] Memory required for data: 5530884
I0426 20:52:47.898843 32310 net.cpp:200] loss needs backward computation.
I0426 20:52:47.898845 32310 net.cpp:200] relu3 needs backward computation.
I0426 20:52:47.898849 32310 net.cpp:200] ip3 needs backward computation.
I0426 20:52:47.898852 32310 net.cpp:200] relu2 needs backward computation.
I0426 20:52:47.898855 32310 net.cpp:200] ip2 needs backward computation.
I0426 20:52:47.898859 32310 net.cpp:200] relu1 needs backward computation.
I0426 20:52:47.898861 32310 net.cpp:200] ip1 needs backward computation.
I0426 20:52:47.898864 32310 net.cpp:200] pool1 needs backward computation.
I0426 20:52:47.898869 32310 net.cpp:200] conv1 needs backward computation.
I0426 20:52:47.898871 32310 net.cpp:200] pool0 needs backward computation.
I0426 20:52:47.898874 32310 net.cpp:200] conv0 needs backward computation.
I0426 20:52:47.898877 32310 net.cpp:202] mnist does not need backward computation.
I0426 20:52:47.898880 32310 net.cpp:244] This network produces output loss
I0426 20:52:47.898891 32310 net.cpp:257] Network initialization done.
I0426 20:52:47.899245 32310 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test121.prototxt
I0426 20:52:47.899272 32310 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:47.899376 32310 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:47.899466 32310 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:47.899513 32310 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:47.899525 32310 net.cpp:86] Creating Layer mnist
I0426 20:52:47.899533 32310 net.cpp:382] mnist -> data
I0426 20:52:47.899540 32310 net.cpp:382] mnist -> label
I0426 20:52:47.899636 32310 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:47.901744 32310 net.cpp:124] Setting up mnist
I0426 20:52:47.901759 32310 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:47.901764 32310 net.cpp:131] Top shape: 100 (100)
I0426 20:52:47.901767 32310 net.cpp:139] Memory required for data: 314000
I0426 20:52:47.901772 32310 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:47.901779 32310 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:47.901785 32310 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:47.901790 32310 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:47.901798 32310 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:47.901841 32310 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:47.901846 32310 net.cpp:131] Top shape: 100 (100)
I0426 20:52:47.901850 32310 net.cpp:131] Top shape: 100 (100)
I0426 20:52:47.901854 32310 net.cpp:139] Memory required for data: 314800
I0426 20:52:47.901857 32310 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:47.901867 32310 net.cpp:86] Creating Layer conv0
I0426 20:52:47.901870 32310 net.cpp:408] conv0 <- data
I0426 20:52:47.901877 32310 net.cpp:382] conv0 -> conv0
I0426 20:52:47.903856 32310 net.cpp:124] Setting up conv0
I0426 20:52:47.903870 32310 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:47.903874 32310 net.cpp:139] Memory required for data: 6074800
I0426 20:52:47.903884 32310 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:47.903892 32310 net.cpp:86] Creating Layer pool0
I0426 20:52:47.903897 32310 net.cpp:408] pool0 <- conv0
I0426 20:52:47.903901 32310 net.cpp:382] pool0 -> pool0
I0426 20:52:47.903944 32310 net.cpp:124] Setting up pool0
I0426 20:52:47.903949 32310 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:47.903951 32310 net.cpp:139] Memory required for data: 7514800
I0426 20:52:47.903954 32310 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:47.903964 32310 net.cpp:86] Creating Layer conv1
I0426 20:52:47.903967 32310 net.cpp:408] conv1 <- pool0
I0426 20:52:47.903975 32310 net.cpp:382] conv1 -> conv1
I0426 20:52:47.906483 32310 net.cpp:124] Setting up conv1
I0426 20:52:47.906499 32310 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:52:47.906504 32310 net.cpp:139] Memory required for data: 8154800
I0426 20:52:47.906513 32310 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:47.906520 32310 net.cpp:86] Creating Layer pool1
I0426 20:52:47.906524 32310 net.cpp:408] pool1 <- conv1
I0426 20:52:47.906530 32310 net.cpp:382] pool1 -> pool1
I0426 20:52:47.906586 32310 net.cpp:124] Setting up pool1
I0426 20:52:47.906594 32310 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:52:47.906597 32310 net.cpp:139] Memory required for data: 8314800
I0426 20:52:47.906600 32310 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:47.906608 32310 net.cpp:86] Creating Layer ip1
I0426 20:52:47.906611 32310 net.cpp:408] ip1 <- pool1
I0426 20:52:47.906616 32310 net.cpp:382] ip1 -> ip1
I0426 20:52:47.906985 32310 net.cpp:124] Setting up ip1
I0426 20:52:47.906994 32310 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:47.907009 32310 net.cpp:139] Memory required for data: 8354800
I0426 20:52:47.907017 32310 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:47.907025 32310 net.cpp:86] Creating Layer relu1
I0426 20:52:47.907029 32310 net.cpp:408] relu1 <- ip1
I0426 20:52:47.907034 32310 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:47.907227 32310 net.cpp:124] Setting up relu1
I0426 20:52:47.907238 32310 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:47.907243 32310 net.cpp:139] Memory required for data: 8394800
I0426 20:52:47.907245 32310 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:47.907253 32310 net.cpp:86] Creating Layer ip2
I0426 20:52:47.907256 32310 net.cpp:408] ip2 <- ip1
I0426 20:52:47.907263 32310 net.cpp:382] ip2 -> ip2
I0426 20:52:47.907575 32310 net.cpp:124] Setting up ip2
I0426 20:52:47.907583 32310 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:47.907587 32310 net.cpp:139] Memory required for data: 8514800
I0426 20:52:47.907591 32310 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:47.907598 32310 net.cpp:86] Creating Layer relu2
I0426 20:52:47.907601 32310 net.cpp:408] relu2 <- ip2
I0426 20:52:47.907605 32310 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:47.907817 32310 net.cpp:124] Setting up relu2
I0426 20:52:47.907827 32310 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:47.907830 32310 net.cpp:139] Memory required for data: 8634800
I0426 20:52:47.907835 32310 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:47.907841 32310 net.cpp:86] Creating Layer ip3
I0426 20:52:47.907845 32310 net.cpp:408] ip3 <- ip2
I0426 20:52:47.907851 32310 net.cpp:382] ip3 -> ip3
I0426 20:52:47.907999 32310 net.cpp:124] Setting up ip3
I0426 20:52:47.908006 32310 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:47.908010 32310 net.cpp:139] Memory required for data: 8638800
I0426 20:52:47.908018 32310 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:47.908023 32310 net.cpp:86] Creating Layer relu3
I0426 20:52:47.908027 32310 net.cpp:408] relu3 <- ip3
I0426 20:52:47.908032 32310 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:47.908978 32310 net.cpp:124] Setting up relu3
I0426 20:52:47.908991 32310 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:47.908995 32310 net.cpp:139] Memory required for data: 8642800
I0426 20:52:47.908998 32310 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:47.909004 32310 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:47.909008 32310 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:47.909014 32310 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:47.909021 32310 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:47.909062 32310 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:47.909070 32310 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:47.909075 32310 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:47.909077 32310 net.cpp:139] Memory required for data: 8650800
I0426 20:52:47.909081 32310 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:47.909087 32310 net.cpp:86] Creating Layer accuracy
I0426 20:52:47.909090 32310 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:47.909096 32310 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:47.909101 32310 net.cpp:382] accuracy -> accuracy
I0426 20:52:47.909107 32310 net.cpp:124] Setting up accuracy
I0426 20:52:47.909112 32310 net.cpp:131] Top shape: (1)
I0426 20:52:47.909116 32310 net.cpp:139] Memory required for data: 8650804
I0426 20:52:47.909118 32310 layer_factory.hpp:77] Creating layer loss
I0426 20:52:47.909124 32310 net.cpp:86] Creating Layer loss
I0426 20:52:47.909128 32310 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:47.909132 32310 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:47.909137 32310 net.cpp:382] loss -> loss
I0426 20:52:47.909143 32310 layer_factory.hpp:77] Creating layer loss
I0426 20:52:47.909409 32310 net.cpp:124] Setting up loss
I0426 20:52:47.909417 32310 net.cpp:131] Top shape: (1)
I0426 20:52:47.909420 32310 net.cpp:134]     with loss weight 1
I0426 20:52:47.909437 32310 net.cpp:139] Memory required for data: 8650808
I0426 20:52:47.909441 32310 net.cpp:200] loss needs backward computation.
I0426 20:52:47.909446 32310 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:47.909449 32310 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:47.909453 32310 net.cpp:200] relu3 needs backward computation.
I0426 20:52:47.909456 32310 net.cpp:200] ip3 needs backward computation.
I0426 20:52:47.909466 32310 net.cpp:200] relu2 needs backward computation.
I0426 20:52:47.909468 32310 net.cpp:200] ip2 needs backward computation.
I0426 20:52:47.909472 32310 net.cpp:200] relu1 needs backward computation.
I0426 20:52:47.909476 32310 net.cpp:200] ip1 needs backward computation.
I0426 20:52:47.909479 32310 net.cpp:200] pool1 needs backward computation.
I0426 20:52:47.909482 32310 net.cpp:200] conv1 needs backward computation.
I0426 20:52:47.909487 32310 net.cpp:200] pool0 needs backward computation.
I0426 20:52:47.909489 32310 net.cpp:200] conv0 needs backward computation.
I0426 20:52:47.909493 32310 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:47.909497 32310 net.cpp:202] mnist does not need backward computation.
I0426 20:52:47.909500 32310 net.cpp:244] This network produces output accuracy
I0426 20:52:47.909504 32310 net.cpp:244] This network produces output loss
I0426 20:52:47.909517 32310 net.cpp:257] Network initialization done.
I0426 20:52:47.909560 32310 solver.cpp:56] Solver scaffolding done.
I0426 20:52:47.909912 32310 caffe.cpp:248] Starting Optimization
I0426 20:52:47.909919 32310 solver.cpp:273] Solving LeNet
I0426 20:52:47.909921 32310 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:47.910811 32310 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:47.917194 32310 blocking_queue.cpp:49] Waiting for data
I0426 20:52:47.990456 32319 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:47.991155 32310 solver.cpp:398]     Test net output #0: accuracy = 0.083
I0426 20:52:47.991173 32310 solver.cpp:398]     Test net output #1: loss = 2.33248 (* 1 = 2.33248 loss)
I0426 20:52:47.995767 32310 solver.cpp:219] Iteration 0 (0 iter/s, 0.0858164s/100 iters), loss = 2.31837
I0426 20:52:47.995791 32310 solver.cpp:238]     Train net output #0: loss = 2.31837 (* 1 = 2.31837 loss)
I0426 20:52:47.995817 32310 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:48.115286 32310 solver.cpp:219] Iteration 100 (836.958 iter/s, 0.11948s/100 iters), loss = 0.471497
I0426 20:52:48.115312 32310 solver.cpp:238]     Train net output #0: loss = 0.471497 (* 1 = 0.471497 loss)
I0426 20:52:48.115319 32310 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:48.228112 32310 solver.cpp:219] Iteration 200 (886.608 iter/s, 0.112789s/100 iters), loss = 0.163539
I0426 20:52:48.228135 32310 solver.cpp:238]     Train net output #0: loss = 0.163539 (* 1 = 0.163539 loss)
I0426 20:52:48.228140 32310 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:48.340663 32310 solver.cpp:219] Iteration 300 (888.754 iter/s, 0.112517s/100 iters), loss = 0.175259
I0426 20:52:48.340687 32310 solver.cpp:238]     Train net output #0: loss = 0.175259 (* 1 = 0.175259 loss)
I0426 20:52:48.340693 32310 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:48.464483 32310 solver.cpp:219] Iteration 400 (807.871 iter/s, 0.123782s/100 iters), loss = 0.111956
I0426 20:52:48.464519 32310 solver.cpp:238]     Train net output #0: loss = 0.111956 (* 1 = 0.111956 loss)
I0426 20:52:48.464526 32310 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:48.578092 32310 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:48.640265 32319 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:48.642310 32310 solver.cpp:398]     Test net output #0: accuracy = 0.9679
I0426 20:52:48.642334 32310 solver.cpp:398]     Test net output #1: loss = 0.0994377 (* 1 = 0.0994377 loss)
I0426 20:52:48.643376 32310 solver.cpp:219] Iteration 500 (559.141 iter/s, 0.178846s/100 iters), loss = 0.0608714
I0426 20:52:48.643424 32310 solver.cpp:238]     Train net output #0: loss = 0.0608714 (* 1 = 0.0608714 loss)
I0426 20:52:48.643432 32310 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:48.756999 32310 solver.cpp:219] Iteration 600 (880.564 iter/s, 0.113564s/100 iters), loss = 0.146959
I0426 20:52:48.757031 32310 solver.cpp:238]     Train net output #0: loss = 0.146959 (* 1 = 0.146959 loss)
I0426 20:52:48.757040 32310 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:48.872654 32310 solver.cpp:219] Iteration 700 (864.995 iter/s, 0.115608s/100 iters), loss = 0.169485
I0426 20:52:48.872707 32310 solver.cpp:238]     Train net output #0: loss = 0.169484 (* 1 = 0.169484 loss)
I0426 20:52:48.872720 32310 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:48.991590 32310 solver.cpp:219] Iteration 800 (841.219 iter/s, 0.118875s/100 iters), loss = 0.257443
I0426 20:52:48.991622 32310 solver.cpp:238]     Train net output #0: loss = 0.257443 (* 1 = 0.257443 loss)
I0426 20:52:48.991629 32310 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:49.105561 32310 solver.cpp:219] Iteration 900 (877.746 iter/s, 0.113928s/100 iters), loss = 0.155646
I0426 20:52:49.105593 32310 solver.cpp:238]     Train net output #0: loss = 0.155645 (* 1 = 0.155645 loss)
I0426 20:52:49.105609 32310 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:49.143394 32318 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:49.217618 32310 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:49.219876 32310 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:49.221228 32310 solver.cpp:311] Iteration 1000, loss = 0.0666718
I0426 20:52:49.221248 32310 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:49.283463 32319 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:49.286005 32310 solver.cpp:398]     Test net output #0: accuracy = 0.9798
I0426 20:52:49.286028 32310 solver.cpp:398]     Test net output #1: loss = 0.0629382 (* 1 = 0.0629382 loss)
I0426 20:52:49.286036 32310 solver.cpp:316] Optimization Done.
I0426 20:52:49.286038 32310 caffe.cpp:259] Optimization Done.
