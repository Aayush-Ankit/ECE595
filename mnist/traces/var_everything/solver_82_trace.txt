I0426 20:51:14.777201 31942 caffe.cpp:218] Using GPUs 0
I0426 20:51:14.810654 31942 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:15.304729 31942 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test82.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:15.304925 31942 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test82.prototxt
I0426 20:51:15.305294 31942 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:15.305339 31942 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:15.305418 31942 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:15.305496 31942 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:15.305594 31942 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:15.305613 31942 net.cpp:86] Creating Layer mnist
I0426 20:51:15.305621 31942 net.cpp:382] mnist -> data
I0426 20:51:15.305640 31942 net.cpp:382] mnist -> label
I0426 20:51:15.306552 31942 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:15.308997 31942 net.cpp:124] Setting up mnist
I0426 20:51:15.309011 31942 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:15.309017 31942 net.cpp:131] Top shape: 64 (64)
I0426 20:51:15.309020 31942 net.cpp:139] Memory required for data: 200960
I0426 20:51:15.309026 31942 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:15.309078 31942 net.cpp:86] Creating Layer conv0
I0426 20:51:15.309097 31942 net.cpp:408] conv0 <- data
I0426 20:51:15.309109 31942 net.cpp:382] conv0 -> conv0
I0426 20:51:15.541666 31942 net.cpp:124] Setting up conv0
I0426 20:51:15.541707 31942 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:15.541710 31942 net.cpp:139] Memory required for data: 1675520
I0426 20:51:15.541725 31942 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:15.541738 31942 net.cpp:86] Creating Layer pool0
I0426 20:51:15.541743 31942 net.cpp:408] pool0 <- conv0
I0426 20:51:15.541746 31942 net.cpp:382] pool0 -> pool0
I0426 20:51:15.541807 31942 net.cpp:124] Setting up pool0
I0426 20:51:15.541812 31942 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:15.541815 31942 net.cpp:139] Memory required for data: 2044160
I0426 20:51:15.541818 31942 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:15.541828 31942 net.cpp:86] Creating Layer conv1
I0426 20:51:15.541832 31942 net.cpp:408] conv1 <- pool0
I0426 20:51:15.541836 31942 net.cpp:382] conv1 -> conv1
I0426 20:51:15.544502 31942 net.cpp:124] Setting up conv1
I0426 20:51:15.544530 31942 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:51:15.544534 31942 net.cpp:139] Memory required for data: 2453760
I0426 20:51:15.544543 31942 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:15.544549 31942 net.cpp:86] Creating Layer pool1
I0426 20:51:15.544553 31942 net.cpp:408] pool1 <- conv1
I0426 20:51:15.544558 31942 net.cpp:382] pool1 -> pool1
I0426 20:51:15.544608 31942 net.cpp:124] Setting up pool1
I0426 20:51:15.544613 31942 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:51:15.544616 31942 net.cpp:139] Memory required for data: 2556160
I0426 20:51:15.544620 31942 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:15.544625 31942 net.cpp:86] Creating Layer ip1
I0426 20:51:15.544628 31942 net.cpp:408] ip1 <- pool1
I0426 20:51:15.544633 31942 net.cpp:382] ip1 -> ip1
I0426 20:51:15.546211 31942 net.cpp:124] Setting up ip1
I0426 20:51:15.546224 31942 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:15.546227 31942 net.cpp:139] Memory required for data: 2632960
I0426 20:51:15.546236 31942 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:15.546241 31942 net.cpp:86] Creating Layer relu1
I0426 20:51:15.546243 31942 net.cpp:408] relu1 <- ip1
I0426 20:51:15.546248 31942 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:15.546423 31942 net.cpp:124] Setting up relu1
I0426 20:51:15.546432 31942 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:15.546434 31942 net.cpp:139] Memory required for data: 2709760
I0426 20:51:15.546437 31942 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:15.546443 31942 net.cpp:86] Creating Layer ip2
I0426 20:51:15.546447 31942 net.cpp:408] ip2 <- ip1
I0426 20:51:15.546454 31942 net.cpp:382] ip2 -> ip2
I0426 20:51:15.547049 31942 net.cpp:124] Setting up ip2
I0426 20:51:15.547056 31942 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:15.547075 31942 net.cpp:139] Memory required for data: 2786560
I0426 20:51:15.547080 31942 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:15.547086 31942 net.cpp:86] Creating Layer relu2
I0426 20:51:15.547089 31942 net.cpp:408] relu2 <- ip2
I0426 20:51:15.547094 31942 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:15.547927 31942 net.cpp:124] Setting up relu2
I0426 20:51:15.547940 31942 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:15.547958 31942 net.cpp:139] Memory required for data: 2863360
I0426 20:51:15.547962 31942 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:15.547969 31942 net.cpp:86] Creating Layer ip3
I0426 20:51:15.547972 31942 net.cpp:408] ip3 <- ip2
I0426 20:51:15.547979 31942 net.cpp:382] ip3 -> ip3
I0426 20:51:15.549317 31942 net.cpp:124] Setting up ip3
I0426 20:51:15.549362 31942 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:15.549371 31942 net.cpp:139] Memory required for data: 2865920
I0426 20:51:15.549391 31942 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:15.549419 31942 net.cpp:86] Creating Layer relu3
I0426 20:51:15.549427 31942 net.cpp:408] relu3 <- ip3
I0426 20:51:15.549437 31942 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:15.549868 31942 net.cpp:124] Setting up relu3
I0426 20:51:15.549886 31942 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:15.549901 31942 net.cpp:139] Memory required for data: 2868480
I0426 20:51:15.549906 31942 layer_factory.hpp:77] Creating layer loss
I0426 20:51:15.549921 31942 net.cpp:86] Creating Layer loss
I0426 20:51:15.549927 31942 net.cpp:408] loss <- ip3
I0426 20:51:15.549935 31942 net.cpp:408] loss <- label
I0426 20:51:15.549947 31942 net.cpp:382] loss -> loss
I0426 20:51:15.549989 31942 layer_factory.hpp:77] Creating layer loss
I0426 20:51:15.550523 31942 net.cpp:124] Setting up loss
I0426 20:51:15.550550 31942 net.cpp:131] Top shape: (1)
I0426 20:51:15.550557 31942 net.cpp:134]     with loss weight 1
I0426 20:51:15.550592 31942 net.cpp:139] Memory required for data: 2868484
I0426 20:51:15.550599 31942 net.cpp:200] loss needs backward computation.
I0426 20:51:15.550607 31942 net.cpp:200] relu3 needs backward computation.
I0426 20:51:15.550613 31942 net.cpp:200] ip3 needs backward computation.
I0426 20:51:15.550621 31942 net.cpp:200] relu2 needs backward computation.
I0426 20:51:15.550626 31942 net.cpp:200] ip2 needs backward computation.
I0426 20:51:15.550632 31942 net.cpp:200] relu1 needs backward computation.
I0426 20:51:15.550638 31942 net.cpp:200] ip1 needs backward computation.
I0426 20:51:15.550645 31942 net.cpp:200] pool1 needs backward computation.
I0426 20:51:15.550652 31942 net.cpp:200] conv1 needs backward computation.
I0426 20:51:15.550659 31942 net.cpp:200] pool0 needs backward computation.
I0426 20:51:15.550667 31942 net.cpp:200] conv0 needs backward computation.
I0426 20:51:15.550673 31942 net.cpp:202] mnist does not need backward computation.
I0426 20:51:15.550679 31942 net.cpp:244] This network produces output loss
I0426 20:51:15.550701 31942 net.cpp:257] Network initialization done.
I0426 20:51:15.551388 31942 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test82.prototxt
I0426 20:51:15.551455 31942 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:15.551646 31942 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:15.551810 31942 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:15.551893 31942 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:15.551915 31942 net.cpp:86] Creating Layer mnist
I0426 20:51:15.551928 31942 net.cpp:382] mnist -> data
I0426 20:51:15.551944 31942 net.cpp:382] mnist -> label
I0426 20:51:15.552132 31942 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:15.554402 31942 net.cpp:124] Setting up mnist
I0426 20:51:15.554448 31942 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:15.554460 31942 net.cpp:131] Top shape: 100 (100)
I0426 20:51:15.554466 31942 net.cpp:139] Memory required for data: 314000
I0426 20:51:15.554474 31942 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:15.554507 31942 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:15.554514 31942 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:15.554527 31942 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:15.554543 31942 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:15.554622 31942 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:15.554636 31942 net.cpp:131] Top shape: 100 (100)
I0426 20:51:15.554644 31942 net.cpp:131] Top shape: 100 (100)
I0426 20:51:15.554651 31942 net.cpp:139] Memory required for data: 314800
I0426 20:51:15.554657 31942 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:15.554677 31942 net.cpp:86] Creating Layer conv0
I0426 20:51:15.554690 31942 net.cpp:408] conv0 <- data
I0426 20:51:15.554700 31942 net.cpp:382] conv0 -> conv0
I0426 20:51:15.557776 31942 net.cpp:124] Setting up conv0
I0426 20:51:15.557814 31942 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:15.557822 31942 net.cpp:139] Memory required for data: 2618800
I0426 20:51:15.557840 31942 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:15.557863 31942 net.cpp:86] Creating Layer pool0
I0426 20:51:15.557873 31942 net.cpp:408] pool0 <- conv0
I0426 20:51:15.557884 31942 net.cpp:382] pool0 -> pool0
I0426 20:51:15.557955 31942 net.cpp:124] Setting up pool0
I0426 20:51:15.557968 31942 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:15.557976 31942 net.cpp:139] Memory required for data: 3194800
I0426 20:51:15.557981 31942 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:15.557997 31942 net.cpp:86] Creating Layer conv1
I0426 20:51:15.558003 31942 net.cpp:408] conv1 <- pool0
I0426 20:51:15.558015 31942 net.cpp:382] conv1 -> conv1
I0426 20:51:15.562124 31942 net.cpp:124] Setting up conv1
I0426 20:51:15.562161 31942 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:51:15.562170 31942 net.cpp:139] Memory required for data: 3834800
I0426 20:51:15.562186 31942 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:15.562198 31942 net.cpp:86] Creating Layer pool1
I0426 20:51:15.562214 31942 net.cpp:408] pool1 <- conv1
I0426 20:51:15.562224 31942 net.cpp:382] pool1 -> pool1
I0426 20:51:15.562296 31942 net.cpp:124] Setting up pool1
I0426 20:51:15.562309 31942 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:51:15.562315 31942 net.cpp:139] Memory required for data: 3994800
I0426 20:51:15.562321 31942 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:15.562332 31942 net.cpp:86] Creating Layer ip1
I0426 20:51:15.562338 31942 net.cpp:408] ip1 <- pool1
I0426 20:51:15.562347 31942 net.cpp:382] ip1 -> ip1
I0426 20:51:15.565353 31942 net.cpp:124] Setting up ip1
I0426 20:51:15.565387 31942 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:15.565412 31942 net.cpp:139] Memory required for data: 4114800
I0426 20:51:15.565441 31942 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:15.565451 31942 net.cpp:86] Creating Layer relu1
I0426 20:51:15.565459 31942 net.cpp:408] relu1 <- ip1
I0426 20:51:15.565469 31942 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:15.565830 31942 net.cpp:124] Setting up relu1
I0426 20:51:15.565845 31942 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:15.565862 31942 net.cpp:139] Memory required for data: 4234800
I0426 20:51:15.565868 31942 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:15.565881 31942 net.cpp:86] Creating Layer ip2
I0426 20:51:15.565887 31942 net.cpp:408] ip2 <- ip1
I0426 20:51:15.565897 31942 net.cpp:382] ip2 -> ip2
I0426 20:51:15.567121 31942 net.cpp:124] Setting up ip2
I0426 20:51:15.567136 31942 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:15.567142 31942 net.cpp:139] Memory required for data: 4354800
I0426 20:51:15.567152 31942 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:15.567160 31942 net.cpp:86] Creating Layer relu2
I0426 20:51:15.567167 31942 net.cpp:408] relu2 <- ip2
I0426 20:51:15.567175 31942 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:15.567492 31942 net.cpp:124] Setting up relu2
I0426 20:51:15.567507 31942 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:15.567512 31942 net.cpp:139] Memory required for data: 4474800
I0426 20:51:15.567518 31942 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:15.567528 31942 net.cpp:86] Creating Layer ip3
I0426 20:51:15.567534 31942 net.cpp:408] ip3 <- ip2
I0426 20:51:15.567543 31942 net.cpp:382] ip3 -> ip3
I0426 20:51:15.567761 31942 net.cpp:124] Setting up ip3
I0426 20:51:15.567773 31942 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:15.567780 31942 net.cpp:139] Memory required for data: 4478800
I0426 20:51:15.567806 31942 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:15.567816 31942 net.cpp:86] Creating Layer relu3
I0426 20:51:15.567821 31942 net.cpp:408] relu3 <- ip3
I0426 20:51:15.567828 31942 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:15.569429 31942 net.cpp:124] Setting up relu3
I0426 20:51:15.569453 31942 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:15.569459 31942 net.cpp:139] Memory required for data: 4482800
I0426 20:51:15.569476 31942 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:15.569488 31942 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:15.569494 31942 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:15.569504 31942 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:15.569516 31942 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:15.569586 31942 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:15.569597 31942 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:15.569604 31942 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:15.569610 31942 net.cpp:139] Memory required for data: 4490800
I0426 20:51:15.569617 31942 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:15.569625 31942 net.cpp:86] Creating Layer accuracy
I0426 20:51:15.569631 31942 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:15.569639 31942 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:15.569648 31942 net.cpp:382] accuracy -> accuracy
I0426 20:51:15.569661 31942 net.cpp:124] Setting up accuracy
I0426 20:51:15.569669 31942 net.cpp:131] Top shape: (1)
I0426 20:51:15.569675 31942 net.cpp:139] Memory required for data: 4490804
I0426 20:51:15.569680 31942 layer_factory.hpp:77] Creating layer loss
I0426 20:51:15.569689 31942 net.cpp:86] Creating Layer loss
I0426 20:51:15.569694 31942 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:15.569701 31942 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:15.569710 31942 net.cpp:382] loss -> loss
I0426 20:51:15.569721 31942 layer_factory.hpp:77] Creating layer loss
I0426 20:51:15.570188 31942 net.cpp:124] Setting up loss
I0426 20:51:15.570204 31942 net.cpp:131] Top shape: (1)
I0426 20:51:15.570211 31942 net.cpp:134]     with loss weight 1
I0426 20:51:15.570245 31942 net.cpp:139] Memory required for data: 4490808
I0426 20:51:15.570251 31942 net.cpp:200] loss needs backward computation.
I0426 20:51:15.570261 31942 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:15.570267 31942 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:15.570274 31942 net.cpp:200] relu3 needs backward computation.
I0426 20:51:15.570279 31942 net.cpp:200] ip3 needs backward computation.
I0426 20:51:15.570286 31942 net.cpp:200] relu2 needs backward computation.
I0426 20:51:15.570291 31942 net.cpp:200] ip2 needs backward computation.
I0426 20:51:15.570298 31942 net.cpp:200] relu1 needs backward computation.
I0426 20:51:15.570304 31942 net.cpp:200] ip1 needs backward computation.
I0426 20:51:15.570310 31942 net.cpp:200] pool1 needs backward computation.
I0426 20:51:15.570317 31942 net.cpp:200] conv1 needs backward computation.
I0426 20:51:15.570323 31942 net.cpp:200] pool0 needs backward computation.
I0426 20:51:15.570329 31942 net.cpp:200] conv0 needs backward computation.
I0426 20:51:15.570338 31942 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:15.570345 31942 net.cpp:202] mnist does not need backward computation.
I0426 20:51:15.570350 31942 net.cpp:244] This network produces output accuracy
I0426 20:51:15.570358 31942 net.cpp:244] This network produces output loss
I0426 20:51:15.570389 31942 net.cpp:257] Network initialization done.
I0426 20:51:15.570468 31942 solver.cpp:56] Solver scaffolding done.
I0426 20:51:15.571131 31942 caffe.cpp:248] Starting Optimization
I0426 20:51:15.571143 31942 solver.cpp:273] Solving LeNet
I0426 20:51:15.571149 31942 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:15.572691 31942 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:15.638231 31949 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:15.640049 31942 solver.cpp:398]     Test net output #0: accuracy = 0.1004
I0426 20:51:15.640084 31942 solver.cpp:398]     Test net output #1: loss = 2.29668 (* 1 = 2.29668 loss)
I0426 20:51:15.643486 31942 solver.cpp:219] Iteration 0 (-1.22045e-30 iter/s, 0.0722954s/100 iters), loss = 2.28632
I0426 20:51:15.643525 31942 solver.cpp:238]     Train net output #0: loss = 2.28632 (* 1 = 2.28632 loss)
I0426 20:51:15.643538 31942 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:15.752723 31942 solver.cpp:219] Iteration 100 (915.782 iter/s, 0.109196s/100 iters), loss = 0.775315
I0426 20:51:15.752758 31942 solver.cpp:238]     Train net output #0: loss = 0.775315 (* 1 = 0.775315 loss)
I0426 20:51:15.752766 31942 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:15.860540 31942 solver.cpp:219] Iteration 200 (927.885 iter/s, 0.107772s/100 iters), loss = 0.554583
I0426 20:51:15.860575 31942 solver.cpp:238]     Train net output #0: loss = 0.554583 (* 1 = 0.554583 loss)
I0426 20:51:15.860584 31942 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:15.967310 31942 solver.cpp:219] Iteration 300 (936.993 iter/s, 0.106724s/100 iters), loss = 0.222602
I0426 20:51:15.967347 31942 solver.cpp:238]     Train net output #0: loss = 0.222602 (* 1 = 0.222602 loss)
I0426 20:51:15.967367 31942 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:16.074847 31942 solver.cpp:219] Iteration 400 (930.308 iter/s, 0.107491s/100 iters), loss = 0.237062
I0426 20:51:16.074882 31942 solver.cpp:238]     Train net output #0: loss = 0.237062 (* 1 = 0.237062 loss)
I0426 20:51:16.074889 31942 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:16.178997 31942 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:16.183821 31942 blocking_queue.cpp:49] Waiting for data
I0426 20:51:16.236017 31949 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:16.237035 31942 solver.cpp:398]     Test net output #0: accuracy = 0.9704
I0426 20:51:16.237076 31942 solver.cpp:398]     Test net output #1: loss = 0.104851 (* 1 = 0.104851 loss)
I0426 20:51:16.238162 31942 solver.cpp:219] Iteration 500 (612.491 iter/s, 0.163268s/100 iters), loss = 0.0921611
I0426 20:51:16.238201 31942 solver.cpp:238]     Train net output #0: loss = 0.092161 (* 1 = 0.092161 loss)
I0426 20:51:16.238219 31942 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:16.347416 31942 solver.cpp:219] Iteration 600 (915.705 iter/s, 0.109206s/100 iters), loss = 0.0965347
I0426 20:51:16.347442 31942 solver.cpp:238]     Train net output #0: loss = 0.0965346 (* 1 = 0.0965346 loss)
I0426 20:51:16.347450 31942 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:16.452705 31942 solver.cpp:219] Iteration 700 (950.093 iter/s, 0.105253s/100 iters), loss = 0.149202
I0426 20:51:16.452728 31942 solver.cpp:238]     Train net output #0: loss = 0.149202 (* 1 = 0.149202 loss)
I0426 20:51:16.452733 31942 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:16.558197 31942 solver.cpp:219] Iteration 800 (948.239 iter/s, 0.105459s/100 iters), loss = 0.210235
I0426 20:51:16.558219 31942 solver.cpp:238]     Train net output #0: loss = 0.210235 (* 1 = 0.210235 loss)
I0426 20:51:16.558225 31942 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:16.663044 31942 solver.cpp:219] Iteration 900 (954.076 iter/s, 0.104813s/100 iters), loss = 0.134098
I0426 20:51:16.663070 31942 solver.cpp:238]     Train net output #0: loss = 0.134098 (* 1 = 0.134098 loss)
I0426 20:51:16.663076 31942 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:16.698205 31948 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:16.767410 31942 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:16.771602 31942 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:16.773543 31942 solver.cpp:311] Iteration 1000, loss = 0.0958497
I0426 20:51:16.773560 31942 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:16.847184 31949 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:16.847820 31942 solver.cpp:398]     Test net output #0: accuracy = 0.9792
I0426 20:51:16.847842 31942 solver.cpp:398]     Test net output #1: loss = 0.0677452 (* 1 = 0.0677452 loss)
I0426 20:51:16.847864 31942 solver.cpp:316] Optimization Done.
I0426 20:51:16.847868 31942 caffe.cpp:259] Optimization Done.
