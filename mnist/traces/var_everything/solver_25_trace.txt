I0426 20:49:02.733047 31435 caffe.cpp:218] Using GPUs 0
I0426 20:49:02.763774 31435 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:03.214264 31435 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test25.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:03.214396 31435 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test25.prototxt
I0426 20:49:03.214684 31435 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:03.214697 31435 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:03.214767 31435 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:03.214843 31435 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:03.214941 31435 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:03.214959 31435 net.cpp:86] Creating Layer mnist
I0426 20:49:03.214967 31435 net.cpp:382] mnist -> data
I0426 20:49:03.214987 31435 net.cpp:382] mnist -> label
I0426 20:49:03.215929 31435 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:03.218060 31435 net.cpp:124] Setting up mnist
I0426 20:49:03.218088 31435 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:03.218093 31435 net.cpp:131] Top shape: 64 (64)
I0426 20:49:03.218096 31435 net.cpp:139] Memory required for data: 200960
I0426 20:49:03.218101 31435 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:03.218132 31435 net.cpp:86] Creating Layer conv0
I0426 20:49:03.218135 31435 net.cpp:408] conv0 <- data
I0426 20:49:03.218147 31435 net.cpp:382] conv0 -> conv0
I0426 20:49:03.447569 31435 net.cpp:124] Setting up conv0
I0426 20:49:03.447594 31435 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:49:03.447598 31435 net.cpp:139] Memory required for data: 1675520
I0426 20:49:03.447613 31435 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:03.447626 31435 net.cpp:86] Creating Layer pool0
I0426 20:49:03.447662 31435 net.cpp:408] pool0 <- conv0
I0426 20:49:03.447669 31435 net.cpp:382] pool0 -> pool0
I0426 20:49:03.447712 31435 net.cpp:124] Setting up pool0
I0426 20:49:03.447736 31435 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:49:03.447738 31435 net.cpp:139] Memory required for data: 2044160
I0426 20:49:03.447741 31435 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:03.447749 31435 net.cpp:86] Creating Layer ip1
I0426 20:49:03.447752 31435 net.cpp:408] ip1 <- pool0
I0426 20:49:03.447757 31435 net.cpp:382] ip1 -> ip1
I0426 20:49:03.450986 31435 net.cpp:124] Setting up ip1
I0426 20:49:03.450999 31435 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:03.451002 31435 net.cpp:139] Memory required for data: 2120960
I0426 20:49:03.451009 31435 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:03.451030 31435 net.cpp:86] Creating Layer relu1
I0426 20:49:03.451035 31435 net.cpp:408] relu1 <- ip1
I0426 20:49:03.451040 31435 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:03.451210 31435 net.cpp:124] Setting up relu1
I0426 20:49:03.451218 31435 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:03.451221 31435 net.cpp:139] Memory required for data: 2197760
I0426 20:49:03.451225 31435 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:03.451231 31435 net.cpp:86] Creating Layer ip2
I0426 20:49:03.451233 31435 net.cpp:408] ip2 <- ip1
I0426 20:49:03.451238 31435 net.cpp:382] ip2 -> ip2
I0426 20:49:03.451498 31435 net.cpp:124] Setting up ip2
I0426 20:49:03.451505 31435 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:03.451508 31435 net.cpp:139] Memory required for data: 2223360
I0426 20:49:03.451514 31435 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:03.451519 31435 net.cpp:86] Creating Layer relu2
I0426 20:49:03.451522 31435 net.cpp:408] relu2 <- ip2
I0426 20:49:03.451526 31435 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:03.452320 31435 net.cpp:124] Setting up relu2
I0426 20:49:03.452332 31435 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:03.452352 31435 net.cpp:139] Memory required for data: 2248960
I0426 20:49:03.452355 31435 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:03.452361 31435 net.cpp:86] Creating Layer ip3
I0426 20:49:03.452365 31435 net.cpp:408] ip3 <- ip2
I0426 20:49:03.452370 31435 net.cpp:382] ip3 -> ip3
I0426 20:49:03.452478 31435 net.cpp:124] Setting up ip3
I0426 20:49:03.452486 31435 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:03.452489 31435 net.cpp:139] Memory required for data: 2251520
I0426 20:49:03.452494 31435 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:03.452500 31435 net.cpp:86] Creating Layer relu3
I0426 20:49:03.452503 31435 net.cpp:408] relu3 <- ip3
I0426 20:49:03.452507 31435 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:03.452661 31435 net.cpp:124] Setting up relu3
I0426 20:49:03.452668 31435 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:03.452672 31435 net.cpp:139] Memory required for data: 2254080
I0426 20:49:03.452673 31435 layer_factory.hpp:77] Creating layer loss
I0426 20:49:03.452679 31435 net.cpp:86] Creating Layer loss
I0426 20:49:03.452682 31435 net.cpp:408] loss <- ip3
I0426 20:49:03.452685 31435 net.cpp:408] loss <- label
I0426 20:49:03.452690 31435 net.cpp:382] loss -> loss
I0426 20:49:03.452706 31435 layer_factory.hpp:77] Creating layer loss
I0426 20:49:03.453001 31435 net.cpp:124] Setting up loss
I0426 20:49:03.453011 31435 net.cpp:131] Top shape: (1)
I0426 20:49:03.453029 31435 net.cpp:134]     with loss weight 1
I0426 20:49:03.453043 31435 net.cpp:139] Memory required for data: 2254084
I0426 20:49:03.453047 31435 net.cpp:200] loss needs backward computation.
I0426 20:49:03.453050 31435 net.cpp:200] relu3 needs backward computation.
I0426 20:49:03.453053 31435 net.cpp:200] ip3 needs backward computation.
I0426 20:49:03.453057 31435 net.cpp:200] relu2 needs backward computation.
I0426 20:49:03.453058 31435 net.cpp:200] ip2 needs backward computation.
I0426 20:49:03.453061 31435 net.cpp:200] relu1 needs backward computation.
I0426 20:49:03.453064 31435 net.cpp:200] ip1 needs backward computation.
I0426 20:49:03.453078 31435 net.cpp:200] pool0 needs backward computation.
I0426 20:49:03.453081 31435 net.cpp:200] conv0 needs backward computation.
I0426 20:49:03.453084 31435 net.cpp:202] mnist does not need backward computation.
I0426 20:49:03.453088 31435 net.cpp:244] This network produces output loss
I0426 20:49:03.453095 31435 net.cpp:257] Network initialization done.
I0426 20:49:03.453403 31435 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test25.prototxt
I0426 20:49:03.453459 31435 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:03.453553 31435 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:03.453613 31435 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:03.453655 31435 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:03.453667 31435 net.cpp:86] Creating Layer mnist
I0426 20:49:03.453671 31435 net.cpp:382] mnist -> data
I0426 20:49:03.453678 31435 net.cpp:382] mnist -> label
I0426 20:49:03.453757 31435 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:03.455838 31435 net.cpp:124] Setting up mnist
I0426 20:49:03.455850 31435 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:03.455855 31435 net.cpp:131] Top shape: 100 (100)
I0426 20:49:03.455857 31435 net.cpp:139] Memory required for data: 314000
I0426 20:49:03.455862 31435 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:03.455868 31435 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:03.455870 31435 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:03.455874 31435 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:03.455879 31435 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:03.455937 31435 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:03.455942 31435 net.cpp:131] Top shape: 100 (100)
I0426 20:49:03.455945 31435 net.cpp:131] Top shape: 100 (100)
I0426 20:49:03.455948 31435 net.cpp:139] Memory required for data: 314800
I0426 20:49:03.455960 31435 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:03.455968 31435 net.cpp:86] Creating Layer conv0
I0426 20:49:03.455971 31435 net.cpp:408] conv0 <- data
I0426 20:49:03.455976 31435 net.cpp:382] conv0 -> conv0
I0426 20:49:03.457530 31435 net.cpp:124] Setting up conv0
I0426 20:49:03.457542 31435 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:49:03.457546 31435 net.cpp:139] Memory required for data: 2618800
I0426 20:49:03.457554 31435 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:03.457561 31435 net.cpp:86] Creating Layer pool0
I0426 20:49:03.457563 31435 net.cpp:408] pool0 <- conv0
I0426 20:49:03.457568 31435 net.cpp:382] pool0 -> pool0
I0426 20:49:03.457600 31435 net.cpp:124] Setting up pool0
I0426 20:49:03.457620 31435 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:49:03.457623 31435 net.cpp:139] Memory required for data: 3194800
I0426 20:49:03.457625 31435 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:03.457631 31435 net.cpp:86] Creating Layer ip1
I0426 20:49:03.457634 31435 net.cpp:408] ip1 <- pool0
I0426 20:49:03.457639 31435 net.cpp:382] ip1 -> ip1
I0426 20:49:03.460769 31435 net.cpp:124] Setting up ip1
I0426 20:49:03.460780 31435 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:03.460784 31435 net.cpp:139] Memory required for data: 3314800
I0426 20:49:03.460791 31435 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:03.460819 31435 net.cpp:86] Creating Layer relu1
I0426 20:49:03.460847 31435 net.cpp:408] relu1 <- ip1
I0426 20:49:03.460852 31435 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:03.461042 31435 net.cpp:124] Setting up relu1
I0426 20:49:03.461051 31435 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:03.461055 31435 net.cpp:139] Memory required for data: 3434800
I0426 20:49:03.461060 31435 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:03.461066 31435 net.cpp:86] Creating Layer ip2
I0426 20:49:03.461076 31435 net.cpp:408] ip2 <- ip1
I0426 20:49:03.461083 31435 net.cpp:382] ip2 -> ip2
I0426 20:49:03.461375 31435 net.cpp:124] Setting up ip2
I0426 20:49:03.461397 31435 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:03.461400 31435 net.cpp:139] Memory required for data: 3474800
I0426 20:49:03.461408 31435 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:03.461412 31435 net.cpp:86] Creating Layer relu2
I0426 20:49:03.461416 31435 net.cpp:408] relu2 <- ip2
I0426 20:49:03.461421 31435 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:03.462245 31435 net.cpp:124] Setting up relu2
I0426 20:49:03.462257 31435 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:03.462276 31435 net.cpp:139] Memory required for data: 3514800
I0426 20:49:03.462280 31435 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:03.462302 31435 net.cpp:86] Creating Layer ip3
I0426 20:49:03.462306 31435 net.cpp:408] ip3 <- ip2
I0426 20:49:03.462311 31435 net.cpp:382] ip3 -> ip3
I0426 20:49:03.462414 31435 net.cpp:124] Setting up ip3
I0426 20:49:03.462421 31435 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:03.462424 31435 net.cpp:139] Memory required for data: 3518800
I0426 20:49:03.462430 31435 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:03.462435 31435 net.cpp:86] Creating Layer relu3
I0426 20:49:03.462437 31435 net.cpp:408] relu3 <- ip3
I0426 20:49:03.462442 31435 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:03.462600 31435 net.cpp:124] Setting up relu3
I0426 20:49:03.462607 31435 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:03.462610 31435 net.cpp:139] Memory required for data: 3522800
I0426 20:49:03.462613 31435 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:03.462617 31435 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:03.462620 31435 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:03.462625 31435 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:03.462630 31435 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:03.462661 31435 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:03.462664 31435 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:03.462677 31435 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:03.462680 31435 net.cpp:139] Memory required for data: 3530800
I0426 20:49:03.462682 31435 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:03.462692 31435 net.cpp:86] Creating Layer accuracy
I0426 20:49:03.462695 31435 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:03.462699 31435 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:03.462704 31435 net.cpp:382] accuracy -> accuracy
I0426 20:49:03.462712 31435 net.cpp:124] Setting up accuracy
I0426 20:49:03.462714 31435 net.cpp:131] Top shape: (1)
I0426 20:49:03.462718 31435 net.cpp:139] Memory required for data: 3530804
I0426 20:49:03.462719 31435 layer_factory.hpp:77] Creating layer loss
I0426 20:49:03.462723 31435 net.cpp:86] Creating Layer loss
I0426 20:49:03.462726 31435 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:03.462729 31435 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:03.462749 31435 net.cpp:382] loss -> loss
I0426 20:49:03.462754 31435 layer_factory.hpp:77] Creating layer loss
I0426 20:49:03.462985 31435 net.cpp:124] Setting up loss
I0426 20:49:03.462992 31435 net.cpp:131] Top shape: (1)
I0426 20:49:03.462996 31435 net.cpp:134]     with loss weight 1
I0426 20:49:03.463002 31435 net.cpp:139] Memory required for data: 3530808
I0426 20:49:03.463004 31435 net.cpp:200] loss needs backward computation.
I0426 20:49:03.463008 31435 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:03.463011 31435 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:03.463014 31435 net.cpp:200] relu3 needs backward computation.
I0426 20:49:03.463016 31435 net.cpp:200] ip3 needs backward computation.
I0426 20:49:03.463019 31435 net.cpp:200] relu2 needs backward computation.
I0426 20:49:03.463022 31435 net.cpp:200] ip2 needs backward computation.
I0426 20:49:03.463024 31435 net.cpp:200] relu1 needs backward computation.
I0426 20:49:03.463027 31435 net.cpp:200] ip1 needs backward computation.
I0426 20:49:03.463029 31435 net.cpp:200] pool0 needs backward computation.
I0426 20:49:03.463032 31435 net.cpp:200] conv0 needs backward computation.
I0426 20:49:03.463035 31435 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:03.463039 31435 net.cpp:202] mnist does not need backward computation.
I0426 20:49:03.463042 31435 net.cpp:244] This network produces output accuracy
I0426 20:49:03.463044 31435 net.cpp:244] This network produces output loss
I0426 20:49:03.463054 31435 net.cpp:257] Network initialization done.
I0426 20:49:03.463105 31435 solver.cpp:56] Solver scaffolding done.
I0426 20:49:03.463382 31435 caffe.cpp:248] Starting Optimization
I0426 20:49:03.463402 31435 solver.cpp:273] Solving LeNet
I0426 20:49:03.463404 31435 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:03.464854 31435 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:03.469430 31435 blocking_queue.cpp:49] Waiting for data
I0426 20:49:03.541165 31442 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:03.541697 31435 solver.cpp:398]     Test net output #0: accuracy = 0.144
I0426 20:49:03.541715 31435 solver.cpp:398]     Test net output #1: loss = 2.28796 (* 1 = 2.28796 loss)
I0426 20:49:03.544003 31435 solver.cpp:219] Iteration 0 (0 iter/s, 0.0805734s/100 iters), loss = 2.27814
I0426 20:49:03.544050 31435 solver.cpp:238]     Train net output #0: loss = 2.27814 (* 1 = 2.27814 loss)
I0426 20:49:03.544064 31435 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:03.630944 31435 solver.cpp:219] Iteration 100 (1150.78 iter/s, 0.0868974s/100 iters), loss = 1.04506
I0426 20:49:03.630967 31435 solver.cpp:238]     Train net output #0: loss = 1.04506 (* 1 = 1.04506 loss)
I0426 20:49:03.630988 31435 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:03.715891 31435 solver.cpp:219] Iteration 200 (1177.65 iter/s, 0.0849152s/100 iters), loss = 0.622382
I0426 20:49:03.715914 31435 solver.cpp:238]     Train net output #0: loss = 0.622382 (* 1 = 0.622382 loss)
I0426 20:49:03.715919 31435 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:03.800182 31435 solver.cpp:219] Iteration 300 (1186.81 iter/s, 0.0842597s/100 iters), loss = 0.24246
I0426 20:49:03.800205 31435 solver.cpp:238]     Train net output #0: loss = 0.24246 (* 1 = 0.24246 loss)
I0426 20:49:03.800211 31435 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:03.883899 31435 solver.cpp:219] Iteration 400 (1194.97 iter/s, 0.0836843s/100 iters), loss = 0.121987
I0426 20:49:03.883921 31435 solver.cpp:238]     Train net output #0: loss = 0.121987 (* 1 = 0.121987 loss)
I0426 20:49:03.883927 31435 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:03.967859 31435 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:04.021286 31442 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:04.021823 31435 solver.cpp:398]     Test net output #0: accuracy = 0.9504
I0426 20:49:04.021842 31435 solver.cpp:398]     Test net output #1: loss = 0.163887 (* 1 = 0.163887 loss)
I0426 20:49:04.022642 31435 solver.cpp:219] Iteration 500 (720.928 iter/s, 0.13871s/100 iters), loss = 0.291803
I0426 20:49:04.022677 31435 solver.cpp:238]     Train net output #0: loss = 0.291803 (* 1 = 0.291803 loss)
I0426 20:49:04.022683 31435 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:04.115633 31435 solver.cpp:219] Iteration 600 (1075.9 iter/s, 0.0929454s/100 iters), loss = 0.129392
I0426 20:49:04.115672 31435 solver.cpp:238]     Train net output #0: loss = 0.129392 (* 1 = 0.129392 loss)
I0426 20:49:04.115679 31435 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:04.204372 31435 solver.cpp:219] Iteration 700 (1127.29 iter/s, 0.088708s/100 iters), loss = 0.25621
I0426 20:49:04.204411 31435 solver.cpp:238]     Train net output #0: loss = 0.256211 (* 1 = 0.256211 loss)
I0426 20:49:04.204416 31435 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:04.294417 31435 solver.cpp:219] Iteration 800 (1111.02 iter/s, 0.0900076s/100 iters), loss = 0.230868
I0426 20:49:04.294462 31435 solver.cpp:238]     Train net output #0: loss = 0.230868 (* 1 = 0.230868 loss)
I0426 20:49:04.294473 31435 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:04.382984 31435 solver.cpp:219] Iteration 900 (1129.76 iter/s, 0.0885146s/100 iters), loss = 0.193355
I0426 20:49:04.383015 31435 solver.cpp:238]     Train net output #0: loss = 0.193355 (* 1 = 0.193355 loss)
I0426 20:49:04.383023 31435 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:04.411700 31441 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:04.468170 31435 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:04.476807 31435 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:04.480865 31435 solver.cpp:311] Iteration 1000, loss = 0.170333
I0426 20:49:04.480886 31435 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:04.555166 31442 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:04.555863 31435 solver.cpp:398]     Test net output #0: accuracy = 0.9701
I0426 20:49:04.555903 31435 solver.cpp:398]     Test net output #1: loss = 0.097388 (* 1 = 0.097388 loss)
I0426 20:49:04.555913 31435 solver.cpp:316] Optimization Done.
I0426 20:49:04.555919 31435 caffe.cpp:259] Optimization Done.
