I0426 20:52:23.541908 32185 caffe.cpp:218] Using GPUs 0
I0426 20:52:23.570919 32185 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:24.096031 32185 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test111.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:24.096187 32185 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test111.prototxt
I0426 20:52:24.096609 32185 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:24.096628 32185 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:24.096751 32185 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:24.096890 32185 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:24.097024 32185 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:24.097061 32185 net.cpp:86] Creating Layer mnist
I0426 20:52:24.097075 32185 net.cpp:382] mnist -> data
I0426 20:52:24.097105 32185 net.cpp:382] mnist -> label
I0426 20:52:24.098409 32185 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:24.100920 32185 net.cpp:124] Setting up mnist
I0426 20:52:24.100937 32185 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:24.100945 32185 net.cpp:131] Top shape: 64 (64)
I0426 20:52:24.100950 32185 net.cpp:139] Memory required for data: 200960
I0426 20:52:24.100956 32185 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:24.100973 32185 net.cpp:86] Creating Layer conv0
I0426 20:52:24.101006 32185 net.cpp:408] conv0 <- data
I0426 20:52:24.101038 32185 net.cpp:382] conv0 -> conv0
I0426 20:52:24.392907 32185 net.cpp:124] Setting up conv0
I0426 20:52:24.392940 32185 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:24.392953 32185 net.cpp:139] Memory required for data: 3887360
I0426 20:52:24.392971 32185 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:24.392987 32185 net.cpp:86] Creating Layer pool0
I0426 20:52:24.392995 32185 net.cpp:408] pool0 <- conv0
I0426 20:52:24.393004 32185 net.cpp:382] pool0 -> pool0
I0426 20:52:24.393090 32185 net.cpp:124] Setting up pool0
I0426 20:52:24.393105 32185 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:24.393111 32185 net.cpp:139] Memory required for data: 4808960
I0426 20:52:24.393121 32185 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:24.393148 32185 net.cpp:86] Creating Layer conv1
I0426 20:52:24.393158 32185 net.cpp:408] conv1 <- pool0
I0426 20:52:24.393172 32185 net.cpp:382] conv1 -> conv1
I0426 20:52:24.396512 32185 net.cpp:124] Setting up conv1
I0426 20:52:24.396529 32185 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:52:24.396533 32185 net.cpp:139] Memory required for data: 4972800
I0426 20:52:24.396543 32185 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:24.396553 32185 net.cpp:86] Creating Layer pool1
I0426 20:52:24.396556 32185 net.cpp:408] pool1 <- conv1
I0426 20:52:24.396565 32185 net.cpp:382] pool1 -> pool1
I0426 20:52:24.396625 32185 net.cpp:124] Setting up pool1
I0426 20:52:24.396636 32185 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:52:24.396642 32185 net.cpp:139] Memory required for data: 5013760
I0426 20:52:24.396651 32185 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:24.396672 32185 net.cpp:86] Creating Layer ip1
I0426 20:52:24.396679 32185 net.cpp:408] ip1 <- pool1
I0426 20:52:24.396687 32185 net.cpp:382] ip1 -> ip1
I0426 20:52:24.397178 32185 net.cpp:124] Setting up ip1
I0426 20:52:24.397189 32185 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:24.397204 32185 net.cpp:139] Memory required for data: 5090560
I0426 20:52:24.397218 32185 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:24.397230 32185 net.cpp:86] Creating Layer relu1
I0426 20:52:24.397239 32185 net.cpp:408] relu1 <- ip1
I0426 20:52:24.397250 32185 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:24.397459 32185 net.cpp:124] Setting up relu1
I0426 20:52:24.397471 32185 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:24.397480 32185 net.cpp:139] Memory required for data: 5167360
I0426 20:52:24.397496 32185 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:24.397507 32185 net.cpp:86] Creating Layer ip2
I0426 20:52:24.397516 32185 net.cpp:408] ip2 <- ip1
I0426 20:52:24.397528 32185 net.cpp:382] ip2 -> ip2
I0426 20:52:24.399224 32185 net.cpp:124] Setting up ip2
I0426 20:52:24.399240 32185 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:24.399248 32185 net.cpp:139] Memory required for data: 5244160
I0426 20:52:24.399260 32185 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:24.399274 32185 net.cpp:86] Creating Layer relu2
I0426 20:52:24.399283 32185 net.cpp:408] relu2 <- ip2
I0426 20:52:24.399296 32185 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:24.400262 32185 net.cpp:124] Setting up relu2
I0426 20:52:24.400279 32185 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:24.400286 32185 net.cpp:139] Memory required for data: 5320960
I0426 20:52:24.400295 32185 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:24.400308 32185 net.cpp:86] Creating Layer ip3
I0426 20:52:24.400317 32185 net.cpp:408] ip3 <- ip2
I0426 20:52:24.400331 32185 net.cpp:382] ip3 -> ip3
I0426 20:52:24.401458 32185 net.cpp:124] Setting up ip3
I0426 20:52:24.401475 32185 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:24.401484 32185 net.cpp:139] Memory required for data: 5323520
I0426 20:52:24.401499 32185 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:24.401511 32185 net.cpp:86] Creating Layer relu3
I0426 20:52:24.401520 32185 net.cpp:408] relu3 <- ip3
I0426 20:52:24.401531 32185 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:24.401752 32185 net.cpp:124] Setting up relu3
I0426 20:52:24.401763 32185 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:24.401772 32185 net.cpp:139] Memory required for data: 5326080
I0426 20:52:24.401779 32185 layer_factory.hpp:77] Creating layer loss
I0426 20:52:24.401790 32185 net.cpp:86] Creating Layer loss
I0426 20:52:24.401798 32185 net.cpp:408] loss <- ip3
I0426 20:52:24.401808 32185 net.cpp:408] loss <- label
I0426 20:52:24.401819 32185 net.cpp:382] loss -> loss
I0426 20:52:24.401850 32185 layer_factory.hpp:77] Creating layer loss
I0426 20:52:24.402133 32185 net.cpp:124] Setting up loss
I0426 20:52:24.402145 32185 net.cpp:131] Top shape: (1)
I0426 20:52:24.402153 32185 net.cpp:134]     with loss weight 1
I0426 20:52:24.402176 32185 net.cpp:139] Memory required for data: 5326084
I0426 20:52:24.402184 32185 net.cpp:200] loss needs backward computation.
I0426 20:52:24.402194 32185 net.cpp:200] relu3 needs backward computation.
I0426 20:52:24.402201 32185 net.cpp:200] ip3 needs backward computation.
I0426 20:52:24.402207 32185 net.cpp:200] relu2 needs backward computation.
I0426 20:52:24.402215 32185 net.cpp:200] ip2 needs backward computation.
I0426 20:52:24.402220 32185 net.cpp:200] relu1 needs backward computation.
I0426 20:52:24.402228 32185 net.cpp:200] ip1 needs backward computation.
I0426 20:52:24.402235 32185 net.cpp:200] pool1 needs backward computation.
I0426 20:52:24.402243 32185 net.cpp:200] conv1 needs backward computation.
I0426 20:52:24.402250 32185 net.cpp:200] pool0 needs backward computation.
I0426 20:52:24.402256 32185 net.cpp:200] conv0 needs backward computation.
I0426 20:52:24.402262 32185 net.cpp:202] mnist does not need backward computation.
I0426 20:52:24.402267 32185 net.cpp:244] This network produces output loss
I0426 20:52:24.402284 32185 net.cpp:257] Network initialization done.
I0426 20:52:24.402679 32185 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test111.prototxt
I0426 20:52:24.402724 32185 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:24.402842 32185 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:24.402978 32185 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:24.403048 32185 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:24.403069 32185 net.cpp:86] Creating Layer mnist
I0426 20:52:24.403079 32185 net.cpp:382] mnist -> data
I0426 20:52:24.403092 32185 net.cpp:382] mnist -> label
I0426 20:52:24.403235 32185 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:24.404597 32185 net.cpp:124] Setting up mnist
I0426 20:52:24.404613 32185 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:24.404624 32185 net.cpp:131] Top shape: 100 (100)
I0426 20:52:24.404633 32185 net.cpp:139] Memory required for data: 314000
I0426 20:52:24.404639 32185 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:24.404686 32185 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:24.404693 32185 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:24.404701 32185 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:24.404716 32185 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:24.404820 32185 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:24.404831 32185 net.cpp:131] Top shape: 100 (100)
I0426 20:52:24.404844 32185 net.cpp:131] Top shape: 100 (100)
I0426 20:52:24.404848 32185 net.cpp:139] Memory required for data: 314800
I0426 20:52:24.404853 32185 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:24.404868 32185 net.cpp:86] Creating Layer conv0
I0426 20:52:24.404875 32185 net.cpp:408] conv0 <- data
I0426 20:52:24.404886 32185 net.cpp:382] conv0 -> conv0
I0426 20:52:24.406832 32185 net.cpp:124] Setting up conv0
I0426 20:52:24.406849 32185 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:24.406854 32185 net.cpp:139] Memory required for data: 6074800
I0426 20:52:24.406872 32185 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:24.406886 32185 net.cpp:86] Creating Layer pool0
I0426 20:52:24.406893 32185 net.cpp:408] pool0 <- conv0
I0426 20:52:24.406904 32185 net.cpp:382] pool0 -> pool0
I0426 20:52:24.406965 32185 net.cpp:124] Setting up pool0
I0426 20:52:24.406975 32185 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:24.406980 32185 net.cpp:139] Memory required for data: 7514800
I0426 20:52:24.406985 32185 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:24.407003 32185 net.cpp:86] Creating Layer conv1
I0426 20:52:24.407011 32185 net.cpp:408] conv1 <- pool0
I0426 20:52:24.407021 32185 net.cpp:382] conv1 -> conv1
I0426 20:52:24.409642 32185 net.cpp:124] Setting up conv1
I0426 20:52:24.409658 32185 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:52:24.409663 32185 net.cpp:139] Memory required for data: 7770800
I0426 20:52:24.409678 32185 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:24.409693 32185 net.cpp:86] Creating Layer pool1
I0426 20:52:24.409705 32185 net.cpp:408] pool1 <- conv1
I0426 20:52:24.409716 32185 net.cpp:382] pool1 -> pool1
I0426 20:52:24.409803 32185 net.cpp:124] Setting up pool1
I0426 20:52:24.409813 32185 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:52:24.409817 32185 net.cpp:139] Memory required for data: 7834800
I0426 20:52:24.409824 32185 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:24.409834 32185 net.cpp:86] Creating Layer ip1
I0426 20:52:24.409842 32185 net.cpp:408] ip1 <- pool1
I0426 20:52:24.409857 32185 net.cpp:382] ip1 -> ip1
I0426 20:52:24.410326 32185 net.cpp:124] Setting up ip1
I0426 20:52:24.410336 32185 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:24.410353 32185 net.cpp:139] Memory required for data: 7954800
I0426 20:52:24.410363 32185 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:24.410373 32185 net.cpp:86] Creating Layer relu1
I0426 20:52:24.410378 32185 net.cpp:408] relu1 <- ip1
I0426 20:52:24.410384 32185 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:24.410619 32185 net.cpp:124] Setting up relu1
I0426 20:52:24.410631 32185 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:24.410635 32185 net.cpp:139] Memory required for data: 8074800
I0426 20:52:24.410641 32185 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:24.410656 32185 net.cpp:86] Creating Layer ip2
I0426 20:52:24.410663 32185 net.cpp:408] ip2 <- ip1
I0426 20:52:24.410675 32185 net.cpp:382] ip2 -> ip2
I0426 20:52:24.411443 32185 net.cpp:124] Setting up ip2
I0426 20:52:24.411458 32185 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:24.411461 32185 net.cpp:139] Memory required for data: 8194800
I0426 20:52:24.411468 32185 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:24.411476 32185 net.cpp:86] Creating Layer relu2
I0426 20:52:24.411479 32185 net.cpp:408] relu2 <- ip2
I0426 20:52:24.411487 32185 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:24.411765 32185 net.cpp:124] Setting up relu2
I0426 20:52:24.411777 32185 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:24.411780 32185 net.cpp:139] Memory required for data: 8314800
I0426 20:52:24.411785 32185 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:24.411795 32185 net.cpp:86] Creating Layer ip3
I0426 20:52:24.411801 32185 net.cpp:408] ip3 <- ip2
I0426 20:52:24.411813 32185 net.cpp:382] ip3 -> ip3
I0426 20:52:24.411970 32185 net.cpp:124] Setting up ip3
I0426 20:52:24.411981 32185 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:24.411985 32185 net.cpp:139] Memory required for data: 8318800
I0426 20:52:24.412000 32185 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:24.412011 32185 net.cpp:86] Creating Layer relu3
I0426 20:52:24.412024 32185 net.cpp:408] relu3 <- ip3
I0426 20:52:24.412034 32185 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:24.413063 32185 net.cpp:124] Setting up relu3
I0426 20:52:24.413077 32185 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:24.413081 32185 net.cpp:139] Memory required for data: 8322800
I0426 20:52:24.413085 32185 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:24.413094 32185 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:24.413100 32185 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:24.413113 32185 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:24.413125 32185 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:24.413188 32185 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:24.413198 32185 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:24.413203 32185 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:24.413208 32185 net.cpp:139] Memory required for data: 8330800
I0426 20:52:24.413214 32185 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:24.413223 32185 net.cpp:86] Creating Layer accuracy
I0426 20:52:24.413230 32185 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:24.413239 32185 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:24.413249 32185 net.cpp:382] accuracy -> accuracy
I0426 20:52:24.413264 32185 net.cpp:124] Setting up accuracy
I0426 20:52:24.413271 32185 net.cpp:131] Top shape: (1)
I0426 20:52:24.413277 32185 net.cpp:139] Memory required for data: 8330804
I0426 20:52:24.413283 32185 layer_factory.hpp:77] Creating layer loss
I0426 20:52:24.413291 32185 net.cpp:86] Creating Layer loss
I0426 20:52:24.413298 32185 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:24.413306 32185 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:24.413314 32185 net.cpp:382] loss -> loss
I0426 20:52:24.413326 32185 layer_factory.hpp:77] Creating layer loss
I0426 20:52:24.413625 32185 net.cpp:124] Setting up loss
I0426 20:52:24.413636 32185 net.cpp:131] Top shape: (1)
I0426 20:52:24.413640 32185 net.cpp:134]     with loss weight 1
I0426 20:52:24.413661 32185 net.cpp:139] Memory required for data: 8330808
I0426 20:52:24.413667 32185 net.cpp:200] loss needs backward computation.
I0426 20:52:24.413674 32185 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:24.413681 32185 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:24.413686 32185 net.cpp:200] relu3 needs backward computation.
I0426 20:52:24.413691 32185 net.cpp:200] ip3 needs backward computation.
I0426 20:52:24.413697 32185 net.cpp:200] relu2 needs backward computation.
I0426 20:52:24.413703 32185 net.cpp:200] ip2 needs backward computation.
I0426 20:52:24.413708 32185 net.cpp:200] relu1 needs backward computation.
I0426 20:52:24.413714 32185 net.cpp:200] ip1 needs backward computation.
I0426 20:52:24.413720 32185 net.cpp:200] pool1 needs backward computation.
I0426 20:52:24.413727 32185 net.cpp:200] conv1 needs backward computation.
I0426 20:52:24.413733 32185 net.cpp:200] pool0 needs backward computation.
I0426 20:52:24.413739 32185 net.cpp:200] conv0 needs backward computation.
I0426 20:52:24.413746 32185 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:24.413753 32185 net.cpp:202] mnist does not need backward computation.
I0426 20:52:24.413759 32185 net.cpp:244] This network produces output accuracy
I0426 20:52:24.413766 32185 net.cpp:244] This network produces output loss
I0426 20:52:24.413787 32185 net.cpp:257] Network initialization done.
I0426 20:52:24.413856 32185 solver.cpp:56] Solver scaffolding done.
I0426 20:52:24.414248 32185 caffe.cpp:248] Starting Optimization
I0426 20:52:24.414257 32185 solver.cpp:273] Solving LeNet
I0426 20:52:24.414259 32185 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:24.415243 32185 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:24.421231 32185 blocking_queue.cpp:49] Waiting for data
I0426 20:52:24.490397 32192 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:24.491089 32185 solver.cpp:398]     Test net output #0: accuracy = 0.0803
I0426 20:52:24.491122 32185 solver.cpp:398]     Test net output #1: loss = 2.31858 (* 1 = 2.31858 loss)
I0426 20:52:24.495607 32185 solver.cpp:219] Iteration 0 (-1.12454e-31 iter/s, 0.0813199s/100 iters), loss = 2.30904
I0426 20:52:24.495645 32185 solver.cpp:238]     Train net output #0: loss = 2.30904 (* 1 = 2.30904 loss)
I0426 20:52:24.495656 32185 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:24.606325 32185 solver.cpp:219] Iteration 100 (903.489 iter/s, 0.110682s/100 iters), loss = 0.617428
I0426 20:52:24.606365 32185 solver.cpp:238]     Train net output #0: loss = 0.617428 (* 1 = 0.617428 loss)
I0426 20:52:24.606371 32185 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:24.715483 32185 solver.cpp:219] Iteration 200 (916.521 iter/s, 0.109108s/100 iters), loss = 0.504083
I0426 20:52:24.715522 32185 solver.cpp:238]     Train net output #0: loss = 0.504083 (* 1 = 0.504083 loss)
I0426 20:52:24.715528 32185 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:24.822100 32185 solver.cpp:219] Iteration 300 (938.235 iter/s, 0.106583s/100 iters), loss = 0.354966
I0426 20:52:24.822139 32185 solver.cpp:238]     Train net output #0: loss = 0.354966 (* 1 = 0.354966 loss)
I0426 20:52:24.822145 32185 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:24.928202 32185 solver.cpp:219] Iteration 400 (942.801 iter/s, 0.106067s/100 iters), loss = 0.266867
I0426 20:52:24.928241 32185 solver.cpp:238]     Train net output #0: loss = 0.266867 (* 1 = 0.266867 loss)
I0426 20:52:24.928248 32185 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:25.033071 32185 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:25.090159 32192 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:25.091601 32185 solver.cpp:398]     Test net output #0: accuracy = 0.8586
I0426 20:52:25.091635 32185 solver.cpp:398]     Test net output #1: loss = 0.36135 (* 1 = 0.36135 loss)
I0426 20:52:25.092661 32185 solver.cpp:219] Iteration 500 (608.193 iter/s, 0.164422s/100 iters), loss = 0.355375
I0426 20:52:25.092715 32185 solver.cpp:238]     Train net output #0: loss = 0.355375 (* 1 = 0.355375 loss)
I0426 20:52:25.092722 32185 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:25.205829 32185 solver.cpp:219] Iteration 600 (884.135 iter/s, 0.113105s/100 iters), loss = 0.50029
I0426 20:52:25.205870 32185 solver.cpp:238]     Train net output #0: loss = 0.50029 (* 1 = 0.50029 loss)
I0426 20:52:25.205878 32185 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:25.313316 32185 solver.cpp:219] Iteration 700 (930.663 iter/s, 0.10745s/100 iters), loss = 0.31841
I0426 20:52:25.313343 32185 solver.cpp:238]     Train net output #0: loss = 0.31841 (* 1 = 0.31841 loss)
I0426 20:52:25.313349 32185 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:25.420192 32185 solver.cpp:219] Iteration 800 (935.971 iter/s, 0.106841s/100 iters), loss = 0.427919
I0426 20:52:25.420231 32185 solver.cpp:238]     Train net output #0: loss = 0.427919 (* 1 = 0.427919 loss)
I0426 20:52:25.420253 32185 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:25.527230 32185 solver.cpp:219] Iteration 900 (934.554 iter/s, 0.107003s/100 iters), loss = 0.440057
I0426 20:52:25.527254 32185 solver.cpp:238]     Train net output #0: loss = 0.440057 (* 1 = 0.440057 loss)
I0426 20:52:25.527261 32185 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:25.562618 32191 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:25.632755 32185 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:25.635529 32185 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:25.637161 32185 solver.cpp:311] Iteration 1000, loss = 0.29959
I0426 20:52:25.637176 32185 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:25.712234 32192 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:25.712889 32185 solver.cpp:398]     Test net output #0: accuracy = 0.869
I0426 20:52:25.712925 32185 solver.cpp:398]     Test net output #1: loss = 0.322949 (* 1 = 0.322949 loss)
I0426 20:52:25.712932 32185 solver.cpp:316] Optimization Done.
I0426 20:52:25.712937 32185 caffe.cpp:259] Optimization Done.
