I0426 20:52:21.256098 32177 caffe.cpp:218] Using GPUs 0
I0426 20:52:21.286801 32177 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:21.738359 32177 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test110.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:21.738487 32177 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test110.prototxt
I0426 20:52:21.738840 32177 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:21.738857 32177 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:21.738942 32177 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:21.739007 32177 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:21.739105 32177 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:21.739125 32177 net.cpp:86] Creating Layer mnist
I0426 20:52:21.739132 32177 net.cpp:382] mnist -> data
I0426 20:52:21.739151 32177 net.cpp:382] mnist -> label
I0426 20:52:21.740064 32177 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:21.742266 32177 net.cpp:124] Setting up mnist
I0426 20:52:21.742297 32177 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:21.742301 32177 net.cpp:131] Top shape: 64 (64)
I0426 20:52:21.742319 32177 net.cpp:139] Memory required for data: 200960
I0426 20:52:21.742326 32177 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:21.742338 32177 net.cpp:86] Creating Layer conv0
I0426 20:52:21.742357 32177 net.cpp:408] conv0 <- data
I0426 20:52:21.742367 32177 net.cpp:382] conv0 -> conv0
I0426 20:52:21.973918 32177 net.cpp:124] Setting up conv0
I0426 20:52:21.973959 32177 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:21.973963 32177 net.cpp:139] Memory required for data: 3887360
I0426 20:52:21.973978 32177 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:21.973989 32177 net.cpp:86] Creating Layer pool0
I0426 20:52:21.973994 32177 net.cpp:408] pool0 <- conv0
I0426 20:52:21.973999 32177 net.cpp:382] pool0 -> pool0
I0426 20:52:21.974054 32177 net.cpp:124] Setting up pool0
I0426 20:52:21.974061 32177 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:21.974064 32177 net.cpp:139] Memory required for data: 4808960
I0426 20:52:21.974067 32177 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:21.974077 32177 net.cpp:86] Creating Layer conv1
I0426 20:52:21.974097 32177 net.cpp:408] conv1 <- pool0
I0426 20:52:21.974102 32177 net.cpp:382] conv1 -> conv1
I0426 20:52:21.976893 32177 net.cpp:124] Setting up conv1
I0426 20:52:21.976922 32177 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:52:21.976927 32177 net.cpp:139] Memory required for data: 4972800
I0426 20:52:21.976935 32177 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:21.976944 32177 net.cpp:86] Creating Layer pool1
I0426 20:52:21.976948 32177 net.cpp:408] pool1 <- conv1
I0426 20:52:21.976953 32177 net.cpp:382] pool1 -> pool1
I0426 20:52:21.977005 32177 net.cpp:124] Setting up pool1
I0426 20:52:21.977011 32177 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:52:21.977015 32177 net.cpp:139] Memory required for data: 5013760
I0426 20:52:21.977017 32177 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:21.977025 32177 net.cpp:86] Creating Layer ip1
I0426 20:52:21.977031 32177 net.cpp:408] ip1 <- pool1
I0426 20:52:21.977051 32177 net.cpp:382] ip1 -> ip1
I0426 20:52:21.977476 32177 net.cpp:124] Setting up ip1
I0426 20:52:21.977483 32177 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:21.977501 32177 net.cpp:139] Memory required for data: 5090560
I0426 20:52:21.977509 32177 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:21.977514 32177 net.cpp:86] Creating Layer relu1
I0426 20:52:21.977517 32177 net.cpp:408] relu1 <- ip1
I0426 20:52:21.977521 32177 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:21.977710 32177 net.cpp:124] Setting up relu1
I0426 20:52:21.977717 32177 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:21.977721 32177 net.cpp:139] Memory required for data: 5167360
I0426 20:52:21.977725 32177 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:21.977730 32177 net.cpp:86] Creating Layer ip2
I0426 20:52:21.977733 32177 net.cpp:408] ip2 <- ip1
I0426 20:52:21.977738 32177 net.cpp:382] ip2 -> ip2
I0426 20:52:21.979190 32177 net.cpp:124] Setting up ip2
I0426 20:52:21.979202 32177 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:21.979220 32177 net.cpp:139] Memory required for data: 5244160
I0426 20:52:21.979226 32177 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:21.979233 32177 net.cpp:86] Creating Layer relu2
I0426 20:52:21.979238 32177 net.cpp:408] relu2 <- ip2
I0426 20:52:21.979241 32177 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:21.980110 32177 net.cpp:124] Setting up relu2
I0426 20:52:21.980136 32177 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:21.980155 32177 net.cpp:139] Memory required for data: 5320960
I0426 20:52:21.980159 32177 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:21.980180 32177 net.cpp:86] Creating Layer ip3
I0426 20:52:21.980182 32177 net.cpp:408] ip3 <- ip2
I0426 20:52:21.980187 32177 net.cpp:382] ip3 -> ip3
I0426 20:52:21.981254 32177 net.cpp:124] Setting up ip3
I0426 20:52:21.981266 32177 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:21.981284 32177 net.cpp:139] Memory required for data: 5323520
I0426 20:52:21.981292 32177 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:21.981297 32177 net.cpp:86] Creating Layer relu3
I0426 20:52:21.981300 32177 net.cpp:408] relu3 <- ip3
I0426 20:52:21.981304 32177 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:21.981500 32177 net.cpp:124] Setting up relu3
I0426 20:52:21.981508 32177 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:21.981511 32177 net.cpp:139] Memory required for data: 5326080
I0426 20:52:21.981514 32177 layer_factory.hpp:77] Creating layer loss
I0426 20:52:21.981520 32177 net.cpp:86] Creating Layer loss
I0426 20:52:21.981523 32177 net.cpp:408] loss <- ip3
I0426 20:52:21.981528 32177 net.cpp:408] loss <- label
I0426 20:52:21.981533 32177 net.cpp:382] loss -> loss
I0426 20:52:21.981550 32177 layer_factory.hpp:77] Creating layer loss
I0426 20:52:21.981791 32177 net.cpp:124] Setting up loss
I0426 20:52:21.981801 32177 net.cpp:131] Top shape: (1)
I0426 20:52:21.981803 32177 net.cpp:134]     with loss weight 1
I0426 20:52:21.981818 32177 net.cpp:139] Memory required for data: 5326084
I0426 20:52:21.981822 32177 net.cpp:200] loss needs backward computation.
I0426 20:52:21.981825 32177 net.cpp:200] relu3 needs backward computation.
I0426 20:52:21.981829 32177 net.cpp:200] ip3 needs backward computation.
I0426 20:52:21.981832 32177 net.cpp:200] relu2 needs backward computation.
I0426 20:52:21.981834 32177 net.cpp:200] ip2 needs backward computation.
I0426 20:52:21.981853 32177 net.cpp:200] relu1 needs backward computation.
I0426 20:52:21.981855 32177 net.cpp:200] ip1 needs backward computation.
I0426 20:52:21.981858 32177 net.cpp:200] pool1 needs backward computation.
I0426 20:52:21.981861 32177 net.cpp:200] conv1 needs backward computation.
I0426 20:52:21.981865 32177 net.cpp:200] pool0 needs backward computation.
I0426 20:52:21.981868 32177 net.cpp:200] conv0 needs backward computation.
I0426 20:52:21.981871 32177 net.cpp:202] mnist does not need backward computation.
I0426 20:52:21.981874 32177 net.cpp:244] This network produces output loss
I0426 20:52:21.981884 32177 net.cpp:257] Network initialization done.
I0426 20:52:21.982208 32177 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test110.prototxt
I0426 20:52:21.982276 32177 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:21.982379 32177 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:21.982452 32177 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:21.982494 32177 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:21.982506 32177 net.cpp:86] Creating Layer mnist
I0426 20:52:21.982511 32177 net.cpp:382] mnist -> data
I0426 20:52:21.982517 32177 net.cpp:382] mnist -> label
I0426 20:52:21.982595 32177 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:21.983958 32177 net.cpp:124] Setting up mnist
I0426 20:52:21.983985 32177 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:21.984005 32177 net.cpp:131] Top shape: 100 (100)
I0426 20:52:21.984009 32177 net.cpp:139] Memory required for data: 314000
I0426 20:52:21.984012 32177 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:21.984025 32177 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:21.984030 32177 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:21.984035 32177 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:21.984041 32177 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:21.984088 32177 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:21.984093 32177 net.cpp:131] Top shape: 100 (100)
I0426 20:52:21.984097 32177 net.cpp:131] Top shape: 100 (100)
I0426 20:52:21.984099 32177 net.cpp:139] Memory required for data: 314800
I0426 20:52:21.984102 32177 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:21.984110 32177 net.cpp:86] Creating Layer conv0
I0426 20:52:21.984113 32177 net.cpp:408] conv0 <- data
I0426 20:52:21.984118 32177 net.cpp:382] conv0 -> conv0
I0426 20:52:21.985937 32177 net.cpp:124] Setting up conv0
I0426 20:52:21.985965 32177 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:21.985968 32177 net.cpp:139] Memory required for data: 6074800
I0426 20:52:21.985977 32177 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:21.985982 32177 net.cpp:86] Creating Layer pool0
I0426 20:52:21.985986 32177 net.cpp:408] pool0 <- conv0
I0426 20:52:21.985991 32177 net.cpp:382] pool0 -> pool0
I0426 20:52:21.986039 32177 net.cpp:124] Setting up pool0
I0426 20:52:21.986044 32177 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:21.986047 32177 net.cpp:139] Memory required for data: 7514800
I0426 20:52:21.986050 32177 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:21.986057 32177 net.cpp:86] Creating Layer conv1
I0426 20:52:21.986060 32177 net.cpp:408] conv1 <- pool0
I0426 20:52:21.986065 32177 net.cpp:382] conv1 -> conv1
I0426 20:52:21.988348 32177 net.cpp:124] Setting up conv1
I0426 20:52:21.988392 32177 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:52:21.988396 32177 net.cpp:139] Memory required for data: 7770800
I0426 20:52:21.988405 32177 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:21.988411 32177 net.cpp:86] Creating Layer pool1
I0426 20:52:21.988415 32177 net.cpp:408] pool1 <- conv1
I0426 20:52:21.988420 32177 net.cpp:382] pool1 -> pool1
I0426 20:52:21.988476 32177 net.cpp:124] Setting up pool1
I0426 20:52:21.988482 32177 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:52:21.988484 32177 net.cpp:139] Memory required for data: 7834800
I0426 20:52:21.988487 32177 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:21.988493 32177 net.cpp:86] Creating Layer ip1
I0426 20:52:21.988497 32177 net.cpp:408] ip1 <- pool1
I0426 20:52:21.988500 32177 net.cpp:382] ip1 -> ip1
I0426 20:52:21.988951 32177 net.cpp:124] Setting up ip1
I0426 20:52:21.988960 32177 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:21.988987 32177 net.cpp:139] Memory required for data: 7954800
I0426 20:52:21.988996 32177 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:21.989001 32177 net.cpp:86] Creating Layer relu1
I0426 20:52:21.989003 32177 net.cpp:408] relu1 <- ip1
I0426 20:52:21.989007 32177 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:21.989208 32177 net.cpp:124] Setting up relu1
I0426 20:52:21.989217 32177 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:21.989220 32177 net.cpp:139] Memory required for data: 8074800
I0426 20:52:21.989223 32177 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:21.989231 32177 net.cpp:86] Creating Layer ip2
I0426 20:52:21.989234 32177 net.cpp:408] ip2 <- ip1
I0426 20:52:21.989240 32177 net.cpp:382] ip2 -> ip2
I0426 20:52:21.989907 32177 net.cpp:124] Setting up ip2
I0426 20:52:21.989914 32177 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:21.989933 32177 net.cpp:139] Memory required for data: 8194800
I0426 20:52:21.989938 32177 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:21.989943 32177 net.cpp:86] Creating Layer relu2
I0426 20:52:21.989946 32177 net.cpp:408] relu2 <- ip2
I0426 20:52:21.989953 32177 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:21.990136 32177 net.cpp:124] Setting up relu2
I0426 20:52:21.990144 32177 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:21.990149 32177 net.cpp:139] Memory required for data: 8314800
I0426 20:52:21.990150 32177 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:21.990155 32177 net.cpp:86] Creating Layer ip3
I0426 20:52:21.990159 32177 net.cpp:408] ip3 <- ip2
I0426 20:52:21.990164 32177 net.cpp:382] ip3 -> ip3
I0426 20:52:21.990298 32177 net.cpp:124] Setting up ip3
I0426 20:52:21.990306 32177 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:21.990309 32177 net.cpp:139] Memory required for data: 8318800
I0426 20:52:21.990317 32177 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:21.990322 32177 net.cpp:86] Creating Layer relu3
I0426 20:52:21.990326 32177 net.cpp:408] relu3 <- ip3
I0426 20:52:21.990331 32177 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:21.991245 32177 net.cpp:124] Setting up relu3
I0426 20:52:21.991256 32177 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:21.991274 32177 net.cpp:139] Memory required for data: 8322800
I0426 20:52:21.991278 32177 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:21.991283 32177 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:21.991286 32177 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:21.991291 32177 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:21.991297 32177 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:21.991336 32177 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:21.991341 32177 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:21.991344 32177 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:21.991348 32177 net.cpp:139] Memory required for data: 8330800
I0426 20:52:21.991350 32177 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:21.991355 32177 net.cpp:86] Creating Layer accuracy
I0426 20:52:21.991358 32177 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:21.991363 32177 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:21.991367 32177 net.cpp:382] accuracy -> accuracy
I0426 20:52:21.991374 32177 net.cpp:124] Setting up accuracy
I0426 20:52:21.991377 32177 net.cpp:131] Top shape: (1)
I0426 20:52:21.991379 32177 net.cpp:139] Memory required for data: 8330804
I0426 20:52:21.991394 32177 layer_factory.hpp:77] Creating layer loss
I0426 20:52:21.991397 32177 net.cpp:86] Creating Layer loss
I0426 20:52:21.991400 32177 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:21.991405 32177 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:21.991408 32177 net.cpp:382] loss -> loss
I0426 20:52:21.991413 32177 layer_factory.hpp:77] Creating layer loss
I0426 20:52:21.991691 32177 net.cpp:124] Setting up loss
I0426 20:52:21.991703 32177 net.cpp:131] Top shape: (1)
I0426 20:52:21.991705 32177 net.cpp:134]     with loss weight 1
I0426 20:52:21.991721 32177 net.cpp:139] Memory required for data: 8330808
I0426 20:52:21.991732 32177 net.cpp:200] loss needs backward computation.
I0426 20:52:21.991736 32177 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:21.991740 32177 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:21.991744 32177 net.cpp:200] relu3 needs backward computation.
I0426 20:52:21.991747 32177 net.cpp:200] ip3 needs backward computation.
I0426 20:52:21.991756 32177 net.cpp:200] relu2 needs backward computation.
I0426 20:52:21.991760 32177 net.cpp:200] ip2 needs backward computation.
I0426 20:52:21.991762 32177 net.cpp:200] relu1 needs backward computation.
I0426 20:52:21.991765 32177 net.cpp:200] ip1 needs backward computation.
I0426 20:52:21.991768 32177 net.cpp:200] pool1 needs backward computation.
I0426 20:52:21.991772 32177 net.cpp:200] conv1 needs backward computation.
I0426 20:52:21.991775 32177 net.cpp:200] pool0 needs backward computation.
I0426 20:52:21.991780 32177 net.cpp:200] conv0 needs backward computation.
I0426 20:52:21.991783 32177 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:21.991787 32177 net.cpp:202] mnist does not need backward computation.
I0426 20:52:21.991791 32177 net.cpp:244] This network produces output accuracy
I0426 20:52:21.991793 32177 net.cpp:244] This network produces output loss
I0426 20:52:21.991806 32177 net.cpp:257] Network initialization done.
I0426 20:52:21.991850 32177 solver.cpp:56] Solver scaffolding done.
I0426 20:52:21.992231 32177 caffe.cpp:248] Starting Optimization
I0426 20:52:21.992238 32177 solver.cpp:273] Solving LeNet
I0426 20:52:21.992240 32177 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:21.993273 32177 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:21.998594 32177 blocking_queue.cpp:49] Waiting for data
I0426 20:52:22.068804 32184 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:22.069509 32177 solver.cpp:398]     Test net output #0: accuracy = 0.0756
I0426 20:52:22.069561 32177 solver.cpp:398]     Test net output #1: loss = 2.30647 (* 1 = 2.30647 loss)
I0426 20:52:22.074033 32177 solver.cpp:219] Iteration 0 (-3.9976e-31 iter/s, 0.081751s/100 iters), loss = 2.29867
I0426 20:52:22.074056 32177 solver.cpp:238]     Train net output #0: loss = 2.29867 (* 1 = 2.29867 loss)
I0426 20:52:22.074067 32177 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:22.180451 32177 solver.cpp:219] Iteration 100 (940.015 iter/s, 0.106381s/100 iters), loss = 1.65263
I0426 20:52:22.180490 32177 solver.cpp:238]     Train net output #0: loss = 1.65263 (* 1 = 1.65263 loss)
I0426 20:52:22.180496 32177 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:22.286388 32177 solver.cpp:219] Iteration 200 (944.259 iter/s, 0.105903s/100 iters), loss = 1.53914
I0426 20:52:22.286428 32177 solver.cpp:238]     Train net output #0: loss = 1.53914 (* 1 = 1.53914 loss)
I0426 20:52:22.286434 32177 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:22.391513 32177 solver.cpp:219] Iteration 300 (951.565 iter/s, 0.10509s/100 iters), loss = 1.46264
I0426 20:52:22.391553 32177 solver.cpp:238]     Train net output #0: loss = 1.46264 (* 1 = 1.46264 loss)
I0426 20:52:22.391559 32177 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:22.496650 32177 solver.cpp:219] Iteration 400 (951.454 iter/s, 0.105102s/100 iters), loss = 1.19052
I0426 20:52:22.496688 32177 solver.cpp:238]     Train net output #0: loss = 1.19052 (* 1 = 1.19052 loss)
I0426 20:52:22.496695 32177 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:22.601143 32177 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:22.659175 32184 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:22.660631 32177 solver.cpp:398]     Test net output #0: accuracy = 0.4723
I0426 20:52:22.660665 32177 solver.cpp:398]     Test net output #1: loss = 1.26384 (* 1 = 1.26384 loss)
I0426 20:52:22.661677 32177 solver.cpp:219] Iteration 500 (606.091 iter/s, 0.164992s/100 iters), loss = 1.13311
I0426 20:52:22.661728 32177 solver.cpp:238]     Train net output #0: loss = 1.13311 (* 1 = 1.13311 loss)
I0426 20:52:22.661734 32177 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:22.772150 32177 solver.cpp:219] Iteration 600 (905.576 iter/s, 0.110427s/100 iters), loss = 1.3818
I0426 20:52:22.772192 32177 solver.cpp:238]     Train net output #0: loss = 1.3818 (* 1 = 1.3818 loss)
I0426 20:52:22.772197 32177 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:22.880655 32177 solver.cpp:219] Iteration 700 (922.067 iter/s, 0.108452s/100 iters), loss = 1.08737
I0426 20:52:22.880686 32177 solver.cpp:238]     Train net output #0: loss = 1.08737 (* 1 = 1.08737 loss)
I0426 20:52:22.880693 32177 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:22.986207 32177 solver.cpp:219] Iteration 800 (947.779 iter/s, 0.10551s/100 iters), loss = 1.31816
I0426 20:52:22.986235 32177 solver.cpp:238]     Train net output #0: loss = 1.31816 (* 1 = 1.31816 loss)
I0426 20:52:22.986248 32177 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:23.091585 32177 solver.cpp:219] Iteration 900 (949.308 iter/s, 0.10534s/100 iters), loss = 1.67304
I0426 20:52:23.091612 32177 solver.cpp:238]     Train net output #0: loss = 1.67304 (* 1 = 1.67304 loss)
I0426 20:52:23.091619 32177 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:23.126509 32183 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:23.196097 32177 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:23.198982 32177 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:23.200537 32177 solver.cpp:311] Iteration 1000, loss = 1.27245
I0426 20:52:23.200551 32177 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:23.272953 32184 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:23.275454 32177 solver.cpp:398]     Test net output #0: accuracy = 0.475
I0426 20:52:23.275496 32177 solver.cpp:398]     Test net output #1: loss = 1.24036 (* 1 = 1.24036 loss)
I0426 20:52:23.275516 32177 solver.cpp:316] Optimization Done.
I0426 20:52:23.275521 32177 caffe.cpp:259] Optimization Done.
