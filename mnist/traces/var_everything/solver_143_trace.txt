I0426 20:53:43.447356 32501 caffe.cpp:218] Using GPUs 0
I0426 20:53:43.475248 32501 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:43.945572 32501 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test143.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:43.945703 32501 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test143.prototxt
I0426 20:53:43.946044 32501 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:43.946072 32501 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:43.946187 32501 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:53:43.946244 32501 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:43.946324 32501 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:43.946343 32501 net.cpp:86] Creating Layer mnist
I0426 20:53:43.946349 32501 net.cpp:382] mnist -> data
I0426 20:53:43.946367 32501 net.cpp:382] mnist -> label
I0426 20:53:43.947306 32501 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:43.949375 32501 net.cpp:124] Setting up mnist
I0426 20:53:43.949405 32501 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:43.949410 32501 net.cpp:131] Top shape: 64 (64)
I0426 20:53:43.949414 32501 net.cpp:139] Memory required for data: 200960
I0426 20:53:43.949419 32501 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:43.949447 32501 net.cpp:86] Creating Layer conv0
I0426 20:53:43.949466 32501 net.cpp:408] conv0 <- data
I0426 20:53:43.949476 32501 net.cpp:382] conv0 -> conv0
I0426 20:53:44.191656 32501 net.cpp:124] Setting up conv0
I0426 20:53:44.191699 32501 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:53:44.191704 32501 net.cpp:139] Memory required for data: 7573760
I0426 20:53:44.191752 32501 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:44.191766 32501 net.cpp:86] Creating Layer pool0
I0426 20:53:44.191771 32501 net.cpp:408] pool0 <- conv0
I0426 20:53:44.191787 32501 net.cpp:382] pool0 -> pool0
I0426 20:53:44.191834 32501 net.cpp:124] Setting up pool0
I0426 20:53:44.191841 32501 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:53:44.191844 32501 net.cpp:139] Memory required for data: 9416960
I0426 20:53:44.191848 32501 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:44.191874 32501 net.cpp:86] Creating Layer conv1
I0426 20:53:44.191876 32501 net.cpp:408] conv1 <- pool0
I0426 20:53:44.191881 32501 net.cpp:382] conv1 -> conv1
I0426 20:53:44.194664 32501 net.cpp:124] Setting up conv1
I0426 20:53:44.194694 32501 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:53:44.194696 32501 net.cpp:139] Memory required for data: 9580800
I0426 20:53:44.194705 32501 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:44.194711 32501 net.cpp:86] Creating Layer pool1
I0426 20:53:44.194715 32501 net.cpp:408] pool1 <- conv1
I0426 20:53:44.194736 32501 net.cpp:382] pool1 -> pool1
I0426 20:53:44.194771 32501 net.cpp:124] Setting up pool1
I0426 20:53:44.194777 32501 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:53:44.194780 32501 net.cpp:139] Memory required for data: 9621760
I0426 20:53:44.194783 32501 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:44.194793 32501 net.cpp:86] Creating Layer ip1
I0426 20:53:44.194797 32501 net.cpp:408] ip1 <- pool1
I0426 20:53:44.194802 32501 net.cpp:382] ip1 -> ip1
I0426 20:53:44.195001 32501 net.cpp:124] Setting up ip1
I0426 20:53:44.195009 32501 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:44.195013 32501 net.cpp:139] Memory required for data: 9647360
I0426 20:53:44.195019 32501 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:44.195024 32501 net.cpp:86] Creating Layer relu1
I0426 20:53:44.195027 32501 net.cpp:408] relu1 <- ip1
I0426 20:53:44.195031 32501 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:44.195197 32501 net.cpp:124] Setting up relu1
I0426 20:53:44.195206 32501 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:44.195209 32501 net.cpp:139] Memory required for data: 9672960
I0426 20:53:44.195212 32501 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:44.195219 32501 net.cpp:86] Creating Layer ip2
I0426 20:53:44.195221 32501 net.cpp:408] ip2 <- ip1
I0426 20:53:44.195226 32501 net.cpp:382] ip2 -> ip2
I0426 20:53:44.195323 32501 net.cpp:124] Setting up ip2
I0426 20:53:44.195330 32501 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:44.195333 32501 net.cpp:139] Memory required for data: 9675520
I0426 20:53:44.195338 32501 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:44.195344 32501 net.cpp:86] Creating Layer relu2
I0426 20:53:44.195348 32501 net.cpp:408] relu2 <- ip2
I0426 20:53:44.195350 32501 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:44.196122 32501 net.cpp:124] Setting up relu2
I0426 20:53:44.196135 32501 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:44.196153 32501 net.cpp:139] Memory required for data: 9678080
I0426 20:53:44.196156 32501 layer_factory.hpp:77] Creating layer loss
I0426 20:53:44.196162 32501 net.cpp:86] Creating Layer loss
I0426 20:53:44.196166 32501 net.cpp:408] loss <- ip2
I0426 20:53:44.196171 32501 net.cpp:408] loss <- label
I0426 20:53:44.196175 32501 net.cpp:382] loss -> loss
I0426 20:53:44.196203 32501 layer_factory.hpp:77] Creating layer loss
I0426 20:53:44.196426 32501 net.cpp:124] Setting up loss
I0426 20:53:44.196436 32501 net.cpp:131] Top shape: (1)
I0426 20:53:44.196439 32501 net.cpp:134]     with loss weight 1
I0426 20:53:44.196452 32501 net.cpp:139] Memory required for data: 9678084
I0426 20:53:44.196456 32501 net.cpp:200] loss needs backward computation.
I0426 20:53:44.196460 32501 net.cpp:200] relu2 needs backward computation.
I0426 20:53:44.196462 32501 net.cpp:200] ip2 needs backward computation.
I0426 20:53:44.196465 32501 net.cpp:200] relu1 needs backward computation.
I0426 20:53:44.196468 32501 net.cpp:200] ip1 needs backward computation.
I0426 20:53:44.196481 32501 net.cpp:200] pool1 needs backward computation.
I0426 20:53:44.196485 32501 net.cpp:200] conv1 needs backward computation.
I0426 20:53:44.196488 32501 net.cpp:200] pool0 needs backward computation.
I0426 20:53:44.196491 32501 net.cpp:200] conv0 needs backward computation.
I0426 20:53:44.196496 32501 net.cpp:202] mnist does not need backward computation.
I0426 20:53:44.196497 32501 net.cpp:244] This network produces output loss
I0426 20:53:44.196506 32501 net.cpp:257] Network initialization done.
I0426 20:53:44.196791 32501 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test143.prototxt
I0426 20:53:44.196823 32501 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:44.196944 32501 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:53:44.197010 32501 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:44.197055 32501 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:44.197067 32501 net.cpp:86] Creating Layer mnist
I0426 20:53:44.197072 32501 net.cpp:382] mnist -> data
I0426 20:53:44.197080 32501 net.cpp:382] mnist -> label
I0426 20:53:44.197198 32501 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:44.199113 32501 net.cpp:124] Setting up mnist
I0426 20:53:44.199141 32501 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:44.199146 32501 net.cpp:131] Top shape: 100 (100)
I0426 20:53:44.199149 32501 net.cpp:139] Memory required for data: 314000
I0426 20:53:44.199153 32501 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:44.199163 32501 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:44.199167 32501 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:44.199172 32501 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:44.199177 32501 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:44.199311 32501 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:44.199319 32501 net.cpp:131] Top shape: 100 (100)
I0426 20:53:44.199322 32501 net.cpp:131] Top shape: 100 (100)
I0426 20:53:44.199326 32501 net.cpp:139] Memory required for data: 314800
I0426 20:53:44.199328 32501 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:44.199337 32501 net.cpp:86] Creating Layer conv0
I0426 20:53:44.199340 32501 net.cpp:408] conv0 <- data
I0426 20:53:44.199344 32501 net.cpp:382] conv0 -> conv0
I0426 20:53:44.200878 32501 net.cpp:124] Setting up conv0
I0426 20:53:44.200893 32501 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:53:44.200896 32501 net.cpp:139] Memory required for data: 11834800
I0426 20:53:44.200922 32501 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:44.200927 32501 net.cpp:86] Creating Layer pool0
I0426 20:53:44.200932 32501 net.cpp:408] pool0 <- conv0
I0426 20:53:44.200937 32501 net.cpp:382] pool0 -> pool0
I0426 20:53:44.200973 32501 net.cpp:124] Setting up pool0
I0426 20:53:44.200979 32501 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:53:44.200983 32501 net.cpp:139] Memory required for data: 14714800
I0426 20:53:44.200985 32501 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:44.200994 32501 net.cpp:86] Creating Layer conv1
I0426 20:53:44.200996 32501 net.cpp:408] conv1 <- pool0
I0426 20:53:44.201001 32501 net.cpp:382] conv1 -> conv1
I0426 20:53:44.202610 32501 net.cpp:124] Setting up conv1
I0426 20:53:44.202625 32501 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:53:44.202628 32501 net.cpp:139] Memory required for data: 14970800
I0426 20:53:44.202636 32501 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:44.202658 32501 net.cpp:86] Creating Layer pool1
I0426 20:53:44.202667 32501 net.cpp:408] pool1 <- conv1
I0426 20:53:44.202672 32501 net.cpp:382] pool1 -> pool1
I0426 20:53:44.202708 32501 net.cpp:124] Setting up pool1
I0426 20:53:44.202714 32501 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:53:44.202716 32501 net.cpp:139] Memory required for data: 15034800
I0426 20:53:44.202719 32501 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:44.202747 32501 net.cpp:86] Creating Layer ip1
I0426 20:53:44.202750 32501 net.cpp:408] ip1 <- pool1
I0426 20:53:44.202754 32501 net.cpp:382] ip1 -> ip1
I0426 20:53:44.202937 32501 net.cpp:124] Setting up ip1
I0426 20:53:44.202947 32501 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:44.202950 32501 net.cpp:139] Memory required for data: 15074800
I0426 20:53:44.202958 32501 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:44.202963 32501 net.cpp:86] Creating Layer relu1
I0426 20:53:44.202966 32501 net.cpp:408] relu1 <- ip1
I0426 20:53:44.202976 32501 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:44.203133 32501 net.cpp:124] Setting up relu1
I0426 20:53:44.203143 32501 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:44.203158 32501 net.cpp:139] Memory required for data: 15114800
I0426 20:53:44.203161 32501 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:44.203167 32501 net.cpp:86] Creating Layer ip2
I0426 20:53:44.203176 32501 net.cpp:408] ip2 <- ip1
I0426 20:53:44.203181 32501 net.cpp:382] ip2 -> ip2
I0426 20:53:44.203286 32501 net.cpp:124] Setting up ip2
I0426 20:53:44.203294 32501 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:44.203297 32501 net.cpp:139] Memory required for data: 15118800
I0426 20:53:44.203308 32501 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:44.203312 32501 net.cpp:86] Creating Layer relu2
I0426 20:53:44.203316 32501 net.cpp:408] relu2 <- ip2
I0426 20:53:44.203320 32501 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:44.203480 32501 net.cpp:124] Setting up relu2
I0426 20:53:44.203490 32501 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:44.203492 32501 net.cpp:139] Memory required for data: 15122800
I0426 20:53:44.203501 32501 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0426 20:53:44.203506 32501 net.cpp:86] Creating Layer ip2_relu2_0_split
I0426 20:53:44.203510 32501 net.cpp:408] ip2_relu2_0_split <- ip2
I0426 20:53:44.203516 32501 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0426 20:53:44.203531 32501 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0426 20:53:44.203567 32501 net.cpp:124] Setting up ip2_relu2_0_split
I0426 20:53:44.203572 32501 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:44.203577 32501 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:44.203578 32501 net.cpp:139] Memory required for data: 15130800
I0426 20:53:44.203582 32501 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:44.203588 32501 net.cpp:86] Creating Layer accuracy
I0426 20:53:44.203591 32501 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0426 20:53:44.203595 32501 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:44.203599 32501 net.cpp:382] accuracy -> accuracy
I0426 20:53:44.203613 32501 net.cpp:124] Setting up accuracy
I0426 20:53:44.203616 32501 net.cpp:131] Top shape: (1)
I0426 20:53:44.203619 32501 net.cpp:139] Memory required for data: 15130804
I0426 20:53:44.203622 32501 layer_factory.hpp:77] Creating layer loss
I0426 20:53:44.203627 32501 net.cpp:86] Creating Layer loss
I0426 20:53:44.203630 32501 net.cpp:408] loss <- ip2_relu2_0_split_1
I0426 20:53:44.203634 32501 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:44.203639 32501 net.cpp:382] loss -> loss
I0426 20:53:44.203644 32501 layer_factory.hpp:77] Creating layer loss
I0426 20:53:44.203886 32501 net.cpp:124] Setting up loss
I0426 20:53:44.203893 32501 net.cpp:131] Top shape: (1)
I0426 20:53:44.203897 32501 net.cpp:134]     with loss weight 1
I0426 20:53:44.203902 32501 net.cpp:139] Memory required for data: 15130808
I0426 20:53:44.203905 32501 net.cpp:200] loss needs backward computation.
I0426 20:53:44.203909 32501 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:44.203912 32501 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0426 20:53:44.203915 32501 net.cpp:200] relu2 needs backward computation.
I0426 20:53:44.203918 32501 net.cpp:200] ip2 needs backward computation.
I0426 20:53:44.203922 32501 net.cpp:200] relu1 needs backward computation.
I0426 20:53:44.203923 32501 net.cpp:200] ip1 needs backward computation.
I0426 20:53:44.203927 32501 net.cpp:200] pool1 needs backward computation.
I0426 20:53:44.203929 32501 net.cpp:200] conv1 needs backward computation.
I0426 20:53:44.203933 32501 net.cpp:200] pool0 needs backward computation.
I0426 20:53:44.203935 32501 net.cpp:200] conv0 needs backward computation.
I0426 20:53:44.203938 32501 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:44.203943 32501 net.cpp:202] mnist does not need backward computation.
I0426 20:53:44.203944 32501 net.cpp:244] This network produces output accuracy
I0426 20:53:44.203948 32501 net.cpp:244] This network produces output loss
I0426 20:53:44.203959 32501 net.cpp:257] Network initialization done.
I0426 20:53:44.203995 32501 solver.cpp:56] Solver scaffolding done.
I0426 20:53:44.204291 32501 caffe.cpp:248] Starting Optimization
I0426 20:53:44.204298 32501 solver.cpp:273] Solving LeNet
I0426 20:53:44.204300 32501 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:44.205122 32501 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:44.211514 32501 blocking_queue.cpp:49] Waiting for data
I0426 20:53:44.282963 32512 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:44.283730 32501 solver.cpp:398]     Test net output #0: accuracy = 0.1084
I0426 20:53:44.283747 32501 solver.cpp:398]     Test net output #1: loss = 2.31762 (* 1 = 2.31762 loss)
I0426 20:53:44.288401 32501 solver.cpp:219] Iteration 0 (-1.1583e-30 iter/s, 0.0840726s/100 iters), loss = 2.31288
I0426 20:53:44.288425 32501 solver.cpp:238]     Train net output #0: loss = 2.31288 (* 1 = 2.31288 loss)
I0426 20:53:44.288451 32501 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:44.406576 32501 solver.cpp:219] Iteration 100 (846.476 iter/s, 0.118137s/100 iters), loss = 0.23345
I0426 20:53:44.406604 32501 solver.cpp:238]     Train net output #0: loss = 0.23345 (* 1 = 0.23345 loss)
I0426 20:53:44.406610 32501 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:44.527158 32501 solver.cpp:219] Iteration 200 (829.599 iter/s, 0.12054s/100 iters), loss = 0.178415
I0426 20:53:44.527194 32501 solver.cpp:238]     Train net output #0: loss = 0.178415 (* 1 = 0.178415 loss)
I0426 20:53:44.527201 32501 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:44.647953 32501 solver.cpp:219] Iteration 300 (828.193 iter/s, 0.120745s/100 iters), loss = 0.125329
I0426 20:53:44.647986 32501 solver.cpp:238]     Train net output #0: loss = 0.125329 (* 1 = 0.125329 loss)
I0426 20:53:44.647994 32501 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:44.768834 32501 solver.cpp:219] Iteration 400 (827.574 iter/s, 0.120835s/100 iters), loss = 0.108458
I0426 20:53:44.768867 32501 solver.cpp:238]     Train net output #0: loss = 0.108458 (* 1 = 0.108458 loss)
I0426 20:53:44.768873 32501 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:44.885653 32501 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:44.949681 32512 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:44.951961 32501 solver.cpp:398]     Test net output #0: accuracy = 0.973
I0426 20:53:44.951982 32501 solver.cpp:398]     Test net output #1: loss = 0.0831871 (* 1 = 0.0831871 loss)
I0426 20:53:44.953078 32501 solver.cpp:219] Iteration 500 (542.9 iter/s, 0.184196s/100 iters), loss = 0.121014
I0426 20:53:44.953115 32501 solver.cpp:238]     Train net output #0: loss = 0.121014 (* 1 = 0.121014 loss)
I0426 20:53:44.953121 32501 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:45.072233 32501 solver.cpp:219] Iteration 600 (839.468 iter/s, 0.119123s/100 iters), loss = 0.0762806
I0426 20:53:45.072276 32501 solver.cpp:238]     Train net output #0: loss = 0.0762806 (* 1 = 0.0762806 loss)
I0426 20:53:45.072283 32501 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:45.192390 32501 solver.cpp:219] Iteration 700 (832.513 iter/s, 0.120118s/100 iters), loss = 0.146762
I0426 20:53:45.192433 32501 solver.cpp:238]     Train net output #0: loss = 0.146762 (* 1 = 0.146762 loss)
I0426 20:53:45.192440 32501 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:45.312502 32501 solver.cpp:219] Iteration 800 (832.825 iter/s, 0.120073s/100 iters), loss = 0.253633
I0426 20:53:45.312541 32501 solver.cpp:238]     Train net output #0: loss = 0.253633 (* 1 = 0.253633 loss)
I0426 20:53:45.312546 32501 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:45.432725 32501 solver.cpp:219] Iteration 900 (832.123 iter/s, 0.120175s/100 iters), loss = 0.195766
I0426 20:53:45.432765 32501 solver.cpp:238]     Train net output #0: loss = 0.195766 (* 1 = 0.195766 loss)
I0426 20:53:45.432772 32501 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:45.472685 32507 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:45.551688 32501 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:45.552995 32501 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:45.553900 32501 solver.cpp:311] Iteration 1000, loss = 0.0790978
I0426 20:53:45.553930 32501 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:45.617789 32512 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:45.620112 32501 solver.cpp:398]     Test net output #0: accuracy = 0.9792
I0426 20:53:45.620146 32501 solver.cpp:398]     Test net output #1: loss = 0.0650048 (* 1 = 0.0650048 loss)
I0426 20:53:45.620151 32501 solver.cpp:316] Optimization Done.
I0426 20:53:45.620154 32501 caffe.cpp:259] Optimization Done.
