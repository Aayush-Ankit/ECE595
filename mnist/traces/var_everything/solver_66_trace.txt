I0426 20:50:39.202778 31804 caffe.cpp:218] Using GPUs 0
I0426 20:50:39.241607 31804 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:39.712280 31804 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test66.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:39.712440 31804 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test66.prototxt
I0426 20:50:39.712849 31804 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:39.712880 31804 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:39.712985 31804 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:39.713057 31804 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:39.713141 31804 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:39.713174 31804 net.cpp:86] Creating Layer mnist
I0426 20:50:39.713184 31804 net.cpp:382] mnist -> data
I0426 20:50:39.713202 31804 net.cpp:382] mnist -> label
I0426 20:50:39.714133 31804 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:39.716248 31804 net.cpp:124] Setting up mnist
I0426 20:50:39.716261 31804 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:39.716265 31804 net.cpp:131] Top shape: 64 (64)
I0426 20:50:39.716269 31804 net.cpp:139] Memory required for data: 200960
I0426 20:50:39.716274 31804 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:39.716286 31804 net.cpp:86] Creating Layer conv0
I0426 20:50:39.716318 31804 net.cpp:408] conv0 <- data
I0426 20:50:39.716330 31804 net.cpp:382] conv0 -> conv0
I0426 20:50:39.945199 31804 net.cpp:124] Setting up conv0
I0426 20:50:39.945240 31804 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:39.945243 31804 net.cpp:139] Memory required for data: 1675520
I0426 20:50:39.945258 31804 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:39.945271 31804 net.cpp:86] Creating Layer pool0
I0426 20:50:39.945274 31804 net.cpp:408] pool0 <- conv0
I0426 20:50:39.945278 31804 net.cpp:382] pool0 -> pool0
I0426 20:50:39.945339 31804 net.cpp:124] Setting up pool0
I0426 20:50:39.945344 31804 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:39.945348 31804 net.cpp:139] Memory required for data: 2044160
I0426 20:50:39.945350 31804 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:39.945360 31804 net.cpp:86] Creating Layer conv1
I0426 20:50:39.945363 31804 net.cpp:408] conv1 <- pool0
I0426 20:50:39.945368 31804 net.cpp:382] conv1 -> conv1
I0426 20:50:39.947979 31804 net.cpp:124] Setting up conv1
I0426 20:50:39.947993 31804 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:39.947996 31804 net.cpp:139] Memory required for data: 2208000
I0426 20:50:39.948004 31804 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:39.948011 31804 net.cpp:86] Creating Layer pool1
I0426 20:50:39.948014 31804 net.cpp:408] pool1 <- conv1
I0426 20:50:39.948019 31804 net.cpp:382] pool1 -> pool1
I0426 20:50:39.948070 31804 net.cpp:124] Setting up pool1
I0426 20:50:39.948074 31804 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:39.948076 31804 net.cpp:139] Memory required for data: 2248960
I0426 20:50:39.948079 31804 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:39.948086 31804 net.cpp:86] Creating Layer ip1
I0426 20:50:39.948089 31804 net.cpp:408] ip1 <- pool1
I0426 20:50:39.948093 31804 net.cpp:382] ip1 -> ip1
I0426 20:50:39.948467 31804 net.cpp:124] Setting up ip1
I0426 20:50:39.948473 31804 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:39.948492 31804 net.cpp:139] Memory required for data: 2325760
I0426 20:50:39.948498 31804 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:39.948503 31804 net.cpp:86] Creating Layer relu1
I0426 20:50:39.948506 31804 net.cpp:408] relu1 <- ip1
I0426 20:50:39.948510 31804 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:39.948667 31804 net.cpp:124] Setting up relu1
I0426 20:50:39.948675 31804 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:39.948678 31804 net.cpp:139] Memory required for data: 2402560
I0426 20:50:39.948680 31804 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:39.948686 31804 net.cpp:86] Creating Layer ip2
I0426 20:50:39.948689 31804 net.cpp:408] ip2 <- ip1
I0426 20:50:39.948693 31804 net.cpp:382] ip2 -> ip2
I0426 20:50:39.948972 31804 net.cpp:124] Setting up ip2
I0426 20:50:39.948981 31804 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:39.948984 31804 net.cpp:139] Memory required for data: 2428160
I0426 20:50:39.948989 31804 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:39.949010 31804 net.cpp:86] Creating Layer relu2
I0426 20:50:39.949014 31804 net.cpp:408] relu2 <- ip2
I0426 20:50:39.949018 31804 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:39.949827 31804 net.cpp:124] Setting up relu2
I0426 20:50:39.949839 31804 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:39.949856 31804 net.cpp:139] Memory required for data: 2453760
I0426 20:50:39.949861 31804 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:39.949867 31804 net.cpp:86] Creating Layer ip3
I0426 20:50:39.949869 31804 net.cpp:408] ip3 <- ip2
I0426 20:50:39.949875 31804 net.cpp:382] ip3 -> ip3
I0426 20:50:39.949990 31804 net.cpp:124] Setting up ip3
I0426 20:50:39.950007 31804 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:39.950011 31804 net.cpp:139] Memory required for data: 2456320
I0426 20:50:39.950017 31804 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:39.950022 31804 net.cpp:86] Creating Layer relu3
I0426 20:50:39.950026 31804 net.cpp:408] relu3 <- ip3
I0426 20:50:39.950029 31804 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:39.950181 31804 net.cpp:124] Setting up relu3
I0426 20:50:39.950189 31804 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:39.950192 31804 net.cpp:139] Memory required for data: 2458880
I0426 20:50:39.950196 31804 layer_factory.hpp:77] Creating layer loss
I0426 20:50:39.950201 31804 net.cpp:86] Creating Layer loss
I0426 20:50:39.950203 31804 net.cpp:408] loss <- ip3
I0426 20:50:39.950207 31804 net.cpp:408] loss <- label
I0426 20:50:39.950212 31804 net.cpp:382] loss -> loss
I0426 20:50:39.950228 31804 layer_factory.hpp:77] Creating layer loss
I0426 20:50:39.950453 31804 net.cpp:124] Setting up loss
I0426 20:50:39.950462 31804 net.cpp:131] Top shape: (1)
I0426 20:50:39.950465 31804 net.cpp:134]     with loss weight 1
I0426 20:50:39.950479 31804 net.cpp:139] Memory required for data: 2458884
I0426 20:50:39.950482 31804 net.cpp:200] loss needs backward computation.
I0426 20:50:39.950485 31804 net.cpp:200] relu3 needs backward computation.
I0426 20:50:39.950489 31804 net.cpp:200] ip3 needs backward computation.
I0426 20:50:39.950491 31804 net.cpp:200] relu2 needs backward computation.
I0426 20:50:39.950494 31804 net.cpp:200] ip2 needs backward computation.
I0426 20:50:39.950496 31804 net.cpp:200] relu1 needs backward computation.
I0426 20:50:39.950498 31804 net.cpp:200] ip1 needs backward computation.
I0426 20:50:39.950501 31804 net.cpp:200] pool1 needs backward computation.
I0426 20:50:39.950505 31804 net.cpp:200] conv1 needs backward computation.
I0426 20:50:39.950507 31804 net.cpp:200] pool0 needs backward computation.
I0426 20:50:39.950510 31804 net.cpp:200] conv0 needs backward computation.
I0426 20:50:39.950513 31804 net.cpp:202] mnist does not need backward computation.
I0426 20:50:39.950516 31804 net.cpp:244] This network produces output loss
I0426 20:50:39.950525 31804 net.cpp:257] Network initialization done.
I0426 20:50:39.950830 31804 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test66.prototxt
I0426 20:50:39.950857 31804 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:39.950947 31804 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:39.951022 31804 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:39.951064 31804 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:39.951076 31804 net.cpp:86] Creating Layer mnist
I0426 20:50:39.951081 31804 net.cpp:382] mnist -> data
I0426 20:50:39.951088 31804 net.cpp:382] mnist -> label
I0426 20:50:39.951169 31804 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:39.953244 31804 net.cpp:124] Setting up mnist
I0426 20:50:39.953256 31804 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:39.953260 31804 net.cpp:131] Top shape: 100 (100)
I0426 20:50:39.953263 31804 net.cpp:139] Memory required for data: 314000
I0426 20:50:39.953266 31804 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:39.953272 31804 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:39.953275 31804 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:39.953281 31804 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:39.953287 31804 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:39.953339 31804 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:39.953344 31804 net.cpp:131] Top shape: 100 (100)
I0426 20:50:39.953347 31804 net.cpp:131] Top shape: 100 (100)
I0426 20:50:39.953349 31804 net.cpp:139] Memory required for data: 314800
I0426 20:50:39.953352 31804 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:39.953361 31804 net.cpp:86] Creating Layer conv0
I0426 20:50:39.953364 31804 net.cpp:408] conv0 <- data
I0426 20:50:39.953369 31804 net.cpp:382] conv0 -> conv0
I0426 20:50:39.955193 31804 net.cpp:124] Setting up conv0
I0426 20:50:39.955206 31804 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:39.955209 31804 net.cpp:139] Memory required for data: 2618800
I0426 20:50:39.955219 31804 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:39.955235 31804 net.cpp:86] Creating Layer pool0
I0426 20:50:39.955238 31804 net.cpp:408] pool0 <- conv0
I0426 20:50:39.955243 31804 net.cpp:382] pool0 -> pool0
I0426 20:50:39.955278 31804 net.cpp:124] Setting up pool0
I0426 20:50:39.955283 31804 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:39.955286 31804 net.cpp:139] Memory required for data: 3194800
I0426 20:50:39.955288 31804 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:39.955297 31804 net.cpp:86] Creating Layer conv1
I0426 20:50:39.955301 31804 net.cpp:408] conv1 <- pool0
I0426 20:50:39.955304 31804 net.cpp:382] conv1 -> conv1
I0426 20:50:39.957465 31804 net.cpp:124] Setting up conv1
I0426 20:50:39.957478 31804 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:39.957481 31804 net.cpp:139] Memory required for data: 3450800
I0426 20:50:39.957489 31804 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:39.957496 31804 net.cpp:86] Creating Layer pool1
I0426 20:50:39.957515 31804 net.cpp:408] pool1 <- conv1
I0426 20:50:39.957520 31804 net.cpp:382] pool1 -> pool1
I0426 20:50:39.957556 31804 net.cpp:124] Setting up pool1
I0426 20:50:39.957561 31804 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:39.957564 31804 net.cpp:139] Memory required for data: 3514800
I0426 20:50:39.957566 31804 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:39.957579 31804 net.cpp:86] Creating Layer ip1
I0426 20:50:39.957582 31804 net.cpp:408] ip1 <- pool1
I0426 20:50:39.957589 31804 net.cpp:382] ip1 -> ip1
I0426 20:50:39.957969 31804 net.cpp:124] Setting up ip1
I0426 20:50:39.957993 31804 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:39.958019 31804 net.cpp:139] Memory required for data: 3634800
I0426 20:50:39.958026 31804 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:39.958031 31804 net.cpp:86] Creating Layer relu1
I0426 20:50:39.958035 31804 net.cpp:408] relu1 <- ip1
I0426 20:50:39.958040 31804 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:39.958222 31804 net.cpp:124] Setting up relu1
I0426 20:50:39.958231 31804 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:39.958235 31804 net.cpp:139] Memory required for data: 3754800
I0426 20:50:39.958236 31804 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:39.958245 31804 net.cpp:86] Creating Layer ip2
I0426 20:50:39.958248 31804 net.cpp:408] ip2 <- ip1
I0426 20:50:39.958259 31804 net.cpp:382] ip2 -> ip2
I0426 20:50:39.958544 31804 net.cpp:124] Setting up ip2
I0426 20:50:39.958551 31804 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:39.958554 31804 net.cpp:139] Memory required for data: 3794800
I0426 20:50:39.958559 31804 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:39.958570 31804 net.cpp:86] Creating Layer relu2
I0426 20:50:39.958573 31804 net.cpp:408] relu2 <- ip2
I0426 20:50:39.958580 31804 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:39.958731 31804 net.cpp:124] Setting up relu2
I0426 20:50:39.958740 31804 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:39.958744 31804 net.cpp:139] Memory required for data: 3834800
I0426 20:50:39.958746 31804 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:39.958751 31804 net.cpp:86] Creating Layer ip3
I0426 20:50:39.958753 31804 net.cpp:408] ip3 <- ip2
I0426 20:50:39.958758 31804 net.cpp:382] ip3 -> ip3
I0426 20:50:39.958866 31804 net.cpp:124] Setting up ip3
I0426 20:50:39.958873 31804 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:39.958878 31804 net.cpp:139] Memory required for data: 3838800
I0426 20:50:39.958884 31804 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:39.958889 31804 net.cpp:86] Creating Layer relu3
I0426 20:50:39.958899 31804 net.cpp:408] relu3 <- ip3
I0426 20:50:39.958902 31804 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:39.959727 31804 net.cpp:124] Setting up relu3
I0426 20:50:39.959738 31804 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:39.959741 31804 net.cpp:139] Memory required for data: 3842800
I0426 20:50:39.959744 31804 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:39.959751 31804 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:39.959754 31804 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:39.959759 31804 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:39.959766 31804 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:39.959807 31804 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:39.959812 31804 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:39.959816 31804 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:39.959818 31804 net.cpp:139] Memory required for data: 3850800
I0426 20:50:39.959834 31804 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:39.959839 31804 net.cpp:86] Creating Layer accuracy
I0426 20:50:39.959842 31804 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:39.959846 31804 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:39.959851 31804 net.cpp:382] accuracy -> accuracy
I0426 20:50:39.959858 31804 net.cpp:124] Setting up accuracy
I0426 20:50:39.959862 31804 net.cpp:131] Top shape: (1)
I0426 20:50:39.959866 31804 net.cpp:139] Memory required for data: 3850804
I0426 20:50:39.959867 31804 layer_factory.hpp:77] Creating layer loss
I0426 20:50:39.959872 31804 net.cpp:86] Creating Layer loss
I0426 20:50:39.959874 31804 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:39.959877 31804 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:39.959883 31804 net.cpp:382] loss -> loss
I0426 20:50:39.959889 31804 layer_factory.hpp:77] Creating layer loss
I0426 20:50:39.960130 31804 net.cpp:124] Setting up loss
I0426 20:50:39.960140 31804 net.cpp:131] Top shape: (1)
I0426 20:50:39.960144 31804 net.cpp:134]     with loss weight 1
I0426 20:50:39.960157 31804 net.cpp:139] Memory required for data: 3850808
I0426 20:50:39.960161 31804 net.cpp:200] loss needs backward computation.
I0426 20:50:39.960165 31804 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:39.960170 31804 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:39.960172 31804 net.cpp:200] relu3 needs backward computation.
I0426 20:50:39.960175 31804 net.cpp:200] ip3 needs backward computation.
I0426 20:50:39.960177 31804 net.cpp:200] relu2 needs backward computation.
I0426 20:50:39.960180 31804 net.cpp:200] ip2 needs backward computation.
I0426 20:50:39.960183 31804 net.cpp:200] relu1 needs backward computation.
I0426 20:50:39.960186 31804 net.cpp:200] ip1 needs backward computation.
I0426 20:50:39.960188 31804 net.cpp:200] pool1 needs backward computation.
I0426 20:50:39.960191 31804 net.cpp:200] conv1 needs backward computation.
I0426 20:50:39.960194 31804 net.cpp:200] pool0 needs backward computation.
I0426 20:50:39.960196 31804 net.cpp:200] conv0 needs backward computation.
I0426 20:50:39.960213 31804 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:39.960216 31804 net.cpp:202] mnist does not need backward computation.
I0426 20:50:39.960224 31804 net.cpp:244] This network produces output accuracy
I0426 20:50:39.960232 31804 net.cpp:244] This network produces output loss
I0426 20:50:39.960244 31804 net.cpp:257] Network initialization done.
I0426 20:50:39.960284 31804 solver.cpp:56] Solver scaffolding done.
I0426 20:50:39.960598 31804 caffe.cpp:248] Starting Optimization
I0426 20:50:39.960605 31804 solver.cpp:273] Solving LeNet
I0426 20:50:39.960608 31804 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:39.961441 31804 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:39.965369 31804 blocking_queue.cpp:49] Waiting for data
I0426 20:50:40.037132 31811 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:40.037755 31804 solver.cpp:398]     Test net output #0: accuracy = 0.1048
I0426 20:50:40.037775 31804 solver.cpp:398]     Test net output #1: loss = 2.30298 (* 1 = 2.30298 loss)
I0426 20:50:40.041190 31804 solver.cpp:219] Iteration 0 (0 iter/s, 0.0805458s/100 iters), loss = 2.31241
I0426 20:50:40.041211 31804 solver.cpp:238]     Train net output #0: loss = 2.31241 (* 1 = 2.31241 loss)
I0426 20:50:40.041236 31804 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:40.135300 31804 solver.cpp:219] Iteration 100 (1062.97 iter/s, 0.0940759s/100 iters), loss = 0.82536
I0426 20:50:40.135324 31804 solver.cpp:238]     Train net output #0: loss = 0.82536 (* 1 = 0.82536 loss)
I0426 20:50:40.135345 31804 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:40.228444 31804 solver.cpp:219] Iteration 200 (1073.99 iter/s, 0.0931104s/100 iters), loss = 0.225086
I0426 20:50:40.228482 31804 solver.cpp:238]     Train net output #0: loss = 0.225086 (* 1 = 0.225086 loss)
I0426 20:50:40.228487 31804 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:40.321275 31804 solver.cpp:219] Iteration 300 (1077.78 iter/s, 0.0927836s/100 iters), loss = 0.219246
I0426 20:50:40.321326 31804 solver.cpp:238]     Train net output #0: loss = 0.219246 (* 1 = 0.219246 loss)
I0426 20:50:40.321331 31804 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:40.413084 31804 solver.cpp:219] Iteration 400 (1089.92 iter/s, 0.0917495s/100 iters), loss = 0.11371
I0426 20:50:40.413108 31804 solver.cpp:238]     Train net output #0: loss = 0.11371 (* 1 = 0.11371 loss)
I0426 20:50:40.413115 31804 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:40.504900 31804 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:40.558590 31811 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:40.559244 31804 solver.cpp:398]     Test net output #0: accuracy = 0.9654
I0426 20:50:40.559263 31804 solver.cpp:398]     Test net output #1: loss = 0.113362 (* 1 = 0.113362 loss)
I0426 20:50:40.560144 31804 solver.cpp:219] Iteration 500 (680.162 iter/s, 0.147024s/100 iters), loss = 0.0543774
I0426 20:50:40.560227 31804 solver.cpp:238]     Train net output #0: loss = 0.0543774 (* 1 = 0.0543774 loss)
I0426 20:50:40.560235 31804 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:40.656520 31804 solver.cpp:219] Iteration 600 (1038.56 iter/s, 0.0962868s/100 iters), loss = 0.129296
I0426 20:50:40.656545 31804 solver.cpp:238]     Train net output #0: loss = 0.129296 (* 1 = 0.129296 loss)
I0426 20:50:40.656566 31804 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:40.751044 31804 solver.cpp:219] Iteration 700 (1058.32 iter/s, 0.0944896s/100 iters), loss = 0.141504
I0426 20:50:40.751082 31804 solver.cpp:238]     Train net output #0: loss = 0.141504 (* 1 = 0.141504 loss)
I0426 20:50:40.751088 31804 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:40.843684 31804 solver.cpp:219] Iteration 800 (1079.83 iter/s, 0.0926075s/100 iters), loss = 0.205444
I0426 20:50:40.843724 31804 solver.cpp:238]     Train net output #0: loss = 0.205444 (* 1 = 0.205444 loss)
I0426 20:50:40.843729 31804 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:40.938082 31804 solver.cpp:219] Iteration 900 (1059.72 iter/s, 0.0943647s/100 iters), loss = 0.189037
I0426 20:50:40.938122 31804 solver.cpp:238]     Train net output #0: loss = 0.189037 (* 1 = 0.189037 loss)
I0426 20:50:40.938127 31804 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:40.970297 31810 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:41.031855 31804 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:41.033615 31804 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:41.034621 31804 solver.cpp:311] Iteration 1000, loss = 0.11192
I0426 20:50:41.034636 31804 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:41.108515 31811 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:41.109108 31804 solver.cpp:398]     Test net output #0: accuracy = 0.9763
I0426 20:50:41.109128 31804 solver.cpp:398]     Test net output #1: loss = 0.0729201 (* 1 = 0.0729201 loss)
I0426 20:50:41.109133 31804 solver.cpp:316] Optimization Done.
I0426 20:50:41.109136 31804 caffe.cpp:259] Optimization Done.
