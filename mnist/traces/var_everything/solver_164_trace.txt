I0426 20:54:40.256683 32713 caffe.cpp:218] Using GPUs 0
I0426 20:54:40.292935 32713 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:54:40.752480 32713 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test164.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:54:40.752629 32713 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test164.prototxt
I0426 20:54:40.753005 32713 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:54:40.753023 32713 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:54:40.753147 32713 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:40.753255 32713 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:40.753367 32713 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:54:40.753396 32713 net.cpp:86] Creating Layer mnist
I0426 20:54:40.753407 32713 net.cpp:382] mnist -> data
I0426 20:54:40.753432 32713 net.cpp:382] mnist -> label
I0426 20:54:40.754427 32713 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:54:40.756508 32713 net.cpp:124] Setting up mnist
I0426 20:54:40.756539 32713 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:54:40.756544 32713 net.cpp:131] Top shape: 64 (64)
I0426 20:54:40.756547 32713 net.cpp:139] Memory required for data: 200960
I0426 20:54:40.756553 32713 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:40.756569 32713 net.cpp:86] Creating Layer conv0
I0426 20:54:40.756590 32713 net.cpp:408] conv0 <- data
I0426 20:54:40.756608 32713 net.cpp:382] conv0 -> conv0
I0426 20:54:40.985776 32713 net.cpp:124] Setting up conv0
I0426 20:54:40.985818 32713 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:54:40.985822 32713 net.cpp:139] Memory required for data: 7573760
I0426 20:54:40.985841 32713 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:40.985852 32713 net.cpp:86] Creating Layer pool0
I0426 20:54:40.985857 32713 net.cpp:408] pool0 <- conv0
I0426 20:54:40.985864 32713 net.cpp:382] pool0 -> pool0
I0426 20:54:40.985924 32713 net.cpp:124] Setting up pool0
I0426 20:54:40.985957 32713 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:54:40.985962 32713 net.cpp:139] Memory required for data: 9416960
I0426 20:54:40.985967 32713 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:40.985986 32713 net.cpp:86] Creating Layer conv1
I0426 20:54:40.985992 32713 net.cpp:408] conv1 <- pool0
I0426 20:54:40.986004 32713 net.cpp:382] conv1 -> conv1
I0426 20:54:40.988234 32713 net.cpp:124] Setting up conv1
I0426 20:54:40.988265 32713 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:54:40.988268 32713 net.cpp:139] Memory required for data: 9826560
I0426 20:54:40.988278 32713 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:40.988291 32713 net.cpp:86] Creating Layer pool1
I0426 20:54:40.988298 32713 net.cpp:408] pool1 <- conv1
I0426 20:54:40.988306 32713 net.cpp:382] pool1 -> pool1
I0426 20:54:40.988363 32713 net.cpp:124] Setting up pool1
I0426 20:54:40.988375 32713 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:54:40.988379 32713 net.cpp:139] Memory required for data: 9928960
I0426 20:54:40.988384 32713 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:40.988394 32713 net.cpp:86] Creating Layer ip1
I0426 20:54:40.988401 32713 net.cpp:408] ip1 <- pool1
I0426 20:54:40.988425 32713 net.cpp:382] ip1 -> ip1
I0426 20:54:40.990088 32713 net.cpp:124] Setting up ip1
I0426 20:54:40.990100 32713 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:40.990119 32713 net.cpp:139] Memory required for data: 10005760
I0426 20:54:40.990128 32713 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:40.990134 32713 net.cpp:86] Creating Layer relu1
I0426 20:54:40.990137 32713 net.cpp:408] relu1 <- ip1
I0426 20:54:40.990141 32713 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:40.990355 32713 net.cpp:124] Setting up relu1
I0426 20:54:40.990365 32713 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:40.990368 32713 net.cpp:139] Memory required for data: 10082560
I0426 20:54:40.990372 32713 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:40.990381 32713 net.cpp:86] Creating Layer ip2
I0426 20:54:40.990388 32713 net.cpp:408] ip2 <- ip1
I0426 20:54:40.990396 32713 net.cpp:382] ip2 -> ip2
I0426 20:54:40.990680 32713 net.cpp:124] Setting up ip2
I0426 20:54:40.990689 32713 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:54:40.990692 32713 net.cpp:139] Memory required for data: 10108160
I0426 20:54:40.990697 32713 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:40.990705 32713 net.cpp:86] Creating Layer relu2
I0426 20:54:40.990710 32713 net.cpp:408] relu2 <- ip2
I0426 20:54:40.990717 32713 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:40.991605 32713 net.cpp:124] Setting up relu2
I0426 20:54:40.991617 32713 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:54:40.991636 32713 net.cpp:139] Memory required for data: 10133760
I0426 20:54:40.991639 32713 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:40.991647 32713 net.cpp:86] Creating Layer ip3
I0426 20:54:40.991650 32713 net.cpp:408] ip3 <- ip2
I0426 20:54:40.991655 32713 net.cpp:382] ip3 -> ip3
I0426 20:54:40.991801 32713 net.cpp:124] Setting up ip3
I0426 20:54:40.991809 32713 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:40.991812 32713 net.cpp:139] Memory required for data: 10136320
I0426 20:54:40.991822 32713 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:40.991834 32713 net.cpp:86] Creating Layer relu3
I0426 20:54:40.991839 32713 net.cpp:408] relu3 <- ip3
I0426 20:54:40.991847 32713 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:40.992033 32713 net.cpp:124] Setting up relu3
I0426 20:54:40.992043 32713 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:40.992045 32713 net.cpp:139] Memory required for data: 10138880
I0426 20:54:40.992049 32713 layer_factory.hpp:77] Creating layer loss
I0426 20:54:40.992059 32713 net.cpp:86] Creating Layer loss
I0426 20:54:40.992064 32713 net.cpp:408] loss <- ip3
I0426 20:54:40.992071 32713 net.cpp:408] loss <- label
I0426 20:54:40.992079 32713 net.cpp:382] loss -> loss
I0426 20:54:40.992103 32713 layer_factory.hpp:77] Creating layer loss
I0426 20:54:40.992355 32713 net.cpp:124] Setting up loss
I0426 20:54:40.992367 32713 net.cpp:131] Top shape: (1)
I0426 20:54:40.992368 32713 net.cpp:134]     with loss weight 1
I0426 20:54:40.992386 32713 net.cpp:139] Memory required for data: 10138884
I0426 20:54:40.992393 32713 net.cpp:200] loss needs backward computation.
I0426 20:54:40.992398 32713 net.cpp:200] relu3 needs backward computation.
I0426 20:54:40.992403 32713 net.cpp:200] ip3 needs backward computation.
I0426 20:54:40.992408 32713 net.cpp:200] relu2 needs backward computation.
I0426 20:54:40.992411 32713 net.cpp:200] ip2 needs backward computation.
I0426 20:54:40.992416 32713 net.cpp:200] relu1 needs backward computation.
I0426 20:54:40.992420 32713 net.cpp:200] ip1 needs backward computation.
I0426 20:54:40.992424 32713 net.cpp:200] pool1 needs backward computation.
I0426 20:54:40.992429 32713 net.cpp:200] conv1 needs backward computation.
I0426 20:54:40.992434 32713 net.cpp:200] pool0 needs backward computation.
I0426 20:54:40.992440 32713 net.cpp:200] conv0 needs backward computation.
I0426 20:54:40.992445 32713 net.cpp:202] mnist does not need backward computation.
I0426 20:54:40.992450 32713 net.cpp:244] This network produces output loss
I0426 20:54:40.992463 32713 net.cpp:257] Network initialization done.
I0426 20:54:40.992805 32713 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test164.prototxt
I0426 20:54:40.992871 32713 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:54:40.993018 32713 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:40.993144 32713 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:40.993232 32713 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:54:40.993264 32713 net.cpp:86] Creating Layer mnist
I0426 20:54:40.993273 32713 net.cpp:382] mnist -> data
I0426 20:54:40.993285 32713 net.cpp:382] mnist -> label
I0426 20:54:40.993402 32713 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:54:40.994767 32713 net.cpp:124] Setting up mnist
I0426 20:54:40.994798 32713 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:54:40.994803 32713 net.cpp:131] Top shape: 100 (100)
I0426 20:54:40.994807 32713 net.cpp:139] Memory required for data: 314000
I0426 20:54:40.994810 32713 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:54:40.994817 32713 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:54:40.994820 32713 net.cpp:408] label_mnist_1_split <- label
I0426 20:54:40.994827 32713 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:54:40.994834 32713 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:54:40.994964 32713 net.cpp:124] Setting up label_mnist_1_split
I0426 20:54:40.994974 32713 net.cpp:131] Top shape: 100 (100)
I0426 20:54:40.994978 32713 net.cpp:131] Top shape: 100 (100)
I0426 20:54:40.994982 32713 net.cpp:139] Memory required for data: 314800
I0426 20:54:40.994987 32713 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:40.995029 32713 net.cpp:86] Creating Layer conv0
I0426 20:54:40.995035 32713 net.cpp:408] conv0 <- data
I0426 20:54:40.995044 32713 net.cpp:382] conv0 -> conv0
I0426 20:54:40.996582 32713 net.cpp:124] Setting up conv0
I0426 20:54:40.996611 32713 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:54:40.996614 32713 net.cpp:139] Memory required for data: 11834800
I0426 20:54:40.996623 32713 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:40.996629 32713 net.cpp:86] Creating Layer pool0
I0426 20:54:40.996632 32713 net.cpp:408] pool0 <- conv0
I0426 20:54:40.996639 32713 net.cpp:382] pool0 -> pool0
I0426 20:54:40.996687 32713 net.cpp:124] Setting up pool0
I0426 20:54:40.996696 32713 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:54:40.996701 32713 net.cpp:139] Memory required for data: 14714800
I0426 20:54:40.996706 32713 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:40.996721 32713 net.cpp:86] Creating Layer conv1
I0426 20:54:40.996727 32713 net.cpp:408] conv1 <- pool0
I0426 20:54:40.996736 32713 net.cpp:382] conv1 -> conv1
I0426 20:54:40.998492 32713 net.cpp:124] Setting up conv1
I0426 20:54:40.998520 32713 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:54:40.998524 32713 net.cpp:139] Memory required for data: 15354800
I0426 20:54:40.998533 32713 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:40.998538 32713 net.cpp:86] Creating Layer pool1
I0426 20:54:40.998543 32713 net.cpp:408] pool1 <- conv1
I0426 20:54:40.998546 32713 net.cpp:382] pool1 -> pool1
I0426 20:54:40.998601 32713 net.cpp:124] Setting up pool1
I0426 20:54:40.998611 32713 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:54:40.998616 32713 net.cpp:139] Memory required for data: 15514800
I0426 20:54:40.998622 32713 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:40.998632 32713 net.cpp:86] Creating Layer ip1
I0426 20:54:40.998638 32713 net.cpp:408] ip1 <- pool1
I0426 20:54:40.998646 32713 net.cpp:382] ip1 -> ip1
I0426 20:54:41.000192 32713 net.cpp:124] Setting up ip1
I0426 20:54:41.000205 32713 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:41.000249 32713 net.cpp:139] Memory required for data: 15634800
I0426 20:54:41.000258 32713 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:41.000265 32713 net.cpp:86] Creating Layer relu1
I0426 20:54:41.000269 32713 net.cpp:408] relu1 <- ip1
I0426 20:54:41.000277 32713 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:41.000502 32713 net.cpp:124] Setting up relu1
I0426 20:54:41.000512 32713 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:41.000516 32713 net.cpp:139] Memory required for data: 15754800
I0426 20:54:41.000519 32713 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:41.000532 32713 net.cpp:86] Creating Layer ip2
I0426 20:54:41.000538 32713 net.cpp:408] ip2 <- ip1
I0426 20:54:41.000548 32713 net.cpp:382] ip2 -> ip2
I0426 20:54:41.000982 32713 net.cpp:124] Setting up ip2
I0426 20:54:41.000991 32713 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:54:41.001010 32713 net.cpp:139] Memory required for data: 15794800
I0426 20:54:41.001016 32713 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:41.001022 32713 net.cpp:86] Creating Layer relu2
I0426 20:54:41.001027 32713 net.cpp:408] relu2 <- ip2
I0426 20:54:41.001032 32713 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:41.001274 32713 net.cpp:124] Setting up relu2
I0426 20:54:41.001288 32713 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:54:41.001302 32713 net.cpp:139] Memory required for data: 15834800
I0426 20:54:41.001307 32713 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:41.001315 32713 net.cpp:86] Creating Layer ip3
I0426 20:54:41.001322 32713 net.cpp:408] ip3 <- ip2
I0426 20:54:41.001333 32713 net.cpp:382] ip3 -> ip3
I0426 20:54:41.001451 32713 net.cpp:124] Setting up ip3
I0426 20:54:41.001461 32713 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:41.001462 32713 net.cpp:139] Memory required for data: 15838800
I0426 20:54:41.001472 32713 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:41.001479 32713 net.cpp:86] Creating Layer relu3
I0426 20:54:41.001484 32713 net.cpp:408] relu3 <- ip3
I0426 20:54:41.001492 32713 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:41.002321 32713 net.cpp:124] Setting up relu3
I0426 20:54:41.002332 32713 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:41.002351 32713 net.cpp:139] Memory required for data: 15842800
I0426 20:54:41.002354 32713 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:54:41.002359 32713 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:54:41.002362 32713 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:54:41.002369 32713 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:54:41.002375 32713 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:54:41.002425 32713 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:54:41.002435 32713 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:41.002441 32713 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:41.002446 32713 net.cpp:139] Memory required for data: 15850800
I0426 20:54:41.002451 32713 layer_factory.hpp:77] Creating layer accuracy
I0426 20:54:41.002461 32713 net.cpp:86] Creating Layer accuracy
I0426 20:54:41.002466 32713 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:54:41.002472 32713 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:54:41.002481 32713 net.cpp:382] accuracy -> accuracy
I0426 20:54:41.002493 32713 net.cpp:124] Setting up accuracy
I0426 20:54:41.002501 32713 net.cpp:131] Top shape: (1)
I0426 20:54:41.002504 32713 net.cpp:139] Memory required for data: 15850804
I0426 20:54:41.002509 32713 layer_factory.hpp:77] Creating layer loss
I0426 20:54:41.002516 32713 net.cpp:86] Creating Layer loss
I0426 20:54:41.002521 32713 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:54:41.002527 32713 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:54:41.002534 32713 net.cpp:382] loss -> loss
I0426 20:54:41.002543 32713 layer_factory.hpp:77] Creating layer loss
I0426 20:54:41.002789 32713 net.cpp:124] Setting up loss
I0426 20:54:41.002800 32713 net.cpp:131] Top shape: (1)
I0426 20:54:41.002806 32713 net.cpp:134]     with loss weight 1
I0426 20:54:41.002827 32713 net.cpp:139] Memory required for data: 15850808
I0426 20:54:41.002833 32713 net.cpp:200] loss needs backward computation.
I0426 20:54:41.002838 32713 net.cpp:202] accuracy does not need backward computation.
I0426 20:54:41.002843 32713 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:54:41.002848 32713 net.cpp:200] relu3 needs backward computation.
I0426 20:54:41.002853 32713 net.cpp:200] ip3 needs backward computation.
I0426 20:54:41.002857 32713 net.cpp:200] relu2 needs backward computation.
I0426 20:54:41.002861 32713 net.cpp:200] ip2 needs backward computation.
I0426 20:54:41.002866 32713 net.cpp:200] relu1 needs backward computation.
I0426 20:54:41.002871 32713 net.cpp:200] ip1 needs backward computation.
I0426 20:54:41.002876 32713 net.cpp:200] pool1 needs backward computation.
I0426 20:54:41.002881 32713 net.cpp:200] conv1 needs backward computation.
I0426 20:54:41.002885 32713 net.cpp:200] pool0 needs backward computation.
I0426 20:54:41.002889 32713 net.cpp:200] conv0 needs backward computation.
I0426 20:54:41.002895 32713 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:54:41.002902 32713 net.cpp:202] mnist does not need backward computation.
I0426 20:54:41.002905 32713 net.cpp:244] This network produces output accuracy
I0426 20:54:41.002910 32713 net.cpp:244] This network produces output loss
I0426 20:54:41.002928 32713 net.cpp:257] Network initialization done.
I0426 20:54:41.002986 32713 solver.cpp:56] Solver scaffolding done.
I0426 20:54:41.003329 32713 caffe.cpp:248] Starting Optimization
I0426 20:54:41.003335 32713 solver.cpp:273] Solving LeNet
I0426 20:54:41.003338 32713 solver.cpp:274] Learning Rate Policy: inv
I0426 20:54:41.004180 32713 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:54:41.011441 32713 blocking_queue.cpp:49] Waiting for data
I0426 20:54:41.083250 32720 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:41.084267 32713 solver.cpp:398]     Test net output #0: accuracy = 0.0893
I0426 20:54:41.084302 32713 solver.cpp:398]     Test net output #1: loss = 2.31174 (* 1 = 2.31174 loss)
I0426 20:54:41.089500 32713 solver.cpp:219] Iteration 0 (0 iter/s, 0.0861256s/100 iters), loss = 2.32175
I0426 20:54:41.089540 32713 solver.cpp:238]     Train net output #0: loss = 2.32175 (* 1 = 2.32175 loss)
I0426 20:54:41.089550 32713 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:54:41.236356 32713 solver.cpp:219] Iteration 100 (681.116 iter/s, 0.146818s/100 iters), loss = 0.764284
I0426 20:54:41.236382 32713 solver.cpp:238]     Train net output #0: loss = 0.764284 (* 1 = 0.764284 loss)
I0426 20:54:41.236389 32713 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:54:41.384964 32713 solver.cpp:219] Iteration 200 (673.092 iter/s, 0.148568s/100 iters), loss = 0.178458
I0426 20:54:41.384994 32713 solver.cpp:238]     Train net output #0: loss = 0.178458 (* 1 = 0.178458 loss)
I0426 20:54:41.385000 32713 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:54:41.534947 32713 solver.cpp:219] Iteration 300 (666.946 iter/s, 0.149937s/100 iters), loss = 0.173936
I0426 20:54:41.534986 32713 solver.cpp:238]     Train net output #0: loss = 0.173936 (* 1 = 0.173936 loss)
I0426 20:54:41.534992 32713 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:54:41.682377 32713 solver.cpp:219] Iteration 400 (678.512 iter/s, 0.147381s/100 iters), loss = 0.0712249
I0426 20:54:41.682420 32713 solver.cpp:238]     Train net output #0: loss = 0.071225 (* 1 = 0.071225 loss)
I0426 20:54:41.682427 32713 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:54:41.827967 32713 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:54:41.899305 32720 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:41.901904 32713 solver.cpp:398]     Test net output #0: accuracy = 0.9723
I0426 20:54:41.901942 32713 solver.cpp:398]     Test net output #1: loss = 0.0847176 (* 1 = 0.0847176 loss)
I0426 20:54:41.903286 32713 solver.cpp:219] Iteration 500 (452.764 iter/s, 0.220866s/100 iters), loss = 0.0631733
I0426 20:54:41.903339 32713 solver.cpp:238]     Train net output #0: loss = 0.0631733 (* 1 = 0.0631733 loss)
I0426 20:54:41.903345 32713 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:54:42.057250 32713 solver.cpp:219] Iteration 600 (649.717 iter/s, 0.153913s/100 iters), loss = 0.0732836
I0426 20:54:42.057274 32713 solver.cpp:238]     Train net output #0: loss = 0.0732836 (* 1 = 0.0732836 loss)
I0426 20:54:42.057282 32713 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:54:42.203040 32713 solver.cpp:219] Iteration 700 (686.096 iter/s, 0.145752s/100 iters), loss = 0.160072
I0426 20:54:42.203068 32713 solver.cpp:238]     Train net output #0: loss = 0.160072 (* 1 = 0.160072 loss)
I0426 20:54:42.203074 32713 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:54:42.349099 32713 solver.cpp:219] Iteration 800 (684.841 iter/s, 0.146019s/100 iters), loss = 0.206904
I0426 20:54:42.349123 32713 solver.cpp:238]     Train net output #0: loss = 0.206904 (* 1 = 0.206904 loss)
I0426 20:54:42.349129 32713 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:54:42.494246 32713 solver.cpp:219] Iteration 900 (689.127 iter/s, 0.145111s/100 iters), loss = 0.160451
I0426 20:54:42.494268 32713 solver.cpp:238]     Train net output #0: loss = 0.160451 (* 1 = 0.160451 loss)
I0426 20:54:42.494277 32713 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:54:42.542155 32719 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:42.638159 32713 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:54:42.642268 32713 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:54:42.644220 32713 solver.cpp:311] Iteration 1000, loss = 0.105973
I0426 20:54:42.644250 32713 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:54:42.714682 32720 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:42.717247 32713 solver.cpp:398]     Test net output #0: accuracy = 0.98
I0426 20:54:42.717281 32713 solver.cpp:398]     Test net output #1: loss = 0.0604645 (* 1 = 0.0604645 loss)
I0426 20:54:42.717286 32713 solver.cpp:316] Optimization Done.
I0426 20:54:42.717288 32713 caffe.cpp:259] Optimization Done.
