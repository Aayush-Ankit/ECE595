I0426 20:51:38.543879 32025 caffe.cpp:218] Using GPUs 0
I0426 20:51:38.584120 32025 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:39.108270 32025 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test92.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:39.108408 32025 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test92.prototxt
I0426 20:51:39.108825 32025 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:39.108845 32025 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:39.108948 32025 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:39.109025 32025 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:39.109125 32025 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:39.109149 32025 net.cpp:86] Creating Layer mnist
I0426 20:51:39.109156 32025 net.cpp:382] mnist -> data
I0426 20:51:39.109179 32025 net.cpp:382] mnist -> label
I0426 20:51:39.110321 32025 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:39.113075 32025 net.cpp:124] Setting up mnist
I0426 20:51:39.113093 32025 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:39.113099 32025 net.cpp:131] Top shape: 64 (64)
I0426 20:51:39.113103 32025 net.cpp:139] Memory required for data: 200960
I0426 20:51:39.113111 32025 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:39.113126 32025 net.cpp:86] Creating Layer conv0
I0426 20:51:39.113148 32025 net.cpp:408] conv0 <- data
I0426 20:51:39.113160 32025 net.cpp:382] conv0 -> conv0
I0426 20:51:39.381942 32025 net.cpp:124] Setting up conv0
I0426 20:51:39.381981 32025 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:39.381985 32025 net.cpp:139] Memory required for data: 1675520
I0426 20:51:39.382000 32025 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:39.382012 32025 net.cpp:86] Creating Layer pool0
I0426 20:51:39.382015 32025 net.cpp:408] pool0 <- conv0
I0426 20:51:39.382022 32025 net.cpp:382] pool0 -> pool0
I0426 20:51:39.382084 32025 net.cpp:124] Setting up pool0
I0426 20:51:39.382091 32025 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:39.382093 32025 net.cpp:139] Memory required for data: 2044160
I0426 20:51:39.382097 32025 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:39.382108 32025 net.cpp:86] Creating Layer conv1
I0426 20:51:39.382112 32025 net.cpp:408] conv1 <- pool0
I0426 20:51:39.382117 32025 net.cpp:382] conv1 -> conv1
I0426 20:51:39.384996 32025 net.cpp:124] Setting up conv1
I0426 20:51:39.385010 32025 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:39.385018 32025 net.cpp:139] Memory required for data: 2863360
I0426 20:51:39.385043 32025 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:39.385051 32025 net.cpp:86] Creating Layer pool1
I0426 20:51:39.385054 32025 net.cpp:408] pool1 <- conv1
I0426 20:51:39.385058 32025 net.cpp:382] pool1 -> pool1
I0426 20:51:39.385113 32025 net.cpp:124] Setting up pool1
I0426 20:51:39.385118 32025 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:39.385120 32025 net.cpp:139] Memory required for data: 3068160
I0426 20:51:39.385123 32025 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:39.385145 32025 net.cpp:86] Creating Layer ip1
I0426 20:51:39.385149 32025 net.cpp:408] ip1 <- pool1
I0426 20:51:39.385169 32025 net.cpp:382] ip1 -> ip1
I0426 20:51:39.386526 32025 net.cpp:124] Setting up ip1
I0426 20:51:39.386538 32025 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:39.386555 32025 net.cpp:139] Memory required for data: 3093760
I0426 20:51:39.386577 32025 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:39.386584 32025 net.cpp:86] Creating Layer relu1
I0426 20:51:39.386587 32025 net.cpp:408] relu1 <- ip1
I0426 20:51:39.386592 32025 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:39.386791 32025 net.cpp:124] Setting up relu1
I0426 20:51:39.386800 32025 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:39.386802 32025 net.cpp:139] Memory required for data: 3119360
I0426 20:51:39.386806 32025 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:39.386813 32025 net.cpp:86] Creating Layer ip2
I0426 20:51:39.386816 32025 net.cpp:408] ip2 <- ip1
I0426 20:51:39.386821 32025 net.cpp:382] ip2 -> ip2
I0426 20:51:39.387082 32025 net.cpp:124] Setting up ip2
I0426 20:51:39.387089 32025 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:39.387092 32025 net.cpp:139] Memory required for data: 3196160
I0426 20:51:39.387097 32025 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:39.387104 32025 net.cpp:86] Creating Layer relu2
I0426 20:51:39.387106 32025 net.cpp:408] relu2 <- ip2
I0426 20:51:39.387111 32025 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:39.387919 32025 net.cpp:124] Setting up relu2
I0426 20:51:39.387930 32025 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:39.387949 32025 net.cpp:139] Memory required for data: 3272960
I0426 20:51:39.387953 32025 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:39.387974 32025 net.cpp:86] Creating Layer ip3
I0426 20:51:39.387979 32025 net.cpp:408] ip3 <- ip2
I0426 20:51:39.387984 32025 net.cpp:382] ip3 -> ip3
I0426 20:51:39.388973 32025 net.cpp:124] Setting up ip3
I0426 20:51:39.389000 32025 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:39.389004 32025 net.cpp:139] Memory required for data: 3275520
I0426 20:51:39.389014 32025 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:39.389019 32025 net.cpp:86] Creating Layer relu3
I0426 20:51:39.389021 32025 net.cpp:408] relu3 <- ip3
I0426 20:51:39.389026 32025 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:39.389233 32025 net.cpp:124] Setting up relu3
I0426 20:51:39.389242 32025 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:39.389245 32025 net.cpp:139] Memory required for data: 3278080
I0426 20:51:39.389248 32025 layer_factory.hpp:77] Creating layer loss
I0426 20:51:39.389253 32025 net.cpp:86] Creating Layer loss
I0426 20:51:39.389256 32025 net.cpp:408] loss <- ip3
I0426 20:51:39.389261 32025 net.cpp:408] loss <- label
I0426 20:51:39.389266 32025 net.cpp:382] loss -> loss
I0426 20:51:39.389283 32025 layer_factory.hpp:77] Creating layer loss
I0426 20:51:39.389518 32025 net.cpp:124] Setting up loss
I0426 20:51:39.389526 32025 net.cpp:131] Top shape: (1)
I0426 20:51:39.389529 32025 net.cpp:134]     with loss weight 1
I0426 20:51:39.389562 32025 net.cpp:139] Memory required for data: 3278084
I0426 20:51:39.389566 32025 net.cpp:200] loss needs backward computation.
I0426 20:51:39.389569 32025 net.cpp:200] relu3 needs backward computation.
I0426 20:51:39.389572 32025 net.cpp:200] ip3 needs backward computation.
I0426 20:51:39.389575 32025 net.cpp:200] relu2 needs backward computation.
I0426 20:51:39.389578 32025 net.cpp:200] ip2 needs backward computation.
I0426 20:51:39.389581 32025 net.cpp:200] relu1 needs backward computation.
I0426 20:51:39.389583 32025 net.cpp:200] ip1 needs backward computation.
I0426 20:51:39.389586 32025 net.cpp:200] pool1 needs backward computation.
I0426 20:51:39.389590 32025 net.cpp:200] conv1 needs backward computation.
I0426 20:51:39.389592 32025 net.cpp:200] pool0 needs backward computation.
I0426 20:51:39.389595 32025 net.cpp:200] conv0 needs backward computation.
I0426 20:51:39.389598 32025 net.cpp:202] mnist does not need backward computation.
I0426 20:51:39.389601 32025 net.cpp:244] This network produces output loss
I0426 20:51:39.389611 32025 net.cpp:257] Network initialization done.
I0426 20:51:39.389941 32025 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test92.prototxt
I0426 20:51:39.389997 32025 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:39.390089 32025 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:39.390169 32025 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:39.390213 32025 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:39.390224 32025 net.cpp:86] Creating Layer mnist
I0426 20:51:39.390229 32025 net.cpp:382] mnist -> data
I0426 20:51:39.390236 32025 net.cpp:382] mnist -> label
I0426 20:51:39.390322 32025 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:39.391481 32025 net.cpp:124] Setting up mnist
I0426 20:51:39.391525 32025 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:39.391530 32025 net.cpp:131] Top shape: 100 (100)
I0426 20:51:39.391532 32025 net.cpp:139] Memory required for data: 314000
I0426 20:51:39.391535 32025 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:39.391563 32025 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:39.391567 32025 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:39.391573 32025 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:39.391580 32025 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:39.391623 32025 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:39.391630 32025 net.cpp:131] Top shape: 100 (100)
I0426 20:51:39.391634 32025 net.cpp:131] Top shape: 100 (100)
I0426 20:51:39.391636 32025 net.cpp:139] Memory required for data: 314800
I0426 20:51:39.391639 32025 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:39.391649 32025 net.cpp:86] Creating Layer conv0
I0426 20:51:39.391652 32025 net.cpp:408] conv0 <- data
I0426 20:51:39.391657 32025 net.cpp:382] conv0 -> conv0
I0426 20:51:39.393565 32025 net.cpp:124] Setting up conv0
I0426 20:51:39.393594 32025 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:39.393599 32025 net.cpp:139] Memory required for data: 2618800
I0426 20:51:39.393606 32025 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:39.393612 32025 net.cpp:86] Creating Layer pool0
I0426 20:51:39.393615 32025 net.cpp:408] pool0 <- conv0
I0426 20:51:39.393621 32025 net.cpp:382] pool0 -> pool0
I0426 20:51:39.393667 32025 net.cpp:124] Setting up pool0
I0426 20:51:39.393673 32025 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:39.393676 32025 net.cpp:139] Memory required for data: 3194800
I0426 20:51:39.393679 32025 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:39.393698 32025 net.cpp:86] Creating Layer conv1
I0426 20:51:39.393702 32025 net.cpp:408] conv1 <- pool0
I0426 20:51:39.393707 32025 net.cpp:382] conv1 -> conv1
I0426 20:51:39.395426 32025 net.cpp:124] Setting up conv1
I0426 20:51:39.395438 32025 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:39.395457 32025 net.cpp:139] Memory required for data: 4474800
I0426 20:51:39.395465 32025 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:39.395473 32025 net.cpp:86] Creating Layer pool1
I0426 20:51:39.395475 32025 net.cpp:408] pool1 <- conv1
I0426 20:51:39.395480 32025 net.cpp:382] pool1 -> pool1
I0426 20:51:39.395527 32025 net.cpp:124] Setting up pool1
I0426 20:51:39.395545 32025 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:39.395550 32025 net.cpp:139] Memory required for data: 4794800
I0426 20:51:39.395551 32025 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:39.395557 32025 net.cpp:86] Creating Layer ip1
I0426 20:51:39.395560 32025 net.cpp:408] ip1 <- pool1
I0426 20:51:39.395581 32025 net.cpp:382] ip1 -> ip1
I0426 20:51:39.396167 32025 net.cpp:124] Setting up ip1
I0426 20:51:39.396174 32025 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:39.396203 32025 net.cpp:139] Memory required for data: 4834800
I0426 20:51:39.396210 32025 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:39.396215 32025 net.cpp:86] Creating Layer relu1
I0426 20:51:39.396219 32025 net.cpp:408] relu1 <- ip1
I0426 20:51:39.396225 32025 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:39.396488 32025 net.cpp:124] Setting up relu1
I0426 20:51:39.396497 32025 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:39.396504 32025 net.cpp:139] Memory required for data: 4874800
I0426 20:51:39.396507 32025 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:39.396515 32025 net.cpp:86] Creating Layer ip2
I0426 20:51:39.396519 32025 net.cpp:408] ip2 <- ip1
I0426 20:51:39.396525 32025 net.cpp:382] ip2 -> ip2
I0426 20:51:39.396800 32025 net.cpp:124] Setting up ip2
I0426 20:51:39.396807 32025 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:39.396818 32025 net.cpp:139] Memory required for data: 4994800
I0426 20:51:39.396844 32025 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:39.396852 32025 net.cpp:86] Creating Layer relu2
I0426 20:51:39.396854 32025 net.cpp:408] relu2 <- ip2
I0426 20:51:39.396864 32025 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:39.397032 32025 net.cpp:124] Setting up relu2
I0426 20:51:39.397042 32025 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:39.397044 32025 net.cpp:139] Memory required for data: 5114800
I0426 20:51:39.397048 32025 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:39.397056 32025 net.cpp:86] Creating Layer ip3
I0426 20:51:39.397060 32025 net.cpp:408] ip3 <- ip2
I0426 20:51:39.397065 32025 net.cpp:382] ip3 -> ip3
I0426 20:51:39.397198 32025 net.cpp:124] Setting up ip3
I0426 20:51:39.397205 32025 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:39.397208 32025 net.cpp:139] Memory required for data: 5118800
I0426 20:51:39.397217 32025 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:39.397222 32025 net.cpp:86] Creating Layer relu3
I0426 20:51:39.397225 32025 net.cpp:408] relu3 <- ip3
I0426 20:51:39.397229 32025 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:39.398118 32025 net.cpp:124] Setting up relu3
I0426 20:51:39.398128 32025 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:39.398147 32025 net.cpp:139] Memory required for data: 5122800
I0426 20:51:39.398150 32025 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:39.398155 32025 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:39.398166 32025 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:39.398172 32025 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:39.398178 32025 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:39.398247 32025 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:39.398253 32025 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:39.398257 32025 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:39.398262 32025 net.cpp:139] Memory required for data: 5130800
I0426 20:51:39.398264 32025 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:39.398270 32025 net.cpp:86] Creating Layer accuracy
I0426 20:51:39.398274 32025 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:39.398278 32025 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:39.398288 32025 net.cpp:382] accuracy -> accuracy
I0426 20:51:39.398295 32025 net.cpp:124] Setting up accuracy
I0426 20:51:39.398299 32025 net.cpp:131] Top shape: (1)
I0426 20:51:39.398303 32025 net.cpp:139] Memory required for data: 5130804
I0426 20:51:39.398305 32025 layer_factory.hpp:77] Creating layer loss
I0426 20:51:39.398311 32025 net.cpp:86] Creating Layer loss
I0426 20:51:39.398315 32025 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:39.398319 32025 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:39.398324 32025 net.cpp:382] loss -> loss
I0426 20:51:39.398345 32025 layer_factory.hpp:77] Creating layer loss
I0426 20:51:39.398602 32025 net.cpp:124] Setting up loss
I0426 20:51:39.398612 32025 net.cpp:131] Top shape: (1)
I0426 20:51:39.398614 32025 net.cpp:134]     with loss weight 1
I0426 20:51:39.398630 32025 net.cpp:139] Memory required for data: 5130808
I0426 20:51:39.398635 32025 net.cpp:200] loss needs backward computation.
I0426 20:51:39.398639 32025 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:39.398643 32025 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:39.398646 32025 net.cpp:200] relu3 needs backward computation.
I0426 20:51:39.398649 32025 net.cpp:200] ip3 needs backward computation.
I0426 20:51:39.398653 32025 net.cpp:200] relu2 needs backward computation.
I0426 20:51:39.398655 32025 net.cpp:200] ip2 needs backward computation.
I0426 20:51:39.398658 32025 net.cpp:200] relu1 needs backward computation.
I0426 20:51:39.398660 32025 net.cpp:200] ip1 needs backward computation.
I0426 20:51:39.398679 32025 net.cpp:200] pool1 needs backward computation.
I0426 20:51:39.398682 32025 net.cpp:200] conv1 needs backward computation.
I0426 20:51:39.398685 32025 net.cpp:200] pool0 needs backward computation.
I0426 20:51:39.398689 32025 net.cpp:200] conv0 needs backward computation.
I0426 20:51:39.398692 32025 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:39.398696 32025 net.cpp:202] mnist does not need backward computation.
I0426 20:51:39.398699 32025 net.cpp:244] This network produces output accuracy
I0426 20:51:39.398701 32025 net.cpp:244] This network produces output loss
I0426 20:51:39.398713 32025 net.cpp:257] Network initialization done.
I0426 20:51:39.398754 32025 solver.cpp:56] Solver scaffolding done.
I0426 20:51:39.399091 32025 caffe.cpp:248] Starting Optimization
I0426 20:51:39.399103 32025 solver.cpp:273] Solving LeNet
I0426 20:51:39.399106 32025 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:39.400086 32025 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:39.404579 32025 blocking_queue.cpp:49] Waiting for data
I0426 20:51:39.476297 32032 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:39.476951 32025 solver.cpp:398]     Test net output #0: accuracy = 0.1265
I0426 20:51:39.476980 32025 solver.cpp:398]     Test net output #1: loss = 2.32413 (* 1 = 2.32413 loss)
I0426 20:51:39.480216 32025 solver.cpp:219] Iteration 0 (0 iter/s, 0.0810639s/100 iters), loss = 2.32119
I0426 20:51:39.480255 32025 solver.cpp:238]     Train net output #0: loss = 2.32119 (* 1 = 2.32119 loss)
I0426 20:51:39.480268 32025 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:39.600396 32025 solver.cpp:219] Iteration 100 (832.343 iter/s, 0.120143s/100 iters), loss = 1.37093
I0426 20:51:39.600435 32025 solver.cpp:238]     Train net output #0: loss = 1.37093 (* 1 = 1.37093 loss)
I0426 20:51:39.600440 32025 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:39.719943 32025 solver.cpp:219] Iteration 200 (836.736 iter/s, 0.119512s/100 iters), loss = 0.623241
I0426 20:51:39.719980 32025 solver.cpp:238]     Train net output #0: loss = 0.623241 (* 1 = 0.623241 loss)
I0426 20:51:39.719987 32025 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:39.839689 32025 solver.cpp:219] Iteration 300 (835.447 iter/s, 0.119696s/100 iters), loss = 1.05733
I0426 20:51:39.839728 32025 solver.cpp:238]     Train net output #0: loss = 1.05733 (* 1 = 1.05733 loss)
I0426 20:51:39.839735 32025 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:39.959326 32025 solver.cpp:219] Iteration 400 (836.306 iter/s, 0.119574s/100 iters), loss = 1.04109
I0426 20:51:39.959363 32025 solver.cpp:238]     Train net output #0: loss = 1.04109 (* 1 = 1.04109 loss)
I0426 20:51:39.959369 32025 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:40.077826 32025 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:40.132349 32032 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:40.132956 32025 solver.cpp:398]     Test net output #0: accuracy = 0.687
I0426 20:51:40.132987 32025 solver.cpp:398]     Test net output #1: loss = 0.798873 (* 1 = 0.798873 loss)
I0426 20:51:40.134243 32025 solver.cpp:219] Iteration 500 (571.822 iter/s, 0.17488s/100 iters), loss = 0.909606
I0426 20:51:40.134301 32025 solver.cpp:238]     Train net output #0: loss = 0.909606 (* 1 = 0.909606 loss)
I0426 20:51:40.134310 32025 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:40.259105 32025 solver.cpp:219] Iteration 600 (801.352 iter/s, 0.124789s/100 iters), loss = 0.625394
I0426 20:51:40.259130 32025 solver.cpp:238]     Train net output #0: loss = 0.625394 (* 1 = 0.625394 loss)
I0426 20:51:40.259137 32025 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:40.378408 32025 solver.cpp:219] Iteration 700 (838.452 iter/s, 0.119267s/100 iters), loss = 0.586385
I0426 20:51:40.378448 32025 solver.cpp:238]     Train net output #0: loss = 0.586385 (* 1 = 0.586385 loss)
I0426 20:51:40.378454 32025 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:40.498497 32025 solver.cpp:219] Iteration 800 (832.967 iter/s, 0.120053s/100 iters), loss = 0.908354
I0426 20:51:40.498522 32025 solver.cpp:238]     Train net output #0: loss = 0.908354 (* 1 = 0.908354 loss)
I0426 20:51:40.498528 32025 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:40.618139 32025 solver.cpp:219] Iteration 900 (836.069 iter/s, 0.119607s/100 iters), loss = 0.732483
I0426 20:51:40.618177 32025 solver.cpp:238]     Train net output #0: loss = 0.732483 (* 1 = 0.732483 loss)
I0426 20:51:40.618183 32025 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:40.657912 32031 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:40.736631 32025 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:40.739226 32025 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:40.740622 32025 solver.cpp:311] Iteration 1000, loss = 0.646746
I0426 20:51:40.740636 32025 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:40.815544 32032 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:40.816136 32025 solver.cpp:398]     Test net output #0: accuracy = 0.6918
I0426 20:51:40.816154 32025 solver.cpp:398]     Test net output #1: loss = 0.752262 (* 1 = 0.752262 loss)
I0426 20:51:40.816157 32025 solver.cpp:316] Optimization Done.
I0426 20:51:40.816160 32025 caffe.cpp:259] Optimization Done.
