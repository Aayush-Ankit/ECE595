I0426 20:51:46.194849 32053 caffe.cpp:218] Using GPUs 0
I0426 20:51:46.226702 32053 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:46.721647 32053 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test95.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:46.721796 32053 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test95.prototxt
I0426 20:51:46.722165 32053 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:46.722180 32053 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:46.722292 32053 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:46.722357 32053 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:46.722439 32053 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:46.722458 32053 net.cpp:86] Creating Layer mnist
I0426 20:51:46.722465 32053 net.cpp:382] mnist -> data
I0426 20:51:46.722483 32053 net.cpp:382] mnist -> label
I0426 20:51:46.723414 32053 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:46.725522 32053 net.cpp:124] Setting up mnist
I0426 20:51:46.725534 32053 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:46.725539 32053 net.cpp:131] Top shape: 64 (64)
I0426 20:51:46.725541 32053 net.cpp:139] Memory required for data: 200960
I0426 20:51:46.725548 32053 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:46.725561 32053 net.cpp:86] Creating Layer conv0
I0426 20:51:46.725594 32053 net.cpp:408] conv0 <- data
I0426 20:51:46.725603 32053 net.cpp:382] conv0 -> conv0
I0426 20:51:46.958967 32053 net.cpp:124] Setting up conv0
I0426 20:51:46.958992 32053 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:46.958995 32053 net.cpp:139] Memory required for data: 1675520
I0426 20:51:46.959009 32053 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:46.959022 32053 net.cpp:86] Creating Layer pool0
I0426 20:51:46.959025 32053 net.cpp:408] pool0 <- conv0
I0426 20:51:46.959029 32053 net.cpp:382] pool0 -> pool0
I0426 20:51:46.959089 32053 net.cpp:124] Setting up pool0
I0426 20:51:46.959095 32053 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:46.959097 32053 net.cpp:139] Memory required for data: 2044160
I0426 20:51:46.959100 32053 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:46.959110 32053 net.cpp:86] Creating Layer conv1
I0426 20:51:46.959113 32053 net.cpp:408] conv1 <- pool0
I0426 20:51:46.959118 32053 net.cpp:382] conv1 -> conv1
I0426 20:51:46.961894 32053 net.cpp:124] Setting up conv1
I0426 20:51:46.961923 32053 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:46.961927 32053 net.cpp:139] Memory required for data: 2863360
I0426 20:51:46.961935 32053 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:46.961943 32053 net.cpp:86] Creating Layer pool1
I0426 20:51:46.961947 32053 net.cpp:408] pool1 <- conv1
I0426 20:51:46.961951 32053 net.cpp:382] pool1 -> pool1
I0426 20:51:46.962003 32053 net.cpp:124] Setting up pool1
I0426 20:51:46.962008 32053 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:46.962011 32053 net.cpp:139] Memory required for data: 3068160
I0426 20:51:46.962014 32053 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:46.962021 32053 net.cpp:86] Creating Layer ip1
I0426 20:51:46.962024 32053 net.cpp:408] ip1 <- pool1
I0426 20:51:46.962028 32053 net.cpp:382] ip1 -> ip1
I0426 20:51:46.964179 32053 net.cpp:124] Setting up ip1
I0426 20:51:46.964191 32053 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:46.964210 32053 net.cpp:139] Memory required for data: 3144960
I0426 20:51:46.964217 32053 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:46.964223 32053 net.cpp:86] Creating Layer relu1
I0426 20:51:46.964227 32053 net.cpp:408] relu1 <- ip1
I0426 20:51:46.964231 32053 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:46.964437 32053 net.cpp:124] Setting up relu1
I0426 20:51:46.964447 32053 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:46.964449 32053 net.cpp:139] Memory required for data: 3221760
I0426 20:51:46.964452 32053 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:46.964458 32053 net.cpp:86] Creating Layer ip2
I0426 20:51:46.964462 32053 net.cpp:408] ip2 <- ip1
I0426 20:51:46.964467 32053 net.cpp:382] ip2 -> ip2
I0426 20:51:46.964720 32053 net.cpp:124] Setting up ip2
I0426 20:51:46.964727 32053 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:46.964730 32053 net.cpp:139] Memory required for data: 3247360
I0426 20:51:46.964735 32053 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:46.964740 32053 net.cpp:86] Creating Layer relu2
I0426 20:51:46.964743 32053 net.cpp:408] relu2 <- ip2
I0426 20:51:46.964751 32053 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:46.965607 32053 net.cpp:124] Setting up relu2
I0426 20:51:46.965618 32053 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:46.965637 32053 net.cpp:139] Memory required for data: 3272960
I0426 20:51:46.965641 32053 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:46.965647 32053 net.cpp:86] Creating Layer ip3
I0426 20:51:46.965651 32053 net.cpp:408] ip3 <- ip2
I0426 20:51:46.965661 32053 net.cpp:382] ip3 -> ip3
I0426 20:51:46.965780 32053 net.cpp:124] Setting up ip3
I0426 20:51:46.965787 32053 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:46.965790 32053 net.cpp:139] Memory required for data: 3275520
I0426 20:51:46.965798 32053 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:46.965803 32053 net.cpp:86] Creating Layer relu3
I0426 20:51:46.965806 32053 net.cpp:408] relu3 <- ip3
I0426 20:51:46.965811 32053 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:46.965975 32053 net.cpp:124] Setting up relu3
I0426 20:51:46.965983 32053 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:46.965986 32053 net.cpp:139] Memory required for data: 3278080
I0426 20:51:46.965989 32053 layer_factory.hpp:77] Creating layer loss
I0426 20:51:46.965996 32053 net.cpp:86] Creating Layer loss
I0426 20:51:46.965999 32053 net.cpp:408] loss <- ip3
I0426 20:51:46.966002 32053 net.cpp:408] loss <- label
I0426 20:51:46.966007 32053 net.cpp:382] loss -> loss
I0426 20:51:46.966022 32053 layer_factory.hpp:77] Creating layer loss
I0426 20:51:46.966265 32053 net.cpp:124] Setting up loss
I0426 20:51:46.966274 32053 net.cpp:131] Top shape: (1)
I0426 20:51:46.966277 32053 net.cpp:134]     with loss weight 1
I0426 20:51:46.966290 32053 net.cpp:139] Memory required for data: 3278084
I0426 20:51:46.966294 32053 net.cpp:200] loss needs backward computation.
I0426 20:51:46.966297 32053 net.cpp:200] relu3 needs backward computation.
I0426 20:51:46.966300 32053 net.cpp:200] ip3 needs backward computation.
I0426 20:51:46.966302 32053 net.cpp:200] relu2 needs backward computation.
I0426 20:51:46.966305 32053 net.cpp:200] ip2 needs backward computation.
I0426 20:51:46.966308 32053 net.cpp:200] relu1 needs backward computation.
I0426 20:51:46.966311 32053 net.cpp:200] ip1 needs backward computation.
I0426 20:51:46.966313 32053 net.cpp:200] pool1 needs backward computation.
I0426 20:51:46.966316 32053 net.cpp:200] conv1 needs backward computation.
I0426 20:51:46.966320 32053 net.cpp:200] pool0 needs backward computation.
I0426 20:51:46.966322 32053 net.cpp:200] conv0 needs backward computation.
I0426 20:51:46.966325 32053 net.cpp:202] mnist does not need backward computation.
I0426 20:51:46.966327 32053 net.cpp:244] This network produces output loss
I0426 20:51:46.966337 32053 net.cpp:257] Network initialization done.
I0426 20:51:46.966677 32053 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test95.prototxt
I0426 20:51:46.966732 32053 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:46.966835 32053 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:46.966914 32053 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:46.966958 32053 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:46.966970 32053 net.cpp:86] Creating Layer mnist
I0426 20:51:46.966975 32053 net.cpp:382] mnist -> data
I0426 20:51:46.967000 32053 net.cpp:382] mnist -> label
I0426 20:51:46.967104 32053 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:46.969156 32053 net.cpp:124] Setting up mnist
I0426 20:51:46.969169 32053 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:46.969174 32053 net.cpp:131] Top shape: 100 (100)
I0426 20:51:46.969177 32053 net.cpp:139] Memory required for data: 314000
I0426 20:51:46.969179 32053 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:46.969185 32053 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:46.969188 32053 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:46.969193 32053 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:46.969198 32053 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:46.969252 32053 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:46.969257 32053 net.cpp:131] Top shape: 100 (100)
I0426 20:51:46.969260 32053 net.cpp:131] Top shape: 100 (100)
I0426 20:51:46.969264 32053 net.cpp:139] Memory required for data: 314800
I0426 20:51:46.969265 32053 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:46.969274 32053 net.cpp:86] Creating Layer conv0
I0426 20:51:46.969277 32053 net.cpp:408] conv0 <- data
I0426 20:51:46.969282 32053 net.cpp:382] conv0 -> conv0
I0426 20:51:46.971072 32053 net.cpp:124] Setting up conv0
I0426 20:51:46.971084 32053 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:46.971088 32053 net.cpp:139] Memory required for data: 2618800
I0426 20:51:46.971096 32053 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:46.971125 32053 net.cpp:86] Creating Layer pool0
I0426 20:51:46.971129 32053 net.cpp:408] pool0 <- conv0
I0426 20:51:46.971134 32053 net.cpp:382] pool0 -> pool0
I0426 20:51:46.971169 32053 net.cpp:124] Setting up pool0
I0426 20:51:46.971174 32053 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:46.971177 32053 net.cpp:139] Memory required for data: 3194800
I0426 20:51:46.971179 32053 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:46.971187 32053 net.cpp:86] Creating Layer conv1
I0426 20:51:46.971190 32053 net.cpp:408] conv1 <- pool0
I0426 20:51:46.971211 32053 net.cpp:382] conv1 -> conv1
I0426 20:51:46.972883 32053 net.cpp:124] Setting up conv1
I0426 20:51:46.972913 32053 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:46.972916 32053 net.cpp:139] Memory required for data: 4474800
I0426 20:51:46.972925 32053 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:46.972947 32053 net.cpp:86] Creating Layer pool1
I0426 20:51:46.972951 32053 net.cpp:408] pool1 <- conv1
I0426 20:51:46.972957 32053 net.cpp:382] pool1 -> pool1
I0426 20:51:46.972995 32053 net.cpp:124] Setting up pool1
I0426 20:51:46.973001 32053 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:46.973004 32053 net.cpp:139] Memory required for data: 4794800
I0426 20:51:46.973007 32053 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:46.973014 32053 net.cpp:86] Creating Layer ip1
I0426 20:51:46.973018 32053 net.cpp:408] ip1 <- pool1
I0426 20:51:46.973024 32053 net.cpp:382] ip1 -> ip1
I0426 20:51:46.974457 32053 net.cpp:124] Setting up ip1
I0426 20:51:46.974464 32053 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:46.974476 32053 net.cpp:139] Memory required for data: 4914800
I0426 20:51:46.974498 32053 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:46.974511 32053 net.cpp:86] Creating Layer relu1
I0426 20:51:46.974514 32053 net.cpp:408] relu1 <- ip1
I0426 20:51:46.974519 32053 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:46.974746 32053 net.cpp:124] Setting up relu1
I0426 20:51:46.974756 32053 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:46.974758 32053 net.cpp:139] Memory required for data: 5034800
I0426 20:51:46.974761 32053 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:46.974767 32053 net.cpp:86] Creating Layer ip2
I0426 20:51:46.974771 32053 net.cpp:408] ip2 <- ip1
I0426 20:51:46.974776 32053 net.cpp:382] ip2 -> ip2
I0426 20:51:46.975080 32053 net.cpp:124] Setting up ip2
I0426 20:51:46.975087 32053 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:46.975090 32053 net.cpp:139] Memory required for data: 5074800
I0426 20:51:46.975096 32053 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:46.975100 32053 net.cpp:86] Creating Layer relu2
I0426 20:51:46.975103 32053 net.cpp:408] relu2 <- ip2
I0426 20:51:46.975109 32053 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:46.975281 32053 net.cpp:124] Setting up relu2
I0426 20:51:46.975289 32053 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:46.975292 32053 net.cpp:139] Memory required for data: 5114800
I0426 20:51:46.975296 32053 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:46.975301 32053 net.cpp:86] Creating Layer ip3
I0426 20:51:46.975303 32053 net.cpp:408] ip3 <- ip2
I0426 20:51:46.975307 32053 net.cpp:382] ip3 -> ip3
I0426 20:51:46.975421 32053 net.cpp:124] Setting up ip3
I0426 20:51:46.975428 32053 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:46.975431 32053 net.cpp:139] Memory required for data: 5118800
I0426 20:51:46.975438 32053 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:46.975442 32053 net.cpp:86] Creating Layer relu3
I0426 20:51:46.975446 32053 net.cpp:408] relu3 <- ip3
I0426 20:51:46.975456 32053 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:46.976416 32053 net.cpp:124] Setting up relu3
I0426 20:51:46.976428 32053 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:46.976431 32053 net.cpp:139] Memory required for data: 5122800
I0426 20:51:46.976434 32053 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:46.976439 32053 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:46.976459 32053 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:46.976464 32053 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:46.976469 32053 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:46.976505 32053 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:46.976511 32053 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:46.976513 32053 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:46.976516 32053 net.cpp:139] Memory required for data: 5130800
I0426 20:51:46.976519 32053 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:46.976523 32053 net.cpp:86] Creating Layer accuracy
I0426 20:51:46.976526 32053 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:46.976531 32053 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:46.976552 32053 net.cpp:382] accuracy -> accuracy
I0426 20:51:46.976557 32053 net.cpp:124] Setting up accuracy
I0426 20:51:46.976562 32053 net.cpp:131] Top shape: (1)
I0426 20:51:46.976563 32053 net.cpp:139] Memory required for data: 5130804
I0426 20:51:46.976567 32053 layer_factory.hpp:77] Creating layer loss
I0426 20:51:46.976577 32053 net.cpp:86] Creating Layer loss
I0426 20:51:46.976579 32053 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:46.976588 32053 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:46.976593 32053 net.cpp:382] loss -> loss
I0426 20:51:46.976598 32053 layer_factory.hpp:77] Creating layer loss
I0426 20:51:46.976838 32053 net.cpp:124] Setting up loss
I0426 20:51:46.976848 32053 net.cpp:131] Top shape: (1)
I0426 20:51:46.976851 32053 net.cpp:134]     with loss weight 1
I0426 20:51:46.976866 32053 net.cpp:139] Memory required for data: 5130808
I0426 20:51:46.976871 32053 net.cpp:200] loss needs backward computation.
I0426 20:51:46.976873 32053 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:46.976877 32053 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:46.976879 32053 net.cpp:200] relu3 needs backward computation.
I0426 20:51:46.976882 32053 net.cpp:200] ip3 needs backward computation.
I0426 20:51:46.976886 32053 net.cpp:200] relu2 needs backward computation.
I0426 20:51:46.976888 32053 net.cpp:200] ip2 needs backward computation.
I0426 20:51:46.976891 32053 net.cpp:200] relu1 needs backward computation.
I0426 20:51:46.976893 32053 net.cpp:200] ip1 needs backward computation.
I0426 20:51:46.976902 32053 net.cpp:200] pool1 needs backward computation.
I0426 20:51:46.976904 32053 net.cpp:200] conv1 needs backward computation.
I0426 20:51:46.976907 32053 net.cpp:200] pool0 needs backward computation.
I0426 20:51:46.976910 32053 net.cpp:200] conv0 needs backward computation.
I0426 20:51:46.976919 32053 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:46.976922 32053 net.cpp:202] mnist does not need backward computation.
I0426 20:51:46.976925 32053 net.cpp:244] This network produces output accuracy
I0426 20:51:46.976928 32053 net.cpp:244] This network produces output loss
I0426 20:51:46.976950 32053 net.cpp:257] Network initialization done.
I0426 20:51:46.977006 32053 solver.cpp:56] Solver scaffolding done.
I0426 20:51:46.977370 32053 caffe.cpp:248] Starting Optimization
I0426 20:51:46.977377 32053 solver.cpp:273] Solving LeNet
I0426 20:51:46.977380 32053 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:46.978921 32053 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:46.984397 32053 blocking_queue.cpp:49] Waiting for data
I0426 20:51:47.050493 32060 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:47.051126 32053 solver.cpp:398]     Test net output #0: accuracy = 0.1219
I0426 20:51:47.051144 32053 solver.cpp:398]     Test net output #1: loss = 2.31034 (* 1 = 2.31034 loss)
I0426 20:51:47.054424 32053 solver.cpp:219] Iteration 0 (0 iter/s, 0.0770181s/100 iters), loss = 2.31463
I0426 20:51:47.054445 32053 solver.cpp:238]     Train net output #0: loss = 2.31463 (* 1 = 2.31463 loss)
I0426 20:51:47.054471 32053 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:47.180726 32053 solver.cpp:219] Iteration 100 (791.983 iter/s, 0.126265s/100 iters), loss = 0.62637
I0426 20:51:47.180750 32053 solver.cpp:238]     Train net output #0: loss = 0.62637 (* 1 = 0.62637 loss)
I0426 20:51:47.180757 32053 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:47.303055 32053 solver.cpp:219] Iteration 200 (817.712 iter/s, 0.122292s/100 iters), loss = 0.397604
I0426 20:51:47.303081 32053 solver.cpp:238]     Train net output #0: loss = 0.397604 (* 1 = 0.397604 loss)
I0426 20:51:47.303086 32053 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:47.425691 32053 solver.cpp:219] Iteration 300 (815.665 iter/s, 0.122599s/100 iters), loss = 0.600721
I0426 20:51:47.425716 32053 solver.cpp:238]     Train net output #0: loss = 0.600721 (* 1 = 0.600721 loss)
I0426 20:51:47.425722 32053 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:47.547526 32053 solver.cpp:219] Iteration 400 (821.028 iter/s, 0.121799s/100 iters), loss = 0.347508
I0426 20:51:47.547549 32053 solver.cpp:238]     Train net output #0: loss = 0.347508 (* 1 = 0.347508 loss)
I0426 20:51:47.547555 32053 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:47.667769 32053 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:47.722429 32060 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:47.723040 32053 solver.cpp:398]     Test net output #0: accuracy = 0.8699
I0426 20:51:47.723057 32053 solver.cpp:398]     Test net output #1: loss = 0.343411 (* 1 = 0.343411 loss)
I0426 20:51:47.724216 32053 solver.cpp:219] Iteration 500 (566.084 iter/s, 0.176652s/100 iters), loss = 0.334052
I0426 20:51:47.724283 32053 solver.cpp:238]     Train net output #0: loss = 0.334052 (* 1 = 0.334052 loss)
I0426 20:51:47.724292 32053 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:47.852764 32053 solver.cpp:219] Iteration 600 (778.374 iter/s, 0.128473s/100 iters), loss = 0.259969
I0426 20:51:47.852788 32053 solver.cpp:238]     Train net output #0: loss = 0.259969 (* 1 = 0.259969 loss)
I0426 20:51:47.852813 32053 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:47.973984 32053 solver.cpp:219] Iteration 700 (825.189 iter/s, 0.121184s/100 iters), loss = 0.207274
I0426 20:51:47.974007 32053 solver.cpp:238]     Train net output #0: loss = 0.207274 (* 1 = 0.207274 loss)
I0426 20:51:47.974030 32053 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:48.096976 32053 solver.cpp:219] Iteration 800 (813.307 iter/s, 0.122955s/100 iters), loss = 0.510639
I0426 20:51:48.097003 32053 solver.cpp:238]     Train net output #0: loss = 0.510639 (* 1 = 0.510639 loss)
I0426 20:51:48.097009 32053 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:48.225971 32053 solver.cpp:219] Iteration 900 (775.462 iter/s, 0.128955s/100 iters), loss = 0.176495
I0426 20:51:48.225999 32053 solver.cpp:238]     Train net output #0: loss = 0.176495 (* 1 = 0.176495 loss)
I0426 20:51:48.226022 32053 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:48.269230 32059 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:48.355393 32053 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:48.360524 32053 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:48.363242 32053 solver.cpp:311] Iteration 1000, loss = 0.0740868
I0426 20:51:48.363262 32053 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:48.437233 32060 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:48.437824 32053 solver.cpp:398]     Test net output #0: accuracy = 0.9772
I0426 20:51:48.437844 32053 solver.cpp:398]     Test net output #1: loss = 0.0734145 (* 1 = 0.0734145 loss)
I0426 20:51:48.437849 32053 solver.cpp:316] Optimization Done.
I0426 20:51:48.437851 32053 caffe.cpp:259] Optimization Done.
