I0426 20:51:28.711287 31991 caffe.cpp:218] Using GPUs 0
I0426 20:51:28.750114 31991 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:29.274739 31991 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test88.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:29.274896 31991 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test88.prototxt
I0426 20:51:29.275280 31991 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:29.275296 31991 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:29.275388 31991 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:51:29.275460 31991 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:29.275557 31991 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:29.275583 31991 net.cpp:86] Creating Layer mnist
I0426 20:51:29.275590 31991 net.cpp:382] mnist -> data
I0426 20:51:29.275612 31991 net.cpp:382] mnist -> label
I0426 20:51:29.276697 31991 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:29.279232 31991 net.cpp:124] Setting up mnist
I0426 20:51:29.279251 31991 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:29.279258 31991 net.cpp:131] Top shape: 64 (64)
I0426 20:51:29.279261 31991 net.cpp:139] Memory required for data: 200960
I0426 20:51:29.279269 31991 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:29.279297 31991 net.cpp:86] Creating Layer conv0
I0426 20:51:29.279304 31991 net.cpp:408] conv0 <- data
I0426 20:51:29.279314 31991 net.cpp:382] conv0 -> conv0
I0426 20:51:29.566339 31991 net.cpp:124] Setting up conv0
I0426 20:51:29.566367 31991 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:29.566371 31991 net.cpp:139] Memory required for data: 1675520
I0426 20:51:29.566406 31991 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:29.566421 31991 net.cpp:86] Creating Layer pool0
I0426 20:51:29.566424 31991 net.cpp:408] pool0 <- conv0
I0426 20:51:29.566431 31991 net.cpp:382] pool0 -> pool0
I0426 20:51:29.566476 31991 net.cpp:124] Setting up pool0
I0426 20:51:29.566484 31991 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:29.566488 31991 net.cpp:139] Memory required for data: 2044160
I0426 20:51:29.566491 31991 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:29.566503 31991 net.cpp:86] Creating Layer conv1
I0426 20:51:29.566507 31991 net.cpp:408] conv1 <- pool0
I0426 20:51:29.566512 31991 net.cpp:382] conv1 -> conv1
I0426 20:51:29.569402 31991 net.cpp:124] Setting up conv1
I0426 20:51:29.569417 31991 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:29.569420 31991 net.cpp:139] Memory required for data: 2863360
I0426 20:51:29.569429 31991 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:29.569437 31991 net.cpp:86] Creating Layer pool1
I0426 20:51:29.569442 31991 net.cpp:408] pool1 <- conv1
I0426 20:51:29.569447 31991 net.cpp:382] pool1 -> pool1
I0426 20:51:29.569483 31991 net.cpp:124] Setting up pool1
I0426 20:51:29.569494 31991 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:29.569497 31991 net.cpp:139] Memory required for data: 3068160
I0426 20:51:29.569500 31991 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:29.569507 31991 net.cpp:86] Creating Layer ip1
I0426 20:51:29.569511 31991 net.cpp:408] ip1 <- pool1
I0426 20:51:29.569519 31991 net.cpp:382] ip1 -> ip1
I0426 20:51:29.571728 31991 net.cpp:124] Setting up ip1
I0426 20:51:29.571741 31991 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:29.571744 31991 net.cpp:139] Memory required for data: 3144960
I0426 20:51:29.571753 31991 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:29.571760 31991 net.cpp:86] Creating Layer relu1
I0426 20:51:29.571764 31991 net.cpp:408] relu1 <- ip1
I0426 20:51:29.571780 31991 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:29.571955 31991 net.cpp:124] Setting up relu1
I0426 20:51:29.571965 31991 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:29.571969 31991 net.cpp:139] Memory required for data: 3221760
I0426 20:51:29.571972 31991 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:29.571983 31991 net.cpp:86] Creating Layer ip2
I0426 20:51:29.571986 31991 net.cpp:408] ip2 <- ip1
I0426 20:51:29.571992 31991 net.cpp:382] ip2 -> ip2
I0426 20:51:29.572932 31991 net.cpp:124] Setting up ip2
I0426 20:51:29.572944 31991 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:29.572947 31991 net.cpp:139] Memory required for data: 3224320
I0426 20:51:29.572953 31991 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:29.572960 31991 net.cpp:86] Creating Layer relu2
I0426 20:51:29.572963 31991 net.cpp:408] relu2 <- ip2
I0426 20:51:29.572969 31991 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:29.573768 31991 net.cpp:124] Setting up relu2
I0426 20:51:29.573781 31991 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:29.573784 31991 net.cpp:139] Memory required for data: 3226880
I0426 20:51:29.573787 31991 layer_factory.hpp:77] Creating layer loss
I0426 20:51:29.573796 31991 net.cpp:86] Creating Layer loss
I0426 20:51:29.573798 31991 net.cpp:408] loss <- ip2
I0426 20:51:29.573802 31991 net.cpp:408] loss <- label
I0426 20:51:29.573808 31991 net.cpp:382] loss -> loss
I0426 20:51:29.573827 31991 layer_factory.hpp:77] Creating layer loss
I0426 20:51:29.574059 31991 net.cpp:124] Setting up loss
I0426 20:51:29.574069 31991 net.cpp:131] Top shape: (1)
I0426 20:51:29.574072 31991 net.cpp:134]     with loss weight 1
I0426 20:51:29.574086 31991 net.cpp:139] Memory required for data: 3226884
I0426 20:51:29.574090 31991 net.cpp:200] loss needs backward computation.
I0426 20:51:29.574095 31991 net.cpp:200] relu2 needs backward computation.
I0426 20:51:29.574097 31991 net.cpp:200] ip2 needs backward computation.
I0426 20:51:29.574100 31991 net.cpp:200] relu1 needs backward computation.
I0426 20:51:29.574102 31991 net.cpp:200] ip1 needs backward computation.
I0426 20:51:29.574115 31991 net.cpp:200] pool1 needs backward computation.
I0426 20:51:29.574118 31991 net.cpp:200] conv1 needs backward computation.
I0426 20:51:29.574122 31991 net.cpp:200] pool0 needs backward computation.
I0426 20:51:29.574126 31991 net.cpp:200] conv0 needs backward computation.
I0426 20:51:29.574128 31991 net.cpp:202] mnist does not need backward computation.
I0426 20:51:29.574131 31991 net.cpp:244] This network produces output loss
I0426 20:51:29.574141 31991 net.cpp:257] Network initialization done.
I0426 20:51:29.574424 31991 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test88.prototxt
I0426 20:51:29.574450 31991 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:29.574534 31991 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:51:29.574599 31991 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:29.574642 31991 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:29.574656 31991 net.cpp:86] Creating Layer mnist
I0426 20:51:29.574659 31991 net.cpp:382] mnist -> data
I0426 20:51:29.574666 31991 net.cpp:382] mnist -> label
I0426 20:51:29.574751 31991 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:29.576797 31991 net.cpp:124] Setting up mnist
I0426 20:51:29.576814 31991 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:29.576822 31991 net.cpp:131] Top shape: 100 (100)
I0426 20:51:29.576825 31991 net.cpp:139] Memory required for data: 314000
I0426 20:51:29.576829 31991 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:29.576877 31991 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:29.576881 31991 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:29.576901 31991 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:29.576908 31991 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:29.577025 31991 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:29.577033 31991 net.cpp:131] Top shape: 100 (100)
I0426 20:51:29.577038 31991 net.cpp:131] Top shape: 100 (100)
I0426 20:51:29.577040 31991 net.cpp:139] Memory required for data: 314800
I0426 20:51:29.577044 31991 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:29.577054 31991 net.cpp:86] Creating Layer conv0
I0426 20:51:29.577059 31991 net.cpp:408] conv0 <- data
I0426 20:51:29.577065 31991 net.cpp:382] conv0 -> conv0
I0426 20:51:29.578686 31991 net.cpp:124] Setting up conv0
I0426 20:51:29.578701 31991 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:29.578703 31991 net.cpp:139] Memory required for data: 2618800
I0426 20:51:29.578712 31991 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:29.578722 31991 net.cpp:86] Creating Layer pool0
I0426 20:51:29.578725 31991 net.cpp:408] pool0 <- conv0
I0426 20:51:29.578729 31991 net.cpp:382] pool0 -> pool0
I0426 20:51:29.578768 31991 net.cpp:124] Setting up pool0
I0426 20:51:29.578774 31991 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:29.578778 31991 net.cpp:139] Memory required for data: 3194800
I0426 20:51:29.578785 31991 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:29.578796 31991 net.cpp:86] Creating Layer conv1
I0426 20:51:29.578804 31991 net.cpp:408] conv1 <- pool0
I0426 20:51:29.578809 31991 net.cpp:382] conv1 -> conv1
I0426 20:51:29.580433 31991 net.cpp:124] Setting up conv1
I0426 20:51:29.580446 31991 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:29.580449 31991 net.cpp:139] Memory required for data: 4474800
I0426 20:51:29.580469 31991 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:29.580476 31991 net.cpp:86] Creating Layer pool1
I0426 20:51:29.580479 31991 net.cpp:408] pool1 <- conv1
I0426 20:51:29.580495 31991 net.cpp:382] pool1 -> pool1
I0426 20:51:29.580531 31991 net.cpp:124] Setting up pool1
I0426 20:51:29.580538 31991 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:29.580541 31991 net.cpp:139] Memory required for data: 4794800
I0426 20:51:29.580544 31991 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:29.580551 31991 net.cpp:86] Creating Layer ip1
I0426 20:51:29.580554 31991 net.cpp:408] ip1 <- pool1
I0426 20:51:29.580560 31991 net.cpp:382] ip1 -> ip1
I0426 20:51:29.581995 31991 net.cpp:124] Setting up ip1
I0426 20:51:29.582003 31991 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:29.582006 31991 net.cpp:139] Memory required for data: 4914800
I0426 20:51:29.582013 31991 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:29.582018 31991 net.cpp:86] Creating Layer relu1
I0426 20:51:29.582021 31991 net.cpp:408] relu1 <- ip1
I0426 20:51:29.582026 31991 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:29.582180 31991 net.cpp:124] Setting up relu1
I0426 20:51:29.582187 31991 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:29.582190 31991 net.cpp:139] Memory required for data: 5034800
I0426 20:51:29.582193 31991 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:29.582201 31991 net.cpp:86] Creating Layer ip2
I0426 20:51:29.582203 31991 net.cpp:408] ip2 <- ip1
I0426 20:51:29.582209 31991 net.cpp:382] ip2 -> ip2
I0426 20:51:29.582321 31991 net.cpp:124] Setting up ip2
I0426 20:51:29.582329 31991 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:29.582331 31991 net.cpp:139] Memory required for data: 5038800
I0426 20:51:29.582336 31991 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:29.582340 31991 net.cpp:86] Creating Layer relu2
I0426 20:51:29.582351 31991 net.cpp:408] relu2 <- ip2
I0426 20:51:29.582356 31991 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:29.582502 31991 net.cpp:124] Setting up relu2
I0426 20:51:29.582510 31991 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:29.582514 31991 net.cpp:139] Memory required for data: 5042800
I0426 20:51:29.582517 31991 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0426 20:51:29.582521 31991 net.cpp:86] Creating Layer ip2_relu2_0_split
I0426 20:51:29.582525 31991 net.cpp:408] ip2_relu2_0_split <- ip2
I0426 20:51:29.582545 31991 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0426 20:51:29.582562 31991 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0426 20:51:29.582598 31991 net.cpp:124] Setting up ip2_relu2_0_split
I0426 20:51:29.582607 31991 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:29.582610 31991 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:29.582612 31991 net.cpp:139] Memory required for data: 5050800
I0426 20:51:29.582615 31991 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:29.582620 31991 net.cpp:86] Creating Layer accuracy
I0426 20:51:29.582623 31991 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0426 20:51:29.582628 31991 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:29.582633 31991 net.cpp:382] accuracy -> accuracy
I0426 20:51:29.582638 31991 net.cpp:124] Setting up accuracy
I0426 20:51:29.582643 31991 net.cpp:131] Top shape: (1)
I0426 20:51:29.582645 31991 net.cpp:139] Memory required for data: 5050804
I0426 20:51:29.582648 31991 layer_factory.hpp:77] Creating layer loss
I0426 20:51:29.582653 31991 net.cpp:86] Creating Layer loss
I0426 20:51:29.582657 31991 net.cpp:408] loss <- ip2_relu2_0_split_1
I0426 20:51:29.582660 31991 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:29.582664 31991 net.cpp:382] loss -> loss
I0426 20:51:29.582670 31991 layer_factory.hpp:77] Creating layer loss
I0426 20:51:29.582901 31991 net.cpp:124] Setting up loss
I0426 20:51:29.582911 31991 net.cpp:131] Top shape: (1)
I0426 20:51:29.582913 31991 net.cpp:134]     with loss weight 1
I0426 20:51:29.582919 31991 net.cpp:139] Memory required for data: 5050808
I0426 20:51:29.582923 31991 net.cpp:200] loss needs backward computation.
I0426 20:51:29.582942 31991 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:29.582945 31991 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0426 20:51:29.582948 31991 net.cpp:200] relu2 needs backward computation.
I0426 20:51:29.582952 31991 net.cpp:200] ip2 needs backward computation.
I0426 20:51:29.582954 31991 net.cpp:200] relu1 needs backward computation.
I0426 20:51:29.582957 31991 net.cpp:200] ip1 needs backward computation.
I0426 20:51:29.582960 31991 net.cpp:200] pool1 needs backward computation.
I0426 20:51:29.582963 31991 net.cpp:200] conv1 needs backward computation.
I0426 20:51:29.582967 31991 net.cpp:200] pool0 needs backward computation.
I0426 20:51:29.582969 31991 net.cpp:200] conv0 needs backward computation.
I0426 20:51:29.582974 31991 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:29.582978 31991 net.cpp:202] mnist does not need backward computation.
I0426 20:51:29.582980 31991 net.cpp:244] This network produces output accuracy
I0426 20:51:29.582984 31991 net.cpp:244] This network produces output loss
I0426 20:51:29.582994 31991 net.cpp:257] Network initialization done.
I0426 20:51:29.583029 31991 solver.cpp:56] Solver scaffolding done.
I0426 20:51:29.583281 31991 caffe.cpp:248] Starting Optimization
I0426 20:51:29.583287 31991 solver.cpp:273] Solving LeNet
I0426 20:51:29.583289 31991 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:29.584695 31991 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:29.632354 31998 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:29.633630 31991 solver.cpp:398]     Test net output #0: accuracy = 0.0622
I0426 20:51:29.633663 31991 solver.cpp:398]     Test net output #1: loss = 2.32151 (* 1 = 2.32151 loss)
I0426 20:51:29.636513 31991 solver.cpp:219] Iteration 0 (-9.24361e-09 iter/s, 0.053201s/100 iters), loss = 2.3247
I0426 20:51:29.636548 31991 solver.cpp:238]     Train net output #0: loss = 2.3247 (* 1 = 2.3247 loss)
I0426 20:51:29.636559 31991 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:29.748215 31991 solver.cpp:219] Iteration 100 (895.559 iter/s, 0.111662s/100 iters), loss = 1.09079
I0426 20:51:29.748256 31991 solver.cpp:238]     Train net output #0: loss = 1.09079 (* 1 = 1.09079 loss)
I0426 20:51:29.748263 31991 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:29.858409 31991 solver.cpp:219] Iteration 200 (907.788 iter/s, 0.110158s/100 iters), loss = 0.498397
I0426 20:51:29.858463 31991 solver.cpp:238]     Train net output #0: loss = 0.498397 (* 1 = 0.498397 loss)
I0426 20:51:29.858469 31991 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:29.968783 31991 solver.cpp:219] Iteration 300 (906.405 iter/s, 0.110326s/100 iters), loss = 0.140789
I0426 20:51:29.968829 31991 solver.cpp:238]     Train net output #0: loss = 0.140789 (* 1 = 0.140789 loss)
I0426 20:51:29.968837 31991 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:30.079610 31991 solver.cpp:219] Iteration 400 (902.595 iter/s, 0.110792s/100 iters), loss = 0.117208
I0426 20:51:30.079653 31991 solver.cpp:238]     Train net output #0: loss = 0.117208 (* 1 = 0.117208 loss)
I0426 20:51:30.079658 31991 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:30.187889 31991 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:30.234549 31991 blocking_queue.cpp:49] Waiting for data
I0426 20:51:30.235098 31998 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:30.235718 31991 solver.cpp:398]     Test net output #0: accuracy = 0.9655
I0426 20:51:30.235741 31991 solver.cpp:398]     Test net output #1: loss = 0.103294 (* 1 = 0.103294 loss)
I0426 20:51:30.236876 31991 solver.cpp:219] Iteration 500 (636.027 iter/s, 0.157226s/100 iters), loss = 0.130296
I0426 20:51:30.236937 31991 solver.cpp:238]     Train net output #0: loss = 0.130296 (* 1 = 0.130296 loss)
I0426 20:51:30.236943 31991 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:30.354478 31991 solver.cpp:219] Iteration 600 (850.811 iter/s, 0.117535s/100 iters), loss = 0.0905318
I0426 20:51:30.354524 31991 solver.cpp:238]     Train net output #0: loss = 0.0905318 (* 1 = 0.0905318 loss)
I0426 20:51:30.354532 31991 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:30.466109 31991 solver.cpp:219] Iteration 700 (896.273 iter/s, 0.111573s/100 iters), loss = 0.125957
I0426 20:51:30.466151 31991 solver.cpp:238]     Train net output #0: loss = 0.125957 (* 1 = 0.125957 loss)
I0426 20:51:30.466158 31991 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:30.576661 31991 solver.cpp:219] Iteration 800 (904.844 iter/s, 0.110516s/100 iters), loss = 0.282456
I0426 20:51:30.576704 31991 solver.cpp:238]     Train net output #0: loss = 0.282456 (* 1 = 0.282456 loss)
I0426 20:51:30.576710 31991 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:30.687750 31991 solver.cpp:219] Iteration 900 (900.489 iter/s, 0.111051s/100 iters), loss = 0.150437
I0426 20:51:30.687794 31991 solver.cpp:238]     Train net output #0: loss = 0.150437 (* 1 = 0.150437 loss)
I0426 20:51:30.687818 31991 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:30.724495 31997 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:30.798666 31991 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:30.802780 31991 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:30.804970 31991 solver.cpp:311] Iteration 1000, loss = 0.0880475
I0426 20:51:30.804986 31991 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:30.878602 31998 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:30.879202 31991 solver.cpp:398]     Test net output #0: accuracy = 0.9809
I0426 20:51:30.879240 31991 solver.cpp:398]     Test net output #1: loss = 0.0587809 (* 1 = 0.0587809 loss)
I0426 20:51:30.879245 31991 solver.cpp:316] Optimization Done.
I0426 20:51:30.879250 31991 caffe.cpp:259] Optimization Done.
