I0426 20:53:19.400905 32420 caffe.cpp:218] Using GPUs 0
I0426 20:53:19.437420 32420 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:19.961972 32420 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test134.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:19.962110 32420 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test134.prototxt
I0426 20:53:19.962517 32420 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:19.962534 32420 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:19.962631 32420 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:19.962705 32420 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:19.962807 32420 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:19.962831 32420 net.cpp:86] Creating Layer mnist
I0426 20:53:19.962839 32420 net.cpp:382] mnist -> data
I0426 20:53:19.962862 32420 net.cpp:382] mnist -> label
I0426 20:53:19.963956 32420 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:19.966487 32420 net.cpp:124] Setting up mnist
I0426 20:53:19.966506 32420 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:19.966511 32420 net.cpp:131] Top shape: 64 (64)
I0426 20:53:19.966516 32420 net.cpp:139] Memory required for data: 200960
I0426 20:53:19.966522 32420 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:19.966538 32420 net.cpp:86] Creating Layer conv0
I0426 20:53:19.966562 32420 net.cpp:408] conv0 <- data
I0426 20:53:19.966573 32420 net.cpp:382] conv0 -> conv0
I0426 20:53:20.259387 32420 net.cpp:124] Setting up conv0
I0426 20:53:20.259416 32420 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:53:20.259421 32420 net.cpp:139] Memory required for data: 3887360
I0426 20:53:20.259439 32420 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:20.259454 32420 net.cpp:86] Creating Layer pool0
I0426 20:53:20.259457 32420 net.cpp:408] pool0 <- conv0
I0426 20:53:20.259464 32420 net.cpp:382] pool0 -> pool0
I0426 20:53:20.259516 32420 net.cpp:124] Setting up pool0
I0426 20:53:20.259521 32420 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:53:20.259524 32420 net.cpp:139] Memory required for data: 4808960
I0426 20:53:20.259528 32420 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:20.259541 32420 net.cpp:86] Creating Layer conv1
I0426 20:53:20.259543 32420 net.cpp:408] conv1 <- pool0
I0426 20:53:20.259549 32420 net.cpp:382] conv1 -> conv1
I0426 20:53:20.261971 32420 net.cpp:124] Setting up conv1
I0426 20:53:20.261987 32420 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:53:20.261991 32420 net.cpp:139] Memory required for data: 5628160
I0426 20:53:20.262001 32420 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:20.262009 32420 net.cpp:86] Creating Layer pool1
I0426 20:53:20.262013 32420 net.cpp:408] pool1 <- conv1
I0426 20:53:20.262019 32420 net.cpp:382] pool1 -> pool1
I0426 20:53:20.262059 32420 net.cpp:124] Setting up pool1
I0426 20:53:20.262065 32420 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:53:20.262068 32420 net.cpp:139] Memory required for data: 5832960
I0426 20:53:20.262071 32420 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:20.262079 32420 net.cpp:86] Creating Layer ip1
I0426 20:53:20.262084 32420 net.cpp:408] ip1 <- pool1
I0426 20:53:20.262089 32420 net.cpp:382] ip1 -> ip1
I0426 20:53:20.263589 32420 net.cpp:124] Setting up ip1
I0426 20:53:20.263604 32420 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:20.263608 32420 net.cpp:139] Memory required for data: 5858560
I0426 20:53:20.263617 32420 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:20.263623 32420 net.cpp:86] Creating Layer relu1
I0426 20:53:20.263628 32420 net.cpp:408] relu1 <- ip1
I0426 20:53:20.263633 32420 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:20.263820 32420 net.cpp:124] Setting up relu1
I0426 20:53:20.263829 32420 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:20.263833 32420 net.cpp:139] Memory required for data: 5884160
I0426 20:53:20.263836 32420 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:20.263844 32420 net.cpp:86] Creating Layer ip2
I0426 20:53:20.263847 32420 net.cpp:408] ip2 <- ip1
I0426 20:53:20.263852 32420 net.cpp:382] ip2 -> ip2
I0426 20:53:20.264150 32420 net.cpp:124] Setting up ip2
I0426 20:53:20.264158 32420 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:20.264161 32420 net.cpp:139] Memory required for data: 5960960
I0426 20:53:20.264168 32420 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:20.264173 32420 net.cpp:86] Creating Layer relu2
I0426 20:53:20.264178 32420 net.cpp:408] relu2 <- ip2
I0426 20:53:20.264181 32420 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:20.265060 32420 net.cpp:124] Setting up relu2
I0426 20:53:20.265075 32420 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:53:20.265079 32420 net.cpp:139] Memory required for data: 6037760
I0426 20:53:20.265082 32420 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:20.265090 32420 net.cpp:86] Creating Layer ip3
I0426 20:53:20.265094 32420 net.cpp:408] ip3 <- ip2
I0426 20:53:20.265100 32420 net.cpp:382] ip3 -> ip3
I0426 20:53:20.266116 32420 net.cpp:124] Setting up ip3
I0426 20:53:20.266130 32420 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:20.266134 32420 net.cpp:139] Memory required for data: 6040320
I0426 20:53:20.266144 32420 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:20.266149 32420 net.cpp:86] Creating Layer relu3
I0426 20:53:20.266154 32420 net.cpp:408] relu3 <- ip3
I0426 20:53:20.266158 32420 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:20.266350 32420 net.cpp:124] Setting up relu3
I0426 20:53:20.266360 32420 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:20.266363 32420 net.cpp:139] Memory required for data: 6042880
I0426 20:53:20.266367 32420 layer_factory.hpp:77] Creating layer loss
I0426 20:53:20.266379 32420 net.cpp:86] Creating Layer loss
I0426 20:53:20.266382 32420 net.cpp:408] loss <- ip3
I0426 20:53:20.266387 32420 net.cpp:408] loss <- label
I0426 20:53:20.266393 32420 net.cpp:382] loss -> loss
I0426 20:53:20.266408 32420 layer_factory.hpp:77] Creating layer loss
I0426 20:53:20.266659 32420 net.cpp:124] Setting up loss
I0426 20:53:20.266669 32420 net.cpp:131] Top shape: (1)
I0426 20:53:20.266674 32420 net.cpp:134]     with loss weight 1
I0426 20:53:20.266688 32420 net.cpp:139] Memory required for data: 6042884
I0426 20:53:20.266692 32420 net.cpp:200] loss needs backward computation.
I0426 20:53:20.266696 32420 net.cpp:200] relu3 needs backward computation.
I0426 20:53:20.266700 32420 net.cpp:200] ip3 needs backward computation.
I0426 20:53:20.266703 32420 net.cpp:200] relu2 needs backward computation.
I0426 20:53:20.266706 32420 net.cpp:200] ip2 needs backward computation.
I0426 20:53:20.266710 32420 net.cpp:200] relu1 needs backward computation.
I0426 20:53:20.266712 32420 net.cpp:200] ip1 needs backward computation.
I0426 20:53:20.266716 32420 net.cpp:200] pool1 needs backward computation.
I0426 20:53:20.266719 32420 net.cpp:200] conv1 needs backward computation.
I0426 20:53:20.266723 32420 net.cpp:200] pool0 needs backward computation.
I0426 20:53:20.266726 32420 net.cpp:200] conv0 needs backward computation.
I0426 20:53:20.266731 32420 net.cpp:202] mnist does not need backward computation.
I0426 20:53:20.266733 32420 net.cpp:244] This network produces output loss
I0426 20:53:20.266743 32420 net.cpp:257] Network initialization done.
I0426 20:53:20.267096 32420 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test134.prototxt
I0426 20:53:20.267127 32420 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:20.267228 32420 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:20.267314 32420 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:20.267364 32420 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:20.267377 32420 net.cpp:86] Creating Layer mnist
I0426 20:53:20.267382 32420 net.cpp:382] mnist -> data
I0426 20:53:20.267391 32420 net.cpp:382] mnist -> label
I0426 20:53:20.267484 32420 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:20.268918 32420 net.cpp:124] Setting up mnist
I0426 20:53:20.268932 32420 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:20.268939 32420 net.cpp:131] Top shape: 100 (100)
I0426 20:53:20.268941 32420 net.cpp:139] Memory required for data: 314000
I0426 20:53:20.268945 32420 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:20.268952 32420 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:20.268956 32420 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:20.268961 32420 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:20.268968 32420 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:20.269011 32420 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:20.269016 32420 net.cpp:131] Top shape: 100 (100)
I0426 20:53:20.269019 32420 net.cpp:131] Top shape: 100 (100)
I0426 20:53:20.269022 32420 net.cpp:139] Memory required for data: 314800
I0426 20:53:20.269026 32420 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:20.269037 32420 net.cpp:86] Creating Layer conv0
I0426 20:53:20.269039 32420 net.cpp:408] conv0 <- data
I0426 20:53:20.269044 32420 net.cpp:382] conv0 -> conv0
I0426 20:53:20.270953 32420 net.cpp:124] Setting up conv0
I0426 20:53:20.270968 32420 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:53:20.270972 32420 net.cpp:139] Memory required for data: 6074800
I0426 20:53:20.270982 32420 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:20.270990 32420 net.cpp:86] Creating Layer pool0
I0426 20:53:20.270993 32420 net.cpp:408] pool0 <- conv0
I0426 20:53:20.270999 32420 net.cpp:382] pool0 -> pool0
I0426 20:53:20.271039 32420 net.cpp:124] Setting up pool0
I0426 20:53:20.271044 32420 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:53:20.271047 32420 net.cpp:139] Memory required for data: 7514800
I0426 20:53:20.271050 32420 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:20.271059 32420 net.cpp:86] Creating Layer conv1
I0426 20:53:20.271062 32420 net.cpp:408] conv1 <- pool0
I0426 20:53:20.271067 32420 net.cpp:382] conv1 -> conv1
I0426 20:53:20.272933 32420 net.cpp:124] Setting up conv1
I0426 20:53:20.272948 32420 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:53:20.272964 32420 net.cpp:139] Memory required for data: 8794800
I0426 20:53:20.272974 32420 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:20.272987 32420 net.cpp:86] Creating Layer pool1
I0426 20:53:20.272997 32420 net.cpp:408] pool1 <- conv1
I0426 20:53:20.273002 32420 net.cpp:382] pool1 -> pool1
I0426 20:53:20.273041 32420 net.cpp:124] Setting up pool1
I0426 20:53:20.273046 32420 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:53:20.273049 32420 net.cpp:139] Memory required for data: 9114800
I0426 20:53:20.273058 32420 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:20.273064 32420 net.cpp:86] Creating Layer ip1
I0426 20:53:20.273067 32420 net.cpp:408] ip1 <- pool1
I0426 20:53:20.273072 32420 net.cpp:382] ip1 -> ip1
I0426 20:53:20.273649 32420 net.cpp:124] Setting up ip1
I0426 20:53:20.273658 32420 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:20.273672 32420 net.cpp:139] Memory required for data: 9154800
I0426 20:53:20.273681 32420 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:20.273686 32420 net.cpp:86] Creating Layer relu1
I0426 20:53:20.273690 32420 net.cpp:408] relu1 <- ip1
I0426 20:53:20.273701 32420 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:20.273919 32420 net.cpp:124] Setting up relu1
I0426 20:53:20.273928 32420 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:20.273932 32420 net.cpp:139] Memory required for data: 9194800
I0426 20:53:20.273936 32420 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:20.273942 32420 net.cpp:86] Creating Layer ip2
I0426 20:53:20.273946 32420 net.cpp:408] ip2 <- ip1
I0426 20:53:20.273950 32420 net.cpp:382] ip2 -> ip2
I0426 20:53:20.274246 32420 net.cpp:124] Setting up ip2
I0426 20:53:20.274253 32420 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:20.274258 32420 net.cpp:139] Memory required for data: 9314800
I0426 20:53:20.274263 32420 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:20.274276 32420 net.cpp:86] Creating Layer relu2
I0426 20:53:20.274278 32420 net.cpp:408] relu2 <- ip2
I0426 20:53:20.274282 32420 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:20.274458 32420 net.cpp:124] Setting up relu2
I0426 20:53:20.274466 32420 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:53:20.274476 32420 net.cpp:139] Memory required for data: 9434800
I0426 20:53:20.274479 32420 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:20.274487 32420 net.cpp:86] Creating Layer ip3
I0426 20:53:20.274489 32420 net.cpp:408] ip3 <- ip2
I0426 20:53:20.274495 32420 net.cpp:382] ip3 -> ip3
I0426 20:53:20.274619 32420 net.cpp:124] Setting up ip3
I0426 20:53:20.274627 32420 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:20.274631 32420 net.cpp:139] Memory required for data: 9438800
I0426 20:53:20.274641 32420 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:20.274644 32420 net.cpp:86] Creating Layer relu3
I0426 20:53:20.274654 32420 net.cpp:408] relu3 <- ip3
I0426 20:53:20.274658 32420 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:20.275532 32420 net.cpp:124] Setting up relu3
I0426 20:53:20.275543 32420 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:20.275547 32420 net.cpp:139] Memory required for data: 9442800
I0426 20:53:20.275552 32420 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:53:20.275559 32420 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:53:20.275563 32420 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:53:20.275568 32420 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:53:20.275575 32420 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:53:20.275626 32420 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:53:20.275632 32420 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:20.275636 32420 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:20.275640 32420 net.cpp:139] Memory required for data: 9450800
I0426 20:53:20.275642 32420 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:20.275648 32420 net.cpp:86] Creating Layer accuracy
I0426 20:53:20.275651 32420 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:53:20.275655 32420 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:20.275660 32420 net.cpp:382] accuracy -> accuracy
I0426 20:53:20.275667 32420 net.cpp:124] Setting up accuracy
I0426 20:53:20.275671 32420 net.cpp:131] Top shape: (1)
I0426 20:53:20.275674 32420 net.cpp:139] Memory required for data: 9450804
I0426 20:53:20.275676 32420 layer_factory.hpp:77] Creating layer loss
I0426 20:53:20.275682 32420 net.cpp:86] Creating Layer loss
I0426 20:53:20.275686 32420 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:53:20.275689 32420 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:20.275693 32420 net.cpp:382] loss -> loss
I0426 20:53:20.275707 32420 layer_factory.hpp:77] Creating layer loss
I0426 20:53:20.275957 32420 net.cpp:124] Setting up loss
I0426 20:53:20.275967 32420 net.cpp:131] Top shape: (1)
I0426 20:53:20.275982 32420 net.cpp:134]     with loss weight 1
I0426 20:53:20.275998 32420 net.cpp:139] Memory required for data: 9450808
I0426 20:53:20.276002 32420 net.cpp:200] loss needs backward computation.
I0426 20:53:20.276006 32420 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:20.276010 32420 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:53:20.276013 32420 net.cpp:200] relu3 needs backward computation.
I0426 20:53:20.276016 32420 net.cpp:200] ip3 needs backward computation.
I0426 20:53:20.276020 32420 net.cpp:200] relu2 needs backward computation.
I0426 20:53:20.276028 32420 net.cpp:200] ip2 needs backward computation.
I0426 20:53:20.276031 32420 net.cpp:200] relu1 needs backward computation.
I0426 20:53:20.276033 32420 net.cpp:200] ip1 needs backward computation.
I0426 20:53:20.276036 32420 net.cpp:200] pool1 needs backward computation.
I0426 20:53:20.276039 32420 net.cpp:200] conv1 needs backward computation.
I0426 20:53:20.276043 32420 net.cpp:200] pool0 needs backward computation.
I0426 20:53:20.276046 32420 net.cpp:200] conv0 needs backward computation.
I0426 20:53:20.276051 32420 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:20.276053 32420 net.cpp:202] mnist does not need backward computation.
I0426 20:53:20.276057 32420 net.cpp:244] This network produces output accuracy
I0426 20:53:20.276065 32420 net.cpp:244] This network produces output loss
I0426 20:53:20.276077 32420 net.cpp:257] Network initialization done.
I0426 20:53:20.276123 32420 solver.cpp:56] Solver scaffolding done.
I0426 20:53:20.276463 32420 caffe.cpp:248] Starting Optimization
I0426 20:53:20.276470 32420 solver.cpp:273] Solving LeNet
I0426 20:53:20.276473 32420 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:20.277457 32420 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:20.284641 32420 blocking_queue.cpp:49] Waiting for data
I0426 20:53:20.353665 32427 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:20.354363 32420 solver.cpp:398]     Test net output #0: accuracy = 0.0921
I0426 20:53:20.354382 32420 solver.cpp:398]     Test net output #1: loss = 2.31774 (* 1 = 2.31774 loss)
I0426 20:53:20.359331 32420 solver.cpp:219] Iteration 0 (0 iter/s, 0.0828324s/100 iters), loss = 2.32238
I0426 20:53:20.359354 32420 solver.cpp:238]     Train net output #0: loss = 2.32238 (* 1 = 2.32238 loss)
I0426 20:53:20.359365 32420 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:20.499219 32420 solver.cpp:219] Iteration 100 (715.069 iter/s, 0.139847s/100 iters), loss = 0.48909
I0426 20:53:20.499255 32420 solver.cpp:238]     Train net output #0: loss = 0.48909 (* 1 = 0.48909 loss)
I0426 20:53:20.499265 32420 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:20.636087 32420 solver.cpp:219] Iteration 200 (730.915 iter/s, 0.136815s/100 iters), loss = 0.354942
I0426 20:53:20.636152 32420 solver.cpp:238]     Train net output #0: loss = 0.354942 (* 1 = 0.354942 loss)
I0426 20:53:20.636168 32420 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:20.778956 32420 solver.cpp:219] Iteration 300 (700.301 iter/s, 0.142796s/100 iters), loss = 0.180033
I0426 20:53:20.778990 32420 solver.cpp:238]     Train net output #0: loss = 0.180033 (* 1 = 0.180033 loss)
I0426 20:53:20.778998 32420 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:20.916214 32420 solver.cpp:219] Iteration 400 (728.8 iter/s, 0.137212s/100 iters), loss = 0.0451567
I0426 20:53:20.916249 32420 solver.cpp:238]     Train net output #0: loss = 0.0451567 (* 1 = 0.0451567 loss)
I0426 20:53:20.916257 32420 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:21.054081 32420 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:21.122205 32427 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:21.123332 32420 solver.cpp:398]     Test net output #0: accuracy = 0.9743
I0426 20:53:21.123363 32420 solver.cpp:398]     Test net output #1: loss = 0.0797431 (* 1 = 0.0797431 loss)
I0426 20:53:21.124665 32420 solver.cpp:219] Iteration 500 (479.846 iter/s, 0.2084s/100 iters), loss = 0.0897497
I0426 20:53:21.124713 32420 solver.cpp:238]     Train net output #0: loss = 0.0897496 (* 1 = 0.0897496 loss)
I0426 20:53:21.124722 32420 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:21.262315 32420 solver.cpp:219] Iteration 600 (726.793 iter/s, 0.137591s/100 iters), loss = 0.0820735
I0426 20:53:21.262348 32420 solver.cpp:238]     Train net output #0: loss = 0.0820735 (* 1 = 0.0820735 loss)
I0426 20:53:21.262356 32420 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:21.412892 32420 solver.cpp:219] Iteration 700 (664.328 iter/s, 0.150528s/100 iters), loss = 0.106234
I0426 20:53:21.412932 32420 solver.cpp:238]     Train net output #0: loss = 0.106234 (* 1 = 0.106234 loss)
I0426 20:53:21.412942 32420 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:21.553931 32420 solver.cpp:219] Iteration 800 (709.294 iter/s, 0.140985s/100 iters), loss = 0.195032
I0426 20:53:21.553968 32420 solver.cpp:238]     Train net output #0: loss = 0.195032 (* 1 = 0.195032 loss)
I0426 20:53:21.553977 32420 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:21.693022 32420 solver.cpp:219] Iteration 900 (719.219 iter/s, 0.13904s/100 iters), loss = 0.136559
I0426 20:53:21.693054 32420 solver.cpp:238]     Train net output #0: loss = 0.136559 (* 1 = 0.136559 loss)
I0426 20:53:21.693063 32420 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:21.738603 32426 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:21.840225 32420 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:21.844292 32420 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:21.846606 32420 solver.cpp:311] Iteration 1000, loss = 0.106653
I0426 20:53:21.846632 32420 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:21.916045 32427 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:21.918206 32420 solver.cpp:398]     Test net output #0: accuracy = 0.9792
I0426 20:53:21.918231 32420 solver.cpp:398]     Test net output #1: loss = 0.062677 (* 1 = 0.062677 loss)
I0426 20:53:21.918237 32420 solver.cpp:316] Optimization Done.
I0426 20:53:21.918241 32420 caffe.cpp:259] Optimization Done.
