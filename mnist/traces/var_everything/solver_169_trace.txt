I0426 20:54:54.167129 32753 caffe.cpp:218] Using GPUs 0
I0426 20:54:54.201017 32753 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:54:54.723740 32753 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test169.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:54:54.723884 32753 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test169.prototxt
I0426 20:54:54.724213 32753 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:54:54.724230 32753 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:54:54.724308 32753 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:54:54.724370 32753 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:54.724468 32753 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:54:54.724491 32753 net.cpp:86] Creating Layer mnist
I0426 20:54:54.724498 32753 net.cpp:382] mnist -> data
I0426 20:54:54.724520 32753 net.cpp:382] mnist -> label
I0426 20:54:54.725616 32753 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:54:54.728358 32753 net.cpp:124] Setting up mnist
I0426 20:54:54.728377 32753 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:54:54.728384 32753 net.cpp:131] Top shape: 64 (64)
I0426 20:54:54.728387 32753 net.cpp:139] Memory required for data: 200960
I0426 20:54:54.728394 32753 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:54.728410 32753 net.cpp:86] Creating Layer conv0
I0426 20:54:54.728416 32753 net.cpp:408] conv0 <- data
I0426 20:54:54.728427 32753 net.cpp:382] conv0 -> conv0
I0426 20:54:54.970311 32753 net.cpp:124] Setting up conv0
I0426 20:54:54.970352 32753 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:54:54.970356 32753 net.cpp:139] Memory required for data: 7573760
I0426 20:54:54.970371 32753 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:54.970382 32753 net.cpp:86] Creating Layer pool0
I0426 20:54:54.970386 32753 net.cpp:408] pool0 <- conv0
I0426 20:54:54.970391 32753 net.cpp:382] pool0 -> pool0
I0426 20:54:54.970434 32753 net.cpp:124] Setting up pool0
I0426 20:54:54.970441 32753 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:54:54.970458 32753 net.cpp:139] Memory required for data: 9416960
I0426 20:54:54.970461 32753 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:54.970473 32753 net.cpp:86] Creating Layer conv1
I0426 20:54:54.970479 32753 net.cpp:408] conv1 <- pool0
I0426 20:54:54.970484 32753 net.cpp:382] conv1 -> conv1
I0426 20:54:54.972728 32753 net.cpp:124] Setting up conv1
I0426 20:54:54.972755 32753 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:54:54.972759 32753 net.cpp:139] Memory required for data: 10236160
I0426 20:54:54.972766 32753 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:54.972774 32753 net.cpp:86] Creating Layer pool1
I0426 20:54:54.972777 32753 net.cpp:408] pool1 <- conv1
I0426 20:54:54.972781 32753 net.cpp:382] pool1 -> pool1
I0426 20:54:54.972853 32753 net.cpp:124] Setting up pool1
I0426 20:54:54.972862 32753 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:54:54.972864 32753 net.cpp:139] Memory required for data: 10440960
I0426 20:54:54.972867 32753 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:54.972875 32753 net.cpp:86] Creating Layer ip1
I0426 20:54:54.972878 32753 net.cpp:408] ip1 <- pool1
I0426 20:54:54.972899 32753 net.cpp:382] ip1 -> ip1
I0426 20:54:54.973930 32753 net.cpp:124] Setting up ip1
I0426 20:54:54.973942 32753 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:54.973959 32753 net.cpp:139] Memory required for data: 10443520
I0426 20:54:54.973968 32753 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:54.973973 32753 net.cpp:86] Creating Layer relu1
I0426 20:54:54.973975 32753 net.cpp:408] relu1 <- ip1
I0426 20:54:54.973980 32753 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:54.974180 32753 net.cpp:124] Setting up relu1
I0426 20:54:54.974189 32753 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:54.974192 32753 net.cpp:139] Memory required for data: 10446080
I0426 20:54:54.974195 32753 layer_factory.hpp:77] Creating layer loss
I0426 20:54:54.974201 32753 net.cpp:86] Creating Layer loss
I0426 20:54:54.974205 32753 net.cpp:408] loss <- ip1
I0426 20:54:54.974208 32753 net.cpp:408] loss <- label
I0426 20:54:54.974213 32753 net.cpp:382] loss -> loss
I0426 20:54:54.974231 32753 layer_factory.hpp:77] Creating layer loss
I0426 20:54:54.975136 32753 net.cpp:124] Setting up loss
I0426 20:54:54.975147 32753 net.cpp:131] Top shape: (1)
I0426 20:54:54.975150 32753 net.cpp:134]     with loss weight 1
I0426 20:54:54.975167 32753 net.cpp:139] Memory required for data: 10446084
I0426 20:54:54.975186 32753 net.cpp:200] loss needs backward computation.
I0426 20:54:54.975190 32753 net.cpp:200] relu1 needs backward computation.
I0426 20:54:54.975193 32753 net.cpp:200] ip1 needs backward computation.
I0426 20:54:54.975196 32753 net.cpp:200] pool1 needs backward computation.
I0426 20:54:54.975199 32753 net.cpp:200] conv1 needs backward computation.
I0426 20:54:54.975203 32753 net.cpp:200] pool0 needs backward computation.
I0426 20:54:54.975205 32753 net.cpp:200] conv0 needs backward computation.
I0426 20:54:54.975224 32753 net.cpp:202] mnist does not need backward computation.
I0426 20:54:54.975226 32753 net.cpp:244] This network produces output loss
I0426 20:54:54.975250 32753 net.cpp:257] Network initialization done.
I0426 20:54:54.975510 32753 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test169.prototxt
I0426 20:54:54.975533 32753 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:54:54.975603 32753 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:54:54.975684 32753 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:54.975729 32753 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:54:54.975744 32753 net.cpp:86] Creating Layer mnist
I0426 20:54:54.975749 32753 net.cpp:382] mnist -> data
I0426 20:54:54.975772 32753 net.cpp:382] mnist -> label
I0426 20:54:54.975854 32753 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:54:54.977807 32753 net.cpp:124] Setting up mnist
I0426 20:54:54.977818 32753 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:54:54.977823 32753 net.cpp:131] Top shape: 100 (100)
I0426 20:54:54.977841 32753 net.cpp:139] Memory required for data: 314000
I0426 20:54:54.977844 32753 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:54:54.977854 32753 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:54:54.977859 32753 net.cpp:408] label_mnist_1_split <- label
I0426 20:54:54.977864 32753 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:54:54.977869 32753 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:54:54.977916 32753 net.cpp:124] Setting up label_mnist_1_split
I0426 20:54:54.977921 32753 net.cpp:131] Top shape: 100 (100)
I0426 20:54:54.977926 32753 net.cpp:131] Top shape: 100 (100)
I0426 20:54:54.977928 32753 net.cpp:139] Memory required for data: 314800
I0426 20:54:54.977931 32753 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:54.977939 32753 net.cpp:86] Creating Layer conv0
I0426 20:54:54.977946 32753 net.cpp:408] conv0 <- data
I0426 20:54:54.977952 32753 net.cpp:382] conv0 -> conv0
I0426 20:54:54.978839 32753 net.cpp:124] Setting up conv0
I0426 20:54:54.978852 32753 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:54:54.978869 32753 net.cpp:139] Memory required for data: 11834800
I0426 20:54:54.978878 32753 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:54.978884 32753 net.cpp:86] Creating Layer pool0
I0426 20:54:54.978888 32753 net.cpp:408] pool0 <- conv0
I0426 20:54:54.978891 32753 net.cpp:382] pool0 -> pool0
I0426 20:54:54.978924 32753 net.cpp:124] Setting up pool0
I0426 20:54:54.978930 32753 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:54:54.978934 32753 net.cpp:139] Memory required for data: 14714800
I0426 20:54:54.978935 32753 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:54.978942 32753 net.cpp:86] Creating Layer conv1
I0426 20:54:54.978947 32753 net.cpp:408] conv1 <- pool0
I0426 20:54:54.978967 32753 net.cpp:382] conv1 -> conv1
I0426 20:54:54.980795 32753 net.cpp:124] Setting up conv1
I0426 20:54:54.980829 32753 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:54:54.980849 32753 net.cpp:139] Memory required for data: 15994800
I0426 20:54:54.980859 32753 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:54.980865 32753 net.cpp:86] Creating Layer pool1
I0426 20:54:54.980878 32753 net.cpp:408] pool1 <- conv1
I0426 20:54:54.980900 32753 net.cpp:382] pool1 -> pool1
I0426 20:54:54.980934 32753 net.cpp:124] Setting up pool1
I0426 20:54:54.980942 32753 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:54:54.980945 32753 net.cpp:139] Memory required for data: 16314800
I0426 20:54:54.980957 32753 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:54.980962 32753 net.cpp:86] Creating Layer ip1
I0426 20:54:54.980974 32753 net.cpp:408] ip1 <- pool1
I0426 20:54:54.980979 32753 net.cpp:382] ip1 -> ip1
I0426 20:54:54.981120 32753 net.cpp:124] Setting up ip1
I0426 20:54:54.981128 32753 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:54.981132 32753 net.cpp:139] Memory required for data: 16318800
I0426 20:54:54.981138 32753 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:54.981143 32753 net.cpp:86] Creating Layer relu1
I0426 20:54:54.981149 32753 net.cpp:408] relu1 <- ip1
I0426 20:54:54.981154 32753 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:54.982017 32753 net.cpp:124] Setting up relu1
I0426 20:54:54.982028 32753 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:54.982046 32753 net.cpp:139] Memory required for data: 16322800
I0426 20:54:54.982049 32753 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:54:54.982055 32753 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:54:54.982059 32753 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:54:54.982064 32753 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:54:54.982069 32753 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:54:54.982107 32753 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:54:54.982113 32753 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:54.982117 32753 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:54.982126 32753 net.cpp:139] Memory required for data: 16330800
I0426 20:54:54.982130 32753 layer_factory.hpp:77] Creating layer accuracy
I0426 20:54:54.982134 32753 net.cpp:86] Creating Layer accuracy
I0426 20:54:54.982137 32753 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:54:54.982141 32753 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:54:54.982146 32753 net.cpp:382] accuracy -> accuracy
I0426 20:54:54.982151 32753 net.cpp:124] Setting up accuracy
I0426 20:54:54.982156 32753 net.cpp:131] Top shape: (1)
I0426 20:54:54.982157 32753 net.cpp:139] Memory required for data: 16330804
I0426 20:54:54.982161 32753 layer_factory.hpp:77] Creating layer loss
I0426 20:54:54.982164 32753 net.cpp:86] Creating Layer loss
I0426 20:54:54.982167 32753 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:54:54.982170 32753 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:54:54.982174 32753 net.cpp:382] loss -> loss
I0426 20:54:54.982179 32753 layer_factory.hpp:77] Creating layer loss
I0426 20:54:54.982415 32753 net.cpp:124] Setting up loss
I0426 20:54:54.982424 32753 net.cpp:131] Top shape: (1)
I0426 20:54:54.982429 32753 net.cpp:134]     with loss weight 1
I0426 20:54:54.982434 32753 net.cpp:139] Memory required for data: 16330808
I0426 20:54:54.982439 32753 net.cpp:200] loss needs backward computation.
I0426 20:54:54.982442 32753 net.cpp:202] accuracy does not need backward computation.
I0426 20:54:54.982446 32753 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:54:54.982448 32753 net.cpp:200] relu1 needs backward computation.
I0426 20:54:54.982451 32753 net.cpp:200] ip1 needs backward computation.
I0426 20:54:54.982461 32753 net.cpp:200] pool1 needs backward computation.
I0426 20:54:54.982465 32753 net.cpp:200] conv1 needs backward computation.
I0426 20:54:54.982467 32753 net.cpp:200] pool0 needs backward computation.
I0426 20:54:54.982470 32753 net.cpp:200] conv0 needs backward computation.
I0426 20:54:54.982481 32753 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:54:54.982483 32753 net.cpp:202] mnist does not need backward computation.
I0426 20:54:54.982486 32753 net.cpp:244] This network produces output accuracy
I0426 20:54:54.982489 32753 net.cpp:244] This network produces output loss
I0426 20:54:54.982512 32753 net.cpp:257] Network initialization done.
I0426 20:54:54.982560 32753 solver.cpp:56] Solver scaffolding done.
I0426 20:54:54.982758 32753 caffe.cpp:248] Starting Optimization
I0426 20:54:54.982765 32753 solver.cpp:273] Solving LeNet
I0426 20:54:54.982769 32753 solver.cpp:274] Learning Rate Policy: inv
I0426 20:54:54.982894 32753 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:54:54.989436 32753 blocking_queue.cpp:49] Waiting for data
I0426 20:54:55.064291 32760 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:55.065122 32753 solver.cpp:398]     Test net output #0: accuracy = 0.1582
I0426 20:54:55.065171 32753 solver.cpp:398]     Test net output #1: loss = 2.32628 (* 1 = 2.32628 loss)
I0426 20:54:55.069967 32753 solver.cpp:219] Iteration 0 (0 iter/s, 0.08717s/100 iters), loss = 2.31273
I0426 20:54:55.070008 32753 solver.cpp:238]     Train net output #0: loss = 2.31273 (* 1 = 2.31273 loss)
I0426 20:54:55.070019 32753 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:54:55.223220 32753 solver.cpp:219] Iteration 100 (652.738 iter/s, 0.153201s/100 iters), loss = 1.16137
I0426 20:54:55.223261 32753 solver.cpp:238]     Train net output #0: loss = 1.16137 (* 1 = 1.16137 loss)
I0426 20:54:55.223268 32753 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:54:55.366319 32753 solver.cpp:219] Iteration 200 (699.074 iter/s, 0.143046s/100 iters), loss = 1.05178
I0426 20:54:55.366346 32753 solver.cpp:238]     Train net output #0: loss = 1.05178 (* 1 = 1.05178 loss)
I0426 20:54:55.366353 32753 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:54:55.507730 32753 solver.cpp:219] Iteration 300 (707.362 iter/s, 0.14137s/100 iters), loss = 0.667307
I0426 20:54:55.507784 32753 solver.cpp:238]     Train net output #0: loss = 0.667307 (* 1 = 0.667307 loss)
I0426 20:54:55.507791 32753 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:54:55.649700 32753 solver.cpp:219] Iteration 400 (704.631 iter/s, 0.141918s/100 iters), loss = 0.416916
I0426 20:54:55.649725 32753 solver.cpp:238]     Train net output #0: loss = 0.416916 (* 1 = 0.416916 loss)
I0426 20:54:55.649731 32753 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:54:55.789191 32753 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:54:55.868170 32760 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:55.869051 32753 solver.cpp:398]     Test net output #0: accuracy = 0.9649
I0426 20:54:55.869088 32753 solver.cpp:398]     Test net output #1: loss = 0.120677 (* 1 = 0.120677 loss)
I0426 20:54:55.870528 32753 solver.cpp:219] Iteration 500 (452.926 iter/s, 0.220786s/100 iters), loss = 0.143918
I0426 20:54:55.870569 32753 solver.cpp:238]     Train net output #0: loss = 0.143918 (* 1 = 0.143918 loss)
I0426 20:54:55.870576 32753 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:54:56.020102 32753 solver.cpp:219] Iteration 600 (668.817 iter/s, 0.149518s/100 iters), loss = 0.136026
I0426 20:54:56.020143 32753 solver.cpp:238]     Train net output #0: loss = 0.136026 (* 1 = 0.136026 loss)
I0426 20:54:56.020148 32753 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:54:56.161681 32753 solver.cpp:219] Iteration 700 (706.58 iter/s, 0.141527s/100 iters), loss = 0.143639
I0426 20:54:56.161720 32753 solver.cpp:238]     Train net output #0: loss = 0.143639 (* 1 = 0.143639 loss)
I0426 20:54:56.161726 32753 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:54:56.307245 32753 solver.cpp:219] Iteration 800 (687.154 iter/s, 0.145528s/100 iters), loss = 0.226885
I0426 20:54:56.307286 32753 solver.cpp:238]     Train net output #0: loss = 0.226885 (* 1 = 0.226885 loss)
I0426 20:54:56.307292 32753 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:54:56.450592 32753 solver.cpp:219] Iteration 900 (697.794 iter/s, 0.143309s/100 iters), loss = 0.158784
I0426 20:54:56.450633 32753 solver.cpp:238]     Train net output #0: loss = 0.158784 (* 1 = 0.158784 loss)
I0426 20:54:56.450639 32753 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:54:56.497879 32759 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:56.591621 32753 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:54:56.593626 32753 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:54:56.594802 32753 solver.cpp:311] Iteration 1000, loss = 0.0782588
I0426 20:54:56.594817 32753 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:54:56.672194 32760 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:56.673111 32753 solver.cpp:398]     Test net output #0: accuracy = 0.9784
I0426 20:54:56.673131 32753 solver.cpp:398]     Test net output #1: loss = 0.0671873 (* 1 = 0.0671873 loss)
I0426 20:54:56.673136 32753 solver.cpp:316] Optimization Done.
I0426 20:54:56.673140 32753 caffe.cpp:259] Optimization Done.
