I0426 20:48:37.548444 31301 caffe.cpp:218] Using GPUs 0
I0426 20:48:37.586067 31301 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:48:38.110662 31301 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test12.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:48:38.110801 31301 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test12.prototxt
I0426 20:48:38.111115 31301 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:48:38.111129 31301 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:48:38.111204 31301 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:38.111274 31301 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:38.111373 31301 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:48:38.111397 31301 net.cpp:86] Creating Layer mnist
I0426 20:48:38.111405 31301 net.cpp:382] mnist -> data
I0426 20:48:38.111428 31301 net.cpp:382] mnist -> label
I0426 20:48:38.112516 31301 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:48:38.115058 31301 net.cpp:124] Setting up mnist
I0426 20:48:38.115077 31301 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:48:38.115083 31301 net.cpp:131] Top shape: 64 (64)
I0426 20:48:38.115087 31301 net.cpp:139] Memory required for data: 200960
I0426 20:48:38.115094 31301 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:38.115105 31301 net.cpp:86] Creating Layer ip1
I0426 20:48:38.115111 31301 net.cpp:408] ip1 <- data
I0426 20:48:38.115123 31301 net.cpp:382] ip1 -> ip1
I0426 20:48:38.118844 31301 net.cpp:124] Setting up ip1
I0426 20:48:38.118860 31301 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:38.118865 31301 net.cpp:139] Memory required for data: 277760
I0426 20:48:38.118878 31301 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:38.118887 31301 net.cpp:86] Creating Layer relu1
I0426 20:48:38.118891 31301 net.cpp:408] relu1 <- ip1
I0426 20:48:38.118899 31301 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:38.365262 31301 net.cpp:124] Setting up relu1
I0426 20:48:38.365303 31301 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:38.365306 31301 net.cpp:139] Memory required for data: 354560
I0426 20:48:38.365311 31301 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:38.365324 31301 net.cpp:86] Creating Layer ip2
I0426 20:48:38.365376 31301 net.cpp:408] ip2 <- ip1
I0426 20:48:38.365386 31301 net.cpp:382] ip2 -> ip2
I0426 20:48:38.366039 31301 net.cpp:124] Setting up ip2
I0426 20:48:38.366049 31301 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:38.366067 31301 net.cpp:139] Memory required for data: 431360
I0426 20:48:38.366076 31301 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:38.366083 31301 net.cpp:86] Creating Layer relu2
I0426 20:48:38.366086 31301 net.cpp:408] relu2 <- ip2
I0426 20:48:38.366091 31301 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:38.366981 31301 net.cpp:124] Setting up relu2
I0426 20:48:38.366992 31301 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:48:38.367012 31301 net.cpp:139] Memory required for data: 508160
I0426 20:48:38.367014 31301 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:38.367022 31301 net.cpp:86] Creating Layer ip3
I0426 20:48:38.367024 31301 net.cpp:408] ip3 <- ip2
I0426 20:48:38.367029 31301 net.cpp:382] ip3 -> ip3
I0426 20:48:38.368002 31301 net.cpp:124] Setting up ip3
I0426 20:48:38.368028 31301 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:38.368047 31301 net.cpp:139] Memory required for data: 510720
I0426 20:48:38.368055 31301 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:38.368062 31301 net.cpp:86] Creating Layer relu3
I0426 20:48:38.368064 31301 net.cpp:408] relu3 <- ip3
I0426 20:48:38.368068 31301 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:38.368232 31301 net.cpp:124] Setting up relu3
I0426 20:48:38.368242 31301 net.cpp:131] Top shape: 64 10 (640)
I0426 20:48:38.368244 31301 net.cpp:139] Memory required for data: 513280
I0426 20:48:38.368247 31301 layer_factory.hpp:77] Creating layer loss
I0426 20:48:38.368253 31301 net.cpp:86] Creating Layer loss
I0426 20:48:38.368273 31301 net.cpp:408] loss <- ip3
I0426 20:48:38.368276 31301 net.cpp:408] loss <- label
I0426 20:48:38.368281 31301 net.cpp:382] loss -> loss
I0426 20:48:38.368324 31301 layer_factory.hpp:77] Creating layer loss
I0426 20:48:38.368554 31301 net.cpp:124] Setting up loss
I0426 20:48:38.368564 31301 net.cpp:131] Top shape: (1)
I0426 20:48:38.368568 31301 net.cpp:134]     with loss weight 1
I0426 20:48:38.368583 31301 net.cpp:139] Memory required for data: 513284
I0426 20:48:38.368587 31301 net.cpp:200] loss needs backward computation.
I0426 20:48:38.368590 31301 net.cpp:200] relu3 needs backward computation.
I0426 20:48:38.368593 31301 net.cpp:200] ip3 needs backward computation.
I0426 20:48:38.368597 31301 net.cpp:200] relu2 needs backward computation.
I0426 20:48:38.368599 31301 net.cpp:200] ip2 needs backward computation.
I0426 20:48:38.368602 31301 net.cpp:200] relu1 needs backward computation.
I0426 20:48:38.368605 31301 net.cpp:200] ip1 needs backward computation.
I0426 20:48:38.368608 31301 net.cpp:202] mnist does not need backward computation.
I0426 20:48:38.368612 31301 net.cpp:244] This network produces output loss
I0426 20:48:38.368634 31301 net.cpp:257] Network initialization done.
I0426 20:48:38.368880 31301 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test12.prototxt
I0426 20:48:38.368902 31301 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:48:38.368968 31301 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:48:38.369033 31301 layer_factory.hpp:77] Creating layer mnist
I0426 20:48:38.369076 31301 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:48:38.369088 31301 net.cpp:86] Creating Layer mnist
I0426 20:48:38.369092 31301 net.cpp:382] mnist -> data
I0426 20:48:38.369101 31301 net.cpp:382] mnist -> label
I0426 20:48:38.369180 31301 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:48:38.371155 31301 net.cpp:124] Setting up mnist
I0426 20:48:38.371167 31301 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:48:38.371171 31301 net.cpp:131] Top shape: 100 (100)
I0426 20:48:38.371175 31301 net.cpp:139] Memory required for data: 314000
I0426 20:48:38.371177 31301 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:48:38.371187 31301 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:48:38.371191 31301 net.cpp:408] label_mnist_1_split <- label
I0426 20:48:38.371206 31301 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:48:38.371212 31301 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:48:38.371264 31301 net.cpp:124] Setting up label_mnist_1_split
I0426 20:48:38.371271 31301 net.cpp:131] Top shape: 100 (100)
I0426 20:48:38.371275 31301 net.cpp:131] Top shape: 100 (100)
I0426 20:48:38.371279 31301 net.cpp:139] Memory required for data: 314800
I0426 20:48:38.371280 31301 layer_factory.hpp:77] Creating layer ip1
I0426 20:48:38.371287 31301 net.cpp:86] Creating Layer ip1
I0426 20:48:38.371290 31301 net.cpp:408] ip1 <- data
I0426 20:48:38.371294 31301 net.cpp:382] ip1 -> ip1
I0426 20:48:38.372807 31301 net.cpp:124] Setting up ip1
I0426 20:48:38.372836 31301 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:38.372839 31301 net.cpp:139] Memory required for data: 434800
I0426 20:48:38.372848 31301 layer_factory.hpp:77] Creating layer relu1
I0426 20:48:38.372853 31301 net.cpp:86] Creating Layer relu1
I0426 20:48:38.372858 31301 net.cpp:408] relu1 <- ip1
I0426 20:48:38.372879 31301 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:48:38.373832 31301 net.cpp:124] Setting up relu1
I0426 20:48:38.373843 31301 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:38.373847 31301 net.cpp:139] Memory required for data: 554800
I0426 20:48:38.373852 31301 layer_factory.hpp:77] Creating layer ip2
I0426 20:48:38.373858 31301 net.cpp:86] Creating Layer ip2
I0426 20:48:38.373862 31301 net.cpp:408] ip2 <- ip1
I0426 20:48:38.373867 31301 net.cpp:382] ip2 -> ip2
I0426 20:48:38.374586 31301 net.cpp:124] Setting up ip2
I0426 20:48:38.374594 31301 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:38.374598 31301 net.cpp:139] Memory required for data: 674800
I0426 20:48:38.374605 31301 layer_factory.hpp:77] Creating layer relu2
I0426 20:48:38.374609 31301 net.cpp:86] Creating Layer relu2
I0426 20:48:38.374613 31301 net.cpp:408] relu2 <- ip2
I0426 20:48:38.374616 31301 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:48:38.374820 31301 net.cpp:124] Setting up relu2
I0426 20:48:38.374830 31301 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:48:38.374832 31301 net.cpp:139] Memory required for data: 794800
I0426 20:48:38.374836 31301 layer_factory.hpp:77] Creating layer ip3
I0426 20:48:38.374841 31301 net.cpp:86] Creating Layer ip3
I0426 20:48:38.374845 31301 net.cpp:408] ip3 <- ip2
I0426 20:48:38.374860 31301 net.cpp:382] ip3 -> ip3
I0426 20:48:38.375000 31301 net.cpp:124] Setting up ip3
I0426 20:48:38.375008 31301 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:38.375011 31301 net.cpp:139] Memory required for data: 798800
I0426 20:48:38.375020 31301 layer_factory.hpp:77] Creating layer relu3
I0426 20:48:38.375023 31301 net.cpp:86] Creating Layer relu3
I0426 20:48:38.375027 31301 net.cpp:408] relu3 <- ip3
I0426 20:48:38.375031 31301 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:48:38.375180 31301 net.cpp:124] Setting up relu3
I0426 20:48:38.375187 31301 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:38.375191 31301 net.cpp:139] Memory required for data: 802800
I0426 20:48:38.375195 31301 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:48:38.375200 31301 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:48:38.375218 31301 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:48:38.375222 31301 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:48:38.375234 31301 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:48:38.375267 31301 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:48:38.375273 31301 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:38.375277 31301 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:48:38.375280 31301 net.cpp:139] Memory required for data: 810800
I0426 20:48:38.375288 31301 layer_factory.hpp:77] Creating layer accuracy
I0426 20:48:38.375293 31301 net.cpp:86] Creating Layer accuracy
I0426 20:48:38.375296 31301 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:48:38.375300 31301 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:48:38.375304 31301 net.cpp:382] accuracy -> accuracy
I0426 20:48:38.375315 31301 net.cpp:124] Setting up accuracy
I0426 20:48:38.375319 31301 net.cpp:131] Top shape: (1)
I0426 20:48:38.375322 31301 net.cpp:139] Memory required for data: 810804
I0426 20:48:38.375324 31301 layer_factory.hpp:77] Creating layer loss
I0426 20:48:38.375329 31301 net.cpp:86] Creating Layer loss
I0426 20:48:38.375332 31301 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:48:38.375335 31301 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:48:38.375344 31301 net.cpp:382] loss -> loss
I0426 20:48:38.375350 31301 layer_factory.hpp:77] Creating layer loss
I0426 20:48:38.375593 31301 net.cpp:124] Setting up loss
I0426 20:48:38.375602 31301 net.cpp:131] Top shape: (1)
I0426 20:48:38.375605 31301 net.cpp:134]     with loss weight 1
I0426 20:48:38.375612 31301 net.cpp:139] Memory required for data: 810808
I0426 20:48:38.375614 31301 net.cpp:200] loss needs backward computation.
I0426 20:48:38.375618 31301 net.cpp:202] accuracy does not need backward computation.
I0426 20:48:38.375622 31301 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:48:38.375624 31301 net.cpp:200] relu3 needs backward computation.
I0426 20:48:38.375627 31301 net.cpp:200] ip3 needs backward computation.
I0426 20:48:38.375630 31301 net.cpp:200] relu2 needs backward computation.
I0426 20:48:38.375633 31301 net.cpp:200] ip2 needs backward computation.
I0426 20:48:38.375635 31301 net.cpp:200] relu1 needs backward computation.
I0426 20:48:38.375638 31301 net.cpp:200] ip1 needs backward computation.
I0426 20:48:38.375641 31301 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:48:38.375644 31301 net.cpp:202] mnist does not need backward computation.
I0426 20:48:38.375648 31301 net.cpp:244] This network produces output accuracy
I0426 20:48:38.375650 31301 net.cpp:244] This network produces output loss
I0426 20:48:38.375658 31301 net.cpp:257] Network initialization done.
I0426 20:48:38.375687 31301 solver.cpp:56] Solver scaffolding done.
I0426 20:48:38.375875 31301 caffe.cpp:248] Starting Optimization
I0426 20:48:38.375881 31301 solver.cpp:273] Solving LeNet
I0426 20:48:38.375883 31301 solver.cpp:274] Learning Rate Policy: inv
I0426 20:48:38.378007 31301 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:48:38.380591 31301 blocking_queue.cpp:49] Waiting for data
I0426 20:48:38.436496 31308 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:38.436992 31301 solver.cpp:398]     Test net output #0: accuracy = 0.1068
I0426 20:48:38.437011 31301 solver.cpp:398]     Test net output #1: loss = 2.30341 (* 1 = 2.30341 loss)
I0426 20:48:38.437747 31301 solver.cpp:219] Iteration 0 (-1.35353e+21 iter/s, 0.0618404s/100 iters), loss = 2.30634
I0426 20:48:38.437767 31301 solver.cpp:238]     Train net output #0: loss = 2.30634 (* 1 = 2.30634 loss)
I0426 20:48:38.437778 31301 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:48:38.497911 31301 solver.cpp:219] Iteration 100 (1662.91 iter/s, 0.0601354s/100 iters), loss = 0.881032
I0426 20:48:38.497936 31301 solver.cpp:238]     Train net output #0: loss = 0.881032 (* 1 = 0.881032 loss)
I0426 20:48:38.497957 31301 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:48:38.550642 31301 solver.cpp:219] Iteration 200 (1897.56 iter/s, 0.0526991s/100 iters), loss = 1.0883
I0426 20:48:38.550665 31301 solver.cpp:238]     Train net output #0: loss = 1.0883 (* 1 = 1.0883 loss)
I0426 20:48:38.550688 31301 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:48:38.604310 31301 solver.cpp:219] Iteration 300 (1864.38 iter/s, 0.0536371s/100 iters), loss = 0.573949
I0426 20:48:38.604333 31301 solver.cpp:238]     Train net output #0: loss = 0.573949 (* 1 = 0.573949 loss)
I0426 20:48:38.604357 31301 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:48:38.657821 31301 solver.cpp:219] Iteration 400 (1869.84 iter/s, 0.0534805s/100 iters), loss = 0.624351
I0426 20:48:38.657845 31301 solver.cpp:238]     Train net output #0: loss = 0.624351 (* 1 = 0.624351 loss)
I0426 20:48:38.657868 31301 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:48:38.714506 31301 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:48:38.767877 31308 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:38.768371 31301 solver.cpp:398]     Test net output #0: accuracy = 0.7632
I0426 20:48:38.768398 31301 solver.cpp:398]     Test net output #1: loss = 0.685129 (* 1 = 0.685129 loss)
I0426 20:48:38.769008 31301 solver.cpp:219] Iteration 500 (899.668 iter/s, 0.111152s/100 iters), loss = 0.823166
I0426 20:48:38.769037 31301 solver.cpp:238]     Train net output #0: loss = 0.823166 (* 1 = 0.823166 loss)
I0426 20:48:38.769044 31301 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:48:38.828956 31301 solver.cpp:219] Iteration 600 (1669.19 iter/s, 0.0599091s/100 iters), loss = 0.616604
I0426 20:48:38.828984 31301 solver.cpp:238]     Train net output #0: loss = 0.616604 (* 1 = 0.616604 loss)
I0426 20:48:38.828991 31301 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:48:38.883368 31301 solver.cpp:219] Iteration 700 (1839.07 iter/s, 0.0543754s/100 iters), loss = 0.494743
I0426 20:48:38.883409 31301 solver.cpp:238]     Train net output #0: loss = 0.494743 (* 1 = 0.494743 loss)
I0426 20:48:38.883417 31301 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:48:38.937206 31301 solver.cpp:219] Iteration 800 (1859.52 iter/s, 0.0537773s/100 iters), loss = 0.59418
I0426 20:48:38.937243 31301 solver.cpp:238]     Train net output #0: loss = 0.59418 (* 1 = 0.59418 loss)
I0426 20:48:38.937265 31301 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:48:38.990978 31301 solver.cpp:219] Iteration 900 (1861.25 iter/s, 0.0537272s/100 iters), loss = 0.768173
I0426 20:48:38.991001 31301 solver.cpp:238]     Train net output #0: loss = 0.768173 (* 1 = 0.768173 loss)
I0426 20:48:38.991024 31301 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:48:39.009902 31307 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:39.044802 31301 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:48:39.048755 31301 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:48:39.051398 31301 solver.cpp:311] Iteration 1000, loss = 0.415876
I0426 20:48:39.051429 31301 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:48:39.108147 31308 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:48:39.108594 31301 solver.cpp:398]     Test net output #0: accuracy = 0.846
I0426 20:48:39.108613 31301 solver.cpp:398]     Test net output #1: loss = 0.435589 (* 1 = 0.435589 loss)
I0426 20:48:39.108618 31301 solver.cpp:316] Optimization Done.
I0426 20:48:39.108620 31301 caffe.cpp:259] Optimization Done.
