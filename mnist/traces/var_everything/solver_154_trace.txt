I0426 20:54:12.910574 32628 caffe.cpp:218] Using GPUs 0
I0426 20:54:12.946501 32628 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:54:13.453713 32628 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test154.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:54:13.453833 32628 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test154.prototxt
I0426 20:54:13.454095 32628 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:54:13.454108 32628 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:54:13.454172 32628 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:54:13.454228 32628 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:13.454313 32628 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:54:13.454336 32628 net.cpp:86] Creating Layer mnist
I0426 20:54:13.454344 32628 net.cpp:382] mnist -> data
I0426 20:54:13.454377 32628 net.cpp:382] mnist -> label
I0426 20:54:13.455271 32628 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:54:13.457517 32628 net.cpp:124] Setting up mnist
I0426 20:54:13.457530 32628 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:54:13.457551 32628 net.cpp:131] Top shape: 64 (64)
I0426 20:54:13.457554 32628 net.cpp:139] Memory required for data: 200960
I0426 20:54:13.457561 32628 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:13.457588 32628 net.cpp:86] Creating Layer conv0
I0426 20:54:13.457593 32628 net.cpp:408] conv0 <- data
I0426 20:54:13.457604 32628 net.cpp:382] conv0 -> conv0
I0426 20:54:13.691269 32628 net.cpp:124] Setting up conv0
I0426 20:54:13.691295 32628 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:54:13.691298 32628 net.cpp:139] Memory required for data: 7573760
I0426 20:54:13.691314 32628 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:13.691328 32628 net.cpp:86] Creating Layer pool0
I0426 20:54:13.691331 32628 net.cpp:408] pool0 <- conv0
I0426 20:54:13.691336 32628 net.cpp:382] pool0 -> pool0
I0426 20:54:13.691395 32628 net.cpp:124] Setting up pool0
I0426 20:54:13.691402 32628 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:54:13.691423 32628 net.cpp:139] Memory required for data: 9416960
I0426 20:54:13.691426 32628 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:13.691437 32628 net.cpp:86] Creating Layer conv1
I0426 20:54:13.691440 32628 net.cpp:408] conv1 <- pool0
I0426 20:54:13.691447 32628 net.cpp:382] conv1 -> conv1
I0426 20:54:13.693812 32628 net.cpp:124] Setting up conv1
I0426 20:54:13.693842 32628 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:54:13.693845 32628 net.cpp:139] Memory required for data: 9826560
I0426 20:54:13.693855 32628 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:13.693861 32628 net.cpp:86] Creating Layer pool1
I0426 20:54:13.693864 32628 net.cpp:408] pool1 <- conv1
I0426 20:54:13.693886 32628 net.cpp:382] pool1 -> pool1
I0426 20:54:13.693922 32628 net.cpp:124] Setting up pool1
I0426 20:54:13.693928 32628 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:54:13.693931 32628 net.cpp:139] Memory required for data: 9928960
I0426 20:54:13.693934 32628 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:13.693941 32628 net.cpp:86] Creating Layer ip1
I0426 20:54:13.693944 32628 net.cpp:408] ip1 <- pool1
I0426 20:54:13.693949 32628 net.cpp:382] ip1 -> ip1
I0426 20:54:13.694084 32628 net.cpp:124] Setting up ip1
I0426 20:54:13.694092 32628 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:13.694108 32628 net.cpp:139] Memory required for data: 9931520
I0426 20:54:13.694114 32628 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:13.694119 32628 net.cpp:86] Creating Layer relu1
I0426 20:54:13.694123 32628 net.cpp:408] relu1 <- ip1
I0426 20:54:13.694126 32628 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:13.694290 32628 net.cpp:124] Setting up relu1
I0426 20:54:13.694298 32628 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:13.694301 32628 net.cpp:139] Memory required for data: 9934080
I0426 20:54:13.694304 32628 layer_factory.hpp:77] Creating layer loss
I0426 20:54:13.694310 32628 net.cpp:86] Creating Layer loss
I0426 20:54:13.694314 32628 net.cpp:408] loss <- ip1
I0426 20:54:13.694317 32628 net.cpp:408] loss <- label
I0426 20:54:13.694322 32628 net.cpp:382] loss -> loss
I0426 20:54:13.694335 32628 layer_factory.hpp:77] Creating layer loss
I0426 20:54:13.695209 32628 net.cpp:124] Setting up loss
I0426 20:54:13.695220 32628 net.cpp:131] Top shape: (1)
I0426 20:54:13.695238 32628 net.cpp:134]     with loss weight 1
I0426 20:54:13.695251 32628 net.cpp:139] Memory required for data: 9934084
I0426 20:54:13.695255 32628 net.cpp:200] loss needs backward computation.
I0426 20:54:13.695258 32628 net.cpp:200] relu1 needs backward computation.
I0426 20:54:13.695261 32628 net.cpp:200] ip1 needs backward computation.
I0426 20:54:13.695263 32628 net.cpp:200] pool1 needs backward computation.
I0426 20:54:13.695266 32628 net.cpp:200] conv1 needs backward computation.
I0426 20:54:13.695268 32628 net.cpp:200] pool0 needs backward computation.
I0426 20:54:13.695271 32628 net.cpp:200] conv0 needs backward computation.
I0426 20:54:13.695274 32628 net.cpp:202] mnist does not need backward computation.
I0426 20:54:13.695276 32628 net.cpp:244] This network produces output loss
I0426 20:54:13.695286 32628 net.cpp:257] Network initialization done.
I0426 20:54:13.695523 32628 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test154.prototxt
I0426 20:54:13.695546 32628 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:54:13.695616 32628 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:54:13.695683 32628 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:13.695724 32628 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:54:13.695736 32628 net.cpp:86] Creating Layer mnist
I0426 20:54:13.695741 32628 net.cpp:382] mnist -> data
I0426 20:54:13.695749 32628 net.cpp:382] mnist -> label
I0426 20:54:13.695829 32628 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:54:13.697803 32628 net.cpp:124] Setting up mnist
I0426 20:54:13.697815 32628 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:54:13.697819 32628 net.cpp:131] Top shape: 100 (100)
I0426 20:54:13.697839 32628 net.cpp:139] Memory required for data: 314000
I0426 20:54:13.697841 32628 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:54:13.697847 32628 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:54:13.697850 32628 net.cpp:408] label_mnist_1_split <- label
I0426 20:54:13.697888 32628 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:54:13.697896 32628 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:54:13.697943 32628 net.cpp:124] Setting up label_mnist_1_split
I0426 20:54:13.697952 32628 net.cpp:131] Top shape: 100 (100)
I0426 20:54:13.697955 32628 net.cpp:131] Top shape: 100 (100)
I0426 20:54:13.697958 32628 net.cpp:139] Memory required for data: 314800
I0426 20:54:13.697962 32628 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:13.697969 32628 net.cpp:86] Creating Layer conv0
I0426 20:54:13.697973 32628 net.cpp:408] conv0 <- data
I0426 20:54:13.697978 32628 net.cpp:382] conv0 -> conv0
I0426 20:54:13.699008 32628 net.cpp:124] Setting up conv0
I0426 20:54:13.699019 32628 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:54:13.699038 32628 net.cpp:139] Memory required for data: 11834800
I0426 20:54:13.699046 32628 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:13.699054 32628 net.cpp:86] Creating Layer pool0
I0426 20:54:13.699057 32628 net.cpp:408] pool0 <- conv0
I0426 20:54:13.699061 32628 net.cpp:382] pool0 -> pool0
I0426 20:54:13.699106 32628 net.cpp:124] Setting up pool0
I0426 20:54:13.699115 32628 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:54:13.699116 32628 net.cpp:139] Memory required for data: 14714800
I0426 20:54:13.699120 32628 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:13.699128 32628 net.cpp:86] Creating Layer conv1
I0426 20:54:13.699131 32628 net.cpp:408] conv1 <- pool0
I0426 20:54:13.699136 32628 net.cpp:382] conv1 -> conv1
I0426 20:54:13.700976 32628 net.cpp:124] Setting up conv1
I0426 20:54:13.701004 32628 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:54:13.701023 32628 net.cpp:139] Memory required for data: 15354800
I0426 20:54:13.701031 32628 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:13.701040 32628 net.cpp:86] Creating Layer pool1
I0426 20:54:13.701068 32628 net.cpp:408] pool1 <- conv1
I0426 20:54:13.701073 32628 net.cpp:382] pool1 -> pool1
I0426 20:54:13.701109 32628 net.cpp:124] Setting up pool1
I0426 20:54:13.701117 32628 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:54:13.701120 32628 net.cpp:139] Memory required for data: 15514800
I0426 20:54:13.701123 32628 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:13.701129 32628 net.cpp:86] Creating Layer ip1
I0426 20:54:13.701133 32628 net.cpp:408] ip1 <- pool1
I0426 20:54:13.701138 32628 net.cpp:382] ip1 -> ip1
I0426 20:54:13.701252 32628 net.cpp:124] Setting up ip1
I0426 20:54:13.701259 32628 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:13.701263 32628 net.cpp:139] Memory required for data: 15518800
I0426 20:54:13.701270 32628 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:13.701274 32628 net.cpp:86] Creating Layer relu1
I0426 20:54:13.701278 32628 net.cpp:408] relu1 <- ip1
I0426 20:54:13.701284 32628 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:13.702227 32628 net.cpp:124] Setting up relu1
I0426 20:54:13.702239 32628 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:13.702256 32628 net.cpp:139] Memory required for data: 15522800
I0426 20:54:13.702260 32628 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:54:13.702268 32628 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:54:13.702271 32628 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:54:13.702276 32628 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:54:13.702282 32628 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:54:13.702332 32628 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:54:13.702338 32628 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:13.702343 32628 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:13.702345 32628 net.cpp:139] Memory required for data: 15530800
I0426 20:54:13.702349 32628 layer_factory.hpp:77] Creating layer accuracy
I0426 20:54:13.702354 32628 net.cpp:86] Creating Layer accuracy
I0426 20:54:13.702358 32628 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:54:13.702361 32628 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:54:13.702366 32628 net.cpp:382] accuracy -> accuracy
I0426 20:54:13.702374 32628 net.cpp:124] Setting up accuracy
I0426 20:54:13.702383 32628 net.cpp:131] Top shape: (1)
I0426 20:54:13.702386 32628 net.cpp:139] Memory required for data: 15530804
I0426 20:54:13.702389 32628 layer_factory.hpp:77] Creating layer loss
I0426 20:54:13.702394 32628 net.cpp:86] Creating Layer loss
I0426 20:54:13.702397 32628 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:54:13.702401 32628 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:54:13.702406 32628 net.cpp:382] loss -> loss
I0426 20:54:13.702412 32628 layer_factory.hpp:77] Creating layer loss
I0426 20:54:13.702661 32628 net.cpp:124] Setting up loss
I0426 20:54:13.702671 32628 net.cpp:131] Top shape: (1)
I0426 20:54:13.702673 32628 net.cpp:134]     with loss weight 1
I0426 20:54:13.702680 32628 net.cpp:139] Memory required for data: 15530808
I0426 20:54:13.702683 32628 net.cpp:200] loss needs backward computation.
I0426 20:54:13.702692 32628 net.cpp:202] accuracy does not need backward computation.
I0426 20:54:13.702702 32628 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:54:13.702704 32628 net.cpp:200] relu1 needs backward computation.
I0426 20:54:13.702708 32628 net.cpp:200] ip1 needs backward computation.
I0426 20:54:13.702710 32628 net.cpp:200] pool1 needs backward computation.
I0426 20:54:13.702713 32628 net.cpp:200] conv1 needs backward computation.
I0426 20:54:13.702720 32628 net.cpp:200] pool0 needs backward computation.
I0426 20:54:13.702723 32628 net.cpp:200] conv0 needs backward computation.
I0426 20:54:13.702733 32628 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:54:13.702735 32628 net.cpp:202] mnist does not need backward computation.
I0426 20:54:13.702739 32628 net.cpp:244] This network produces output accuracy
I0426 20:54:13.702741 32628 net.cpp:244] This network produces output loss
I0426 20:54:13.702761 32628 net.cpp:257] Network initialization done.
I0426 20:54:13.702793 32628 solver.cpp:56] Solver scaffolding done.
I0426 20:54:13.703007 32628 caffe.cpp:248] Starting Optimization
I0426 20:54:13.703012 32628 solver.cpp:273] Solving LeNet
I0426 20:54:13.703016 32628 solver.cpp:274] Learning Rate Policy: inv
I0426 20:54:13.703135 32628 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:54:13.710266 32628 blocking_queue.cpp:49] Waiting for data
I0426 20:54:13.778280 32635 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:13.778996 32628 solver.cpp:398]     Test net output #0: accuracy = 0.0987
I0426 20:54:13.779029 32628 solver.cpp:398]     Test net output #1: loss = 2.33937 (* 1 = 2.33937 loss)
I0426 20:54:13.783408 32628 solver.cpp:219] Iteration 0 (-3.13844e-31 iter/s, 0.0803697s/100 iters), loss = 2.34525
I0426 20:54:13.783432 32628 solver.cpp:238]     Train net output #0: loss = 2.34525 (* 1 = 2.34525 loss)
I0426 20:54:13.783442 32628 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:54:13.901736 32628 solver.cpp:219] Iteration 100 (845.376 iter/s, 0.118291s/100 iters), loss = 0.443816
I0426 20:54:13.901775 32628 solver.cpp:238]     Train net output #0: loss = 0.443816 (* 1 = 0.443816 loss)
I0426 20:54:13.901782 32628 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:54:14.022065 32628 solver.cpp:219] Iteration 200 (831.294 iter/s, 0.120294s/100 iters), loss = 0.176264
I0426 20:54:14.022089 32628 solver.cpp:238]     Train net output #0: loss = 0.176264 (* 1 = 0.176264 loss)
I0426 20:54:14.022095 32628 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:54:14.139605 32628 solver.cpp:219] Iteration 300 (851.027 iter/s, 0.117505s/100 iters), loss = 0.170982
I0426 20:54:14.139631 32628 solver.cpp:238]     Train net output #0: loss = 0.170982 (* 1 = 0.170982 loss)
I0426 20:54:14.139636 32628 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:54:14.256670 32628 solver.cpp:219] Iteration 400 (854.49 iter/s, 0.117029s/100 iters), loss = 0.0675368
I0426 20:54:14.256693 32628 solver.cpp:238]     Train net output #0: loss = 0.0675368 (* 1 = 0.0675368 loss)
I0426 20:54:14.256700 32628 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:54:14.372795 32628 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:54:14.432843 32635 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:14.434360 32628 solver.cpp:398]     Test net output #0: accuracy = 0.9668
I0426 20:54:14.434396 32628 solver.cpp:398]     Test net output #1: loss = 0.108235 (* 1 = 0.108235 loss)
I0426 20:54:14.435583 32628 solver.cpp:219] Iteration 500 (559.048 iter/s, 0.178875s/100 iters), loss = 0.113055
I0426 20:54:14.435619 32628 solver.cpp:238]     Train net output #0: loss = 0.113055 (* 1 = 0.113055 loss)
I0426 20:54:14.435626 32628 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:54:14.568014 32628 solver.cpp:219] Iteration 600 (755.298 iter/s, 0.132398s/100 iters), loss = 0.107289
I0426 20:54:14.568053 32628 solver.cpp:238]     Train net output #0: loss = 0.107289 (* 1 = 0.107289 loss)
I0426 20:54:14.568059 32628 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:54:14.687769 32628 solver.cpp:219] Iteration 700 (835.282 iter/s, 0.11972s/100 iters), loss = 0.141892
I0426 20:54:14.687808 32628 solver.cpp:238]     Train net output #0: loss = 0.141892 (* 1 = 0.141892 loss)
I0426 20:54:14.687814 32628 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:54:14.805125 32628 solver.cpp:219] Iteration 800 (852.357 iter/s, 0.117322s/100 iters), loss = 0.190825
I0426 20:54:14.805164 32628 solver.cpp:238]     Train net output #0: loss = 0.190825 (* 1 = 0.190825 loss)
I0426 20:54:14.805171 32628 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:54:14.922349 32628 solver.cpp:219] Iteration 900 (853.317 iter/s, 0.11719s/100 iters), loss = 0.157327
I0426 20:54:14.922402 32628 solver.cpp:238]     Train net output #0: loss = 0.157327 (* 1 = 0.157327 loss)
I0426 20:54:14.922408 32628 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:54:14.961637 32634 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:15.037467 32628 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:54:15.038830 32628 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:54:15.039759 32628 solver.cpp:311] Iteration 1000, loss = 0.0906133
I0426 20:54:15.039772 32628 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:54:15.115157 32635 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:15.115890 32628 solver.cpp:398]     Test net output #0: accuracy = 0.9775
I0426 20:54:15.115922 32628 solver.cpp:398]     Test net output #1: loss = 0.0734801 (* 1 = 0.0734801 loss)
I0426 20:54:15.115927 32628 solver.cpp:316] Optimization Done.
I0426 20:54:15.115931 32628 caffe.cpp:259] Optimization Done.
