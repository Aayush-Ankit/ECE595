I0426 20:51:54.064510 32077 caffe.cpp:218] Using GPUs 0
I0426 20:51:54.103113 32077 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:54.627053 32077 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test98.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:54.627197 32077 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test98.prototxt
I0426 20:51:54.627547 32077 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:54.627562 32077 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:54.627641 32077 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:51:54.627712 32077 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:54.627822 32077 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:54.627848 32077 net.cpp:86] Creating Layer mnist
I0426 20:51:54.627857 32077 net.cpp:382] mnist -> data
I0426 20:51:54.627882 32077 net.cpp:382] mnist -> label
I0426 20:51:54.629029 32077 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:54.631551 32077 net.cpp:124] Setting up mnist
I0426 20:51:54.631570 32077 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:54.631577 32077 net.cpp:131] Top shape: 64 (64)
I0426 20:51:54.631580 32077 net.cpp:139] Memory required for data: 200960
I0426 20:51:54.631587 32077 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:54.631605 32077 net.cpp:86] Creating Layer conv0
I0426 20:51:54.631610 32077 net.cpp:408] conv0 <- data
I0426 20:51:54.631621 32077 net.cpp:382] conv0 -> conv0
I0426 20:51:54.927208 32077 net.cpp:124] Setting up conv0
I0426 20:51:54.927240 32077 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:51:54.927245 32077 net.cpp:139] Memory required for data: 3887360
I0426 20:51:54.927263 32077 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:54.927278 32077 net.cpp:86] Creating Layer pool0
I0426 20:51:54.927284 32077 net.cpp:408] pool0 <- conv0
I0426 20:51:54.927290 32077 net.cpp:382] pool0 -> pool0
I0426 20:51:54.927347 32077 net.cpp:124] Setting up pool0
I0426 20:51:54.927356 32077 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:51:54.927377 32077 net.cpp:139] Memory required for data: 4808960
I0426 20:51:54.927381 32077 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:54.927395 32077 net.cpp:86] Creating Layer conv1
I0426 20:51:54.927400 32077 net.cpp:408] conv1 <- pool0
I0426 20:51:54.927407 32077 net.cpp:382] conv1 -> conv1
I0426 20:51:54.930748 32077 net.cpp:124] Setting up conv1
I0426 20:51:54.930766 32077 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:51:54.930771 32077 net.cpp:139] Memory required for data: 4972800
I0426 20:51:54.930783 32077 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:54.930791 32077 net.cpp:86] Creating Layer pool1
I0426 20:51:54.930795 32077 net.cpp:408] pool1 <- conv1
I0426 20:51:54.930802 32077 net.cpp:382] pool1 -> pool1
I0426 20:51:54.930846 32077 net.cpp:124] Setting up pool1
I0426 20:51:54.930855 32077 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:51:54.930858 32077 net.cpp:139] Memory required for data: 5013760
I0426 20:51:54.930862 32077 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:54.930871 32077 net.cpp:86] Creating Layer ip1
I0426 20:51:54.930874 32077 net.cpp:408] ip1 <- pool1
I0426 20:51:54.930881 32077 net.cpp:382] ip1 -> ip1
I0426 20:51:54.931964 32077 net.cpp:124] Setting up ip1
I0426 20:51:54.931979 32077 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:54.931984 32077 net.cpp:139] Memory required for data: 5016320
I0426 20:51:54.931993 32077 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:54.932000 32077 net.cpp:86] Creating Layer relu1
I0426 20:51:54.932005 32077 net.cpp:408] relu1 <- ip1
I0426 20:51:54.932011 32077 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:54.932215 32077 net.cpp:124] Setting up relu1
I0426 20:51:54.932225 32077 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:54.932229 32077 net.cpp:139] Memory required for data: 5018880
I0426 20:51:54.932234 32077 layer_factory.hpp:77] Creating layer loss
I0426 20:51:54.932241 32077 net.cpp:86] Creating Layer loss
I0426 20:51:54.932245 32077 net.cpp:408] loss <- ip1
I0426 20:51:54.932250 32077 net.cpp:408] loss <- label
I0426 20:51:54.932255 32077 net.cpp:382] loss -> loss
I0426 20:51:54.932276 32077 layer_factory.hpp:77] Creating layer loss
I0426 20:51:54.933322 32077 net.cpp:124] Setting up loss
I0426 20:51:54.933337 32077 net.cpp:131] Top shape: (1)
I0426 20:51:54.933341 32077 net.cpp:134]     with loss weight 1
I0426 20:51:54.933357 32077 net.cpp:139] Memory required for data: 5018884
I0426 20:51:54.933362 32077 net.cpp:200] loss needs backward computation.
I0426 20:51:54.933367 32077 net.cpp:200] relu1 needs backward computation.
I0426 20:51:54.933370 32077 net.cpp:200] ip1 needs backward computation.
I0426 20:51:54.933374 32077 net.cpp:200] pool1 needs backward computation.
I0426 20:51:54.933378 32077 net.cpp:200] conv1 needs backward computation.
I0426 20:51:54.933382 32077 net.cpp:200] pool0 needs backward computation.
I0426 20:51:54.933385 32077 net.cpp:200] conv0 needs backward computation.
I0426 20:51:54.933389 32077 net.cpp:202] mnist does not need backward computation.
I0426 20:51:54.933393 32077 net.cpp:244] This network produces output loss
I0426 20:51:54.933403 32077 net.cpp:257] Network initialization done.
I0426 20:51:54.933704 32077 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test98.prototxt
I0426 20:51:54.933733 32077 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:54.933820 32077 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:51:54.933902 32077 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:54.933950 32077 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:54.933966 32077 net.cpp:86] Creating Layer mnist
I0426 20:51:54.933972 32077 net.cpp:382] mnist -> data
I0426 20:51:54.933981 32077 net.cpp:382] mnist -> label
I0426 20:51:54.934082 32077 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:54.936362 32077 net.cpp:124] Setting up mnist
I0426 20:51:54.936378 32077 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:54.936384 32077 net.cpp:131] Top shape: 100 (100)
I0426 20:51:54.936388 32077 net.cpp:139] Memory required for data: 314000
I0426 20:51:54.936393 32077 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:54.936405 32077 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:54.936410 32077 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:54.936425 32077 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:54.936432 32077 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:54.936481 32077 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:54.936489 32077 net.cpp:131] Top shape: 100 (100)
I0426 20:51:54.936494 32077 net.cpp:131] Top shape: 100 (100)
I0426 20:51:54.936497 32077 net.cpp:139] Memory required for data: 314800
I0426 20:51:54.936501 32077 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:54.936511 32077 net.cpp:86] Creating Layer conv0
I0426 20:51:54.936517 32077 net.cpp:408] conv0 <- data
I0426 20:51:54.936523 32077 net.cpp:382] conv0 -> conv0
I0426 20:51:54.937588 32077 net.cpp:124] Setting up conv0
I0426 20:51:54.937604 32077 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:51:54.937608 32077 net.cpp:139] Memory required for data: 6074800
I0426 20:51:54.937619 32077 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:54.937628 32077 net.cpp:86] Creating Layer pool0
I0426 20:51:54.937633 32077 net.cpp:408] pool0 <- conv0
I0426 20:51:54.937639 32077 net.cpp:382] pool0 -> pool0
I0426 20:51:54.937681 32077 net.cpp:124] Setting up pool0
I0426 20:51:54.937690 32077 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:51:54.937693 32077 net.cpp:139] Memory required for data: 7514800
I0426 20:51:54.937697 32077 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:54.937710 32077 net.cpp:86] Creating Layer conv1
I0426 20:51:54.937714 32077 net.cpp:408] conv1 <- pool0
I0426 20:51:54.937721 32077 net.cpp:382] conv1 -> conv1
I0426 20:51:54.940361 32077 net.cpp:124] Setting up conv1
I0426 20:51:54.940376 32077 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:51:54.940381 32077 net.cpp:139] Memory required for data: 7770800
I0426 20:51:54.940392 32077 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:54.940400 32077 net.cpp:86] Creating Layer pool1
I0426 20:51:54.940417 32077 net.cpp:408] pool1 <- conv1
I0426 20:51:54.940423 32077 net.cpp:382] pool1 -> pool1
I0426 20:51:54.940517 32077 net.cpp:124] Setting up pool1
I0426 20:51:54.940526 32077 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:51:54.940531 32077 net.cpp:139] Memory required for data: 7834800
I0426 20:51:54.940536 32077 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:54.940544 32077 net.cpp:86] Creating Layer ip1
I0426 20:51:54.940551 32077 net.cpp:408] ip1 <- pool1
I0426 20:51:54.940557 32077 net.cpp:382] ip1 -> ip1
I0426 20:51:54.940690 32077 net.cpp:124] Setting up ip1
I0426 20:51:54.940698 32077 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:54.940702 32077 net.cpp:139] Memory required for data: 7838800
I0426 20:51:54.940711 32077 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:54.940717 32077 net.cpp:86] Creating Layer relu1
I0426 20:51:54.940723 32077 net.cpp:408] relu1 <- ip1
I0426 20:51:54.940732 32077 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:54.941771 32077 net.cpp:124] Setting up relu1
I0426 20:51:54.941786 32077 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:54.941790 32077 net.cpp:139] Memory required for data: 7842800
I0426 20:51:54.941794 32077 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:51:54.941803 32077 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:51:54.941809 32077 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:51:54.941817 32077 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:51:54.941823 32077 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:51:54.941872 32077 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:51:54.941880 32077 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:54.941885 32077 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:54.941890 32077 net.cpp:139] Memory required for data: 7850800
I0426 20:51:54.941892 32077 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:54.941898 32077 net.cpp:86] Creating Layer accuracy
I0426 20:51:54.941903 32077 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:51:54.941908 32077 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:54.941921 32077 net.cpp:382] accuracy -> accuracy
I0426 20:51:54.941931 32077 net.cpp:124] Setting up accuracy
I0426 20:51:54.941937 32077 net.cpp:131] Top shape: (1)
I0426 20:51:54.941941 32077 net.cpp:139] Memory required for data: 7850804
I0426 20:51:54.941951 32077 layer_factory.hpp:77] Creating layer loss
I0426 20:51:54.941957 32077 net.cpp:86] Creating Layer loss
I0426 20:51:54.941962 32077 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:51:54.941967 32077 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:54.941974 32077 net.cpp:382] loss -> loss
I0426 20:51:54.941983 32077 layer_factory.hpp:77] Creating layer loss
I0426 20:51:54.942276 32077 net.cpp:124] Setting up loss
I0426 20:51:54.942287 32077 net.cpp:131] Top shape: (1)
I0426 20:51:54.942291 32077 net.cpp:134]     with loss weight 1
I0426 20:51:54.942299 32077 net.cpp:139] Memory required for data: 7850808
I0426 20:51:54.942304 32077 net.cpp:200] loss needs backward computation.
I0426 20:51:54.942308 32077 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:54.942313 32077 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:51:54.942318 32077 net.cpp:200] relu1 needs backward computation.
I0426 20:51:54.942322 32077 net.cpp:200] ip1 needs backward computation.
I0426 20:51:54.942327 32077 net.cpp:200] pool1 needs backward computation.
I0426 20:51:54.942330 32077 net.cpp:200] conv1 needs backward computation.
I0426 20:51:54.942334 32077 net.cpp:200] pool0 needs backward computation.
I0426 20:51:54.942338 32077 net.cpp:200] conv0 needs backward computation.
I0426 20:51:54.942343 32077 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:54.942348 32077 net.cpp:202] mnist does not need backward computation.
I0426 20:51:54.942351 32077 net.cpp:244] This network produces output accuracy
I0426 20:51:54.942355 32077 net.cpp:244] This network produces output loss
I0426 20:51:54.942380 32077 net.cpp:257] Network initialization done.
I0426 20:51:54.942430 32077 solver.cpp:56] Solver scaffolding done.
I0426 20:51:54.942700 32077 caffe.cpp:248] Starting Optimization
I0426 20:51:54.942708 32077 solver.cpp:273] Solving LeNet
I0426 20:51:54.942711 32077 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:54.943692 32077 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:54.948876 32077 blocking_queue.cpp:49] Waiting for data
I0426 20:51:55.016039 32086 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:55.016585 32077 solver.cpp:398]     Test net output #0: accuracy = 0.1335
I0426 20:51:55.016605 32077 solver.cpp:398]     Test net output #1: loss = 2.30299 (* 1 = 2.30299 loss)
I0426 20:51:55.020406 32077 solver.cpp:219] Iteration 0 (-1.07776e+21 iter/s, 0.0776632s/100 iters), loss = 2.26489
I0426 20:51:55.020433 32077 solver.cpp:238]     Train net output #0: loss = 2.26489 (* 1 = 2.26489 loss)
I0426 20:51:55.020445 32077 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:55.097954 32077 solver.cpp:219] Iteration 100 (1290.16 iter/s, 0.0775096s/100 iters), loss = 0.370629
I0426 20:51:55.097980 32077 solver.cpp:238]     Train net output #0: loss = 0.370629 (* 1 = 0.370629 loss)
I0426 20:51:55.098001 32077 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:55.175580 32077 solver.cpp:219] Iteration 200 (1288.78 iter/s, 0.0775926s/100 iters), loss = 0.191269
I0426 20:51:55.175604 32077 solver.cpp:238]     Train net output #0: loss = 0.191269 (* 1 = 0.191269 loss)
I0426 20:51:55.175627 32077 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:55.252894 32077 solver.cpp:219] Iteration 300 (1293.99 iter/s, 0.0772803s/100 iters), loss = 0.226868
I0426 20:51:55.252951 32077 solver.cpp:238]     Train net output #0: loss = 0.226868 (* 1 = 0.226868 loss)
I0426 20:51:55.252959 32077 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:55.329838 32077 solver.cpp:219] Iteration 400 (1300.77 iter/s, 0.0768778s/100 iters), loss = 0.115723
I0426 20:51:55.329859 32077 solver.cpp:238]     Train net output #0: loss = 0.115723 (* 1 = 0.115723 loss)
I0426 20:51:55.329865 32077 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:55.405515 32077 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:55.480682 32086 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:55.481292 32077 solver.cpp:398]     Test net output #0: accuracy = 0.9618
I0426 20:51:55.481325 32077 solver.cpp:398]     Test net output #1: loss = 0.132284 (* 1 = 0.132284 loss)
I0426 20:51:55.482185 32077 solver.cpp:219] Iteration 500 (656.539 iter/s, 0.152314s/100 iters), loss = 0.211109
I0426 20:51:55.482223 32077 solver.cpp:238]     Train net output #0: loss = 0.211109 (* 1 = 0.211109 loss)
I0426 20:51:55.482229 32077 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:55.571192 32077 solver.cpp:219] Iteration 600 (1123.92 iter/s, 0.0889741s/100 iters), loss = 0.16875
I0426 20:51:55.571231 32077 solver.cpp:238]     Train net output #0: loss = 0.16875 (* 1 = 0.16875 loss)
I0426 20:51:55.571238 32077 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:55.648898 32077 solver.cpp:219] Iteration 700 (1287.44 iter/s, 0.0776735s/100 iters), loss = 0.262663
I0426 20:51:55.648939 32077 solver.cpp:238]     Train net output #0: loss = 0.262663 (* 1 = 0.262663 loss)
I0426 20:51:55.648947 32077 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:55.726830 32077 solver.cpp:219] Iteration 800 (1284 iter/s, 0.0778814s/100 iters), loss = 0.232584
I0426 20:51:55.726871 32077 solver.cpp:238]     Train net output #0: loss = 0.232584 (* 1 = 0.232584 loss)
I0426 20:51:55.726876 32077 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:55.804514 32077 solver.cpp:219] Iteration 900 (1287.8 iter/s, 0.077652s/100 iters), loss = 0.238442
I0426 20:51:55.804554 32077 solver.cpp:238]     Train net output #0: loss = 0.238443 (* 1 = 0.238443 loss)
I0426 20:51:55.804560 32077 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:55.830947 32083 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:55.881798 32077 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:55.882673 32077 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:55.883318 32077 solver.cpp:311] Iteration 1000, loss = 0.135309
I0426 20:51:55.883347 32077 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:55.958395 32086 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:55.958964 32077 solver.cpp:398]     Test net output #0: accuracy = 0.975
I0426 20:51:55.958982 32077 solver.cpp:398]     Test net output #1: loss = 0.0818138 (* 1 = 0.0818138 loss)
I0426 20:51:55.959003 32077 solver.cpp:316] Optimization Done.
I0426 20:51:55.959007 32077 caffe.cpp:259] Optimization Done.
