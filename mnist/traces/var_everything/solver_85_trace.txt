I0426 20:51:21.581298 31966 caffe.cpp:218] Using GPUs 0
I0426 20:51:21.619958 31966 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:22.143321 31966 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test85.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:22.143462 31966 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test85.prototxt
I0426 20:51:22.143807 31966 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:22.143823 31966 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:22.143905 31966 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:51:22.143975 31966 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:22.144078 31966 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:22.144101 31966 net.cpp:86] Creating Layer mnist
I0426 20:51:22.144110 31966 net.cpp:382] mnist -> data
I0426 20:51:22.144131 31966 net.cpp:382] mnist -> label
I0426 20:51:22.145244 31966 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:22.147779 31966 net.cpp:124] Setting up mnist
I0426 20:51:22.147799 31966 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:22.147804 31966 net.cpp:131] Top shape: 64 (64)
I0426 20:51:22.147807 31966 net.cpp:139] Memory required for data: 200960
I0426 20:51:22.147814 31966 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:22.147831 31966 net.cpp:86] Creating Layer conv0
I0426 20:51:22.147837 31966 net.cpp:408] conv0 <- data
I0426 20:51:22.147850 31966 net.cpp:382] conv0 -> conv0
I0426 20:51:22.419884 31966 net.cpp:124] Setting up conv0
I0426 20:51:22.419910 31966 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:22.419914 31966 net.cpp:139] Memory required for data: 1675520
I0426 20:51:22.419944 31966 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:22.419955 31966 net.cpp:86] Creating Layer pool0
I0426 20:51:22.419958 31966 net.cpp:408] pool0 <- conv0
I0426 20:51:22.419965 31966 net.cpp:382] pool0 -> pool0
I0426 20:51:22.420008 31966 net.cpp:124] Setting up pool0
I0426 20:51:22.420014 31966 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:22.420032 31966 net.cpp:139] Memory required for data: 2044160
I0426 20:51:22.420037 31966 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:22.420047 31966 net.cpp:86] Creating Layer conv1
I0426 20:51:22.420049 31966 net.cpp:408] conv1 <- pool0
I0426 20:51:22.420054 31966 net.cpp:382] conv1 -> conv1
I0426 20:51:22.422732 31966 net.cpp:124] Setting up conv1
I0426 20:51:22.422762 31966 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:22.422766 31966 net.cpp:139] Memory required for data: 2863360
I0426 20:51:22.422773 31966 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:22.422781 31966 net.cpp:86] Creating Layer pool1
I0426 20:51:22.422799 31966 net.cpp:408] pool1 <- conv1
I0426 20:51:22.422803 31966 net.cpp:382] pool1 -> pool1
I0426 20:51:22.422853 31966 net.cpp:124] Setting up pool1
I0426 20:51:22.422861 31966 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:22.422863 31966 net.cpp:139] Memory required for data: 3068160
I0426 20:51:22.422866 31966 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:22.422873 31966 net.cpp:86] Creating Layer ip1
I0426 20:51:22.422875 31966 net.cpp:408] ip1 <- pool1
I0426 20:51:22.422880 31966 net.cpp:382] ip1 -> ip1
I0426 20:51:22.423008 31966 net.cpp:124] Setting up ip1
I0426 20:51:22.423015 31966 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:22.423018 31966 net.cpp:139] Memory required for data: 3070720
I0426 20:51:22.423024 31966 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:22.423029 31966 net.cpp:86] Creating Layer relu1
I0426 20:51:22.423032 31966 net.cpp:408] relu1 <- ip1
I0426 20:51:22.423036 31966 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:22.423189 31966 net.cpp:124] Setting up relu1
I0426 20:51:22.423197 31966 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:22.423200 31966 net.cpp:139] Memory required for data: 3073280
I0426 20:51:22.423203 31966 layer_factory.hpp:77] Creating layer loss
I0426 20:51:22.423208 31966 net.cpp:86] Creating Layer loss
I0426 20:51:22.423212 31966 net.cpp:408] loss <- ip1
I0426 20:51:22.423214 31966 net.cpp:408] loss <- label
I0426 20:51:22.423219 31966 net.cpp:382] loss -> loss
I0426 20:51:22.423235 31966 layer_factory.hpp:77] Creating layer loss
I0426 20:51:22.424082 31966 net.cpp:124] Setting up loss
I0426 20:51:22.424094 31966 net.cpp:131] Top shape: (1)
I0426 20:51:22.424098 31966 net.cpp:134]     with loss weight 1
I0426 20:51:22.424110 31966 net.cpp:139] Memory required for data: 3073284
I0426 20:51:22.424113 31966 net.cpp:200] loss needs backward computation.
I0426 20:51:22.424118 31966 net.cpp:200] relu1 needs backward computation.
I0426 20:51:22.424119 31966 net.cpp:200] ip1 needs backward computation.
I0426 20:51:22.424123 31966 net.cpp:200] pool1 needs backward computation.
I0426 20:51:22.424125 31966 net.cpp:200] conv1 needs backward computation.
I0426 20:51:22.424129 31966 net.cpp:200] pool0 needs backward computation.
I0426 20:51:22.424131 31966 net.cpp:200] conv0 needs backward computation.
I0426 20:51:22.424134 31966 net.cpp:202] mnist does not need backward computation.
I0426 20:51:22.424136 31966 net.cpp:244] This network produces output loss
I0426 20:51:22.424144 31966 net.cpp:257] Network initialization done.
I0426 20:51:22.424407 31966 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test85.prototxt
I0426 20:51:22.424430 31966 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:22.424501 31966 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:51:22.424583 31966 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:22.424623 31966 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:22.424634 31966 net.cpp:86] Creating Layer mnist
I0426 20:51:22.424638 31966 net.cpp:382] mnist -> data
I0426 20:51:22.424645 31966 net.cpp:382] mnist -> label
I0426 20:51:22.424739 31966 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:22.426676 31966 net.cpp:124] Setting up mnist
I0426 20:51:22.426687 31966 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:22.426692 31966 net.cpp:131] Top shape: 100 (100)
I0426 20:51:22.426707 31966 net.cpp:139] Memory required for data: 314000
I0426 20:51:22.426709 31966 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:22.426718 31966 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:22.426722 31966 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:22.426743 31966 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:22.426748 31966 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:22.426829 31966 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:22.426836 31966 net.cpp:131] Top shape: 100 (100)
I0426 20:51:22.426841 31966 net.cpp:131] Top shape: 100 (100)
I0426 20:51:22.426843 31966 net.cpp:139] Memory required for data: 314800
I0426 20:51:22.426846 31966 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:22.426869 31966 net.cpp:86] Creating Layer conv0
I0426 20:51:22.426872 31966 net.cpp:408] conv0 <- data
I0426 20:51:22.426877 31966 net.cpp:382] conv0 -> conv0
I0426 20:51:22.427644 31966 net.cpp:124] Setting up conv0
I0426 20:51:22.427654 31966 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:22.427659 31966 net.cpp:139] Memory required for data: 2618800
I0426 20:51:22.427666 31966 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:22.427671 31966 net.cpp:86] Creating Layer pool0
I0426 20:51:22.427675 31966 net.cpp:408] pool0 <- conv0
I0426 20:51:22.427680 31966 net.cpp:382] pool0 -> pool0
I0426 20:51:22.427711 31966 net.cpp:124] Setting up pool0
I0426 20:51:22.427722 31966 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:22.427726 31966 net.cpp:139] Memory required for data: 3194800
I0426 20:51:22.427728 31966 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:22.427736 31966 net.cpp:86] Creating Layer conv1
I0426 20:51:22.427738 31966 net.cpp:408] conv1 <- pool0
I0426 20:51:22.427742 31966 net.cpp:382] conv1 -> conv1
I0426 20:51:22.429411 31966 net.cpp:124] Setting up conv1
I0426 20:51:22.429435 31966 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:22.429438 31966 net.cpp:139] Memory required for data: 4474800
I0426 20:51:22.429448 31966 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:22.429455 31966 net.cpp:86] Creating Layer pool1
I0426 20:51:22.429478 31966 net.cpp:408] pool1 <- conv1
I0426 20:51:22.429483 31966 net.cpp:382] pool1 -> pool1
I0426 20:51:22.429517 31966 net.cpp:124] Setting up pool1
I0426 20:51:22.429524 31966 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:22.429527 31966 net.cpp:139] Memory required for data: 4794800
I0426 20:51:22.429530 31966 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:22.429536 31966 net.cpp:86] Creating Layer ip1
I0426 20:51:22.429539 31966 net.cpp:408] ip1 <- pool1
I0426 20:51:22.429544 31966 net.cpp:382] ip1 -> ip1
I0426 20:51:22.429672 31966 net.cpp:124] Setting up ip1
I0426 20:51:22.429680 31966 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:22.429682 31966 net.cpp:139] Memory required for data: 4798800
I0426 20:51:22.429689 31966 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:22.429694 31966 net.cpp:86] Creating Layer relu1
I0426 20:51:22.429697 31966 net.cpp:408] relu1 <- ip1
I0426 20:51:22.429702 31966 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:22.430608 31966 net.cpp:124] Setting up relu1
I0426 20:51:22.430620 31966 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:22.430624 31966 net.cpp:139] Memory required for data: 4802800
I0426 20:51:22.430626 31966 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:51:22.430644 31966 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:51:22.430647 31966 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:51:22.430667 31966 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:51:22.430673 31966 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:51:22.430716 31966 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:51:22.430722 31966 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:22.430727 31966 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:22.430729 31966 net.cpp:139] Memory required for data: 4810800
I0426 20:51:22.430732 31966 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:22.430737 31966 net.cpp:86] Creating Layer accuracy
I0426 20:51:22.430740 31966 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:51:22.430744 31966 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:22.430749 31966 net.cpp:382] accuracy -> accuracy
I0426 20:51:22.430757 31966 net.cpp:124] Setting up accuracy
I0426 20:51:22.430760 31966 net.cpp:131] Top shape: (1)
I0426 20:51:22.430764 31966 net.cpp:139] Memory required for data: 4810804
I0426 20:51:22.430768 31966 layer_factory.hpp:77] Creating layer loss
I0426 20:51:22.430776 31966 net.cpp:86] Creating Layer loss
I0426 20:51:22.430779 31966 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:51:22.430783 31966 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:22.430786 31966 net.cpp:382] loss -> loss
I0426 20:51:22.430793 31966 layer_factory.hpp:77] Creating layer loss
I0426 20:51:22.431025 31966 net.cpp:124] Setting up loss
I0426 20:51:22.431035 31966 net.cpp:131] Top shape: (1)
I0426 20:51:22.431038 31966 net.cpp:134]     with loss weight 1
I0426 20:51:22.431044 31966 net.cpp:139] Memory required for data: 4810808
I0426 20:51:22.431047 31966 net.cpp:200] loss needs backward computation.
I0426 20:51:22.431066 31966 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:22.431071 31966 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:51:22.431073 31966 net.cpp:200] relu1 needs backward computation.
I0426 20:51:22.431092 31966 net.cpp:200] ip1 needs backward computation.
I0426 20:51:22.431095 31966 net.cpp:200] pool1 needs backward computation.
I0426 20:51:22.431098 31966 net.cpp:200] conv1 needs backward computation.
I0426 20:51:22.431102 31966 net.cpp:200] pool0 needs backward computation.
I0426 20:51:22.431105 31966 net.cpp:200] conv0 needs backward computation.
I0426 20:51:22.431108 31966 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:22.431113 31966 net.cpp:202] mnist does not need backward computation.
I0426 20:51:22.431115 31966 net.cpp:244] This network produces output accuracy
I0426 20:51:22.431119 31966 net.cpp:244] This network produces output loss
I0426 20:51:22.431138 31966 net.cpp:257] Network initialization done.
I0426 20:51:22.431172 31966 solver.cpp:56] Solver scaffolding done.
I0426 20:51:22.431401 31966 caffe.cpp:248] Starting Optimization
I0426 20:51:22.431408 31966 solver.cpp:273] Solving LeNet
I0426 20:51:22.431411 31966 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:22.431560 31966 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:22.436090 31966 blocking_queue.cpp:49] Waiting for data
I0426 20:51:22.508865 31974 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:22.509394 31966 solver.cpp:398]     Test net output #0: accuracy = 0.1198
I0426 20:51:22.509413 31966 solver.cpp:398]     Test net output #1: loss = 2.31889 (* 1 = 2.31889 loss)
I0426 20:51:22.512684 31966 solver.cpp:219] Iteration 0 (-1.00053e-42 iter/s, 0.0812493s/100 iters), loss = 2.26142
I0426 20:51:22.512722 31966 solver.cpp:238]     Train net output #0: loss = 2.26142 (* 1 = 2.26142 loss)
I0426 20:51:22.512732 31966 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:22.605767 31966 solver.cpp:219] Iteration 100 (1074.68 iter/s, 0.0930509s/100 iters), loss = 0.43476
I0426 20:51:22.605808 31966 solver.cpp:238]     Train net output #0: loss = 0.43476 (* 1 = 0.43476 loss)
I0426 20:51:22.605814 31966 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:22.698177 31966 solver.cpp:219] Iteration 200 (1082.74 iter/s, 0.0923587s/100 iters), loss = 0.200081
I0426 20:51:22.698202 31966 solver.cpp:238]     Train net output #0: loss = 0.200081 (* 1 = 0.200081 loss)
I0426 20:51:22.698220 31966 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:22.792671 31966 solver.cpp:219] Iteration 300 (1058.67 iter/s, 0.0944579s/100 iters), loss = 0.21918
I0426 20:51:22.792697 31966 solver.cpp:238]     Train net output #0: loss = 0.21918 (* 1 = 0.21918 loss)
I0426 20:51:22.792721 31966 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:22.884338 31966 solver.cpp:219] Iteration 400 (1091.34 iter/s, 0.0916306s/100 iters), loss = 0.0816698
I0426 20:51:22.884364 31966 solver.cpp:238]     Train net output #0: loss = 0.0816697 (* 1 = 0.0816697 loss)
I0426 20:51:22.884387 31966 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:22.974319 31966 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:23.027382 31974 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:23.027835 31966 solver.cpp:398]     Test net output #0: accuracy = 0.9693
I0426 20:51:23.027858 31966 solver.cpp:398]     Test net output #1: loss = 0.105058 (* 1 = 0.105058 loss)
I0426 20:51:23.028888 31966 solver.cpp:219] Iteration 500 (691.999 iter/s, 0.144509s/100 iters), loss = 0.152766
I0426 20:51:23.028952 31966 solver.cpp:238]     Train net output #0: loss = 0.152766 (* 1 = 0.152766 loss)
I0426 20:51:23.028961 31966 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:23.135337 31966 solver.cpp:219] Iteration 600 (940.055 iter/s, 0.106377s/100 iters), loss = 0.0997814
I0426 20:51:23.135363 31966 solver.cpp:238]     Train net output #0: loss = 0.0997812 (* 1 = 0.0997812 loss)
I0426 20:51:23.135385 31966 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:23.240586 31966 solver.cpp:219] Iteration 700 (950.463 iter/s, 0.105212s/100 iters), loss = 0.168535
I0426 20:51:23.240609 31966 solver.cpp:238]     Train net output #0: loss = 0.168535 (* 1 = 0.168535 loss)
I0426 20:51:23.240631 31966 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:23.341640 31966 solver.cpp:219] Iteration 800 (989.915 iter/s, 0.101019s/100 iters), loss = 0.187162
I0426 20:51:23.341668 31966 solver.cpp:238]     Train net output #0: loss = 0.187162 (* 1 = 0.187162 loss)
I0426 20:51:23.341675 31966 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:23.432168 31966 solver.cpp:219] Iteration 900 (1105.08 iter/s, 0.0904908s/100 iters), loss = 0.183351
I0426 20:51:23.432193 31966 solver.cpp:238]     Train net output #0: loss = 0.183351 (* 1 = 0.183351 loss)
I0426 20:51:23.432199 31966 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:23.462653 31973 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:23.521778 31966 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:23.522783 31966 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:23.523331 31966 solver.cpp:311] Iteration 1000, loss = 0.0971046
I0426 20:51:23.523361 31966 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:23.598496 31974 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:23.599001 31966 solver.cpp:398]     Test net output #0: accuracy = 0.9755
I0426 20:51:23.599022 31966 solver.cpp:398]     Test net output #1: loss = 0.078932 (* 1 = 0.078932 loss)
I0426 20:51:23.599027 31966 solver.cpp:316] Optimization Done.
I0426 20:51:23.599050 31966 caffe.cpp:259] Optimization Done.
