I0426 20:54:48.572332 32737 caffe.cpp:218] Using GPUs 0
I0426 20:54:48.610899 32737 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:54:49.077486 32737 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test167.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:54:49.077636 32737 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test167.prototxt
I0426 20:54:49.078008 32737 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:54:49.078022 32737 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:54:49.078097 32737 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:49.078158 32737 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:49.078243 32737 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:54:49.078264 32737 net.cpp:86] Creating Layer mnist
I0426 20:54:49.078271 32737 net.cpp:382] mnist -> data
I0426 20:54:49.078291 32737 net.cpp:382] mnist -> label
I0426 20:54:49.079272 32737 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:54:49.081611 32737 net.cpp:124] Setting up mnist
I0426 20:54:49.081624 32737 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:54:49.081650 32737 net.cpp:131] Top shape: 64 (64)
I0426 20:54:49.081653 32737 net.cpp:139] Memory required for data: 200960
I0426 20:54:49.081660 32737 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:49.081672 32737 net.cpp:86] Creating Layer conv0
I0426 20:54:49.081689 32737 net.cpp:408] conv0 <- data
I0426 20:54:49.081714 32737 net.cpp:382] conv0 -> conv0
I0426 20:54:49.309087 32737 net.cpp:124] Setting up conv0
I0426 20:54:49.309128 32737 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:54:49.309132 32737 net.cpp:139] Memory required for data: 7573760
I0426 20:54:49.309161 32737 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:49.309173 32737 net.cpp:86] Creating Layer pool0
I0426 20:54:49.309177 32737 net.cpp:408] pool0 <- conv0
I0426 20:54:49.309197 32737 net.cpp:382] pool0 -> pool0
I0426 20:54:49.309243 32737 net.cpp:124] Setting up pool0
I0426 20:54:49.309263 32737 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:54:49.309267 32737 net.cpp:139] Memory required for data: 9416960
I0426 20:54:49.309269 32737 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:49.309279 32737 net.cpp:86] Creating Layer conv1
I0426 20:54:49.309283 32737 net.cpp:408] conv1 <- pool0
I0426 20:54:49.309288 32737 net.cpp:382] conv1 -> conv1
I0426 20:54:49.311398 32737 net.cpp:124] Setting up conv1
I0426 20:54:49.311426 32737 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:54:49.311429 32737 net.cpp:139] Memory required for data: 9826560
I0426 20:54:49.311437 32737 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:49.311444 32737 net.cpp:86] Creating Layer pool1
I0426 20:54:49.311449 32737 net.cpp:408] pool1 <- conv1
I0426 20:54:49.311452 32737 net.cpp:382] pool1 -> pool1
I0426 20:54:49.311502 32737 net.cpp:124] Setting up pool1
I0426 20:54:49.311507 32737 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:54:49.311511 32737 net.cpp:139] Memory required for data: 9928960
I0426 20:54:49.311513 32737 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:49.311519 32737 net.cpp:86] Creating Layer ip1
I0426 20:54:49.311522 32737 net.cpp:408] ip1 <- pool1
I0426 20:54:49.311527 32737 net.cpp:382] ip1 -> ip1
I0426 20:54:49.313292 32737 net.cpp:124] Setting up ip1
I0426 20:54:49.313304 32737 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:49.313323 32737 net.cpp:139] Memory required for data: 10005760
I0426 20:54:49.313345 32737 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:49.313351 32737 net.cpp:86] Creating Layer relu1
I0426 20:54:49.313354 32737 net.cpp:408] relu1 <- ip1
I0426 20:54:49.313359 32737 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:49.313535 32737 net.cpp:124] Setting up relu1
I0426 20:54:49.313544 32737 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:49.313547 32737 net.cpp:139] Memory required for data: 10082560
I0426 20:54:49.313550 32737 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:49.313557 32737 net.cpp:86] Creating Layer ip2
I0426 20:54:49.313560 32737 net.cpp:408] ip2 <- ip1
I0426 20:54:49.313565 32737 net.cpp:382] ip2 -> ip2
I0426 20:54:49.314174 32737 net.cpp:124] Setting up ip2
I0426 20:54:49.314182 32737 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:49.314185 32737 net.cpp:139] Memory required for data: 10159360
I0426 20:54:49.314191 32737 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:49.314198 32737 net.cpp:86] Creating Layer relu2
I0426 20:54:49.314200 32737 net.cpp:408] relu2 <- ip2
I0426 20:54:49.314204 32737 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:49.315011 32737 net.cpp:124] Setting up relu2
I0426 20:54:49.315024 32737 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:49.315027 32737 net.cpp:139] Memory required for data: 10236160
I0426 20:54:49.315031 32737 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:49.315052 32737 net.cpp:86] Creating Layer ip3
I0426 20:54:49.315054 32737 net.cpp:408] ip3 <- ip2
I0426 20:54:49.315074 32737 net.cpp:382] ip3 -> ip3
I0426 20:54:49.315191 32737 net.cpp:124] Setting up ip3
I0426 20:54:49.315213 32737 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:49.315217 32737 net.cpp:139] Memory required for data: 10238720
I0426 20:54:49.315225 32737 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:49.315230 32737 net.cpp:86] Creating Layer relu3
I0426 20:54:49.315233 32737 net.cpp:408] relu3 <- ip3
I0426 20:54:49.315237 32737 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:49.315399 32737 net.cpp:124] Setting up relu3
I0426 20:54:49.315407 32737 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:49.315412 32737 net.cpp:139] Memory required for data: 10241280
I0426 20:54:49.315414 32737 layer_factory.hpp:77] Creating layer loss
I0426 20:54:49.315420 32737 net.cpp:86] Creating Layer loss
I0426 20:54:49.315423 32737 net.cpp:408] loss <- ip3
I0426 20:54:49.315426 32737 net.cpp:408] loss <- label
I0426 20:54:49.315431 32737 net.cpp:382] loss -> loss
I0426 20:54:49.315445 32737 layer_factory.hpp:77] Creating layer loss
I0426 20:54:49.315675 32737 net.cpp:124] Setting up loss
I0426 20:54:49.315685 32737 net.cpp:131] Top shape: (1)
I0426 20:54:49.315687 32737 net.cpp:134]     with loss weight 1
I0426 20:54:49.315701 32737 net.cpp:139] Memory required for data: 10241284
I0426 20:54:49.315704 32737 net.cpp:200] loss needs backward computation.
I0426 20:54:49.315708 32737 net.cpp:200] relu3 needs backward computation.
I0426 20:54:49.315711 32737 net.cpp:200] ip3 needs backward computation.
I0426 20:54:49.315713 32737 net.cpp:200] relu2 needs backward computation.
I0426 20:54:49.315716 32737 net.cpp:200] ip2 needs backward computation.
I0426 20:54:49.315719 32737 net.cpp:200] relu1 needs backward computation.
I0426 20:54:49.315721 32737 net.cpp:200] ip1 needs backward computation.
I0426 20:54:49.315724 32737 net.cpp:200] pool1 needs backward computation.
I0426 20:54:49.315727 32737 net.cpp:200] conv1 needs backward computation.
I0426 20:54:49.315731 32737 net.cpp:200] pool0 needs backward computation.
I0426 20:54:49.315733 32737 net.cpp:200] conv0 needs backward computation.
I0426 20:54:49.315737 32737 net.cpp:202] mnist does not need backward computation.
I0426 20:54:49.315739 32737 net.cpp:244] This network produces output loss
I0426 20:54:49.315748 32737 net.cpp:257] Network initialization done.
I0426 20:54:49.316054 32737 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test167.prototxt
I0426 20:54:49.316081 32737 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:54:49.316169 32737 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:49.316243 32737 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:49.316285 32737 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:54:49.316313 32737 net.cpp:86] Creating Layer mnist
I0426 20:54:49.316318 32737 net.cpp:382] mnist -> data
I0426 20:54:49.316324 32737 net.cpp:382] mnist -> label
I0426 20:54:49.316406 32737 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:54:49.317600 32737 net.cpp:124] Setting up mnist
I0426 20:54:49.317615 32737 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:54:49.317618 32737 net.cpp:131] Top shape: 100 (100)
I0426 20:54:49.317621 32737 net.cpp:139] Memory required for data: 314000
I0426 20:54:49.317641 32737 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:54:49.317647 32737 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:54:49.317651 32737 net.cpp:408] label_mnist_1_split <- label
I0426 20:54:49.317656 32737 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:54:49.317662 32737 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:54:49.317756 32737 net.cpp:124] Setting up label_mnist_1_split
I0426 20:54:49.317764 32737 net.cpp:131] Top shape: 100 (100)
I0426 20:54:49.317769 32737 net.cpp:131] Top shape: 100 (100)
I0426 20:54:49.317771 32737 net.cpp:139] Memory required for data: 314800
I0426 20:54:49.317775 32737 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:49.317782 32737 net.cpp:86] Creating Layer conv0
I0426 20:54:49.317785 32737 net.cpp:408] conv0 <- data
I0426 20:54:49.317790 32737 net.cpp:382] conv0 -> conv0
I0426 20:54:49.319497 32737 net.cpp:124] Setting up conv0
I0426 20:54:49.319525 32737 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:54:49.319530 32737 net.cpp:139] Memory required for data: 11834800
I0426 20:54:49.319537 32737 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:49.319545 32737 net.cpp:86] Creating Layer pool0
I0426 20:54:49.319547 32737 net.cpp:408] pool0 <- conv0
I0426 20:54:49.319551 32737 net.cpp:382] pool0 -> pool0
I0426 20:54:49.319617 32737 net.cpp:124] Setting up pool0
I0426 20:54:49.319623 32737 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:54:49.319627 32737 net.cpp:139] Memory required for data: 14714800
I0426 20:54:49.319629 32737 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:49.319638 32737 net.cpp:86] Creating Layer conv1
I0426 20:54:49.319641 32737 net.cpp:408] conv1 <- pool0
I0426 20:54:49.319645 32737 net.cpp:382] conv1 -> conv1
I0426 20:54:49.321411 32737 net.cpp:124] Setting up conv1
I0426 20:54:49.321425 32737 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:54:49.321446 32737 net.cpp:139] Memory required for data: 15354800
I0426 20:54:49.321455 32737 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:49.321462 32737 net.cpp:86] Creating Layer pool1
I0426 20:54:49.321472 32737 net.cpp:408] pool1 <- conv1
I0426 20:54:49.321477 32737 net.cpp:382] pool1 -> pool1
I0426 20:54:49.321527 32737 net.cpp:124] Setting up pool1
I0426 20:54:49.321532 32737 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:54:49.321535 32737 net.cpp:139] Memory required for data: 15514800
I0426 20:54:49.321538 32737 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:49.321544 32737 net.cpp:86] Creating Layer ip1
I0426 20:54:49.321547 32737 net.cpp:408] ip1 <- pool1
I0426 20:54:49.321552 32737 net.cpp:382] ip1 -> ip1
I0426 20:54:49.323148 32737 net.cpp:124] Setting up ip1
I0426 20:54:49.323185 32737 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:49.323189 32737 net.cpp:139] Memory required for data: 15634800
I0426 20:54:49.323211 32737 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:49.323216 32737 net.cpp:86] Creating Layer relu1
I0426 20:54:49.323220 32737 net.cpp:408] relu1 <- ip1
I0426 20:54:49.323225 32737 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:49.323401 32737 net.cpp:124] Setting up relu1
I0426 20:54:49.323410 32737 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:49.323413 32737 net.cpp:139] Memory required for data: 15754800
I0426 20:54:49.323416 32737 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:49.323423 32737 net.cpp:86] Creating Layer ip2
I0426 20:54:49.323426 32737 net.cpp:408] ip2 <- ip1
I0426 20:54:49.323431 32737 net.cpp:382] ip2 -> ip2
I0426 20:54:49.324049 32737 net.cpp:124] Setting up ip2
I0426 20:54:49.324059 32737 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:49.324070 32737 net.cpp:139] Memory required for data: 15874800
I0426 20:54:49.324091 32737 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:49.324096 32737 net.cpp:86] Creating Layer relu2
I0426 20:54:49.324100 32737 net.cpp:408] relu2 <- ip2
I0426 20:54:49.324103 32737 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:49.324262 32737 net.cpp:124] Setting up relu2
I0426 20:54:49.324271 32737 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:49.324275 32737 net.cpp:139] Memory required for data: 15994800
I0426 20:54:49.324297 32737 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:49.324303 32737 net.cpp:86] Creating Layer ip3
I0426 20:54:49.324306 32737 net.cpp:408] ip3 <- ip2
I0426 20:54:49.324311 32737 net.cpp:382] ip3 -> ip3
I0426 20:54:49.324443 32737 net.cpp:124] Setting up ip3
I0426 20:54:49.324451 32737 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:49.324455 32737 net.cpp:139] Memory required for data: 15998800
I0426 20:54:49.324462 32737 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:49.324468 32737 net.cpp:86] Creating Layer relu3
I0426 20:54:49.324471 32737 net.cpp:408] relu3 <- ip3
I0426 20:54:49.324476 32737 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:49.325414 32737 net.cpp:124] Setting up relu3
I0426 20:54:49.325438 32737 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:49.325440 32737 net.cpp:139] Memory required for data: 16002800
I0426 20:54:49.325444 32737 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:54:49.325450 32737 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:54:49.325453 32737 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:54:49.325472 32737 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:54:49.325479 32737 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:54:49.325516 32737 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:54:49.325527 32737 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:49.325531 32737 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:49.325534 32737 net.cpp:139] Memory required for data: 16010800
I0426 20:54:49.325537 32737 layer_factory.hpp:77] Creating layer accuracy
I0426 20:54:49.325542 32737 net.cpp:86] Creating Layer accuracy
I0426 20:54:49.325546 32737 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:54:49.325549 32737 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:54:49.325553 32737 net.cpp:382] accuracy -> accuracy
I0426 20:54:49.325561 32737 net.cpp:124] Setting up accuracy
I0426 20:54:49.325564 32737 net.cpp:131] Top shape: (1)
I0426 20:54:49.325567 32737 net.cpp:139] Memory required for data: 16010804
I0426 20:54:49.325570 32737 layer_factory.hpp:77] Creating layer loss
I0426 20:54:49.325574 32737 net.cpp:86] Creating Layer loss
I0426 20:54:49.325577 32737 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:54:49.325582 32737 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:54:49.325585 32737 net.cpp:382] loss -> loss
I0426 20:54:49.325590 32737 layer_factory.hpp:77] Creating layer loss
I0426 20:54:49.325810 32737 net.cpp:124] Setting up loss
I0426 20:54:49.325820 32737 net.cpp:131] Top shape: (1)
I0426 20:54:49.325824 32737 net.cpp:134]     with loss weight 1
I0426 20:54:49.325839 32737 net.cpp:139] Memory required for data: 16010808
I0426 20:54:49.325844 32737 net.cpp:200] loss needs backward computation.
I0426 20:54:49.325847 32737 net.cpp:202] accuracy does not need backward computation.
I0426 20:54:49.325851 32737 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:54:49.325855 32737 net.cpp:200] relu3 needs backward computation.
I0426 20:54:49.325857 32737 net.cpp:200] ip3 needs backward computation.
I0426 20:54:49.325861 32737 net.cpp:200] relu2 needs backward computation.
I0426 20:54:49.325865 32737 net.cpp:200] ip2 needs backward computation.
I0426 20:54:49.325867 32737 net.cpp:200] relu1 needs backward computation.
I0426 20:54:49.325870 32737 net.cpp:200] ip1 needs backward computation.
I0426 20:54:49.325873 32737 net.cpp:200] pool1 needs backward computation.
I0426 20:54:49.325876 32737 net.cpp:200] conv1 needs backward computation.
I0426 20:54:49.325880 32737 net.cpp:200] pool0 needs backward computation.
I0426 20:54:49.325883 32737 net.cpp:200] conv0 needs backward computation.
I0426 20:54:49.325887 32737 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:54:49.325891 32737 net.cpp:202] mnist does not need backward computation.
I0426 20:54:49.325893 32737 net.cpp:244] This network produces output accuracy
I0426 20:54:49.325897 32737 net.cpp:244] This network produces output loss
I0426 20:54:49.325915 32737 net.cpp:257] Network initialization done.
I0426 20:54:49.325955 32737 solver.cpp:56] Solver scaffolding done.
I0426 20:54:49.326330 32737 caffe.cpp:248] Starting Optimization
I0426 20:54:49.326337 32737 solver.cpp:273] Solving LeNet
I0426 20:54:49.326340 32737 solver.cpp:274] Learning Rate Policy: inv
I0426 20:54:49.327217 32737 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:54:49.335310 32737 blocking_queue.cpp:49] Waiting for data
I0426 20:54:49.404913 32744 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:49.405953 32737 solver.cpp:398]     Test net output #0: accuracy = 0.121
I0426 20:54:49.405985 32737 solver.cpp:398]     Test net output #1: loss = 2.29594 (* 1 = 2.29594 loss)
I0426 20:54:49.411139 32737 solver.cpp:219] Iteration 0 (-5.59944e-31 iter/s, 0.0847432s/100 iters), loss = 2.30103
I0426 20:54:49.411162 32737 solver.cpp:238]     Train net output #0: loss = 2.30103 (* 1 = 2.30103 loss)
I0426 20:54:49.411172 32737 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:54:49.562434 32737 solver.cpp:219] Iteration 100 (661.157 iter/s, 0.15125s/100 iters), loss = 0.343133
I0426 20:54:49.562474 32737 solver.cpp:238]     Train net output #0: loss = 0.343133 (* 1 = 0.343133 loss)
I0426 20:54:49.562481 32737 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:54:49.715246 32737 solver.cpp:219] Iteration 200 (654.628 iter/s, 0.152758s/100 iters), loss = 0.327007
I0426 20:54:49.715281 32737 solver.cpp:238]     Train net output #0: loss = 0.327007 (* 1 = 0.327007 loss)
I0426 20:54:49.715288 32737 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:54:49.869113 32737 solver.cpp:219] Iteration 300 (650.11 iter/s, 0.15382s/100 iters), loss = 0.211007
I0426 20:54:49.869143 32737 solver.cpp:238]     Train net output #0: loss = 0.211007 (* 1 = 0.211007 loss)
I0426 20:54:49.869151 32737 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:54:50.019351 32737 solver.cpp:219] Iteration 400 (665.796 iter/s, 0.150196s/100 iters), loss = 0.0824589
I0426 20:54:50.019392 32737 solver.cpp:238]     Train net output #0: loss = 0.082459 (* 1 = 0.082459 loss)
I0426 20:54:50.019397 32737 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:54:50.167776 32737 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:54:50.239012 32744 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:50.241523 32737 solver.cpp:398]     Test net output #0: accuracy = 0.972
I0426 20:54:50.241559 32737 solver.cpp:398]     Test net output #1: loss = 0.0869928 (* 1 = 0.0869928 loss)
I0426 20:54:50.242913 32737 solver.cpp:219] Iteration 500 (447.386 iter/s, 0.223521s/100 iters), loss = 0.0695077
I0426 20:54:50.242964 32737 solver.cpp:238]     Train net output #0: loss = 0.0695078 (* 1 = 0.0695078 loss)
I0426 20:54:50.242970 32737 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:54:50.392978 32737 solver.cpp:219] Iteration 600 (666.591 iter/s, 0.150017s/100 iters), loss = 0.0566278
I0426 20:54:50.393019 32737 solver.cpp:238]     Train net output #0: loss = 0.0566278 (* 1 = 0.0566278 loss)
I0426 20:54:50.393025 32737 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:54:50.543480 32737 solver.cpp:219] Iteration 700 (664.609 iter/s, 0.150465s/100 iters), loss = 0.157027
I0426 20:54:50.543521 32737 solver.cpp:238]     Train net output #0: loss = 0.157027 (* 1 = 0.157027 loss)
I0426 20:54:50.543527 32737 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:54:50.693532 32737 solver.cpp:219] Iteration 800 (666.605 iter/s, 0.150014s/100 iters), loss = 0.181079
I0426 20:54:50.693572 32737 solver.cpp:238]     Train net output #0: loss = 0.181079 (* 1 = 0.181079 loss)
I0426 20:54:50.693578 32737 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:54:50.844319 32737 solver.cpp:219] Iteration 900 (663.353 iter/s, 0.150749s/100 iters), loss = 0.118483
I0426 20:54:50.844362 32737 solver.cpp:238]     Train net output #0: loss = 0.118484 (* 1 = 0.118484 loss)
I0426 20:54:50.844368 32737 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:54:50.894721 32743 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:50.993544 32737 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:54:50.998479 32737 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:54:51.000733 32737 solver.cpp:311] Iteration 1000, loss = 0.119969
I0426 20:54:51.000748 32737 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:54:51.076649 32744 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:51.077479 32737 solver.cpp:398]     Test net output #0: accuracy = 0.9809
I0426 20:54:51.077517 32737 solver.cpp:398]     Test net output #1: loss = 0.0563538 (* 1 = 0.0563538 loss)
I0426 20:54:51.077523 32737 solver.cpp:316] Optimization Done.
I0426 20:54:51.077527 32737 caffe.cpp:259] Optimization Done.
