I0426 20:51:33.532351 32007 caffe.cpp:218] Using GPUs 0
I0426 20:51:33.576035 32007 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:34.190698 32007 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test90.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:34.190865 32007 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test90.prototxt
I0426 20:51:34.191452 32007 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:34.191478 32007 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:34.191622 32007 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:34.191730 32007 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:34.191854 32007 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:34.191882 32007 net.cpp:86] Creating Layer mnist
I0426 20:51:34.191893 32007 net.cpp:382] mnist -> data
I0426 20:51:34.191925 32007 net.cpp:382] mnist -> label
I0426 20:51:34.193336 32007 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:34.196593 32007 net.cpp:124] Setting up mnist
I0426 20:51:34.196615 32007 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:34.196624 32007 net.cpp:131] Top shape: 64 (64)
I0426 20:51:34.196630 32007 net.cpp:139] Memory required for data: 200960
I0426 20:51:34.196640 32007 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:34.196661 32007 net.cpp:86] Creating Layer conv0
I0426 20:51:34.196686 32007 net.cpp:408] conv0 <- data
I0426 20:51:34.196702 32007 net.cpp:382] conv0 -> conv0
I0426 20:51:34.497056 32007 net.cpp:124] Setting up conv0
I0426 20:51:34.497102 32007 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:34.497107 32007 net.cpp:139] Memory required for data: 1675520
I0426 20:51:34.497128 32007 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:34.497172 32007 net.cpp:86] Creating Layer pool0
I0426 20:51:34.497177 32007 net.cpp:408] pool0 <- conv0
I0426 20:51:34.497184 32007 net.cpp:382] pool0 -> pool0
I0426 20:51:34.497254 32007 net.cpp:124] Setting up pool0
I0426 20:51:34.497267 32007 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:34.497270 32007 net.cpp:139] Memory required for data: 2044160
I0426 20:51:34.497275 32007 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:34.497289 32007 net.cpp:86] Creating Layer conv1
I0426 20:51:34.497293 32007 net.cpp:408] conv1 <- pool0
I0426 20:51:34.497315 32007 net.cpp:382] conv1 -> conv1
I0426 20:51:34.500721 32007 net.cpp:124] Setting up conv1
I0426 20:51:34.500752 32007 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:34.500756 32007 net.cpp:139] Memory required for data: 2863360
I0426 20:51:34.500767 32007 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:34.500777 32007 net.cpp:86] Creating Layer pool1
I0426 20:51:34.500780 32007 net.cpp:408] pool1 <- conv1
I0426 20:51:34.500787 32007 net.cpp:382] pool1 -> pool1
I0426 20:51:34.500887 32007 net.cpp:124] Setting up pool1
I0426 20:51:34.500927 32007 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:34.500931 32007 net.cpp:139] Memory required for data: 3068160
I0426 20:51:34.500936 32007 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:34.500946 32007 net.cpp:86] Creating Layer ip1
I0426 20:51:34.500950 32007 net.cpp:408] ip1 <- pool1
I0426 20:51:34.500960 32007 net.cpp:382] ip1 -> ip1
I0426 20:51:34.502907 32007 net.cpp:124] Setting up ip1
I0426 20:51:34.502920 32007 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:34.502939 32007 net.cpp:139] Memory required for data: 3093760
I0426 20:51:34.502949 32007 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:34.502957 32007 net.cpp:86] Creating Layer relu1
I0426 20:51:34.502961 32007 net.cpp:408] relu1 <- ip1
I0426 20:51:34.502969 32007 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:34.503231 32007 net.cpp:124] Setting up relu1
I0426 20:51:34.503242 32007 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:34.503245 32007 net.cpp:139] Memory required for data: 3119360
I0426 20:51:34.503250 32007 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:34.503259 32007 net.cpp:86] Creating Layer ip2
I0426 20:51:34.503264 32007 net.cpp:408] ip2 <- ip1
I0426 20:51:34.503270 32007 net.cpp:382] ip2 -> ip2
I0426 20:51:34.503481 32007 net.cpp:124] Setting up ip2
I0426 20:51:34.503491 32007 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:34.503495 32007 net.cpp:139] Memory required for data: 3144960
I0426 20:51:34.503502 32007 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:34.503510 32007 net.cpp:86] Creating Layer relu2
I0426 20:51:34.503515 32007 net.cpp:408] relu2 <- ip2
I0426 20:51:34.503521 32007 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:34.504530 32007 net.cpp:124] Setting up relu2
I0426 20:51:34.504559 32007 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:34.504564 32007 net.cpp:139] Memory required for data: 3170560
I0426 20:51:34.504567 32007 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:34.504577 32007 net.cpp:86] Creating Layer ip3
I0426 20:51:34.504582 32007 net.cpp:408] ip3 <- ip2
I0426 20:51:34.504588 32007 net.cpp:382] ip3 -> ip3
I0426 20:51:34.504736 32007 net.cpp:124] Setting up ip3
I0426 20:51:34.504745 32007 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:34.504750 32007 net.cpp:139] Memory required for data: 3173120
I0426 20:51:34.504760 32007 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:34.504768 32007 net.cpp:86] Creating Layer relu3
I0426 20:51:34.504772 32007 net.cpp:408] relu3 <- ip3
I0426 20:51:34.504777 32007 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:34.505036 32007 net.cpp:124] Setting up relu3
I0426 20:51:34.505049 32007 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:34.505053 32007 net.cpp:139] Memory required for data: 3175680
I0426 20:51:34.505059 32007 layer_factory.hpp:77] Creating layer loss
I0426 20:51:34.505067 32007 net.cpp:86] Creating Layer loss
I0426 20:51:34.505072 32007 net.cpp:408] loss <- ip3
I0426 20:51:34.505077 32007 net.cpp:408] loss <- label
I0426 20:51:34.505086 32007 net.cpp:382] loss -> loss
I0426 20:51:34.505108 32007 layer_factory.hpp:77] Creating layer loss
I0426 20:51:34.505447 32007 net.cpp:124] Setting up loss
I0426 20:51:34.505458 32007 net.cpp:131] Top shape: (1)
I0426 20:51:34.505477 32007 net.cpp:134]     with loss weight 1
I0426 20:51:34.505494 32007 net.cpp:139] Memory required for data: 3175684
I0426 20:51:34.505498 32007 net.cpp:200] loss needs backward computation.
I0426 20:51:34.505504 32007 net.cpp:200] relu3 needs backward computation.
I0426 20:51:34.505508 32007 net.cpp:200] ip3 needs backward computation.
I0426 20:51:34.505512 32007 net.cpp:200] relu2 needs backward computation.
I0426 20:51:34.505517 32007 net.cpp:200] ip2 needs backward computation.
I0426 20:51:34.505520 32007 net.cpp:200] relu1 needs backward computation.
I0426 20:51:34.505524 32007 net.cpp:200] ip1 needs backward computation.
I0426 20:51:34.505528 32007 net.cpp:200] pool1 needs backward computation.
I0426 20:51:34.505532 32007 net.cpp:200] conv1 needs backward computation.
I0426 20:51:34.505537 32007 net.cpp:200] pool0 needs backward computation.
I0426 20:51:34.505540 32007 net.cpp:200] conv0 needs backward computation.
I0426 20:51:34.505545 32007 net.cpp:202] mnist does not need backward computation.
I0426 20:51:34.505549 32007 net.cpp:244] This network produces output loss
I0426 20:51:34.505563 32007 net.cpp:257] Network initialization done.
I0426 20:51:34.506029 32007 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test90.prototxt
I0426 20:51:34.506095 32007 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:34.506232 32007 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:34.506346 32007 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:34.506424 32007 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:34.506443 32007 net.cpp:86] Creating Layer mnist
I0426 20:51:34.506450 32007 net.cpp:382] mnist -> data
I0426 20:51:34.506459 32007 net.cpp:382] mnist -> label
I0426 20:51:34.506567 32007 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:34.507999 32007 net.cpp:124] Setting up mnist
I0426 20:51:34.508014 32007 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:34.508021 32007 net.cpp:131] Top shape: 100 (100)
I0426 20:51:34.508025 32007 net.cpp:139] Memory required for data: 314000
I0426 20:51:34.508030 32007 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:34.508041 32007 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:34.508046 32007 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:34.508054 32007 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:34.508062 32007 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:34.508172 32007 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:34.508183 32007 net.cpp:131] Top shape: 100 (100)
I0426 20:51:34.508188 32007 net.cpp:131] Top shape: 100 (100)
I0426 20:51:34.508193 32007 net.cpp:139] Memory required for data: 314800
I0426 20:51:34.508196 32007 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:34.508208 32007 net.cpp:86] Creating Layer conv0
I0426 20:51:34.508213 32007 net.cpp:408] conv0 <- data
I0426 20:51:34.508219 32007 net.cpp:382] conv0 -> conv0
I0426 20:51:34.510376 32007 net.cpp:124] Setting up conv0
I0426 20:51:34.510391 32007 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:34.510396 32007 net.cpp:139] Memory required for data: 2618800
I0426 20:51:34.510406 32007 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:34.510424 32007 net.cpp:86] Creating Layer pool0
I0426 20:51:34.510428 32007 net.cpp:408] pool0 <- conv0
I0426 20:51:34.510437 32007 net.cpp:382] pool0 -> pool0
I0426 20:51:34.510504 32007 net.cpp:124] Setting up pool0
I0426 20:51:34.510512 32007 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:34.510516 32007 net.cpp:139] Memory required for data: 3194800
I0426 20:51:34.510520 32007 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:34.510534 32007 net.cpp:86] Creating Layer conv1
I0426 20:51:34.510538 32007 net.cpp:408] conv1 <- pool0
I0426 20:51:34.510545 32007 net.cpp:382] conv1 -> conv1
I0426 20:51:34.512766 32007 net.cpp:124] Setting up conv1
I0426 20:51:34.512783 32007 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:34.512787 32007 net.cpp:139] Memory required for data: 4474800
I0426 20:51:34.512797 32007 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:34.512840 32007 net.cpp:86] Creating Layer pool1
I0426 20:51:34.512845 32007 net.cpp:408] pool1 <- conv1
I0426 20:51:34.512851 32007 net.cpp:382] pool1 -> pool1
I0426 20:51:34.512917 32007 net.cpp:124] Setting up pool1
I0426 20:51:34.512924 32007 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:34.512928 32007 net.cpp:139] Memory required for data: 4794800
I0426 20:51:34.512933 32007 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:34.512943 32007 net.cpp:86] Creating Layer ip1
I0426 20:51:34.512961 32007 net.cpp:408] ip1 <- pool1
I0426 20:51:34.512969 32007 net.cpp:382] ip1 -> ip1
I0426 20:51:34.513844 32007 net.cpp:124] Setting up ip1
I0426 20:51:34.513854 32007 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:34.513870 32007 net.cpp:139] Memory required for data: 4834800
I0426 20:51:34.513880 32007 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:34.513887 32007 net.cpp:86] Creating Layer relu1
I0426 20:51:34.513892 32007 net.cpp:408] relu1 <- ip1
I0426 20:51:34.513898 32007 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:34.514128 32007 net.cpp:124] Setting up relu1
I0426 20:51:34.514139 32007 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:34.514145 32007 net.cpp:139] Memory required for data: 4874800
I0426 20:51:34.514158 32007 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:34.514166 32007 net.cpp:86] Creating Layer ip2
I0426 20:51:34.514170 32007 net.cpp:408] ip2 <- ip1
I0426 20:51:34.514183 32007 net.cpp:382] ip2 -> ip2
I0426 20:51:34.514391 32007 net.cpp:124] Setting up ip2
I0426 20:51:34.514401 32007 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:34.514405 32007 net.cpp:139] Memory required for data: 4914800
I0426 20:51:34.514412 32007 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:34.514420 32007 net.cpp:86] Creating Layer relu2
I0426 20:51:34.514425 32007 net.cpp:408] relu2 <- ip2
I0426 20:51:34.514436 32007 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:34.514659 32007 net.cpp:124] Setting up relu2
I0426 20:51:34.514670 32007 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:34.514674 32007 net.cpp:139] Memory required for data: 4954800
I0426 20:51:34.514679 32007 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:34.514688 32007 net.cpp:86] Creating Layer ip3
I0426 20:51:34.514691 32007 net.cpp:408] ip3 <- ip2
I0426 20:51:34.514699 32007 net.cpp:382] ip3 -> ip3
I0426 20:51:34.514873 32007 net.cpp:124] Setting up ip3
I0426 20:51:34.514883 32007 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:34.514888 32007 net.cpp:139] Memory required for data: 4958800
I0426 20:51:34.514899 32007 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:34.514904 32007 net.cpp:86] Creating Layer relu3
I0426 20:51:34.514909 32007 net.cpp:408] relu3 <- ip3
I0426 20:51:34.514915 32007 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:34.515976 32007 net.cpp:124] Setting up relu3
I0426 20:51:34.515990 32007 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:34.515995 32007 net.cpp:139] Memory required for data: 4962800
I0426 20:51:34.516000 32007 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:34.516006 32007 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:34.516011 32007 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:34.516018 32007 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:34.516026 32007 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:34.516083 32007 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:34.516093 32007 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:34.516098 32007 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:34.516103 32007 net.cpp:139] Memory required for data: 4970800
I0426 20:51:34.516106 32007 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:34.516113 32007 net.cpp:86] Creating Layer accuracy
I0426 20:51:34.516118 32007 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:34.516124 32007 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:34.516129 32007 net.cpp:382] accuracy -> accuracy
I0426 20:51:34.516139 32007 net.cpp:124] Setting up accuracy
I0426 20:51:34.516144 32007 net.cpp:131] Top shape: (1)
I0426 20:51:34.516147 32007 net.cpp:139] Memory required for data: 4970804
I0426 20:51:34.516151 32007 layer_factory.hpp:77] Creating layer loss
I0426 20:51:34.516160 32007 net.cpp:86] Creating Layer loss
I0426 20:51:34.516163 32007 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:34.516170 32007 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:34.516175 32007 net.cpp:382] loss -> loss
I0426 20:51:34.516182 32007 layer_factory.hpp:77] Creating layer loss
I0426 20:51:34.516491 32007 net.cpp:124] Setting up loss
I0426 20:51:34.516504 32007 net.cpp:131] Top shape: (1)
I0426 20:51:34.516507 32007 net.cpp:134]     with loss weight 1
I0426 20:51:34.516525 32007 net.cpp:139] Memory required for data: 4970808
I0426 20:51:34.516530 32007 net.cpp:200] loss needs backward computation.
I0426 20:51:34.516535 32007 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:34.516540 32007 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:34.516543 32007 net.cpp:200] relu3 needs backward computation.
I0426 20:51:34.516547 32007 net.cpp:200] ip3 needs backward computation.
I0426 20:51:34.516551 32007 net.cpp:200] relu2 needs backward computation.
I0426 20:51:34.516556 32007 net.cpp:200] ip2 needs backward computation.
I0426 20:51:34.516559 32007 net.cpp:200] relu1 needs backward computation.
I0426 20:51:34.516563 32007 net.cpp:200] ip1 needs backward computation.
I0426 20:51:34.516567 32007 net.cpp:200] pool1 needs backward computation.
I0426 20:51:34.516571 32007 net.cpp:200] conv1 needs backward computation.
I0426 20:51:34.516577 32007 net.cpp:200] pool0 needs backward computation.
I0426 20:51:34.516580 32007 net.cpp:200] conv0 needs backward computation.
I0426 20:51:34.516587 32007 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:34.516592 32007 net.cpp:202] mnist does not need backward computation.
I0426 20:51:34.516595 32007 net.cpp:244] This network produces output accuracy
I0426 20:51:34.516600 32007 net.cpp:244] This network produces output loss
I0426 20:51:34.516614 32007 net.cpp:257] Network initialization done.
I0426 20:51:34.516666 32007 solver.cpp:56] Solver scaffolding done.
I0426 20:51:34.517164 32007 caffe.cpp:248] Starting Optimization
I0426 20:51:34.517174 32007 solver.cpp:273] Solving LeNet
I0426 20:51:34.517192 32007 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:34.518288 32007 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:34.523995 32007 blocking_queue.cpp:49] Waiting for data
I0426 20:51:34.591146 32014 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:34.591848 32007 solver.cpp:398]     Test net output #0: accuracy = 0.1305
I0426 20:51:34.591869 32007 solver.cpp:398]     Test net output #1: loss = 2.31225 (* 1 = 2.31225 loss)
I0426 20:51:34.595624 32007 solver.cpp:219] Iteration 0 (-1.0748e-30 iter/s, 0.0783933s/100 iters), loss = 2.30371
I0426 20:51:34.595651 32007 solver.cpp:238]     Train net output #0: loss = 2.30371 (* 1 = 2.30371 loss)
I0426 20:51:34.595685 32007 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:34.716970 32007 solver.cpp:219] Iteration 100 (824.375 iter/s, 0.121304s/100 iters), loss = 1.22487
I0426 20:51:34.717000 32007 solver.cpp:238]     Train net output #0: loss = 1.22487 (* 1 = 1.22487 loss)
I0426 20:51:34.717008 32007 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:34.837864 32007 solver.cpp:219] Iteration 200 (827.455 iter/s, 0.120852s/100 iters), loss = 1.16255
I0426 20:51:34.837891 32007 solver.cpp:238]     Train net output #0: loss = 1.16255 (* 1 = 1.16255 loss)
I0426 20:51:34.837899 32007 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:34.958876 32007 solver.cpp:219] Iteration 300 (826.629 iter/s, 0.120973s/100 iters), loss = 1.22477
I0426 20:51:34.958904 32007 solver.cpp:238]     Train net output #0: loss = 1.22477 (* 1 = 1.22477 loss)
I0426 20:51:34.958926 32007 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:35.080425 32007 solver.cpp:219] Iteration 400 (822.985 iter/s, 0.121509s/100 iters), loss = 0.805143
I0426 20:51:35.080452 32007 solver.cpp:238]     Train net output #0: loss = 0.805143 (* 1 = 0.805143 loss)
I0426 20:51:35.080476 32007 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:35.200109 32007 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:35.257818 32014 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:35.259753 32007 solver.cpp:398]     Test net output #0: accuracy = 0.6775
I0426 20:51:35.259775 32007 solver.cpp:398]     Test net output #1: loss = 0.811527 (* 1 = 0.811527 loss)
I0426 20:51:35.260957 32007 solver.cpp:219] Iteration 500 (554.05 iter/s, 0.180489s/100 iters), loss = 0.823447
I0426 20:51:35.260999 32007 solver.cpp:238]     Train net output #0: loss = 0.823447 (* 1 = 0.823447 loss)
I0426 20:51:35.261026 32007 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:35.382356 32007 solver.cpp:219] Iteration 600 (824.083 iter/s, 0.121347s/100 iters), loss = 0.920158
I0426 20:51:35.382385 32007 solver.cpp:238]     Train net output #0: loss = 0.920158 (* 1 = 0.920158 loss)
I0426 20:51:35.382413 32007 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:35.502877 32007 solver.cpp:219] Iteration 700 (830.008 iter/s, 0.120481s/100 iters), loss = 0.548513
I0426 20:51:35.502907 32007 solver.cpp:238]     Train net output #0: loss = 0.548513 (* 1 = 0.548513 loss)
I0426 20:51:35.502935 32007 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:35.624668 32007 solver.cpp:219] Iteration 800 (821.365 iter/s, 0.121749s/100 iters), loss = 0.980837
I0426 20:51:35.624697 32007 solver.cpp:238]     Train net output #0: loss = 0.980837 (* 1 = 0.980837 loss)
I0426 20:51:35.624722 32007 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:35.740983 32007 solver.cpp:219] Iteration 900 (860.029 iter/s, 0.116275s/100 iters), loss = 0.915997
I0426 20:51:35.741005 32007 solver.cpp:238]     Train net output #0: loss = 0.915997 (* 1 = 0.915997 loss)
I0426 20:51:35.741011 32007 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:35.778995 32013 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:35.853411 32007 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:35.855756 32007 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:35.857038 32007 solver.cpp:311] Iteration 1000, loss = 0.651089
I0426 20:51:35.857053 32007 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:35.906656 32014 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:35.908432 32007 solver.cpp:398]     Test net output #0: accuracy = 0.6832
I0426 20:51:35.908448 32007 solver.cpp:398]     Test net output #1: loss = 0.763849 (* 1 = 0.763849 loss)
I0426 20:51:35.908453 32007 solver.cpp:316] Optimization Done.
I0426 20:51:35.908471 32007 caffe.cpp:259] Optimization Done.
