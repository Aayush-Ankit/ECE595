I0426 20:49:59.049975 31661 caffe.cpp:218] Using GPUs 0
I0426 20:49:59.079488 31661 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:59.535529 31661 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test49.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:59.535692 31661 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test49.prototxt
I0426 20:49:59.535979 31661 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:59.535992 31661 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:59.536062 31661 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:59.536121 31661 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:59.536216 31661 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:59.536237 31661 net.cpp:86] Creating Layer mnist
I0426 20:49:59.536243 31661 net.cpp:382] mnist -> data
I0426 20:49:59.536262 31661 net.cpp:382] mnist -> label
I0426 20:49:59.537284 31661 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:59.539368 31661 net.cpp:124] Setting up mnist
I0426 20:49:59.539381 31661 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:59.539387 31661 net.cpp:131] Top shape: 64 (64)
I0426 20:49:59.539391 31661 net.cpp:139] Memory required for data: 200960
I0426 20:49:59.539396 31661 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:59.539423 31661 net.cpp:86] Creating Layer conv0
I0426 20:49:59.539427 31661 net.cpp:408] conv0 <- data
I0426 20:49:59.539438 31661 net.cpp:382] conv0 -> conv0
I0426 20:49:59.773463 31661 net.cpp:124] Setting up conv0
I0426 20:49:59.773504 31661 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:49:59.773509 31661 net.cpp:139] Memory required for data: 7573760
I0426 20:49:59.773522 31661 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:59.773535 31661 net.cpp:86] Creating Layer pool0
I0426 20:49:59.773556 31661 net.cpp:408] pool0 <- conv0
I0426 20:49:59.773562 31661 net.cpp:382] pool0 -> pool0
I0426 20:49:59.773607 31661 net.cpp:124] Setting up pool0
I0426 20:49:59.773612 31661 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:49:59.773614 31661 net.cpp:139] Memory required for data: 9416960
I0426 20:49:59.773617 31661 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:59.773623 31661 net.cpp:86] Creating Layer ip1
I0426 20:49:59.773627 31661 net.cpp:408] ip1 <- pool0
I0426 20:49:59.773632 31661 net.cpp:382] ip1 -> ip1
I0426 20:49:59.778365 31661 net.cpp:124] Setting up ip1
I0426 20:49:59.778378 31661 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:59.778395 31661 net.cpp:139] Memory required for data: 9442560
I0426 20:49:59.778403 31661 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:59.778410 31661 net.cpp:86] Creating Layer relu1
I0426 20:49:59.778414 31661 net.cpp:408] relu1 <- ip1
I0426 20:49:59.778419 31661 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:59.778604 31661 net.cpp:124] Setting up relu1
I0426 20:49:59.778611 31661 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:59.778614 31661 net.cpp:139] Memory required for data: 9468160
I0426 20:49:59.778617 31661 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:59.778625 31661 net.cpp:86] Creating Layer ip2
I0426 20:49:59.778626 31661 net.cpp:408] ip2 <- ip1
I0426 20:49:59.778631 31661 net.cpp:382] ip2 -> ip2
I0426 20:49:59.779583 31661 net.cpp:124] Setting up ip2
I0426 20:49:59.779594 31661 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:59.779613 31661 net.cpp:139] Memory required for data: 9493760
I0426 20:49:59.779620 31661 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:59.779625 31661 net.cpp:86] Creating Layer relu2
I0426 20:49:59.779630 31661 net.cpp:408] relu2 <- ip2
I0426 20:49:59.779634 31661 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:59.780445 31661 net.cpp:124] Setting up relu2
I0426 20:49:59.780457 31661 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:59.780474 31661 net.cpp:139] Memory required for data: 9519360
I0426 20:49:59.780478 31661 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:59.780484 31661 net.cpp:86] Creating Layer ip3
I0426 20:49:59.780488 31661 net.cpp:408] ip3 <- ip2
I0426 20:49:59.780493 31661 net.cpp:382] ip3 -> ip3
I0426 20:49:59.780606 31661 net.cpp:124] Setting up ip3
I0426 20:49:59.780612 31661 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:59.780616 31661 net.cpp:139] Memory required for data: 9521920
I0426 20:49:59.780620 31661 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:59.780627 31661 net.cpp:86] Creating Layer relu3
I0426 20:49:59.780629 31661 net.cpp:408] relu3 <- ip3
I0426 20:49:59.780633 31661 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:59.780783 31661 net.cpp:124] Setting up relu3
I0426 20:49:59.780791 31661 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:59.780794 31661 net.cpp:139] Memory required for data: 9524480
I0426 20:49:59.780797 31661 layer_factory.hpp:77] Creating layer loss
I0426 20:49:59.780802 31661 net.cpp:86] Creating Layer loss
I0426 20:49:59.780805 31661 net.cpp:408] loss <- ip3
I0426 20:49:59.780813 31661 net.cpp:408] loss <- label
I0426 20:49:59.780834 31661 net.cpp:382] loss -> loss
I0426 20:49:59.780866 31661 layer_factory.hpp:77] Creating layer loss
I0426 20:49:59.781100 31661 net.cpp:124] Setting up loss
I0426 20:49:59.781110 31661 net.cpp:131] Top shape: (1)
I0426 20:49:59.781112 31661 net.cpp:134]     with loss weight 1
I0426 20:49:59.781127 31661 net.cpp:139] Memory required for data: 9524484
I0426 20:49:59.781131 31661 net.cpp:200] loss needs backward computation.
I0426 20:49:59.781134 31661 net.cpp:200] relu3 needs backward computation.
I0426 20:49:59.781138 31661 net.cpp:200] ip3 needs backward computation.
I0426 20:49:59.781141 31661 net.cpp:200] relu2 needs backward computation.
I0426 20:49:59.781144 31661 net.cpp:200] ip2 needs backward computation.
I0426 20:49:59.781162 31661 net.cpp:200] relu1 needs backward computation.
I0426 20:49:59.781164 31661 net.cpp:200] ip1 needs backward computation.
I0426 20:49:59.781177 31661 net.cpp:200] pool0 needs backward computation.
I0426 20:49:59.781182 31661 net.cpp:200] conv0 needs backward computation.
I0426 20:49:59.781184 31661 net.cpp:202] mnist does not need backward computation.
I0426 20:49:59.781188 31661 net.cpp:244] This network produces output loss
I0426 20:49:59.781195 31661 net.cpp:257] Network initialization done.
I0426 20:49:59.781489 31661 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test49.prototxt
I0426 20:49:59.781514 31661 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:59.781594 31661 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:59.781654 31661 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:59.781698 31661 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:59.781710 31661 net.cpp:86] Creating Layer mnist
I0426 20:49:59.781714 31661 net.cpp:382] mnist -> data
I0426 20:49:59.781721 31661 net.cpp:382] mnist -> label
I0426 20:49:59.781800 31661 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:59.783901 31661 net.cpp:124] Setting up mnist
I0426 20:49:59.783913 31661 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:59.783918 31661 net.cpp:131] Top shape: 100 (100)
I0426 20:49:59.783921 31661 net.cpp:139] Memory required for data: 314000
I0426 20:49:59.783924 31661 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:59.783933 31661 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:59.783937 31661 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:59.783941 31661 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:59.783947 31661 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:59.783995 31661 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:59.784000 31661 net.cpp:131] Top shape: 100 (100)
I0426 20:49:59.784003 31661 net.cpp:131] Top shape: 100 (100)
I0426 20:49:59.784006 31661 net.cpp:139] Memory required for data: 314800
I0426 20:49:59.784018 31661 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:59.784026 31661 net.cpp:86] Creating Layer conv0
I0426 20:49:59.784029 31661 net.cpp:408] conv0 <- data
I0426 20:49:59.784034 31661 net.cpp:382] conv0 -> conv0
I0426 20:49:59.786000 31661 net.cpp:124] Setting up conv0
I0426 20:49:59.786015 31661 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:49:59.786018 31661 net.cpp:139] Memory required for data: 11834800
I0426 20:49:59.786028 31661 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:59.786034 31661 net.cpp:86] Creating Layer pool0
I0426 20:49:59.786053 31661 net.cpp:408] pool0 <- conv0
I0426 20:49:59.786058 31661 net.cpp:382] pool0 -> pool0
I0426 20:49:59.786134 31661 net.cpp:124] Setting up pool0
I0426 20:49:59.786139 31661 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:49:59.786142 31661 net.cpp:139] Memory required for data: 14714800
I0426 20:49:59.786145 31661 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:59.786151 31661 net.cpp:86] Creating Layer ip1
I0426 20:49:59.786154 31661 net.cpp:408] ip1 <- pool0
I0426 20:49:59.786159 31661 net.cpp:382] ip1 -> ip1
I0426 20:49:59.791271 31661 net.cpp:124] Setting up ip1
I0426 20:49:59.791285 31661 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:59.791288 31661 net.cpp:139] Memory required for data: 14754800
I0426 20:49:59.791296 31661 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:59.791316 31661 net.cpp:86] Creating Layer relu1
I0426 20:49:59.791321 31661 net.cpp:408] relu1 <- ip1
I0426 20:49:59.791340 31661 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:59.791524 31661 net.cpp:124] Setting up relu1
I0426 20:49:59.791533 31661 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:59.791538 31661 net.cpp:139] Memory required for data: 14794800
I0426 20:49:59.791540 31661 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:59.791546 31661 net.cpp:86] Creating Layer ip2
I0426 20:49:59.791550 31661 net.cpp:408] ip2 <- ip1
I0426 20:49:59.791555 31661 net.cpp:382] ip2 -> ip2
I0426 20:49:59.791712 31661 net.cpp:124] Setting up ip2
I0426 20:49:59.791720 31661 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:59.791723 31661 net.cpp:139] Memory required for data: 14834800
I0426 20:49:59.791731 31661 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:59.791736 31661 net.cpp:86] Creating Layer relu2
I0426 20:49:59.791739 31661 net.cpp:408] relu2 <- ip2
I0426 20:49:59.791744 31661 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:59.792603 31661 net.cpp:124] Setting up relu2
I0426 20:49:59.792614 31661 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:59.792632 31661 net.cpp:139] Memory required for data: 14874800
I0426 20:49:59.792636 31661 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:59.792644 31661 net.cpp:86] Creating Layer ip3
I0426 20:49:59.792649 31661 net.cpp:408] ip3 <- ip2
I0426 20:49:59.792654 31661 net.cpp:382] ip3 -> ip3
I0426 20:49:59.792788 31661 net.cpp:124] Setting up ip3
I0426 20:49:59.792796 31661 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:59.792799 31661 net.cpp:139] Memory required for data: 14878800
I0426 20:49:59.792805 31661 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:59.792830 31661 net.cpp:86] Creating Layer relu3
I0426 20:49:59.792834 31661 net.cpp:408] relu3 <- ip3
I0426 20:49:59.792839 31661 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:59.793027 31661 net.cpp:124] Setting up relu3
I0426 20:49:59.793036 31661 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:59.793040 31661 net.cpp:139] Memory required for data: 14882800
I0426 20:49:59.793043 31661 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:59.793048 31661 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:59.793051 31661 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:59.793056 31661 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:59.793062 31661 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:59.793098 31661 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:59.793107 31661 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:59.793121 31661 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:59.793125 31661 net.cpp:139] Memory required for data: 14890800
I0426 20:49:59.793128 31661 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:59.793134 31661 net.cpp:86] Creating Layer accuracy
I0426 20:49:59.793138 31661 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:59.793143 31661 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:59.793148 31661 net.cpp:382] accuracy -> accuracy
I0426 20:49:59.793169 31661 net.cpp:124] Setting up accuracy
I0426 20:49:59.793174 31661 net.cpp:131] Top shape: (1)
I0426 20:49:59.793176 31661 net.cpp:139] Memory required for data: 14890804
I0426 20:49:59.793179 31661 layer_factory.hpp:77] Creating layer loss
I0426 20:49:59.793184 31661 net.cpp:86] Creating Layer loss
I0426 20:49:59.793201 31661 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:59.793205 31661 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:59.793210 31661 net.cpp:382] loss -> loss
I0426 20:49:59.793229 31661 layer_factory.hpp:77] Creating layer loss
I0426 20:49:59.793460 31661 net.cpp:124] Setting up loss
I0426 20:49:59.793469 31661 net.cpp:131] Top shape: (1)
I0426 20:49:59.793473 31661 net.cpp:134]     with loss weight 1
I0426 20:49:59.793479 31661 net.cpp:139] Memory required for data: 14890808
I0426 20:49:59.793483 31661 net.cpp:200] loss needs backward computation.
I0426 20:49:59.793485 31661 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:59.793489 31661 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:59.793493 31661 net.cpp:200] relu3 needs backward computation.
I0426 20:49:59.793495 31661 net.cpp:200] ip3 needs backward computation.
I0426 20:49:59.793498 31661 net.cpp:200] relu2 needs backward computation.
I0426 20:49:59.793501 31661 net.cpp:200] ip2 needs backward computation.
I0426 20:49:59.793504 31661 net.cpp:200] relu1 needs backward computation.
I0426 20:49:59.793506 31661 net.cpp:200] ip1 needs backward computation.
I0426 20:49:59.793509 31661 net.cpp:200] pool0 needs backward computation.
I0426 20:49:59.793512 31661 net.cpp:200] conv0 needs backward computation.
I0426 20:49:59.793516 31661 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:59.793519 31661 net.cpp:202] mnist does not need backward computation.
I0426 20:49:59.793522 31661 net.cpp:244] This network produces output accuracy
I0426 20:49:59.793525 31661 net.cpp:244] This network produces output loss
I0426 20:49:59.793550 31661 net.cpp:257] Network initialization done.
I0426 20:49:59.793586 31661 solver.cpp:56] Solver scaffolding done.
I0426 20:49:59.793855 31661 caffe.cpp:248] Starting Optimization
I0426 20:49:59.793862 31661 solver.cpp:273] Solving LeNet
I0426 20:49:59.793864 31661 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:59.795961 31661 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:59.802846 31661 blocking_queue.cpp:49] Waiting for data
I0426 20:49:59.874065 31668 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:59.874850 31661 solver.cpp:398]     Test net output #0: accuracy = 0.1057
I0426 20:49:59.874867 31661 solver.cpp:398]     Test net output #1: loss = 2.31192 (* 1 = 2.31192 loss)
I0426 20:49:59.879250 31661 solver.cpp:219] Iteration 0 (0 iter/s, 0.0853596s/100 iters), loss = 2.32441
I0426 20:49:59.879288 31661 solver.cpp:238]     Train net output #0: loss = 2.32441 (* 1 = 2.32441 loss)
I0426 20:49:59.879315 31661 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:59.999043 31661 solver.cpp:219] Iteration 100 (835.122 iter/s, 0.119743s/100 iters), loss = 0.599999
I0426 20:49:59.999068 31661 solver.cpp:238]     Train net output #0: loss = 0.599999 (* 1 = 0.599999 loss)
I0426 20:49:59.999075 31661 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:00.115994 31661 solver.cpp:219] Iteration 200 (855.396 iter/s, 0.116905s/100 iters), loss = 0.586779
I0426 20:50:00.116056 31661 solver.cpp:238]     Train net output #0: loss = 0.586779 (* 1 = 0.586779 loss)
I0426 20:50:00.116071 31661 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:00.242476 31661 solver.cpp:219] Iteration 300 (791.072 iter/s, 0.126411s/100 iters), loss = 0.254156
I0426 20:50:00.242514 31661 solver.cpp:238]     Train net output #0: loss = 0.254156 (* 1 = 0.254156 loss)
I0426 20:50:00.242523 31661 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:00.362419 31661 solver.cpp:219] Iteration 400 (834.077 iter/s, 0.119893s/100 iters), loss = 0.125169
I0426 20:50:00.362453 31661 solver.cpp:238]     Train net output #0: loss = 0.125169 (* 1 = 0.125169 loss)
I0426 20:50:00.362462 31661 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:00.481366 31661 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:00.550976 31668 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:00.553336 31661 solver.cpp:398]     Test net output #0: accuracy = 0.9567
I0426 20:50:00.553361 31661 solver.cpp:398]     Test net output #1: loss = 0.13868 (* 1 = 0.13868 loss)
I0426 20:50:00.554422 31661 solver.cpp:219] Iteration 500 (520.956 iter/s, 0.191955s/100 iters), loss = 0.283277
I0426 20:50:00.554450 31661 solver.cpp:238]     Train net output #0: loss = 0.283277 (* 1 = 0.283277 loss)
I0426 20:50:00.554474 31661 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:00.674350 31661 solver.cpp:219] Iteration 600 (834.107 iter/s, 0.119889s/100 iters), loss = 0.0809417
I0426 20:50:00.674383 31661 solver.cpp:238]     Train net output #0: loss = 0.0809416 (* 1 = 0.0809416 loss)
I0426 20:50:00.674391 31661 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:00.795053 31661 solver.cpp:219] Iteration 700 (828.803 iter/s, 0.120656s/100 iters), loss = 0.201629
I0426 20:50:00.795089 31661 solver.cpp:238]     Train net output #0: loss = 0.201629 (* 1 = 0.201629 loss)
I0426 20:50:00.795097 31661 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:00.915921 31661 solver.cpp:219] Iteration 800 (827.671 iter/s, 0.120821s/100 iters), loss = 0.193426
I0426 20:50:00.915956 31661 solver.cpp:238]     Train net output #0: loss = 0.193426 (* 1 = 0.193426 loss)
I0426 20:50:00.915966 31661 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:01.041846 31661 solver.cpp:219] Iteration 900 (794.425 iter/s, 0.125877s/100 iters), loss = 0.211393
I0426 20:50:01.041880 31661 solver.cpp:238]     Train net output #0: loss = 0.211393 (* 1 = 0.211393 loss)
I0426 20:50:01.041890 31661 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:01.081667 31667 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:01.159113 31661 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:01.172063 31661 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:01.178212 31661 solver.cpp:311] Iteration 1000, loss = 0.0891509
I0426 20:50:01.178233 31661 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:01.246893 31668 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:01.249214 31661 solver.cpp:398]     Test net output #0: accuracy = 0.9707
I0426 20:50:01.249239 31661 solver.cpp:398]     Test net output #1: loss = 0.091277 (* 1 = 0.091277 loss)
I0426 20:50:01.249245 31661 solver.cpp:316] Optimization Done.
I0426 20:50:01.249249 31661 caffe.cpp:259] Optimization Done.
