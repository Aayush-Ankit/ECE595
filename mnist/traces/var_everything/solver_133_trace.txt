I0426 20:53:16.670078 32410 caffe.cpp:218] Using GPUs 0
I0426 20:53:16.708364 32410 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:17.233408 32410 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test133.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:17.233549 32410 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test133.prototxt
I0426 20:53:17.233949 32410 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:17.233966 32410 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:17.234063 32410 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:17.234138 32410 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:17.234237 32410 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:17.234261 32410 net.cpp:86] Creating Layer mnist
I0426 20:53:17.234268 32410 net.cpp:382] mnist -> data
I0426 20:53:17.234290 32410 net.cpp:382] mnist -> label
I0426 20:53:17.235378 32410 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:17.237911 32410 net.cpp:124] Setting up mnist
I0426 20:53:17.237928 32410 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:17.237936 32410 net.cpp:131] Top shape: 64 (64)
I0426 20:53:17.237939 32410 net.cpp:139] Memory required for data: 200960
I0426 20:53:17.237946 32410 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:17.237962 32410 net.cpp:86] Creating Layer conv0
I0426 20:53:17.237983 32410 net.cpp:408] conv0 <- data
I0426 20:53:17.237995 32410 net.cpp:382] conv0 -> conv0
I0426 20:53:17.524060 32410 net.cpp:124] Setting up conv0
I0426 20:53:17.524086 32410 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:53:17.524091 32410 net.cpp:139] Memory required for data: 3887360
I0426 20:53:17.524106 32410 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:17.524118 32410 net.cpp:86] Creating Layer pool0
I0426 20:53:17.524123 32410 net.cpp:408] pool0 <- conv0
I0426 20:53:17.524128 32410 net.cpp:382] pool0 -> pool0
I0426 20:53:17.524176 32410 net.cpp:124] Setting up pool0
I0426 20:53:17.524183 32410 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:53:17.524185 32410 net.cpp:139] Memory required for data: 4808960
I0426 20:53:17.524188 32410 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:17.524199 32410 net.cpp:86] Creating Layer conv1
I0426 20:53:17.524202 32410 net.cpp:408] conv1 <- pool0
I0426 20:53:17.524206 32410 net.cpp:382] conv1 -> conv1
I0426 20:53:17.526286 32410 net.cpp:124] Setting up conv1
I0426 20:53:17.526300 32410 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:53:17.526304 32410 net.cpp:139] Memory required for data: 5628160
I0426 20:53:17.526312 32410 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:17.526320 32410 net.cpp:86] Creating Layer pool1
I0426 20:53:17.526324 32410 net.cpp:408] pool1 <- conv1
I0426 20:53:17.526329 32410 net.cpp:382] pool1 -> pool1
I0426 20:53:17.526365 32410 net.cpp:124] Setting up pool1
I0426 20:53:17.526370 32410 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:53:17.526372 32410 net.cpp:139] Memory required for data: 5832960
I0426 20:53:17.526376 32410 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:17.526381 32410 net.cpp:86] Creating Layer ip1
I0426 20:53:17.526384 32410 net.cpp:408] ip1 <- pool1
I0426 20:53:17.526389 32410 net.cpp:382] ip1 -> ip1
I0426 20:53:17.527740 32410 net.cpp:124] Setting up ip1
I0426 20:53:17.527752 32410 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:17.527755 32410 net.cpp:139] Memory required for data: 5858560
I0426 20:53:17.527763 32410 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:17.527770 32410 net.cpp:86] Creating Layer relu1
I0426 20:53:17.527773 32410 net.cpp:408] relu1 <- ip1
I0426 20:53:17.527777 32410 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:17.527943 32410 net.cpp:124] Setting up relu1
I0426 20:53:17.527952 32410 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:17.527956 32410 net.cpp:139] Memory required for data: 5884160
I0426 20:53:17.527958 32410 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:17.527966 32410 net.cpp:86] Creating Layer ip2
I0426 20:53:17.527968 32410 net.cpp:408] ip2 <- ip1
I0426 20:53:17.527973 32410 net.cpp:382] ip2 -> ip2
I0426 20:53:17.528937 32410 net.cpp:124] Setting up ip2
I0426 20:53:17.528949 32410 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:17.528952 32410 net.cpp:139] Memory required for data: 5909760
I0426 20:53:17.528959 32410 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:17.528964 32410 net.cpp:86] Creating Layer relu2
I0426 20:53:17.528969 32410 net.cpp:408] relu2 <- ip2
I0426 20:53:17.528973 32410 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:17.529788 32410 net.cpp:124] Setting up relu2
I0426 20:53:17.529800 32410 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:17.529803 32410 net.cpp:139] Memory required for data: 5935360
I0426 20:53:17.529806 32410 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:17.529814 32410 net.cpp:86] Creating Layer ip3
I0426 20:53:17.529817 32410 net.cpp:408] ip3 <- ip2
I0426 20:53:17.529822 32410 net.cpp:382] ip3 -> ip3
I0426 20:53:17.529923 32410 net.cpp:124] Setting up ip3
I0426 20:53:17.529932 32410 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:17.529934 32410 net.cpp:139] Memory required for data: 5937920
I0426 20:53:17.529942 32410 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:17.529947 32410 net.cpp:86] Creating Layer relu3
I0426 20:53:17.529950 32410 net.cpp:408] relu3 <- ip3
I0426 20:53:17.529954 32410 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:17.530115 32410 net.cpp:124] Setting up relu3
I0426 20:53:17.530123 32410 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:17.530128 32410 net.cpp:139] Memory required for data: 5940480
I0426 20:53:17.530130 32410 layer_factory.hpp:77] Creating layer loss
I0426 20:53:17.530135 32410 net.cpp:86] Creating Layer loss
I0426 20:53:17.530139 32410 net.cpp:408] loss <- ip3
I0426 20:53:17.530143 32410 net.cpp:408] loss <- label
I0426 20:53:17.530148 32410 net.cpp:382] loss -> loss
I0426 20:53:17.530165 32410 layer_factory.hpp:77] Creating layer loss
I0426 20:53:17.530385 32410 net.cpp:124] Setting up loss
I0426 20:53:17.530395 32410 net.cpp:131] Top shape: (1)
I0426 20:53:17.530397 32410 net.cpp:134]     with loss weight 1
I0426 20:53:17.530411 32410 net.cpp:139] Memory required for data: 5940484
I0426 20:53:17.530414 32410 net.cpp:200] loss needs backward computation.
I0426 20:53:17.530418 32410 net.cpp:200] relu3 needs backward computation.
I0426 20:53:17.530421 32410 net.cpp:200] ip3 needs backward computation.
I0426 20:53:17.530424 32410 net.cpp:200] relu2 needs backward computation.
I0426 20:53:17.530427 32410 net.cpp:200] ip2 needs backward computation.
I0426 20:53:17.530431 32410 net.cpp:200] relu1 needs backward computation.
I0426 20:53:17.530432 32410 net.cpp:200] ip1 needs backward computation.
I0426 20:53:17.530436 32410 net.cpp:200] pool1 needs backward computation.
I0426 20:53:17.530439 32410 net.cpp:200] conv1 needs backward computation.
I0426 20:53:17.530442 32410 net.cpp:200] pool0 needs backward computation.
I0426 20:53:17.530445 32410 net.cpp:200] conv0 needs backward computation.
I0426 20:53:17.530449 32410 net.cpp:202] mnist does not need backward computation.
I0426 20:53:17.530452 32410 net.cpp:244] This network produces output loss
I0426 20:53:17.530460 32410 net.cpp:257] Network initialization done.
I0426 20:53:17.530812 32410 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test133.prototxt
I0426 20:53:17.530854 32410 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:17.530957 32410 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:17.531034 32410 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:17.531077 32410 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:17.531090 32410 net.cpp:86] Creating Layer mnist
I0426 20:53:17.531095 32410 net.cpp:382] mnist -> data
I0426 20:53:17.531102 32410 net.cpp:382] mnist -> label
I0426 20:53:17.531183 32410 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:17.532295 32410 net.cpp:124] Setting up mnist
I0426 20:53:17.532308 32410 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:17.532313 32410 net.cpp:131] Top shape: 100 (100)
I0426 20:53:17.532316 32410 net.cpp:139] Memory required for data: 314000
I0426 20:53:17.532320 32410 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:17.532351 32410 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:17.532356 32410 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:17.532359 32410 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:17.532366 32410 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:17.532405 32410 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:17.532411 32410 net.cpp:131] Top shape: 100 (100)
I0426 20:53:17.532414 32410 net.cpp:131] Top shape: 100 (100)
I0426 20:53:17.532418 32410 net.cpp:139] Memory required for data: 314800
I0426 20:53:17.532420 32410 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:17.532428 32410 net.cpp:86] Creating Layer conv0
I0426 20:53:17.532431 32410 net.cpp:408] conv0 <- data
I0426 20:53:17.532436 32410 net.cpp:382] conv0 -> conv0
I0426 20:53:17.534144 32410 net.cpp:124] Setting up conv0
I0426 20:53:17.534157 32410 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:53:17.534162 32410 net.cpp:139] Memory required for data: 6074800
I0426 20:53:17.534170 32410 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:17.534176 32410 net.cpp:86] Creating Layer pool0
I0426 20:53:17.534179 32410 net.cpp:408] pool0 <- conv0
I0426 20:53:17.534184 32410 net.cpp:382] pool0 -> pool0
I0426 20:53:17.534217 32410 net.cpp:124] Setting up pool0
I0426 20:53:17.534224 32410 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:53:17.534237 32410 net.cpp:139] Memory required for data: 7514800
I0426 20:53:17.534240 32410 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:17.534248 32410 net.cpp:86] Creating Layer conv1
I0426 20:53:17.534252 32410 net.cpp:408] conv1 <- pool0
I0426 20:53:17.534257 32410 net.cpp:382] conv1 -> conv1
I0426 20:53:17.535964 32410 net.cpp:124] Setting up conv1
I0426 20:53:17.535979 32410 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:53:17.535982 32410 net.cpp:139] Memory required for data: 8794800
I0426 20:53:17.535990 32410 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:17.536007 32410 net.cpp:86] Creating Layer pool1
I0426 20:53:17.536011 32410 net.cpp:408] pool1 <- conv1
I0426 20:53:17.536036 32410 net.cpp:382] pool1 -> pool1
I0426 20:53:17.536082 32410 net.cpp:124] Setting up pool1
I0426 20:53:17.536089 32410 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:53:17.536092 32410 net.cpp:139] Memory required for data: 9114800
I0426 20:53:17.536094 32410 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:17.536106 32410 net.cpp:86] Creating Layer ip1
I0426 20:53:17.536109 32410 net.cpp:408] ip1 <- pool1
I0426 20:53:17.536115 32410 net.cpp:382] ip1 -> ip1
I0426 20:53:17.536718 32410 net.cpp:124] Setting up ip1
I0426 20:53:17.536726 32410 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:17.536739 32410 net.cpp:139] Memory required for data: 9154800
I0426 20:53:17.536752 32410 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:17.536759 32410 net.cpp:86] Creating Layer relu1
I0426 20:53:17.536762 32410 net.cpp:408] relu1 <- ip1
I0426 20:53:17.536768 32410 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:17.537024 32410 net.cpp:124] Setting up relu1
I0426 20:53:17.537034 32410 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:17.537036 32410 net.cpp:139] Memory required for data: 9194800
I0426 20:53:17.537039 32410 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:17.537050 32410 net.cpp:86] Creating Layer ip2
I0426 20:53:17.537052 32410 net.cpp:408] ip2 <- ip1
I0426 20:53:17.537057 32410 net.cpp:382] ip2 -> ip2
I0426 20:53:17.537266 32410 net.cpp:124] Setting up ip2
I0426 20:53:17.537274 32410 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:17.537277 32410 net.cpp:139] Memory required for data: 9234800
I0426 20:53:17.537282 32410 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:17.537286 32410 net.cpp:86] Creating Layer relu2
I0426 20:53:17.537289 32410 net.cpp:408] relu2 <- ip2
I0426 20:53:17.537295 32410 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:17.537472 32410 net.cpp:124] Setting up relu2
I0426 20:53:17.537482 32410 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:17.537485 32410 net.cpp:139] Memory required for data: 9274800
I0426 20:53:17.537488 32410 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:17.537493 32410 net.cpp:86] Creating Layer ip3
I0426 20:53:17.537497 32410 net.cpp:408] ip3 <- ip2
I0426 20:53:17.537503 32410 net.cpp:382] ip3 -> ip3
I0426 20:53:17.537607 32410 net.cpp:124] Setting up ip3
I0426 20:53:17.537614 32410 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:17.537618 32410 net.cpp:139] Memory required for data: 9278800
I0426 20:53:17.537631 32410 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:17.537637 32410 net.cpp:86] Creating Layer relu3
I0426 20:53:17.537645 32410 net.cpp:408] relu3 <- ip3
I0426 20:53:17.537649 32410 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:17.538496 32410 net.cpp:124] Setting up relu3
I0426 20:53:17.538507 32410 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:17.538511 32410 net.cpp:139] Memory required for data: 9282800
I0426 20:53:17.538514 32410 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:53:17.538521 32410 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:53:17.538524 32410 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:53:17.538529 32410 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:53:17.538549 32410 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:53:17.538627 32410 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:53:17.538632 32410 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:17.538636 32410 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:17.538640 32410 net.cpp:139] Memory required for data: 9290800
I0426 20:53:17.538641 32410 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:17.538646 32410 net.cpp:86] Creating Layer accuracy
I0426 20:53:17.538650 32410 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:53:17.538655 32410 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:17.538660 32410 net.cpp:382] accuracy -> accuracy
I0426 20:53:17.538666 32410 net.cpp:124] Setting up accuracy
I0426 20:53:17.538671 32410 net.cpp:131] Top shape: (1)
I0426 20:53:17.538673 32410 net.cpp:139] Memory required for data: 9290804
I0426 20:53:17.538676 32410 layer_factory.hpp:77] Creating layer loss
I0426 20:53:17.538686 32410 net.cpp:86] Creating Layer loss
I0426 20:53:17.538689 32410 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:53:17.538692 32410 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:17.538697 32410 net.cpp:382] loss -> loss
I0426 20:53:17.538703 32410 layer_factory.hpp:77] Creating layer loss
I0426 20:53:17.538947 32410 net.cpp:124] Setting up loss
I0426 20:53:17.538956 32410 net.cpp:131] Top shape: (1)
I0426 20:53:17.538959 32410 net.cpp:134]     with loss weight 1
I0426 20:53:17.538975 32410 net.cpp:139] Memory required for data: 9290808
I0426 20:53:17.538977 32410 net.cpp:200] loss needs backward computation.
I0426 20:53:17.538982 32410 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:17.538992 32410 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:53:17.538995 32410 net.cpp:200] relu3 needs backward computation.
I0426 20:53:17.538997 32410 net.cpp:200] ip3 needs backward computation.
I0426 20:53:17.539000 32410 net.cpp:200] relu2 needs backward computation.
I0426 20:53:17.539003 32410 net.cpp:200] ip2 needs backward computation.
I0426 20:53:17.539011 32410 net.cpp:200] relu1 needs backward computation.
I0426 20:53:17.539014 32410 net.cpp:200] ip1 needs backward computation.
I0426 20:53:17.539017 32410 net.cpp:200] pool1 needs backward computation.
I0426 20:53:17.539026 32410 net.cpp:200] conv1 needs backward computation.
I0426 20:53:17.539028 32410 net.cpp:200] pool0 needs backward computation.
I0426 20:53:17.539031 32410 net.cpp:200] conv0 needs backward computation.
I0426 20:53:17.539036 32410 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:17.539043 32410 net.cpp:202] mnist does not need backward computation.
I0426 20:53:17.539047 32410 net.cpp:244] This network produces output accuracy
I0426 20:53:17.539049 32410 net.cpp:244] This network produces output loss
I0426 20:53:17.539060 32410 net.cpp:257] Network initialization done.
I0426 20:53:17.539099 32410 solver.cpp:56] Solver scaffolding done.
I0426 20:53:17.539409 32410 caffe.cpp:248] Starting Optimization
I0426 20:53:17.539415 32410 solver.cpp:273] Solving LeNet
I0426 20:53:17.539418 32410 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:17.540310 32410 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:17.547201 32410 blocking_queue.cpp:49] Waiting for data
I0426 20:53:17.617137 32417 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:17.617863 32410 solver.cpp:398]     Test net output #0: accuracy = 0.1211
I0426 20:53:17.617882 32410 solver.cpp:398]     Test net output #1: loss = 2.30429 (* 1 = 2.30429 loss)
I0426 20:53:17.622393 32410 solver.cpp:219] Iteration 0 (0 iter/s, 0.0829501s/100 iters), loss = 2.29556
I0426 20:53:17.622416 32410 solver.cpp:238]     Train net output #0: loss = 2.29556 (* 1 = 2.29556 loss)
I0426 20:53:17.622443 32410 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:17.752075 32410 solver.cpp:219] Iteration 100 (771.353 iter/s, 0.129642s/100 iters), loss = 0.468687
I0426 20:53:17.752099 32410 solver.cpp:238]     Train net output #0: loss = 0.468687 (* 1 = 0.468687 loss)
I0426 20:53:17.752105 32410 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:17.880412 32410 solver.cpp:219] Iteration 200 (779.417 iter/s, 0.128301s/100 iters), loss = 0.162277
I0426 20:53:17.880434 32410 solver.cpp:238]     Train net output #0: loss = 0.162277 (* 1 = 0.162277 loss)
I0426 20:53:17.880440 32410 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:18.008664 32410 solver.cpp:219] Iteration 300 (779.921 iter/s, 0.128218s/100 iters), loss = 0.213845
I0426 20:53:18.008694 32410 solver.cpp:238]     Train net output #0: loss = 0.213845 (* 1 = 0.213845 loss)
I0426 20:53:18.008716 32410 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:18.143533 32410 solver.cpp:219] Iteration 400 (741.708 iter/s, 0.134824s/100 iters), loss = 0.0657037
I0426 20:53:18.143568 32410 solver.cpp:238]     Train net output #0: loss = 0.0657036 (* 1 = 0.0657036 loss)
I0426 20:53:18.143575 32410 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:18.273511 32410 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:18.333889 32417 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:18.335393 32410 solver.cpp:398]     Test net output #0: accuracy = 0.9678
I0426 20:53:18.335413 32410 solver.cpp:398]     Test net output #1: loss = 0.106063 (* 1 = 0.106063 loss)
I0426 20:53:18.336668 32410 solver.cpp:219] Iteration 500 (517.895 iter/s, 0.19309s/100 iters), loss = 0.0811448
I0426 20:53:18.336704 32410 solver.cpp:238]     Train net output #0: loss = 0.0811447 (* 1 = 0.0811447 loss)
I0426 20:53:18.336726 32410 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:18.474282 32410 solver.cpp:219] Iteration 600 (726.933 iter/s, 0.137564s/100 iters), loss = 0.0921606
I0426 20:53:18.474316 32410 solver.cpp:238]     Train net output #0: loss = 0.0921605 (* 1 = 0.0921605 loss)
I0426 20:53:18.474326 32410 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:18.614269 32410 solver.cpp:219] Iteration 700 (714.593 iter/s, 0.13994s/100 iters), loss = 0.0769847
I0426 20:53:18.614310 32410 solver.cpp:238]     Train net output #0: loss = 0.0769846 (* 1 = 0.0769846 loss)
I0426 20:53:18.614322 32410 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:18.752964 32410 solver.cpp:219] Iteration 800 (721.307 iter/s, 0.138637s/100 iters), loss = 0.231335
I0426 20:53:18.753013 32410 solver.cpp:238]     Train net output #0: loss = 0.231335 (* 1 = 0.231335 loss)
I0426 20:53:18.753028 32410 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:18.899674 32410 solver.cpp:219] Iteration 900 (681.905 iter/s, 0.146648s/100 iters), loss = 0.17709
I0426 20:53:18.899716 32410 solver.cpp:238]     Train net output #0: loss = 0.17709 (* 1 = 0.17709 loss)
I0426 20:53:18.899729 32410 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:18.946833 32416 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:19.038518 32410 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:19.041949 32410 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:19.043733 32410 solver.cpp:311] Iteration 1000, loss = 0.0948914
I0426 20:53:19.043757 32410 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:19.119938 32417 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:19.120756 32410 solver.cpp:398]     Test net output #0: accuracy = 0.9778
I0426 20:53:19.120781 32410 solver.cpp:398]     Test net output #1: loss = 0.0641153 (* 1 = 0.0641153 loss)
I0426 20:53:19.120787 32410 solver.cpp:316] Optimization Done.
I0426 20:53:19.120790 32410 caffe.cpp:259] Optimization Done.
