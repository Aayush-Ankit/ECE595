I0426 20:50:28.118683 31763 caffe.cpp:218] Using GPUs 0
I0426 20:50:28.156913 31763 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:28.674937 31763 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test61.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:28.675079 31763 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test61.prototxt
I0426 20:50:28.675462 31763 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:28.675479 31763 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:28.675570 31763 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:50:28.675647 31763 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:28.675743 31763 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:28.675768 31763 net.cpp:86] Creating Layer mnist
I0426 20:50:28.675776 31763 net.cpp:382] mnist -> data
I0426 20:50:28.675797 31763 net.cpp:382] mnist -> label
I0426 20:50:28.676884 31763 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:28.679407 31763 net.cpp:124] Setting up mnist
I0426 20:50:28.679425 31763 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:28.679431 31763 net.cpp:131] Top shape: 64 (64)
I0426 20:50:28.679435 31763 net.cpp:139] Memory required for data: 200960
I0426 20:50:28.679441 31763 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:28.679460 31763 net.cpp:86] Creating Layer conv0
I0426 20:50:28.679466 31763 net.cpp:408] conv0 <- data
I0426 20:50:28.679476 31763 net.cpp:382] conv0 -> conv0
I0426 20:50:28.963564 31763 net.cpp:124] Setting up conv0
I0426 20:50:28.963591 31763 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:28.963595 31763 net.cpp:139] Memory required for data: 1675520
I0426 20:50:28.963629 31763 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:28.963642 31763 net.cpp:86] Creating Layer pool0
I0426 20:50:28.963646 31763 net.cpp:408] pool0 <- conv0
I0426 20:50:28.963652 31763 net.cpp:382] pool0 -> pool0
I0426 20:50:28.963699 31763 net.cpp:124] Setting up pool0
I0426 20:50:28.963706 31763 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:28.963709 31763 net.cpp:139] Memory required for data: 2044160
I0426 20:50:28.963712 31763 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:28.963723 31763 net.cpp:86] Creating Layer conv1
I0426 20:50:28.963731 31763 net.cpp:408] conv1 <- pool0
I0426 20:50:28.963735 31763 net.cpp:382] conv1 -> conv1
I0426 20:50:28.966475 31763 net.cpp:124] Setting up conv1
I0426 20:50:28.966490 31763 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:28.966495 31763 net.cpp:139] Memory required for data: 2208000
I0426 20:50:28.966503 31763 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:28.966511 31763 net.cpp:86] Creating Layer pool1
I0426 20:50:28.966514 31763 net.cpp:408] pool1 <- conv1
I0426 20:50:28.966519 31763 net.cpp:382] pool1 -> pool1
I0426 20:50:28.966555 31763 net.cpp:124] Setting up pool1
I0426 20:50:28.966562 31763 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:28.966565 31763 net.cpp:139] Memory required for data: 2248960
I0426 20:50:28.966568 31763 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:28.966575 31763 net.cpp:86] Creating Layer ip1
I0426 20:50:28.966578 31763 net.cpp:408] ip1 <- pool1
I0426 20:50:28.966583 31763 net.cpp:382] ip1 -> ip1
I0426 20:50:28.966948 31763 net.cpp:124] Setting up ip1
I0426 20:50:28.966954 31763 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:28.966958 31763 net.cpp:139] Memory required for data: 2325760
I0426 20:50:28.966965 31763 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:28.966970 31763 net.cpp:86] Creating Layer relu1
I0426 20:50:28.966974 31763 net.cpp:408] relu1 <- ip1
I0426 20:50:28.966977 31763 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:28.967136 31763 net.cpp:124] Setting up relu1
I0426 20:50:28.967144 31763 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:28.967147 31763 net.cpp:139] Memory required for data: 2402560
I0426 20:50:28.967150 31763 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:28.967156 31763 net.cpp:86] Creating Layer ip2
I0426 20:50:28.967159 31763 net.cpp:408] ip2 <- ip1
I0426 20:50:28.967164 31763 net.cpp:382] ip2 -> ip2
I0426 20:50:28.967275 31763 net.cpp:124] Setting up ip2
I0426 20:50:28.967281 31763 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:28.967284 31763 net.cpp:139] Memory required for data: 2405120
I0426 20:50:28.967290 31763 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:28.967295 31763 net.cpp:86] Creating Layer relu2
I0426 20:50:28.967298 31763 net.cpp:408] relu2 <- ip2
I0426 20:50:28.967303 31763 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:28.968080 31763 net.cpp:124] Setting up relu2
I0426 20:50:28.968092 31763 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:28.968096 31763 net.cpp:139] Memory required for data: 2407680
I0426 20:50:28.968098 31763 layer_factory.hpp:77] Creating layer loss
I0426 20:50:28.968104 31763 net.cpp:86] Creating Layer loss
I0426 20:50:28.968107 31763 net.cpp:408] loss <- ip2
I0426 20:50:28.968112 31763 net.cpp:408] loss <- label
I0426 20:50:28.968117 31763 net.cpp:382] loss -> loss
I0426 20:50:28.968137 31763 layer_factory.hpp:77] Creating layer loss
I0426 20:50:28.968358 31763 net.cpp:124] Setting up loss
I0426 20:50:28.968367 31763 net.cpp:131] Top shape: (1)
I0426 20:50:28.968371 31763 net.cpp:134]     with loss weight 1
I0426 20:50:28.968386 31763 net.cpp:139] Memory required for data: 2407684
I0426 20:50:28.968390 31763 net.cpp:200] loss needs backward computation.
I0426 20:50:28.968394 31763 net.cpp:200] relu2 needs backward computation.
I0426 20:50:28.968396 31763 net.cpp:200] ip2 needs backward computation.
I0426 20:50:28.968400 31763 net.cpp:200] relu1 needs backward computation.
I0426 20:50:28.968401 31763 net.cpp:200] ip1 needs backward computation.
I0426 20:50:28.968415 31763 net.cpp:200] pool1 needs backward computation.
I0426 20:50:28.968418 31763 net.cpp:200] conv1 needs backward computation.
I0426 20:50:28.968421 31763 net.cpp:200] pool0 needs backward computation.
I0426 20:50:28.968425 31763 net.cpp:200] conv0 needs backward computation.
I0426 20:50:28.968427 31763 net.cpp:202] mnist does not need backward computation.
I0426 20:50:28.968430 31763 net.cpp:244] This network produces output loss
I0426 20:50:28.968438 31763 net.cpp:257] Network initialization done.
I0426 20:50:28.968720 31763 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test61.prototxt
I0426 20:50:28.968746 31763 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:28.968837 31763 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:50:28.968931 31763 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:28.968979 31763 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:28.968991 31763 net.cpp:86] Creating Layer mnist
I0426 20:50:28.968996 31763 net.cpp:382] mnist -> data
I0426 20:50:28.969003 31763 net.cpp:382] mnist -> label
I0426 20:50:28.969092 31763 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:28.971012 31763 net.cpp:124] Setting up mnist
I0426 20:50:28.971024 31763 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:28.971029 31763 net.cpp:131] Top shape: 100 (100)
I0426 20:50:28.971032 31763 net.cpp:139] Memory required for data: 314000
I0426 20:50:28.971042 31763 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:28.971078 31763 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:28.971081 31763 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:28.971086 31763 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:28.971093 31763 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:28.971134 31763 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:28.971150 31763 net.cpp:131] Top shape: 100 (100)
I0426 20:50:28.971154 31763 net.cpp:131] Top shape: 100 (100)
I0426 20:50:28.971158 31763 net.cpp:139] Memory required for data: 314800
I0426 20:50:28.971160 31763 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:28.971169 31763 net.cpp:86] Creating Layer conv0
I0426 20:50:28.971173 31763 net.cpp:408] conv0 <- data
I0426 20:50:28.971177 31763 net.cpp:382] conv0 -> conv0
I0426 20:50:28.972777 31763 net.cpp:124] Setting up conv0
I0426 20:50:28.972791 31763 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:28.972795 31763 net.cpp:139] Memory required for data: 2618800
I0426 20:50:28.972803 31763 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:28.972815 31763 net.cpp:86] Creating Layer pool0
I0426 20:50:28.972836 31763 net.cpp:408] pool0 <- conv0
I0426 20:50:28.972841 31763 net.cpp:382] pool0 -> pool0
I0426 20:50:28.972877 31763 net.cpp:124] Setting up pool0
I0426 20:50:28.972898 31763 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:28.972901 31763 net.cpp:139] Memory required for data: 3194800
I0426 20:50:28.972904 31763 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:28.972929 31763 net.cpp:86] Creating Layer conv1
I0426 20:50:28.972931 31763 net.cpp:408] conv1 <- pool0
I0426 20:50:28.972936 31763 net.cpp:382] conv1 -> conv1
I0426 20:50:28.975040 31763 net.cpp:124] Setting up conv1
I0426 20:50:28.975052 31763 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:28.975056 31763 net.cpp:139] Memory required for data: 3450800
I0426 20:50:28.975065 31763 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:28.975086 31763 net.cpp:86] Creating Layer pool1
I0426 20:50:28.975090 31763 net.cpp:408] pool1 <- conv1
I0426 20:50:28.975095 31763 net.cpp:382] pool1 -> pool1
I0426 20:50:28.975155 31763 net.cpp:124] Setting up pool1
I0426 20:50:28.975181 31763 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:28.975185 31763 net.cpp:139] Memory required for data: 3514800
I0426 20:50:28.975188 31763 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:28.975195 31763 net.cpp:86] Creating Layer ip1
I0426 20:50:28.975198 31763 net.cpp:408] ip1 <- pool1
I0426 20:50:28.975203 31763 net.cpp:382] ip1 -> ip1
I0426 20:50:28.975587 31763 net.cpp:124] Setting up ip1
I0426 20:50:28.975596 31763 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:28.975600 31763 net.cpp:139] Memory required for data: 3634800
I0426 20:50:28.975606 31763 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:28.975610 31763 net.cpp:86] Creating Layer relu1
I0426 20:50:28.975613 31763 net.cpp:408] relu1 <- ip1
I0426 20:50:28.975617 31763 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:28.975769 31763 net.cpp:124] Setting up relu1
I0426 20:50:28.975777 31763 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:28.975780 31763 net.cpp:139] Memory required for data: 3754800
I0426 20:50:28.975783 31763 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:28.975802 31763 net.cpp:86] Creating Layer ip2
I0426 20:50:28.975805 31763 net.cpp:408] ip2 <- ip1
I0426 20:50:28.975811 31763 net.cpp:382] ip2 -> ip2
I0426 20:50:28.975919 31763 net.cpp:124] Setting up ip2
I0426 20:50:28.975926 31763 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:28.975930 31763 net.cpp:139] Memory required for data: 3758800
I0426 20:50:28.975935 31763 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:28.975939 31763 net.cpp:86] Creating Layer relu2
I0426 20:50:28.975942 31763 net.cpp:408] relu2 <- ip2
I0426 20:50:28.975946 31763 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:28.976091 31763 net.cpp:124] Setting up relu2
I0426 20:50:28.976099 31763 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:28.976101 31763 net.cpp:139] Memory required for data: 3762800
I0426 20:50:28.976104 31763 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0426 20:50:28.976109 31763 net.cpp:86] Creating Layer ip2_relu2_0_split
I0426 20:50:28.976111 31763 net.cpp:408] ip2_relu2_0_split <- ip2
I0426 20:50:28.976115 31763 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0426 20:50:28.976131 31763 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0426 20:50:28.976164 31763 net.cpp:124] Setting up ip2_relu2_0_split
I0426 20:50:28.976168 31763 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:28.976172 31763 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:28.976174 31763 net.cpp:139] Memory required for data: 3770800
I0426 20:50:28.976177 31763 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:28.976183 31763 net.cpp:86] Creating Layer accuracy
I0426 20:50:28.976186 31763 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0426 20:50:28.976189 31763 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:28.976194 31763 net.cpp:382] accuracy -> accuracy
I0426 20:50:28.976200 31763 net.cpp:124] Setting up accuracy
I0426 20:50:28.976204 31763 net.cpp:131] Top shape: (1)
I0426 20:50:28.976207 31763 net.cpp:139] Memory required for data: 3770804
I0426 20:50:28.976209 31763 layer_factory.hpp:77] Creating layer loss
I0426 20:50:28.976213 31763 net.cpp:86] Creating Layer loss
I0426 20:50:28.976217 31763 net.cpp:408] loss <- ip2_relu2_0_split_1
I0426 20:50:28.976219 31763 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:28.976223 31763 net.cpp:382] loss -> loss
I0426 20:50:28.976228 31763 layer_factory.hpp:77] Creating layer loss
I0426 20:50:28.976487 31763 net.cpp:124] Setting up loss
I0426 20:50:28.976496 31763 net.cpp:131] Top shape: (1)
I0426 20:50:28.976500 31763 net.cpp:134]     with loss weight 1
I0426 20:50:28.976505 31763 net.cpp:139] Memory required for data: 3770808
I0426 20:50:28.976508 31763 net.cpp:200] loss needs backward computation.
I0426 20:50:28.976512 31763 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:28.976516 31763 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0426 20:50:28.976518 31763 net.cpp:200] relu2 needs backward computation.
I0426 20:50:28.976521 31763 net.cpp:200] ip2 needs backward computation.
I0426 20:50:28.976524 31763 net.cpp:200] relu1 needs backward computation.
I0426 20:50:28.976526 31763 net.cpp:200] ip1 needs backward computation.
I0426 20:50:28.976529 31763 net.cpp:200] pool1 needs backward computation.
I0426 20:50:28.976532 31763 net.cpp:200] conv1 needs backward computation.
I0426 20:50:28.976536 31763 net.cpp:200] pool0 needs backward computation.
I0426 20:50:28.976538 31763 net.cpp:200] conv0 needs backward computation.
I0426 20:50:28.976541 31763 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:28.976546 31763 net.cpp:202] mnist does not need backward computation.
I0426 20:50:28.976547 31763 net.cpp:244] This network produces output accuracy
I0426 20:50:28.976552 31763 net.cpp:244] This network produces output loss
I0426 20:50:28.976560 31763 net.cpp:257] Network initialization done.
I0426 20:50:28.976594 31763 solver.cpp:56] Solver scaffolding done.
I0426 20:50:28.976871 31763 caffe.cpp:248] Starting Optimization
I0426 20:50:28.976892 31763 solver.cpp:273] Solving LeNet
I0426 20:50:28.976897 31763 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:28.977730 31763 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:28.981158 31763 blocking_queue.cpp:49] Waiting for data
I0426 20:50:29.052628 31771 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:29.053176 31763 solver.cpp:398]     Test net output #0: accuracy = 0.0959
I0426 20:50:29.053195 31763 solver.cpp:398]     Test net output #1: loss = 2.33544 (* 1 = 2.33544 loss)
I0426 20:50:29.055682 31763 solver.cpp:219] Iteration 0 (-2.21775e-31 iter/s, 0.0787611s/100 iters), loss = 2.33203
I0426 20:50:29.055706 31763 solver.cpp:238]     Train net output #0: loss = 2.33203 (* 1 = 2.33203 loss)
I0426 20:50:29.055734 31763 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:29.140404 31763 solver.cpp:219] Iteration 100 (1180.82 iter/s, 0.0846869s/100 iters), loss = 0.709512
I0426 20:50:29.140429 31763 solver.cpp:238]     Train net output #0: loss = 0.709512 (* 1 = 0.709512 loss)
I0426 20:50:29.140436 31763 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:29.236261 31763 solver.cpp:219] Iteration 200 (1043.6 iter/s, 0.0958218s/100 iters), loss = 0.286966
I0426 20:50:29.236284 31763 solver.cpp:238]     Train net output #0: loss = 0.286966 (* 1 = 0.286966 loss)
I0426 20:50:29.236290 31763 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:29.326063 31763 solver.cpp:219] Iteration 300 (1114.02 iter/s, 0.0897647s/100 iters), loss = 0.178985
I0426 20:50:29.326123 31763 solver.cpp:238]     Train net output #0: loss = 0.178985 (* 1 = 0.178985 loss)
I0426 20:50:29.326138 31763 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:29.411366 31763 solver.cpp:219] Iteration 400 (1173.03 iter/s, 0.0852492s/100 iters), loss = 0.0875091
I0426 20:50:29.411397 31763 solver.cpp:238]     Train net output #0: loss = 0.0875091 (* 1 = 0.0875091 loss)
I0426 20:50:29.411404 31763 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:29.499722 31763 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:29.565057 31771 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:29.565629 31763 solver.cpp:398]     Test net output #0: accuracy = 0.9695
I0426 20:50:29.565654 31763 solver.cpp:398]     Test net output #1: loss = 0.102688 (* 1 = 0.102688 loss)
I0426 20:50:29.566560 31763 solver.cpp:219] Iteration 500 (644.535 iter/s, 0.155151s/100 iters), loss = 0.120528
I0426 20:50:29.566594 31763 solver.cpp:238]     Train net output #0: loss = 0.120528 (* 1 = 0.120528 loss)
I0426 20:50:29.566619 31763 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:29.649333 31763 solver.cpp:219] Iteration 600 (1208.84 iter/s, 0.0827238s/100 iters), loss = 0.11193
I0426 20:50:29.649363 31763 solver.cpp:238]     Train net output #0: loss = 0.11193 (* 1 = 0.11193 loss)
I0426 20:50:29.649370 31763 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:29.737494 31763 solver.cpp:219] Iteration 700 (1134.81 iter/s, 0.0881202s/100 iters), loss = 0.119625
I0426 20:50:29.737537 31763 solver.cpp:238]     Train net output #0: loss = 0.119625 (* 1 = 0.119625 loss)
I0426 20:50:29.737548 31763 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:29.825575 31763 solver.cpp:219] Iteration 800 (1135.99 iter/s, 0.0880292s/100 iters), loss = 0.236396
I0426 20:50:29.825609 31763 solver.cpp:238]     Train net output #0: loss = 0.236396 (* 1 = 0.236396 loss)
I0426 20:50:29.825618 31763 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:29.907042 31763 solver.cpp:219] Iteration 900 (1228.15 iter/s, 0.0814234s/100 iters), loss = 0.143404
I0426 20:50:29.907073 31763 solver.cpp:238]     Train net output #0: loss = 0.143404 (* 1 = 0.143404 loss)
I0426 20:50:29.907081 31763 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:29.934787 31769 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:29.988633 31763 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:29.990154 31763 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:29.991024 31763 solver.cpp:311] Iteration 1000, loss = 0.0713109
I0426 20:50:29.991044 31763 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:30.068336 31771 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:30.068994 31763 solver.cpp:398]     Test net output #0: accuracy = 0.9739
I0426 20:50:30.069036 31763 solver.cpp:398]     Test net output #1: loss = 0.0839829 (* 1 = 0.0839829 loss)
I0426 20:50:30.069061 31763 solver.cpp:316] Optimization Done.
I0426 20:50:30.069067 31763 caffe.cpp:259] Optimization Done.
