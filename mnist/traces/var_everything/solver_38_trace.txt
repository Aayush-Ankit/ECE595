I0426 20:49:31.245581 31544 caffe.cpp:218] Using GPUs 0
I0426 20:49:31.275573 31544 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:31.736479 31544 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test38.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:31.736613 31544 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test38.prototxt
I0426 20:49:31.736944 31544 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:31.736960 31544 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:31.737033 31544 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:31.737095 31544 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:31.737192 31544 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:31.737211 31544 net.cpp:86] Creating Layer mnist
I0426 20:49:31.737218 31544 net.cpp:382] mnist -> data
I0426 20:49:31.737237 31544 net.cpp:382] mnist -> label
I0426 20:49:31.738150 31544 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:31.740372 31544 net.cpp:124] Setting up mnist
I0426 20:49:31.740386 31544 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:31.740391 31544 net.cpp:131] Top shape: 64 (64)
I0426 20:49:31.740393 31544 net.cpp:139] Memory required for data: 200960
I0426 20:49:31.740398 31544 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:31.740411 31544 net.cpp:86] Creating Layer conv0
I0426 20:49:31.740417 31544 net.cpp:408] conv0 <- data
I0426 20:49:31.740463 31544 net.cpp:382] conv0 -> conv0
I0426 20:49:31.973364 31544 net.cpp:124] Setting up conv0
I0426 20:49:31.973392 31544 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:49:31.973395 31544 net.cpp:139] Memory required for data: 3887360
I0426 20:49:31.973409 31544 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:31.973422 31544 net.cpp:86] Creating Layer pool0
I0426 20:49:31.973460 31544 net.cpp:408] pool0 <- conv0
I0426 20:49:31.973466 31544 net.cpp:382] pool0 -> pool0
I0426 20:49:31.973510 31544 net.cpp:124] Setting up pool0
I0426 20:49:31.973515 31544 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:49:31.973517 31544 net.cpp:139] Memory required for data: 4808960
I0426 20:49:31.973520 31544 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:31.973527 31544 net.cpp:86] Creating Layer ip1
I0426 20:49:31.973531 31544 net.cpp:408] ip1 <- pool0
I0426 20:49:31.973534 31544 net.cpp:382] ip1 -> ip1
I0426 20:49:31.980506 31544 net.cpp:124] Setting up ip1
I0426 20:49:31.980533 31544 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:31.980536 31544 net.cpp:139] Memory required for data: 4885760
I0426 20:49:31.980545 31544 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:31.980551 31544 net.cpp:86] Creating Layer relu1
I0426 20:49:31.980554 31544 net.cpp:408] relu1 <- ip1
I0426 20:49:31.980558 31544 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:31.980728 31544 net.cpp:124] Setting up relu1
I0426 20:49:31.980737 31544 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:49:31.980741 31544 net.cpp:139] Memory required for data: 4962560
I0426 20:49:31.980743 31544 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:31.980749 31544 net.cpp:86] Creating Layer ip2
I0426 20:49:31.980752 31544 net.cpp:408] ip2 <- ip1
I0426 20:49:31.980757 31544 net.cpp:382] ip2 -> ip2
I0426 20:49:31.981039 31544 net.cpp:124] Setting up ip2
I0426 20:49:31.981046 31544 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:31.981050 31544 net.cpp:139] Memory required for data: 4988160
I0426 20:49:31.981056 31544 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:31.981061 31544 net.cpp:86] Creating Layer relu2
I0426 20:49:31.981065 31544 net.cpp:408] relu2 <- ip2
I0426 20:49:31.981070 31544 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:31.981848 31544 net.cpp:124] Setting up relu2
I0426 20:49:31.981860 31544 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:31.981878 31544 net.cpp:139] Memory required for data: 5013760
I0426 20:49:31.981883 31544 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:31.981889 31544 net.cpp:86] Creating Layer ip3
I0426 20:49:31.981891 31544 net.cpp:408] ip3 <- ip2
I0426 20:49:31.981897 31544 net.cpp:382] ip3 -> ip3
I0426 20:49:31.982022 31544 net.cpp:124] Setting up ip3
I0426 20:49:31.982028 31544 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:31.982031 31544 net.cpp:139] Memory required for data: 5016320
I0426 20:49:31.982036 31544 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:31.982043 31544 net.cpp:86] Creating Layer relu3
I0426 20:49:31.982045 31544 net.cpp:408] relu3 <- ip3
I0426 20:49:31.982049 31544 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:31.982185 31544 net.cpp:124] Setting up relu3
I0426 20:49:31.982192 31544 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:31.982195 31544 net.cpp:139] Memory required for data: 5018880
I0426 20:49:31.982198 31544 layer_factory.hpp:77] Creating layer loss
I0426 20:49:31.982203 31544 net.cpp:86] Creating Layer loss
I0426 20:49:31.982206 31544 net.cpp:408] loss <- ip3
I0426 20:49:31.982210 31544 net.cpp:408] loss <- label
I0426 20:49:31.982215 31544 net.cpp:382] loss -> loss
I0426 20:49:31.982233 31544 layer_factory.hpp:77] Creating layer loss
I0426 20:49:31.982442 31544 net.cpp:124] Setting up loss
I0426 20:49:31.982451 31544 net.cpp:131] Top shape: (1)
I0426 20:49:31.982455 31544 net.cpp:134]     with loss weight 1
I0426 20:49:31.982467 31544 net.cpp:139] Memory required for data: 5018884
I0426 20:49:31.982471 31544 net.cpp:200] loss needs backward computation.
I0426 20:49:31.982475 31544 net.cpp:200] relu3 needs backward computation.
I0426 20:49:31.982477 31544 net.cpp:200] ip3 needs backward computation.
I0426 20:49:31.982480 31544 net.cpp:200] relu2 needs backward computation.
I0426 20:49:31.982482 31544 net.cpp:200] ip2 needs backward computation.
I0426 20:49:31.982486 31544 net.cpp:200] relu1 needs backward computation.
I0426 20:49:31.982487 31544 net.cpp:200] ip1 needs backward computation.
I0426 20:49:31.982501 31544 net.cpp:200] pool0 needs backward computation.
I0426 20:49:31.982503 31544 net.cpp:200] conv0 needs backward computation.
I0426 20:49:31.982506 31544 net.cpp:202] mnist does not need backward computation.
I0426 20:49:31.982509 31544 net.cpp:244] This network produces output loss
I0426 20:49:31.982517 31544 net.cpp:257] Network initialization done.
I0426 20:49:31.982784 31544 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test38.prototxt
I0426 20:49:31.982807 31544 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:31.982885 31544 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:31.982944 31544 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:31.982987 31544 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:31.983000 31544 net.cpp:86] Creating Layer mnist
I0426 20:49:31.983003 31544 net.cpp:382] mnist -> data
I0426 20:49:31.983011 31544 net.cpp:382] mnist -> label
I0426 20:49:31.983086 31544 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:31.985031 31544 net.cpp:124] Setting up mnist
I0426 20:49:31.985075 31544 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:31.985081 31544 net.cpp:131] Top shape: 100 (100)
I0426 20:49:31.985098 31544 net.cpp:139] Memory required for data: 314000
I0426 20:49:31.985102 31544 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:31.985152 31544 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:31.985157 31544 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:31.985162 31544 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:31.985168 31544 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:31.985267 31544 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:31.985283 31544 net.cpp:131] Top shape: 100 (100)
I0426 20:49:31.985286 31544 net.cpp:131] Top shape: 100 (100)
I0426 20:49:31.985290 31544 net.cpp:139] Memory required for data: 314800
I0426 20:49:31.985301 31544 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:31.985309 31544 net.cpp:86] Creating Layer conv0
I0426 20:49:31.985313 31544 net.cpp:408] conv0 <- data
I0426 20:49:31.985317 31544 net.cpp:382] conv0 -> conv0
I0426 20:49:31.986935 31544 net.cpp:124] Setting up conv0
I0426 20:49:31.986948 31544 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:49:31.986953 31544 net.cpp:139] Memory required for data: 6074800
I0426 20:49:31.986960 31544 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:31.986981 31544 net.cpp:86] Creating Layer pool0
I0426 20:49:31.986985 31544 net.cpp:408] pool0 <- conv0
I0426 20:49:31.986990 31544 net.cpp:382] pool0 -> pool0
I0426 20:49:31.987022 31544 net.cpp:124] Setting up pool0
I0426 20:49:31.987027 31544 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:49:31.987030 31544 net.cpp:139] Memory required for data: 7514800
I0426 20:49:31.987033 31544 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:31.987040 31544 net.cpp:86] Creating Layer ip1
I0426 20:49:31.987042 31544 net.cpp:408] ip1 <- pool0
I0426 20:49:31.987046 31544 net.cpp:382] ip1 -> ip1
I0426 20:49:31.994092 31544 net.cpp:124] Setting up ip1
I0426 20:49:31.994105 31544 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:31.994108 31544 net.cpp:139] Memory required for data: 7634800
I0426 20:49:31.994115 31544 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:31.994120 31544 net.cpp:86] Creating Layer relu1
I0426 20:49:31.994123 31544 net.cpp:408] relu1 <- ip1
I0426 20:49:31.994127 31544 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:31.994307 31544 net.cpp:124] Setting up relu1
I0426 20:49:31.994316 31544 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:49:31.994319 31544 net.cpp:139] Memory required for data: 7754800
I0426 20:49:31.994323 31544 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:31.994328 31544 net.cpp:86] Creating Layer ip2
I0426 20:49:31.994331 31544 net.cpp:408] ip2 <- ip1
I0426 20:49:31.994335 31544 net.cpp:382] ip2 -> ip2
I0426 20:49:31.994592 31544 net.cpp:124] Setting up ip2
I0426 20:49:31.994601 31544 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:31.994603 31544 net.cpp:139] Memory required for data: 7794800
I0426 20:49:31.994609 31544 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:31.994613 31544 net.cpp:86] Creating Layer relu2
I0426 20:49:31.994617 31544 net.cpp:408] relu2 <- ip2
I0426 20:49:31.994621 31544 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:31.995434 31544 net.cpp:124] Setting up relu2
I0426 20:49:31.995445 31544 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:31.995463 31544 net.cpp:139] Memory required for data: 7834800
I0426 20:49:31.995466 31544 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:31.995473 31544 net.cpp:86] Creating Layer ip3
I0426 20:49:31.995478 31544 net.cpp:408] ip3 <- ip2
I0426 20:49:31.995483 31544 net.cpp:382] ip3 -> ip3
I0426 20:49:31.995596 31544 net.cpp:124] Setting up ip3
I0426 20:49:31.995604 31544 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:31.995607 31544 net.cpp:139] Memory required for data: 7838800
I0426 20:49:31.995612 31544 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:31.995616 31544 net.cpp:86] Creating Layer relu3
I0426 20:49:31.995620 31544 net.cpp:408] relu3 <- ip3
I0426 20:49:31.995625 31544 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:31.995765 31544 net.cpp:124] Setting up relu3
I0426 20:49:31.995774 31544 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:31.995776 31544 net.cpp:139] Memory required for data: 7842800
I0426 20:49:31.995779 31544 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:31.995784 31544 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:31.995786 31544 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:31.995790 31544 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:31.995795 31544 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:31.995827 31544 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:31.995831 31544 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:31.995844 31544 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:31.995847 31544 net.cpp:139] Memory required for data: 7850800
I0426 20:49:31.995851 31544 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:31.995856 31544 net.cpp:86] Creating Layer accuracy
I0426 20:49:31.995858 31544 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:31.995862 31544 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:31.995867 31544 net.cpp:382] accuracy -> accuracy
I0426 20:49:31.995873 31544 net.cpp:124] Setting up accuracy
I0426 20:49:31.995877 31544 net.cpp:131] Top shape: (1)
I0426 20:49:31.995879 31544 net.cpp:139] Memory required for data: 7850804
I0426 20:49:31.995882 31544 layer_factory.hpp:77] Creating layer loss
I0426 20:49:31.995887 31544 net.cpp:86] Creating Layer loss
I0426 20:49:31.995889 31544 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:31.995893 31544 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:31.995896 31544 net.cpp:382] loss -> loss
I0426 20:49:31.995901 31544 layer_factory.hpp:77] Creating layer loss
I0426 20:49:31.996111 31544 net.cpp:124] Setting up loss
I0426 20:49:31.996119 31544 net.cpp:131] Top shape: (1)
I0426 20:49:31.996122 31544 net.cpp:134]     with loss weight 1
I0426 20:49:31.996129 31544 net.cpp:139] Memory required for data: 7850808
I0426 20:49:31.996131 31544 net.cpp:200] loss needs backward computation.
I0426 20:49:31.996135 31544 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:31.996140 31544 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:31.996142 31544 net.cpp:200] relu3 needs backward computation.
I0426 20:49:31.996145 31544 net.cpp:200] ip3 needs backward computation.
I0426 20:49:31.996147 31544 net.cpp:200] relu2 needs backward computation.
I0426 20:49:31.996150 31544 net.cpp:200] ip2 needs backward computation.
I0426 20:49:31.996152 31544 net.cpp:200] relu1 needs backward computation.
I0426 20:49:31.996155 31544 net.cpp:200] ip1 needs backward computation.
I0426 20:49:31.996158 31544 net.cpp:200] pool0 needs backward computation.
I0426 20:49:31.996161 31544 net.cpp:200] conv0 needs backward computation.
I0426 20:49:31.996165 31544 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:31.996167 31544 net.cpp:202] mnist does not need backward computation.
I0426 20:49:31.996170 31544 net.cpp:244] This network produces output accuracy
I0426 20:49:31.996173 31544 net.cpp:244] This network produces output loss
I0426 20:49:31.996182 31544 net.cpp:257] Network initialization done.
I0426 20:49:31.996217 31544 solver.cpp:56] Solver scaffolding done.
I0426 20:49:31.996455 31544 caffe.cpp:248] Starting Optimization
I0426 20:49:31.996461 31544 solver.cpp:273] Solving LeNet
I0426 20:49:31.996464 31544 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:31.997864 31544 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:32.004190 31544 blocking_queue.cpp:49] Waiting for data
I0426 20:49:32.074853 31551 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:32.075600 31544 solver.cpp:398]     Test net output #0: accuracy = 0.1572
I0426 20:49:32.075619 31544 solver.cpp:398]     Test net output #1: loss = 2.28358 (* 1 = 2.28358 loss)
I0426 20:49:32.078804 31544 solver.cpp:219] Iteration 0 (-7.6093e-31 iter/s, 0.0823163s/100 iters), loss = 2.28872
I0426 20:49:32.078829 31544 solver.cpp:238]     Train net output #0: loss = 2.28872 (* 1 = 2.28872 loss)
I0426 20:49:32.078855 31544 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:32.188159 31544 solver.cpp:219] Iteration 100 (914.736 iter/s, 0.109321s/100 iters), loss = 0.603422
I0426 20:49:32.188185 31544 solver.cpp:238]     Train net output #0: loss = 0.603422 (* 1 = 0.603422 loss)
I0426 20:49:32.188191 31544 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:32.296504 31544 solver.cpp:219] Iteration 200 (923.297 iter/s, 0.108307s/100 iters), loss = 0.559958
I0426 20:49:32.296530 31544 solver.cpp:238]     Train net output #0: loss = 0.559958 (* 1 = 0.559958 loss)
I0426 20:49:32.296535 31544 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:32.402832 31544 solver.cpp:219] Iteration 300 (940.793 iter/s, 0.106293s/100 iters), loss = 0.641745
I0426 20:49:32.402856 31544 solver.cpp:238]     Train net output #0: loss = 0.641745 (* 1 = 0.641745 loss)
I0426 20:49:32.402878 31544 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:32.509042 31544 solver.cpp:219] Iteration 400 (941.837 iter/s, 0.106175s/100 iters), loss = 0.719083
I0426 20:49:32.509068 31544 solver.cpp:238]     Train net output #0: loss = 0.719083 (* 1 = 0.719083 loss)
I0426 20:49:32.509088 31544 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:32.614507 31544 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:32.671285 31551 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:32.672659 31544 solver.cpp:398]     Test net output #0: accuracy = 0.851
I0426 20:49:32.672691 31544 solver.cpp:398]     Test net output #1: loss = 0.599295 (* 1 = 0.599295 loss)
I0426 20:49:32.673629 31544 solver.cpp:219] Iteration 500 (607.723 iter/s, 0.164549s/100 iters), loss = 0.654759
I0426 20:49:32.673650 31544 solver.cpp:238]     Train net output #0: loss = 0.654759 (* 1 = 0.654759 loss)
I0426 20:49:32.673667 31544 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:32.787289 31544 solver.cpp:219] Iteration 600 (880.064 iter/s, 0.113628s/100 iters), loss = 0.58033
I0426 20:49:32.787315 31544 solver.cpp:238]     Train net output #0: loss = 0.58033 (* 1 = 0.58033 loss)
I0426 20:49:32.787322 31544 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:32.894942 31544 solver.cpp:219] Iteration 700 (929.228 iter/s, 0.107616s/100 iters), loss = 0.728652
I0426 20:49:32.894968 31544 solver.cpp:238]     Train net output #0: loss = 0.728652 (* 1 = 0.728652 loss)
I0426 20:49:32.894990 31544 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:33.001377 31544 solver.cpp:219] Iteration 800 (939.852 iter/s, 0.1064s/100 iters), loss = 0.67322
I0426 20:49:33.001402 31544 solver.cpp:238]     Train net output #0: loss = 0.67322 (* 1 = 0.67322 loss)
I0426 20:49:33.001425 31544 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:33.111840 31544 solver.cpp:219] Iteration 900 (905.593 iter/s, 0.110425s/100 iters), loss = 0.657488
I0426 20:49:33.111870 31544 solver.cpp:238]     Train net output #0: loss = 0.657488 (* 1 = 0.657488 loss)
I0426 20:49:33.111876 31544 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:33.149288 31550 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:33.219168 31544 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:33.237470 31544 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:33.244971 31544 solver.cpp:311] Iteration 1000, loss = 0.682789
I0426 20:49:33.244992 31544 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:33.321889 31551 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:33.322551 31544 solver.cpp:398]     Test net output #0: accuracy = 0.8697
I0426 20:49:33.322603 31544 solver.cpp:398]     Test net output #1: loss = 0.541788 (* 1 = 0.541788 loss)
I0426 20:49:33.322609 31544 solver.cpp:316] Optimization Done.
I0426 20:49:33.322612 31544 caffe.cpp:259] Optimization Done.
