I0426 20:50:01.498102 31671 caffe.cpp:218] Using GPUs 0
I0426 20:50:01.527757 31671 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:01.988739 31671 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test50.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:01.988914 31671 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test50.prototxt
I0426 20:50:01.989253 31671 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:01.989266 31671 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:01.989356 31671 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:01.989416 31671 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:01.989506 31671 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:01.989526 31671 net.cpp:86] Creating Layer mnist
I0426 20:50:01.989532 31671 net.cpp:382] mnist -> data
I0426 20:50:01.989552 31671 net.cpp:382] mnist -> label
I0426 20:50:01.990550 31671 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:01.992801 31671 net.cpp:124] Setting up mnist
I0426 20:50:01.992851 31671 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:01.992857 31671 net.cpp:131] Top shape: 64 (64)
I0426 20:50:01.992861 31671 net.cpp:139] Memory required for data: 200960
I0426 20:50:01.992867 31671 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:01.992895 31671 net.cpp:86] Creating Layer conv0
I0426 20:50:01.992900 31671 net.cpp:408] conv0 <- data
I0426 20:50:01.992910 31671 net.cpp:382] conv0 -> conv0
I0426 20:50:02.223793 31671 net.cpp:124] Setting up conv0
I0426 20:50:02.223817 31671 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:50:02.223821 31671 net.cpp:139] Memory required for data: 7573760
I0426 20:50:02.223835 31671 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:02.223847 31671 net.cpp:86] Creating Layer pool0
I0426 20:50:02.223868 31671 net.cpp:408] pool0 <- conv0
I0426 20:50:02.223889 31671 net.cpp:382] pool0 -> pool0
I0426 20:50:02.223951 31671 net.cpp:124] Setting up pool0
I0426 20:50:02.223973 31671 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:50:02.223976 31671 net.cpp:139] Memory required for data: 9416960
I0426 20:50:02.223979 31671 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:02.223987 31671 net.cpp:86] Creating Layer ip1
I0426 20:50:02.223990 31671 net.cpp:408] ip1 <- pool0
I0426 20:50:02.223995 31671 net.cpp:382] ip1 -> ip1
I0426 20:50:02.228713 31671 net.cpp:124] Setting up ip1
I0426 20:50:02.228724 31671 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:02.228744 31671 net.cpp:139] Memory required for data: 9442560
I0426 20:50:02.228750 31671 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:02.228757 31671 net.cpp:86] Creating Layer relu1
I0426 20:50:02.228760 31671 net.cpp:408] relu1 <- ip1
I0426 20:50:02.228765 31671 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:02.228983 31671 net.cpp:124] Setting up relu1
I0426 20:50:02.228993 31671 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:02.228997 31671 net.cpp:139] Memory required for data: 9468160
I0426 20:50:02.229015 31671 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:02.229022 31671 net.cpp:86] Creating Layer ip2
I0426 20:50:02.229025 31671 net.cpp:408] ip2 <- ip1
I0426 20:50:02.229029 31671 net.cpp:382] ip2 -> ip2
I0426 20:50:02.229300 31671 net.cpp:124] Setting up ip2
I0426 20:50:02.229306 31671 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:02.229310 31671 net.cpp:139] Memory required for data: 9544960
I0426 20:50:02.229316 31671 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:02.229321 31671 net.cpp:86] Creating Layer relu2
I0426 20:50:02.229324 31671 net.cpp:408] relu2 <- ip2
I0426 20:50:02.229328 31671 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:02.230142 31671 net.cpp:124] Setting up relu2
I0426 20:50:02.230154 31671 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:02.230172 31671 net.cpp:139] Memory required for data: 9621760
I0426 20:50:02.230175 31671 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:02.230182 31671 net.cpp:86] Creating Layer ip3
I0426 20:50:02.230185 31671 net.cpp:408] ip3 <- ip2
I0426 20:50:02.230191 31671 net.cpp:382] ip3 -> ip3
I0426 20:50:02.230304 31671 net.cpp:124] Setting up ip3
I0426 20:50:02.230310 31671 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:02.230314 31671 net.cpp:139] Memory required for data: 9624320
I0426 20:50:02.230319 31671 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:02.230324 31671 net.cpp:86] Creating Layer relu3
I0426 20:50:02.230327 31671 net.cpp:408] relu3 <- ip3
I0426 20:50:02.230331 31671 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:02.230474 31671 net.cpp:124] Setting up relu3
I0426 20:50:02.230482 31671 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:02.230485 31671 net.cpp:139] Memory required for data: 9626880
I0426 20:50:02.230489 31671 layer_factory.hpp:77] Creating layer loss
I0426 20:50:02.230494 31671 net.cpp:86] Creating Layer loss
I0426 20:50:02.230496 31671 net.cpp:408] loss <- ip3
I0426 20:50:02.230500 31671 net.cpp:408] loss <- label
I0426 20:50:02.230505 31671 net.cpp:382] loss -> loss
I0426 20:50:02.230523 31671 layer_factory.hpp:77] Creating layer loss
I0426 20:50:02.230734 31671 net.cpp:124] Setting up loss
I0426 20:50:02.230741 31671 net.cpp:131] Top shape: (1)
I0426 20:50:02.230746 31671 net.cpp:134]     with loss weight 1
I0426 20:50:02.230759 31671 net.cpp:139] Memory required for data: 9626884
I0426 20:50:02.230763 31671 net.cpp:200] loss needs backward computation.
I0426 20:50:02.230767 31671 net.cpp:200] relu3 needs backward computation.
I0426 20:50:02.230770 31671 net.cpp:200] ip3 needs backward computation.
I0426 20:50:02.230773 31671 net.cpp:200] relu2 needs backward computation.
I0426 20:50:02.230775 31671 net.cpp:200] ip2 needs backward computation.
I0426 20:50:02.230778 31671 net.cpp:200] relu1 needs backward computation.
I0426 20:50:02.230782 31671 net.cpp:200] ip1 needs backward computation.
I0426 20:50:02.230793 31671 net.cpp:200] pool0 needs backward computation.
I0426 20:50:02.230798 31671 net.cpp:200] conv0 needs backward computation.
I0426 20:50:02.230800 31671 net.cpp:202] mnist does not need backward computation.
I0426 20:50:02.230803 31671 net.cpp:244] This network produces output loss
I0426 20:50:02.230810 31671 net.cpp:257] Network initialization done.
I0426 20:50:02.231102 31671 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test50.prototxt
I0426 20:50:02.231128 31671 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:02.231222 31671 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:02.231282 31671 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:02.231325 31671 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:02.231339 31671 net.cpp:86] Creating Layer mnist
I0426 20:50:02.231343 31671 net.cpp:382] mnist -> data
I0426 20:50:02.231350 31671 net.cpp:382] mnist -> label
I0426 20:50:02.231431 31671 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:02.233409 31671 net.cpp:124] Setting up mnist
I0426 20:50:02.233433 31671 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:02.233438 31671 net.cpp:131] Top shape: 100 (100)
I0426 20:50:02.233441 31671 net.cpp:139] Memory required for data: 314000
I0426 20:50:02.233444 31671 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:02.233465 31671 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:02.233469 31671 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:02.233474 31671 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:02.233480 31671 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:02.233536 31671 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:02.233541 31671 net.cpp:131] Top shape: 100 (100)
I0426 20:50:02.233544 31671 net.cpp:131] Top shape: 100 (100)
I0426 20:50:02.233547 31671 net.cpp:139] Memory required for data: 314800
I0426 20:50:02.233559 31671 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:02.233568 31671 net.cpp:86] Creating Layer conv0
I0426 20:50:02.233572 31671 net.cpp:408] conv0 <- data
I0426 20:50:02.233577 31671 net.cpp:382] conv0 -> conv0
I0426 20:50:02.235321 31671 net.cpp:124] Setting up conv0
I0426 20:50:02.235333 31671 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:50:02.235337 31671 net.cpp:139] Memory required for data: 11834800
I0426 20:50:02.235345 31671 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:02.235368 31671 net.cpp:86] Creating Layer pool0
I0426 20:50:02.235370 31671 net.cpp:408] pool0 <- conv0
I0426 20:50:02.235375 31671 net.cpp:382] pool0 -> pool0
I0426 20:50:02.235410 31671 net.cpp:124] Setting up pool0
I0426 20:50:02.235415 31671 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:50:02.235419 31671 net.cpp:139] Memory required for data: 14714800
I0426 20:50:02.235421 31671 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:02.235427 31671 net.cpp:86] Creating Layer ip1
I0426 20:50:02.235430 31671 net.cpp:408] ip1 <- pool0
I0426 20:50:02.235435 31671 net.cpp:382] ip1 -> ip1
I0426 20:50:02.240546 31671 net.cpp:124] Setting up ip1
I0426 20:50:02.240558 31671 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:02.240561 31671 net.cpp:139] Memory required for data: 14754800
I0426 20:50:02.240569 31671 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:02.240574 31671 net.cpp:86] Creating Layer relu1
I0426 20:50:02.240587 31671 net.cpp:408] relu1 <- ip1
I0426 20:50:02.240592 31671 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:02.240779 31671 net.cpp:124] Setting up relu1
I0426 20:50:02.240787 31671 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:02.240792 31671 net.cpp:139] Memory required for data: 14794800
I0426 20:50:02.240794 31671 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:02.240799 31671 net.cpp:86] Creating Layer ip2
I0426 20:50:02.240803 31671 net.cpp:408] ip2 <- ip1
I0426 20:50:02.240808 31671 net.cpp:382] ip2 -> ip2
I0426 20:50:02.241145 31671 net.cpp:124] Setting up ip2
I0426 20:50:02.241166 31671 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:02.241169 31671 net.cpp:139] Memory required for data: 14914800
I0426 20:50:02.241191 31671 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:02.241210 31671 net.cpp:86] Creating Layer relu2
I0426 20:50:02.241214 31671 net.cpp:408] relu2 <- ip2
I0426 20:50:02.241232 31671 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:02.242022 31671 net.cpp:124] Setting up relu2
I0426 20:50:02.242033 31671 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:02.242053 31671 net.cpp:139] Memory required for data: 15034800
I0426 20:50:02.242055 31671 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:02.242063 31671 net.cpp:86] Creating Layer ip3
I0426 20:50:02.242067 31671 net.cpp:408] ip3 <- ip2
I0426 20:50:02.242072 31671 net.cpp:382] ip3 -> ip3
I0426 20:50:02.242200 31671 net.cpp:124] Setting up ip3
I0426 20:50:02.242208 31671 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:02.242210 31671 net.cpp:139] Memory required for data: 15038800
I0426 20:50:02.242216 31671 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:02.242220 31671 net.cpp:86] Creating Layer relu3
I0426 20:50:02.242223 31671 net.cpp:408] relu3 <- ip3
I0426 20:50:02.242228 31671 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:02.242367 31671 net.cpp:124] Setting up relu3
I0426 20:50:02.242375 31671 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:02.242378 31671 net.cpp:139] Memory required for data: 15042800
I0426 20:50:02.242382 31671 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:02.242385 31671 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:02.242388 31671 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:02.242393 31671 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:02.242398 31671 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:02.242429 31671 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:02.242432 31671 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:02.242446 31671 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:02.242449 31671 net.cpp:139] Memory required for data: 15050800
I0426 20:50:02.242451 31671 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:02.242457 31671 net.cpp:86] Creating Layer accuracy
I0426 20:50:02.242460 31671 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:02.242465 31671 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:02.242468 31671 net.cpp:382] accuracy -> accuracy
I0426 20:50:02.242475 31671 net.cpp:124] Setting up accuracy
I0426 20:50:02.242478 31671 net.cpp:131] Top shape: (1)
I0426 20:50:02.242481 31671 net.cpp:139] Memory required for data: 15050804
I0426 20:50:02.242483 31671 layer_factory.hpp:77] Creating layer loss
I0426 20:50:02.242487 31671 net.cpp:86] Creating Layer loss
I0426 20:50:02.242491 31671 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:02.242493 31671 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:02.242497 31671 net.cpp:382] loss -> loss
I0426 20:50:02.242503 31671 layer_factory.hpp:77] Creating layer loss
I0426 20:50:02.242714 31671 net.cpp:124] Setting up loss
I0426 20:50:02.242722 31671 net.cpp:131] Top shape: (1)
I0426 20:50:02.242727 31671 net.cpp:134]     with loss weight 1
I0426 20:50:02.242733 31671 net.cpp:139] Memory required for data: 15050808
I0426 20:50:02.242736 31671 net.cpp:200] loss needs backward computation.
I0426 20:50:02.242740 31671 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:02.242743 31671 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:02.242746 31671 net.cpp:200] relu3 needs backward computation.
I0426 20:50:02.242749 31671 net.cpp:200] ip3 needs backward computation.
I0426 20:50:02.242753 31671 net.cpp:200] relu2 needs backward computation.
I0426 20:50:02.242755 31671 net.cpp:200] ip2 needs backward computation.
I0426 20:50:02.242758 31671 net.cpp:200] relu1 needs backward computation.
I0426 20:50:02.242760 31671 net.cpp:200] ip1 needs backward computation.
I0426 20:50:02.242763 31671 net.cpp:200] pool0 needs backward computation.
I0426 20:50:02.242766 31671 net.cpp:200] conv0 needs backward computation.
I0426 20:50:02.242770 31671 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:02.242774 31671 net.cpp:202] mnist does not need backward computation.
I0426 20:50:02.242776 31671 net.cpp:244] This network produces output accuracy
I0426 20:50:02.242779 31671 net.cpp:244] This network produces output loss
I0426 20:50:02.242789 31671 net.cpp:257] Network initialization done.
I0426 20:50:02.242821 31671 solver.cpp:56] Solver scaffolding done.
I0426 20:50:02.243089 31671 caffe.cpp:248] Starting Optimization
I0426 20:50:02.243096 31671 solver.cpp:273] Solving LeNet
I0426 20:50:02.243099 31671 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:02.245121 31671 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:02.251863 31671 blocking_queue.cpp:49] Waiting for data
I0426 20:50:02.323287 31678 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:02.324069 31671 solver.cpp:398]     Test net output #0: accuracy = 0.0884
I0426 20:50:02.324086 31671 solver.cpp:398]     Test net output #1: loss = 2.31485 (* 1 = 2.31485 loss)
I0426 20:50:02.328588 31671 solver.cpp:219] Iteration 0 (0 iter/s, 0.085465s/100 iters), loss = 2.33953
I0426 20:50:02.328611 31671 solver.cpp:238]     Train net output #0: loss = 2.33953 (* 1 = 2.33953 loss)
I0426 20:50:02.328624 31671 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:02.449034 31671 solver.cpp:219] Iteration 100 (830.487 iter/s, 0.120411s/100 iters), loss = 0.666654
I0426 20:50:02.449064 31671 solver.cpp:238]     Train net output #0: loss = 0.666654 (* 1 = 0.666654 loss)
I0426 20:50:02.449087 31671 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:02.569429 31671 solver.cpp:219] Iteration 200 (830.868 iter/s, 0.120356s/100 iters), loss = 0.197745
I0426 20:50:02.569455 31671 solver.cpp:238]     Train net output #0: loss = 0.197745 (* 1 = 0.197745 loss)
I0426 20:50:02.569478 31671 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:02.689556 31671 solver.cpp:219] Iteration 300 (832.712 iter/s, 0.12009s/100 iters), loss = 0.190717
I0426 20:50:02.689582 31671 solver.cpp:238]     Train net output #0: loss = 0.190717 (* 1 = 0.190717 loss)
I0426 20:50:02.689605 31671 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:02.817356 31671 solver.cpp:219] Iteration 400 (782.703 iter/s, 0.127762s/100 iters), loss = 0.0970771
I0426 20:50:02.817399 31671 solver.cpp:238]     Train net output #0: loss = 0.0970771 (* 1 = 0.0970771 loss)
I0426 20:50:02.817405 31671 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:02.937233 31671 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:03.010418 31678 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:03.011260 31671 solver.cpp:398]     Test net output #0: accuracy = 0.9582
I0426 20:50:03.011278 31671 solver.cpp:398]     Test net output #1: loss = 0.132599 (* 1 = 0.132599 loss)
I0426 20:50:03.012447 31671 solver.cpp:219] Iteration 500 (512.729 iter/s, 0.195035s/100 iters), loss = 0.29974
I0426 20:50:03.012471 31671 solver.cpp:238]     Train net output #0: loss = 0.29974 (* 1 = 0.29974 loss)
I0426 20:50:03.012496 31671 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:03.144117 31671 solver.cpp:219] Iteration 600 (759.723 iter/s, 0.131627s/100 iters), loss = 0.0939047
I0426 20:50:03.144174 31671 solver.cpp:238]     Train net output #0: loss = 0.0939048 (* 1 = 0.0939048 loss)
I0426 20:50:03.144217 31671 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:03.267582 31671 solver.cpp:219] Iteration 700 (810.338 iter/s, 0.123405s/100 iters), loss = 0.196341
I0426 20:50:03.267629 31671 solver.cpp:238]     Train net output #0: loss = 0.196341 (* 1 = 0.196341 loss)
I0426 20:50:03.267652 31671 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:03.389036 31671 solver.cpp:219] Iteration 800 (823.666 iter/s, 0.121409s/100 iters), loss = 0.232728
I0426 20:50:03.389081 31671 solver.cpp:238]     Train net output #0: loss = 0.232728 (* 1 = 0.232728 loss)
I0426 20:50:03.389096 31671 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:03.511610 31671 solver.cpp:219] Iteration 900 (816.128 iter/s, 0.12253s/100 iters), loss = 0.152081
I0426 20:50:03.511657 31671 solver.cpp:238]     Train net output #0: loss = 0.152081 (* 1 = 0.152081 loss)
I0426 20:50:03.511672 31671 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:03.552325 31677 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:03.633183 31671 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:03.647946 31671 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:03.654806 31671 solver.cpp:311] Iteration 1000, loss = 0.148096
I0426 20:50:03.654830 31671 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:03.728863 31678 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:03.729840 31671 solver.cpp:398]     Test net output #0: accuracy = 0.9709
I0426 20:50:03.729871 31671 solver.cpp:398]     Test net output #1: loss = 0.0893831 (* 1 = 0.0893831 loss)
I0426 20:50:03.729883 31671 solver.cpp:316] Optimization Done.
I0426 20:50:03.729890 31671 caffe.cpp:259] Optimization Done.
