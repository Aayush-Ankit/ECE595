I0426 20:50:06.557816 31687 caffe.cpp:218] Using GPUs 0
I0426 20:50:06.587191 31687 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:07.033413 31687 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test52.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:07.033550 31687 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test52.prototxt
I0426 20:50:07.033848 31687 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:07.033874 31687 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:07.033987 31687 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:07.034056 31687 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:07.034147 31687 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:07.034167 31687 net.cpp:86] Creating Layer mnist
I0426 20:50:07.034173 31687 net.cpp:382] mnist -> data
I0426 20:50:07.034190 31687 net.cpp:382] mnist -> label
I0426 20:50:07.035156 31687 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:07.037506 31687 net.cpp:124] Setting up mnist
I0426 20:50:07.037519 31687 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:07.037523 31687 net.cpp:131] Top shape: 64 (64)
I0426 20:50:07.037526 31687 net.cpp:139] Memory required for data: 200960
I0426 20:50:07.037531 31687 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:07.037544 31687 net.cpp:86] Creating Layer conv0
I0426 20:50:07.037564 31687 net.cpp:408] conv0 <- data
I0426 20:50:07.037573 31687 net.cpp:382] conv0 -> conv0
I0426 20:50:07.261662 31687 net.cpp:124] Setting up conv0
I0426 20:50:07.261703 31687 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:50:07.261708 31687 net.cpp:139] Memory required for data: 7573760
I0426 20:50:07.261721 31687 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:07.261734 31687 net.cpp:86] Creating Layer pool0
I0426 20:50:07.261771 31687 net.cpp:408] pool0 <- conv0
I0426 20:50:07.261777 31687 net.cpp:382] pool0 -> pool0
I0426 20:50:07.261823 31687 net.cpp:124] Setting up pool0
I0426 20:50:07.261831 31687 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:50:07.261834 31687 net.cpp:139] Memory required for data: 9416960
I0426 20:50:07.261837 31687 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:07.261844 31687 net.cpp:86] Creating Layer ip1
I0426 20:50:07.261847 31687 net.cpp:408] ip1 <- pool0
I0426 20:50:07.261868 31687 net.cpp:382] ip1 -> ip1
I0426 20:50:07.275082 31687 net.cpp:124] Setting up ip1
I0426 20:50:07.275110 31687 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:07.275115 31687 net.cpp:139] Memory required for data: 9493760
I0426 20:50:07.275122 31687 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:07.275130 31687 net.cpp:86] Creating Layer relu1
I0426 20:50:07.275133 31687 net.cpp:408] relu1 <- ip1
I0426 20:50:07.275137 31687 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:07.275351 31687 net.cpp:124] Setting up relu1
I0426 20:50:07.275359 31687 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:50:07.275362 31687 net.cpp:139] Memory required for data: 9570560
I0426 20:50:07.275365 31687 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:07.275372 31687 net.cpp:86] Creating Layer ip2
I0426 20:50:07.275375 31687 net.cpp:408] ip2 <- ip1
I0426 20:50:07.275379 31687 net.cpp:382] ip2 -> ip2
I0426 20:50:07.275634 31687 net.cpp:124] Setting up ip2
I0426 20:50:07.275640 31687 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:07.275643 31687 net.cpp:139] Memory required for data: 9596160
I0426 20:50:07.275650 31687 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:07.275655 31687 net.cpp:86] Creating Layer relu2
I0426 20:50:07.275658 31687 net.cpp:408] relu2 <- ip2
I0426 20:50:07.275662 31687 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:07.276502 31687 net.cpp:124] Setting up relu2
I0426 20:50:07.276513 31687 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:07.276532 31687 net.cpp:139] Memory required for data: 9621760
I0426 20:50:07.276536 31687 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:07.276542 31687 net.cpp:86] Creating Layer ip3
I0426 20:50:07.276546 31687 net.cpp:408] ip3 <- ip2
I0426 20:50:07.276551 31687 net.cpp:382] ip3 -> ip3
I0426 20:50:07.276664 31687 net.cpp:124] Setting up ip3
I0426 20:50:07.276671 31687 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:07.276674 31687 net.cpp:139] Memory required for data: 9624320
I0426 20:50:07.276679 31687 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:07.276685 31687 net.cpp:86] Creating Layer relu3
I0426 20:50:07.276688 31687 net.cpp:408] relu3 <- ip3
I0426 20:50:07.276692 31687 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:07.276863 31687 net.cpp:124] Setting up relu3
I0426 20:50:07.276872 31687 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:07.276875 31687 net.cpp:139] Memory required for data: 9626880
I0426 20:50:07.276878 31687 layer_factory.hpp:77] Creating layer loss
I0426 20:50:07.276883 31687 net.cpp:86] Creating Layer loss
I0426 20:50:07.276886 31687 net.cpp:408] loss <- ip3
I0426 20:50:07.276890 31687 net.cpp:408] loss <- label
I0426 20:50:07.276895 31687 net.cpp:382] loss -> loss
I0426 20:50:07.276913 31687 layer_factory.hpp:77] Creating layer loss
I0426 20:50:07.277150 31687 net.cpp:124] Setting up loss
I0426 20:50:07.277159 31687 net.cpp:131] Top shape: (1)
I0426 20:50:07.277163 31687 net.cpp:134]     with loss weight 1
I0426 20:50:07.277179 31687 net.cpp:139] Memory required for data: 9626884
I0426 20:50:07.277182 31687 net.cpp:200] loss needs backward computation.
I0426 20:50:07.277186 31687 net.cpp:200] relu3 needs backward computation.
I0426 20:50:07.277189 31687 net.cpp:200] ip3 needs backward computation.
I0426 20:50:07.277192 31687 net.cpp:200] relu2 needs backward computation.
I0426 20:50:07.277195 31687 net.cpp:200] ip2 needs backward computation.
I0426 20:50:07.277199 31687 net.cpp:200] relu1 needs backward computation.
I0426 20:50:07.277201 31687 net.cpp:200] ip1 needs backward computation.
I0426 20:50:07.277215 31687 net.cpp:200] pool0 needs backward computation.
I0426 20:50:07.277218 31687 net.cpp:200] conv0 needs backward computation.
I0426 20:50:07.277221 31687 net.cpp:202] mnist does not need backward computation.
I0426 20:50:07.277225 31687 net.cpp:244] This network produces output loss
I0426 20:50:07.277232 31687 net.cpp:257] Network initialization done.
I0426 20:50:07.277535 31687 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test52.prototxt
I0426 20:50:07.277575 31687 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:07.277668 31687 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:07.277730 31687 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:07.277775 31687 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:07.277786 31687 net.cpp:86] Creating Layer mnist
I0426 20:50:07.277791 31687 net.cpp:382] mnist -> data
I0426 20:50:07.277797 31687 net.cpp:382] mnist -> label
I0426 20:50:07.277879 31687 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:07.279850 31687 net.cpp:124] Setting up mnist
I0426 20:50:07.279877 31687 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:07.279882 31687 net.cpp:131] Top shape: 100 (100)
I0426 20:50:07.279886 31687 net.cpp:139] Memory required for data: 314000
I0426 20:50:07.279889 31687 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:07.279932 31687 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:07.279937 31687 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:07.279942 31687 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:07.279948 31687 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:07.280052 31687 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:07.280059 31687 net.cpp:131] Top shape: 100 (100)
I0426 20:50:07.280063 31687 net.cpp:131] Top shape: 100 (100)
I0426 20:50:07.280066 31687 net.cpp:139] Memory required for data: 314800
I0426 20:50:07.280079 31687 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:07.280088 31687 net.cpp:86] Creating Layer conv0
I0426 20:50:07.280092 31687 net.cpp:408] conv0 <- data
I0426 20:50:07.280097 31687 net.cpp:382] conv0 -> conv0
I0426 20:50:07.281781 31687 net.cpp:124] Setting up conv0
I0426 20:50:07.281795 31687 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:50:07.281798 31687 net.cpp:139] Memory required for data: 11834800
I0426 20:50:07.281807 31687 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:07.281828 31687 net.cpp:86] Creating Layer pool0
I0426 20:50:07.281831 31687 net.cpp:408] pool0 <- conv0
I0426 20:50:07.281850 31687 net.cpp:382] pool0 -> pool0
I0426 20:50:07.281883 31687 net.cpp:124] Setting up pool0
I0426 20:50:07.281890 31687 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:50:07.281893 31687 net.cpp:139] Memory required for data: 14714800
I0426 20:50:07.281895 31687 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:07.281901 31687 net.cpp:86] Creating Layer ip1
I0426 20:50:07.281920 31687 net.cpp:408] ip1 <- pool0
I0426 20:50:07.281924 31687 net.cpp:382] ip1 -> ip1
I0426 20:50:07.296056 31687 net.cpp:124] Setting up ip1
I0426 20:50:07.296085 31687 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:07.296089 31687 net.cpp:139] Memory required for data: 14834800
I0426 20:50:07.296113 31687 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:07.296118 31687 net.cpp:86] Creating Layer relu1
I0426 20:50:07.296123 31687 net.cpp:408] relu1 <- ip1
I0426 20:50:07.296126 31687 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:07.296324 31687 net.cpp:124] Setting up relu1
I0426 20:50:07.296332 31687 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:50:07.296335 31687 net.cpp:139] Memory required for data: 14954800
I0426 20:50:07.296339 31687 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:07.296345 31687 net.cpp:86] Creating Layer ip2
I0426 20:50:07.296349 31687 net.cpp:408] ip2 <- ip1
I0426 20:50:07.296355 31687 net.cpp:382] ip2 -> ip2
I0426 20:50:07.296655 31687 net.cpp:124] Setting up ip2
I0426 20:50:07.296676 31687 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:07.296679 31687 net.cpp:139] Memory required for data: 14994800
I0426 20:50:07.296702 31687 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:07.296707 31687 net.cpp:86] Creating Layer relu2
I0426 20:50:07.296710 31687 net.cpp:408] relu2 <- ip2
I0426 20:50:07.296715 31687 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:07.297644 31687 net.cpp:124] Setting up relu2
I0426 20:50:07.297655 31687 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:07.297674 31687 net.cpp:139] Memory required for data: 15034800
I0426 20:50:07.297677 31687 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:07.297685 31687 net.cpp:86] Creating Layer ip3
I0426 20:50:07.297688 31687 net.cpp:408] ip3 <- ip2
I0426 20:50:07.297693 31687 net.cpp:382] ip3 -> ip3
I0426 20:50:07.297827 31687 net.cpp:124] Setting up ip3
I0426 20:50:07.297834 31687 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:07.297837 31687 net.cpp:139] Memory required for data: 15038800
I0426 20:50:07.297843 31687 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:07.297847 31687 net.cpp:86] Creating Layer relu3
I0426 20:50:07.297850 31687 net.cpp:408] relu3 <- ip3
I0426 20:50:07.297854 31687 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:07.298024 31687 net.cpp:124] Setting up relu3
I0426 20:50:07.298033 31687 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:07.298038 31687 net.cpp:139] Memory required for data: 15042800
I0426 20:50:07.298041 31687 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:07.298045 31687 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:07.298049 31687 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:07.298053 31687 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:07.298059 31687 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:07.298094 31687 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:07.298099 31687 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:07.298115 31687 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:07.298117 31687 net.cpp:139] Memory required for data: 15050800
I0426 20:50:07.298120 31687 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:07.298125 31687 net.cpp:86] Creating Layer accuracy
I0426 20:50:07.298128 31687 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:07.298132 31687 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:07.298138 31687 net.cpp:382] accuracy -> accuracy
I0426 20:50:07.298146 31687 net.cpp:124] Setting up accuracy
I0426 20:50:07.298149 31687 net.cpp:131] Top shape: (1)
I0426 20:50:07.298151 31687 net.cpp:139] Memory required for data: 15050804
I0426 20:50:07.298154 31687 layer_factory.hpp:77] Creating layer loss
I0426 20:50:07.298159 31687 net.cpp:86] Creating Layer loss
I0426 20:50:07.298162 31687 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:07.298166 31687 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:07.298172 31687 net.cpp:382] loss -> loss
I0426 20:50:07.298178 31687 layer_factory.hpp:77] Creating layer loss
I0426 20:50:07.298449 31687 net.cpp:124] Setting up loss
I0426 20:50:07.298473 31687 net.cpp:131] Top shape: (1)
I0426 20:50:07.298476 31687 net.cpp:134]     with loss weight 1
I0426 20:50:07.298499 31687 net.cpp:139] Memory required for data: 15050808
I0426 20:50:07.298503 31687 net.cpp:200] loss needs backward computation.
I0426 20:50:07.298526 31687 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:07.298529 31687 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:07.298547 31687 net.cpp:200] relu3 needs backward computation.
I0426 20:50:07.298550 31687 net.cpp:200] ip3 needs backward computation.
I0426 20:50:07.298553 31687 net.cpp:200] relu2 needs backward computation.
I0426 20:50:07.298557 31687 net.cpp:200] ip2 needs backward computation.
I0426 20:50:07.298558 31687 net.cpp:200] relu1 needs backward computation.
I0426 20:50:07.298562 31687 net.cpp:200] ip1 needs backward computation.
I0426 20:50:07.298564 31687 net.cpp:200] pool0 needs backward computation.
I0426 20:50:07.298568 31687 net.cpp:200] conv0 needs backward computation.
I0426 20:50:07.298571 31687 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:07.298574 31687 net.cpp:202] mnist does not need backward computation.
I0426 20:50:07.298578 31687 net.cpp:244] This network produces output accuracy
I0426 20:50:07.298580 31687 net.cpp:244] This network produces output loss
I0426 20:50:07.298593 31687 net.cpp:257] Network initialization done.
I0426 20:50:07.298635 31687 solver.cpp:56] Solver scaffolding done.
I0426 20:50:07.298924 31687 caffe.cpp:248] Starting Optimization
I0426 20:50:07.298930 31687 solver.cpp:273] Solving LeNet
I0426 20:50:07.298944 31687 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:07.301002 31687 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:07.376044 31694 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:07.377158 31687 solver.cpp:398]     Test net output #0: accuracy = 0.1299
I0426 20:50:07.377193 31687 solver.cpp:398]     Test net output #1: loss = 2.2884 (* 1 = 2.2884 loss)
I0426 20:50:07.380450 31687 solver.cpp:219] Iteration 0 (-1.57601e-30 iter/s, 0.0814684s/100 iters), loss = 2.3104
I0426 20:50:07.380472 31687 solver.cpp:238]     Train net output #0: loss = 2.3104 (* 1 = 2.3104 loss)
I0426 20:50:07.380497 31687 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:07.532552 31687 solver.cpp:219] Iteration 100 (657.617 iter/s, 0.152064s/100 iters), loss = 0.320941
I0426 20:50:07.532575 31687 solver.cpp:238]     Train net output #0: loss = 0.320941 (* 1 = 0.320941 loss)
I0426 20:50:07.532582 31687 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:07.687139 31687 solver.cpp:219] Iteration 200 (647.03 iter/s, 0.154552s/100 iters), loss = 0.209572
I0426 20:50:07.687180 31687 solver.cpp:238]     Train net output #0: loss = 0.209572 (* 1 = 0.209572 loss)
I0426 20:50:07.687186 31687 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:07.837388 31687 solver.cpp:219] Iteration 300 (665.732 iter/s, 0.150211s/100 iters), loss = 0.207945
I0426 20:50:07.837441 31687 solver.cpp:238]     Train net output #0: loss = 0.207945 (* 1 = 0.207945 loss)
I0426 20:50:07.837450 31687 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:07.987543 31687 solver.cpp:219] Iteration 400 (666.268 iter/s, 0.15009s/100 iters), loss = 0.113118
I0426 20:50:07.987586 31687 solver.cpp:238]     Train net output #0: loss = 0.113118 (* 1 = 0.113118 loss)
I0426 20:50:07.987593 31687 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:08.136505 31687 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:08.209821 31694 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:08.212282 31687 solver.cpp:398]     Test net output #0: accuracy = 0.9603
I0426 20:50:08.212302 31687 solver.cpp:398]     Test net output #1: loss = 0.124698 (* 1 = 0.124698 loss)
I0426 20:50:08.213541 31687 solver.cpp:219] Iteration 500 (442.564 iter/s, 0.225956s/100 iters), loss = 0.272867
I0426 20:50:08.213564 31687 solver.cpp:238]     Train net output #0: loss = 0.272867 (* 1 = 0.272867 loss)
I0426 20:50:08.213588 31687 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:08.368746 31687 solver.cpp:219] Iteration 600 (644.46 iter/s, 0.155169s/100 iters), loss = 0.101576
I0426 20:50:08.368788 31687 solver.cpp:238]     Train net output #0: loss = 0.101576 (* 1 = 0.101576 loss)
I0426 20:50:08.368796 31687 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:08.517516 31687 solver.cpp:219] Iteration 700 (672.425 iter/s, 0.148716s/100 iters), loss = 0.242365
I0426 20:50:08.517544 31687 solver.cpp:238]     Train net output #0: loss = 0.242365 (* 1 = 0.242365 loss)
I0426 20:50:08.517565 31687 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:08.666522 31687 solver.cpp:219] Iteration 800 (671.292 iter/s, 0.148967s/100 iters), loss = 0.249578
I0426 20:50:08.666563 31687 solver.cpp:238]     Train net output #0: loss = 0.249578 (* 1 = 0.249578 loss)
I0426 20:50:08.666570 31687 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:08.816978 31687 solver.cpp:219] Iteration 900 (664.885 iter/s, 0.150402s/100 iters), loss = 0.168179
I0426 20:50:08.817019 31687 solver.cpp:238]     Train net output #0: loss = 0.168179 (* 1 = 0.168179 loss)
I0426 20:50:08.817026 31687 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:08.867147 31693 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:08.964762 31687 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:09.000974 31687 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:09.014662 31687 solver.cpp:311] Iteration 1000, loss = 0.089048
I0426 20:50:09.014688 31687 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:09.018502 31687 blocking_queue.cpp:49] Waiting for data
I0426 20:50:09.094197 31694 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:09.095191 31687 solver.cpp:398]     Test net output #0: accuracy = 0.9749
I0426 20:50:09.095214 31687 solver.cpp:398]     Test net output #1: loss = 0.0818475 (* 1 = 0.0818475 loss)
I0426 20:50:09.095221 31687 solver.cpp:316] Optimization Done.
I0426 20:50:09.095224 31687 caffe.cpp:259] Optimization Done.
