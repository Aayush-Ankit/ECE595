I0426 20:53:53.500670 32563 caffe.cpp:218] Using GPUs 0
I0426 20:53:53.536051 32563 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:54.060053 32563 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test147.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:54.060211 32563 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test147.prototxt
I0426 20:53:54.060649 32563 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:54.060670 32563 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:54.060796 32563 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:54.060914 32563 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:54.061044 32563 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:54.061080 32563 net.cpp:86] Creating Layer mnist
I0426 20:53:54.061092 32563 net.cpp:382] mnist -> data
I0426 20:53:54.061125 32563 net.cpp:382] mnist -> label
I0426 20:53:54.062467 32563 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:54.065026 32563 net.cpp:124] Setting up mnist
I0426 20:53:54.065042 32563 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:54.065050 32563 net.cpp:131] Top shape: 64 (64)
I0426 20:53:54.065053 32563 net.cpp:139] Memory required for data: 200960
I0426 20:53:54.065060 32563 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:54.065076 32563 net.cpp:86] Creating Layer conv0
I0426 20:53:54.065102 32563 net.cpp:408] conv0 <- data
I0426 20:53:54.065122 32563 net.cpp:382] conv0 -> conv0
I0426 20:53:54.359715 32563 net.cpp:124] Setting up conv0
I0426 20:53:54.359747 32563 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:53:54.359752 32563 net.cpp:139] Memory required for data: 7573760
I0426 20:53:54.359771 32563 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:54.359786 32563 net.cpp:86] Creating Layer pool0
I0426 20:53:54.359791 32563 net.cpp:408] pool0 <- conv0
I0426 20:53:54.359797 32563 net.cpp:382] pool0 -> pool0
I0426 20:53:54.359871 32563 net.cpp:124] Setting up pool0
I0426 20:53:54.359887 32563 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:53:54.359894 32563 net.cpp:139] Memory required for data: 9416960
I0426 20:53:54.359900 32563 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:54.359918 32563 net.cpp:86] Creating Layer conv1
I0426 20:53:54.359925 32563 net.cpp:408] conv1 <- pool0
I0426 20:53:54.359935 32563 net.cpp:382] conv1 -> conv1
I0426 20:53:54.363320 32563 net.cpp:124] Setting up conv1
I0426 20:53:54.363339 32563 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:53:54.363343 32563 net.cpp:139] Memory required for data: 9580800
I0426 20:53:54.363354 32563 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:54.363363 32563 net.cpp:86] Creating Layer pool1
I0426 20:53:54.363368 32563 net.cpp:408] pool1 <- conv1
I0426 20:53:54.363373 32563 net.cpp:382] pool1 -> pool1
I0426 20:53:54.363432 32563 net.cpp:124] Setting up pool1
I0426 20:53:54.363445 32563 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:53:54.363452 32563 net.cpp:139] Memory required for data: 9621760
I0426 20:53:54.363458 32563 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:54.363471 32563 net.cpp:86] Creating Layer ip1
I0426 20:53:54.363477 32563 net.cpp:408] ip1 <- pool1
I0426 20:53:54.363487 32563 net.cpp:382] ip1 -> ip1
I0426 20:53:54.363731 32563 net.cpp:124] Setting up ip1
I0426 20:53:54.363744 32563 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:54.363747 32563 net.cpp:139] Memory required for data: 9647360
I0426 20:53:54.363759 32563 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:54.363770 32563 net.cpp:86] Creating Layer relu1
I0426 20:53:54.363777 32563 net.cpp:408] relu1 <- ip1
I0426 20:53:54.363786 32563 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:54.364003 32563 net.cpp:124] Setting up relu1
I0426 20:53:54.364015 32563 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:54.364019 32563 net.cpp:139] Memory required for data: 9672960
I0426 20:53:54.364024 32563 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:54.364037 32563 net.cpp:86] Creating Layer ip2
I0426 20:53:54.364044 32563 net.cpp:408] ip2 <- ip1
I0426 20:53:54.364054 32563 net.cpp:382] ip2 -> ip2
I0426 20:53:54.364241 32563 net.cpp:124] Setting up ip2
I0426 20:53:54.364251 32563 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:54.364255 32563 net.cpp:139] Memory required for data: 9698560
I0426 20:53:54.364265 32563 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:54.364276 32563 net.cpp:86] Creating Layer relu2
I0426 20:53:54.364284 32563 net.cpp:408] relu2 <- ip2
I0426 20:53:54.364292 32563 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:54.365253 32563 net.cpp:124] Setting up relu2
I0426 20:53:54.365269 32563 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:54.365274 32563 net.cpp:139] Memory required for data: 9724160
I0426 20:53:54.365280 32563 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:54.365293 32563 net.cpp:86] Creating Layer ip3
I0426 20:53:54.365299 32563 net.cpp:408] ip3 <- ip2
I0426 20:53:54.365309 32563 net.cpp:382] ip3 -> ip3
I0426 20:53:54.365449 32563 net.cpp:124] Setting up ip3
I0426 20:53:54.365461 32563 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:54.365465 32563 net.cpp:139] Memory required for data: 9726720
I0426 20:53:54.365479 32563 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:54.365489 32563 net.cpp:86] Creating Layer relu3
I0426 20:53:54.365496 32563 net.cpp:408] relu3 <- ip3
I0426 20:53:54.365505 32563 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:54.365721 32563 net.cpp:124] Setting up relu3
I0426 20:53:54.365733 32563 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:54.365737 32563 net.cpp:139] Memory required for data: 9729280
I0426 20:53:54.365742 32563 layer_factory.hpp:77] Creating layer loss
I0426 20:53:54.365752 32563 net.cpp:86] Creating Layer loss
I0426 20:53:54.365759 32563 net.cpp:408] loss <- ip3
I0426 20:53:54.365767 32563 net.cpp:408] loss <- label
I0426 20:53:54.365777 32563 net.cpp:382] loss -> loss
I0426 20:53:54.365806 32563 layer_factory.hpp:77] Creating layer loss
I0426 20:53:54.366094 32563 net.cpp:124] Setting up loss
I0426 20:53:54.366106 32563 net.cpp:131] Top shape: (1)
I0426 20:53:54.366111 32563 net.cpp:134]     with loss weight 1
I0426 20:53:54.366137 32563 net.cpp:139] Memory required for data: 9729284
I0426 20:53:54.366143 32563 net.cpp:200] loss needs backward computation.
I0426 20:53:54.366152 32563 net.cpp:200] relu3 needs backward computation.
I0426 20:53:54.366158 32563 net.cpp:200] ip3 needs backward computation.
I0426 20:53:54.366164 32563 net.cpp:200] relu2 needs backward computation.
I0426 20:53:54.366170 32563 net.cpp:200] ip2 needs backward computation.
I0426 20:53:54.366176 32563 net.cpp:200] relu1 needs backward computation.
I0426 20:53:54.366183 32563 net.cpp:200] ip1 needs backward computation.
I0426 20:53:54.366189 32563 net.cpp:200] pool1 needs backward computation.
I0426 20:53:54.366195 32563 net.cpp:200] conv1 needs backward computation.
I0426 20:53:54.366201 32563 net.cpp:200] pool0 needs backward computation.
I0426 20:53:54.366209 32563 net.cpp:200] conv0 needs backward computation.
I0426 20:53:54.366214 32563 net.cpp:202] mnist does not need backward computation.
I0426 20:53:54.366221 32563 net.cpp:244] This network produces output loss
I0426 20:53:54.366238 32563 net.cpp:257] Network initialization done.
I0426 20:53:54.366634 32563 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test147.prototxt
I0426 20:53:54.366677 32563 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:54.366797 32563 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:54.366930 32563 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:54.367002 32563 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:54.367023 32563 net.cpp:86] Creating Layer mnist
I0426 20:53:54.367033 32563 net.cpp:382] mnist -> data
I0426 20:53:54.367048 32563 net.cpp:382] mnist -> label
I0426 20:53:54.367192 32563 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:54.369735 32563 net.cpp:124] Setting up mnist
I0426 20:53:54.369751 32563 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:54.369757 32563 net.cpp:131] Top shape: 100 (100)
I0426 20:53:54.369760 32563 net.cpp:139] Memory required for data: 314000
I0426 20:53:54.369765 32563 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:54.369776 32563 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:54.369781 32563 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:54.369787 32563 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:54.369796 32563 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:54.369915 32563 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:54.369926 32563 net.cpp:131] Top shape: 100 (100)
I0426 20:53:54.369931 32563 net.cpp:131] Top shape: 100 (100)
I0426 20:53:54.369936 32563 net.cpp:139] Memory required for data: 314800
I0426 20:53:54.369942 32563 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:54.369958 32563 net.cpp:86] Creating Layer conv0
I0426 20:53:54.369966 32563 net.cpp:408] conv0 <- data
I0426 20:53:54.369976 32563 net.cpp:382] conv0 -> conv0
I0426 20:53:54.371800 32563 net.cpp:124] Setting up conv0
I0426 20:53:54.371817 32563 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:53:54.371821 32563 net.cpp:139] Memory required for data: 11834800
I0426 20:53:54.371832 32563 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:54.371840 32563 net.cpp:86] Creating Layer pool0
I0426 20:53:54.371843 32563 net.cpp:408] pool0 <- conv0
I0426 20:53:54.371850 32563 net.cpp:382] pool0 -> pool0
I0426 20:53:54.371906 32563 net.cpp:124] Setting up pool0
I0426 20:53:54.371918 32563 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:53:54.371925 32563 net.cpp:139] Memory required for data: 14714800
I0426 20:53:54.371932 32563 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:54.371947 32563 net.cpp:86] Creating Layer conv1
I0426 20:53:54.371954 32563 net.cpp:408] conv1 <- pool0
I0426 20:53:54.371964 32563 net.cpp:382] conv1 -> conv1
I0426 20:53:54.373934 32563 net.cpp:124] Setting up conv1
I0426 20:53:54.373950 32563 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:53:54.373955 32563 net.cpp:139] Memory required for data: 14970800
I0426 20:53:54.373966 32563 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:54.373973 32563 net.cpp:86] Creating Layer pool1
I0426 20:53:54.373977 32563 net.cpp:408] pool1 <- conv1
I0426 20:53:54.373986 32563 net.cpp:382] pool1 -> pool1
I0426 20:53:54.374044 32563 net.cpp:124] Setting up pool1
I0426 20:53:54.374071 32563 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:53:54.374078 32563 net.cpp:139] Memory required for data: 15034800
I0426 20:53:54.374084 32563 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:54.374095 32563 net.cpp:86] Creating Layer ip1
I0426 20:53:54.374102 32563 net.cpp:408] ip1 <- pool1
I0426 20:53:54.374114 32563 net.cpp:382] ip1 -> ip1
I0426 20:53:54.374358 32563 net.cpp:124] Setting up ip1
I0426 20:53:54.374369 32563 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:54.374390 32563 net.cpp:139] Memory required for data: 15074800
I0426 20:53:54.374405 32563 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:54.374419 32563 net.cpp:86] Creating Layer relu1
I0426 20:53:54.374426 32563 net.cpp:408] relu1 <- ip1
I0426 20:53:54.374444 32563 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:54.374646 32563 net.cpp:124] Setting up relu1
I0426 20:53:54.374658 32563 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:54.374662 32563 net.cpp:139] Memory required for data: 15114800
I0426 20:53:54.374668 32563 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:54.374682 32563 net.cpp:86] Creating Layer ip2
I0426 20:53:54.374689 32563 net.cpp:408] ip2 <- ip1
I0426 20:53:54.374699 32563 net.cpp:382] ip2 -> ip2
I0426 20:53:54.374914 32563 net.cpp:124] Setting up ip2
I0426 20:53:54.374924 32563 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:54.374928 32563 net.cpp:139] Memory required for data: 15154800
I0426 20:53:54.374938 32563 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:54.374948 32563 net.cpp:86] Creating Layer relu2
I0426 20:53:54.374954 32563 net.cpp:408] relu2 <- ip2
I0426 20:53:54.374963 32563 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:54.375178 32563 net.cpp:124] Setting up relu2
I0426 20:53:54.375190 32563 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:54.375195 32563 net.cpp:139] Memory required for data: 15194800
I0426 20:53:54.375200 32563 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:54.375211 32563 net.cpp:86] Creating Layer ip3
I0426 20:53:54.375216 32563 net.cpp:408] ip3 <- ip2
I0426 20:53:54.375228 32563 net.cpp:382] ip3 -> ip3
I0426 20:53:54.375372 32563 net.cpp:124] Setting up ip3
I0426 20:53:54.375382 32563 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:54.375386 32563 net.cpp:139] Memory required for data: 15198800
I0426 20:53:54.375401 32563 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:54.375411 32563 net.cpp:86] Creating Layer relu3
I0426 20:53:54.375417 32563 net.cpp:408] relu3 <- ip3
I0426 20:53:54.375427 32563 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:54.376454 32563 net.cpp:124] Setting up relu3
I0426 20:53:54.376469 32563 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:54.376473 32563 net.cpp:139] Memory required for data: 15202800
I0426 20:53:54.376479 32563 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:53:54.376488 32563 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:53:54.376495 32563 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:53:54.376507 32563 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:53:54.376518 32563 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:53:54.376577 32563 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:53:54.376587 32563 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:54.376595 32563 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:54.376600 32563 net.cpp:139] Memory required for data: 15210800
I0426 20:53:54.376605 32563 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:54.376617 32563 net.cpp:86] Creating Layer accuracy
I0426 20:53:54.376624 32563 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:53:54.376632 32563 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:54.376643 32563 net.cpp:382] accuracy -> accuracy
I0426 20:53:54.376658 32563 net.cpp:124] Setting up accuracy
I0426 20:53:54.376667 32563 net.cpp:131] Top shape: (1)
I0426 20:53:54.376673 32563 net.cpp:139] Memory required for data: 15210804
I0426 20:53:54.376684 32563 layer_factory.hpp:77] Creating layer loss
I0426 20:53:54.376693 32563 net.cpp:86] Creating Layer loss
I0426 20:53:54.376699 32563 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:53:54.376708 32563 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:54.376716 32563 net.cpp:382] loss -> loss
I0426 20:53:54.376729 32563 layer_factory.hpp:77] Creating layer loss
I0426 20:53:54.377043 32563 net.cpp:124] Setting up loss
I0426 20:53:54.377056 32563 net.cpp:131] Top shape: (1)
I0426 20:53:54.377060 32563 net.cpp:134]     with loss weight 1
I0426 20:53:54.377086 32563 net.cpp:139] Memory required for data: 15210808
I0426 20:53:54.377094 32563 net.cpp:200] loss needs backward computation.
I0426 20:53:54.377101 32563 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:54.377109 32563 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:53:54.377115 32563 net.cpp:200] relu3 needs backward computation.
I0426 20:53:54.377121 32563 net.cpp:200] ip3 needs backward computation.
I0426 20:53:54.377132 32563 net.cpp:200] relu2 needs backward computation.
I0426 20:53:54.377137 32563 net.cpp:200] ip2 needs backward computation.
I0426 20:53:54.377143 32563 net.cpp:200] relu1 needs backward computation.
I0426 20:53:54.377149 32563 net.cpp:200] ip1 needs backward computation.
I0426 20:53:54.377156 32563 net.cpp:200] pool1 needs backward computation.
I0426 20:53:54.377164 32563 net.cpp:200] conv1 needs backward computation.
I0426 20:53:54.377171 32563 net.cpp:200] pool0 needs backward computation.
I0426 20:53:54.377177 32563 net.cpp:200] conv0 needs backward computation.
I0426 20:53:54.377184 32563 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:54.377192 32563 net.cpp:202] mnist does not need backward computation.
I0426 20:53:54.377199 32563 net.cpp:244] This network produces output accuracy
I0426 20:53:54.377207 32563 net.cpp:244] This network produces output loss
I0426 20:53:54.377228 32563 net.cpp:257] Network initialization done.
I0426 20:53:54.377293 32563 solver.cpp:56] Solver scaffolding done.
I0426 20:53:54.377758 32563 caffe.cpp:248] Starting Optimization
I0426 20:53:54.377766 32563 solver.cpp:273] Solving LeNet
I0426 20:53:54.377770 32563 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:54.378744 32563 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:54.387603 32563 blocking_queue.cpp:49] Waiting for data
I0426 20:53:54.457520 32570 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:54.458669 32563 solver.cpp:398]     Test net output #0: accuracy = 0.0901
I0426 20:53:54.458693 32563 solver.cpp:398]     Test net output #1: loss = 2.35987 (* 1 = 2.35987 loss)
I0426 20:53:54.464018 32563 solver.cpp:219] Iteration 0 (-9.43074e-43 iter/s, 0.0862126s/100 iters), loss = 2.37372
I0426 20:53:54.464048 32563 solver.cpp:238]     Train net output #0: loss = 2.37372 (* 1 = 2.37372 loss)
I0426 20:53:54.464061 32563 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:54.592638 32563 solver.cpp:219] Iteration 100 (777.761 iter/s, 0.128574s/100 iters), loss = 0.897401
I0426 20:53:54.592669 32563 solver.cpp:238]     Train net output #0: loss = 0.897401 (* 1 = 0.897401 loss)
I0426 20:53:54.592675 32563 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:54.723543 32563 solver.cpp:219] Iteration 200 (764.158 iter/s, 0.130863s/100 iters), loss = 0.477167
I0426 20:53:54.723573 32563 solver.cpp:238]     Train net output #0: loss = 0.477167 (* 1 = 0.477167 loss)
I0426 20:53:54.723580 32563 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:54.859520 32563 solver.cpp:219] Iteration 300 (735.679 iter/s, 0.135929s/100 iters), loss = 0.878689
I0426 20:53:54.859568 32563 solver.cpp:238]     Train net output #0: loss = 0.878689 (* 1 = 0.878689 loss)
I0426 20:53:54.859580 32563 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:54.994357 32563 solver.cpp:219] Iteration 400 (741.95 iter/s, 0.13478s/100 iters), loss = 0.592617
I0426 20:53:54.994390 32563 solver.cpp:238]     Train net output #0: loss = 0.592617 (* 1 = 0.592617 loss)
I0426 20:53:54.994397 32563 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:55.127874 32563 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:55.196375 32570 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:55.198279 32563 solver.cpp:398]     Test net output #0: accuracy = 0.7822
I0426 20:53:55.198313 32563 solver.cpp:398]     Test net output #1: loss = 0.546735 (* 1 = 0.546735 loss)
I0426 20:53:55.199544 32563 solver.cpp:219] Iteration 500 (487.47 iter/s, 0.205141s/100 iters), loss = 0.580243
I0426 20:53:55.199597 32563 solver.cpp:238]     Train net output #0: loss = 0.580243 (* 1 = 0.580243 loss)
I0426 20:53:55.199604 32563 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:55.334322 32563 solver.cpp:219] Iteration 600 (742.317 iter/s, 0.134713s/100 iters), loss = 0.539736
I0426 20:53:55.334362 32563 solver.cpp:238]     Train net output #0: loss = 0.539736 (* 1 = 0.539736 loss)
I0426 20:53:55.334367 32563 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:55.472990 32563 solver.cpp:219] Iteration 700 (721.365 iter/s, 0.138626s/100 iters), loss = 0.376073
I0426 20:53:55.473031 32563 solver.cpp:238]     Train net output #0: loss = 0.376073 (* 1 = 0.376073 loss)
I0426 20:53:55.473042 32563 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:55.607046 32563 solver.cpp:219] Iteration 800 (746.237 iter/s, 0.134006s/100 iters), loss = 0.475395
I0426 20:53:55.607075 32563 solver.cpp:238]     Train net output #0: loss = 0.475395 (* 1 = 0.475395 loss)
I0426 20:53:55.607082 32563 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:55.734797 32563 solver.cpp:219] Iteration 900 (783.029 iter/s, 0.127709s/100 iters), loss = 0.231338
I0426 20:53:55.734827 32563 solver.cpp:238]     Train net output #0: loss = 0.231338 (* 1 = 0.231338 loss)
I0426 20:53:55.734833 32563 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:55.778836 32569 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:55.868791 32563 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:55.870311 32563 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:55.871392 32563 solver.cpp:311] Iteration 1000, loss = 0.153717
I0426 20:53:55.871412 32563 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:55.948937 32570 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:55.950004 32563 solver.cpp:398]     Test net output #0: accuracy = 0.9741
I0426 20:53:55.950031 32563 solver.cpp:398]     Test net output #1: loss = 0.0838135 (* 1 = 0.0838135 loss)
I0426 20:53:55.950037 32563 solver.cpp:316] Optimization Done.
I0426 20:53:55.950040 32563 caffe.cpp:259] Optimization Done.
