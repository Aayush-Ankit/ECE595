I0426 20:53:14.066565 32402 caffe.cpp:218] Using GPUs 0
I0426 20:53:14.104658 32402 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:14.573170 32402 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test132.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:14.573384 32402 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test132.prototxt
I0426 20:53:14.573787 32402 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:14.573817 32402 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:14.573915 32402 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:14.574023 32402 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:14.574105 32402 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:14.574125 32402 net.cpp:86] Creating Layer mnist
I0426 20:53:14.574131 32402 net.cpp:382] mnist -> data
I0426 20:53:14.574151 32402 net.cpp:382] mnist -> label
I0426 20:53:14.575143 32402 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:14.577363 32402 net.cpp:124] Setting up mnist
I0426 20:53:14.577392 32402 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:14.577399 32402 net.cpp:131] Top shape: 64 (64)
I0426 20:53:14.577401 32402 net.cpp:139] Memory required for data: 200960
I0426 20:53:14.577407 32402 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:14.577420 32402 net.cpp:86] Creating Layer conv0
I0426 20:53:14.577437 32402 net.cpp:408] conv0 <- data
I0426 20:53:14.577463 32402 net.cpp:382] conv0 -> conv0
I0426 20:53:14.817634 32402 net.cpp:124] Setting up conv0
I0426 20:53:14.817677 32402 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:53:14.817682 32402 net.cpp:139] Memory required for data: 3887360
I0426 20:53:14.817697 32402 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:14.817709 32402 net.cpp:86] Creating Layer pool0
I0426 20:53:14.817729 32402 net.cpp:408] pool0 <- conv0
I0426 20:53:14.817734 32402 net.cpp:382] pool0 -> pool0
I0426 20:53:14.817795 32402 net.cpp:124] Setting up pool0
I0426 20:53:14.817801 32402 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:53:14.817804 32402 net.cpp:139] Memory required for data: 4808960
I0426 20:53:14.817807 32402 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:14.817818 32402 net.cpp:86] Creating Layer conv1
I0426 20:53:14.817821 32402 net.cpp:408] conv1 <- pool0
I0426 20:53:14.817826 32402 net.cpp:382] conv1 -> conv1
I0426 20:53:14.819988 32402 net.cpp:124] Setting up conv1
I0426 20:53:14.820003 32402 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:53:14.820006 32402 net.cpp:139] Memory required for data: 5628160
I0426 20:53:14.820029 32402 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:14.820037 32402 net.cpp:86] Creating Layer pool1
I0426 20:53:14.820040 32402 net.cpp:408] pool1 <- conv1
I0426 20:53:14.820045 32402 net.cpp:382] pool1 -> pool1
I0426 20:53:14.820094 32402 net.cpp:124] Setting up pool1
I0426 20:53:14.820101 32402 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:53:14.820104 32402 net.cpp:139] Memory required for data: 5832960
I0426 20:53:14.820107 32402 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:14.820114 32402 net.cpp:86] Creating Layer ip1
I0426 20:53:14.820117 32402 net.cpp:408] ip1 <- pool1
I0426 20:53:14.820122 32402 net.cpp:382] ip1 -> ip1
I0426 20:53:14.821552 32402 net.cpp:124] Setting up ip1
I0426 20:53:14.821563 32402 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:14.821566 32402 net.cpp:139] Memory required for data: 5858560
I0426 20:53:14.821574 32402 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:14.821580 32402 net.cpp:86] Creating Layer relu1
I0426 20:53:14.821583 32402 net.cpp:408] relu1 <- ip1
I0426 20:53:14.821588 32402 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:14.821776 32402 net.cpp:124] Setting up relu1
I0426 20:53:14.821785 32402 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:14.821789 32402 net.cpp:139] Memory required for data: 5884160
I0426 20:53:14.821791 32402 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:14.821799 32402 net.cpp:86] Creating Layer ip2
I0426 20:53:14.821801 32402 net.cpp:408] ip2 <- ip1
I0426 20:53:14.821806 32402 net.cpp:382] ip2 -> ip2
I0426 20:53:14.822844 32402 net.cpp:124] Setting up ip2
I0426 20:53:14.822855 32402 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:14.822875 32402 net.cpp:139] Memory required for data: 5909760
I0426 20:53:14.822880 32402 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:14.822887 32402 net.cpp:86] Creating Layer relu2
I0426 20:53:14.822890 32402 net.cpp:408] relu2 <- ip2
I0426 20:53:14.822895 32402 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:14.823760 32402 net.cpp:124] Setting up relu2
I0426 20:53:14.823772 32402 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:53:14.823791 32402 net.cpp:139] Memory required for data: 5935360
I0426 20:53:14.823796 32402 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:14.823817 32402 net.cpp:86] Creating Layer ip3
I0426 20:53:14.823819 32402 net.cpp:408] ip3 <- ip2
I0426 20:53:14.823824 32402 net.cpp:382] ip3 -> ip3
I0426 20:53:14.823940 32402 net.cpp:124] Setting up ip3
I0426 20:53:14.823947 32402 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:14.823951 32402 net.cpp:139] Memory required for data: 5937920
I0426 20:53:14.823957 32402 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:14.823962 32402 net.cpp:86] Creating Layer relu3
I0426 20:53:14.823966 32402 net.cpp:408] relu3 <- ip3
I0426 20:53:14.823969 32402 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:14.824144 32402 net.cpp:124] Setting up relu3
I0426 20:53:14.824152 32402 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:14.824156 32402 net.cpp:139] Memory required for data: 5940480
I0426 20:53:14.824158 32402 layer_factory.hpp:77] Creating layer loss
I0426 20:53:14.824164 32402 net.cpp:86] Creating Layer loss
I0426 20:53:14.824168 32402 net.cpp:408] loss <- ip3
I0426 20:53:14.824172 32402 net.cpp:408] loss <- label
I0426 20:53:14.824177 32402 net.cpp:382] loss -> loss
I0426 20:53:14.824194 32402 layer_factory.hpp:77] Creating layer loss
I0426 20:53:14.824445 32402 net.cpp:124] Setting up loss
I0426 20:53:14.824455 32402 net.cpp:131] Top shape: (1)
I0426 20:53:14.824458 32402 net.cpp:134]     with loss weight 1
I0426 20:53:14.824472 32402 net.cpp:139] Memory required for data: 5940484
I0426 20:53:14.824476 32402 net.cpp:200] loss needs backward computation.
I0426 20:53:14.824479 32402 net.cpp:200] relu3 needs backward computation.
I0426 20:53:14.824482 32402 net.cpp:200] ip3 needs backward computation.
I0426 20:53:14.824484 32402 net.cpp:200] relu2 needs backward computation.
I0426 20:53:14.824487 32402 net.cpp:200] ip2 needs backward computation.
I0426 20:53:14.824491 32402 net.cpp:200] relu1 needs backward computation.
I0426 20:53:14.824492 32402 net.cpp:200] ip1 needs backward computation.
I0426 20:53:14.824496 32402 net.cpp:200] pool1 needs backward computation.
I0426 20:53:14.824498 32402 net.cpp:200] conv1 needs backward computation.
I0426 20:53:14.824502 32402 net.cpp:200] pool0 needs backward computation.
I0426 20:53:14.824506 32402 net.cpp:200] conv0 needs backward computation.
I0426 20:53:14.824508 32402 net.cpp:202] mnist does not need backward computation.
I0426 20:53:14.824512 32402 net.cpp:244] This network produces output loss
I0426 20:53:14.824520 32402 net.cpp:257] Network initialization done.
I0426 20:53:14.824877 32402 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test132.prototxt
I0426 20:53:14.824921 32402 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:14.825016 32402 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:53:14.825094 32402 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:14.825170 32402 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:14.825182 32402 net.cpp:86] Creating Layer mnist
I0426 20:53:14.825187 32402 net.cpp:382] mnist -> data
I0426 20:53:14.825196 32402 net.cpp:382] mnist -> label
I0426 20:53:14.825280 32402 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:14.826671 32402 net.cpp:124] Setting up mnist
I0426 20:53:14.826694 32402 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:14.826699 32402 net.cpp:131] Top shape: 100 (100)
I0426 20:53:14.826701 32402 net.cpp:139] Memory required for data: 314000
I0426 20:53:14.826705 32402 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:14.826746 32402 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:14.826750 32402 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:14.826756 32402 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:14.826761 32402 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:14.826800 32402 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:14.826807 32402 net.cpp:131] Top shape: 100 (100)
I0426 20:53:14.826812 32402 net.cpp:131] Top shape: 100 (100)
I0426 20:53:14.826813 32402 net.cpp:139] Memory required for data: 314800
I0426 20:53:14.826817 32402 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:14.826825 32402 net.cpp:86] Creating Layer conv0
I0426 20:53:14.826828 32402 net.cpp:408] conv0 <- data
I0426 20:53:14.826833 32402 net.cpp:382] conv0 -> conv0
I0426 20:53:14.828496 32402 net.cpp:124] Setting up conv0
I0426 20:53:14.828510 32402 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:53:14.828513 32402 net.cpp:139] Memory required for data: 6074800
I0426 20:53:14.828522 32402 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:14.828543 32402 net.cpp:86] Creating Layer pool0
I0426 20:53:14.828547 32402 net.cpp:408] pool0 <- conv0
I0426 20:53:14.828552 32402 net.cpp:382] pool0 -> pool0
I0426 20:53:14.828586 32402 net.cpp:124] Setting up pool0
I0426 20:53:14.828594 32402 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:53:14.828598 32402 net.cpp:139] Memory required for data: 7514800
I0426 20:53:14.828600 32402 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:14.828608 32402 net.cpp:86] Creating Layer conv1
I0426 20:53:14.828611 32402 net.cpp:408] conv1 <- pool0
I0426 20:53:14.828615 32402 net.cpp:382] conv1 -> conv1
I0426 20:53:14.830422 32402 net.cpp:124] Setting up conv1
I0426 20:53:14.830436 32402 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:53:14.830440 32402 net.cpp:139] Memory required for data: 8794800
I0426 20:53:14.830447 32402 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:14.830468 32402 net.cpp:86] Creating Layer pool1
I0426 20:53:14.830472 32402 net.cpp:408] pool1 <- conv1
I0426 20:53:14.830476 32402 net.cpp:382] pool1 -> pool1
I0426 20:53:14.830510 32402 net.cpp:124] Setting up pool1
I0426 20:53:14.830515 32402 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:53:14.830518 32402 net.cpp:139] Memory required for data: 9114800
I0426 20:53:14.830521 32402 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:14.830526 32402 net.cpp:86] Creating Layer ip1
I0426 20:53:14.830529 32402 net.cpp:408] ip1 <- pool1
I0426 20:53:14.830534 32402 net.cpp:382] ip1 -> ip1
I0426 20:53:14.831123 32402 net.cpp:124] Setting up ip1
I0426 20:53:14.831131 32402 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:14.831146 32402 net.cpp:139] Memory required for data: 9154800
I0426 20:53:14.831152 32402 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:14.831157 32402 net.cpp:86] Creating Layer relu1
I0426 20:53:14.831161 32402 net.cpp:408] relu1 <- ip1
I0426 20:53:14.831166 32402 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:14.831317 32402 net.cpp:124] Setting up relu1
I0426 20:53:14.831326 32402 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:14.831331 32402 net.cpp:139] Memory required for data: 9194800
I0426 20:53:14.831333 32402 layer_factory.hpp:77] Creating layer ip2
I0426 20:53:14.831341 32402 net.cpp:86] Creating Layer ip2
I0426 20:53:14.831343 32402 net.cpp:408] ip2 <- ip1
I0426 20:53:14.831348 32402 net.cpp:382] ip2 -> ip2
I0426 20:53:14.831514 32402 net.cpp:124] Setting up ip2
I0426 20:53:14.831521 32402 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:14.831524 32402 net.cpp:139] Memory required for data: 9234800
I0426 20:53:14.831531 32402 layer_factory.hpp:77] Creating layer relu2
I0426 20:53:14.831534 32402 net.cpp:86] Creating Layer relu2
I0426 20:53:14.831538 32402 net.cpp:408] relu2 <- ip2
I0426 20:53:14.831542 32402 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:53:14.831689 32402 net.cpp:124] Setting up relu2
I0426 20:53:14.831697 32402 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:53:14.831701 32402 net.cpp:139] Memory required for data: 9274800
I0426 20:53:14.831703 32402 layer_factory.hpp:77] Creating layer ip3
I0426 20:53:14.831709 32402 net.cpp:86] Creating Layer ip3
I0426 20:53:14.831713 32402 net.cpp:408] ip3 <- ip2
I0426 20:53:14.831718 32402 net.cpp:382] ip3 -> ip3
I0426 20:53:14.831826 32402 net.cpp:124] Setting up ip3
I0426 20:53:14.831833 32402 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:14.831836 32402 net.cpp:139] Memory required for data: 9278800
I0426 20:53:14.831843 32402 layer_factory.hpp:77] Creating layer relu3
I0426 20:53:14.831848 32402 net.cpp:86] Creating Layer relu3
I0426 20:53:14.831851 32402 net.cpp:408] relu3 <- ip3
I0426 20:53:14.831856 32402 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:53:14.832737 32402 net.cpp:124] Setting up relu3
I0426 20:53:14.832751 32402 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:14.832756 32402 net.cpp:139] Memory required for data: 9282800
I0426 20:53:14.832758 32402 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:53:14.832763 32402 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:53:14.832767 32402 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:53:14.832788 32402 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:53:14.832800 32402 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:53:14.832876 32402 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:53:14.832885 32402 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:14.832890 32402 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:14.832892 32402 net.cpp:139] Memory required for data: 9290800
I0426 20:53:14.832895 32402 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:14.832901 32402 net.cpp:86] Creating Layer accuracy
I0426 20:53:14.832904 32402 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:53:14.832909 32402 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:14.832914 32402 net.cpp:382] accuracy -> accuracy
I0426 20:53:14.832927 32402 net.cpp:124] Setting up accuracy
I0426 20:53:14.832933 32402 net.cpp:131] Top shape: (1)
I0426 20:53:14.832937 32402 net.cpp:139] Memory required for data: 9290804
I0426 20:53:14.832940 32402 layer_factory.hpp:77] Creating layer loss
I0426 20:53:14.832944 32402 net.cpp:86] Creating Layer loss
I0426 20:53:14.832948 32402 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:53:14.832952 32402 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:14.832957 32402 net.cpp:382] loss -> loss
I0426 20:53:14.832964 32402 layer_factory.hpp:77] Creating layer loss
I0426 20:53:14.833245 32402 net.cpp:124] Setting up loss
I0426 20:53:14.833253 32402 net.cpp:131] Top shape: (1)
I0426 20:53:14.833256 32402 net.cpp:134]     with loss weight 1
I0426 20:53:14.833287 32402 net.cpp:139] Memory required for data: 9290808
I0426 20:53:14.833292 32402 net.cpp:200] loss needs backward computation.
I0426 20:53:14.833295 32402 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:14.833298 32402 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:53:14.833302 32402 net.cpp:200] relu3 needs backward computation.
I0426 20:53:14.833304 32402 net.cpp:200] ip3 needs backward computation.
I0426 20:53:14.833313 32402 net.cpp:200] relu2 needs backward computation.
I0426 20:53:14.833317 32402 net.cpp:200] ip2 needs backward computation.
I0426 20:53:14.833319 32402 net.cpp:200] relu1 needs backward computation.
I0426 20:53:14.833323 32402 net.cpp:200] ip1 needs backward computation.
I0426 20:53:14.833325 32402 net.cpp:200] pool1 needs backward computation.
I0426 20:53:14.833333 32402 net.cpp:200] conv1 needs backward computation.
I0426 20:53:14.833338 32402 net.cpp:200] pool0 needs backward computation.
I0426 20:53:14.833340 32402 net.cpp:200] conv0 needs backward computation.
I0426 20:53:14.833343 32402 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:14.833348 32402 net.cpp:202] mnist does not need backward computation.
I0426 20:53:14.833350 32402 net.cpp:244] This network produces output accuracy
I0426 20:53:14.833354 32402 net.cpp:244] This network produces output loss
I0426 20:53:14.833364 32402 net.cpp:257] Network initialization done.
I0426 20:53:14.833405 32402 solver.cpp:56] Solver scaffolding done.
I0426 20:53:14.833752 32402 caffe.cpp:248] Starting Optimization
I0426 20:53:14.833758 32402 solver.cpp:273] Solving LeNet
I0426 20:53:14.833761 32402 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:14.834642 32402 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:14.841375 32402 blocking_queue.cpp:49] Waiting for data
I0426 20:53:14.901746 32409 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:14.902609 32402 solver.cpp:398]     Test net output #0: accuracy = 0.0765
I0426 20:53:14.902639 32402 solver.cpp:398]     Test net output #1: loss = 2.33121 (* 1 = 2.33121 loss)
I0426 20:53:14.907104 32402 solver.cpp:219] Iteration 0 (0 iter/s, 0.073302s/100 iters), loss = 2.3189
I0426 20:53:14.907127 32402 solver.cpp:238]     Train net output #0: loss = 2.3189 (* 1 = 2.3189 loss)
I0426 20:53:14.907155 32402 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:15.035163 32402 solver.cpp:219] Iteration 100 (781.119 iter/s, 0.128021s/100 iters), loss = 0.338536
I0426 20:53:15.035187 32402 solver.cpp:238]     Train net output #0: loss = 0.338536 (* 1 = 0.338536 loss)
I0426 20:53:15.035208 32402 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:15.164427 32402 solver.cpp:219] Iteration 200 (773.87 iter/s, 0.129221s/100 iters), loss = 0.158678
I0426 20:53:15.164458 32402 solver.cpp:238]     Train net output #0: loss = 0.158678 (* 1 = 0.158678 loss)
I0426 20:53:15.164464 32402 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:15.293640 32402 solver.cpp:219] Iteration 300 (774.281 iter/s, 0.129152s/100 iters), loss = 0.179954
I0426 20:53:15.293694 32402 solver.cpp:238]     Train net output #0: loss = 0.179954 (* 1 = 0.179954 loss)
I0426 20:53:15.293705 32402 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:15.421629 32402 solver.cpp:219] Iteration 400 (781.7 iter/s, 0.127926s/100 iters), loss = 0.0581792
I0426 20:53:15.421654 32402 solver.cpp:238]     Train net output #0: loss = 0.0581792 (* 1 = 0.0581792 loss)
I0426 20:53:15.421660 32402 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:15.547230 32402 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:15.608062 32409 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:15.610239 32402 solver.cpp:398]     Test net output #0: accuracy = 0.9708
I0426 20:53:15.610257 32402 solver.cpp:398]     Test net output #1: loss = 0.0894249 (* 1 = 0.0894249 loss)
I0426 20:53:15.611521 32402 solver.cpp:219] Iteration 500 (526.727 iter/s, 0.189852s/100 iters), loss = 0.0768561
I0426 20:53:15.611557 32402 solver.cpp:238]     Train net output #0: loss = 0.0768561 (* 1 = 0.0768561 loss)
I0426 20:53:15.611578 32402 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:15.747701 32402 solver.cpp:219] Iteration 600 (734.595 iter/s, 0.136129s/100 iters), loss = 0.064145
I0426 20:53:15.747750 32402 solver.cpp:238]     Train net output #0: loss = 0.064145 (* 1 = 0.064145 loss)
I0426 20:53:15.747761 32402 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:15.887032 32402 solver.cpp:219] Iteration 700 (718.008 iter/s, 0.139274s/100 iters), loss = 0.129494
I0426 20:53:15.887061 32402 solver.cpp:238]     Train net output #0: loss = 0.129494 (* 1 = 0.129494 loss)
I0426 20:53:15.887068 32402 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:16.028069 32402 solver.cpp:219] Iteration 800 (709.253 iter/s, 0.140994s/100 iters), loss = 0.310877
I0426 20:53:16.028107 32402 solver.cpp:238]     Train net output #0: loss = 0.310877 (* 1 = 0.310877 loss)
I0426 20:53:16.028116 32402 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:16.165220 32402 solver.cpp:219] Iteration 900 (729.415 iter/s, 0.137096s/100 iters), loss = 0.120745
I0426 20:53:16.165282 32402 solver.cpp:238]     Train net output #0: loss = 0.120745 (* 1 = 0.120745 loss)
I0426 20:53:16.165293 32402 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:16.213536 32408 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:16.308387 32402 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:16.311779 32402 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:16.313737 32402 solver.cpp:311] Iteration 1000, loss = 0.0940781
I0426 20:53:16.313761 32402 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:16.391340 32409 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:16.392066 32402 solver.cpp:398]     Test net output #0: accuracy = 0.98
I0426 20:53:16.392089 32402 solver.cpp:398]     Test net output #1: loss = 0.0627912 (* 1 = 0.0627912 loss)
I0426 20:53:16.392096 32402 solver.cpp:316] Optimization Done.
I0426 20:53:16.392099 32402 caffe.cpp:259] Optimization Done.
