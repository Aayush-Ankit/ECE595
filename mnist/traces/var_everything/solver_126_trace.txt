I0426 20:52:59.496402 32354 caffe.cpp:218] Using GPUs 0
I0426 20:52:59.535210 32354 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:00.061156 32354 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test126.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:00.061295 32354 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test126.prototxt
I0426 20:53:00.061622 32354 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:00.061638 32354 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:00.061718 32354 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:53:00.061782 32354 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:00.061883 32354 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:00.061908 32354 net.cpp:86] Creating Layer mnist
I0426 20:53:00.061915 32354 net.cpp:382] mnist -> data
I0426 20:53:00.061939 32354 net.cpp:382] mnist -> label
I0426 20:53:00.063035 32354 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:00.065572 32354 net.cpp:124] Setting up mnist
I0426 20:53:00.065589 32354 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:00.065595 32354 net.cpp:131] Top shape: 64 (64)
I0426 20:53:00.065600 32354 net.cpp:139] Memory required for data: 200960
I0426 20:53:00.065608 32354 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:00.065623 32354 net.cpp:86] Creating Layer conv0
I0426 20:53:00.065630 32354 net.cpp:408] conv0 <- data
I0426 20:53:00.065641 32354 net.cpp:382] conv0 -> conv0
I0426 20:53:00.342119 32354 net.cpp:124] Setting up conv0
I0426 20:53:00.342146 32354 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:53:00.342150 32354 net.cpp:139] Memory required for data: 3887360
I0426 20:53:00.342165 32354 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:00.342178 32354 net.cpp:86] Creating Layer pool0
I0426 20:53:00.342182 32354 net.cpp:408] pool0 <- conv0
I0426 20:53:00.342188 32354 net.cpp:382] pool0 -> pool0
I0426 20:53:00.342232 32354 net.cpp:124] Setting up pool0
I0426 20:53:00.342253 32354 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:53:00.342290 32354 net.cpp:139] Memory required for data: 4808960
I0426 20:53:00.342294 32354 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:00.342305 32354 net.cpp:86] Creating Layer conv1
I0426 20:53:00.342308 32354 net.cpp:408] conv1 <- pool0
I0426 20:53:00.342314 32354 net.cpp:382] conv1 -> conv1
I0426 20:53:00.344439 32354 net.cpp:124] Setting up conv1
I0426 20:53:00.344454 32354 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:53:00.344457 32354 net.cpp:139] Memory required for data: 5628160
I0426 20:53:00.344465 32354 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:00.344472 32354 net.cpp:86] Creating Layer pool1
I0426 20:53:00.344475 32354 net.cpp:408] pool1 <- conv1
I0426 20:53:00.344480 32354 net.cpp:382] pool1 -> pool1
I0426 20:53:00.344513 32354 net.cpp:124] Setting up pool1
I0426 20:53:00.344521 32354 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:53:00.344523 32354 net.cpp:139] Memory required for data: 5832960
I0426 20:53:00.344525 32354 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:00.344532 32354 net.cpp:86] Creating Layer ip1
I0426 20:53:00.344535 32354 net.cpp:408] ip1 <- pool1
I0426 20:53:00.344539 32354 net.cpp:382] ip1 -> ip1
I0426 20:53:00.345572 32354 net.cpp:124] Setting up ip1
I0426 20:53:00.345585 32354 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:00.345588 32354 net.cpp:139] Memory required for data: 5835520
I0426 20:53:00.345613 32354 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:00.345618 32354 net.cpp:86] Creating Layer relu1
I0426 20:53:00.345621 32354 net.cpp:408] relu1 <- ip1
I0426 20:53:00.345626 32354 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:00.345840 32354 net.cpp:124] Setting up relu1
I0426 20:53:00.345849 32354 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:00.345852 32354 net.cpp:139] Memory required for data: 5838080
I0426 20:53:00.345855 32354 layer_factory.hpp:77] Creating layer loss
I0426 20:53:00.345861 32354 net.cpp:86] Creating Layer loss
I0426 20:53:00.345865 32354 net.cpp:408] loss <- ip1
I0426 20:53:00.345868 32354 net.cpp:408] loss <- label
I0426 20:53:00.345888 32354 net.cpp:382] loss -> loss
I0426 20:53:00.345907 32354 layer_factory.hpp:77] Creating layer loss
I0426 20:53:00.346814 32354 net.cpp:124] Setting up loss
I0426 20:53:00.346827 32354 net.cpp:131] Top shape: (1)
I0426 20:53:00.346844 32354 net.cpp:134]     with loss weight 1
I0426 20:53:00.346859 32354 net.cpp:139] Memory required for data: 5838084
I0426 20:53:00.346863 32354 net.cpp:200] loss needs backward computation.
I0426 20:53:00.346866 32354 net.cpp:200] relu1 needs backward computation.
I0426 20:53:00.346869 32354 net.cpp:200] ip1 needs backward computation.
I0426 20:53:00.346873 32354 net.cpp:200] pool1 needs backward computation.
I0426 20:53:00.346890 32354 net.cpp:200] conv1 needs backward computation.
I0426 20:53:00.346894 32354 net.cpp:200] pool0 needs backward computation.
I0426 20:53:00.346896 32354 net.cpp:200] conv0 needs backward computation.
I0426 20:53:00.346915 32354 net.cpp:202] mnist does not need backward computation.
I0426 20:53:00.346918 32354 net.cpp:244] This network produces output loss
I0426 20:53:00.346926 32354 net.cpp:257] Network initialization done.
I0426 20:53:00.347239 32354 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test126.prototxt
I0426 20:53:00.347264 32354 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:00.347335 32354 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:53:00.347401 32354 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:00.347466 32354 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:00.347478 32354 net.cpp:86] Creating Layer mnist
I0426 20:53:00.347483 32354 net.cpp:382] mnist -> data
I0426 20:53:00.347491 32354 net.cpp:382] mnist -> label
I0426 20:53:00.347573 32354 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:00.349732 32354 net.cpp:124] Setting up mnist
I0426 20:53:00.349745 32354 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:00.349750 32354 net.cpp:131] Top shape: 100 (100)
I0426 20:53:00.349753 32354 net.cpp:139] Memory required for data: 314000
I0426 20:53:00.349757 32354 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:00.349763 32354 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:00.349766 32354 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:00.349771 32354 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:00.349777 32354 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:00.349827 32354 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:00.349831 32354 net.cpp:131] Top shape: 100 (100)
I0426 20:53:00.349834 32354 net.cpp:131] Top shape: 100 (100)
I0426 20:53:00.349838 32354 net.cpp:139] Memory required for data: 314800
I0426 20:53:00.349840 32354 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:00.349848 32354 net.cpp:86] Creating Layer conv0
I0426 20:53:00.349850 32354 net.cpp:408] conv0 <- data
I0426 20:53:00.349855 32354 net.cpp:382] conv0 -> conv0
I0426 20:53:00.350797 32354 net.cpp:124] Setting up conv0
I0426 20:53:00.350810 32354 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:53:00.350812 32354 net.cpp:139] Memory required for data: 6074800
I0426 20:53:00.350821 32354 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:00.350826 32354 net.cpp:86] Creating Layer pool0
I0426 20:53:00.350845 32354 net.cpp:408] pool0 <- conv0
I0426 20:53:00.350850 32354 net.cpp:382] pool0 -> pool0
I0426 20:53:00.350883 32354 net.cpp:124] Setting up pool0
I0426 20:53:00.350888 32354 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:53:00.350890 32354 net.cpp:139] Memory required for data: 7514800
I0426 20:53:00.350893 32354 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:00.350900 32354 net.cpp:86] Creating Layer conv1
I0426 20:53:00.350903 32354 net.cpp:408] conv1 <- pool0
I0426 20:53:00.350908 32354 net.cpp:382] conv1 -> conv1
I0426 20:53:00.352603 32354 net.cpp:124] Setting up conv1
I0426 20:53:00.352627 32354 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:53:00.352629 32354 net.cpp:139] Memory required for data: 8794800
I0426 20:53:00.352638 32354 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:00.352643 32354 net.cpp:86] Creating Layer pool1
I0426 20:53:00.352670 32354 net.cpp:408] pool1 <- conv1
I0426 20:53:00.352692 32354 net.cpp:382] pool1 -> pool1
I0426 20:53:00.352725 32354 net.cpp:124] Setting up pool1
I0426 20:53:00.352730 32354 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:53:00.352733 32354 net.cpp:139] Memory required for data: 9114800
I0426 20:53:00.352736 32354 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:00.352742 32354 net.cpp:86] Creating Layer ip1
I0426 20:53:00.352746 32354 net.cpp:408] ip1 <- pool1
I0426 20:53:00.352751 32354 net.cpp:382] ip1 -> ip1
I0426 20:53:00.352927 32354 net.cpp:124] Setting up ip1
I0426 20:53:00.352936 32354 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:00.352939 32354 net.cpp:139] Memory required for data: 9118800
I0426 20:53:00.352946 32354 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:00.352952 32354 net.cpp:86] Creating Layer relu1
I0426 20:53:00.352955 32354 net.cpp:408] relu1 <- ip1
I0426 20:53:00.352959 32354 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:00.353828 32354 net.cpp:124] Setting up relu1
I0426 20:53:00.353840 32354 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:00.353843 32354 net.cpp:139] Memory required for data: 9122800
I0426 20:53:00.353847 32354 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:53:00.353869 32354 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:53:00.353873 32354 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:53:00.353878 32354 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:53:00.353883 32354 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:53:00.353951 32354 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:53:00.353958 32354 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:00.353962 32354 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:00.353971 32354 net.cpp:139] Memory required for data: 9130800
I0426 20:53:00.353973 32354 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:00.353978 32354 net.cpp:86] Creating Layer accuracy
I0426 20:53:00.353981 32354 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:53:00.353986 32354 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:00.353991 32354 net.cpp:382] accuracy -> accuracy
I0426 20:53:00.353997 32354 net.cpp:124] Setting up accuracy
I0426 20:53:00.354001 32354 net.cpp:131] Top shape: (1)
I0426 20:53:00.354004 32354 net.cpp:139] Memory required for data: 9130804
I0426 20:53:00.354007 32354 layer_factory.hpp:77] Creating layer loss
I0426 20:53:00.354010 32354 net.cpp:86] Creating Layer loss
I0426 20:53:00.354013 32354 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:53:00.354017 32354 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:00.354022 32354 net.cpp:382] loss -> loss
I0426 20:53:00.354027 32354 layer_factory.hpp:77] Creating layer loss
I0426 20:53:00.354243 32354 net.cpp:124] Setting up loss
I0426 20:53:00.354251 32354 net.cpp:131] Top shape: (1)
I0426 20:53:00.354254 32354 net.cpp:134]     with loss weight 1
I0426 20:53:00.354261 32354 net.cpp:139] Memory required for data: 9130808
I0426 20:53:00.354265 32354 net.cpp:200] loss needs backward computation.
I0426 20:53:00.354269 32354 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:00.354274 32354 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:53:00.354276 32354 net.cpp:200] relu1 needs backward computation.
I0426 20:53:00.354279 32354 net.cpp:200] ip1 needs backward computation.
I0426 20:53:00.354282 32354 net.cpp:200] pool1 needs backward computation.
I0426 20:53:00.354290 32354 net.cpp:200] conv1 needs backward computation.
I0426 20:53:00.354295 32354 net.cpp:200] pool0 needs backward computation.
I0426 20:53:00.354297 32354 net.cpp:200] conv0 needs backward computation.
I0426 20:53:00.354300 32354 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:00.354305 32354 net.cpp:202] mnist does not need backward computation.
I0426 20:53:00.354306 32354 net.cpp:244] This network produces output accuracy
I0426 20:53:00.354310 32354 net.cpp:244] This network produces output loss
I0426 20:53:00.354329 32354 net.cpp:257] Network initialization done.
I0426 20:53:00.354362 32354 solver.cpp:56] Solver scaffolding done.
I0426 20:53:00.354568 32354 caffe.cpp:248] Starting Optimization
I0426 20:53:00.354575 32354 solver.cpp:273] Solving LeNet
I0426 20:53:00.354578 32354 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:00.355401 32354 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:00.361022 32354 blocking_queue.cpp:49] Waiting for data
I0426 20:53:00.428064 32361 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:00.428663 32354 solver.cpp:398]     Test net output #0: accuracy = 0.0798
I0426 20:53:00.428699 32354 solver.cpp:398]     Test net output #1: loss = 2.37381 (* 1 = 2.37381 loss)
I0426 20:53:00.432802 32354 solver.cpp:219] Iteration 0 (-1.36086e-31 iter/s, 0.0781998s/100 iters), loss = 2.3702
I0426 20:53:00.432849 32354 solver.cpp:238]     Train net output #0: loss = 2.3702 (* 1 = 2.3702 loss)
I0426 20:53:00.432860 32354 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:00.551106 32354 solver.cpp:219] Iteration 100 (845.692 iter/s, 0.118246s/100 iters), loss = 0.730082
I0426 20:53:00.551131 32354 solver.cpp:238]     Train net output #0: loss = 0.730082 (* 1 = 0.730082 loss)
I0426 20:53:00.551136 32354 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:00.659113 32354 solver.cpp:219] Iteration 200 (926.162 iter/s, 0.107972s/100 iters), loss = 0.175583
I0426 20:53:00.659138 32354 solver.cpp:238]     Train net output #0: loss = 0.175583 (* 1 = 0.175583 loss)
I0426 20:53:00.659144 32354 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:00.765702 32354 solver.cpp:219] Iteration 300 (938.497 iter/s, 0.106553s/100 iters), loss = 0.200317
I0426 20:53:00.765725 32354 solver.cpp:238]     Train net output #0: loss = 0.200317 (* 1 = 0.200317 loss)
I0426 20:53:00.765732 32354 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:00.872016 32354 solver.cpp:219] Iteration 400 (940.911 iter/s, 0.10628s/100 iters), loss = 0.0920409
I0426 20:53:00.872040 32354 solver.cpp:238]     Train net output #0: loss = 0.0920408 (* 1 = 0.0920408 loss)
I0426 20:53:00.872045 32354 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:00.976526 32354 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:01.029695 32361 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:01.030264 32354 solver.cpp:398]     Test net output #0: accuracy = 0.969
I0426 20:53:01.030282 32354 solver.cpp:398]     Test net output #1: loss = 0.106472 (* 1 = 0.106472 loss)
I0426 20:53:01.031361 32354 solver.cpp:219] Iteration 500 (627.715 iter/s, 0.159308s/100 iters), loss = 0.149897
I0426 20:53:01.031412 32354 solver.cpp:238]     Train net output #0: loss = 0.149897 (* 1 = 0.149897 loss)
I0426 20:53:01.031420 32354 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:01.148221 32354 solver.cpp:219] Iteration 600 (856.172 iter/s, 0.116799s/100 iters), loss = 0.112986
I0426 20:53:01.148244 32354 solver.cpp:238]     Train net output #0: loss = 0.112986 (* 1 = 0.112986 loss)
I0426 20:53:01.148250 32354 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:01.253906 32354 solver.cpp:219] Iteration 700 (946.529 iter/s, 0.105649s/100 iters), loss = 0.137634
I0426 20:53:01.253927 32354 solver.cpp:238]     Train net output #0: loss = 0.137634 (* 1 = 0.137634 loss)
I0426 20:53:01.253933 32354 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:01.359738 32354 solver.cpp:219] Iteration 800 (945.182 iter/s, 0.1058s/100 iters), loss = 0.213792
I0426 20:53:01.359764 32354 solver.cpp:238]     Train net output #0: loss = 0.213791 (* 1 = 0.213791 loss)
I0426 20:53:01.359771 32354 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:01.464726 32354 solver.cpp:219] Iteration 900 (952.828 iter/s, 0.104951s/100 iters), loss = 0.150246
I0426 20:53:01.464751 32354 solver.cpp:238]     Train net output #0: loss = 0.150246 (* 1 = 0.150246 loss)
I0426 20:53:01.464772 32354 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:01.500068 32360 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:01.569571 32354 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:01.570904 32354 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:01.571794 32354 solver.cpp:311] Iteration 1000, loss = 0.117116
I0426 20:53:01.571808 32354 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:01.625339 32361 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:01.625919 32354 solver.cpp:398]     Test net output #0: accuracy = 0.9762
I0426 20:53:01.625936 32354 solver.cpp:398]     Test net output #1: loss = 0.0734584 (* 1 = 0.0734584 loss)
I0426 20:53:01.625957 32354 solver.cpp:316] Optimization Done.
I0426 20:53:01.625960 32354 caffe.cpp:259] Optimization Done.
