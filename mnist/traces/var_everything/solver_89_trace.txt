I0426 20:51:31.148767 31999 caffe.cpp:218] Using GPUs 0
I0426 20:51:31.186178 31999 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:31.643748 31999 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test89.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:31.643898 31999 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test89.prototxt
I0426 20:51:31.644268 31999 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:31.644297 31999 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:31.644399 31999 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:51:31.644465 31999 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:31.644548 31999 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:31.644567 31999 net.cpp:86] Creating Layer mnist
I0426 20:51:31.644575 31999 net.cpp:382] mnist -> data
I0426 20:51:31.644593 31999 net.cpp:382] mnist -> label
I0426 20:51:31.645632 31999 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:31.647704 31999 net.cpp:124] Setting up mnist
I0426 20:51:31.647717 31999 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:31.647722 31999 net.cpp:131] Top shape: 64 (64)
I0426 20:51:31.647723 31999 net.cpp:139] Memory required for data: 200960
I0426 20:51:31.647728 31999 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:31.647742 31999 net.cpp:86] Creating Layer conv0
I0426 20:51:31.647745 31999 net.cpp:408] conv0 <- data
I0426 20:51:31.647791 31999 net.cpp:382] conv0 -> conv0
I0426 20:51:31.883424 31999 net.cpp:124] Setting up conv0
I0426 20:51:31.883464 31999 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:31.883468 31999 net.cpp:139] Memory required for data: 1675520
I0426 20:51:31.883502 31999 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:31.883530 31999 net.cpp:86] Creating Layer pool0
I0426 20:51:31.883549 31999 net.cpp:408] pool0 <- conv0
I0426 20:51:31.883554 31999 net.cpp:382] pool0 -> pool0
I0426 20:51:31.883605 31999 net.cpp:124] Setting up pool0
I0426 20:51:31.883613 31999 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:31.883616 31999 net.cpp:139] Memory required for data: 2044160
I0426 20:51:31.883620 31999 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:31.883630 31999 net.cpp:86] Creating Layer conv1
I0426 20:51:31.883633 31999 net.cpp:408] conv1 <- pool0
I0426 20:51:31.883637 31999 net.cpp:382] conv1 -> conv1
I0426 20:51:31.886546 31999 net.cpp:124] Setting up conv1
I0426 20:51:31.886575 31999 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:31.886579 31999 net.cpp:139] Memory required for data: 2863360
I0426 20:51:31.886586 31999 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:31.886593 31999 net.cpp:86] Creating Layer pool1
I0426 20:51:31.886597 31999 net.cpp:408] pool1 <- conv1
I0426 20:51:31.886601 31999 net.cpp:382] pool1 -> pool1
I0426 20:51:31.886653 31999 net.cpp:124] Setting up pool1
I0426 20:51:31.886658 31999 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:31.886662 31999 net.cpp:139] Memory required for data: 3068160
I0426 20:51:31.886664 31999 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:31.886674 31999 net.cpp:86] Creating Layer ip1
I0426 20:51:31.886677 31999 net.cpp:408] ip1 <- pool1
I0426 20:51:31.886682 31999 net.cpp:382] ip1 -> ip1
I0426 20:51:31.888893 31999 net.cpp:124] Setting up ip1
I0426 20:51:31.888906 31999 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:31.888924 31999 net.cpp:139] Memory required for data: 3144960
I0426 20:51:31.888932 31999 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:31.888938 31999 net.cpp:86] Creating Layer relu1
I0426 20:51:31.888942 31999 net.cpp:408] relu1 <- ip1
I0426 20:51:31.888945 31999 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:31.889176 31999 net.cpp:124] Setting up relu1
I0426 20:51:31.889185 31999 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:31.889189 31999 net.cpp:139] Memory required for data: 3221760
I0426 20:51:31.889192 31999 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:31.889199 31999 net.cpp:86] Creating Layer ip2
I0426 20:51:31.889202 31999 net.cpp:408] ip2 <- ip1
I0426 20:51:31.889207 31999 net.cpp:382] ip2 -> ip2
I0426 20:51:31.890163 31999 net.cpp:124] Setting up ip2
I0426 20:51:31.890175 31999 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:31.890193 31999 net.cpp:139] Memory required for data: 3224320
I0426 20:51:31.890199 31999 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:31.890206 31999 net.cpp:86] Creating Layer relu2
I0426 20:51:31.890209 31999 net.cpp:408] relu2 <- ip2
I0426 20:51:31.890214 31999 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:31.891095 31999 net.cpp:124] Setting up relu2
I0426 20:51:31.891106 31999 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:31.891125 31999 net.cpp:139] Memory required for data: 3226880
I0426 20:51:31.891129 31999 layer_factory.hpp:77] Creating layer loss
I0426 20:51:31.891134 31999 net.cpp:86] Creating Layer loss
I0426 20:51:31.891137 31999 net.cpp:408] loss <- ip2
I0426 20:51:31.891144 31999 net.cpp:408] loss <- label
I0426 20:51:31.891149 31999 net.cpp:382] loss -> loss
I0426 20:51:31.891183 31999 layer_factory.hpp:77] Creating layer loss
I0426 20:51:31.891461 31999 net.cpp:124] Setting up loss
I0426 20:51:31.891471 31999 net.cpp:131] Top shape: (1)
I0426 20:51:31.891475 31999 net.cpp:134]     with loss weight 1
I0426 20:51:31.891489 31999 net.cpp:139] Memory required for data: 3226884
I0426 20:51:31.891492 31999 net.cpp:200] loss needs backward computation.
I0426 20:51:31.891495 31999 net.cpp:200] relu2 needs backward computation.
I0426 20:51:31.891499 31999 net.cpp:200] ip2 needs backward computation.
I0426 20:51:31.891502 31999 net.cpp:200] relu1 needs backward computation.
I0426 20:51:31.891505 31999 net.cpp:200] ip1 needs backward computation.
I0426 20:51:31.891533 31999 net.cpp:200] pool1 needs backward computation.
I0426 20:51:31.891536 31999 net.cpp:200] conv1 needs backward computation.
I0426 20:51:31.891540 31999 net.cpp:200] pool0 needs backward computation.
I0426 20:51:31.891542 31999 net.cpp:200] conv0 needs backward computation.
I0426 20:51:31.891546 31999 net.cpp:202] mnist does not need backward computation.
I0426 20:51:31.891548 31999 net.cpp:244] This network produces output loss
I0426 20:51:31.891557 31999 net.cpp:257] Network initialization done.
I0426 20:51:31.891862 31999 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test89.prototxt
I0426 20:51:31.891888 31999 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:31.891973 31999 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0426 20:51:31.892037 31999 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:31.892094 31999 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:31.892109 31999 net.cpp:86] Creating Layer mnist
I0426 20:51:31.892114 31999 net.cpp:382] mnist -> data
I0426 20:51:31.892122 31999 net.cpp:382] mnist -> label
I0426 20:51:31.892231 31999 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:31.894357 31999 net.cpp:124] Setting up mnist
I0426 20:51:31.894385 31999 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:31.894390 31999 net.cpp:131] Top shape: 100 (100)
I0426 20:51:31.894394 31999 net.cpp:139] Memory required for data: 314000
I0426 20:51:31.894397 31999 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:31.894443 31999 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:31.894448 31999 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:31.894453 31999 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:31.894459 31999 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:31.894539 31999 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:31.894546 31999 net.cpp:131] Top shape: 100 (100)
I0426 20:51:31.894551 31999 net.cpp:131] Top shape: 100 (100)
I0426 20:51:31.894553 31999 net.cpp:139] Memory required for data: 314800
I0426 20:51:31.894556 31999 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:31.894564 31999 net.cpp:86] Creating Layer conv0
I0426 20:51:31.894567 31999 net.cpp:408] conv0 <- data
I0426 20:51:31.894572 31999 net.cpp:382] conv0 -> conv0
I0426 20:51:31.896376 31999 net.cpp:124] Setting up conv0
I0426 20:51:31.896389 31999 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:31.896392 31999 net.cpp:139] Memory required for data: 2618800
I0426 20:51:31.896400 31999 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:31.896406 31999 net.cpp:86] Creating Layer pool0
I0426 20:51:31.896425 31999 net.cpp:408] pool0 <- conv0
I0426 20:51:31.896430 31999 net.cpp:382] pool0 -> pool0
I0426 20:51:31.896463 31999 net.cpp:124] Setting up pool0
I0426 20:51:31.896468 31999 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:31.896471 31999 net.cpp:139] Memory required for data: 3194800
I0426 20:51:31.896473 31999 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:31.896481 31999 net.cpp:86] Creating Layer conv1
I0426 20:51:31.896483 31999 net.cpp:408] conv1 <- pool0
I0426 20:51:31.896488 31999 net.cpp:382] conv1 -> conv1
I0426 20:51:31.898212 31999 net.cpp:124] Setting up conv1
I0426 20:51:31.898226 31999 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:31.898231 31999 net.cpp:139] Memory required for data: 4474800
I0426 20:51:31.898238 31999 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:31.898264 31999 net.cpp:86] Creating Layer pool1
I0426 20:51:31.898283 31999 net.cpp:408] pool1 <- conv1
I0426 20:51:31.898288 31999 net.cpp:382] pool1 -> pool1
I0426 20:51:31.898341 31999 net.cpp:124] Setting up pool1
I0426 20:51:31.898362 31999 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:31.898365 31999 net.cpp:139] Memory required for data: 4794800
I0426 20:51:31.898368 31999 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:31.898375 31999 net.cpp:86] Creating Layer ip1
I0426 20:51:31.898393 31999 net.cpp:408] ip1 <- pool1
I0426 20:51:31.898398 31999 net.cpp:382] ip1 -> ip1
I0426 20:51:31.899927 31999 net.cpp:124] Setting up ip1
I0426 20:51:31.899935 31999 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:31.899938 31999 net.cpp:139] Memory required for data: 4914800
I0426 20:51:31.899945 31999 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:31.899950 31999 net.cpp:86] Creating Layer relu1
I0426 20:51:31.899971 31999 net.cpp:408] relu1 <- ip1
I0426 20:51:31.899991 31999 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:31.900158 31999 net.cpp:124] Setting up relu1
I0426 20:51:31.900167 31999 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:31.900171 31999 net.cpp:139] Memory required for data: 5034800
I0426 20:51:31.900173 31999 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:31.900180 31999 net.cpp:86] Creating Layer ip2
I0426 20:51:31.900183 31999 net.cpp:408] ip2 <- ip1
I0426 20:51:31.900188 31999 net.cpp:382] ip2 -> ip2
I0426 20:51:31.900329 31999 net.cpp:124] Setting up ip2
I0426 20:51:31.900336 31999 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:31.900339 31999 net.cpp:139] Memory required for data: 5038800
I0426 20:51:31.900344 31999 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:31.900348 31999 net.cpp:86] Creating Layer relu2
I0426 20:51:31.900352 31999 net.cpp:408] relu2 <- ip2
I0426 20:51:31.900355 31999 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:31.900588 31999 net.cpp:124] Setting up relu2
I0426 20:51:31.900595 31999 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:31.900599 31999 net.cpp:139] Memory required for data: 5042800
I0426 20:51:31.900601 31999 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0426 20:51:31.900611 31999 net.cpp:86] Creating Layer ip2_relu2_0_split
I0426 20:51:31.900614 31999 net.cpp:408] ip2_relu2_0_split <- ip2
I0426 20:51:31.900619 31999 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0426 20:51:31.900635 31999 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0426 20:51:31.900671 31999 net.cpp:124] Setting up ip2_relu2_0_split
I0426 20:51:31.900676 31999 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:31.900681 31999 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:31.900683 31999 net.cpp:139] Memory required for data: 5050800
I0426 20:51:31.900687 31999 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:31.900691 31999 net.cpp:86] Creating Layer accuracy
I0426 20:51:31.900694 31999 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0426 20:51:31.900698 31999 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:31.900703 31999 net.cpp:382] accuracy -> accuracy
I0426 20:51:31.900709 31999 net.cpp:124] Setting up accuracy
I0426 20:51:31.900713 31999 net.cpp:131] Top shape: (1)
I0426 20:51:31.900715 31999 net.cpp:139] Memory required for data: 5050804
I0426 20:51:31.900718 31999 layer_factory.hpp:77] Creating layer loss
I0426 20:51:31.900723 31999 net.cpp:86] Creating Layer loss
I0426 20:51:31.900727 31999 net.cpp:408] loss <- ip2_relu2_0_split_1
I0426 20:51:31.900729 31999 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:31.900734 31999 net.cpp:382] loss -> loss
I0426 20:51:31.900739 31999 layer_factory.hpp:77] Creating layer loss
I0426 20:51:31.901048 31999 net.cpp:124] Setting up loss
I0426 20:51:31.901058 31999 net.cpp:131] Top shape: (1)
I0426 20:51:31.901062 31999 net.cpp:134]     with loss weight 1
I0426 20:51:31.901068 31999 net.cpp:139] Memory required for data: 5050808
I0426 20:51:31.901072 31999 net.cpp:200] loss needs backward computation.
I0426 20:51:31.901075 31999 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:31.901093 31999 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0426 20:51:31.901095 31999 net.cpp:200] relu2 needs backward computation.
I0426 20:51:31.901098 31999 net.cpp:200] ip2 needs backward computation.
I0426 20:51:31.901101 31999 net.cpp:200] relu1 needs backward computation.
I0426 20:51:31.901105 31999 net.cpp:200] ip1 needs backward computation.
I0426 20:51:31.901113 31999 net.cpp:200] pool1 needs backward computation.
I0426 20:51:31.901116 31999 net.cpp:200] conv1 needs backward computation.
I0426 20:51:31.901120 31999 net.cpp:200] pool0 needs backward computation.
I0426 20:51:31.901124 31999 net.cpp:200] conv0 needs backward computation.
I0426 20:51:31.901127 31999 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:31.901130 31999 net.cpp:202] mnist does not need backward computation.
I0426 20:51:31.901134 31999 net.cpp:244] This network produces output accuracy
I0426 20:51:31.901142 31999 net.cpp:244] This network produces output loss
I0426 20:51:31.901154 31999 net.cpp:257] Network initialization done.
I0426 20:51:31.901206 31999 solver.cpp:56] Solver scaffolding done.
I0426 20:51:31.901541 31999 caffe.cpp:248] Starting Optimization
I0426 20:51:31.901548 31999 solver.cpp:273] Solving LeNet
I0426 20:51:31.901551 31999 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:31.903161 31999 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:31.907552 31999 blocking_queue.cpp:49] Waiting for data
I0426 20:51:31.978437 32006 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:31.979019 31999 solver.cpp:398]     Test net output #0: accuracy = 0.0607
I0426 20:51:31.979038 31999 solver.cpp:398]     Test net output #1: loss = 2.34197 (* 1 = 2.34197 loss)
I0426 20:51:31.982125 31999 solver.cpp:219] Iteration 0 (0 iter/s, 0.0805305s/100 iters), loss = 2.36522
I0426 20:51:31.982146 31999 solver.cpp:238]     Train net output #0: loss = 2.36522 (* 1 = 2.36522 loss)
I0426 20:51:31.982173 31999 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:32.092789 31999 solver.cpp:219] Iteration 100 (903.923 iter/s, 0.110629s/100 iters), loss = 1.05056
I0426 20:51:32.092818 31999 solver.cpp:238]     Train net output #0: loss = 1.05056 (* 1 = 1.05056 loss)
I0426 20:51:32.092823 31999 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:32.203029 31999 solver.cpp:219] Iteration 200 (907.392 iter/s, 0.110206s/100 iters), loss = 0.124712
I0426 20:51:32.203084 31999 solver.cpp:238]     Train net output #0: loss = 0.124712 (* 1 = 0.124712 loss)
I0426 20:51:32.203091 31999 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:32.312522 31999 solver.cpp:219] Iteration 300 (913.837 iter/s, 0.109429s/100 iters), loss = 0.169261
I0426 20:51:32.312547 31999 solver.cpp:238]     Train net output #0: loss = 0.16926 (* 1 = 0.16926 loss)
I0426 20:51:32.312553 31999 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:32.424192 31999 solver.cpp:219] Iteration 400 (895.781 iter/s, 0.111634s/100 iters), loss = 0.0796508
I0426 20:51:32.424219 31999 solver.cpp:238]     Train net output #0: loss = 0.0796507 (* 1 = 0.0796507 loss)
I0426 20:51:32.424242 31999 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:32.534906 31999 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:32.588481 32006 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:32.589056 31999 solver.cpp:398]     Test net output #0: accuracy = 0.9689
I0426 20:51:32.589077 31999 solver.cpp:398]     Test net output #1: loss = 0.0965144 (* 1 = 0.0965144 loss)
I0426 20:51:32.590216 31999 solver.cpp:219] Iteration 500 (602.471 iter/s, 0.165983s/100 iters), loss = 0.0394267
I0426 20:51:32.590276 31999 solver.cpp:238]     Train net output #0: loss = 0.0394266 (* 1 = 0.0394266 loss)
I0426 20:51:32.590284 31999 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:32.711830 31999 solver.cpp:219] Iteration 600 (822.745 iter/s, 0.121544s/100 iters), loss = 0.105953
I0426 20:51:32.711858 31999 solver.cpp:238]     Train net output #0: loss = 0.105953 (* 1 = 0.105953 loss)
I0426 20:51:32.711870 31999 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:32.823074 31999 solver.cpp:219] Iteration 700 (899.237 iter/s, 0.111205s/100 iters), loss = 0.0849687
I0426 20:51:32.823102 31999 solver.cpp:238]     Train net output #0: loss = 0.0849686 (* 1 = 0.0849686 loss)
I0426 20:51:32.823109 31999 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:32.937721 31999 solver.cpp:219] Iteration 800 (872.538 iter/s, 0.114608s/100 iters), loss = 0.255364
I0426 20:51:32.937764 31999 solver.cpp:238]     Train net output #0: loss = 0.255364 (* 1 = 0.255364 loss)
I0426 20:51:32.937772 31999 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:33.051842 31999 solver.cpp:219] Iteration 900 (876.754 iter/s, 0.114057s/100 iters), loss = 0.175592
I0426 20:51:33.051869 31999 solver.cpp:238]     Train net output #0: loss = 0.175592 (* 1 = 0.175592 loss)
I0426 20:51:33.051875 31999 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:33.090425 32005 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:33.164499 31999 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:33.168929 31999 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:33.171247 31999 solver.cpp:311] Iteration 1000, loss = 0.113882
I0426 20:51:33.171264 31999 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:33.245937 32006 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:33.246541 31999 solver.cpp:398]     Test net output #0: accuracy = 0.9775
I0426 20:51:33.246578 31999 solver.cpp:398]     Test net output #1: loss = 0.0681262 (* 1 = 0.0681262 loss)
I0426 20:51:33.246583 31999 solver.cpp:316] Optimization Done.
I0426 20:51:33.246587 31999 caffe.cpp:259] Optimization Done.
