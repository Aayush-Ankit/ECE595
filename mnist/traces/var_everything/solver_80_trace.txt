I0426 20:51:10.097548 31923 caffe.cpp:218] Using GPUs 0
I0426 20:51:10.134995 31923 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:10.658015 31923 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test80.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:10.658154 31923 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test80.prototxt
I0426 20:51:10.658572 31923 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:10.658591 31923 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:10.658695 31923 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:10.658776 31923 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:10.658874 31923 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:10.658896 31923 net.cpp:86] Creating Layer mnist
I0426 20:51:10.658905 31923 net.cpp:382] mnist -> data
I0426 20:51:10.658928 31923 net.cpp:382] mnist -> label
I0426 20:51:10.660028 31923 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:10.662778 31923 net.cpp:124] Setting up mnist
I0426 20:51:10.662796 31923 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:10.662802 31923 net.cpp:131] Top shape: 64 (64)
I0426 20:51:10.662806 31923 net.cpp:139] Memory required for data: 200960
I0426 20:51:10.662813 31923 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:10.662883 31923 net.cpp:86] Creating Layer conv0
I0426 20:51:10.662904 31923 net.cpp:408] conv0 <- data
I0426 20:51:10.662916 31923 net.cpp:382] conv0 -> conv0
I0426 20:51:10.933172 31923 net.cpp:124] Setting up conv0
I0426 20:51:10.933198 31923 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:10.933202 31923 net.cpp:139] Memory required for data: 1675520
I0426 20:51:10.933215 31923 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:10.933243 31923 net.cpp:86] Creating Layer pool0
I0426 20:51:10.933246 31923 net.cpp:408] pool0 <- conv0
I0426 20:51:10.933253 31923 net.cpp:382] pool0 -> pool0
I0426 20:51:10.933315 31923 net.cpp:124] Setting up pool0
I0426 20:51:10.933320 31923 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:10.933323 31923 net.cpp:139] Memory required for data: 2044160
I0426 20:51:10.933326 31923 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:10.933341 31923 net.cpp:86] Creating Layer conv1
I0426 20:51:10.933343 31923 net.cpp:408] conv1 <- pool0
I0426 20:51:10.933348 31923 net.cpp:382] conv1 -> conv1
I0426 20:51:10.936061 31923 net.cpp:124] Setting up conv1
I0426 20:51:10.936075 31923 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:51:10.936079 31923 net.cpp:139] Memory required for data: 2453760
I0426 20:51:10.936086 31923 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:10.936094 31923 net.cpp:86] Creating Layer pool1
I0426 20:51:10.936096 31923 net.cpp:408] pool1 <- conv1
I0426 20:51:10.936100 31923 net.cpp:382] pool1 -> pool1
I0426 20:51:10.936152 31923 net.cpp:124] Setting up pool1
I0426 20:51:10.936157 31923 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:51:10.936161 31923 net.cpp:139] Memory required for data: 2556160
I0426 20:51:10.936162 31923 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:10.936173 31923 net.cpp:86] Creating Layer ip1
I0426 20:51:10.936177 31923 net.cpp:408] ip1 <- pool1
I0426 20:51:10.936180 31923 net.cpp:382] ip1 -> ip1
I0426 20:51:10.937794 31923 net.cpp:124] Setting up ip1
I0426 20:51:10.937822 31923 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:10.937825 31923 net.cpp:139] Memory required for data: 2632960
I0426 20:51:10.937849 31923 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:10.937855 31923 net.cpp:86] Creating Layer relu1
I0426 20:51:10.937858 31923 net.cpp:408] relu1 <- ip1
I0426 20:51:10.937863 31923 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:10.938077 31923 net.cpp:124] Setting up relu1
I0426 20:51:10.938086 31923 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:51:10.938089 31923 net.cpp:139] Memory required for data: 2709760
I0426 20:51:10.938092 31923 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:10.938098 31923 net.cpp:86] Creating Layer ip2
I0426 20:51:10.938102 31923 net.cpp:408] ip2 <- ip1
I0426 20:51:10.938107 31923 net.cpp:382] ip2 -> ip2
I0426 20:51:10.938437 31923 net.cpp:124] Setting up ip2
I0426 20:51:10.938458 31923 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:10.938462 31923 net.cpp:139] Memory required for data: 2735360
I0426 20:51:10.938482 31923 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:10.938488 31923 net.cpp:86] Creating Layer relu2
I0426 20:51:10.938490 31923 net.cpp:408] relu2 <- ip2
I0426 20:51:10.938494 31923 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:10.939287 31923 net.cpp:124] Setting up relu2
I0426 20:51:10.939298 31923 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:51:10.939317 31923 net.cpp:139] Memory required for data: 2760960
I0426 20:51:10.939321 31923 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:10.939327 31923 net.cpp:86] Creating Layer ip3
I0426 20:51:10.939330 31923 net.cpp:408] ip3 <- ip2
I0426 20:51:10.939337 31923 net.cpp:382] ip3 -> ip3
I0426 20:51:10.939435 31923 net.cpp:124] Setting up ip3
I0426 20:51:10.939442 31923 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:10.939445 31923 net.cpp:139] Memory required for data: 2763520
I0426 20:51:10.939453 31923 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:10.939457 31923 net.cpp:86] Creating Layer relu3
I0426 20:51:10.939460 31923 net.cpp:408] relu3 <- ip3
I0426 20:51:10.939465 31923 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:10.939620 31923 net.cpp:124] Setting up relu3
I0426 20:51:10.939627 31923 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:10.939630 31923 net.cpp:139] Memory required for data: 2766080
I0426 20:51:10.939633 31923 layer_factory.hpp:77] Creating layer loss
I0426 20:51:10.939640 31923 net.cpp:86] Creating Layer loss
I0426 20:51:10.939641 31923 net.cpp:408] loss <- ip3
I0426 20:51:10.939646 31923 net.cpp:408] loss <- label
I0426 20:51:10.939651 31923 net.cpp:382] loss -> loss
I0426 20:51:10.939668 31923 layer_factory.hpp:77] Creating layer loss
I0426 20:51:10.939908 31923 net.cpp:124] Setting up loss
I0426 20:51:10.939918 31923 net.cpp:131] Top shape: (1)
I0426 20:51:10.939921 31923 net.cpp:134]     with loss weight 1
I0426 20:51:10.939935 31923 net.cpp:139] Memory required for data: 2766084
I0426 20:51:10.939939 31923 net.cpp:200] loss needs backward computation.
I0426 20:51:10.939941 31923 net.cpp:200] relu3 needs backward computation.
I0426 20:51:10.939944 31923 net.cpp:200] ip3 needs backward computation.
I0426 20:51:10.939947 31923 net.cpp:200] relu2 needs backward computation.
I0426 20:51:10.939949 31923 net.cpp:200] ip2 needs backward computation.
I0426 20:51:10.939952 31923 net.cpp:200] relu1 needs backward computation.
I0426 20:51:10.939954 31923 net.cpp:200] ip1 needs backward computation.
I0426 20:51:10.939957 31923 net.cpp:200] pool1 needs backward computation.
I0426 20:51:10.939960 31923 net.cpp:200] conv1 needs backward computation.
I0426 20:51:10.939963 31923 net.cpp:200] pool0 needs backward computation.
I0426 20:51:10.939966 31923 net.cpp:200] conv0 needs backward computation.
I0426 20:51:10.939970 31923 net.cpp:202] mnist does not need backward computation.
I0426 20:51:10.939971 31923 net.cpp:244] This network produces output loss
I0426 20:51:10.939980 31923 net.cpp:257] Network initialization done.
I0426 20:51:10.940309 31923 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test80.prototxt
I0426 20:51:10.940335 31923 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:10.940423 31923 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:51:10.940503 31923 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:10.940549 31923 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:10.940560 31923 net.cpp:86] Creating Layer mnist
I0426 20:51:10.940567 31923 net.cpp:382] mnist -> data
I0426 20:51:10.940573 31923 net.cpp:382] mnist -> label
I0426 20:51:10.940656 31923 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:10.941926 31923 net.cpp:124] Setting up mnist
I0426 20:51:10.941953 31923 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:10.941958 31923 net.cpp:131] Top shape: 100 (100)
I0426 20:51:10.941961 31923 net.cpp:139] Memory required for data: 314000
I0426 20:51:10.941964 31923 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:10.941987 31923 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:10.941992 31923 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:10.942023 31923 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:10.942029 31923 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:10.942067 31923 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:10.942073 31923 net.cpp:131] Top shape: 100 (100)
I0426 20:51:10.942076 31923 net.cpp:131] Top shape: 100 (100)
I0426 20:51:10.942080 31923 net.cpp:139] Memory required for data: 314800
I0426 20:51:10.942081 31923 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:10.942091 31923 net.cpp:86] Creating Layer conv0
I0426 20:51:10.942095 31923 net.cpp:408] conv0 <- data
I0426 20:51:10.942100 31923 net.cpp:382] conv0 -> conv0
I0426 20:51:10.943858 31923 net.cpp:124] Setting up conv0
I0426 20:51:10.943871 31923 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:10.943874 31923 net.cpp:139] Memory required for data: 2618800
I0426 20:51:10.943882 31923 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:10.943905 31923 net.cpp:86] Creating Layer pool0
I0426 20:51:10.943908 31923 net.cpp:408] pool0 <- conv0
I0426 20:51:10.943912 31923 net.cpp:382] pool0 -> pool0
I0426 20:51:10.943948 31923 net.cpp:124] Setting up pool0
I0426 20:51:10.943953 31923 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:10.943955 31923 net.cpp:139] Memory required for data: 3194800
I0426 20:51:10.943958 31923 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:10.943974 31923 net.cpp:86] Creating Layer conv1
I0426 20:51:10.943977 31923 net.cpp:408] conv1 <- pool0
I0426 20:51:10.943994 31923 net.cpp:382] conv1 -> conv1
I0426 20:51:10.946259 31923 net.cpp:124] Setting up conv1
I0426 20:51:10.946274 31923 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:51:10.946277 31923 net.cpp:139] Memory required for data: 3834800
I0426 20:51:10.946310 31923 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:10.946316 31923 net.cpp:86] Creating Layer pool1
I0426 20:51:10.946319 31923 net.cpp:408] pool1 <- conv1
I0426 20:51:10.946331 31923 net.cpp:382] pool1 -> pool1
I0426 20:51:10.946369 31923 net.cpp:124] Setting up pool1
I0426 20:51:10.946375 31923 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:51:10.946378 31923 net.cpp:139] Memory required for data: 3994800
I0426 20:51:10.946401 31923 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:10.946406 31923 net.cpp:86] Creating Layer ip1
I0426 20:51:10.946409 31923 net.cpp:408] ip1 <- pool1
I0426 20:51:10.946415 31923 net.cpp:382] ip1 -> ip1
I0426 20:51:10.948106 31923 net.cpp:124] Setting up ip1
I0426 20:51:10.948117 31923 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:10.948129 31923 net.cpp:139] Memory required for data: 4114800
I0426 20:51:10.948153 31923 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:10.948159 31923 net.cpp:86] Creating Layer relu1
I0426 20:51:10.948163 31923 net.cpp:408] relu1 <- ip1
I0426 20:51:10.948166 31923 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:10.948343 31923 net.cpp:124] Setting up relu1
I0426 20:51:10.948351 31923 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:51:10.948354 31923 net.cpp:139] Memory required for data: 4234800
I0426 20:51:10.948357 31923 layer_factory.hpp:77] Creating layer ip2
I0426 20:51:10.948365 31923 net.cpp:86] Creating Layer ip2
I0426 20:51:10.948367 31923 net.cpp:408] ip2 <- ip1
I0426 20:51:10.948374 31923 net.cpp:382] ip2 -> ip2
I0426 20:51:10.948670 31923 net.cpp:124] Setting up ip2
I0426 20:51:10.948679 31923 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:10.948683 31923 net.cpp:139] Memory required for data: 4274800
I0426 20:51:10.948688 31923 layer_factory.hpp:77] Creating layer relu2
I0426 20:51:10.948693 31923 net.cpp:86] Creating Layer relu2
I0426 20:51:10.948695 31923 net.cpp:408] relu2 <- ip2
I0426 20:51:10.948699 31923 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:51:10.948914 31923 net.cpp:124] Setting up relu2
I0426 20:51:10.948925 31923 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:51:10.948927 31923 net.cpp:139] Memory required for data: 4314800
I0426 20:51:10.948930 31923 layer_factory.hpp:77] Creating layer ip3
I0426 20:51:10.948935 31923 net.cpp:86] Creating Layer ip3
I0426 20:51:10.948938 31923 net.cpp:408] ip3 <- ip2
I0426 20:51:10.948945 31923 net.cpp:382] ip3 -> ip3
I0426 20:51:10.949049 31923 net.cpp:124] Setting up ip3
I0426 20:51:10.949057 31923 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:10.949060 31923 net.cpp:139] Memory required for data: 4318800
I0426 20:51:10.949070 31923 layer_factory.hpp:77] Creating layer relu3
I0426 20:51:10.949075 31923 net.cpp:86] Creating Layer relu3
I0426 20:51:10.949079 31923 net.cpp:408] relu3 <- ip3
I0426 20:51:10.949084 31923 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:51:10.950014 31923 net.cpp:124] Setting up relu3
I0426 20:51:10.950026 31923 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:10.950029 31923 net.cpp:139] Memory required for data: 4322800
I0426 20:51:10.950032 31923 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:51:10.950037 31923 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:51:10.950040 31923 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:51:10.950045 31923 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:51:10.950052 31923 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:51:10.950134 31923 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:51:10.950139 31923 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:10.950142 31923 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:10.950145 31923 net.cpp:139] Memory required for data: 4330800
I0426 20:51:10.950147 31923 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:10.950153 31923 net.cpp:86] Creating Layer accuracy
I0426 20:51:10.950156 31923 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:51:10.950160 31923 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:10.950165 31923 net.cpp:382] accuracy -> accuracy
I0426 20:51:10.950170 31923 net.cpp:124] Setting up accuracy
I0426 20:51:10.950176 31923 net.cpp:131] Top shape: (1)
I0426 20:51:10.950178 31923 net.cpp:139] Memory required for data: 4330804
I0426 20:51:10.950181 31923 layer_factory.hpp:77] Creating layer loss
I0426 20:51:10.950186 31923 net.cpp:86] Creating Layer loss
I0426 20:51:10.950189 31923 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:51:10.950192 31923 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:10.950196 31923 net.cpp:382] loss -> loss
I0426 20:51:10.950202 31923 layer_factory.hpp:77] Creating layer loss
I0426 20:51:10.950441 31923 net.cpp:124] Setting up loss
I0426 20:51:10.950450 31923 net.cpp:131] Top shape: (1)
I0426 20:51:10.950454 31923 net.cpp:134]     with loss weight 1
I0426 20:51:10.950469 31923 net.cpp:139] Memory required for data: 4330808
I0426 20:51:10.950474 31923 net.cpp:200] loss needs backward computation.
I0426 20:51:10.950477 31923 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:10.950480 31923 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:51:10.950484 31923 net.cpp:200] relu3 needs backward computation.
I0426 20:51:10.950485 31923 net.cpp:200] ip3 needs backward computation.
I0426 20:51:10.950489 31923 net.cpp:200] relu2 needs backward computation.
I0426 20:51:10.950490 31923 net.cpp:200] ip2 needs backward computation.
I0426 20:51:10.950494 31923 net.cpp:200] relu1 needs backward computation.
I0426 20:51:10.950495 31923 net.cpp:200] ip1 needs backward computation.
I0426 20:51:10.950498 31923 net.cpp:200] pool1 needs backward computation.
I0426 20:51:10.950501 31923 net.cpp:200] conv1 needs backward computation.
I0426 20:51:10.950503 31923 net.cpp:200] pool0 needs backward computation.
I0426 20:51:10.950508 31923 net.cpp:200] conv0 needs backward computation.
I0426 20:51:10.950520 31923 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:10.950522 31923 net.cpp:202] mnist does not need backward computation.
I0426 20:51:10.950525 31923 net.cpp:244] This network produces output accuracy
I0426 20:51:10.950528 31923 net.cpp:244] This network produces output loss
I0426 20:51:10.950543 31923 net.cpp:257] Network initialization done.
I0426 20:51:10.950583 31923 solver.cpp:56] Solver scaffolding done.
I0426 20:51:10.950917 31923 caffe.cpp:248] Starting Optimization
I0426 20:51:10.950923 31923 solver.cpp:273] Solving LeNet
I0426 20:51:10.950933 31923 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:10.951776 31923 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:10.956069 31923 blocking_queue.cpp:49] Waiting for data
I0426 20:51:11.028537 31930 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:11.029165 31923 solver.cpp:398]     Test net output #0: accuracy = 0.1278
I0426 20:51:11.029188 31923 solver.cpp:398]     Test net output #1: loss = 2.30983 (* 1 = 2.30983 loss)
I0426 20:51:11.031836 31923 solver.cpp:219] Iteration 0 (0 iter/s, 0.0808765s/100 iters), loss = 2.29055
I0426 20:51:11.031860 31923 solver.cpp:238]     Train net output #0: loss = 2.29055 (* 1 = 2.29055 loss)
I0426 20:51:11.031886 31923 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:11.138561 31923 solver.cpp:219] Iteration 100 (937.316 iter/s, 0.106688s/100 iters), loss = 0.264831
I0426 20:51:11.138587 31923 solver.cpp:238]     Train net output #0: loss = 0.264831 (* 1 = 0.264831 loss)
I0426 20:51:11.138593 31923 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:11.243860 31923 solver.cpp:219] Iteration 200 (950 iter/s, 0.105263s/100 iters), loss = 0.172459
I0426 20:51:11.243885 31923 solver.cpp:238]     Train net output #0: loss = 0.172459 (* 1 = 0.172459 loss)
I0426 20:51:11.243891 31923 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:11.347532 31923 solver.cpp:219] Iteration 300 (964.916 iter/s, 0.103636s/100 iters), loss = 0.236893
I0426 20:51:11.347558 31923 solver.cpp:238]     Train net output #0: loss = 0.236893 (* 1 = 0.236893 loss)
I0426 20:51:11.347563 31923 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:11.452535 31923 solver.cpp:219] Iteration 400 (952.67 iter/s, 0.104968s/100 iters), loss = 0.0634419
I0426 20:51:11.452558 31923 solver.cpp:238]     Train net output #0: loss = 0.0634419 (* 1 = 0.0634419 loss)
I0426 20:51:11.452564 31923 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:11.559506 31923 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:11.614755 31930 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:11.615396 31923 solver.cpp:398]     Test net output #0: accuracy = 0.9694
I0426 20:51:11.615413 31923 solver.cpp:398]     Test net output #1: loss = 0.0957344 (* 1 = 0.0957344 loss)
I0426 20:51:11.616437 31923 solver.cpp:219] Iteration 500 (610.256 iter/s, 0.163866s/100 iters), loss = 0.06311
I0426 20:51:11.616502 31923 solver.cpp:238]     Train net output #0: loss = 0.06311 (* 1 = 0.06311 loss)
I0426 20:51:11.616510 31923 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:11.725997 31923 solver.cpp:219] Iteration 600 (913.33 iter/s, 0.10949s/100 iters), loss = 0.166056
I0426 20:51:11.726021 31923 solver.cpp:238]     Train net output #0: loss = 0.166056 (* 1 = 0.166056 loss)
I0426 20:51:11.726045 31923 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:11.835613 31923 solver.cpp:219] Iteration 700 (912.571 iter/s, 0.10958s/100 iters), loss = 0.11389
I0426 20:51:11.835639 31923 solver.cpp:238]     Train net output #0: loss = 0.113891 (* 1 = 0.113891 loss)
I0426 20:51:11.835664 31923 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:11.943663 31923 solver.cpp:219] Iteration 800 (925.81 iter/s, 0.108014s/100 iters), loss = 0.174772
I0426 20:51:11.943688 31923 solver.cpp:238]     Train net output #0: loss = 0.174772 (* 1 = 0.174772 loss)
I0426 20:51:11.943712 31923 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:12.052057 31923 solver.cpp:219] Iteration 900 (922.871 iter/s, 0.108357s/100 iters), loss = 0.130774
I0426 20:51:12.052081 31923 solver.cpp:238]     Train net output #0: loss = 0.130774 (* 1 = 0.130774 loss)
I0426 20:51:12.052088 31923 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:12.086946 31929 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:12.156286 31923 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:12.159790 31923 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:12.161350 31923 solver.cpp:311] Iteration 1000, loss = 0.077011
I0426 20:51:12.161368 31923 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:12.236472 31930 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:12.237120 31923 solver.cpp:398]     Test net output #0: accuracy = 0.9779
I0426 20:51:12.237140 31923 solver.cpp:398]     Test net output #1: loss = 0.0711374 (* 1 = 0.0711374 loss)
I0426 20:51:12.237145 31923 solver.cpp:316] Optimization Done.
I0426 20:51:12.237149 31923 caffe.cpp:259] Optimization Done.
