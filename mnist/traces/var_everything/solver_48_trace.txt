I0426 20:49:56.534379 31653 caffe.cpp:218] Using GPUs 0
I0426 20:49:56.572779 31653 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:49:57.099151 31653 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test48.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:49:57.099298 31653 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test48.prototxt
I0426 20:49:57.099666 31653 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:49:57.099684 31653 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:49:57.099773 31653 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:57.099856 31653 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:57.099961 31653 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:49:57.099984 31653 net.cpp:86] Creating Layer mnist
I0426 20:49:57.099992 31653 net.cpp:382] mnist -> data
I0426 20:49:57.100018 31653 net.cpp:382] mnist -> label
I0426 20:49:57.101125 31653 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:49:57.103677 31653 net.cpp:124] Setting up mnist
I0426 20:49:57.103694 31653 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:49:57.103700 31653 net.cpp:131] Top shape: 64 (64)
I0426 20:49:57.103703 31653 net.cpp:139] Memory required for data: 200960
I0426 20:49:57.103710 31653 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:57.103760 31653 net.cpp:86] Creating Layer conv0
I0426 20:49:57.103767 31653 net.cpp:408] conv0 <- data
I0426 20:49:57.103780 31653 net.cpp:382] conv0 -> conv0
I0426 20:49:57.372767 31653 net.cpp:124] Setting up conv0
I0426 20:49:57.372807 31653 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:49:57.372833 31653 net.cpp:139] Memory required for data: 7573760
I0426 20:49:57.372848 31653 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:57.372861 31653 net.cpp:86] Creating Layer pool0
I0426 20:49:57.372900 31653 net.cpp:408] pool0 <- conv0
I0426 20:49:57.372906 31653 net.cpp:382] pool0 -> pool0
I0426 20:49:57.372968 31653 net.cpp:124] Setting up pool0
I0426 20:49:57.372975 31653 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:49:57.372978 31653 net.cpp:139] Memory required for data: 9416960
I0426 20:49:57.372982 31653 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:57.372989 31653 net.cpp:86] Creating Layer ip1
I0426 20:49:57.373008 31653 net.cpp:408] ip1 <- pool0
I0426 20:49:57.373013 31653 net.cpp:382] ip1 -> ip1
I0426 20:49:57.377804 31653 net.cpp:124] Setting up ip1
I0426 20:49:57.377815 31653 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:57.377820 31653 net.cpp:139] Memory required for data: 9442560
I0426 20:49:57.377826 31653 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:57.377833 31653 net.cpp:86] Creating Layer relu1
I0426 20:49:57.377836 31653 net.cpp:408] relu1 <- ip1
I0426 20:49:57.377840 31653 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:57.378026 31653 net.cpp:124] Setting up relu1
I0426 20:49:57.378034 31653 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:57.378037 31653 net.cpp:139] Memory required for data: 9468160
I0426 20:49:57.378041 31653 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:57.378047 31653 net.cpp:86] Creating Layer ip2
I0426 20:49:57.378049 31653 net.cpp:408] ip2 <- ip1
I0426 20:49:57.378070 31653 net.cpp:382] ip2 -> ip2
I0426 20:49:57.379071 31653 net.cpp:124] Setting up ip2
I0426 20:49:57.379083 31653 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:57.379101 31653 net.cpp:139] Memory required for data: 9493760
I0426 20:49:57.379109 31653 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:57.379115 31653 net.cpp:86] Creating Layer relu2
I0426 20:49:57.379118 31653 net.cpp:408] relu2 <- ip2
I0426 20:49:57.379123 31653 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:57.380012 31653 net.cpp:124] Setting up relu2
I0426 20:49:57.380023 31653 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:49:57.380040 31653 net.cpp:139] Memory required for data: 9519360
I0426 20:49:57.380043 31653 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:57.380050 31653 net.cpp:86] Creating Layer ip3
I0426 20:49:57.380053 31653 net.cpp:408] ip3 <- ip2
I0426 20:49:57.380059 31653 net.cpp:382] ip3 -> ip3
I0426 20:49:57.380199 31653 net.cpp:124] Setting up ip3
I0426 20:49:57.380206 31653 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:57.380209 31653 net.cpp:139] Memory required for data: 9521920
I0426 20:49:57.380214 31653 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:57.380231 31653 net.cpp:86] Creating Layer relu3
I0426 20:49:57.380234 31653 net.cpp:408] relu3 <- ip3
I0426 20:49:57.380239 31653 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:57.380383 31653 net.cpp:124] Setting up relu3
I0426 20:49:57.380390 31653 net.cpp:131] Top shape: 64 10 (640)
I0426 20:49:57.380393 31653 net.cpp:139] Memory required for data: 9524480
I0426 20:49:57.380396 31653 layer_factory.hpp:77] Creating layer loss
I0426 20:49:57.380403 31653 net.cpp:86] Creating Layer loss
I0426 20:49:57.380405 31653 net.cpp:408] loss <- ip3
I0426 20:49:57.380409 31653 net.cpp:408] loss <- label
I0426 20:49:57.380414 31653 net.cpp:382] loss -> loss
I0426 20:49:57.380431 31653 layer_factory.hpp:77] Creating layer loss
I0426 20:49:57.380682 31653 net.cpp:124] Setting up loss
I0426 20:49:57.380691 31653 net.cpp:131] Top shape: (1)
I0426 20:49:57.380694 31653 net.cpp:134]     with loss weight 1
I0426 20:49:57.380708 31653 net.cpp:139] Memory required for data: 9524484
I0426 20:49:57.380712 31653 net.cpp:200] loss needs backward computation.
I0426 20:49:57.380715 31653 net.cpp:200] relu3 needs backward computation.
I0426 20:49:57.380718 31653 net.cpp:200] ip3 needs backward computation.
I0426 20:49:57.380722 31653 net.cpp:200] relu2 needs backward computation.
I0426 20:49:57.380723 31653 net.cpp:200] ip2 needs backward computation.
I0426 20:49:57.380726 31653 net.cpp:200] relu1 needs backward computation.
I0426 20:49:57.380729 31653 net.cpp:200] ip1 needs backward computation.
I0426 20:49:57.380743 31653 net.cpp:200] pool0 needs backward computation.
I0426 20:49:57.380746 31653 net.cpp:200] conv0 needs backward computation.
I0426 20:49:57.380749 31653 net.cpp:202] mnist does not need backward computation.
I0426 20:49:57.380753 31653 net.cpp:244] This network produces output loss
I0426 20:49:57.380760 31653 net.cpp:257] Network initialization done.
I0426 20:49:57.381064 31653 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test48.prototxt
I0426 20:49:57.381093 31653 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:49:57.381187 31653 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:49:57.381249 31653 layer_factory.hpp:77] Creating layer mnist
I0426 20:49:57.381294 31653 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:49:57.381305 31653 net.cpp:86] Creating Layer mnist
I0426 20:49:57.381310 31653 net.cpp:382] mnist -> data
I0426 20:49:57.381319 31653 net.cpp:382] mnist -> label
I0426 20:49:57.381399 31653 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:49:57.383731 31653 net.cpp:124] Setting up mnist
I0426 20:49:57.383745 31653 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:49:57.383750 31653 net.cpp:131] Top shape: 100 (100)
I0426 20:49:57.383754 31653 net.cpp:139] Memory required for data: 314000
I0426 20:49:57.383757 31653 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:49:57.383783 31653 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:49:57.383787 31653 net.cpp:408] label_mnist_1_split <- label
I0426 20:49:57.383792 31653 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:49:57.383800 31653 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:49:57.383880 31653 net.cpp:124] Setting up label_mnist_1_split
I0426 20:49:57.383888 31653 net.cpp:131] Top shape: 100 (100)
I0426 20:49:57.383891 31653 net.cpp:131] Top shape: 100 (100)
I0426 20:49:57.383894 31653 net.cpp:139] Memory required for data: 314800
I0426 20:49:57.383908 31653 layer_factory.hpp:77] Creating layer conv0
I0426 20:49:57.383918 31653 net.cpp:86] Creating Layer conv0
I0426 20:49:57.383920 31653 net.cpp:408] conv0 <- data
I0426 20:49:57.383926 31653 net.cpp:382] conv0 -> conv0
I0426 20:49:57.385699 31653 net.cpp:124] Setting up conv0
I0426 20:49:57.385728 31653 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:49:57.385732 31653 net.cpp:139] Memory required for data: 11834800
I0426 20:49:57.385741 31653 layer_factory.hpp:77] Creating layer pool0
I0426 20:49:57.385748 31653 net.cpp:86] Creating Layer pool0
I0426 20:49:57.385751 31653 net.cpp:408] pool0 <- conv0
I0426 20:49:57.385756 31653 net.cpp:382] pool0 -> pool0
I0426 20:49:57.385807 31653 net.cpp:124] Setting up pool0
I0426 20:49:57.385812 31653 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:49:57.385815 31653 net.cpp:139] Memory required for data: 14714800
I0426 20:49:57.385818 31653 layer_factory.hpp:77] Creating layer ip1
I0426 20:49:57.385824 31653 net.cpp:86] Creating Layer ip1
I0426 20:49:57.385828 31653 net.cpp:408] ip1 <- pool0
I0426 20:49:57.385833 31653 net.cpp:382] ip1 -> ip1
I0426 20:49:57.390887 31653 net.cpp:124] Setting up ip1
I0426 20:49:57.390899 31653 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:57.390918 31653 net.cpp:139] Memory required for data: 14754800
I0426 20:49:57.390926 31653 layer_factory.hpp:77] Creating layer relu1
I0426 20:49:57.390933 31653 net.cpp:86] Creating Layer relu1
I0426 20:49:57.390935 31653 net.cpp:408] relu1 <- ip1
I0426 20:49:57.390954 31653 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:49:57.391127 31653 net.cpp:124] Setting up relu1
I0426 20:49:57.391136 31653 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:57.391139 31653 net.cpp:139] Memory required for data: 14794800
I0426 20:49:57.391144 31653 layer_factory.hpp:77] Creating layer ip2
I0426 20:49:57.391149 31653 net.cpp:86] Creating Layer ip2
I0426 20:49:57.391151 31653 net.cpp:408] ip2 <- ip1
I0426 20:49:57.391156 31653 net.cpp:382] ip2 -> ip2
I0426 20:49:57.391325 31653 net.cpp:124] Setting up ip2
I0426 20:49:57.391332 31653 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:57.391335 31653 net.cpp:139] Memory required for data: 14834800
I0426 20:49:57.391342 31653 layer_factory.hpp:77] Creating layer relu2
I0426 20:49:57.391347 31653 net.cpp:86] Creating Layer relu2
I0426 20:49:57.391350 31653 net.cpp:408] relu2 <- ip2
I0426 20:49:57.391355 31653 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:49:57.392171 31653 net.cpp:124] Setting up relu2
I0426 20:49:57.392184 31653 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:49:57.392187 31653 net.cpp:139] Memory required for data: 14874800
I0426 20:49:57.392190 31653 layer_factory.hpp:77] Creating layer ip3
I0426 20:49:57.392213 31653 net.cpp:86] Creating Layer ip3
I0426 20:49:57.392217 31653 net.cpp:408] ip3 <- ip2
I0426 20:49:57.392222 31653 net.cpp:382] ip3 -> ip3
I0426 20:49:57.392324 31653 net.cpp:124] Setting up ip3
I0426 20:49:57.392333 31653 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:57.392335 31653 net.cpp:139] Memory required for data: 14878800
I0426 20:49:57.392340 31653 layer_factory.hpp:77] Creating layer relu3
I0426 20:49:57.392345 31653 net.cpp:86] Creating Layer relu3
I0426 20:49:57.392349 31653 net.cpp:408] relu3 <- ip3
I0426 20:49:57.392352 31653 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:49:57.392495 31653 net.cpp:124] Setting up relu3
I0426 20:49:57.392503 31653 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:57.392506 31653 net.cpp:139] Memory required for data: 14882800
I0426 20:49:57.392509 31653 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:49:57.392513 31653 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:49:57.392516 31653 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:49:57.392521 31653 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:49:57.392526 31653 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:49:57.392560 31653 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:49:57.392565 31653 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:57.392578 31653 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:49:57.392581 31653 net.cpp:139] Memory required for data: 14890800
I0426 20:49:57.392585 31653 layer_factory.hpp:77] Creating layer accuracy
I0426 20:49:57.392590 31653 net.cpp:86] Creating Layer accuracy
I0426 20:49:57.392593 31653 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:49:57.392597 31653 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:49:57.392601 31653 net.cpp:382] accuracy -> accuracy
I0426 20:49:57.392608 31653 net.cpp:124] Setting up accuracy
I0426 20:49:57.392612 31653 net.cpp:131] Top shape: (1)
I0426 20:49:57.392616 31653 net.cpp:139] Memory required for data: 14890804
I0426 20:49:57.392617 31653 layer_factory.hpp:77] Creating layer loss
I0426 20:49:57.392622 31653 net.cpp:86] Creating Layer loss
I0426 20:49:57.392626 31653 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:49:57.392628 31653 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:49:57.392632 31653 net.cpp:382] loss -> loss
I0426 20:49:57.392638 31653 layer_factory.hpp:77] Creating layer loss
I0426 20:49:57.392904 31653 net.cpp:124] Setting up loss
I0426 20:49:57.392913 31653 net.cpp:131] Top shape: (1)
I0426 20:49:57.392916 31653 net.cpp:134]     with loss weight 1
I0426 20:49:57.392925 31653 net.cpp:139] Memory required for data: 14890808
I0426 20:49:57.392927 31653 net.cpp:200] loss needs backward computation.
I0426 20:49:57.392931 31653 net.cpp:202] accuracy does not need backward computation.
I0426 20:49:57.392935 31653 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:49:57.392938 31653 net.cpp:200] relu3 needs backward computation.
I0426 20:49:57.392941 31653 net.cpp:200] ip3 needs backward computation.
I0426 20:49:57.392945 31653 net.cpp:200] relu2 needs backward computation.
I0426 20:49:57.392947 31653 net.cpp:200] ip2 needs backward computation.
I0426 20:49:57.392951 31653 net.cpp:200] relu1 needs backward computation.
I0426 20:49:57.392953 31653 net.cpp:200] ip1 needs backward computation.
I0426 20:49:57.392957 31653 net.cpp:200] pool0 needs backward computation.
I0426 20:49:57.392961 31653 net.cpp:200] conv0 needs backward computation.
I0426 20:49:57.392964 31653 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:49:57.392968 31653 net.cpp:202] mnist does not need backward computation.
I0426 20:49:57.392971 31653 net.cpp:244] This network produces output accuracy
I0426 20:49:57.392974 31653 net.cpp:244] This network produces output loss
I0426 20:49:57.392984 31653 net.cpp:257] Network initialization done.
I0426 20:49:57.393023 31653 solver.cpp:56] Solver scaffolding done.
I0426 20:49:57.393316 31653 caffe.cpp:248] Starting Optimization
I0426 20:49:57.393323 31653 solver.cpp:273] Solving LeNet
I0426 20:49:57.393326 31653 solver.cpp:274] Learning Rate Policy: inv
I0426 20:49:57.395335 31653 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:49:57.403007 31653 blocking_queue.cpp:49] Waiting for data
I0426 20:49:57.472728 31660 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:57.473556 31653 solver.cpp:398]     Test net output #0: accuracy = 0.1251
I0426 20:49:57.473574 31653 solver.cpp:398]     Test net output #1: loss = 2.31188 (* 1 = 2.31188 loss)
I0426 20:49:57.477970 31653 solver.cpp:219] Iteration 0 (0 iter/s, 0.0846193s/100 iters), loss = 2.32065
I0426 20:49:57.478010 31653 solver.cpp:238]     Train net output #0: loss = 2.32065 (* 1 = 2.32065 loss)
I0426 20:49:57.478022 31653 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:49:57.600775 31653 solver.cpp:219] Iteration 100 (814.637 iter/s, 0.122754s/100 iters), loss = 0.43325
I0426 20:49:57.600800 31653 solver.cpp:238]     Train net output #0: loss = 0.43325 (* 1 = 0.43325 loss)
I0426 20:49:57.600806 31653 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:49:57.719595 31653 solver.cpp:219] Iteration 200 (841.864 iter/s, 0.118784s/100 iters), loss = 0.212153
I0426 20:49:57.719620 31653 solver.cpp:238]     Train net output #0: loss = 0.212153 (* 1 = 0.212153 loss)
I0426 20:49:57.719642 31653 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:49:57.835431 31653 solver.cpp:219] Iteration 300 (863.55 iter/s, 0.115801s/100 iters), loss = 0.221369
I0426 20:49:57.835454 31653 solver.cpp:238]     Train net output #0: loss = 0.221369 (* 1 = 0.221369 loss)
I0426 20:49:57.835475 31653 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:49:57.953248 31653 solver.cpp:219] Iteration 400 (849.133 iter/s, 0.117767s/100 iters), loss = 0.074036
I0426 20:49:57.953274 31653 solver.cpp:238]     Train net output #0: loss = 0.074036 (* 1 = 0.074036 loss)
I0426 20:49:57.953294 31653 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:49:58.069725 31653 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:49:58.136260 31660 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:58.137346 31653 solver.cpp:398]     Test net output #0: accuracy = 0.9566
I0426 20:49:58.137384 31653 solver.cpp:398]     Test net output #1: loss = 0.138199 (* 1 = 0.138199 loss)
I0426 20:49:58.138535 31653 solver.cpp:219] Iteration 500 (539.818 iter/s, 0.185248s/100 iters), loss = 0.222581
I0426 20:49:58.138572 31653 solver.cpp:238]     Train net output #0: loss = 0.22258 (* 1 = 0.22258 loss)
I0426 20:49:58.138578 31653 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:49:58.262919 31653 solver.cpp:219] Iteration 600 (804.172 iter/s, 0.124351s/100 iters), loss = 0.127799
I0426 20:49:58.262960 31653 solver.cpp:238]     Train net output #0: loss = 0.127799 (* 1 = 0.127799 loss)
I0426 20:49:58.262966 31653 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:49:58.379865 31653 solver.cpp:219] Iteration 700 (855.358 iter/s, 0.11691s/100 iters), loss = 0.29471
I0426 20:49:58.379906 31653 solver.cpp:238]     Train net output #0: loss = 0.29471 (* 1 = 0.29471 loss)
I0426 20:49:58.379914 31653 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:49:58.501571 31653 solver.cpp:219] Iteration 800 (822.002 iter/s, 0.121654s/100 iters), loss = 0.22897
I0426 20:49:58.501597 31653 solver.cpp:238]     Train net output #0: loss = 0.22897 (* 1 = 0.22897 loss)
I0426 20:49:58.501603 31653 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:49:58.621145 31653 solver.cpp:219] Iteration 900 (836.664 iter/s, 0.119522s/100 iters), loss = 0.141575
I0426 20:49:58.621171 31653 solver.cpp:238]     Train net output #0: loss = 0.141575 (* 1 = 0.141575 loss)
I0426 20:49:58.621177 31653 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:49:58.659483 31659 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:58.735954 31653 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:49:58.747287 31653 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:49:58.753103 31653 solver.cpp:311] Iteration 1000, loss = 0.149027
I0426 20:49:58.753120 31653 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:49:58.817085 31660 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:49:58.818763 31653 solver.cpp:398]     Test net output #0: accuracy = 0.9721
I0426 20:49:58.818783 31653 solver.cpp:398]     Test net output #1: loss = 0.0906374 (* 1 = 0.0906374 loss)
I0426 20:49:58.818789 31653 solver.cpp:316] Optimization Done.
I0426 20:49:58.818807 31653 caffe.cpp:259] Optimization Done.
