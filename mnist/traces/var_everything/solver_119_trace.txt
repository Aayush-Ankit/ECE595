I0426 20:52:42.024936 32252 caffe.cpp:218] Using GPUs 0
I0426 20:52:42.062417 32252 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:42.584677 32252 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test119.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:42.584825 32252 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test119.prototxt
I0426 20:52:42.585222 32252 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:42.585240 32252 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:42.585338 32252 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:42.585412 32252 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:42.585511 32252 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:42.585535 32252 net.cpp:86] Creating Layer mnist
I0426 20:52:42.585541 32252 net.cpp:382] mnist -> data
I0426 20:52:42.585563 32252 net.cpp:382] mnist -> label
I0426 20:52:42.586648 32252 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:42.589170 32252 net.cpp:124] Setting up mnist
I0426 20:52:42.589187 32252 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:42.589193 32252 net.cpp:131] Top shape: 64 (64)
I0426 20:52:42.589197 32252 net.cpp:139] Memory required for data: 200960
I0426 20:52:42.589205 32252 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:42.589221 32252 net.cpp:86] Creating Layer conv0
I0426 20:52:42.589241 32252 net.cpp:408] conv0 <- data
I0426 20:52:42.589253 32252 net.cpp:382] conv0 -> conv0
I0426 20:52:42.866890 32252 net.cpp:124] Setting up conv0
I0426 20:52:42.866919 32252 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:42.866922 32252 net.cpp:139] Memory required for data: 3887360
I0426 20:52:42.866936 32252 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:42.866950 32252 net.cpp:86] Creating Layer pool0
I0426 20:52:42.866955 32252 net.cpp:408] pool0 <- conv0
I0426 20:52:42.866961 32252 net.cpp:382] pool0 -> pool0
I0426 20:52:42.867022 32252 net.cpp:124] Setting up pool0
I0426 20:52:42.867027 32252 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:42.867029 32252 net.cpp:139] Memory required for data: 4808960
I0426 20:52:42.867033 32252 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:42.867043 32252 net.cpp:86] Creating Layer conv1
I0426 20:52:42.867045 32252 net.cpp:408] conv1 <- pool0
I0426 20:52:42.867050 32252 net.cpp:382] conv1 -> conv1
I0426 20:52:42.869820 32252 net.cpp:124] Setting up conv1
I0426 20:52:42.869849 32252 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:52:42.869853 32252 net.cpp:139] Memory required for data: 5218560
I0426 20:52:42.869860 32252 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:42.869868 32252 net.cpp:86] Creating Layer pool1
I0426 20:52:42.869870 32252 net.cpp:408] pool1 <- conv1
I0426 20:52:42.869876 32252 net.cpp:382] pool1 -> pool1
I0426 20:52:42.869927 32252 net.cpp:124] Setting up pool1
I0426 20:52:42.869932 32252 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:52:42.869935 32252 net.cpp:139] Memory required for data: 5320960
I0426 20:52:42.869937 32252 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:42.869949 32252 net.cpp:86] Creating Layer ip1
I0426 20:52:42.869952 32252 net.cpp:408] ip1 <- pool1
I0426 20:52:42.869957 32252 net.cpp:382] ip1 -> ip1
I0426 20:52:42.870352 32252 net.cpp:124] Setting up ip1
I0426 20:52:42.870360 32252 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:42.870378 32252 net.cpp:139] Memory required for data: 5346560
I0426 20:52:42.870384 32252 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:42.870404 32252 net.cpp:86] Creating Layer relu1
I0426 20:52:42.870407 32252 net.cpp:408] relu1 <- ip1
I0426 20:52:42.870411 32252 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:42.870638 32252 net.cpp:124] Setting up relu1
I0426 20:52:42.870647 32252 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:42.870651 32252 net.cpp:139] Memory required for data: 5372160
I0426 20:52:42.870654 32252 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:42.870661 32252 net.cpp:86] Creating Layer ip2
I0426 20:52:42.870664 32252 net.cpp:408] ip2 <- ip1
I0426 20:52:42.870669 32252 net.cpp:382] ip2 -> ip2
I0426 20:52:42.870836 32252 net.cpp:124] Setting up ip2
I0426 20:52:42.870844 32252 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:42.870847 32252 net.cpp:139] Memory required for data: 5397760
I0426 20:52:42.870852 32252 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:42.870858 32252 net.cpp:86] Creating Layer relu2
I0426 20:52:42.870862 32252 net.cpp:408] relu2 <- ip2
I0426 20:52:42.870865 32252 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:42.871703 32252 net.cpp:124] Setting up relu2
I0426 20:52:42.871714 32252 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:42.871733 32252 net.cpp:139] Memory required for data: 5423360
I0426 20:52:42.871737 32252 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:42.871743 32252 net.cpp:86] Creating Layer ip3
I0426 20:52:42.871747 32252 net.cpp:408] ip3 <- ip2
I0426 20:52:42.871752 32252 net.cpp:382] ip3 -> ip3
I0426 20:52:42.871873 32252 net.cpp:124] Setting up ip3
I0426 20:52:42.871881 32252 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:42.871884 32252 net.cpp:139] Memory required for data: 5425920
I0426 20:52:42.871891 32252 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:42.871896 32252 net.cpp:86] Creating Layer relu3
I0426 20:52:42.871899 32252 net.cpp:408] relu3 <- ip3
I0426 20:52:42.871903 32252 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:42.872107 32252 net.cpp:124] Setting up relu3
I0426 20:52:42.872115 32252 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:42.872119 32252 net.cpp:139] Memory required for data: 5428480
I0426 20:52:42.872123 32252 layer_factory.hpp:77] Creating layer loss
I0426 20:52:42.872128 32252 net.cpp:86] Creating Layer loss
I0426 20:52:42.872131 32252 net.cpp:408] loss <- ip3
I0426 20:52:42.872135 32252 net.cpp:408] loss <- label
I0426 20:52:42.872140 32252 net.cpp:382] loss -> loss
I0426 20:52:42.872158 32252 layer_factory.hpp:77] Creating layer loss
I0426 20:52:42.872418 32252 net.cpp:124] Setting up loss
I0426 20:52:42.872427 32252 net.cpp:131] Top shape: (1)
I0426 20:52:42.872431 32252 net.cpp:134]     with loss weight 1
I0426 20:52:42.872443 32252 net.cpp:139] Memory required for data: 5428484
I0426 20:52:42.872447 32252 net.cpp:200] loss needs backward computation.
I0426 20:52:42.872450 32252 net.cpp:200] relu3 needs backward computation.
I0426 20:52:42.872453 32252 net.cpp:200] ip3 needs backward computation.
I0426 20:52:42.872455 32252 net.cpp:200] relu2 needs backward computation.
I0426 20:52:42.872458 32252 net.cpp:200] ip2 needs backward computation.
I0426 20:52:42.872462 32252 net.cpp:200] relu1 needs backward computation.
I0426 20:52:42.872463 32252 net.cpp:200] ip1 needs backward computation.
I0426 20:52:42.872467 32252 net.cpp:200] pool1 needs backward computation.
I0426 20:52:42.872469 32252 net.cpp:200] conv1 needs backward computation.
I0426 20:52:42.872472 32252 net.cpp:200] pool0 needs backward computation.
I0426 20:52:42.872474 32252 net.cpp:200] conv0 needs backward computation.
I0426 20:52:42.872478 32252 net.cpp:202] mnist does not need backward computation.
I0426 20:52:42.872480 32252 net.cpp:244] This network produces output loss
I0426 20:52:42.872490 32252 net.cpp:257] Network initialization done.
I0426 20:52:42.872815 32252 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test119.prototxt
I0426 20:52:42.872887 32252 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:42.873039 32252 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:42.873132 32252 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:42.873181 32252 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:42.873208 32252 net.cpp:86] Creating Layer mnist
I0426 20:52:42.873214 32252 net.cpp:382] mnist -> data
I0426 20:52:42.873222 32252 net.cpp:382] mnist -> label
I0426 20:52:42.873338 32252 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:42.875310 32252 net.cpp:124] Setting up mnist
I0426 20:52:42.875334 32252 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:42.875339 32252 net.cpp:131] Top shape: 100 (100)
I0426 20:52:42.875341 32252 net.cpp:139] Memory required for data: 314000
I0426 20:52:42.875344 32252 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:42.875391 32252 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:42.875394 32252 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:42.875401 32252 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:42.875407 32252 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:42.875537 32252 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:42.875560 32252 net.cpp:131] Top shape: 100 (100)
I0426 20:52:42.875562 32252 net.cpp:131] Top shape: 100 (100)
I0426 20:52:42.875566 32252 net.cpp:139] Memory required for data: 314800
I0426 20:52:42.875568 32252 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:42.875578 32252 net.cpp:86] Creating Layer conv0
I0426 20:52:42.875581 32252 net.cpp:408] conv0 <- data
I0426 20:52:42.875586 32252 net.cpp:382] conv0 -> conv0
I0426 20:52:42.877205 32252 net.cpp:124] Setting up conv0
I0426 20:52:42.877218 32252 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:42.877221 32252 net.cpp:139] Memory required for data: 6074800
I0426 20:52:42.877230 32252 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:42.877251 32252 net.cpp:86] Creating Layer pool0
I0426 20:52:42.877254 32252 net.cpp:408] pool0 <- conv0
I0426 20:52:42.877259 32252 net.cpp:382] pool0 -> pool0
I0426 20:52:42.877293 32252 net.cpp:124] Setting up pool0
I0426 20:52:42.877300 32252 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:42.877301 32252 net.cpp:139] Memory required for data: 7514800
I0426 20:52:42.877305 32252 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:42.877312 32252 net.cpp:86] Creating Layer conv1
I0426 20:52:42.877315 32252 net.cpp:408] conv1 <- pool0
I0426 20:52:42.877321 32252 net.cpp:382] conv1 -> conv1
I0426 20:52:42.879617 32252 net.cpp:124] Setting up conv1
I0426 20:52:42.879631 32252 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:52:42.879636 32252 net.cpp:139] Memory required for data: 8154800
I0426 20:52:42.879643 32252 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:42.879650 32252 net.cpp:86] Creating Layer pool1
I0426 20:52:42.879669 32252 net.cpp:408] pool1 <- conv1
I0426 20:52:42.879674 32252 net.cpp:382] pool1 -> pool1
I0426 20:52:42.879712 32252 net.cpp:124] Setting up pool1
I0426 20:52:42.879717 32252 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:52:42.879720 32252 net.cpp:139] Memory required for data: 8314800
I0426 20:52:42.879724 32252 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:42.879729 32252 net.cpp:86] Creating Layer ip1
I0426 20:52:42.879732 32252 net.cpp:408] ip1 <- pool1
I0426 20:52:42.879740 32252 net.cpp:382] ip1 -> ip1
I0426 20:52:42.880120 32252 net.cpp:124] Setting up ip1
I0426 20:52:42.880128 32252 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:42.880142 32252 net.cpp:139] Memory required for data: 8354800
I0426 20:52:42.880172 32252 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:42.880177 32252 net.cpp:86] Creating Layer relu1
I0426 20:52:42.880180 32252 net.cpp:408] relu1 <- ip1
I0426 20:52:42.880185 32252 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:42.880365 32252 net.cpp:124] Setting up relu1
I0426 20:52:42.880374 32252 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:42.880378 32252 net.cpp:139] Memory required for data: 8394800
I0426 20:52:42.880380 32252 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:42.880388 32252 net.cpp:86] Creating Layer ip2
I0426 20:52:42.880391 32252 net.cpp:408] ip2 <- ip1
I0426 20:52:42.880396 32252 net.cpp:382] ip2 -> ip2
I0426 20:52:42.880548 32252 net.cpp:124] Setting up ip2
I0426 20:52:42.880554 32252 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:42.880558 32252 net.cpp:139] Memory required for data: 8434800
I0426 20:52:42.880563 32252 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:42.880568 32252 net.cpp:86] Creating Layer relu2
I0426 20:52:42.880579 32252 net.cpp:408] relu2 <- ip2
I0426 20:52:42.880584 32252 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:42.880754 32252 net.cpp:124] Setting up relu2
I0426 20:52:42.880764 32252 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:42.880766 32252 net.cpp:139] Memory required for data: 8474800
I0426 20:52:42.880769 32252 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:42.880775 32252 net.cpp:86] Creating Layer ip3
I0426 20:52:42.880785 32252 net.cpp:408] ip3 <- ip2
I0426 20:52:42.880791 32252 net.cpp:382] ip3 -> ip3
I0426 20:52:42.880956 32252 net.cpp:124] Setting up ip3
I0426 20:52:42.880964 32252 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:42.880967 32252 net.cpp:139] Memory required for data: 8478800
I0426 20:52:42.880978 32252 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:42.880997 32252 net.cpp:86] Creating Layer relu3
I0426 20:52:42.881001 32252 net.cpp:408] relu3 <- ip3
I0426 20:52:42.881006 32252 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:42.881922 32252 net.cpp:124] Setting up relu3
I0426 20:52:42.881934 32252 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:42.881937 32252 net.cpp:139] Memory required for data: 8482800
I0426 20:52:42.881947 32252 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:42.881969 32252 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:42.881983 32252 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:42.881989 32252 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:42.881996 32252 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:42.882061 32252 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:42.882067 32252 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:42.882071 32252 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:42.882074 32252 net.cpp:139] Memory required for data: 8490800
I0426 20:52:42.882077 32252 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:42.882083 32252 net.cpp:86] Creating Layer accuracy
I0426 20:52:42.882087 32252 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:42.882107 32252 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:42.882110 32252 net.cpp:382] accuracy -> accuracy
I0426 20:52:42.882117 32252 net.cpp:124] Setting up accuracy
I0426 20:52:42.882128 32252 net.cpp:131] Top shape: (1)
I0426 20:52:42.882129 32252 net.cpp:139] Memory required for data: 8490804
I0426 20:52:42.882133 32252 layer_factory.hpp:77] Creating layer loss
I0426 20:52:42.882138 32252 net.cpp:86] Creating Layer loss
I0426 20:52:42.882151 32252 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:42.882154 32252 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:42.882160 32252 net.cpp:382] loss -> loss
I0426 20:52:42.882171 32252 layer_factory.hpp:77] Creating layer loss
I0426 20:52:42.882421 32252 net.cpp:124] Setting up loss
I0426 20:52:42.882428 32252 net.cpp:131] Top shape: (1)
I0426 20:52:42.882431 32252 net.cpp:134]     with loss weight 1
I0426 20:52:42.882447 32252 net.cpp:139] Memory required for data: 8490808
I0426 20:52:42.882450 32252 net.cpp:200] loss needs backward computation.
I0426 20:52:42.882453 32252 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:42.882457 32252 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:42.882460 32252 net.cpp:200] relu3 needs backward computation.
I0426 20:52:42.882462 32252 net.cpp:200] ip3 needs backward computation.
I0426 20:52:42.882465 32252 net.cpp:200] relu2 needs backward computation.
I0426 20:52:42.882467 32252 net.cpp:200] ip2 needs backward computation.
I0426 20:52:42.882470 32252 net.cpp:200] relu1 needs backward computation.
I0426 20:52:42.882473 32252 net.cpp:200] ip1 needs backward computation.
I0426 20:52:42.882477 32252 net.cpp:200] pool1 needs backward computation.
I0426 20:52:42.882478 32252 net.cpp:200] conv1 needs backward computation.
I0426 20:52:42.882481 32252 net.cpp:200] pool0 needs backward computation.
I0426 20:52:42.882484 32252 net.cpp:200] conv0 needs backward computation.
I0426 20:52:42.882488 32252 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:42.882491 32252 net.cpp:202] mnist does not need backward computation.
I0426 20:52:42.882505 32252 net.cpp:244] This network produces output accuracy
I0426 20:52:42.882508 32252 net.cpp:244] This network produces output loss
I0426 20:52:42.882519 32252 net.cpp:257] Network initialization done.
I0426 20:52:42.882560 32252 solver.cpp:56] Solver scaffolding done.
I0426 20:52:42.882886 32252 caffe.cpp:248] Starting Optimization
I0426 20:52:42.882894 32252 solver.cpp:273] Solving LeNet
I0426 20:52:42.882896 32252 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:42.883839 32252 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:42.890002 32252 blocking_queue.cpp:49] Waiting for data
I0426 20:52:42.960467 32259 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:42.961196 32252 solver.cpp:398]     Test net output #0: accuracy = 0.1024
I0426 20:52:42.961215 32252 solver.cpp:398]     Test net output #1: loss = 2.31482 (* 1 = 2.31482 loss)
I0426 20:52:42.965013 32252 solver.cpp:219] Iteration 0 (-1.56833e-30 iter/s, 0.082087s/100 iters), loss = 2.33558
I0426 20:52:42.965061 32252 solver.cpp:238]     Train net output #0: loss = 2.33558 (* 1 = 2.33558 loss)
I0426 20:52:42.965080 32252 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:43.081013 32252 solver.cpp:219] Iteration 100 (862.422 iter/s, 0.115952s/100 iters), loss = 0.81797
I0426 20:52:43.081058 32252 solver.cpp:238]     Train net output #0: loss = 0.81797 (* 1 = 0.81797 loss)
I0426 20:52:43.081064 32252 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:43.201268 32252 solver.cpp:219] Iteration 200 (832.002 iter/s, 0.120192s/100 iters), loss = 0.538205
I0426 20:52:43.201326 32252 solver.cpp:238]     Train net output #0: loss = 0.538205 (* 1 = 0.538205 loss)
I0426 20:52:43.201354 32252 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:43.311638 32252 solver.cpp:219] Iteration 300 (906.558 iter/s, 0.110307s/100 iters), loss = 0.584245
I0426 20:52:43.311669 32252 solver.cpp:238]     Train net output #0: loss = 0.584245 (* 1 = 0.584245 loss)
I0426 20:52:43.311681 32252 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:43.419915 32252 solver.cpp:219] Iteration 400 (923.883 iter/s, 0.108239s/100 iters), loss = 0.423445
I0426 20:52:43.419944 32252 solver.cpp:238]     Train net output #0: loss = 0.423445 (* 1 = 0.423445 loss)
I0426 20:52:43.419968 32252 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:43.527540 32252 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:43.586763 32259 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:43.588156 32252 solver.cpp:398]     Test net output #0: accuracy = 0.7643
I0426 20:52:43.588178 32252 solver.cpp:398]     Test net output #1: loss = 0.584841 (* 1 = 0.584841 loss)
I0426 20:52:43.589237 32252 solver.cpp:219] Iteration 500 (590.728 iter/s, 0.169283s/100 iters), loss = 0.570441
I0426 20:52:43.589294 32252 solver.cpp:238]     Train net output #0: loss = 0.570441 (* 1 = 0.570441 loss)
I0426 20:52:43.589320 32252 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:43.705476 32252 solver.cpp:219] Iteration 600 (860.665 iter/s, 0.116189s/100 iters), loss = 0.424323
I0426 20:52:43.705502 32252 solver.cpp:238]     Train net output #0: loss = 0.424323 (* 1 = 0.424323 loss)
I0426 20:52:43.705513 32252 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:43.817230 32252 solver.cpp:219] Iteration 700 (895.108 iter/s, 0.111718s/100 iters), loss = 0.309467
I0426 20:52:43.817257 32252 solver.cpp:238]     Train net output #0: loss = 0.309467 (* 1 = 0.309467 loss)
I0426 20:52:43.817282 32252 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:43.929807 32252 solver.cpp:219] Iteration 800 (888.56 iter/s, 0.112542s/100 iters), loss = 0.523203
I0426 20:52:43.929834 32252 solver.cpp:238]     Train net output #0: loss = 0.523203 (* 1 = 0.523203 loss)
I0426 20:52:43.929844 32252 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:44.042904 32252 solver.cpp:219] Iteration 900 (884.479 iter/s, 0.113061s/100 iters), loss = 0.481468
I0426 20:52:44.042932 32252 solver.cpp:238]     Train net output #0: loss = 0.481468 (* 1 = 0.481468 loss)
I0426 20:52:44.042955 32252 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:44.080687 32258 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:44.155797 32252 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:44.157567 32252 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:44.158535 32252 solver.cpp:311] Iteration 1000, loss = 0.373602
I0426 20:52:44.158548 32252 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:44.233384 32259 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:44.234055 32252 solver.cpp:398]     Test net output #0: accuracy = 0.8836
I0426 20:52:44.234076 32252 solver.cpp:398]     Test net output #1: loss = 0.300218 (* 1 = 0.300218 loss)
I0426 20:52:44.234097 32252 solver.cpp:316] Optimization Done.
I0426 20:52:44.234102 32252 caffe.cpp:259] Optimization Done.
