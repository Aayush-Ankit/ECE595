I0426 20:53:36.157516 32470 caffe.cpp:218] Using GPUs 0
I0426 20:53:36.193851 32470 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:53:36.714182 32470 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test140.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:53:36.714323 32470 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test140.prototxt
I0426 20:53:36.714684 32470 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:53:36.714700 32470 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:53:36.714783 32470 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:53:36.714854 32470 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:36.714978 32470 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:53:36.715003 32470 net.cpp:86] Creating Layer mnist
I0426 20:53:36.715011 32470 net.cpp:382] mnist -> data
I0426 20:53:36.715034 32470 net.cpp:382] mnist -> label
I0426 20:53:36.716131 32470 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:53:36.718673 32470 net.cpp:124] Setting up mnist
I0426 20:53:36.718691 32470 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:53:36.718698 32470 net.cpp:131] Top shape: 64 (64)
I0426 20:53:36.718701 32470 net.cpp:139] Memory required for data: 200960
I0426 20:53:36.718708 32470 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:36.718731 32470 net.cpp:86] Creating Layer conv0
I0426 20:53:36.718737 32470 net.cpp:408] conv0 <- data
I0426 20:53:36.718750 32470 net.cpp:382] conv0 -> conv0
I0426 20:53:37.004397 32470 net.cpp:124] Setting up conv0
I0426 20:53:37.004426 32470 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:53:37.004429 32470 net.cpp:139] Memory required for data: 7573760
I0426 20:53:37.004444 32470 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:37.004458 32470 net.cpp:86] Creating Layer pool0
I0426 20:53:37.004462 32470 net.cpp:408] pool0 <- conv0
I0426 20:53:37.004467 32470 net.cpp:382] pool0 -> pool0
I0426 20:53:37.004523 32470 net.cpp:124] Setting up pool0
I0426 20:53:37.004530 32470 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:53:37.004547 32470 net.cpp:139] Memory required for data: 9416960
I0426 20:53:37.004551 32470 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:37.004562 32470 net.cpp:86] Creating Layer conv1
I0426 20:53:37.004567 32470 net.cpp:408] conv1 <- pool0
I0426 20:53:37.004572 32470 net.cpp:382] conv1 -> conv1
I0426 20:53:37.007393 32470 net.cpp:124] Setting up conv1
I0426 20:53:37.007408 32470 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:53:37.007412 32470 net.cpp:139] Memory required for data: 9580800
I0426 20:53:37.007421 32470 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:37.007428 32470 net.cpp:86] Creating Layer pool1
I0426 20:53:37.007432 32470 net.cpp:408] pool1 <- conv1
I0426 20:53:37.007437 32470 net.cpp:382] pool1 -> pool1
I0426 20:53:37.007480 32470 net.cpp:124] Setting up pool1
I0426 20:53:37.007486 32470 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:53:37.007489 32470 net.cpp:139] Memory required for data: 9621760
I0426 20:53:37.007493 32470 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:37.007499 32470 net.cpp:86] Creating Layer ip1
I0426 20:53:37.007503 32470 net.cpp:408] ip1 <- pool1
I0426 20:53:37.007506 32470 net.cpp:382] ip1 -> ip1
I0426 20:53:37.007613 32470 net.cpp:124] Setting up ip1
I0426 20:53:37.007622 32470 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:37.007624 32470 net.cpp:139] Memory required for data: 9624320
I0426 20:53:37.007632 32470 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:37.007637 32470 net.cpp:86] Creating Layer relu1
I0426 20:53:37.007639 32470 net.cpp:408] relu1 <- ip1
I0426 20:53:37.007643 32470 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:37.007807 32470 net.cpp:124] Setting up relu1
I0426 20:53:37.007815 32470 net.cpp:131] Top shape: 64 10 (640)
I0426 20:53:37.007818 32470 net.cpp:139] Memory required for data: 9626880
I0426 20:53:37.007822 32470 layer_factory.hpp:77] Creating layer loss
I0426 20:53:37.007827 32470 net.cpp:86] Creating Layer loss
I0426 20:53:37.007830 32470 net.cpp:408] loss <- ip1
I0426 20:53:37.007834 32470 net.cpp:408] loss <- label
I0426 20:53:37.007839 32470 net.cpp:382] loss -> loss
I0426 20:53:37.007853 32470 layer_factory.hpp:77] Creating layer loss
I0426 20:53:37.008708 32470 net.cpp:124] Setting up loss
I0426 20:53:37.008721 32470 net.cpp:131] Top shape: (1)
I0426 20:53:37.008724 32470 net.cpp:134]     with loss weight 1
I0426 20:53:37.008739 32470 net.cpp:139] Memory required for data: 9626884
I0426 20:53:37.008744 32470 net.cpp:200] loss needs backward computation.
I0426 20:53:37.008747 32470 net.cpp:200] relu1 needs backward computation.
I0426 20:53:37.008750 32470 net.cpp:200] ip1 needs backward computation.
I0426 20:53:37.008754 32470 net.cpp:200] pool1 needs backward computation.
I0426 20:53:37.008756 32470 net.cpp:200] conv1 needs backward computation.
I0426 20:53:37.008759 32470 net.cpp:200] pool0 needs backward computation.
I0426 20:53:37.008762 32470 net.cpp:200] conv0 needs backward computation.
I0426 20:53:37.008765 32470 net.cpp:202] mnist does not need backward computation.
I0426 20:53:37.008769 32470 net.cpp:244] This network produces output loss
I0426 20:53:37.008775 32470 net.cpp:257] Network initialization done.
I0426 20:53:37.009053 32470 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test140.prototxt
I0426 20:53:37.009078 32470 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:53:37.009166 32470 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:53:37.009235 32470 layer_factory.hpp:77] Creating layer mnist
I0426 20:53:37.009277 32470 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:53:37.009289 32470 net.cpp:86] Creating Layer mnist
I0426 20:53:37.009294 32470 net.cpp:382] mnist -> data
I0426 20:53:37.009300 32470 net.cpp:382] mnist -> label
I0426 20:53:37.009382 32470 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:53:37.011423 32470 net.cpp:124] Setting up mnist
I0426 20:53:37.011437 32470 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:53:37.011442 32470 net.cpp:131] Top shape: 100 (100)
I0426 20:53:37.011445 32470 net.cpp:139] Memory required for data: 314000
I0426 20:53:37.011448 32470 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:53:37.011456 32470 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:53:37.011458 32470 net.cpp:408] label_mnist_1_split <- label
I0426 20:53:37.011462 32470 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:53:37.011471 32470 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:53:37.011554 32470 net.cpp:124] Setting up label_mnist_1_split
I0426 20:53:37.011567 32470 net.cpp:131] Top shape: 100 (100)
I0426 20:53:37.011571 32470 net.cpp:131] Top shape: 100 (100)
I0426 20:53:37.011574 32470 net.cpp:139] Memory required for data: 314800
I0426 20:53:37.011576 32470 layer_factory.hpp:77] Creating layer conv0
I0426 20:53:37.011585 32470 net.cpp:86] Creating Layer conv0
I0426 20:53:37.011589 32470 net.cpp:408] conv0 <- data
I0426 20:53:37.011593 32470 net.cpp:382] conv0 -> conv0
I0426 20:53:37.012362 32470 net.cpp:124] Setting up conv0
I0426 20:53:37.012374 32470 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:53:37.012379 32470 net.cpp:139] Memory required for data: 11834800
I0426 20:53:37.012387 32470 layer_factory.hpp:77] Creating layer pool0
I0426 20:53:37.012393 32470 net.cpp:86] Creating Layer pool0
I0426 20:53:37.012397 32470 net.cpp:408] pool0 <- conv0
I0426 20:53:37.012401 32470 net.cpp:382] pool0 -> pool0
I0426 20:53:37.012434 32470 net.cpp:124] Setting up pool0
I0426 20:53:37.012439 32470 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:53:37.012441 32470 net.cpp:139] Memory required for data: 14714800
I0426 20:53:37.012444 32470 layer_factory.hpp:77] Creating layer conv1
I0426 20:53:37.012452 32470 net.cpp:86] Creating Layer conv1
I0426 20:53:37.012455 32470 net.cpp:408] conv1 <- pool0
I0426 20:53:37.012459 32470 net.cpp:382] conv1 -> conv1
I0426 20:53:37.014128 32470 net.cpp:124] Setting up conv1
I0426 20:53:37.014142 32470 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:53:37.014145 32470 net.cpp:139] Memory required for data: 14970800
I0426 20:53:37.014153 32470 layer_factory.hpp:77] Creating layer pool1
I0426 20:53:37.014159 32470 net.cpp:86] Creating Layer pool1
I0426 20:53:37.014173 32470 net.cpp:408] pool1 <- conv1
I0426 20:53:37.014179 32470 net.cpp:382] pool1 -> pool1
I0426 20:53:37.014214 32470 net.cpp:124] Setting up pool1
I0426 20:53:37.014219 32470 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:53:37.014222 32470 net.cpp:139] Memory required for data: 15034800
I0426 20:53:37.014225 32470 layer_factory.hpp:77] Creating layer ip1
I0426 20:53:37.014230 32470 net.cpp:86] Creating Layer ip1
I0426 20:53:37.014233 32470 net.cpp:408] ip1 <- pool1
I0426 20:53:37.014238 32470 net.cpp:382] ip1 -> ip1
I0426 20:53:37.014336 32470 net.cpp:124] Setting up ip1
I0426 20:53:37.014344 32470 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:37.014348 32470 net.cpp:139] Memory required for data: 15038800
I0426 20:53:37.014354 32470 layer_factory.hpp:77] Creating layer relu1
I0426 20:53:37.014359 32470 net.cpp:86] Creating Layer relu1
I0426 20:53:37.014363 32470 net.cpp:408] relu1 <- ip1
I0426 20:53:37.014367 32470 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:53:37.015168 32470 net.cpp:124] Setting up relu1
I0426 20:53:37.015180 32470 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:37.015183 32470 net.cpp:139] Memory required for data: 15042800
I0426 20:53:37.015187 32470 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:53:37.015193 32470 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:53:37.015197 32470 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:53:37.015202 32470 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:53:37.015208 32470 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:53:37.015278 32470 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:53:37.015285 32470 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:37.015288 32470 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:53:37.015291 32470 net.cpp:139] Memory required for data: 15050800
I0426 20:53:37.015295 32470 layer_factory.hpp:77] Creating layer accuracy
I0426 20:53:37.015298 32470 net.cpp:86] Creating Layer accuracy
I0426 20:53:37.015302 32470 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:53:37.015306 32470 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:53:37.015311 32470 net.cpp:382] accuracy -> accuracy
I0426 20:53:37.015317 32470 net.cpp:124] Setting up accuracy
I0426 20:53:37.015321 32470 net.cpp:131] Top shape: (1)
I0426 20:53:37.015324 32470 net.cpp:139] Memory required for data: 15050804
I0426 20:53:37.015326 32470 layer_factory.hpp:77] Creating layer loss
I0426 20:53:37.015331 32470 net.cpp:86] Creating Layer loss
I0426 20:53:37.015334 32470 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:53:37.015337 32470 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:53:37.015341 32470 net.cpp:382] loss -> loss
I0426 20:53:37.015347 32470 layer_factory.hpp:77] Creating layer loss
I0426 20:53:37.015561 32470 net.cpp:124] Setting up loss
I0426 20:53:37.015570 32470 net.cpp:131] Top shape: (1)
I0426 20:53:37.015573 32470 net.cpp:134]     with loss weight 1
I0426 20:53:37.015579 32470 net.cpp:139] Memory required for data: 15050808
I0426 20:53:37.015583 32470 net.cpp:200] loss needs backward computation.
I0426 20:53:37.015588 32470 net.cpp:202] accuracy does not need backward computation.
I0426 20:53:37.015591 32470 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:53:37.015594 32470 net.cpp:200] relu1 needs backward computation.
I0426 20:53:37.015596 32470 net.cpp:200] ip1 needs backward computation.
I0426 20:53:37.015605 32470 net.cpp:200] pool1 needs backward computation.
I0426 20:53:37.015609 32470 net.cpp:200] conv1 needs backward computation.
I0426 20:53:37.015611 32470 net.cpp:200] pool0 needs backward computation.
I0426 20:53:37.015614 32470 net.cpp:200] conv0 needs backward computation.
I0426 20:53:37.015619 32470 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:53:37.015621 32470 net.cpp:202] mnist does not need backward computation.
I0426 20:53:37.015625 32470 net.cpp:244] This network produces output accuracy
I0426 20:53:37.015628 32470 net.cpp:244] This network produces output loss
I0426 20:53:37.015646 32470 net.cpp:257] Network initialization done.
I0426 20:53:37.015677 32470 solver.cpp:56] Solver scaffolding done.
I0426 20:53:37.015874 32470 caffe.cpp:248] Starting Optimization
I0426 20:53:37.015882 32470 solver.cpp:273] Solving LeNet
I0426 20:53:37.015884 32470 solver.cpp:274] Learning Rate Policy: inv
I0426 20:53:37.015980 32470 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:53:37.022734 32470 blocking_queue.cpp:49] Waiting for data
I0426 20:53:37.085851 32477 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:37.086616 32470 solver.cpp:398]     Test net output #0: accuracy = 0.0798
I0426 20:53:37.086650 32470 solver.cpp:398]     Test net output #1: loss = 2.38309 (* 1 = 2.38309 loss)
I0426 20:53:37.090926 32470 solver.cpp:219] Iteration 0 (-9.48e-35 iter/s, 0.0750184s/100 iters), loss = 2.30904
I0426 20:53:37.090950 32470 solver.cpp:238]     Train net output #0: loss = 2.30904 (* 1 = 2.30904 loss)
I0426 20:53:37.090960 32470 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:53:37.208202 32470 solver.cpp:219] Iteration 100 (852.945 iter/s, 0.117241s/100 iters), loss = 0.302255
I0426 20:53:37.208242 32470 solver.cpp:238]     Train net output #0: loss = 0.302255 (* 1 = 0.302255 loss)
I0426 20:53:37.208248 32470 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:53:37.317083 32470 solver.cpp:219] Iteration 200 (918.729 iter/s, 0.108846s/100 iters), loss = 0.218697
I0426 20:53:37.317126 32470 solver.cpp:238]     Train net output #0: loss = 0.218697 (* 1 = 0.218697 loss)
I0426 20:53:37.317132 32470 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:53:37.430589 32470 solver.cpp:219] Iteration 300 (881.444 iter/s, 0.11345s/100 iters), loss = 0.188656
I0426 20:53:37.430630 32470 solver.cpp:238]     Train net output #0: loss = 0.188656 (* 1 = 0.188656 loss)
I0426 20:53:37.430640 32470 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:53:37.540441 32470 solver.cpp:219] Iteration 400 (910.726 iter/s, 0.109802s/100 iters), loss = 0.0601864
I0426 20:53:37.540467 32470 solver.cpp:238]     Train net output #0: loss = 0.0601863 (* 1 = 0.0601863 loss)
I0426 20:53:37.540473 32470 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:53:37.644613 32470 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:53:37.709338 32477 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:37.710218 32470 solver.cpp:398]     Test net output #0: accuracy = 0.9613
I0426 20:53:37.710237 32470 solver.cpp:398]     Test net output #1: loss = 0.131416 (* 1 = 0.131416 loss)
I0426 20:53:37.711376 32470 solver.cpp:219] Iteration 500 (585.15 iter/s, 0.170896s/100 iters), loss = 0.187207
I0426 20:53:37.711414 32470 solver.cpp:238]     Train net output #0: loss = 0.187207 (* 1 = 0.187207 loss)
I0426 20:53:37.711421 32470 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:53:37.827074 32470 solver.cpp:219] Iteration 600 (864.604 iter/s, 0.11566s/100 iters), loss = 0.13055
I0426 20:53:37.827116 32470 solver.cpp:238]     Train net output #0: loss = 0.13055 (* 1 = 0.13055 loss)
I0426 20:53:37.827121 32470 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:53:37.933146 32470 solver.cpp:219] Iteration 700 (943.22 iter/s, 0.10602s/100 iters), loss = 0.156744
I0426 20:53:37.933177 32470 solver.cpp:238]     Train net output #0: loss = 0.156744 (* 1 = 0.156744 loss)
I0426 20:53:37.933185 32470 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:53:38.040706 32470 solver.cpp:219] Iteration 800 (930.068 iter/s, 0.107519s/100 iters), loss = 0.201873
I0426 20:53:38.040737 32470 solver.cpp:238]     Train net output #0: loss = 0.201873 (* 1 = 0.201873 loss)
I0426 20:53:38.040745 32470 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:53:38.148015 32470 solver.cpp:219] Iteration 900 (932.244 iter/s, 0.107268s/100 iters), loss = 0.19885
I0426 20:53:38.148044 32470 solver.cpp:238]     Train net output #0: loss = 0.19885 (* 1 = 0.19885 loss)
I0426 20:53:38.148052 32470 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:53:38.183706 32476 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:38.257750 32470 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:53:38.258962 32470 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:53:38.259809 32470 solver.cpp:311] Iteration 1000, loss = 0.093929
I0426 20:53:38.259822 32470 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:53:38.331768 32477 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:53:38.332528 32470 solver.cpp:398]     Test net output #0: accuracy = 0.9728
I0426 20:53:38.332551 32470 solver.cpp:398]     Test net output #1: loss = 0.0873974 (* 1 = 0.0873974 loss)
I0426 20:53:38.332564 32470 solver.cpp:316] Optimization Done.
I0426 20:53:38.332587 32470 caffe.cpp:259] Optimization Done.
