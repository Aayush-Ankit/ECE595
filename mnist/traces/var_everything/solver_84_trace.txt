I0426 20:51:19.410009 31958 caffe.cpp:218] Using GPUs 0
I0426 20:51:19.442731 31958 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:51:19.905939 31958 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test84.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:51:19.906083 31958 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test84.prototxt
I0426 20:51:19.906380 31958 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:51:19.906394 31958 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:51:19.906461 31958 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:51:19.906519 31958 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:19.906605 31958 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:51:19.906625 31958 net.cpp:86] Creating Layer mnist
I0426 20:51:19.906632 31958 net.cpp:382] mnist -> data
I0426 20:51:19.906651 31958 net.cpp:382] mnist -> label
I0426 20:51:19.907577 31958 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:51:19.909749 31958 net.cpp:124] Setting up mnist
I0426 20:51:19.909777 31958 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:51:19.909782 31958 net.cpp:131] Top shape: 64 (64)
I0426 20:51:19.909785 31958 net.cpp:139] Memory required for data: 200960
I0426 20:51:19.909791 31958 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:19.909814 31958 net.cpp:86] Creating Layer conv0
I0426 20:51:19.909821 31958 net.cpp:408] conv0 <- data
I0426 20:51:19.909831 31958 net.cpp:382] conv0 -> conv0
I0426 20:51:20.142433 31958 net.cpp:124] Setting up conv0
I0426 20:51:20.142473 31958 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:51:20.142477 31958 net.cpp:139] Memory required for data: 1675520
I0426 20:51:20.142493 31958 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:20.142504 31958 net.cpp:86] Creating Layer pool0
I0426 20:51:20.142508 31958 net.cpp:408] pool0 <- conv0
I0426 20:51:20.142513 31958 net.cpp:382] pool0 -> pool0
I0426 20:51:20.142571 31958 net.cpp:124] Setting up pool0
I0426 20:51:20.142577 31958 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:51:20.142596 31958 net.cpp:139] Memory required for data: 2044160
I0426 20:51:20.142599 31958 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:20.142627 31958 net.cpp:86] Creating Layer conv1
I0426 20:51:20.142629 31958 net.cpp:408] conv1 <- pool0
I0426 20:51:20.142634 31958 net.cpp:382] conv1 -> conv1
I0426 20:51:20.145355 31958 net.cpp:124] Setting up conv1
I0426 20:51:20.145368 31958 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:51:20.145372 31958 net.cpp:139] Memory required for data: 2863360
I0426 20:51:20.145380 31958 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:20.145387 31958 net.cpp:86] Creating Layer pool1
I0426 20:51:20.145390 31958 net.cpp:408] pool1 <- conv1
I0426 20:51:20.145395 31958 net.cpp:382] pool1 -> pool1
I0426 20:51:20.145443 31958 net.cpp:124] Setting up pool1
I0426 20:51:20.145448 31958 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:51:20.145452 31958 net.cpp:139] Memory required for data: 3068160
I0426 20:51:20.145454 31958 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:20.145462 31958 net.cpp:86] Creating Layer ip1
I0426 20:51:20.145463 31958 net.cpp:408] ip1 <- pool1
I0426 20:51:20.145468 31958 net.cpp:382] ip1 -> ip1
I0426 20:51:20.145622 31958 net.cpp:124] Setting up ip1
I0426 20:51:20.145629 31958 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:20.145632 31958 net.cpp:139] Memory required for data: 3070720
I0426 20:51:20.145639 31958 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:20.145644 31958 net.cpp:86] Creating Layer relu1
I0426 20:51:20.145648 31958 net.cpp:408] relu1 <- ip1
I0426 20:51:20.145651 31958 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:20.145803 31958 net.cpp:124] Setting up relu1
I0426 20:51:20.145812 31958 net.cpp:131] Top shape: 64 10 (640)
I0426 20:51:20.145815 31958 net.cpp:139] Memory required for data: 3073280
I0426 20:51:20.145834 31958 layer_factory.hpp:77] Creating layer loss
I0426 20:51:20.145840 31958 net.cpp:86] Creating Layer loss
I0426 20:51:20.145843 31958 net.cpp:408] loss <- ip1
I0426 20:51:20.145848 31958 net.cpp:408] loss <- label
I0426 20:51:20.145853 31958 net.cpp:382] loss -> loss
I0426 20:51:20.145869 31958 layer_factory.hpp:77] Creating layer loss
I0426 20:51:20.146725 31958 net.cpp:124] Setting up loss
I0426 20:51:20.146737 31958 net.cpp:131] Top shape: (1)
I0426 20:51:20.146756 31958 net.cpp:134]     with loss weight 1
I0426 20:51:20.146785 31958 net.cpp:139] Memory required for data: 3073284
I0426 20:51:20.146787 31958 net.cpp:200] loss needs backward computation.
I0426 20:51:20.146791 31958 net.cpp:200] relu1 needs backward computation.
I0426 20:51:20.146795 31958 net.cpp:200] ip1 needs backward computation.
I0426 20:51:20.146796 31958 net.cpp:200] pool1 needs backward computation.
I0426 20:51:20.146800 31958 net.cpp:200] conv1 needs backward computation.
I0426 20:51:20.146802 31958 net.cpp:200] pool0 needs backward computation.
I0426 20:51:20.146806 31958 net.cpp:200] conv0 needs backward computation.
I0426 20:51:20.146808 31958 net.cpp:202] mnist does not need backward computation.
I0426 20:51:20.146811 31958 net.cpp:244] This network produces output loss
I0426 20:51:20.146818 31958 net.cpp:257] Network initialization done.
I0426 20:51:20.147100 31958 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test84.prototxt
I0426 20:51:20.147125 31958 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:51:20.147198 31958 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0426 20:51:20.147281 31958 layer_factory.hpp:77] Creating layer mnist
I0426 20:51:20.147323 31958 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:51:20.147336 31958 net.cpp:86] Creating Layer mnist
I0426 20:51:20.147339 31958 net.cpp:382] mnist -> data
I0426 20:51:20.147347 31958 net.cpp:382] mnist -> label
I0426 20:51:20.147423 31958 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:51:20.149586 31958 net.cpp:124] Setting up mnist
I0426 20:51:20.149598 31958 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:51:20.149602 31958 net.cpp:131] Top shape: 100 (100)
I0426 20:51:20.149605 31958 net.cpp:139] Memory required for data: 314000
I0426 20:51:20.149610 31958 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:51:20.149618 31958 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:51:20.149621 31958 net.cpp:408] label_mnist_1_split <- label
I0426 20:51:20.149626 31958 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:51:20.149632 31958 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:51:20.149682 31958 net.cpp:124] Setting up label_mnist_1_split
I0426 20:51:20.149685 31958 net.cpp:131] Top shape: 100 (100)
I0426 20:51:20.149689 31958 net.cpp:131] Top shape: 100 (100)
I0426 20:51:20.149693 31958 net.cpp:139] Memory required for data: 314800
I0426 20:51:20.149694 31958 layer_factory.hpp:77] Creating layer conv0
I0426 20:51:20.149703 31958 net.cpp:86] Creating Layer conv0
I0426 20:51:20.149705 31958 net.cpp:408] conv0 <- data
I0426 20:51:20.149709 31958 net.cpp:382] conv0 -> conv0
I0426 20:51:20.150678 31958 net.cpp:124] Setting up conv0
I0426 20:51:20.150691 31958 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:51:20.150693 31958 net.cpp:139] Memory required for data: 2618800
I0426 20:51:20.150702 31958 layer_factory.hpp:77] Creating layer pool0
I0426 20:51:20.150707 31958 net.cpp:86] Creating Layer pool0
I0426 20:51:20.150710 31958 net.cpp:408] pool0 <- conv0
I0426 20:51:20.150715 31958 net.cpp:382] pool0 -> pool0
I0426 20:51:20.150746 31958 net.cpp:124] Setting up pool0
I0426 20:51:20.150751 31958 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:51:20.150754 31958 net.cpp:139] Memory required for data: 3194800
I0426 20:51:20.150768 31958 layer_factory.hpp:77] Creating layer conv1
I0426 20:51:20.150774 31958 net.cpp:86] Creating Layer conv1
I0426 20:51:20.150777 31958 net.cpp:408] conv1 <- pool0
I0426 20:51:20.150782 31958 net.cpp:382] conv1 -> conv1
I0426 20:51:20.152307 31958 net.cpp:124] Setting up conv1
I0426 20:51:20.152335 31958 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:51:20.152339 31958 net.cpp:139] Memory required for data: 4474800
I0426 20:51:20.152348 31958 layer_factory.hpp:77] Creating layer pool1
I0426 20:51:20.152369 31958 net.cpp:86] Creating Layer pool1
I0426 20:51:20.152381 31958 net.cpp:408] pool1 <- conv1
I0426 20:51:20.152387 31958 net.cpp:382] pool1 -> pool1
I0426 20:51:20.152480 31958 net.cpp:124] Setting up pool1
I0426 20:51:20.152488 31958 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:51:20.152498 31958 net.cpp:139] Memory required for data: 4794800
I0426 20:51:20.152501 31958 layer_factory.hpp:77] Creating layer ip1
I0426 20:51:20.152508 31958 net.cpp:86] Creating Layer ip1
I0426 20:51:20.152510 31958 net.cpp:408] ip1 <- pool1
I0426 20:51:20.152515 31958 net.cpp:382] ip1 -> ip1
I0426 20:51:20.152676 31958 net.cpp:124] Setting up ip1
I0426 20:51:20.152683 31958 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:20.152688 31958 net.cpp:139] Memory required for data: 4798800
I0426 20:51:20.152709 31958 layer_factory.hpp:77] Creating layer relu1
I0426 20:51:20.152714 31958 net.cpp:86] Creating Layer relu1
I0426 20:51:20.152722 31958 net.cpp:408] relu1 <- ip1
I0426 20:51:20.152726 31958 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:51:20.153568 31958 net.cpp:124] Setting up relu1
I0426 20:51:20.153580 31958 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:20.153585 31958 net.cpp:139] Memory required for data: 4802800
I0426 20:51:20.153589 31958 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0426 20:51:20.153595 31958 net.cpp:86] Creating Layer ip1_relu1_0_split
I0426 20:51:20.153599 31958 net.cpp:408] ip1_relu1_0_split <- ip1
I0426 20:51:20.153619 31958 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0426 20:51:20.153625 31958 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0426 20:51:20.153679 31958 net.cpp:124] Setting up ip1_relu1_0_split
I0426 20:51:20.153684 31958 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:20.153688 31958 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:51:20.153692 31958 net.cpp:139] Memory required for data: 4810800
I0426 20:51:20.153694 31958 layer_factory.hpp:77] Creating layer accuracy
I0426 20:51:20.153699 31958 net.cpp:86] Creating Layer accuracy
I0426 20:51:20.153702 31958 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0426 20:51:20.153707 31958 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:51:20.153710 31958 net.cpp:382] accuracy -> accuracy
I0426 20:51:20.153717 31958 net.cpp:124] Setting up accuracy
I0426 20:51:20.153720 31958 net.cpp:131] Top shape: (1)
I0426 20:51:20.153723 31958 net.cpp:139] Memory required for data: 4810804
I0426 20:51:20.153726 31958 layer_factory.hpp:77] Creating layer loss
I0426 20:51:20.153730 31958 net.cpp:86] Creating Layer loss
I0426 20:51:20.153733 31958 net.cpp:408] loss <- ip1_relu1_0_split_1
I0426 20:51:20.153738 31958 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:51:20.153741 31958 net.cpp:382] loss -> loss
I0426 20:51:20.153748 31958 layer_factory.hpp:77] Creating layer loss
I0426 20:51:20.154049 31958 net.cpp:124] Setting up loss
I0426 20:51:20.154058 31958 net.cpp:131] Top shape: (1)
I0426 20:51:20.154062 31958 net.cpp:134]     with loss weight 1
I0426 20:51:20.154074 31958 net.cpp:139] Memory required for data: 4810808
I0426 20:51:20.154078 31958 net.cpp:200] loss needs backward computation.
I0426 20:51:20.154081 31958 net.cpp:202] accuracy does not need backward computation.
I0426 20:51:20.154085 31958 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0426 20:51:20.154088 31958 net.cpp:200] relu1 needs backward computation.
I0426 20:51:20.154091 31958 net.cpp:200] ip1 needs backward computation.
I0426 20:51:20.154094 31958 net.cpp:200] pool1 needs backward computation.
I0426 20:51:20.154103 31958 net.cpp:200] conv1 needs backward computation.
I0426 20:51:20.154106 31958 net.cpp:200] pool0 needs backward computation.
I0426 20:51:20.154109 31958 net.cpp:200] conv0 needs backward computation.
I0426 20:51:20.154112 31958 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:51:20.154116 31958 net.cpp:202] mnist does not need backward computation.
I0426 20:51:20.154119 31958 net.cpp:244] This network produces output accuracy
I0426 20:51:20.154124 31958 net.cpp:244] This network produces output loss
I0426 20:51:20.154141 31958 net.cpp:257] Network initialization done.
I0426 20:51:20.154172 31958 solver.cpp:56] Solver scaffolding done.
I0426 20:51:20.154368 31958 caffe.cpp:248] Starting Optimization
I0426 20:51:20.154376 31958 solver.cpp:273] Solving LeNet
I0426 20:51:20.154378 31958 solver.cpp:274] Learning Rate Policy: inv
I0426 20:51:20.154474 31958 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:51:20.158586 31958 blocking_queue.cpp:49] Waiting for data
I0426 20:51:20.231988 31965 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:20.232509 31958 solver.cpp:398]     Test net output #0: accuracy = 0.063
I0426 20:51:20.232543 31958 solver.cpp:398]     Test net output #1: loss = 2.40581 (* 1 = 2.40581 loss)
I0426 20:51:20.235931 31958 solver.cpp:219] Iteration 0 (-1.01454e-42 iter/s, 0.0815288s/100 iters), loss = 2.40225
I0426 20:51:20.235954 31958 solver.cpp:238]     Train net output #0: loss = 2.40225 (* 1 = 2.40225 loss)
I0426 20:51:20.235981 31958 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:51:20.329649 31958 solver.cpp:219] Iteration 100 (1067.41 iter/s, 0.0936847s/100 iters), loss = 0.994536
I0426 20:51:20.329675 31958 solver.cpp:238]     Train net output #0: loss = 0.994536 (* 1 = 0.994536 loss)
I0426 20:51:20.329682 31958 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:51:20.419966 31958 solver.cpp:219] Iteration 200 (1107.65 iter/s, 0.090281s/100 iters), loss = 0.832232
I0426 20:51:20.419989 31958 solver.cpp:238]     Train net output #0: loss = 0.832232 (* 1 = 0.832232 loss)
I0426 20:51:20.419994 31958 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:51:20.511370 31958 solver.cpp:219] Iteration 300 (1094.45 iter/s, 0.0913705s/100 iters), loss = 0.338497
I0426 20:51:20.511395 31958 solver.cpp:238]     Train net output #0: loss = 0.338497 (* 1 = 0.338497 loss)
I0426 20:51:20.511401 31958 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:51:20.602565 31958 solver.cpp:219] Iteration 400 (1096.99 iter/s, 0.0911586s/100 iters), loss = 0.275955
I0426 20:51:20.602588 31958 solver.cpp:238]     Train net output #0: loss = 0.275955 (* 1 = 0.275955 loss)
I0426 20:51:20.602610 31958 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:51:20.691553 31958 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:51:20.744642 31965 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:20.745162 31958 solver.cpp:398]     Test net output #0: accuracy = 0.8802
I0426 20:51:20.745182 31958 solver.cpp:398]     Test net output #1: loss = 0.338756 (* 1 = 0.338756 loss)
I0426 20:51:20.746158 31958 solver.cpp:219] Iteration 500 (696.594 iter/s, 0.143556s/100 iters), loss = 0.449522
I0426 20:51:20.746181 31958 solver.cpp:238]     Train net output #0: loss = 0.449522 (* 1 = 0.449522 loss)
I0426 20:51:20.746203 31958 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:51:20.851442 31958 solver.cpp:219] Iteration 600 (950.13 iter/s, 0.105249s/100 iters), loss = 0.248796
I0426 20:51:20.851466 31958 solver.cpp:238]     Train net output #0: loss = 0.248796 (* 1 = 0.248796 loss)
I0426 20:51:20.851488 31958 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:51:20.944000 31958 solver.cpp:219] Iteration 700 (1080.79 iter/s, 0.0925245s/100 iters), loss = 0.190368
I0426 20:51:20.944026 31958 solver.cpp:238]     Train net output #0: loss = 0.190368 (* 1 = 0.190368 loss)
I0426 20:51:20.944048 31958 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:51:21.043406 31958 solver.cpp:219] Iteration 800 (1006.37 iter/s, 0.0993669s/100 iters), loss = 0.211451
I0426 20:51:21.043437 31958 solver.cpp:238]     Train net output #0: loss = 0.21145 (* 1 = 0.21145 loss)
I0426 20:51:21.043449 31958 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:51:21.138633 31958 solver.cpp:219] Iteration 900 (1050.58 iter/s, 0.0951859s/100 iters), loss = 0.226797
I0426 20:51:21.138664 31958 solver.cpp:238]     Train net output #0: loss = 0.226797 (* 1 = 0.226797 loss)
I0426 20:51:21.138669 31958 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:51:21.168835 31964 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:21.228886 31958 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:51:21.230012 31958 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:51:21.230679 31958 solver.cpp:311] Iteration 1000, loss = 0.0930075
I0426 20:51:21.230695 31958 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:51:21.304982 31965 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:51:21.305541 31958 solver.cpp:398]     Test net output #0: accuracy = 0.9745
I0426 20:51:21.305572 31958 solver.cpp:398]     Test net output #1: loss = 0.0817497 (* 1 = 0.0817497 loss)
I0426 20:51:21.305579 31958 solver.cpp:316] Optimization Done.
I0426 20:51:21.305584 31958 caffe.cpp:259] Optimization Done.
