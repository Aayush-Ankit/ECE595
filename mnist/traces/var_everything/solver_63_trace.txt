I0426 20:50:32.607071 31780 caffe.cpp:218] Using GPUs 0
I0426 20:50:32.646116 31780 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:50:33.169729 31780 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test63.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:50:33.169878 31780 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test63.prototxt
I0426 20:50:33.170295 31780 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:50:33.170315 31780 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:50:33.170420 31780 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:33.170501 31780 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:33.170603 31780 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:50:33.170627 31780 net.cpp:86] Creating Layer mnist
I0426 20:50:33.170635 31780 net.cpp:382] mnist -> data
I0426 20:50:33.170658 31780 net.cpp:382] mnist -> label
I0426 20:50:33.171752 31780 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:50:33.174283 31780 net.cpp:124] Setting up mnist
I0426 20:50:33.174301 31780 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:50:33.174309 31780 net.cpp:131] Top shape: 64 (64)
I0426 20:50:33.174312 31780 net.cpp:139] Memory required for data: 200960
I0426 20:50:33.174319 31780 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:33.174347 31780 net.cpp:86] Creating Layer conv0
I0426 20:50:33.174368 31780 net.cpp:408] conv0 <- data
I0426 20:50:33.174381 31780 net.cpp:382] conv0 -> conv0
I0426 20:50:33.457115 31780 net.cpp:124] Setting up conv0
I0426 20:50:33.457141 31780 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0426 20:50:33.457145 31780 net.cpp:139] Memory required for data: 1675520
I0426 20:50:33.457160 31780 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:33.457172 31780 net.cpp:86] Creating Layer pool0
I0426 20:50:33.457176 31780 net.cpp:408] pool0 <- conv0
I0426 20:50:33.457181 31780 net.cpp:382] pool0 -> pool0
I0426 20:50:33.457226 31780 net.cpp:124] Setting up pool0
I0426 20:50:33.457231 31780 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0426 20:50:33.457233 31780 net.cpp:139] Memory required for data: 2044160
I0426 20:50:33.457237 31780 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:33.457247 31780 net.cpp:86] Creating Layer conv1
I0426 20:50:33.457262 31780 net.cpp:408] conv1 <- pool0
I0426 20:50:33.457265 31780 net.cpp:382] conv1 -> conv1
I0426 20:50:33.459904 31780 net.cpp:124] Setting up conv1
I0426 20:50:33.459918 31780 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:50:33.459923 31780 net.cpp:139] Memory required for data: 2208000
I0426 20:50:33.459930 31780 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:33.459938 31780 net.cpp:86] Creating Layer pool1
I0426 20:50:33.459940 31780 net.cpp:408] pool1 <- conv1
I0426 20:50:33.459945 31780 net.cpp:382] pool1 -> pool1
I0426 20:50:33.459980 31780 net.cpp:124] Setting up pool1
I0426 20:50:33.459985 31780 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:50:33.459987 31780 net.cpp:139] Memory required for data: 2248960
I0426 20:50:33.459990 31780 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:33.459996 31780 net.cpp:86] Creating Layer ip1
I0426 20:50:33.460000 31780 net.cpp:408] ip1 <- pool1
I0426 20:50:33.460003 31780 net.cpp:382] ip1 -> ip1
I0426 20:50:33.461007 31780 net.cpp:124] Setting up ip1
I0426 20:50:33.461019 31780 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:33.461037 31780 net.cpp:139] Memory required for data: 2274560
I0426 20:50:33.461060 31780 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:33.461066 31780 net.cpp:86] Creating Layer relu1
I0426 20:50:33.461068 31780 net.cpp:408] relu1 <- ip1
I0426 20:50:33.461072 31780 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:33.461277 31780 net.cpp:124] Setting up relu1
I0426 20:50:33.461284 31780 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:33.461288 31780 net.cpp:139] Memory required for data: 2300160
I0426 20:50:33.461292 31780 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:33.461297 31780 net.cpp:86] Creating Layer ip2
I0426 20:50:33.461300 31780 net.cpp:408] ip2 <- ip1
I0426 20:50:33.461305 31780 net.cpp:382] ip2 -> ip2
I0426 20:50:33.461439 31780 net.cpp:124] Setting up ip2
I0426 20:50:33.461447 31780 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:33.461449 31780 net.cpp:139] Memory required for data: 2325760
I0426 20:50:33.461455 31780 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:33.461462 31780 net.cpp:86] Creating Layer relu2
I0426 20:50:33.461464 31780 net.cpp:408] relu2 <- ip2
I0426 20:50:33.461467 31780 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:33.462252 31780 net.cpp:124] Setting up relu2
I0426 20:50:33.462263 31780 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:50:33.462277 31780 net.cpp:139] Memory required for data: 2351360
I0426 20:50:33.462281 31780 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:33.462287 31780 net.cpp:86] Creating Layer ip3
I0426 20:50:33.462291 31780 net.cpp:408] ip3 <- ip2
I0426 20:50:33.462296 31780 net.cpp:382] ip3 -> ip3
I0426 20:50:33.462424 31780 net.cpp:124] Setting up ip3
I0426 20:50:33.462430 31780 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:33.462433 31780 net.cpp:139] Memory required for data: 2353920
I0426 20:50:33.462441 31780 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:33.462446 31780 net.cpp:86] Creating Layer relu3
I0426 20:50:33.462450 31780 net.cpp:408] relu3 <- ip3
I0426 20:50:33.462453 31780 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:33.462604 31780 net.cpp:124] Setting up relu3
I0426 20:50:33.462613 31780 net.cpp:131] Top shape: 64 10 (640)
I0426 20:50:33.462616 31780 net.cpp:139] Memory required for data: 2356480
I0426 20:50:33.462620 31780 layer_factory.hpp:77] Creating layer loss
I0426 20:50:33.462625 31780 net.cpp:86] Creating Layer loss
I0426 20:50:33.462627 31780 net.cpp:408] loss <- ip3
I0426 20:50:33.462631 31780 net.cpp:408] loss <- label
I0426 20:50:33.462636 31780 net.cpp:382] loss -> loss
I0426 20:50:33.462651 31780 layer_factory.hpp:77] Creating layer loss
I0426 20:50:33.462857 31780 net.cpp:124] Setting up loss
I0426 20:50:33.462867 31780 net.cpp:131] Top shape: (1)
I0426 20:50:33.462869 31780 net.cpp:134]     with loss weight 1
I0426 20:50:33.462883 31780 net.cpp:139] Memory required for data: 2356484
I0426 20:50:33.462887 31780 net.cpp:200] loss needs backward computation.
I0426 20:50:33.462890 31780 net.cpp:200] relu3 needs backward computation.
I0426 20:50:33.462893 31780 net.cpp:200] ip3 needs backward computation.
I0426 20:50:33.462895 31780 net.cpp:200] relu2 needs backward computation.
I0426 20:50:33.462898 31780 net.cpp:200] ip2 needs backward computation.
I0426 20:50:33.462901 31780 net.cpp:200] relu1 needs backward computation.
I0426 20:50:33.462904 31780 net.cpp:200] ip1 needs backward computation.
I0426 20:50:33.462908 31780 net.cpp:200] pool1 needs backward computation.
I0426 20:50:33.462909 31780 net.cpp:200] conv1 needs backward computation.
I0426 20:50:33.462913 31780 net.cpp:200] pool0 needs backward computation.
I0426 20:50:33.462916 31780 net.cpp:200] conv0 needs backward computation.
I0426 20:50:33.462919 31780 net.cpp:202] mnist does not need backward computation.
I0426 20:50:33.462923 31780 net.cpp:244] This network produces output loss
I0426 20:50:33.462930 31780 net.cpp:257] Network initialization done.
I0426 20:50:33.463260 31780 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test63.prototxt
I0426 20:50:33.463315 31780 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:50:33.463404 31780 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:50:33.463496 31780 layer_factory.hpp:77] Creating layer mnist
I0426 20:50:33.463541 31780 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:50:33.463552 31780 net.cpp:86] Creating Layer mnist
I0426 20:50:33.463557 31780 net.cpp:382] mnist -> data
I0426 20:50:33.463564 31780 net.cpp:382] mnist -> label
I0426 20:50:33.463641 31780 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:50:33.465544 31780 net.cpp:124] Setting up mnist
I0426 20:50:33.465557 31780 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:50:33.465562 31780 net.cpp:131] Top shape: 100 (100)
I0426 20:50:33.465565 31780 net.cpp:139] Memory required for data: 314000
I0426 20:50:33.465569 31780 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:50:33.465575 31780 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:50:33.465579 31780 net.cpp:408] label_mnist_1_split <- label
I0426 20:50:33.465582 31780 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:50:33.465590 31780 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:50:33.465634 31780 net.cpp:124] Setting up label_mnist_1_split
I0426 20:50:33.465641 31780 net.cpp:131] Top shape: 100 (100)
I0426 20:50:33.465644 31780 net.cpp:131] Top shape: 100 (100)
I0426 20:50:33.465646 31780 net.cpp:139] Memory required for data: 314800
I0426 20:50:33.465651 31780 layer_factory.hpp:77] Creating layer conv0
I0426 20:50:33.465658 31780 net.cpp:86] Creating Layer conv0
I0426 20:50:33.465662 31780 net.cpp:408] conv0 <- data
I0426 20:50:33.465667 31780 net.cpp:382] conv0 -> conv0
I0426 20:50:33.467144 31780 net.cpp:124] Setting up conv0
I0426 20:50:33.467157 31780 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0426 20:50:33.467160 31780 net.cpp:139] Memory required for data: 2618800
I0426 20:50:33.467169 31780 layer_factory.hpp:77] Creating layer pool0
I0426 20:50:33.467175 31780 net.cpp:86] Creating Layer pool0
I0426 20:50:33.467178 31780 net.cpp:408] pool0 <- conv0
I0426 20:50:33.467182 31780 net.cpp:382] pool0 -> pool0
I0426 20:50:33.467226 31780 net.cpp:124] Setting up pool0
I0426 20:50:33.467231 31780 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0426 20:50:33.467234 31780 net.cpp:139] Memory required for data: 3194800
I0426 20:50:33.467237 31780 layer_factory.hpp:77] Creating layer conv1
I0426 20:50:33.467245 31780 net.cpp:86] Creating Layer conv1
I0426 20:50:33.467248 31780 net.cpp:408] conv1 <- pool0
I0426 20:50:33.467253 31780 net.cpp:382] conv1 -> conv1
I0426 20:50:33.469635 31780 net.cpp:124] Setting up conv1
I0426 20:50:33.469648 31780 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:50:33.469652 31780 net.cpp:139] Memory required for data: 3450800
I0426 20:50:33.469661 31780 layer_factory.hpp:77] Creating layer pool1
I0426 20:50:33.469667 31780 net.cpp:86] Creating Layer pool1
I0426 20:50:33.469674 31780 net.cpp:408] pool1 <- conv1
I0426 20:50:33.469694 31780 net.cpp:382] pool1 -> pool1
I0426 20:50:33.469750 31780 net.cpp:124] Setting up pool1
I0426 20:50:33.469758 31780 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:50:33.469777 31780 net.cpp:139] Memory required for data: 3514800
I0426 20:50:33.469780 31780 layer_factory.hpp:77] Creating layer ip1
I0426 20:50:33.469801 31780 net.cpp:86] Creating Layer ip1
I0426 20:50:33.469805 31780 net.cpp:408] ip1 <- pool1
I0426 20:50:33.469810 31780 net.cpp:382] ip1 -> ip1
I0426 20:50:33.470031 31780 net.cpp:124] Setting up ip1
I0426 20:50:33.470041 31780 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:33.470057 31780 net.cpp:139] Memory required for data: 3554800
I0426 20:50:33.470065 31780 layer_factory.hpp:77] Creating layer relu1
I0426 20:50:33.470072 31780 net.cpp:86] Creating Layer relu1
I0426 20:50:33.470075 31780 net.cpp:408] relu1 <- ip1
I0426 20:50:33.470079 31780 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:50:33.470276 31780 net.cpp:124] Setting up relu1
I0426 20:50:33.470288 31780 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:33.470293 31780 net.cpp:139] Memory required for data: 3594800
I0426 20:50:33.470295 31780 layer_factory.hpp:77] Creating layer ip2
I0426 20:50:33.470302 31780 net.cpp:86] Creating Layer ip2
I0426 20:50:33.470305 31780 net.cpp:408] ip2 <- ip1
I0426 20:50:33.470310 31780 net.cpp:382] ip2 -> ip2
I0426 20:50:33.470453 31780 net.cpp:124] Setting up ip2
I0426 20:50:33.470460 31780 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:33.470470 31780 net.cpp:139] Memory required for data: 3634800
I0426 20:50:33.470477 31780 layer_factory.hpp:77] Creating layer relu2
I0426 20:50:33.470482 31780 net.cpp:86] Creating Layer relu2
I0426 20:50:33.470485 31780 net.cpp:408] relu2 <- ip2
I0426 20:50:33.470489 31780 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:50:33.470633 31780 net.cpp:124] Setting up relu2
I0426 20:50:33.470643 31780 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:50:33.470645 31780 net.cpp:139] Memory required for data: 3674800
I0426 20:50:33.470649 31780 layer_factory.hpp:77] Creating layer ip3
I0426 20:50:33.470654 31780 net.cpp:86] Creating Layer ip3
I0426 20:50:33.470656 31780 net.cpp:408] ip3 <- ip2
I0426 20:50:33.470661 31780 net.cpp:382] ip3 -> ip3
I0426 20:50:33.470772 31780 net.cpp:124] Setting up ip3
I0426 20:50:33.470780 31780 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:33.470783 31780 net.cpp:139] Memory required for data: 3678800
I0426 20:50:33.470791 31780 layer_factory.hpp:77] Creating layer relu3
I0426 20:50:33.470796 31780 net.cpp:86] Creating Layer relu3
I0426 20:50:33.470799 31780 net.cpp:408] relu3 <- ip3
I0426 20:50:33.470803 31780 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:50:33.471688 31780 net.cpp:124] Setting up relu3
I0426 20:50:33.471699 31780 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:33.471724 31780 net.cpp:139] Memory required for data: 3682800
I0426 20:50:33.471727 31780 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:50:33.471734 31780 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:50:33.471737 31780 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:50:33.471742 31780 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:50:33.471750 31780 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:50:33.471786 31780 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:50:33.471792 31780 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:33.471796 31780 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:50:33.471799 31780 net.cpp:139] Memory required for data: 3690800
I0426 20:50:33.471802 31780 layer_factory.hpp:77] Creating layer accuracy
I0426 20:50:33.471807 31780 net.cpp:86] Creating Layer accuracy
I0426 20:50:33.471810 31780 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:50:33.471815 31780 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:50:33.471819 31780 net.cpp:382] accuracy -> accuracy
I0426 20:50:33.471827 31780 net.cpp:124] Setting up accuracy
I0426 20:50:33.471832 31780 net.cpp:131] Top shape: (1)
I0426 20:50:33.471833 31780 net.cpp:139] Memory required for data: 3690804
I0426 20:50:33.471837 31780 layer_factory.hpp:77] Creating layer loss
I0426 20:50:33.471840 31780 net.cpp:86] Creating Layer loss
I0426 20:50:33.471843 31780 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:50:33.471848 31780 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:50:33.471853 31780 net.cpp:382] loss -> loss
I0426 20:50:33.471858 31780 layer_factory.hpp:77] Creating layer loss
I0426 20:50:33.472098 31780 net.cpp:124] Setting up loss
I0426 20:50:33.472108 31780 net.cpp:131] Top shape: (1)
I0426 20:50:33.472111 31780 net.cpp:134]     with loss weight 1
I0426 20:50:33.472128 31780 net.cpp:139] Memory required for data: 3690808
I0426 20:50:33.472141 31780 net.cpp:200] loss needs backward computation.
I0426 20:50:33.472144 31780 net.cpp:202] accuracy does not need backward computation.
I0426 20:50:33.472148 31780 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:50:33.472152 31780 net.cpp:200] relu3 needs backward computation.
I0426 20:50:33.472156 31780 net.cpp:200] ip3 needs backward computation.
I0426 20:50:33.472158 31780 net.cpp:200] relu2 needs backward computation.
I0426 20:50:33.472163 31780 net.cpp:200] ip2 needs backward computation.
I0426 20:50:33.472167 31780 net.cpp:200] relu1 needs backward computation.
I0426 20:50:33.472175 31780 net.cpp:200] ip1 needs backward computation.
I0426 20:50:33.472183 31780 net.cpp:200] pool1 needs backward computation.
I0426 20:50:33.472187 31780 net.cpp:200] conv1 needs backward computation.
I0426 20:50:33.472190 31780 net.cpp:200] pool0 needs backward computation.
I0426 20:50:33.472193 31780 net.cpp:200] conv0 needs backward computation.
I0426 20:50:33.472198 31780 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:50:33.472203 31780 net.cpp:202] mnist does not need backward computation.
I0426 20:50:33.472221 31780 net.cpp:244] This network produces output accuracy
I0426 20:50:33.472225 31780 net.cpp:244] This network produces output loss
I0426 20:50:33.472236 31780 net.cpp:257] Network initialization done.
I0426 20:50:33.472278 31780 solver.cpp:56] Solver scaffolding done.
I0426 20:50:33.472648 31780 caffe.cpp:248] Starting Optimization
I0426 20:50:33.472654 31780 solver.cpp:273] Solving LeNet
I0426 20:50:33.472672 31780 solver.cpp:274] Learning Rate Policy: inv
I0426 20:50:33.473623 31780 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:50:33.477892 31780 blocking_queue.cpp:49] Waiting for data
I0426 20:50:33.544736 31787 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:33.545361 31780 solver.cpp:398]     Test net output #0: accuracy = 0.084
I0426 20:50:33.545389 31780 solver.cpp:398]     Test net output #1: loss = 2.33523 (* 1 = 2.33523 loss)
I0426 20:50:33.548499 31780 solver.cpp:219] Iteration 0 (-1.09021e-42 iter/s, 0.0757903s/100 iters), loss = 2.34826
I0426 20:50:33.548532 31780 solver.cpp:238]     Train net output #0: loss = 2.34826 (* 1 = 2.34826 loss)
I0426 20:50:33.548547 31780 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:50:33.634845 31780 solver.cpp:219] Iteration 100 (1158.68 iter/s, 0.0863049s/100 iters), loss = 1.46211
I0426 20:50:33.634871 31780 solver.cpp:238]     Train net output #0: loss = 1.46211 (* 1 = 1.46211 loss)
I0426 20:50:33.634878 31780 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:50:33.719789 31780 solver.cpp:219] Iteration 200 (1177.74 iter/s, 0.084908s/100 iters), loss = 0.933684
I0426 20:50:33.719828 31780 solver.cpp:238]     Train net output #0: loss = 0.933684 (* 1 = 0.933684 loss)
I0426 20:50:33.719851 31780 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:50:33.805110 31780 solver.cpp:219] Iteration 300 (1172.5 iter/s, 0.0852879s/100 iters), loss = 1.21557
I0426 20:50:33.805150 31780 solver.cpp:238]     Train net output #0: loss = 1.21557 (* 1 = 1.21557 loss)
I0426 20:50:33.805156 31780 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:50:33.890163 31780 solver.cpp:219] Iteration 400 (1176.18 iter/s, 0.0850207s/100 iters), loss = 1.35332
I0426 20:50:33.890203 31780 solver.cpp:238]     Train net output #0: loss = 1.35332 (* 1 = 1.35332 loss)
I0426 20:50:33.890209 31780 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:50:33.974511 31780 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:50:34.028260 31787 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:34.028846 31780 solver.cpp:398]     Test net output #0: accuracy = 0.5546
I0426 20:50:34.028877 31780 solver.cpp:398]     Test net output #1: loss = 1.26305 (* 1 = 1.26305 loss)
I0426 20:50:34.029731 31780 solver.cpp:219] Iteration 500 (716.759 iter/s, 0.139517s/100 iters), loss = 1.32077
I0426 20:50:34.029769 31780 solver.cpp:238]     Train net output #0: loss = 1.32077 (* 1 = 1.32077 loss)
I0426 20:50:34.029777 31780 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:50:34.115329 31780 solver.cpp:219] Iteration 600 (1168.92 iter/s, 0.0855491s/100 iters), loss = 1.28235
I0426 20:50:34.115351 31780 solver.cpp:238]     Train net output #0: loss = 1.28235 (* 1 = 1.28235 loss)
I0426 20:50:34.115357 31780 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:50:34.200765 31780 solver.cpp:219] Iteration 700 (1170.9 iter/s, 0.0854047s/100 iters), loss = 1.28092
I0426 20:50:34.200788 31780 solver.cpp:238]     Train net output #0: loss = 1.28092 (* 1 = 1.28092 loss)
I0426 20:50:34.200794 31780 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:50:34.285933 31780 solver.cpp:219] Iteration 800 (1174.6 iter/s, 0.0851353s/100 iters), loss = 1.18464
I0426 20:50:34.285955 31780 solver.cpp:238]     Train net output #0: loss = 1.18464 (* 1 = 1.18464 loss)
I0426 20:50:34.285961 31780 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:50:34.371613 31780 solver.cpp:219] Iteration 900 (1167.59 iter/s, 0.0856463s/100 iters), loss = 1.24726
I0426 20:50:34.371650 31780 solver.cpp:238]     Train net output #0: loss = 1.24726 (* 1 = 1.24726 loss)
I0426 20:50:34.371656 31780 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:50:34.400193 31786 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:34.456559 31780 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:50:34.457712 31780 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:50:34.458372 31780 solver.cpp:311] Iteration 1000, loss = 1.22425
I0426 20:50:34.458386 31780 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:50:34.505916 31787 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:50:34.507083 31780 solver.cpp:398]     Test net output #0: accuracy = 0.5773
I0426 20:50:34.507102 31780 solver.cpp:398]     Test net output #1: loss = 1.23045 (* 1 = 1.23045 loss)
I0426 20:50:34.507105 31780 solver.cpp:316] Optimization Done.
I0426 20:50:34.507110 31780 caffe.cpp:259] Optimization Done.
