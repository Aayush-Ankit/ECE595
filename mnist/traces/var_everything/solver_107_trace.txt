I0426 20:52:14.155118 32153 caffe.cpp:218] Using GPUs 0
I0426 20:52:14.192317 32153 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:52:14.657702 32153 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test107.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:52:14.657874 32153 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test107.prototxt
I0426 20:52:14.658234 32153 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:52:14.658278 32153 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:52:14.658376 32153 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:14.658442 32153 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:14.658524 32153 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:52:14.658542 32153 net.cpp:86] Creating Layer mnist
I0426 20:52:14.658550 32153 net.cpp:382] mnist -> data
I0426 20:52:14.658568 32153 net.cpp:382] mnist -> label
I0426 20:52:14.659466 32153 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:52:14.661543 32153 net.cpp:124] Setting up mnist
I0426 20:52:14.661558 32153 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:52:14.661563 32153 net.cpp:131] Top shape: 64 (64)
I0426 20:52:14.661566 32153 net.cpp:139] Memory required for data: 200960
I0426 20:52:14.661571 32153 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:14.661599 32153 net.cpp:86] Creating Layer conv0
I0426 20:52:14.661617 32153 net.cpp:408] conv0 <- data
I0426 20:52:14.661626 32153 net.cpp:382] conv0 -> conv0
I0426 20:52:14.901917 32153 net.cpp:124] Setting up conv0
I0426 20:52:14.901943 32153 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0426 20:52:14.901947 32153 net.cpp:139] Memory required for data: 3887360
I0426 20:52:14.901962 32153 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:14.902004 32153 net.cpp:86] Creating Layer pool0
I0426 20:52:14.902009 32153 net.cpp:408] pool0 <- conv0
I0426 20:52:14.902014 32153 net.cpp:382] pool0 -> pool0
I0426 20:52:14.902056 32153 net.cpp:124] Setting up pool0
I0426 20:52:14.902063 32153 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0426 20:52:14.902066 32153 net.cpp:139] Memory required for data: 4808960
I0426 20:52:14.902070 32153 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:14.902081 32153 net.cpp:86] Creating Layer conv1
I0426 20:52:14.902083 32153 net.cpp:408] conv1 <- pool0
I0426 20:52:14.902087 32153 net.cpp:382] conv1 -> conv1
I0426 20:52:14.904852 32153 net.cpp:124] Setting up conv1
I0426 20:52:14.904866 32153 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0426 20:52:14.904870 32153 net.cpp:139] Memory required for data: 4972800
I0426 20:52:14.904894 32153 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:14.904917 32153 net.cpp:86] Creating Layer pool1
I0426 20:52:14.904920 32153 net.cpp:408] pool1 <- conv1
I0426 20:52:14.904925 32153 net.cpp:382] pool1 -> pool1
I0426 20:52:14.904978 32153 net.cpp:124] Setting up pool1
I0426 20:52:14.904985 32153 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0426 20:52:14.904989 32153 net.cpp:139] Memory required for data: 5013760
I0426 20:52:14.904991 32153 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:14.904999 32153 net.cpp:86] Creating Layer ip1
I0426 20:52:14.905001 32153 net.cpp:408] ip1 <- pool1
I0426 20:52:14.905006 32153 net.cpp:382] ip1 -> ip1
I0426 20:52:14.905205 32153 net.cpp:124] Setting up ip1
I0426 20:52:14.905211 32153 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:14.905215 32153 net.cpp:139] Memory required for data: 5039360
I0426 20:52:14.905221 32153 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:14.905226 32153 net.cpp:86] Creating Layer relu1
I0426 20:52:14.905230 32153 net.cpp:408] relu1 <- ip1
I0426 20:52:14.905234 32153 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:14.905421 32153 net.cpp:124] Setting up relu1
I0426 20:52:14.905431 32153 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:52:14.905433 32153 net.cpp:139] Memory required for data: 5064960
I0426 20:52:14.905436 32153 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:14.905443 32153 net.cpp:86] Creating Layer ip2
I0426 20:52:14.905447 32153 net.cpp:408] ip2 <- ip1
I0426 20:52:14.905450 32153 net.cpp:382] ip2 -> ip2
I0426 20:52:14.905726 32153 net.cpp:124] Setting up ip2
I0426 20:52:14.905735 32153 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:14.905737 32153 net.cpp:139] Memory required for data: 5141760
I0426 20:52:14.905742 32153 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:14.905747 32153 net.cpp:86] Creating Layer relu2
I0426 20:52:14.905750 32153 net.cpp:408] relu2 <- ip2
I0426 20:52:14.905755 32153 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:14.906613 32153 net.cpp:124] Setting up relu2
I0426 20:52:14.906625 32153 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:52:14.906628 32153 net.cpp:139] Memory required for data: 5218560
I0426 20:52:14.906632 32153 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:14.906656 32153 net.cpp:86] Creating Layer ip3
I0426 20:52:14.906658 32153 net.cpp:408] ip3 <- ip2
I0426 20:52:14.906663 32153 net.cpp:382] ip3 -> ip3
I0426 20:52:14.907742 32153 net.cpp:124] Setting up ip3
I0426 20:52:14.907754 32153 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:14.907757 32153 net.cpp:139] Memory required for data: 5221120
I0426 20:52:14.907780 32153 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:14.907788 32153 net.cpp:86] Creating Layer relu3
I0426 20:52:14.907790 32153 net.cpp:408] relu3 <- ip3
I0426 20:52:14.907795 32153 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:14.907994 32153 net.cpp:124] Setting up relu3
I0426 20:52:14.908002 32153 net.cpp:131] Top shape: 64 10 (640)
I0426 20:52:14.908005 32153 net.cpp:139] Memory required for data: 5223680
I0426 20:52:14.908008 32153 layer_factory.hpp:77] Creating layer loss
I0426 20:52:14.908016 32153 net.cpp:86] Creating Layer loss
I0426 20:52:14.908020 32153 net.cpp:408] loss <- ip3
I0426 20:52:14.908023 32153 net.cpp:408] loss <- label
I0426 20:52:14.908028 32153 net.cpp:382] loss -> loss
I0426 20:52:14.908041 32153 layer_factory.hpp:77] Creating layer loss
I0426 20:52:14.908293 32153 net.cpp:124] Setting up loss
I0426 20:52:14.908303 32153 net.cpp:131] Top shape: (1)
I0426 20:52:14.908306 32153 net.cpp:134]     with loss weight 1
I0426 20:52:14.908320 32153 net.cpp:139] Memory required for data: 5223684
I0426 20:52:14.908324 32153 net.cpp:200] loss needs backward computation.
I0426 20:52:14.908327 32153 net.cpp:200] relu3 needs backward computation.
I0426 20:52:14.908330 32153 net.cpp:200] ip3 needs backward computation.
I0426 20:52:14.908334 32153 net.cpp:200] relu2 needs backward computation.
I0426 20:52:14.908335 32153 net.cpp:200] ip2 needs backward computation.
I0426 20:52:14.908339 32153 net.cpp:200] relu1 needs backward computation.
I0426 20:52:14.908340 32153 net.cpp:200] ip1 needs backward computation.
I0426 20:52:14.908344 32153 net.cpp:200] pool1 needs backward computation.
I0426 20:52:14.908346 32153 net.cpp:200] conv1 needs backward computation.
I0426 20:52:14.908349 32153 net.cpp:200] pool0 needs backward computation.
I0426 20:52:14.908354 32153 net.cpp:200] conv0 needs backward computation.
I0426 20:52:14.908356 32153 net.cpp:202] mnist does not need backward computation.
I0426 20:52:14.908360 32153 net.cpp:244] This network produces output loss
I0426 20:52:14.908368 32153 net.cpp:257] Network initialization done.
I0426 20:52:14.908695 32153 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test107.prototxt
I0426 20:52:14.908721 32153 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:52:14.908818 32153 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:52:14.908933 32153 layer_factory.hpp:77] Creating layer mnist
I0426 20:52:14.908977 32153 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:52:14.908989 32153 net.cpp:86] Creating Layer mnist
I0426 20:52:14.908995 32153 net.cpp:382] mnist -> data
I0426 20:52:14.909004 32153 net.cpp:382] mnist -> label
I0426 20:52:14.909095 32153 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:52:14.911090 32153 net.cpp:124] Setting up mnist
I0426 20:52:14.911103 32153 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:52:14.911108 32153 net.cpp:131] Top shape: 100 (100)
I0426 20:52:14.911111 32153 net.cpp:139] Memory required for data: 314000
I0426 20:52:14.911114 32153 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:52:14.911121 32153 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:52:14.911124 32153 net.cpp:408] label_mnist_1_split <- label
I0426 20:52:14.911130 32153 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:52:14.911135 32153 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:52:14.911231 32153 net.cpp:124] Setting up label_mnist_1_split
I0426 20:52:14.911238 32153 net.cpp:131] Top shape: 100 (100)
I0426 20:52:14.911242 32153 net.cpp:131] Top shape: 100 (100)
I0426 20:52:14.911244 32153 net.cpp:139] Memory required for data: 314800
I0426 20:52:14.911247 32153 layer_factory.hpp:77] Creating layer conv0
I0426 20:52:14.911257 32153 net.cpp:86] Creating Layer conv0
I0426 20:52:14.911263 32153 net.cpp:408] conv0 <- data
I0426 20:52:14.911269 32153 net.cpp:382] conv0 -> conv0
I0426 20:52:14.913071 32153 net.cpp:124] Setting up conv0
I0426 20:52:14.913100 32153 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0426 20:52:14.913105 32153 net.cpp:139] Memory required for data: 6074800
I0426 20:52:14.913127 32153 layer_factory.hpp:77] Creating layer pool0
I0426 20:52:14.913133 32153 net.cpp:86] Creating Layer pool0
I0426 20:52:14.913137 32153 net.cpp:408] pool0 <- conv0
I0426 20:52:14.913142 32153 net.cpp:382] pool0 -> pool0
I0426 20:52:14.913192 32153 net.cpp:124] Setting up pool0
I0426 20:52:14.913199 32153 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0426 20:52:14.913203 32153 net.cpp:139] Memory required for data: 7514800
I0426 20:52:14.913204 32153 layer_factory.hpp:77] Creating layer conv1
I0426 20:52:14.913214 32153 net.cpp:86] Creating Layer conv1
I0426 20:52:14.913219 32153 net.cpp:408] conv1 <- pool0
I0426 20:52:14.913239 32153 net.cpp:382] conv1 -> conv1
I0426 20:52:14.915458 32153 net.cpp:124] Setting up conv1
I0426 20:52:14.915472 32153 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0426 20:52:14.915493 32153 net.cpp:139] Memory required for data: 7770800
I0426 20:52:14.915503 32153 layer_factory.hpp:77] Creating layer pool1
I0426 20:52:14.915508 32153 net.cpp:86] Creating Layer pool1
I0426 20:52:14.915511 32153 net.cpp:408] pool1 <- conv1
I0426 20:52:14.915518 32153 net.cpp:382] pool1 -> pool1
I0426 20:52:14.915571 32153 net.cpp:124] Setting up pool1
I0426 20:52:14.915577 32153 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0426 20:52:14.915580 32153 net.cpp:139] Memory required for data: 7834800
I0426 20:52:14.915582 32153 layer_factory.hpp:77] Creating layer ip1
I0426 20:52:14.915590 32153 net.cpp:86] Creating Layer ip1
I0426 20:52:14.915592 32153 net.cpp:408] ip1 <- pool1
I0426 20:52:14.915597 32153 net.cpp:382] ip1 -> ip1
I0426 20:52:14.915796 32153 net.cpp:124] Setting up ip1
I0426 20:52:14.915805 32153 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:14.915834 32153 net.cpp:139] Memory required for data: 7874800
I0426 20:52:14.915843 32153 layer_factory.hpp:77] Creating layer relu1
I0426 20:52:14.915849 32153 net.cpp:86] Creating Layer relu1
I0426 20:52:14.915868 32153 net.cpp:408] relu1 <- ip1
I0426 20:52:14.915874 32153 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:52:14.916056 32153 net.cpp:124] Setting up relu1
I0426 20:52:14.916072 32153 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:52:14.916076 32153 net.cpp:139] Memory required for data: 7914800
I0426 20:52:14.916079 32153 layer_factory.hpp:77] Creating layer ip2
I0426 20:52:14.916087 32153 net.cpp:86] Creating Layer ip2
I0426 20:52:14.916093 32153 net.cpp:408] ip2 <- ip1
I0426 20:52:14.916116 32153 net.cpp:382] ip2 -> ip2
I0426 20:52:14.916468 32153 net.cpp:124] Setting up ip2
I0426 20:52:14.916476 32153 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:14.916477 32153 net.cpp:139] Memory required for data: 8034800
I0426 20:52:14.916501 32153 layer_factory.hpp:77] Creating layer relu2
I0426 20:52:14.916507 32153 net.cpp:86] Creating Layer relu2
I0426 20:52:14.916509 32153 net.cpp:408] relu2 <- ip2
I0426 20:52:14.916514 32153 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:52:14.916734 32153 net.cpp:124] Setting up relu2
I0426 20:52:14.916744 32153 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:52:14.916754 32153 net.cpp:139] Memory required for data: 8154800
I0426 20:52:14.916757 32153 layer_factory.hpp:77] Creating layer ip3
I0426 20:52:14.916781 32153 net.cpp:86] Creating Layer ip3
I0426 20:52:14.916785 32153 net.cpp:408] ip3 <- ip2
I0426 20:52:14.916790 32153 net.cpp:382] ip3 -> ip3
I0426 20:52:14.916947 32153 net.cpp:124] Setting up ip3
I0426 20:52:14.916956 32153 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:14.916960 32153 net.cpp:139] Memory required for data: 8158800
I0426 20:52:14.916968 32153 layer_factory.hpp:77] Creating layer relu3
I0426 20:52:14.916975 32153 net.cpp:86] Creating Layer relu3
I0426 20:52:14.916978 32153 net.cpp:408] relu3 <- ip3
I0426 20:52:14.916985 32153 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:52:14.917907 32153 net.cpp:124] Setting up relu3
I0426 20:52:14.917918 32153 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:14.917922 32153 net.cpp:139] Memory required for data: 8162800
I0426 20:52:14.917924 32153 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:52:14.917932 32153 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:52:14.917934 32153 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:52:14.917939 32153 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:52:14.917944 32153 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:52:14.918015 32153 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:52:14.918022 32153 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:14.918026 32153 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:52:14.918028 32153 net.cpp:139] Memory required for data: 8170800
I0426 20:52:14.918031 32153 layer_factory.hpp:77] Creating layer accuracy
I0426 20:52:14.918036 32153 net.cpp:86] Creating Layer accuracy
I0426 20:52:14.918040 32153 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:52:14.918043 32153 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:52:14.918050 32153 net.cpp:382] accuracy -> accuracy
I0426 20:52:14.918056 32153 net.cpp:124] Setting up accuracy
I0426 20:52:14.918059 32153 net.cpp:131] Top shape: (1)
I0426 20:52:14.918062 32153 net.cpp:139] Memory required for data: 8170804
I0426 20:52:14.918066 32153 layer_factory.hpp:77] Creating layer loss
I0426 20:52:14.918071 32153 net.cpp:86] Creating Layer loss
I0426 20:52:14.918073 32153 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:52:14.918077 32153 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:52:14.918082 32153 net.cpp:382] loss -> loss
I0426 20:52:14.918088 32153 layer_factory.hpp:77] Creating layer loss
I0426 20:52:14.918364 32153 net.cpp:124] Setting up loss
I0426 20:52:14.918372 32153 net.cpp:131] Top shape: (1)
I0426 20:52:14.918386 32153 net.cpp:134]     with loss weight 1
I0426 20:52:14.918401 32153 net.cpp:139] Memory required for data: 8170808
I0426 20:52:14.918406 32153 net.cpp:200] loss needs backward computation.
I0426 20:52:14.918411 32153 net.cpp:202] accuracy does not need backward computation.
I0426 20:52:14.918414 32153 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:52:14.918417 32153 net.cpp:200] relu3 needs backward computation.
I0426 20:52:14.918421 32153 net.cpp:200] ip3 needs backward computation.
I0426 20:52:14.918423 32153 net.cpp:200] relu2 needs backward computation.
I0426 20:52:14.918426 32153 net.cpp:200] ip2 needs backward computation.
I0426 20:52:14.918439 32153 net.cpp:200] relu1 needs backward computation.
I0426 20:52:14.918442 32153 net.cpp:200] ip1 needs backward computation.
I0426 20:52:14.918455 32153 net.cpp:200] pool1 needs backward computation.
I0426 20:52:14.918458 32153 net.cpp:200] conv1 needs backward computation.
I0426 20:52:14.918462 32153 net.cpp:200] pool0 needs backward computation.
I0426 20:52:14.918469 32153 net.cpp:200] conv0 needs backward computation.
I0426 20:52:14.918473 32153 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:52:14.918478 32153 net.cpp:202] mnist does not need backward computation.
I0426 20:52:14.918479 32153 net.cpp:244] This network produces output accuracy
I0426 20:52:14.918483 32153 net.cpp:244] This network produces output loss
I0426 20:52:14.918494 32153 net.cpp:257] Network initialization done.
I0426 20:52:14.918541 32153 solver.cpp:56] Solver scaffolding done.
I0426 20:52:14.918866 32153 caffe.cpp:248] Starting Optimization
I0426 20:52:14.918872 32153 solver.cpp:273] Solving LeNet
I0426 20:52:14.918875 32153 solver.cpp:274] Learning Rate Policy: inv
I0426 20:52:14.919832 32153 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:52:14.925148 32153 blocking_queue.cpp:49] Waiting for data
I0426 20:52:14.994472 32160 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:14.995126 32153 solver.cpp:398]     Test net output #0: accuracy = 0.1336
I0426 20:52:14.995159 32153 solver.cpp:398]     Test net output #1: loss = 2.3167 (* 1 = 2.3167 loss)
I0426 20:52:14.999038 32153 solver.cpp:219] Iteration 0 (0 iter/s, 0.0801382s/100 iters), loss = 2.28549
I0426 20:52:14.999076 32153 solver.cpp:238]     Train net output #0: loss = 2.28549 (* 1 = 2.28549 loss)
I0426 20:52:14.999086 32153 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:52:15.103430 32153 solver.cpp:219] Iteration 100 (958.288 iter/s, 0.104353s/100 iters), loss = 0.563812
I0426 20:52:15.103472 32153 solver.cpp:238]     Train net output #0: loss = 0.563812 (* 1 = 0.563812 loss)
I0426 20:52:15.103479 32153 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:52:15.209043 32153 solver.cpp:219] Iteration 200 (947.337 iter/s, 0.105559s/100 iters), loss = 0.327388
I0426 20:52:15.209074 32153 solver.cpp:238]     Train net output #0: loss = 0.327388 (* 1 = 0.327388 loss)
I0426 20:52:15.209080 32153 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:52:15.312763 32153 solver.cpp:219] Iteration 300 (964.506 iter/s, 0.10368s/100 iters), loss = 0.433246
I0426 20:52:15.312806 32153 solver.cpp:238]     Train net output #0: loss = 0.433246 (* 1 = 0.433246 loss)
I0426 20:52:15.312868 32153 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:52:15.414592 32153 solver.cpp:219] Iteration 400 (982.556 iter/s, 0.101775s/100 iters), loss = 0.551444
I0426 20:52:15.414649 32153 solver.cpp:238]     Train net output #0: loss = 0.551444 (* 1 = 0.551444 loss)
I0426 20:52:15.414654 32153 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:52:15.523695 32153 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:52:15.584856 32160 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:15.586858 32153 solver.cpp:398]     Test net output #0: accuracy = 0.8692
I0426 20:52:15.586882 32153 solver.cpp:398]     Test net output #1: loss = 0.352598 (* 1 = 0.352598 loss)
I0426 20:52:15.587864 32153 solver.cpp:219] Iteration 500 (577.308 iter/s, 0.173218s/100 iters), loss = 0.495052
I0426 20:52:15.587924 32153 solver.cpp:238]     Train net output #0: loss = 0.495052 (* 1 = 0.495052 loss)
I0426 20:52:15.587931 32153 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:52:15.689353 32153 solver.cpp:219] Iteration 600 (985.889 iter/s, 0.101431s/100 iters), loss = 0.19504
I0426 20:52:15.689383 32153 solver.cpp:238]     Train net output #0: loss = 0.19504 (* 1 = 0.19504 loss)
I0426 20:52:15.689394 32153 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:52:15.799643 32153 solver.cpp:219] Iteration 700 (907.046 iter/s, 0.110248s/100 iters), loss = 0.341753
I0426 20:52:15.799681 32153 solver.cpp:238]     Train net output #0: loss = 0.341753 (* 1 = 0.341753 loss)
I0426 20:52:15.799690 32153 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:52:15.902109 32153 solver.cpp:219] Iteration 800 (976.387 iter/s, 0.102418s/100 iters), loss = 0.241956
I0426 20:52:15.902151 32153 solver.cpp:238]     Train net output #0: loss = 0.241957 (* 1 = 0.241957 loss)
I0426 20:52:15.902158 32153 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:52:16.004607 32153 solver.cpp:219] Iteration 900 (976.133 iter/s, 0.102445s/100 iters), loss = 0.195772
I0426 20:52:16.004637 32153 solver.cpp:238]     Train net output #0: loss = 0.195772 (* 1 = 0.195772 loss)
I0426 20:52:16.004645 32153 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:52:16.038805 32159 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:16.107249 32153 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:52:16.109742 32153 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:52:16.111299 32153 solver.cpp:311] Iteration 1000, loss = 0.0488989
I0426 20:52:16.111342 32153 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:52:16.180793 32160 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:52:16.182931 32153 solver.cpp:398]     Test net output #0: accuracy = 0.9759
I0426 20:52:16.182961 32153 solver.cpp:398]     Test net output #1: loss = 0.0752377 (* 1 = 0.0752377 loss)
I0426 20:52:16.182972 32153 solver.cpp:316] Optimization Done.
I0426 20:52:16.182977 32153 caffe.cpp:259] Optimization Done.
