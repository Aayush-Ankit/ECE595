I0426 20:55:30.565958   412 caffe.cpp:218] Using GPUs 0
I0426 20:55:30.595448   412 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:55:31.051781   412 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test181.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:55:31.051913   412 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test181.prototxt
I0426 20:55:31.052242   412 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:55:31.052273   412 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:55:31.052355   412 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:55:31.052417   412 layer_factory.hpp:77] Creating layer mnist
I0426 20:55:31.052525   412 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:55:31.052546   412 net.cpp:86] Creating Layer mnist
I0426 20:55:31.052551   412 net.cpp:382] mnist -> data
I0426 20:55:31.052570   412 net.cpp:382] mnist -> label
I0426 20:55:31.053620   412 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:55:31.055680   412 net.cpp:124] Setting up mnist
I0426 20:55:31.055709   412 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:55:31.055713   412 net.cpp:131] Top shape: 64 (64)
I0426 20:55:31.055716   412 net.cpp:139] Memory required for data: 200960
I0426 20:55:31.055722   412 layer_factory.hpp:77] Creating layer conv0
I0426 20:55:31.055735   412 net.cpp:86] Creating Layer conv0
I0426 20:55:31.055766   412 net.cpp:408] conv0 <- data
I0426 20:55:31.055776   412 net.cpp:382] conv0 -> conv0
I0426 20:55:31.285533   412 net.cpp:124] Setting up conv0
I0426 20:55:31.285575   412 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:55:31.285579   412 net.cpp:139] Memory required for data: 7573760
I0426 20:55:31.285594   412 layer_factory.hpp:77] Creating layer pool0
I0426 20:55:31.285606   412 net.cpp:86] Creating Layer pool0
I0426 20:55:31.285610   412 net.cpp:408] pool0 <- conv0
I0426 20:55:31.285615   412 net.cpp:382] pool0 -> pool0
I0426 20:55:31.285688   412 net.cpp:124] Setting up pool0
I0426 20:55:31.285702   412 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:55:31.285706   412 net.cpp:139] Memory required for data: 9416960
I0426 20:55:31.285708   412 layer_factory.hpp:77] Creating layer conv1
I0426 20:55:31.285718   412 net.cpp:86] Creating Layer conv1
I0426 20:55:31.285722   412 net.cpp:408] conv1 <- pool0
I0426 20:55:31.285727   412 net.cpp:382] conv1 -> conv1
I0426 20:55:31.287922   412 net.cpp:124] Setting up conv1
I0426 20:55:31.287935   412 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0426 20:55:31.287938   412 net.cpp:139] Memory required for data: 10236160
I0426 20:55:31.287946   412 layer_factory.hpp:77] Creating layer pool1
I0426 20:55:31.287952   412 net.cpp:86] Creating Layer pool1
I0426 20:55:31.287956   412 net.cpp:408] pool1 <- conv1
I0426 20:55:31.287961   412 net.cpp:382] pool1 -> pool1
I0426 20:55:31.288008   412 net.cpp:124] Setting up pool1
I0426 20:55:31.288013   412 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0426 20:55:31.288017   412 net.cpp:139] Memory required for data: 10440960
I0426 20:55:31.288019   412 layer_factory.hpp:77] Creating layer ip1
I0426 20:55:31.288027   412 net.cpp:86] Creating Layer ip1
I0426 20:55:31.288028   412 net.cpp:408] ip1 <- pool1
I0426 20:55:31.288033   412 net.cpp:382] ip1 -> ip1
I0426 20:55:31.290207   412 net.cpp:124] Setting up ip1
I0426 20:55:31.290220   412 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:55:31.290225   412 net.cpp:139] Memory required for data: 10517760
I0426 20:55:31.290232   412 layer_factory.hpp:77] Creating layer relu1
I0426 20:55:31.290238   412 net.cpp:86] Creating Layer relu1
I0426 20:55:31.290241   412 net.cpp:408] relu1 <- ip1
I0426 20:55:31.290261   412 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:55:31.290442   412 net.cpp:124] Setting up relu1
I0426 20:55:31.290452   412 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:55:31.290454   412 net.cpp:139] Memory required for data: 10594560
I0426 20:55:31.290458   412 layer_factory.hpp:77] Creating layer ip2
I0426 20:55:31.290464   412 net.cpp:86] Creating Layer ip2
I0426 20:55:31.290467   412 net.cpp:408] ip2 <- ip1
I0426 20:55:31.290472   412 net.cpp:382] ip2 -> ip2
I0426 20:55:31.291069   412 net.cpp:124] Setting up ip2
I0426 20:55:31.291077   412 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:55:31.291080   412 net.cpp:139] Memory required for data: 10671360
I0426 20:55:31.291086   412 layer_factory.hpp:77] Creating layer relu2
I0426 20:55:31.291091   412 net.cpp:86] Creating Layer relu2
I0426 20:55:31.291095   412 net.cpp:408] relu2 <- ip2
I0426 20:55:31.291113   412 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:55:31.292181   412 net.cpp:124] Setting up relu2
I0426 20:55:31.292194   412 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:55:31.292208   412 net.cpp:139] Memory required for data: 10748160
I0426 20:55:31.292212   412 layer_factory.hpp:77] Creating layer ip3
I0426 20:55:31.292219   412 net.cpp:86] Creating Layer ip3
I0426 20:55:31.292223   412 net.cpp:408] ip3 <- ip2
I0426 20:55:31.292228   412 net.cpp:382] ip3 -> ip3
I0426 20:55:31.292366   412 net.cpp:124] Setting up ip3
I0426 20:55:31.292374   412 net.cpp:131] Top shape: 64 10 (640)
I0426 20:55:31.292377   412 net.cpp:139] Memory required for data: 10750720
I0426 20:55:31.292385   412 layer_factory.hpp:77] Creating layer relu3
I0426 20:55:31.292390   412 net.cpp:86] Creating Layer relu3
I0426 20:55:31.292393   412 net.cpp:408] relu3 <- ip3
I0426 20:55:31.292412   412 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:55:31.292574   412 net.cpp:124] Setting up relu3
I0426 20:55:31.292583   412 net.cpp:131] Top shape: 64 10 (640)
I0426 20:55:31.292587   412 net.cpp:139] Memory required for data: 10753280
I0426 20:55:31.292589   412 layer_factory.hpp:77] Creating layer loss
I0426 20:55:31.292595   412 net.cpp:86] Creating Layer loss
I0426 20:55:31.292598   412 net.cpp:408] loss <- ip3
I0426 20:55:31.292601   412 net.cpp:408] loss <- label
I0426 20:55:31.292606   412 net.cpp:382] loss -> loss
I0426 20:55:31.292624   412 layer_factory.hpp:77] Creating layer loss
I0426 20:55:31.292872   412 net.cpp:124] Setting up loss
I0426 20:55:31.292882   412 net.cpp:131] Top shape: (1)
I0426 20:55:31.292886   412 net.cpp:134]     with loss weight 1
I0426 20:55:31.292901   412 net.cpp:139] Memory required for data: 10753284
I0426 20:55:31.292906   412 net.cpp:200] loss needs backward computation.
I0426 20:55:31.292912   412 net.cpp:200] relu3 needs backward computation.
I0426 20:55:31.292914   412 net.cpp:200] ip3 needs backward computation.
I0426 20:55:31.292917   412 net.cpp:200] relu2 needs backward computation.
I0426 20:55:31.292920   412 net.cpp:200] ip2 needs backward computation.
I0426 20:55:31.292923   412 net.cpp:200] relu1 needs backward computation.
I0426 20:55:31.292927   412 net.cpp:200] ip1 needs backward computation.
I0426 20:55:31.292929   412 net.cpp:200] pool1 needs backward computation.
I0426 20:55:31.292932   412 net.cpp:200] conv1 needs backward computation.
I0426 20:55:31.292935   412 net.cpp:200] pool0 needs backward computation.
I0426 20:55:31.292939   412 net.cpp:200] conv0 needs backward computation.
I0426 20:55:31.292943   412 net.cpp:202] mnist does not need backward computation.
I0426 20:55:31.292945   412 net.cpp:244] This network produces output loss
I0426 20:55:31.292954   412 net.cpp:257] Network initialization done.
I0426 20:55:31.293370   412 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test181.prototxt
I0426 20:55:31.293417   412 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:55:31.293522   412 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:55:31.293598   412 layer_factory.hpp:77] Creating layer mnist
I0426 20:55:31.293645   412 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:55:31.293658   412 net.cpp:86] Creating Layer mnist
I0426 20:55:31.293663   412 net.cpp:382] mnist -> data
I0426 20:55:31.293669   412 net.cpp:382] mnist -> label
I0426 20:55:31.293750   412 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:55:31.295928   412 net.cpp:124] Setting up mnist
I0426 20:55:31.295958   412 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:55:31.295963   412 net.cpp:131] Top shape: 100 (100)
I0426 20:55:31.295965   412 net.cpp:139] Memory required for data: 314000
I0426 20:55:31.295969   412 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:55:31.296011   412 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:55:31.296016   412 net.cpp:408] label_mnist_1_split <- label
I0426 20:55:31.296021   412 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:55:31.296027   412 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:55:31.296068   412 net.cpp:124] Setting up label_mnist_1_split
I0426 20:55:31.296075   412 net.cpp:131] Top shape: 100 (100)
I0426 20:55:31.296079   412 net.cpp:131] Top shape: 100 (100)
I0426 20:55:31.296082   412 net.cpp:139] Memory required for data: 314800
I0426 20:55:31.296084   412 layer_factory.hpp:77] Creating layer conv0
I0426 20:55:31.296092   412 net.cpp:86] Creating Layer conv0
I0426 20:55:31.296095   412 net.cpp:408] conv0 <- data
I0426 20:55:31.296100   412 net.cpp:382] conv0 -> conv0
I0426 20:55:31.297833   412 net.cpp:124] Setting up conv0
I0426 20:55:31.297847   412 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:55:31.297865   412 net.cpp:139] Memory required for data: 11834800
I0426 20:55:31.297873   412 layer_factory.hpp:77] Creating layer pool0
I0426 20:55:31.297880   412 net.cpp:86] Creating Layer pool0
I0426 20:55:31.297883   412 net.cpp:408] pool0 <- conv0
I0426 20:55:31.297888   412 net.cpp:382] pool0 -> pool0
I0426 20:55:31.297940   412 net.cpp:124] Setting up pool0
I0426 20:55:31.297945   412 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:55:31.297947   412 net.cpp:139] Memory required for data: 14714800
I0426 20:55:31.297950   412 layer_factory.hpp:77] Creating layer conv1
I0426 20:55:31.297960   412 net.cpp:86] Creating Layer conv1
I0426 20:55:31.297963   412 net.cpp:408] conv1 <- pool0
I0426 20:55:31.297968   412 net.cpp:382] conv1 -> conv1
I0426 20:55:31.299871   412 net.cpp:124] Setting up conv1
I0426 20:55:31.299898   412 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0426 20:55:31.299902   412 net.cpp:139] Memory required for data: 15994800
I0426 20:55:31.299911   412 layer_factory.hpp:77] Creating layer pool1
I0426 20:55:31.299918   412 net.cpp:86] Creating Layer pool1
I0426 20:55:31.299921   412 net.cpp:408] pool1 <- conv1
I0426 20:55:31.299926   412 net.cpp:382] pool1 -> pool1
I0426 20:55:31.299978   412 net.cpp:124] Setting up pool1
I0426 20:55:31.299983   412 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0426 20:55:31.299985   412 net.cpp:139] Memory required for data: 16314800
I0426 20:55:31.299988   412 layer_factory.hpp:77] Creating layer ip1
I0426 20:55:31.299994   412 net.cpp:86] Creating Layer ip1
I0426 20:55:31.299998   412 net.cpp:408] ip1 <- pool1
I0426 20:55:31.300002   412 net.cpp:382] ip1 -> ip1
I0426 20:55:31.301468   412 net.cpp:124] Setting up ip1
I0426 20:55:31.301486   412 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:55:31.301503   412 net.cpp:139] Memory required for data: 16434800
I0426 20:55:31.301511   412 layer_factory.hpp:77] Creating layer relu1
I0426 20:55:31.301514   412 net.cpp:86] Creating Layer relu1
I0426 20:55:31.301517   412 net.cpp:408] relu1 <- ip1
I0426 20:55:31.301523   412 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:55:31.301736   412 net.cpp:124] Setting up relu1
I0426 20:55:31.301746   412 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:55:31.301749   412 net.cpp:139] Memory required for data: 16554800
I0426 20:55:31.301753   412 layer_factory.hpp:77] Creating layer ip2
I0426 20:55:31.301760   412 net.cpp:86] Creating Layer ip2
I0426 20:55:31.301764   412 net.cpp:408] ip2 <- ip1
I0426 20:55:31.301769   412 net.cpp:382] ip2 -> ip2
I0426 20:55:31.302367   412 net.cpp:124] Setting up ip2
I0426 20:55:31.302377   412 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:55:31.302395   412 net.cpp:139] Memory required for data: 16674800
I0426 20:55:31.302400   412 layer_factory.hpp:77] Creating layer relu2
I0426 20:55:31.302404   412 net.cpp:86] Creating Layer relu2
I0426 20:55:31.302407   412 net.cpp:408] relu2 <- ip2
I0426 20:55:31.302412   412 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:55:31.302579   412 net.cpp:124] Setting up relu2
I0426 20:55:31.302587   412 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:55:31.302590   412 net.cpp:139] Memory required for data: 16794800
I0426 20:55:31.302593   412 layer_factory.hpp:77] Creating layer ip3
I0426 20:55:31.302599   412 net.cpp:86] Creating Layer ip3
I0426 20:55:31.302603   412 net.cpp:408] ip3 <- ip2
I0426 20:55:31.302608   412 net.cpp:382] ip3 -> ip3
I0426 20:55:31.302721   412 net.cpp:124] Setting up ip3
I0426 20:55:31.302727   412 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:55:31.302729   412 net.cpp:139] Memory required for data: 16798800
I0426 20:55:31.302737   412 layer_factory.hpp:77] Creating layer relu3
I0426 20:55:31.302742   412 net.cpp:86] Creating Layer relu3
I0426 20:55:31.302744   412 net.cpp:408] relu3 <- ip3
I0426 20:55:31.302748   412 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:55:31.303556   412 net.cpp:124] Setting up relu3
I0426 20:55:31.303568   412 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:55:31.303582   412 net.cpp:139] Memory required for data: 16802800
I0426 20:55:31.303586   412 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:55:31.303592   412 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:55:31.303596   412 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:55:31.303614   412 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:55:31.303620   412 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:55:31.303664   412 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:55:31.303671   412 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:55:31.303674   412 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:55:31.303678   412 net.cpp:139] Memory required for data: 16810800
I0426 20:55:31.303680   412 layer_factory.hpp:77] Creating layer accuracy
I0426 20:55:31.303684   412 net.cpp:86] Creating Layer accuracy
I0426 20:55:31.303688   412 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:55:31.303691   412 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:55:31.303696   412 net.cpp:382] accuracy -> accuracy
I0426 20:55:31.303702   412 net.cpp:124] Setting up accuracy
I0426 20:55:31.303706   412 net.cpp:131] Top shape: (1)
I0426 20:55:31.303709   412 net.cpp:139] Memory required for data: 16810804
I0426 20:55:31.303711   412 layer_factory.hpp:77] Creating layer loss
I0426 20:55:31.303715   412 net.cpp:86] Creating Layer loss
I0426 20:55:31.303719   412 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:55:31.303721   412 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:55:31.303726   412 net.cpp:382] loss -> loss
I0426 20:55:31.303731   412 layer_factory.hpp:77] Creating layer loss
I0426 20:55:31.303977   412 net.cpp:124] Setting up loss
I0426 20:55:31.303985   412 net.cpp:131] Top shape: (1)
I0426 20:55:31.303988   412 net.cpp:134]     with loss weight 1
I0426 20:55:31.304004   412 net.cpp:139] Memory required for data: 16810808
I0426 20:55:31.304008   412 net.cpp:200] loss needs backward computation.
I0426 20:55:31.304011   412 net.cpp:202] accuracy does not need backward computation.
I0426 20:55:31.304015   412 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:55:31.304018   412 net.cpp:200] relu3 needs backward computation.
I0426 20:55:31.304021   412 net.cpp:200] ip3 needs backward computation.
I0426 20:55:31.304024   412 net.cpp:200] relu2 needs backward computation.
I0426 20:55:31.304026   412 net.cpp:200] ip2 needs backward computation.
I0426 20:55:31.304029   412 net.cpp:200] relu1 needs backward computation.
I0426 20:55:31.304033   412 net.cpp:200] ip1 needs backward computation.
I0426 20:55:31.304035   412 net.cpp:200] pool1 needs backward computation.
I0426 20:55:31.304039   412 net.cpp:200] conv1 needs backward computation.
I0426 20:55:31.304041   412 net.cpp:200] pool0 needs backward computation.
I0426 20:55:31.304044   412 net.cpp:200] conv0 needs backward computation.
I0426 20:55:31.304047   412 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:55:31.304051   412 net.cpp:202] mnist does not need backward computation.
I0426 20:55:31.304054   412 net.cpp:244] This network produces output accuracy
I0426 20:55:31.304056   412 net.cpp:244] This network produces output loss
I0426 20:55:31.304070   412 net.cpp:257] Network initialization done.
I0426 20:55:31.304111   412 solver.cpp:56] Solver scaffolding done.
I0426 20:55:31.304476   412 caffe.cpp:248] Starting Optimization
I0426 20:55:31.304481   412 solver.cpp:273] Solving LeNet
I0426 20:55:31.304484   412 solver.cpp:274] Learning Rate Policy: inv
I0426 20:55:31.305984   412 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:55:31.387020   419 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:55:31.389021   412 solver.cpp:398]     Test net output #0: accuracy = 0.1396
I0426 20:55:31.389056   412 solver.cpp:398]     Test net output #1: loss = 2.28426 (* 1 = 2.28426 loss)
I0426 20:55:31.394151   412 solver.cpp:219] Iteration 0 (0 iter/s, 0.0896317s/100 iters), loss = 2.28306
I0426 20:55:31.394193   412 solver.cpp:238]     Train net output #0: loss = 2.28306 (* 1 = 2.28306 loss)
I0426 20:55:31.394206   412 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:55:31.571763   412 solver.cpp:219] Iteration 100 (563.156 iter/s, 0.177571s/100 iters), loss = 0.282501
I0426 20:55:31.571789   412 solver.cpp:238]     Train net output #0: loss = 0.282501 (* 1 = 0.282501 loss)
I0426 20:55:31.571796   412 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:55:31.746594   412 solver.cpp:219] Iteration 200 (572.11 iter/s, 0.174792s/100 iters), loss = 0.183464
I0426 20:55:31.746620   412 solver.cpp:238]     Train net output #0: loss = 0.183465 (* 1 = 0.183465 loss)
I0426 20:55:31.746628   412 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:55:31.919494   412 solver.cpp:219] Iteration 300 (578.505 iter/s, 0.172859s/100 iters), loss = 0.171029
I0426 20:55:31.919520   412 solver.cpp:238]     Train net output #0: loss = 0.171029 (* 1 = 0.171029 loss)
I0426 20:55:31.919528   412 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:55:32.095109   412 solver.cpp:219] Iteration 400 (569.557 iter/s, 0.175575s/100 iters), loss = 0.0838805
I0426 20:55:32.095150   412 solver.cpp:238]     Train net output #0: loss = 0.0838805 (* 1 = 0.0838805 loss)
I0426 20:55:32.095157   412 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:55:32.262017   412 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:55:32.341542   419 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:55:32.344416   412 solver.cpp:398]     Test net output #0: accuracy = 0.9707
I0426 20:55:32.344435   412 solver.cpp:398]     Test net output #1: loss = 0.0888249 (* 1 = 0.0888249 loss)
I0426 20:55:32.346112   412 solver.cpp:219] Iteration 500 (398.47 iter/s, 0.25096s/100 iters), loss = 0.0560955
I0426 20:55:32.346149   412 solver.cpp:238]     Train net output #0: loss = 0.0560955 (* 1 = 0.0560955 loss)
I0426 20:55:32.346169   412 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:55:32.521615   412 solver.cpp:219] Iteration 600 (569.91 iter/s, 0.175466s/100 iters), loss = 0.110952
I0426 20:55:32.521653   412 solver.cpp:238]     Train net output #0: loss = 0.110952 (* 1 = 0.110952 loss)
I0426 20:55:32.521661   412 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:55:32.697036   412 solver.cpp:219] Iteration 700 (570.192 iter/s, 0.175379s/100 iters), loss = 0.0969239
I0426 20:55:32.697077   412 solver.cpp:238]     Train net output #0: loss = 0.096924 (* 1 = 0.096924 loss)
I0426 20:55:32.697083   412 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:55:32.867270   412 solver.cpp:219] Iteration 800 (587.554 iter/s, 0.170197s/100 iters), loss = 0.291409
I0426 20:55:32.867311   412 solver.cpp:238]     Train net output #0: loss = 0.291409 (* 1 = 0.291409 loss)
I0426 20:55:32.867317   412 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:55:33.037538   412 solver.cpp:219] Iteration 900 (587.445 iter/s, 0.170229s/100 iters), loss = 0.109861
I0426 20:55:33.037576   412 solver.cpp:238]     Train net output #0: loss = 0.109861 (* 1 = 0.109861 loss)
I0426 20:55:33.037583   412 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:55:33.095137   418 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:55:33.210579   412 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:55:33.216403   412 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:55:33.219672   412 solver.cpp:311] Iteration 1000, loss = 0.0638349
I0426 20:55:33.219691   412 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:55:33.297924   419 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:55:33.300771   412 solver.cpp:398]     Test net output #0: accuracy = 0.9827
I0426 20:55:33.300807   412 solver.cpp:398]     Test net output #1: loss = 0.0522867 (* 1 = 0.0522867 loss)
I0426 20:55:33.300818   412 solver.cpp:316] Optimization Done.
I0426 20:55:33.300823   412 caffe.cpp:259] Optimization Done.
