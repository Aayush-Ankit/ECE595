I0426 20:54:42.987759 32721 caffe.cpp:218] Using GPUs 0
I0426 20:54:43.022435 32721 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0426 20:54:43.539482 32721 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything/lenet_train_test165.prototxt"
train_state {
  level: 0
  stage: ""
}
I0426 20:54:43.539621 32721 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything/lenet_train_test165.prototxt
I0426 20:54:43.540035 32721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0426 20:54:43.540055 32721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0426 20:54:43.540179 32721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:43.540261 32721 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:43.540356 32721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0426 20:54:43.540380 32721 net.cpp:86] Creating Layer mnist
I0426 20:54:43.540390 32721 net.cpp:382] mnist -> data
I0426 20:54:43.540411 32721 net.cpp:382] mnist -> label
I0426 20:54:43.541522 32721 data_layer.cpp:45] output data size: 64,1,28,28
I0426 20:54:43.544070 32721 net.cpp:124] Setting up mnist
I0426 20:54:43.544088 32721 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0426 20:54:43.544095 32721 net.cpp:131] Top shape: 64 (64)
I0426 20:54:43.544097 32721 net.cpp:139] Memory required for data: 200960
I0426 20:54:43.544106 32721 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:43.544139 32721 net.cpp:86] Creating Layer conv0
I0426 20:54:43.544172 32721 net.cpp:408] conv0 <- data
I0426 20:54:43.544185 32721 net.cpp:382] conv0 -> conv0
I0426 20:54:43.829421 32721 net.cpp:124] Setting up conv0
I0426 20:54:43.829448 32721 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0426 20:54:43.829452 32721 net.cpp:139] Memory required for data: 7573760
I0426 20:54:43.829466 32721 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:43.829478 32721 net.cpp:86] Creating Layer pool0
I0426 20:54:43.829483 32721 net.cpp:408] pool0 <- conv0
I0426 20:54:43.829488 32721 net.cpp:382] pool0 -> pool0
I0426 20:54:43.829547 32721 net.cpp:124] Setting up pool0
I0426 20:54:43.829553 32721 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0426 20:54:43.829556 32721 net.cpp:139] Memory required for data: 9416960
I0426 20:54:43.829560 32721 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:43.829574 32721 net.cpp:86] Creating Layer conv1
I0426 20:54:43.829577 32721 net.cpp:408] conv1 <- pool0
I0426 20:54:43.829582 32721 net.cpp:382] conv1 -> conv1
I0426 20:54:43.831647 32721 net.cpp:124] Setting up conv1
I0426 20:54:43.831661 32721 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0426 20:54:43.831665 32721 net.cpp:139] Memory required for data: 9826560
I0426 20:54:43.831673 32721 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:43.831681 32721 net.cpp:86] Creating Layer pool1
I0426 20:54:43.831683 32721 net.cpp:408] pool1 <- conv1
I0426 20:54:43.831689 32721 net.cpp:382] pool1 -> pool1
I0426 20:54:43.831740 32721 net.cpp:124] Setting up pool1
I0426 20:54:43.831745 32721 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0426 20:54:43.831748 32721 net.cpp:139] Memory required for data: 9928960
I0426 20:54:43.831750 32721 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:43.831758 32721 net.cpp:86] Creating Layer ip1
I0426 20:54:43.831761 32721 net.cpp:408] ip1 <- pool1
I0426 20:54:43.831765 32721 net.cpp:382] ip1 -> ip1
I0426 20:54:43.833362 32721 net.cpp:124] Setting up ip1
I0426 20:54:43.833375 32721 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:43.833379 32721 net.cpp:139] Memory required for data: 10005760
I0426 20:54:43.833386 32721 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:43.833392 32721 net.cpp:86] Creating Layer relu1
I0426 20:54:43.833395 32721 net.cpp:408] relu1 <- ip1
I0426 20:54:43.833400 32721 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:43.833564 32721 net.cpp:124] Setting up relu1
I0426 20:54:43.833572 32721 net.cpp:131] Top shape: 64 300 (19200)
I0426 20:54:43.833575 32721 net.cpp:139] Memory required for data: 10082560
I0426 20:54:43.833578 32721 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:43.833585 32721 net.cpp:86] Creating Layer ip2
I0426 20:54:43.833588 32721 net.cpp:408] ip2 <- ip1
I0426 20:54:43.833593 32721 net.cpp:382] ip2 -> ip2
I0426 20:54:43.833868 32721 net.cpp:124] Setting up ip2
I0426 20:54:43.833876 32721 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:54:43.833878 32721 net.cpp:139] Memory required for data: 10108160
I0426 20:54:43.833884 32721 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:43.833890 32721 net.cpp:86] Creating Layer relu2
I0426 20:54:43.833894 32721 net.cpp:408] relu2 <- ip2
I0426 20:54:43.833897 32721 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:43.834697 32721 net.cpp:124] Setting up relu2
I0426 20:54:43.834709 32721 net.cpp:131] Top shape: 64 100 (6400)
I0426 20:54:43.834712 32721 net.cpp:139] Memory required for data: 10133760
I0426 20:54:43.834715 32721 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:43.834722 32721 net.cpp:86] Creating Layer ip3
I0426 20:54:43.834725 32721 net.cpp:408] ip3 <- ip2
I0426 20:54:43.834731 32721 net.cpp:382] ip3 -> ip3
I0426 20:54:43.834851 32721 net.cpp:124] Setting up ip3
I0426 20:54:43.834857 32721 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:43.834861 32721 net.cpp:139] Memory required for data: 10136320
I0426 20:54:43.834868 32721 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:43.834872 32721 net.cpp:86] Creating Layer relu3
I0426 20:54:43.834875 32721 net.cpp:408] relu3 <- ip3
I0426 20:54:43.834880 32721 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:43.835047 32721 net.cpp:124] Setting up relu3
I0426 20:54:43.835055 32721 net.cpp:131] Top shape: 64 10 (640)
I0426 20:54:43.835058 32721 net.cpp:139] Memory required for data: 10138880
I0426 20:54:43.835062 32721 layer_factory.hpp:77] Creating layer loss
I0426 20:54:43.835081 32721 net.cpp:86] Creating Layer loss
I0426 20:54:43.835084 32721 net.cpp:408] loss <- ip3
I0426 20:54:43.835088 32721 net.cpp:408] loss <- label
I0426 20:54:43.835093 32721 net.cpp:382] loss -> loss
I0426 20:54:43.835105 32721 layer_factory.hpp:77] Creating layer loss
I0426 20:54:43.835328 32721 net.cpp:124] Setting up loss
I0426 20:54:43.835337 32721 net.cpp:131] Top shape: (1)
I0426 20:54:43.835340 32721 net.cpp:134]     with loss weight 1
I0426 20:54:43.835353 32721 net.cpp:139] Memory required for data: 10138884
I0426 20:54:43.835356 32721 net.cpp:200] loss needs backward computation.
I0426 20:54:43.835360 32721 net.cpp:200] relu3 needs backward computation.
I0426 20:54:43.835362 32721 net.cpp:200] ip3 needs backward computation.
I0426 20:54:43.835366 32721 net.cpp:200] relu2 needs backward computation.
I0426 20:54:43.835368 32721 net.cpp:200] ip2 needs backward computation.
I0426 20:54:43.835371 32721 net.cpp:200] relu1 needs backward computation.
I0426 20:54:43.835373 32721 net.cpp:200] ip1 needs backward computation.
I0426 20:54:43.835376 32721 net.cpp:200] pool1 needs backward computation.
I0426 20:54:43.835378 32721 net.cpp:200] conv1 needs backward computation.
I0426 20:54:43.835381 32721 net.cpp:200] pool0 needs backward computation.
I0426 20:54:43.835384 32721 net.cpp:200] conv0 needs backward computation.
I0426 20:54:43.835387 32721 net.cpp:202] mnist does not need backward computation.
I0426 20:54:43.835389 32721 net.cpp:244] This network produces output loss
I0426 20:54:43.835398 32721 net.cpp:257] Network initialization done.
I0426 20:54:43.835698 32721 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything/lenet_train_test165.prototxt
I0426 20:54:43.835724 32721 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0426 20:54:43.835810 32721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 300
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0426 20:54:43.835903 32721 layer_factory.hpp:77] Creating layer mnist
I0426 20:54:43.835947 32721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0426 20:54:43.835959 32721 net.cpp:86] Creating Layer mnist
I0426 20:54:43.835963 32721 net.cpp:382] mnist -> data
I0426 20:54:43.835971 32721 net.cpp:382] mnist -> label
I0426 20:54:43.836052 32721 data_layer.cpp:45] output data size: 100,1,28,28
I0426 20:54:43.837299 32721 net.cpp:124] Setting up mnist
I0426 20:54:43.837312 32721 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0426 20:54:43.837317 32721 net.cpp:131] Top shape: 100 (100)
I0426 20:54:43.837321 32721 net.cpp:139] Memory required for data: 314000
I0426 20:54:43.837323 32721 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0426 20:54:43.837332 32721 net.cpp:86] Creating Layer label_mnist_1_split
I0426 20:54:43.837334 32721 net.cpp:408] label_mnist_1_split <- label
I0426 20:54:43.837339 32721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0426 20:54:43.837345 32721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0426 20:54:43.837393 32721 net.cpp:124] Setting up label_mnist_1_split
I0426 20:54:43.837397 32721 net.cpp:131] Top shape: 100 (100)
I0426 20:54:43.837400 32721 net.cpp:131] Top shape: 100 (100)
I0426 20:54:43.837404 32721 net.cpp:139] Memory required for data: 314800
I0426 20:54:43.837406 32721 layer_factory.hpp:77] Creating layer conv0
I0426 20:54:43.837414 32721 net.cpp:86] Creating Layer conv0
I0426 20:54:43.837417 32721 net.cpp:408] conv0 <- data
I0426 20:54:43.837424 32721 net.cpp:382] conv0 -> conv0
I0426 20:54:43.839121 32721 net.cpp:124] Setting up conv0
I0426 20:54:43.839135 32721 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0426 20:54:43.839139 32721 net.cpp:139] Memory required for data: 11834800
I0426 20:54:43.839148 32721 layer_factory.hpp:77] Creating layer pool0
I0426 20:54:43.839170 32721 net.cpp:86] Creating Layer pool0
I0426 20:54:43.839174 32721 net.cpp:408] pool0 <- conv0
I0426 20:54:43.839179 32721 net.cpp:382] pool0 -> pool0
I0426 20:54:43.839213 32721 net.cpp:124] Setting up pool0
I0426 20:54:43.839218 32721 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0426 20:54:43.839221 32721 net.cpp:139] Memory required for data: 14714800
I0426 20:54:43.839223 32721 layer_factory.hpp:77] Creating layer conv1
I0426 20:54:43.839233 32721 net.cpp:86] Creating Layer conv1
I0426 20:54:43.839236 32721 net.cpp:408] conv1 <- pool0
I0426 20:54:43.839241 32721 net.cpp:382] conv1 -> conv1
I0426 20:54:43.840908 32721 net.cpp:124] Setting up conv1
I0426 20:54:43.840920 32721 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0426 20:54:43.840924 32721 net.cpp:139] Memory required for data: 15354800
I0426 20:54:43.840934 32721 layer_factory.hpp:77] Creating layer pool1
I0426 20:54:43.840957 32721 net.cpp:86] Creating Layer pool1
I0426 20:54:43.840960 32721 net.cpp:408] pool1 <- conv1
I0426 20:54:43.840965 32721 net.cpp:382] pool1 -> pool1
I0426 20:54:43.841003 32721 net.cpp:124] Setting up pool1
I0426 20:54:43.841009 32721 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0426 20:54:43.841019 32721 net.cpp:139] Memory required for data: 15514800
I0426 20:54:43.841022 32721 layer_factory.hpp:77] Creating layer ip1
I0426 20:54:43.841028 32721 net.cpp:86] Creating Layer ip1
I0426 20:54:43.841032 32721 net.cpp:408] ip1 <- pool1
I0426 20:54:43.841037 32721 net.cpp:382] ip1 -> ip1
I0426 20:54:43.842610 32721 net.cpp:124] Setting up ip1
I0426 20:54:43.842623 32721 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:43.842635 32721 net.cpp:139] Memory required for data: 15634800
I0426 20:54:43.842660 32721 layer_factory.hpp:77] Creating layer relu1
I0426 20:54:43.842665 32721 net.cpp:86] Creating Layer relu1
I0426 20:54:43.842669 32721 net.cpp:408] relu1 <- ip1
I0426 20:54:43.842675 32721 net.cpp:369] relu1 -> ip1 (in-place)
I0426 20:54:43.842847 32721 net.cpp:124] Setting up relu1
I0426 20:54:43.842856 32721 net.cpp:131] Top shape: 100 300 (30000)
I0426 20:54:43.842859 32721 net.cpp:139] Memory required for data: 15754800
I0426 20:54:43.842862 32721 layer_factory.hpp:77] Creating layer ip2
I0426 20:54:43.842878 32721 net.cpp:86] Creating Layer ip2
I0426 20:54:43.842881 32721 net.cpp:408] ip2 <- ip1
I0426 20:54:43.842885 32721 net.cpp:382] ip2 -> ip2
I0426 20:54:43.843154 32721 net.cpp:124] Setting up ip2
I0426 20:54:43.843163 32721 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:54:43.843165 32721 net.cpp:139] Memory required for data: 15794800
I0426 20:54:43.843170 32721 layer_factory.hpp:77] Creating layer relu2
I0426 20:54:43.843175 32721 net.cpp:86] Creating Layer relu2
I0426 20:54:43.843178 32721 net.cpp:408] relu2 <- ip2
I0426 20:54:43.843183 32721 net.cpp:369] relu2 -> ip2 (in-place)
I0426 20:54:43.843336 32721 net.cpp:124] Setting up relu2
I0426 20:54:43.843344 32721 net.cpp:131] Top shape: 100 100 (10000)
I0426 20:54:43.843348 32721 net.cpp:139] Memory required for data: 15834800
I0426 20:54:43.843350 32721 layer_factory.hpp:77] Creating layer ip3
I0426 20:54:43.843355 32721 net.cpp:86] Creating Layer ip3
I0426 20:54:43.843359 32721 net.cpp:408] ip3 <- ip2
I0426 20:54:43.843364 32721 net.cpp:382] ip3 -> ip3
I0426 20:54:43.843461 32721 net.cpp:124] Setting up ip3
I0426 20:54:43.843468 32721 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:43.843472 32721 net.cpp:139] Memory required for data: 15838800
I0426 20:54:43.843478 32721 layer_factory.hpp:77] Creating layer relu3
I0426 20:54:43.843484 32721 net.cpp:86] Creating Layer relu3
I0426 20:54:43.843487 32721 net.cpp:408] relu3 <- ip3
I0426 20:54:43.843492 32721 net.cpp:369] relu3 -> ip3 (in-place)
I0426 20:54:43.844342 32721 net.cpp:124] Setting up relu3
I0426 20:54:43.844355 32721 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:43.844358 32721 net.cpp:139] Memory required for data: 15842800
I0426 20:54:43.844362 32721 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0426 20:54:43.844367 32721 net.cpp:86] Creating Layer ip3_relu3_0_split
I0426 20:54:43.844369 32721 net.cpp:408] ip3_relu3_0_split <- ip3
I0426 20:54:43.844373 32721 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0426 20:54:43.844379 32721 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0426 20:54:43.844430 32721 net.cpp:124] Setting up ip3_relu3_0_split
I0426 20:54:43.844436 32721 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:43.844439 32721 net.cpp:131] Top shape: 100 10 (1000)
I0426 20:54:43.844442 32721 net.cpp:139] Memory required for data: 15850800
I0426 20:54:43.844445 32721 layer_factory.hpp:77] Creating layer accuracy
I0426 20:54:43.844460 32721 net.cpp:86] Creating Layer accuracy
I0426 20:54:43.844462 32721 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0426 20:54:43.844466 32721 net.cpp:408] accuracy <- label_mnist_1_split_0
I0426 20:54:43.844471 32721 net.cpp:382] accuracy -> accuracy
I0426 20:54:43.844483 32721 net.cpp:124] Setting up accuracy
I0426 20:54:43.844487 32721 net.cpp:131] Top shape: (1)
I0426 20:54:43.844490 32721 net.cpp:139] Memory required for data: 15850804
I0426 20:54:43.844492 32721 layer_factory.hpp:77] Creating layer loss
I0426 20:54:43.844498 32721 net.cpp:86] Creating Layer loss
I0426 20:54:43.844501 32721 net.cpp:408] loss <- ip3_relu3_0_split_1
I0426 20:54:43.844506 32721 net.cpp:408] loss <- label_mnist_1_split_1
I0426 20:54:43.844508 32721 net.cpp:382] loss -> loss
I0426 20:54:43.844514 32721 layer_factory.hpp:77] Creating layer loss
I0426 20:54:43.844753 32721 net.cpp:124] Setting up loss
I0426 20:54:43.844761 32721 net.cpp:131] Top shape: (1)
I0426 20:54:43.844764 32721 net.cpp:134]     with loss weight 1
I0426 20:54:43.844779 32721 net.cpp:139] Memory required for data: 15850808
I0426 20:54:43.844784 32721 net.cpp:200] loss needs backward computation.
I0426 20:54:43.844787 32721 net.cpp:202] accuracy does not need backward computation.
I0426 20:54:43.844791 32721 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0426 20:54:43.844794 32721 net.cpp:200] relu3 needs backward computation.
I0426 20:54:43.844796 32721 net.cpp:200] ip3 needs backward computation.
I0426 20:54:43.844805 32721 net.cpp:200] relu2 needs backward computation.
I0426 20:54:43.844808 32721 net.cpp:200] ip2 needs backward computation.
I0426 20:54:43.844830 32721 net.cpp:200] relu1 needs backward computation.
I0426 20:54:43.844833 32721 net.cpp:200] ip1 needs backward computation.
I0426 20:54:43.844842 32721 net.cpp:200] pool1 needs backward computation.
I0426 20:54:43.844846 32721 net.cpp:200] conv1 needs backward computation.
I0426 20:54:43.844848 32721 net.cpp:200] pool0 needs backward computation.
I0426 20:54:43.844851 32721 net.cpp:200] conv0 needs backward computation.
I0426 20:54:43.844856 32721 net.cpp:202] label_mnist_1_split does not need backward computation.
I0426 20:54:43.844859 32721 net.cpp:202] mnist does not need backward computation.
I0426 20:54:43.844861 32721 net.cpp:244] This network produces output accuracy
I0426 20:54:43.844864 32721 net.cpp:244] This network produces output loss
I0426 20:54:43.844877 32721 net.cpp:257] Network initialization done.
I0426 20:54:43.844931 32721 solver.cpp:56] Solver scaffolding done.
I0426 20:54:43.845257 32721 caffe.cpp:248] Starting Optimization
I0426 20:54:43.845263 32721 solver.cpp:273] Solving LeNet
I0426 20:54:43.845268 32721 solver.cpp:274] Learning Rate Policy: inv
I0426 20:54:43.846117 32721 solver.cpp:331] Iteration 0, Testing net (#0)
I0426 20:54:43.854876 32721 blocking_queue.cpp:49] Waiting for data
I0426 20:54:43.922511 32728 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:43.923539 32721 solver.cpp:398]     Test net output #0: accuracy = 0.0903
I0426 20:54:43.923576 32721 solver.cpp:398]     Test net output #1: loss = 2.31654 (* 1 = 2.31654 loss)
I0426 20:54:43.928588 32721 solver.cpp:219] Iteration 0 (-8.39819e-31 iter/s, 0.0832963s/100 iters), loss = 2.34113
I0426 20:54:43.928611 32721 solver.cpp:238]     Train net output #0: loss = 2.34113 (* 1 = 2.34113 loss)
I0426 20:54:43.928638 32721 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0426 20:54:44.076751 32721 solver.cpp:219] Iteration 100 (675.112 iter/s, 0.148124s/100 iters), loss = 0.446056
I0426 20:54:44.076778 32721 solver.cpp:238]     Train net output #0: loss = 0.446056 (* 1 = 0.446056 loss)
I0426 20:54:44.076802 32721 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0426 20:54:44.223167 32721 solver.cpp:219] Iteration 200 (683.169 iter/s, 0.146377s/100 iters), loss = 0.142427
I0426 20:54:44.223192 32721 solver.cpp:238]     Train net output #0: loss = 0.142427 (* 1 = 0.142427 loss)
I0426 20:54:44.223214 32721 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0426 20:54:44.369303 32721 solver.cpp:219] Iteration 300 (684.466 iter/s, 0.146099s/100 iters), loss = 0.180793
I0426 20:54:44.369328 32721 solver.cpp:238]     Train net output #0: loss = 0.180793 (* 1 = 0.180793 loss)
I0426 20:54:44.369350 32721 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0426 20:54:44.518411 32721 solver.cpp:219] Iteration 400 (670.822 iter/s, 0.149071s/100 iters), loss = 0.059718
I0426 20:54:44.518437 32721 solver.cpp:238]     Train net output #0: loss = 0.0597179 (* 1 = 0.0597179 loss)
I0426 20:54:44.518443 32721 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0426 20:54:44.661942 32721 solver.cpp:331] Iteration 500, Testing net (#0)
I0426 20:54:44.732640 32728 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:44.735031 32721 solver.cpp:398]     Test net output #0: accuracy = 0.9727
I0426 20:54:44.735050 32721 solver.cpp:398]     Test net output #1: loss = 0.0842688 (* 1 = 0.0842688 loss)
I0426 20:54:44.736394 32721 solver.cpp:219] Iteration 500 (458.84 iter/s, 0.217941s/100 iters), loss = 0.0821591
I0426 20:54:44.736433 32721 solver.cpp:238]     Train net output #0: loss = 0.082159 (* 1 = 0.082159 loss)
I0426 20:54:44.736455 32721 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0426 20:54:44.880631 32721 solver.cpp:219] Iteration 600 (693.542 iter/s, 0.144187s/100 iters), loss = 0.0822323
I0426 20:54:44.880656 32721 solver.cpp:238]     Train net output #0: loss = 0.0822322 (* 1 = 0.0822322 loss)
I0426 20:54:44.880663 32721 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0426 20:54:45.027813 32721 solver.cpp:219] Iteration 700 (679.608 iter/s, 0.147144s/100 iters), loss = 0.109045
I0426 20:54:45.027839 32721 solver.cpp:238]     Train net output #0: loss = 0.109045 (* 1 = 0.109045 loss)
I0426 20:54:45.027863 32721 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0426 20:54:45.175071 32721 solver.cpp:219] Iteration 800 (679.272 iter/s, 0.147216s/100 iters), loss = 0.186271
I0426 20:54:45.175102 32721 solver.cpp:238]     Train net output #0: loss = 0.186271 (* 1 = 0.186271 loss)
I0426 20:54:45.175124 32721 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0426 20:54:45.322944 32721 solver.cpp:219] Iteration 900 (676.454 iter/s, 0.14783s/100 iters), loss = 0.131374
I0426 20:54:45.322970 32721 solver.cpp:238]     Train net output #0: loss = 0.131374 (* 1 = 0.131374 loss)
I0426 20:54:45.322976 32721 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0426 20:54:45.372107 32727 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:45.469059 32721 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0426 20:54:45.473242 32721 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0426 20:54:45.475149 32721 solver.cpp:311] Iteration 1000, loss = 0.0981582
I0426 20:54:45.475164 32721 solver.cpp:331] Iteration 1000, Testing net (#0)
I0426 20:54:45.546485 32728 data_layer.cpp:73] Restarting data prefetching from start.
I0426 20:54:45.548985 32721 solver.cpp:398]     Test net output #0: accuracy = 0.979
I0426 20:54:45.549005 32721 solver.cpp:398]     Test net output #1: loss = 0.0613817 (* 1 = 0.0613817 loss)
I0426 20:54:45.549010 32721 solver.cpp:316] Optimization Done.
I0426 20:54:45.549029 32721 caffe.cpp:259] Optimization Done.
